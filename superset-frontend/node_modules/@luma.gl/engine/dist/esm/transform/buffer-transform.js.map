{"version":3,"sources":["../../../src/transform/buffer-transform.js"],"names":["isWebGL2","Buffer","TransformFeedback","assert","BufferTransform","constructor","gl","props","currentIndex","feedbackMap","varyings","bindings","resources","_initialize","Object","seal","setupResources","opts","binding","_setupTransformFeedback","updateModelProps","length","assign","getDrawOptions","sourceBuffers","transformFeedback","attributes","swap","_getNextIndex","update","_setupBuffers","getBuffer","varyingName","feedbackBuffers","bufferOrParams","buffer","getData","options","delete","name","keys","_getFeedbackBuffers","sourceName","feedbackName","bufferName","bufferOrRef","sourceBuffer","byteLength","usage","accessor","_createNewBuffer","_updateBindings","model","program","buffers","_updateBinding","_swapBuffers","nextIndex","setBuffers","srcName","dstName"],"mappings":"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","sourcesContent":["import {isWebGL2} from '@luma.gl/gltools';\nimport {Buffer, TransformFeedback} from '@luma.gl/webgl';\nimport {assert} from '@luma.gl/webgl';\n\nexport default class BufferTransform {\n  constructor(gl, props = {}) {\n    this.gl = gl;\n    this.currentIndex = 0;\n    this.feedbackMap = {};\n    this.varyings = null; // varyings array\n    this.bindings = []; // each element is an object : {sourceBuffers, feedbackBuffers, transformFeedback}\n\n    this.resources = {}; // resources to be deleted\n\n    this._initialize(props);\n    Object.seal(this);\n  }\n\n  setupResources(opts) {\n    for (const binding of this.bindings) {\n      this._setupTransformFeedback(binding, opts);\n    }\n  }\n\n  updateModelProps(props = {}) {\n    const {varyings} = this;\n    if (varyings.length > 0) {\n      props = Object.assign({}, props, {varyings});\n    }\n    return props;\n  }\n\n  getDrawOptions(opts = {}) {\n    const binding = this.bindings[this.currentIndex];\n    const {sourceBuffers, transformFeedback} = binding;\n    const attributes = Object.assign({}, sourceBuffers, opts.attributes);\n\n    return {attributes, transformFeedback};\n  }\n\n  swap() {\n    if (this.feedbackMap) {\n      this.currentIndex = this._getNextIndex();\n      return true;\n    }\n    return false;\n  }\n\n  // update source and/or feedbackBuffers\n  update(opts = {}) {\n    this._setupBuffers(opts);\n  }\n\n  // returns current feedbackBuffer of given name\n  getBuffer(varyingName) {\n    const {feedbackBuffers} = this.bindings[this.currentIndex];\n    const bufferOrParams = varyingName ? feedbackBuffers[varyingName] : null;\n    if (!bufferOrParams) {\n      return null;\n    }\n    return bufferOrParams instanceof Buffer ? bufferOrParams : bufferOrParams.buffer;\n  }\n\n  getData(options = {}) {\n    const {varyingName} = options;\n    const buffer = this.getBuffer(varyingName);\n    if (buffer) {\n      return buffer.getData();\n    }\n    return null;\n  }\n\n  // Delete owned resources.\n  delete() {\n    for (const name in this.resources) {\n      this.resources[name].delete();\n    }\n  }\n\n  // Private\n\n  _initialize(props = {}) {\n    this._setupBuffers(props);\n    this.varyings = props.varyings || Object.keys(this.bindings[this.currentIndex].feedbackBuffers);\n    if (this.varyings.length > 0) {\n      // if writting to buffers make sure it is WebGL2\n      assert(isWebGL2(this.gl));\n    }\n  }\n\n  // auto create feedback buffers if requested\n  _getFeedbackBuffers(props) {\n    const {sourceBuffers = {}} = props;\n    const feedbackBuffers = {};\n    if (this.bindings[this.currentIndex]) {\n      // this gurantees a partial feedback buffer set doesn't update\n      // previously set buffers during auto creation mode.\n      Object.assign(feedbackBuffers, this.bindings[this.currentIndex].feedbackBuffers);\n    }\n    if (this.feedbackMap) {\n      // feedbackMap is defined as sourceBuffer as key and feedbackBuffer name as object\n      for (const sourceName in this.feedbackMap) {\n        const feedbackName = this.feedbackMap[sourceName];\n        if (sourceName in sourceBuffers) {\n          feedbackBuffers[feedbackName] = sourceName;\n        }\n      }\n    }\n    Object.assign(feedbackBuffers, props.feedbackBuffers);\n    for (const bufferName in feedbackBuffers) {\n      const bufferOrRef = feedbackBuffers[bufferName];\n      if (typeof bufferOrRef === 'string') {\n        // Create new buffer with same layout and settings as source buffer\n        const sourceBuffer = sourceBuffers[bufferOrRef];\n        const {byteLength, usage, accessor} = sourceBuffer;\n        feedbackBuffers[bufferName] = this._createNewBuffer(bufferName, {\n          byteLength,\n          usage,\n          accessor\n        });\n      }\n    }\n\n    return feedbackBuffers;\n  }\n\n  _setupBuffers(props = {}) {\n    const {sourceBuffers = null} = props;\n    Object.assign(this.feedbackMap, props.feedbackMap);\n    const feedbackBuffers = this._getFeedbackBuffers(props);\n    this._updateBindings({sourceBuffers, feedbackBuffers});\n  }\n\n  _setupTransformFeedback(binding, {model}) {\n    const {program} = model;\n    binding.transformFeedback = new TransformFeedback(this.gl, {\n      program,\n      buffers: binding.feedbackBuffers\n    });\n  }\n\n  _updateBindings(opts) {\n    this.bindings[this.currentIndex] = this._updateBinding(this.bindings[this.currentIndex], opts);\n    if (this.feedbackMap) {\n      const {sourceBuffers, feedbackBuffers} = this._swapBuffers(this.bindings[this.currentIndex]);\n      const nextIndex = this._getNextIndex();\n      this.bindings[nextIndex] = this._updateBinding(this.bindings[nextIndex], {\n        sourceBuffers,\n        feedbackBuffers\n      });\n    }\n  }\n\n  _updateBinding(binding, opts) {\n    if (!binding) {\n      return {\n        sourceBuffers: Object.assign({}, opts.sourceBuffers),\n        feedbackBuffers: Object.assign({}, opts.feedbackBuffers)\n      };\n    }\n    Object.assign(binding.sourceBuffers, opts.sourceBuffers);\n    Object.assign(binding.feedbackBuffers, opts.feedbackBuffers);\n    if (binding.transformFeedback) {\n      binding.transformFeedback.setBuffers(binding.feedbackBuffers);\n    }\n    return binding;\n  }\n\n  _swapBuffers(opts) {\n    if (!this.feedbackMap) {\n      return null;\n    }\n    const sourceBuffers = Object.assign({}, opts.sourceBuffers);\n    const feedbackBuffers = Object.assign({}, opts.feedbackBuffers);\n    for (const srcName in this.feedbackMap) {\n      const dstName = this.feedbackMap[srcName];\n      sourceBuffers[srcName] = opts.feedbackBuffers[dstName];\n      feedbackBuffers[dstName] = opts.sourceBuffers[srcName];\n\n      // make sure the new destination buffer is a Buffer object\n      assert(feedbackBuffers[dstName] instanceof Buffer);\n    }\n    return {sourceBuffers, feedbackBuffers};\n  }\n\n  // Create a buffer and add to list of buffers to be deleted.\n  _createNewBuffer(name, opts) {\n    const buffer = new Buffer(this.gl, opts);\n    if (this.resources[name]) {\n      this.resources[name].delete();\n    }\n    this.resources[name] = buffer;\n    return buffer;\n  }\n\n  _getNextIndex() {\n    return (this.currentIndex + 1) % 2;\n  }\n}\n"],"file":"buffer-transform.js"}