{"version":3,"sources":["../../../src/lib/animation-loop.js"],"names":["isPage","document","statIdCounter","AnimationLoop","props","onCreateContext","opts","onAddHTML","onInitialize","onRender","onFinalize","onError","gl","glOptions","debug","createFramebuffer","autoResizeViewport","autoResizeDrawingBuffer","stats","lumaStats","get","useDevicePixels","log","deprecated","useDevicePixelRatio","needsRedraw","timeline","cpuTime","gpuTime","frameRate","_initialized","_running","_animationFrameId","_nextFramePromise","_resolveNextFrame","_cpuStartTime","setProps","start","bind","stop","_pageLoadPromise","_onMousemove","_onMouseleave","_setDisplay","reason","startPromise","_getPageLoadPromise","then","_createWebGLContext","_createFramebuffer","_startEventHandling","_initializeCallbackData","_updateCallbackData","_resizeCanvasDrawingBuffer","_resizeViewport","_gpuTimeQuery","Query","isSupported","animationProps","appContext","_addCallbackData","_startLoop","catch","isContextLost","_beginTimers","_setupFrame","_renderFrame","_clearNeedsRedraw","offScreen","commit","_endTimers","_finalizeCallbackData","setNeedsRedraw","Promise","resolve","waitForRender","canvas","toDataURL","id","defaultValue","element","getElementById","Number","value","removed","renderFrame","redraw","_requestAnimationFrame","reject","readyState","window","addEventListener","display","delete","animationLoop","renderFrameCallback","requestAnimationFrame","_resizeFramebuffer","framebuffer","startTime","Date","now","engineTime","tick","tock","time","_timeline","_loop","_animationLoop","_mousePosition","_getSizeAndAspect","width","height","aspect","update","Math","floor","getTime","_offScreen","Object","assign","OffscreenCanvas","Error","_createInfoDiv","wrapperDiv","createElement","body","appendChild","style","position","div","left","bottom","background","html","innerHTML","drawingBufferWidth","drawingBufferHeight","clientHeight","clientWidth","viewport","Framebuffer","resize","timeEnd","timeStart","isResultAvailable","isTimerDisjoint","addTime","getTimerMilliseconds","beginTimeElapsedQuery","end","e","offsetX","offsetY"],"mappings":"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","sourcesContent":["import {\n  isWebGL,\n  createGLContext,\n  instrumentGLContext,\n  resizeGLContext,\n  resetParameters\n} from '@luma.gl/gltools';\n\nimport {\n  requestAnimationFrame,\n  cancelAnimationFrame,\n  Query,\n  lumaStats,\n  // TODO - remove dependency on framebuffer (bundle size impact)\n  Framebuffer,\n  log,\n  assert\n} from '@luma.gl/webgl';\n\nimport {isBrowser} from 'probe.gl/env';\n\nconst isPage = isBrowser() && typeof document !== 'undefined';\n\nlet statIdCounter = 0;\n\nexport default class AnimationLoop {\n  /*\n   * @param {HTMLCanvasElement} canvas - if provided, width and height will be passed to context\n   */\n  constructor(props = {}) {\n    const {\n      onCreateContext = opts => createGLContext(opts),\n      onAddHTML = null,\n      onInitialize = () => {},\n      onRender = () => {},\n      onFinalize = () => {},\n      onError,\n\n      gl = null,\n      glOptions = {},\n      debug = false,\n\n      createFramebuffer = false,\n\n      // view parameters\n      autoResizeViewport = true,\n      autoResizeDrawingBuffer = true,\n      stats = lumaStats.get(`animation-loop-${statIdCounter++}`)\n    } = props;\n\n    let {useDevicePixels = true} = props;\n\n    if ('useDevicePixelRatio' in props) {\n      log.deprecated('useDevicePixelRatio', 'useDevicePixels')();\n      // @ts-ignore\n      useDevicePixels = props.useDevicePixelRatio;\n    }\n\n    this.props = {\n      onCreateContext,\n      onAddHTML,\n      onInitialize,\n      onRender,\n      onFinalize,\n      onError,\n\n      gl,\n      glOptions,\n      debug,\n      createFramebuffer\n    };\n\n    // state\n    this.gl = gl;\n    this.needsRedraw = null;\n    this.timeline = null;\n    this.stats = stats;\n    this.cpuTime = this.stats.get('CPU Time');\n    this.gpuTime = this.stats.get('GPU Time');\n    this.frameRate = this.stats.get('Frame Rate');\n\n    this._initialized = false;\n    this._running = false;\n    this._animationFrameId = null;\n    this._nextFramePromise = null;\n    this._resolveNextFrame = null;\n    this._cpuStartTime = 0;\n\n    this.setProps({\n      autoResizeViewport,\n      autoResizeDrawingBuffer,\n      useDevicePixels\n    });\n\n    // Bind methods\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n\n    this._pageLoadPromise = null;\n\n    this._onMousemove = this._onMousemove.bind(this);\n    this._onMouseleave = this._onMouseleave.bind(this);\n  }\n\n  delete() {\n    this.stop();\n    this._setDisplay(null);\n  }\n\n  setNeedsRedraw(reason) {\n    assert(typeof reason === 'string');\n    this.needsRedraw = this.needsRedraw || reason;\n    return this;\n  }\n\n  setProps(props) {\n    if ('autoResizeViewport' in props) {\n      this.autoResizeViewport = props.autoResizeViewport;\n    }\n    if ('autoResizeDrawingBuffer' in props) {\n      this.autoResizeDrawingBuffer = props.autoResizeDrawingBuffer;\n    }\n    if ('useDevicePixels' in props) {\n      this.useDevicePixels = props.useDevicePixels;\n    }\n    return this;\n  }\n\n  // Starts a render loop if not already running\n  // @param {Object} context - contains frame specific info (E.g. tick, width, height, etc)\n  start(opts = {}) {\n    if (this._running) {\n      return this;\n    }\n    this._running = true;\n    // console.debug(`Starting ${this.constructor.name}`);\n    // Wait for start promise before rendering frame\n    const startPromise = this._getPageLoadPromise()\n      .then(() => {\n        if (!this._running || this._initialized) {\n          return null;\n        }\n\n        // Create the WebGL context\n        this._createWebGLContext(opts);\n        this._createFramebuffer();\n        this._startEventHandling();\n\n        // Initialize the callback data\n        this._initializeCallbackData();\n        this._updateCallbackData();\n\n        // Default viewport setup, in case onInitialize wants to render\n        this._resizeCanvasDrawingBuffer();\n        this._resizeViewport();\n\n        this._gpuTimeQuery = Query.isSupported(this.gl, ['timers']) ? new Query(this.gl) : null;\n\n        this._initialized = true;\n\n        // Note: onIntialize can return a promise (in case it needs to load resources)\n        return this.onInitialize(this.animationProps);\n      })\n      .then(appContext => {\n        if (this._running) {\n          this._addCallbackData(appContext || {});\n          if (appContext !== false) {\n            this._startLoop();\n          }\n        }\n      });\n\n    if (this.props.onError) {\n      startPromise.catch(this.props.onError);\n    }\n\n    return this;\n  }\n\n  // Redraw now\n  redraw() {\n    if (this.isContextLost()) {\n      return this;\n    }\n\n    this._beginTimers();\n\n    this._setupFrame();\n    this._updateCallbackData();\n\n    this._renderFrame(this.animationProps);\n\n    // clear needsRedraw flag\n    this._clearNeedsRedraw();\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/commit\n    // Chrome's offscreen canvas does not require gl.commit\n    if (this.offScreen && this.gl.commit) {\n      this.gl.commit();\n    }\n\n    if (this._resolveNextFrame) {\n      this._resolveNextFrame(this);\n      this._nextFramePromise = null;\n      this._resolveNextFrame = null;\n    }\n\n    this._endTimers();\n\n    return this;\n  }\n\n  // Stops a render loop if already running, finalizing\n  stop() {\n    // console.debug(`Stopping ${this.constructor.name}`);\n    if (this._running) {\n      this._finalizeCallbackData();\n      cancelAnimationFrame(this._animationFrameId);\n      this._nextFramePromise = null;\n      this._resolveNextFrame = null;\n      this._animationFrameId = null;\n      this._running = false;\n    }\n    return this;\n  }\n\n  attachTimeline(timeline) {\n    this.timeline = timeline;\n\n    return this.timeline;\n  }\n\n  detachTimeline() {\n    this.timeline = null;\n  }\n\n  waitForRender() {\n    this.setNeedsRedraw('waitForRender');\n\n    if (!this._nextFramePromise) {\n      this._nextFramePromise = new Promise(resolve => {\n        this._resolveNextFrame = resolve;\n      });\n    }\n    return this._nextFramePromise;\n  }\n\n  async toDataURL() {\n    this.setNeedsRedraw('toDataURL');\n\n    await this.waitForRender();\n\n    return this.gl.canvas.toDataURL();\n  }\n\n  isContextLost() {\n    return this.gl.isContextLost();\n  }\n\n  onCreateContext(...args) {\n    return this.props.onCreateContext(...args);\n  }\n\n  onInitialize(...args) {\n    return this.props.onInitialize(...args);\n  }\n\n  onRender(...args) {\n    return this.props.onRender(...args);\n  }\n\n  onFinalize(...args) {\n    return this.props.onFinalize(...args);\n  }\n\n  // DEPRECATED/REMOVED METHODS\n\n  getHTMLControlValue(id, defaultValue = 1) {\n    const element = document.getElementById(id);\n    // @ts-ignore Not all html elements have value\n    return element ? Number(element.value) : defaultValue;\n  }\n\n  // Update parameters\n  setViewParameters() {\n    log.removed('AnimationLoop.setViewParameters', 'AnimationLoop.setProps')();\n    return this;\n  }\n\n  // PRIVATE METHODS\n\n  _startLoop() {\n    const renderFrame = () => {\n      if (!this._running) {\n        return;\n      }\n      this.redraw();\n      this._animationFrameId = this._requestAnimationFrame(renderFrame);\n    };\n\n    // cancel any pending renders to ensure only one loop can ever run\n    cancelAnimationFrame(this._animationFrameId);\n    this._animationFrameId = this._requestAnimationFrame(renderFrame);\n  }\n\n  // PRIVATE METHODS\n\n  _getPageLoadPromise() {\n    if (!this._pageLoadPromise) {\n      this._pageLoadPromise = isPage\n        ? new Promise((resolve, reject) => {\n            if (isPage && document.readyState === 'complete') {\n              resolve(document);\n              return;\n            }\n            window.addEventListener('load', () => {\n              resolve(document);\n            });\n          })\n        : Promise.resolve({});\n    }\n    return this._pageLoadPromise;\n  }\n\n  _setDisplay(display) {\n    if (this.display) {\n      this.display.delete();\n      this.display.animationLoop = null;\n    }\n\n    // store animation loop on the display\n    if (display) {\n      display.animationLoop = this;\n    }\n\n    this.display = display;\n  }\n\n  _requestAnimationFrame(renderFrameCallback) {\n    // E.g. VR display has a separate animation frame to sync with headset\n    if (this.display && this.display.requestAnimationFrame(renderFrameCallback)) {\n      return;\n    }\n\n    requestAnimationFrame(renderFrameCallback);\n  }\n\n  // Called on each frame, can be overridden to call onRender multiple times\n  // to support e.g. stereoscopic rendering\n  _renderFrame(...args) {\n    // Allow e.g. VR display to render multiple frames.\n    if (this.display) {\n      this.display._renderFrame(...args);\n      return;\n    }\n\n    // call callback\n    this.onRender(...args);\n    // end callback\n  }\n\n  _clearNeedsRedraw() {\n    this.needsRedraw = null;\n  }\n\n  _setupFrame() {\n    this._resizeCanvasDrawingBuffer();\n    this._resizeViewport();\n    this._resizeFramebuffer();\n  }\n\n  // Initialize the  object that will be passed to app callbacks\n  _initializeCallbackData() {\n    this.animationProps = {\n      gl: this.gl,\n\n      stop: this.stop,\n      canvas: this.gl.canvas,\n      framebuffer: this.framebuffer,\n\n      // Initial values\n      useDevicePixels: this.useDevicePixels,\n      needsRedraw: null,\n\n      // Animation props\n      startTime: Date.now(),\n      engineTime: 0,\n      tick: 0,\n      tock: 0,\n\n      // Timeline time for back compatibility\n      time: 0,\n\n      // Experimental\n      _timeline: this.timeline,\n      _loop: this,\n      _animationLoop: this,\n      _mousePosition: null // Event props\n    };\n  }\n\n  // Update the context object that will be passed to app callbacks\n  _updateCallbackData() {\n    const {width, height, aspect} = this._getSizeAndAspect();\n    if (width !== this.animationProps.width || height !== this.animationProps.height) {\n      this.setNeedsRedraw('drawing buffer resized');\n    }\n    if (aspect !== this.animationProps.aspect) {\n      this.setNeedsRedraw('drawing buffer aspect changed');\n    }\n\n    this.animationProps.width = width;\n    this.animationProps.height = height;\n    this.animationProps.aspect = aspect;\n\n    this.animationProps.needsRedraw = this.needsRedraw;\n\n    // Update time properties\n    this.animationProps.engineTime = Date.now() - this.animationProps.startTime;\n\n    if (this.timeline) {\n      this.timeline.update(this.animationProps.engineTime);\n    }\n\n    this.animationProps.tick = Math.floor((this.animationProps.time / 1000) * 60);\n    this.animationProps.tock++;\n\n    // For back compatibility\n    this.animationProps.time = this.timeline\n      ? this.timeline.getTime()\n      : this.animationProps.engineTime;\n\n    // experimental\n    this.animationProps._offScreen = this.offScreen;\n  }\n\n  _finalizeCallbackData() {\n    // call callback\n    this.onFinalize(this.animationProps);\n    // end callback\n  }\n\n  // Add application's data to the app context object\n  _addCallbackData(appContext) {\n    if (typeof appContext === 'object' && appContext !== null) {\n      this.animationProps = Object.assign({}, this.animationProps, appContext);\n    }\n  }\n\n  // Either uses supplied or existing context, or calls provided callback to create one\n  _createWebGLContext(opts) {\n    this.offScreen =\n      opts.canvas &&\n      typeof OffscreenCanvas !== 'undefined' &&\n      opts.canvas instanceof OffscreenCanvas;\n\n    // Create the WebGL context if necessary\n    opts = Object.assign({}, opts, this.props.glOptions);\n    this.gl = this.props.gl ? instrumentGLContext(this.props.gl, opts) : this.onCreateContext(opts);\n\n    if (!isWebGL(this.gl)) {\n      throw new Error('AnimationLoop.onCreateContext - illegal context returned');\n    }\n\n    // Reset the WebGL context.\n    resetParameters(this.gl);\n\n    this._createInfoDiv();\n  }\n\n  _createInfoDiv() {\n    if (this.gl.canvas && this.props.onAddHTML) {\n      const wrapperDiv = document.createElement('div');\n      document.body.appendChild(wrapperDiv);\n      wrapperDiv.style.position = 'relative';\n      const div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '10px';\n      div.style.bottom = '10px';\n      div.style.width = '300px';\n      div.style.background = 'white';\n      wrapperDiv.appendChild(this.gl.canvas);\n      wrapperDiv.appendChild(div);\n      const html = this.props.onAddHTML(div);\n      if (html) {\n        div.innerHTML = html;\n      }\n    }\n  }\n\n  _getSizeAndAspect() {\n    // https://webglfundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html\n    const width = this.gl.drawingBufferWidth;\n    const height = this.gl.drawingBufferHeight;\n\n    // https://webglfundamentals.org/webgl/lessons/webgl-anti-patterns.html\n    let aspect = 1;\n    const {canvas} = this.gl;\n\n    if (canvas && canvas.clientHeight) {\n      aspect = canvas.clientWidth / canvas.clientHeight;\n    } else if (width > 0 && height > 0) {\n      aspect = width / height;\n    }\n\n    return {width, height, aspect};\n  }\n\n  // Default viewport setup\n  _resizeViewport() {\n    if (this.autoResizeViewport) {\n      this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\n    }\n  }\n\n  // Resize the render buffer of the canvas to match canvas client size\n  // Optionally multiplying with devicePixel ratio\n  _resizeCanvasDrawingBuffer() {\n    if (this.autoResizeDrawingBuffer) {\n      resizeGLContext(this.gl, {useDevicePixels: this.useDevicePixels});\n    }\n  }\n\n  // TBD - deprecated?\n  _createFramebuffer() {\n    // Setup default framebuffer\n    if (this.props.createFramebuffer) {\n      this.framebuffer = new Framebuffer(this.gl);\n    }\n  }\n\n  _resizeFramebuffer() {\n    if (this.framebuffer) {\n      this.framebuffer.resize({\n        width: this.gl.drawingBufferWidth,\n        height: this.gl.drawingBufferHeight\n      });\n    }\n  }\n\n  _beginTimers() {\n    this.frameRate.timeEnd();\n    this.frameRate.timeStart();\n\n    // Check if timer for last frame has completed.\n    // GPU timer results are never available in the same\n    // frame they are captured.\n    if (\n      this._gpuTimeQuery &&\n      this._gpuTimeQuery.isResultAvailable() &&\n      !this._gpuTimeQuery.isTimerDisjoint()\n    ) {\n      this.stats.get('GPU Time').addTime(this._gpuTimeQuery.getTimerMilliseconds());\n    }\n\n    if (this._gpuTimeQuery) {\n      // GPU time query start\n      this._gpuTimeQuery.beginTimeElapsedQuery();\n    }\n\n    this.cpuTime.timeStart();\n  }\n\n  _endTimers() {\n    this.cpuTime.timeEnd();\n\n    if (this._gpuTimeQuery) {\n      // GPU time query end. Results will be available on next frame.\n      this._gpuTimeQuery.end();\n    }\n  }\n\n  // Event handling\n\n  _startEventHandling() {\n    const {canvas} = this.gl;\n    if (canvas) {\n      canvas.addEventListener('mousemove', this._onMousemove);\n      canvas.addEventListener('mouseleave', this._onMouseleave);\n    }\n  }\n\n  _onMousemove(e) {\n    this.animationProps._mousePosition = [e.offsetX, e.offsetY];\n  }\n  _onMouseleave(e) {\n    this.animationProps._mousePosition = null;\n  }\n}\n"],"file":"animation-loop.js"}