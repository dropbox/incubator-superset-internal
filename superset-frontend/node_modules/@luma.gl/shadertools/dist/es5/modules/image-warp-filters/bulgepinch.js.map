{"version":3,"sources":["../../../../src/modules/image-warp-filters/bulgepinch.js"],"names":["fs","uniforms","center","radius","value","min","softMax","strength","max","bulgePinch","name","dependencies","warp","passes","sampler"],"mappings":";;;;;;;AAEA;;AAEA,IAAMA,EAAE,6vBAAR;AA4BA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,CADO;AAEfC,EAAAA,MAAM,EAAE;AAACC,IAAAA,KAAK,EAAE,GAAR;AAAaC,IAAAA,GAAG,EAAE,CAAlB;AAAqBC,IAAAA,OAAO,EAAE;AAA9B,GAFO;AAGfC,EAAAA,QAAQ,EAAE;AAACH,IAAAA,KAAK,EAAE,GAAR;AAAaC,IAAAA,GAAG,EAAE,CAAC,CAAnB;AAAsBG,IAAAA,GAAG,EAAE;AAA3B;AAHK,CAAjB;AAOO,IAAMC,UAAU,GAAG;AACxBC,EAAAA,IAAI,EAAE,YADkB;AAExBV,EAAAA,EAAE,EAAFA,EAFwB;AAGxBC,EAAAA,QAAQ,EAARA,QAHwB;AAIxBU,EAAAA,YAAY,EAAE,CAACC,UAAD,CAJU;AAKxBC,EAAAA,MAAM,EAAE,CAAC;AAACC,IAAAA,OAAO,EAAE;AAAV,GAAD;AALgB,CAAnB","sourcesContent":["/** @typedef {import('../../types').ShaderPass} ShaderPass */\n\nimport {warp} from './warp';\n\nconst fs = `\\\nuniform float radius;\nuniform float strength;\nuniform vec2 center;\n\nvec2 bulgePinch_warp(vec2 coord, vec2 texCenter) {\n  coord -= texCenter;\n  float distance = length(coord);\n  if (distance < radius) {\n    float percent = distance / radius;\n    if (strength > 0.0) {\n      coord *= mix(1.0, smoothstep(0.0, radius / distance, percent), strength * 0.75);\n    } else {\n      coord *= mix(1.0, pow(percent, 1.0 + strength * 0.75) * radius / distance, 1.0 - percent);\n    }\n  }\n  coord += texCenter;\n  return coord;\n}\n\nvec4 bulgePinch_sampleColor(sampler2D texture, vec2 texSize, vec2 texCoord) {\n  vec2 coord = texCoord * texSize;\n  coord = bulgePinch_warp(coord, center * texSize);\n\n  return warp_sampleColor(texture, texSize, coord);\n}\n`;\n\nconst uniforms = {\n  center: [0.5, 0.5],\n  radius: {value: 200, min: 1, softMax: 600},\n  strength: {value: 0.5, min: -1, max: 1}\n};\n\n/** @type {ShaderPass} */\nexport const bulgePinch = {\n  name: 'bulgePinch',\n  fs,\n  uniforms,\n  dependencies: [warp],\n  passes: [{sampler: true}]\n};\n"],"file":"bulgepinch.js"}