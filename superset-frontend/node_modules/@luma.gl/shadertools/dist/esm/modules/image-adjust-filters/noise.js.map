{"version":3,"sources":["../../../../src/modules/image-adjust-filters/noise.js"],"names":["fs","uniforms","amount","value","min","max","noise","name","passes","filter"],"mappings":"AAEA,MAAMA,EAAE,2aAAR;AAoBA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE;AAACC,IAAAA,KAAK,EAAE,GAAR;AAAaC,IAAAA,GAAG,EAAE,CAAlB;AAAqBC,IAAAA,GAAG,EAAE;AAA1B;AADO,CAAjB;AAKA,OAAO,MAAMC,KAAK,GAAG;AACnBC,EAAAA,IAAI,EAAE,OADa;AAEnBN,EAAAA,QAFmB;AAGnBD,EAAAA,EAHmB;AAInBQ,EAAAA,MAAM,EAAE,CAAC;AAACC,IAAAA,MAAM,EAAE;AAAT,GAAD;AAJW,CAAd","sourcesContent":["/** @typedef {import('../../types').ShaderPass} ShaderPass */\n\nconst fs = `\\\nuniform float amount;\n\nfloat rand(vec2 co) {\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec4 noise_filterColor(vec4 color, vec2 texCoord) {\n  float diff = (rand(texCoord) - 0.5) * amount;\n  color.r += diff;\n  color.g += diff;\n  color.b += diff;\n  return color;\n}\n\nvec4 noise_filterColor(vec4 color, vec2 texSize, vec2 texCoord) {\n  return noise_filterColor(color, texCoord);\n}\n`;\n\nconst uniforms = {\n  amount: {value: 0.5, min: 0, max: 1}\n};\n\n/** @type {ShaderPass} */\nexport const noise = {\n  name: 'noise',\n  uniforms,\n  fs,\n  passes: [{filter: true}]\n};\n"],"file":"noise.js"}