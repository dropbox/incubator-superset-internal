{"version":3,"sources":["../../../../src/modules/image-warp-filters/swirl.js"],"names":["warp","fs","uniforms","center","radius","value","min","softMax","angle","softMin","swirl","name","dependencies","passes","sampler"],"mappings":"AACA,SAAQA,IAAR,QAAmB,QAAnB;AAEA,MAAMC,EAAE,8sBAAR;AA8BA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,CADO;AAEfC,EAAAA,MAAM,EAAE;AAACC,IAAAA,KAAK,EAAE,GAAR;AAAaC,IAAAA,GAAG,EAAE,CAAlB;AAAqBC,IAAAA,OAAO,EAAE;AAA9B,GAFO;AAGfC,EAAAA,KAAK,EAAE;AAACH,IAAAA,KAAK,EAAE,CAAR;AAAWI,IAAAA,OAAO,EAAE,CAAC,EAArB;AAAyBF,IAAAA,OAAO,EAAE;AAAlC;AAHQ,CAAjB;AAOA,OAAO,MAAMG,KAAK,GAAG;AACnBC,EAAAA,IAAI,EAAE,OADa;AAEnBV,EAAAA,EAFmB;AAGnBC,EAAAA,QAHmB;AAInBU,EAAAA,YAAY,EAAE,CAACZ,IAAD,CAJK;AAKnBa,EAAAA,MAAM,EAAE,CAAC;AAACC,IAAAA,OAAO,EAAE;AAAV,GAAD;AALW,CAAd","sourcesContent":["/** @typedef {import('../../types').ShaderPass} ShaderPass */\nimport {warp} from './warp';\n\nconst fs = `\\\nuniform float radius;\nuniform float angle;\nuniform vec2 center;\n\nvec2 swirl_warp(vec2 coord, vec2 texCenter) {\n  coord -= texCenter;\n  float distance = length(coord);\n  if (distance < radius) {\n    float percent = (radius - distance) / radius;\n    float theta = percent * percent * angle;\n    float s = sin(theta);\n    float c = cos(theta);\n    coord = vec2(\n      coord.x * c - coord.y * s,\n      coord.x * s + coord.y * c\n    );\n  }\n  coord += texCenter;\n  return coord;\n}\n\nvec4 swirl_sampleColor(sampler2D texture, vec2 texSize, vec2 texCoord) {\n  vec2 coord = texCoord * texSize;\n  coord = swirl_warp(coord, center * texSize);\n\n  return warp_sampleColor(texture, texSize, coord);\n}\n`;\n\nconst uniforms = {\n  center: [0.5, 0.5],\n  radius: {value: 200, min: 1, softMax: 600},\n  angle: {value: 3, softMin: -25, softMax: 25}\n};\n\n/** @type {ShaderPass} */\nexport const swirl = {\n  name: 'swirl',\n  fs,\n  uniforms,\n  dependencies: [warp],\n  passes: [{sampler: true}]\n};\n"],"file":"swirl.js"}