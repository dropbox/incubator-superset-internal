{"version":3,"sources":["../../../../src/modules/phong-lighting/phong-lighting.js"],"names":["lights","lightingShader","INITIAL_MODULE_OPTIONS","getMaterialUniforms","material","ambient","diffuse","shininess","specularColor","lighting_uAmbient","lighting_uDiffuse","lighting_uShininess","lighting_uSpecularColor","map","x","getUniforms","opts","lighting_uEnabled","gouraudLighting","name","dependencies","vs","defines","LIGHTING_VERTEX","phongLighting","fs","LIGHTING_FRAGMENT"],"mappings":"AAEA,SAAQA,MAAR,QAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,MAAMC,sBAAsB,GAAG,EAA/B;;AAEA,SAASC,mBAAT,CAA6BC,QAA7B,EAAuC;AACrC,QAAM;AAACC,IAAAA,OAAO,GAAG,IAAX;AAAiBC,IAAAA,OAAO,GAAG,GAA3B;AAAgCC,IAAAA,SAAS,GAAG,EAA5C;AAAgDC,IAAAA,aAAa,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT;AAAhE,MAAgFJ,QAAtF;AAEA,SAAO;AACLK,IAAAA,iBAAiB,EAAEJ,OADd;AAELK,IAAAA,iBAAiB,EAAEJ,OAFd;AAGLK,IAAAA,mBAAmB,EAAEJ,SAHhB;AAILK,IAAAA,uBAAuB,EAAEJ,aAAa,CAACK,GAAd,CAAkBC,CAAC,IAAIA,CAAC,GAAG,GAA3B;AAJpB,GAAP;AAMD;;AAED,SAASC,WAAT,CAAqBC,IAAI,GAAGd,sBAA5B,EAAoD;AAClD,MAAI,EAAE,cAAcc,IAAhB,CAAJ,EAA2B;AACzB,WAAO,EAAP;AACD;;AAED,QAAM;AAACZ,IAAAA;AAAD,MAAaY,IAAnB;;AAEA,MAAI,CAACZ,QAAL,EAAe;AACb,WAAO;AAACa,MAAAA,iBAAiB,EAAE;AAApB,KAAP;AACD;;AAED,SAAOd,mBAAmB,CAACC,QAAD,CAA1B;AACD;;AAGD,OAAO,MAAMc,eAAe,GAAG;AAC7BC,EAAAA,IAAI,EAAE,kBADuB;AAE7BC,EAAAA,YAAY,EAAE,CAACpB,MAAD,CAFe;AAG7BqB,EAAAA,EAAE,EAAEpB,cAHyB;AAI7BqB,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,EAAE;AADV,GAJoB;AAO7BR,EAAAA;AAP6B,CAAxB;AAWP,OAAO,MAAMS,aAAa,GAAG;AAC3BL,EAAAA,IAAI,EAAE,gBADqB;AAE3BC,EAAAA,YAAY,EAAE,CAACpB,MAAD,CAFa;AAG3ByB,EAAAA,EAAE,EAAExB,cAHuB;AAI3BqB,EAAAA,OAAO,EAAE;AACPI,IAAAA,iBAAiB,EAAE;AADZ,GAJkB;AAO3BX,EAAAA;AAP2B,CAAtB","sourcesContent":["/** @typedef {import('../../types').ShaderModule} ShaderModule */\n\nimport {lights} from '../lights/lights';\nimport lightingShader from './phong-lighting.glsl';\n\nconst INITIAL_MODULE_OPTIONS = {};\n\nfunction getMaterialUniforms(material) {\n  const {ambient = 0.35, diffuse = 0.6, shininess = 32, specularColor = [30, 30, 30]} = material;\n\n  return {\n    lighting_uAmbient: ambient,\n    lighting_uDiffuse: diffuse,\n    lighting_uShininess: shininess,\n    lighting_uSpecularColor: specularColor.map(x => x / 255)\n  };\n}\n\nfunction getUniforms(opts = INITIAL_MODULE_OPTIONS) {\n  if (!('material' in opts)) {\n    return {};\n  }\n\n  const {material} = opts;\n\n  if (!material) {\n    return {lighting_uEnabled: false};\n  }\n\n  return getMaterialUniforms(material);\n}\n\n/** @type {ShaderModule} */\nexport const gouraudLighting = {\n  name: 'gouraud-lighting',\n  dependencies: [lights],\n  vs: lightingShader,\n  defines: {\n    LIGHTING_VERTEX: 1\n  },\n  getUniforms\n};\n\n/** @type {ShaderModule} */\nexport const phongLighting = {\n  name: 'phong-lighting',\n  dependencies: [lights],\n  fs: lightingShader,\n  defines: {\n    LIGHTING_FRAGMENT: 1\n  },\n  getUniforms\n};\n"],"file":"phong-lighting.js"}