{"version":3,"sources":["../../../../src/modules/image-fun-filters/magnify.js"],"names":["fs","uniforms","screenXY","radiusPixels","zoom","borderWidthPixels","borderColor","magnify","name","passes","sampler"],"mappings":"AAAA,MAAMA,EAAE,yiBAAR;AAqBA,MAAMC,QAAQ,GAAG;AAEfC,EAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFK;AAGfC,EAAAA,YAAY,EAAE,GAHC;AAIfC,EAAAA,IAAI,EAAE,GAJS;AAKfC,EAAAA,iBAAiB,EAAE,GALJ;AAMfC,EAAAA,WAAW,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB;AANE,CAAjB;AASA,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,IAAI,EAAE,SADe;AAErBP,EAAAA,QAFqB;AAGrBD,EAAAA,EAHqB;AAIrBS,EAAAA,MAAM,EAAE,CAAC;AAACC,IAAAA,OAAO,EAAE;AAAV,GAAD;AAJa,CAAhB","sourcesContent":["const fs = `\\\nuniform vec2 screenXY;\nuniform float radiusPixels;\nuniform float zoom;\nuniform float borderWidthPixels;\nuniform vec4 borderColor;\n\nvec4 magnify_sampleColor(sampler2D texture, vec2 texSize, vec2 texCoord) {\n  vec2 pos = vec2(screenXY.x, 1.0 - screenXY.y);\n  float dist = distance(texCoord * texSize, pos * texSize);\n  if (dist < radiusPixels) {\n    return texture2D(texture, (texCoord - pos) / zoom + pos);\n  }\n\n  if (dist <= radiusPixels + borderWidthPixels) {\n    return borderColor;\n  }\n  return texture2D(texture, texCoord);\n}\n`;\n\nconst uniforms = {\n  // range 0 to 1\n  screenXY: [0, 0],\n  radiusPixels: 200,\n  zoom: 2.0,\n  borderWidthPixels: 0.0,\n  borderColor: [255, 255, 255, 255]\n};\n\nexport const magnify = {\n  name: 'magnify',\n  uniforms,\n  fs,\n  passes: [{sampler: true}]\n};\n"],"file":"magnify.js"}