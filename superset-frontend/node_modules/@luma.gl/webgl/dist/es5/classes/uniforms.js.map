{"version":3,"sources":["../../../src/classes/uniforms.js"],"names":["UNIFORM_SETTERS","getArraySetter","bind","toFloatArray","setVectorUniform","toIntArray","setMatrixUniform","getSamplerSetter","toUIntArray","FLOAT_ARRAY","INT_ARRAY","UINT_ARRAY","array1","toTypedArray","value","uniformLength","Type","cache","Number","isFinite","length","log","warn","result","i","Float32Array","Int32Array","Uint32Array","getUniformSetter","gl","location","info","setter","type","Error","parseUniformName","name","isArray","UNIFORM_NAME_REGEXP","matches","match","Boolean","checkUniformValues","uniforms","source","uniformMap","uniformName","shouldCheck","checkUniformValue","console","error","Array","ArrayBuffer","isView","checkUniformArray","Texture","Renderbuffer","Framebuffer","texture","copyUniform","key","dest","len","slice","checkLength","Math","min","update","uniform1i","functionName","toArray","size","uniformSetter","cacheLength","arrayValue","set"],"mappings":"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","sourcesContent":["/** @typedef {import('./uniforms')} types */\n\nimport GL from '@luma.gl/constants';\nimport {log} from '@luma.gl/gltools';\n\nimport Framebuffer from './framebuffer';\nimport Renderbuffer from './renderbuffer';\nimport Texture from './texture';\nimport {assert} from '../utils';\n\nconst UNIFORM_SETTERS = {\n  // WEBGL1\n\n  /* eslint-disable max-len */\n  [GL.FLOAT]: getArraySetter.bind(null, 'uniform1fv', toFloatArray, 1, setVectorUniform),\n  [GL.FLOAT_VEC2]: getArraySetter.bind(null, 'uniform2fv', toFloatArray, 2, setVectorUniform),\n  [GL.FLOAT_VEC3]: getArraySetter.bind(null, 'uniform3fv', toFloatArray, 3, setVectorUniform),\n  [GL.FLOAT_VEC4]: getArraySetter.bind(null, 'uniform4fv', toFloatArray, 4, setVectorUniform),\n\n  [GL.INT]: getArraySetter.bind(null, 'uniform1iv', toIntArray, 1, setVectorUniform),\n  [GL.INT_VEC2]: getArraySetter.bind(null, 'uniform2iv', toIntArray, 2, setVectorUniform),\n  [GL.INT_VEC3]: getArraySetter.bind(null, 'uniform3iv', toIntArray, 3, setVectorUniform),\n  [GL.INT_VEC4]: getArraySetter.bind(null, 'uniform4iv', toIntArray, 4, setVectorUniform),\n\n  [GL.BOOL]: getArraySetter.bind(null, 'uniform1iv', toIntArray, 1, setVectorUniform),\n  [GL.BOOL_VEC2]: getArraySetter.bind(null, 'uniform2iv', toIntArray, 2, setVectorUniform),\n  [GL.BOOL_VEC3]: getArraySetter.bind(null, 'uniform3iv', toIntArray, 3, setVectorUniform),\n  [GL.BOOL_VEC4]: getArraySetter.bind(null, 'uniform4iv', toIntArray, 4, setVectorUniform),\n\n  // uniformMatrix(false): don't transpose the matrix\n  [GL.FLOAT_MAT2]: getArraySetter.bind(null, 'uniformMatrix2fv', toFloatArray, 4, setMatrixUniform),\n  [GL.FLOAT_MAT3]: getArraySetter.bind(null, 'uniformMatrix3fv', toFloatArray, 9, setMatrixUniform),\n  [GL.FLOAT_MAT4]: getArraySetter.bind(\n    null,\n    'uniformMatrix4fv',\n    toFloatArray,\n    16,\n    setMatrixUniform\n  ),\n\n  [GL.SAMPLER_2D]: getSamplerSetter,\n  [GL.SAMPLER_CUBE]: getSamplerSetter,\n\n  // WEBGL2 - unsigned integers, irregular matrices, additional texture samplers\n\n  [GL.UNSIGNED_INT]: getArraySetter.bind(null, 'uniform1uiv', toUIntArray, 1, setVectorUniform),\n  [GL.UNSIGNED_INT_VEC2]: getArraySetter.bind(\n    null,\n    'uniform2uiv',\n    toUIntArray,\n    2,\n    setVectorUniform\n  ),\n  [GL.UNSIGNED_INT_VEC3]: getArraySetter.bind(\n    null,\n    'uniform3uiv',\n    toUIntArray,\n    3,\n    setVectorUniform\n  ),\n  [GL.UNSIGNED_INT_VEC4]: getArraySetter.bind(\n    null,\n    'uniform4uiv',\n    toUIntArray,\n    4,\n    setVectorUniform\n  ),\n\n  // uniformMatrix(false): don't transpose the matrix\n  [GL.FLOAT_MAT2x3]: getArraySetter.bind(\n    null,\n    'uniformMatrix2x3fv',\n    toFloatArray,\n    6,\n    setMatrixUniform\n  ),\n  [GL.FLOAT_MAT2x4]: getArraySetter.bind(\n    null,\n    'uniformMatrix2x4fv',\n    toFloatArray,\n    8,\n    setMatrixUniform\n  ),\n  [GL.FLOAT_MAT3x2]: getArraySetter.bind(\n    null,\n    'uniformMatrix3x2fv',\n    toFloatArray,\n    6,\n    setMatrixUniform\n  ),\n  [GL.FLOAT_MAT3x4]: getArraySetter.bind(\n    null,\n    'uniformMatrix3x4fv',\n    toFloatArray,\n    12,\n    setMatrixUniform\n  ),\n  [GL.FLOAT_MAT4x2]: getArraySetter.bind(\n    null,\n    'uniformMatrix4x2fv',\n    toFloatArray,\n    8,\n    setMatrixUniform\n  ),\n  [GL.FLOAT_MAT4x3]: getArraySetter.bind(\n    null,\n    'uniformMatrix4x3fv',\n    toFloatArray,\n    12,\n    setMatrixUniform\n  ),\n\n  [GL.SAMPLER_2D]: getSamplerSetter,\n  [GL.SAMPLER_CUBE]: getSamplerSetter,\n\n  [GL.SAMPLER_3D]: getSamplerSetter,\n  [GL.SAMPLER_2D_SHADOW]: getSamplerSetter,\n  [GL.SAMPLER_2D_ARRAY]: getSamplerSetter,\n  [GL.SAMPLER_2D_ARRAY_SHADOW]: getSamplerSetter,\n  [GL.SAMPLER_CUBE_SHADOW]: getSamplerSetter,\n  [GL.INT_SAMPLER_2D]: getSamplerSetter,\n  [GL.INT_SAMPLER_3D]: getSamplerSetter,\n  [GL.INT_SAMPLER_CUBE]: getSamplerSetter,\n  [GL.INT_SAMPLER_2D_ARRAY]: getSamplerSetter,\n  [GL.UNSIGNED_INT_SAMPLER_2D]: getSamplerSetter,\n  [GL.UNSIGNED_INT_SAMPLER_3D]: getSamplerSetter,\n  [GL.UNSIGNED_INT_SAMPLER_CUBE]: getSamplerSetter,\n  [GL.UNSIGNED_INT_SAMPLER_2D_ARRAY]: getSamplerSetter\n  /* eslint-enable max-len */\n};\n\n// Pre-allocated typed arrays for temporary conversion\nconst FLOAT_ARRAY = {};\nconst INT_ARRAY = {};\nconst UINT_ARRAY = {};\n\nconst array1 = [0];\n\n// Functions to ensure the type of uniform values\n// This is done because uniform*v functions\n// are extremely slow when consuming JS arrays directly.\nfunction toTypedArray(value, uniformLength, Type, cache) {\n  // convert boolean uniforms to Number\n  if (uniformLength === 1 && typeof value === 'boolean') {\n    value = value ? 1 : 0;\n  }\n  if (Number.isFinite(value)) {\n    array1[0] = value;\n    value = array1;\n  }\n  const length = value.length;\n  if (length % uniformLength) {\n    log.warn(`Uniform size should be multiples of ${uniformLength}`, value)();\n  }\n\n  if (value instanceof Type) {\n    return value;\n  }\n  let result = cache[length];\n  if (!result) {\n    result = new Type(length);\n    cache[length] = result;\n  }\n  for (let i = 0; i < length; i++) {\n    result[i] = value[i];\n  }\n  return result;\n}\n\nfunction toFloatArray(value, uniformLength) {\n  return toTypedArray(value, uniformLength, Float32Array, FLOAT_ARRAY);\n}\n\nfunction toIntArray(value, uniformLength) {\n  return toTypedArray(value, uniformLength, Int32Array, INT_ARRAY);\n}\n\nfunction toUIntArray(value, uniformLength) {\n  return toTypedArray(value, uniformLength, Uint32Array, UINT_ARRAY);\n} // Returns a Magic Uniform Setter\n\n// PUBLIC API\n\n/** @type {types['getUniformSetter']} */ export function getUniformSetter(gl, location, info) {\n  const setter = UNIFORM_SETTERS[info.type];\n  if (!setter) {\n    throw new Error(`Unknown GLSL uniform type ${info.type}`);\n  }\n\n  // NOTE(Tarek): This construction is the ensure\n  // separate caches for all setters.\n  return setter().bind(null, gl, location);\n}\n\n/** @type {types['parseUniformName']} */\nexport function parseUniformName(name) {\n  // Shortcut to avoid redundant or bad matches\n  if (name[name.length - 1] !== ']') {\n    return {\n      name,\n      length: 1,\n      isArray: false\n    };\n  }\n\n  // if array name then clean the array brackets\n  const UNIFORM_NAME_REGEXP = /([^[]*)(\\[[0-9]+\\])?/;\n  const matches = name.match(UNIFORM_NAME_REGEXP);\n  if (!matches || matches.length < 2) {\n    throw new Error(`Failed to parse GLSL uniform name ${name}`);\n  }\n\n  return {\n    name: matches[1],\n    length: matches[2] || 1,\n    isArray: Boolean(matches[2])\n  };\n} // To facilitate early detection of e.g. undefined values in JavaScript\n\n// Basic checks of uniform values (with or without knowledge of program)\n\n/** @type {types['checkUniformValues']} */\nexport function checkUniformValues(uniforms, source, uniformMap) {\n  for (const uniformName in uniforms) {\n    const value = uniforms[uniformName];\n    const shouldCheck = !uniformMap || Boolean(uniformMap[uniformName]);\n    if (shouldCheck && !checkUniformValue(value)) {\n      // Add space to source\n      source = source ? `${source} ` : '';\n      // Value could be unprintable so write the object on console\n      console.error(`${source} Bad uniform ${uniformName}`, value); // eslint-disable-line\n      /* eslint-enable no-console */\n      throw new Error(`${source} Bad uniform ${uniformName}`);\n    }\n  }\n  return true;\n}\n\n// TODO use type information during validation\nfunction checkUniformValue(value) {\n  if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n    return checkUniformArray(value);\n  }\n\n  // Check if single value is a number\n  if (isFinite(value)) {\n    return true;\n  } else if (value === true || value === false) {\n    return true;\n  } else if (value instanceof Texture) {\n    return true;\n  } else if (value instanceof Renderbuffer) {\n    return true;\n  } else if (value instanceof Framebuffer) {\n    return Boolean(value.texture);\n  }\n  return false;\n}\n\n/** @type {types['copyUniform']} */\nexport function copyUniform(uniforms, key, value) {\n  if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n    if (uniforms[key]) {\n      const dest = uniforms[key];\n      // @ts-ignore\n      for (let i = 0, len = value.length; i < len; ++i) {\n        dest[i] = value[i];\n      }\n    } else {\n      // @ts-ignore\n      uniforms[key] = value.slice();\n    }\n  } else {\n    uniforms[key] = value;\n  }\n}\n\n// HELPERS\n\nfunction checkUniformArray(value) {\n  // Check that every element in array is a number, and at least 1 element\n  if (value.length === 0) {\n    return false;\n  }\n\n  const checkLength = Math.min(value.length, 16);\n\n  for (let i = 0; i < checkLength; ++i) {\n    if (!Number.isFinite(value[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n// NOTE(Tarek): Setters maintain a cache\n// of the previously set value, and\n// avoid resetting it if it's the same.\nfunction getSamplerSetter() {\n  let cache = null;\n  return (gl, location, value) => {\n    const update = cache !== value;\n    if (update) {\n      gl.uniform1i(location, value);\n      cache = value;\n    }\n\n    return update;\n  };\n}\n\nfunction getArraySetter(functionName, toArray, size, uniformSetter) {\n  let cache = null;\n  let cacheLength = null;\n  return (gl, location, value) => {\n    const arrayValue = toArray(value, size);\n    const length = arrayValue.length;\n    let update = false;\n    if (cache === null) {\n      cache = new Float32Array(length);\n      cacheLength = length;\n      update = true;\n    } else {\n      assert(cacheLength === length, 'Uniform length cannot change.');\n      for (let i = 0; i < length; ++i) {\n        if (arrayValue[i] !== cache[i]) {\n          update = true;\n          break;\n        }\n      }\n    }\n    if (update) {\n      uniformSetter(gl, functionName, location, arrayValue);\n      cache.set(arrayValue);\n    }\n\n    return update;\n  };\n}\n\nfunction setVectorUniform(gl, functionName, location, value) {\n  gl[functionName](location, value);\n}\n\nfunction setMatrixUniform(gl, functionName, location, value) {\n  gl[functionName](location, false, value);\n}\n"],"file":"uniforms.js"}