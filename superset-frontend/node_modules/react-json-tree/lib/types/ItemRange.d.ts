import React from 'react';
import PropTypes from 'prop-types';
import { CircularPropsPassedThroughItemRange } from './types';
interface Props extends CircularPropsPassedThroughItemRange {
    data: any;
    nodeType: string;
    from: number;
    to: number;
    renderChildNodes: (props: Props, from: number, to: number) => React.ReactNode;
}
interface State {
    expanded: boolean;
}
export default class ItemRange extends React.Component<Props, State> {
    static propTypes: {
        styling: PropTypes.Validator<(...args: any[]) => any>;
        from: PropTypes.Validator<number>;
        to: PropTypes.Validator<number>;
        renderChildNodes: PropTypes.Validator<(...args: any[]) => any>;
        nodeType: PropTypes.Validator<string>;
    };
    constructor(props: Props);
    render(): JSX.Element;
    handleClick: () => void;
}
export {};
