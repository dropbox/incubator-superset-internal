{"version":3,"sources":["../../../src/tileset/tile-3d.ts"],"names":["Vector3","Matrix4","CullingVolume","load","TILE_REFINEMENT","TILE_CONTENT_STATE","TILESET_TYPE","createBoundingVolume","getTiles3DScreenSpaceError","getI3ScreenSize","get3dTilesOptions","TilesetTraverser","scratchVector","defined","x","undefined","TileHeader","constructor","tileset","header","parentHeader","extendedId","id","url","parent","refine","_getRefine","type","contentUrl","lodMetricType","lodMetricValue","boundingVolume","content","contentState","UNLOADED","gpuMemoryUsageInBytes","children","hasEmptyContent","hasTilesetContent","depth","viewportIds","userData","_priority","_touchedFrame","_visitedFrame","_selectedFrame","_requestedFrame","_screenSpaceError","_cacheNode","_frameNumber","traverser","_shouldRefine","_distanceToCamera","_centerZDepth","_visible","_inRequestVolume","_stackLength","_selectionDepth","_initialTransform","transform","_initializeLodMetric","_initializeTransforms","_initializeBoundingVolumes","_initializeContent","_initializeRenderingState","_lodJudge","_expireDate","_expiredContent","Object","seal","destroy","isDestroyed","selected","isVisible","isVisibleAndInRequestVolume","hasRenderContent","hasChildren","length","contentReady","READY","contentAvailable","Boolean","contentFailed","hasUnloadedContent","contentUnloaded","contentExpired","EXPIRED","FAILED","getScreenSpaceError","frameState","useParentLodMetric","I3S","TILES3D","Error","_getPriority","_traverser","skipLevelOfDetail","options","maySkipTile","ADD","useParentScreenSpaceError","screenSpaceError","rootScreenSpaceError","root","Math","max","loadContent","expired","LOADING","requestToken","_requestScheduler","scheduleRequest","bind","getTileUrl","loader","loadOptions","isTileset","_getLoaderSpecificOptions","contentLoader","_isTileset","_initializeTileHeaders","_onContentLoaded","error","done","unloadContent","updateVisibility","frameNumber","parentVisibilityPlaneMask","_visibilityPlaneMask","MASK_INDETERMINATE","updateTransforms","parentTransform","computedTransform","modelMatrix","_updateTransform","distanceToTile","visibility","MASK_OUTSIDE","insideViewerRequestVolume","cullingVolume","computeVisibilityWithPlaneMask","contentVisibility","sqrt","distanceSquaredTo","camera","position","cameraSpaceZDepth","subVectors","center","direction","dot","viewerRequestVolume","_viewerRequestVolume","updateExpiration","now","Date","lessThan","extras","console","warn","tileHeader","clone","multiplyRight","parentInitialTransform","_contentBoundingVolume","_updateBoundingVolume","_tileset","_tile","level","REPLACE","indexOf","disableSkipLevelOfDetail","didTransformChange","equals","loaderId","i3s","tile","isTileHeader"],"mappings":"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","sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport {Vector3, Matrix4} from '@math.gl/core';\nimport {CullingVolume} from '@math.gl/culling';\n\nimport {load} from '@loaders.gl/core';\nimport {TILE_REFINEMENT, TILE_CONTENT_STATE, TILESET_TYPE} from '../constants';\n\nimport {FrameState} from './helpers/frame-state';\nimport {createBoundingVolume} from './helpers/bounding-volume';\nimport {getTiles3DScreenSpaceError} from './helpers/tiles-3d-lod';\nimport {getI3ScreenSize} from './helpers/i3s-lod';\nimport {get3dTilesOptions} from './helpers/3d-tiles-options';\nimport TilesetTraverser from './traversers/tileset-traverser';\n\n// Note: circular dependency\nimport type Tileset3D from './tileset-3d';\n\nconst scratchVector = new Vector3();\n\nfunction defined(x) {\n  return x !== undefined && x !== null;\n}\n\n/**\n * @param tileset - Tileset3D instance\n * @param header - tile header - JSON loaded from a dataset\n * @param parentHeader - parent TileHeader instance\n * @param extendedId - optional ID to separate copies of a tile for different viewports.\n *                              const extendedId = `${tile.id}-${frameState.viewport.id}`;\n */\nexport type TileHeaderProps = {\n  tileset: Tileset3D;\n  header: Object;\n  parentHeader: TileHeader;\n  extendedId: string;\n};\n\n/**\n * A Tile3DHeader represents a tile as Tileset3D. When a tile is first created, its content is not loaded;\n * the content is loaded on-demand when needed based on the view.\n * Do not construct this directly, instead access tiles through {@link Tileset3D#tileVisible}.\n */\nexport default class TileHeader {\n  tileset: Tileset3D;\n  header: any;\n  id: string;\n  url: string;\n  parent: TileHeader;\n  refine: number;\n  type: string;\n  contentUrl: string;\n  lodMetricType: string;\n  lodMetricValue: number;\n  boundingVolume: any;\n  content: any;\n  contentState: any;\n  gpuMemoryUsageInBytes: number;\n  children: TileHeader[];\n  depth: number;\n  viewportIds: any[];\n  transform: Matrix4;\n\n  // Container to store application specific data\n  userData: {[key: string]: any};\n  computedTransform: any;\n  hasEmptyContent: boolean;\n  hasTilesetContent: boolean;\n\n  traverser: object;\n\n  // @ts-ignore\n  private _cacheNode: any;\n  private _frameNumber: any;\n  // TODO i3s specific, needs to remove\n  // @ts-ignore\n  private _lodJudge: any;\n  // TODO Cesium 3d tiles specific\n  private _expireDate: any;\n  private _expiredContent: any;\n  // @ts-ignore\n  private _shouldRefine: boolean;\n\n  // Members this are updated every frame for tree traversal and rendering optimizations:\n  // @ts-ignore\n  private _distanceToCamera: number;\n  // @ts-ignore\n  private _centerZDepth: number;\n  private _screenSpaceError: number;\n  private _visibilityPlaneMask: any;\n  private _visible?: boolean;\n  private _inRequestVolume: boolean;\n\n  // @ts-ignore\n  private _stackLength: number;\n  // @ts-ignore\n  private _selectionDepth: number;\n\n  // @ts-ignore\n  private _touchedFrame: number;\n  // @ts-ignore\n  private _visitedFrame: number;\n  private _selectedFrame: number;\n  // @ts-ignore\n  private _requestedFrame: number;\n\n  // @ts-ignore\n  private _priority: number;\n\n  private _contentBoundingVolume: any;\n  private _viewerRequestVolume: any;\n\n  _initialTransform: Matrix4;\n\n  /**\n   * @constructs\n   * Create a TileHeader instance\n   * @param tileset - Tileset3D instance\n   * @param header - tile header - JSON loaded from a dataset\n   * @param parentHeader - parent TileHeader instance\n   * @param extendedId - optional ID to separate copies of a tile for different viewports.\n   *    const extendedId = `${tile.id}-${frameState.viewport.id}`;\n   */\n  // eslint-disable-next-line max-statements\n  constructor(\n    tileset: Tileset3D,\n    header: {[key: string]: any},\n    parentHeader?: TileHeader,\n    extendedId = ''\n  ) {\n    // PUBLIC MEMBERS\n    // original tile data\n    this.header = header;\n\n    // The tileset containing this tile.\n    this.tileset = tileset;\n    this.id = extendedId || header.id;\n    this.url = header.url;\n\n    // This tile's parent or `undefined` if this tile is the root.\n    // @ts-ignore\n    this.parent = parentHeader;\n    this.refine = this._getRefine(header.refine);\n    this.type = header.type;\n    this.contentUrl = header.contentUrl;\n\n    // The error, in meters, introduced if this tile is rendered and its children are not.\n    this.lodMetricType = 'geometricError';\n    this.lodMetricValue = 0;\n\n    // Specifies the type of refine that is used when traversing this tile for rendering.\n    this.boundingVolume = null;\n\n    // The tile's content.  This represents the actual tile's payload,\n    // not the content's metadata in the tileset JSON file.\n    this.content = null;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n    this.gpuMemoryUsageInBytes = 0;\n\n    // The tile's children - an array of Tile3D objects.\n    this.children = [];\n\n    this.hasEmptyContent = false;\n    this.hasTilesetContent = false;\n\n    this.depth = 0;\n    this.viewportIds = [];\n\n    // Container to store application specific data\n    this.userData = {};\n\n    // PRIVATE MEMBERS\n    this._priority = 0;\n    this._touchedFrame = 0;\n    this._visitedFrame = 0;\n    this._selectedFrame = 0;\n    this._requestedFrame = 0;\n    this._screenSpaceError = 0;\n\n    this._cacheNode = null;\n    this._frameNumber = null;\n    this._cacheNode = null;\n\n    this.traverser = new TilesetTraverser({});\n    this._shouldRefine = false;\n    this._distanceToCamera = 0;\n    this._centerZDepth = 0;\n    this._visible = undefined;\n    this._inRequestVolume = false;\n    this._stackLength = 0;\n    this._selectionDepth = 0;\n    this._initialTransform = new Matrix4();\n    this.transform = new Matrix4();\n\n    this._initializeLodMetric(header);\n    this._initializeTransforms(header);\n    this._initializeBoundingVolumes(header);\n    this._initializeContent(header);\n    this._initializeRenderingState(header);\n\n    // TODO i3s specific, needs to remove\n    this._lodJudge = null;\n\n    // TODO Cesium 3d tiles specific\n    this._expireDate = null;\n    this._expiredContent = null;\n\n    Object.seal(this);\n  }\n\n  destroy() {\n    this.header = null;\n  }\n\n  isDestroyed() {\n    return this.header === null;\n  }\n\n  get selected() {\n    return this._selectedFrame === this.tileset._frameNumber;\n  }\n\n  get isVisible() {\n    return this._visible;\n  }\n\n  get isVisibleAndInRequestVolume() {\n    return this._visible && this._inRequestVolume;\n  }\n\n  /** Returns true if tile is not an empty tile and not an external tileset */\n  get hasRenderContent() {\n    return !this.hasEmptyContent && !this.hasTilesetContent;\n  }\n\n  /** Returns true if tile has children */\n  get hasChildren() {\n    return this.children.length > 0 || (this.header.children && this.header.children.length > 0);\n  }\n\n  /**\n   * Determines if the tile's content is ready. This is automatically `true` for\n   * tiles with empty content.\n   */\n  get contentReady() {\n    return this.contentState === TILE_CONTENT_STATE.READY || this.hasEmptyContent;\n  }\n\n  /**\n   * Determines if the tile has available content to render.  `true` if the tile's\n   * content is ready or if it has expired content this renders while new content loads; otherwise,\n   */\n  get contentAvailable() {\n    return Boolean(\n      (this.contentReady && this.hasRenderContent) || (this._expiredContent && !this.contentFailed)\n    );\n  }\n\n  /** Returns true if tile has renderable content but it's unloaded */\n  get hasUnloadedContent() {\n    return this.hasRenderContent && this.contentUnloaded;\n  }\n\n  /**\n   * Determines if the tile's content has not be requested. `true` if tile's\n   * content has not be requested; otherwise, `false`.\n   */\n  get contentUnloaded() {\n    return this.contentState === TILE_CONTENT_STATE.UNLOADED;\n  }\n\n  /**\n   * Determines if the tile's content is expired. `true` if tile's\n   * content is expired; otherwise, `false`.\n   */\n  get contentExpired() {\n    return this.contentState === TILE_CONTENT_STATE.EXPIRED;\n  }\n\n  // Determines if the tile's content failed to load.  `true` if the tile's\n  // content failed to load; otherwise, `false`.\n  get contentFailed() {\n    return this.contentState === TILE_CONTENT_STATE.FAILED;\n  }\n\n  /** Get the tile's screen space error. */\n  getScreenSpaceError(frameState, useParentLodMetric) {\n    switch (this.tileset.type) {\n      case TILESET_TYPE.I3S:\n        return getI3ScreenSize(this, frameState);\n      case TILESET_TYPE.TILES3D:\n        return getTiles3DScreenSpaceError(this, frameState, useParentLodMetric);\n      default:\n        // eslint-disable-next-line\n        throw new Error('Unsupported tileset type');\n    }\n  }\n\n  /*\n   * If skipLevelOfDetail is off try to load child tiles as soon as possible so that their parent can refine sooner.\n   * Tiles are prioritized by screen space error.\n   */\n  _getPriority() {\n    const traverser = this.tileset._traverser;\n    const {skipLevelOfDetail} = traverser.options;\n\n    /*\n     * Tiles that are outside of the camera's frustum could be skipped if we are in 'ADD' mode\n     * or if we are using 'Skip Traversal' in 'REPLACE' mode.\n     * Otherewise, all 'touched' child tiles have to be loaded and displayed,\n     * this may include tiles that are outide of the camera frustum (so that we can hide the parent tile).\n     */\n    const maySkipTile = this.refine === TILE_REFINEMENT.ADD || skipLevelOfDetail;\n\n    // Check if any reason to abort\n    if (maySkipTile && !this.isVisible && this._visible !== undefined) {\n      return -1;\n    }\n    // Condition used in `cancelOutOfViewRequests` function in CesiumJS/Cesium3DTileset.js\n    if (this.tileset._frameNumber - this._touchedFrame >= 1) {\n      return -1;\n    }\n    if (this.contentState === TILE_CONTENT_STATE.UNLOADED) {\n      return -1;\n    }\n\n    // Based on the priority function `getPriorityReverseScreenSpaceError` in CesiumJS. Scheduling priority is based on the parent's screen space error when possible.\n    const parent = this.parent;\n    const useParentScreenSpaceError =\n      parent && (!maySkipTile || this._screenSpaceError === 0.0 || parent.hasTilesetContent);\n    const screenSpaceError = useParentScreenSpaceError\n      ? parent._screenSpaceError\n      : this._screenSpaceError;\n\n    const rootScreenSpaceError = traverser.root ? traverser.root._screenSpaceError : 0.0;\n\n    // Map higher SSE to lower values (e.g. root tile is highest priority)\n    return Math.max(rootScreenSpaceError - screenSpaceError, 0);\n  }\n\n  /**\n   *  Requests the tile's content.\n   * The request may not be made if the Request Scheduler can't prioritize it.\n   */\n  // eslint-disable-next-line max-statements, complexity\n  async loadContent(): Promise<boolean> {\n    if (this.hasEmptyContent) {\n      return false;\n    }\n\n    if (this.content) {\n      return true;\n    }\n\n    const expired = this.contentExpired;\n\n    if (expired) {\n      this._expireDate = null;\n    }\n\n    this.contentState = TILE_CONTENT_STATE.LOADING;\n\n    const requestToken = await this.tileset._requestScheduler.scheduleRequest(\n      this.id,\n      this._getPriority.bind(this)\n    );\n\n    if (!requestToken) {\n      // cancelled\n      this.contentState = TILE_CONTENT_STATE.UNLOADED;\n      return false;\n    }\n\n    try {\n      const contentUrl = this.tileset.getTileUrl(this.contentUrl);\n      // The content can be a binary tile ot a JSON tileset\n      const loader = this.tileset.loader;\n      const options = {\n        ...this.tileset.loadOptions,\n        [loader.id]: {\n          ...this.tileset.loadOptions[loader.id],\n          isTileset: this.type === 'json',\n          ...this._getLoaderSpecificOptions(loader.id)\n        }\n      };\n\n      this.content = await load(contentUrl, loader, options);\n\n      if (this.tileset.options.contentLoader) {\n        await this.tileset.options.contentLoader(this);\n      }\n\n      if (this._isTileset()) {\n        // Add tile headers for the nested tilset's subtree\n        // Async update of the tree should be fine since there would never be edits to the same node\n        // TODO - we need to capture the child tileset's URL\n        this.tileset._initializeTileHeaders(this.content, this);\n      }\n\n      this.contentState = TILE_CONTENT_STATE.READY;\n      this._onContentLoaded();\n      return true;\n    } catch (error) {\n      // Tile is unloaded before the content finishes loading\n      this.contentState = TILE_CONTENT_STATE.FAILED;\n      throw error;\n    } finally {\n      requestToken.done();\n    }\n  }\n\n  // Unloads the tile's content.\n  unloadContent() {\n    if (this.content && this.content.destroy) {\n      this.content.destroy();\n    }\n    this.content = null;\n    if (this.header.content && this.header.content.destroy) {\n      this.header.content.destroy();\n    }\n    this.header.content = null;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n    return true;\n  }\n\n  /**\n   * Update the tile's visibility\n   * @param {Object} frameState - frame state for tile culling\n   * @param {string[]} viewportIds - a list of viewport ids that show this tile\n   * @return {void}\n   */\n  updateVisibility(frameState, viewportIds) {\n    if (this._frameNumber === frameState.frameNumber) {\n      // Return early if visibility has already been checked during the traversal.\n      // The visibility may have already been checked if the cullWithChildrenBounds optimization is used.\n      return;\n    }\n\n    const parent = this.parent;\n    const parentVisibilityPlaneMask = parent\n      ? parent._visibilityPlaneMask\n      : CullingVolume.MASK_INDETERMINATE;\n\n    if (this.tileset._traverser.options.updateTransforms) {\n      const parentTransform = parent ? parent.computedTransform : this.tileset.modelMatrix;\n      this._updateTransform(parentTransform);\n    }\n\n    this._distanceToCamera = this.distanceToTile(frameState);\n    this._screenSpaceError = this.getScreenSpaceError(frameState, false);\n    this._visibilityPlaneMask = this.visibility(frameState, parentVisibilityPlaneMask); // Use parent's plane mask to speed up visibility test\n    this._visible = this._visibilityPlaneMask !== CullingVolume.MASK_OUTSIDE;\n    this._inRequestVolume = this.insideViewerRequestVolume(frameState);\n\n    this._frameNumber = frameState.frameNumber;\n    this.viewportIds = viewportIds;\n  }\n\n  // Determines whether the tile's bounding volume intersects the culling volume.\n  // @param {FrameState} frameState The frame state.\n  // @param {Number} parentVisibilityPlaneMask The parent's plane mask to speed up the visibility check.\n  // @returns {Number} A plane mask as described above in {@link CullingVolume#computeVisibilityWithPlaneMask}.\n  visibility(frameState, parentVisibilityPlaneMask) {\n    const {cullingVolume} = frameState;\n    const {boundingVolume} = this;\n\n    // TODO Cesium specific - restore clippingPlanes\n    // const {clippingPlanes, clippingPlanesOriginMatrix} = tileset;\n    // if (clippingPlanes && clippingPlanes.enabled) {\n    //   const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n    //     boundingVolume,\n    //     clippingPlanesOriginMatrix\n    //   );\n    //   this._isClipped = intersection !== Intersect.INSIDE;\n    //   if (intersection === Intersect.OUTSIDE) {\n    //     return CullingVolume.MASK_OUTSIDE;\n    //   }\n    // }\n\n    // return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n    return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n  }\n\n  // Assuming the tile's bounding volume intersects the culling volume, determines\n  // whether the tile's content's bounding volume intersects the culling volume.\n  // @param {FrameState} frameState The frame state.\n  // @returns {Intersect} The result of the intersection: the tile's content is completely outside, completely inside, or intersecting the culling volume.\n  contentVisibility() {\n    return true;\n\n    // TODO restore\n    /*\n    // Assumes the tile's bounding volume intersects the culling volume already, so\n    // just return Intersect.INSIDE if there is no content bounding volume.\n    if (!defined(this.contentBoundingVolume)) {\n      return Intersect.INSIDE;\n    }\n\n    if (this._visibilityPlaneMask === CullingVolume.MASK_INSIDE) {\n      // The tile's bounding volume is completely inside the culling volume so\n      // the content bounding volume must also be inside.\n      return Intersect.INSIDE;\n    }\n\n    // PERFORMANCE_IDEA: is it possible to burn less CPU on this test since we know the\n    // tile's (not the content's) bounding volume intersects the culling volume?\n    const cullingVolume = frameState.cullingVolume;\n    const boundingVolume = tile.contentBoundingVolume;\n\n    const tileset = this.tileset;\n    const clippingPlanes = tileset.clippingPlanes;\n    if (defined(clippingPlanes) && clippingPlanes.enabled) {\n      const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n        boundingVolume,\n        tileset.clippingPlanesOriginMatrix\n      );\n      this._isClipped = intersection !== Intersect.INSIDE;\n      if (intersection === Intersect.OUTSIDE) {\n        return Intersect.OUTSIDE;\n      }\n    }\n\n    return cullingVolume.computeVisibility(boundingVolume);\n    */\n  }\n\n  /**\n   * Computes the (potentially approximate) distance from the closest point of the tile's bounding volume to the camera.\n   * @param frameState The frame state.\n   * @returns {Number} The distance, in meters, or zero if the camera is inside the bounding volume.\n   */\n  distanceToTile(frameState: FrameState): number {\n    const boundingVolume = this.boundingVolume;\n    return Math.sqrt(Math.max(boundingVolume.distanceSquaredTo(frameState.camera.position), 0));\n  }\n\n  /**\n   * Computes the tile's camera-space z-depth.\n   * @param frameState The frame state.\n   * @returns The distance, in meters.\n   */\n  cameraSpaceZDepth({camera}): number {\n    const boundingVolume = this.boundingVolume; // Gets the underlying OrientedBoundingBox or BoundingSphere\n    scratchVector.subVectors(boundingVolume.center, camera.position);\n    return camera.direction.dot(scratchVector);\n  }\n\n  /**\n   * Checks if the camera is inside the viewer request volume.\n   * @param {FrameState} frameState The frame state.\n   * @returns {Boolean} Whether the camera is inside the volume.\n   */\n  insideViewerRequestVolume(frameState: FrameState) {\n    const viewerRequestVolume = this._viewerRequestVolume;\n    return (\n      !viewerRequestVolume || viewerRequestVolume.distanceSquaredTo(frameState.camera.position) <= 0\n    );\n  }\n\n  // TODO Cesium specific\n\n  // Update whether the tile has expired.\n  updateExpiration() {\n    if (defined(this._expireDate) && this.contentReady && !this.hasEmptyContent) {\n      const now = Date.now();\n      // @ts-ignore Date.lessThan - replace with ms compare?\n      if (Date.lessThan(this._expireDate, now)) {\n        this.contentState = TILE_CONTENT_STATE.EXPIRED;\n        this._expiredContent = this.content;\n      }\n    }\n  }\n\n  get extras() {\n    return this.header.extras;\n  }\n\n  // INTERNAL METHODS\n\n  _initializeLodMetric(header) {\n    if ('lodMetricType' in header) {\n      this.lodMetricType = header.lodMetricType;\n    } else {\n      this.lodMetricType = (this.parent && this.parent.lodMetricType) || this.tileset.lodMetricType;\n      // eslint-disable-next-line\n      console.warn(`3D Tile: Required prop lodMetricType is undefined. Using parent lodMetricType`);\n    }\n\n    // This is used to compute screen space error, i.e., the error measured in pixels.\n    if ('lodMetricValue' in header) {\n      this.lodMetricValue = header.lodMetricValue;\n    } else {\n      this.lodMetricValue =\n        (this.parent && this.parent.lodMetricValue) || this.tileset.lodMetricValue;\n      // eslint-disable-next-line\n      console.warn(\n        '3D Tile: Required prop lodMetricValue is undefined. Using parent lodMetricValue'\n      );\n    }\n  }\n\n  _initializeTransforms(tileHeader) {\n    // The local transform of this tile.\n    this.transform = tileHeader.transform ? new Matrix4(tileHeader.transform) : new Matrix4();\n\n    const parent = this.parent;\n    const tileset = this.tileset;\n\n    const parentTransform =\n      parent && parent.computedTransform\n        ? parent.computedTransform.clone()\n        : tileset.modelMatrix.clone();\n    this.computedTransform = new Matrix4(parentTransform).multiplyRight(this.transform);\n\n    const parentInitialTransform =\n      parent && parent._initialTransform ? parent._initialTransform.clone() : new Matrix4();\n    this._initialTransform = new Matrix4(parentInitialTransform).multiplyRight(this.transform);\n  }\n\n  _initializeBoundingVolumes(tileHeader) {\n    this._contentBoundingVolume = null;\n    this._viewerRequestVolume = null;\n\n    this._updateBoundingVolume(tileHeader);\n  }\n\n  _initializeContent(tileHeader) {\n    // Empty tile by default\n    this.content = {_tileset: this.tileset, _tile: this};\n    this.hasEmptyContent = true;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n\n    // When `true`, the tile's content points to an external tileset.\n    // This is `false` until the tile's content is loaded.\n    this.hasTilesetContent = false;\n\n    if (tileHeader.contentUrl) {\n      this.content = null;\n      this.hasEmptyContent = false;\n    }\n  }\n\n  // TODO - remove anything not related to basic visibility detection\n  _initializeRenderingState(header) {\n    this.depth = header.level || (this.parent ? this.parent.depth + 1 : 0);\n    this._shouldRefine = false;\n\n    // Members this are updated every frame for tree traversal and rendering optimizations:\n    this._distanceToCamera = 0;\n    this._centerZDepth = 0;\n    this._screenSpaceError = 0;\n    this._visibilityPlaneMask = CullingVolume.MASK_INDETERMINATE;\n    this._visible = undefined;\n    this._inRequestVolume = false;\n\n    this._stackLength = 0;\n    this._selectionDepth = 0;\n\n    this._frameNumber = 0;\n    this._touchedFrame = 0;\n    this._visitedFrame = 0;\n    this._selectedFrame = 0;\n    this._requestedFrame = 0;\n\n    this._priority = 0.0;\n  }\n\n  _getRefine(refine) {\n    // Inherit from parent tile if omitted.\n    return refine || (this.parent && this.parent.refine) || TILE_REFINEMENT.REPLACE;\n  }\n\n  _isTileset() {\n    return this.contentUrl.indexOf('.json') !== -1;\n  }\n\n  _onContentLoaded() {\n    // Vector and Geometry tile rendering do not support the skip LOD optimization.\n    switch (this.content && this.content.type) {\n      case 'vctr':\n      case 'geom':\n        // @ts-ignore\n        this.tileset._traverser.disableSkipLevelOfDetail = true;\n        break;\n      default:\n    }\n\n    // The content may be tileset json\n    if (this._isTileset()) {\n      this.hasTilesetContent = true;\n    }\n  }\n\n  _updateBoundingVolume(header) {\n    // Update the bounding volumes\n    this.boundingVolume = createBoundingVolume(\n      header.boundingVolume,\n      this.computedTransform,\n      this.boundingVolume\n    );\n\n    const content = header.content;\n    if (!content) {\n      return;\n    }\n\n    // TODO Cesium specific\n    // Non-leaf tiles may have a content bounding-volume, which is a tight-fit bounding volume\n    // around only the features in the tile. This box is useful for culling for rendering,\n    // but not for culling for traversing the tree since it does not guarantee spatial coherence, i.e.,\n    // since it only bounds features in the tile, not the entire tile, children may be\n    // outside of this box.\n    if (content.boundingVolume) {\n      this._contentBoundingVolume = createBoundingVolume(\n        content.boundingVolume,\n        this.computedTransform,\n        this._contentBoundingVolume\n      );\n    }\n    if (header.viewerRequestVolume) {\n      this._viewerRequestVolume = createBoundingVolume(\n        header.viewerRequestVolume,\n        this.computedTransform,\n        this._viewerRequestVolume\n      );\n    }\n  }\n\n  // Update the tile's transform. The transform is applied to the tile's bounding volumes.\n  _updateTransform(parentTransform = new Matrix4()) {\n    const computedTransform = parentTransform.clone().multiplyRight(this.transform);\n    const didTransformChange = !computedTransform.equals(this.computedTransform);\n\n    if (!didTransformChange) {\n      return;\n    }\n\n    this.computedTransform = computedTransform;\n\n    this._updateBoundingVolume(this.header);\n  }\n\n  // Get options which are applicable only for the particular loader\n  _getLoaderSpecificOptions(loaderId) {\n    switch (loaderId) {\n      case 'i3s':\n        return {\n          ...this.tileset.options.i3s,\n          tile: this.header,\n          tileset: this.tileset.tileset,\n          isTileHeader: false\n        };\n      case '3d-tiles':\n      case 'cesium-ion':\n      default:\n        return get3dTilesOptions(this.tileset.tileset);\n    }\n  }\n}\n"],"file":"tile-3d.js"}