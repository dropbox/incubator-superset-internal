{"version":3,"sources":["../../../../src/lib/extensions/KHR_lights_punctual.ts"],"names":["decode","gltfData","gltfScenegraph","GLTFScenegraph","json","extension","getExtension","KHR_LIGHTS_PUNCTUAL","lights","removeExtension","nodes","node","nodeExtension","getObjectExtension","light","removeObjectExtension","encode","addExtension","addObjectExtension"],"mappings":";;;;;;;;;;;;;;AAKA;;AACA;;AACA;;;;;;;;SAEsBA,M;;;;;sEAAf,iBAAsBC,QAAtB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,cADD,GACkB,IAAIC,uBAAJ,CAAmBF,QAAnB,CADlB;AAEEG,YAAAA,IAFF,GAEUF,cAFV,CAEEE,IAFF;AAKCC,YAAAA,SALD,GAKaH,cAAc,CAACI,YAAf,CAA4BC,kCAA5B,CALb;;AAML,gBAAIF,SAAJ,EAAe;AAEbH,cAAAA,cAAc,CAACE,IAAf,CAAoBI,MAApB,GAA6BH,SAAS,CAACG,MAAvC;AACAN,cAAAA,cAAc,CAACO,eAAf,CAA+BF,kCAA/B;AACD;;AAVI,mDAccH,IAAI,CAACM,KAAL,IAAc,EAd5B;;AAAA;AAcL,kEAAqC;AAA1BC,gBAAAA,IAA0B;AAC7BC,gBAAAA,aAD6B,GACbV,cAAc,CAACW,kBAAf,CAAkCF,IAAlC,EAAwCJ,kCAAxC,CADa;;AAEnC,oBAAIK,aAAJ,EAAmB;AAEjBD,kBAAAA,IAAI,CAACG,KAAL,GAAaF,aAAa,CAACE,KAA3B;AACD;;AACDZ,gBAAAA,cAAc,CAACa,qBAAf,CAAqCJ,IAArC,EAA2CJ,kCAA3C;AACD;AArBI;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAyBeS,M;;;;;sEAAf,kBAAsBf,QAAtB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,cADD,GACkB,IAAIC,uBAAJ,CAAmBF,QAAnB,CADlB;AAEEG,YAAAA,IAFF,GAEUF,cAFV,CAEEE,IAFF;;AAKL,gBAAIA,IAAI,CAACI,MAAT,EAAiB;AACTH,cAAAA,SADS,GACGH,cAAc,CAACe,YAAf,CAA4BV,kCAA5B,CADH;AAGf,kCAAO,CAACF,SAAS,CAACG,MAAlB;AAEAH,cAAAA,SAAS,CAACG,MAAV,GAAmBJ,IAAI,CAACI,MAAxB;AAEA,qBAAOJ,IAAI,CAACI,MAAZ;AACD;;AAKD,gBAAIN,cAAc,CAACE,IAAf,CAAoBI,MAAxB,EAAgC;AAAA,sDAEVN,cAAc,CAACE,IAAf,CAAoBI,MAFV;;AAAA;AAE9B,uEAAgD;AAArCM,kBAAAA,KAAqC;AACxCH,kBAAAA,IADwC,GACjCG,KAAK,CAACH,IAD2B;AAE9CT,kBAAAA,cAAc,CAACgB,kBAAf,CAAkCP,IAAlC,EAAwCJ,kCAAxC,EAA6DO,KAA7D;AACD;AAL6B;AAAA;AAAA;AAAA;AAAA;;AAO9B,qBAAOZ,cAAc,CAACE,IAAf,CAAoBI,MAA3B;AACD;;AA1BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["// GLTF EXTENSION: KHR_lights_punctual\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\nimport type {GLTF} from '../types/gltf-types';\n\nimport {assert} from '../utils/assert';\nimport GLTFScenegraph from '../api/gltf-scenegraph';\nimport {KHR_LIGHTS_PUNCTUAL} from '../gltf-utils/gltf-constants';\n\nexport async function decode(gltfData: {json: GLTF}): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Move the light array out of the extension and remove the extension\n  const extension = gltfScenegraph.getExtension(KHR_LIGHTS_PUNCTUAL);\n  if (extension) {\n    // @ts-ignore\n    gltfScenegraph.json.lights = extension.lights;\n    gltfScenegraph.removeExtension(KHR_LIGHTS_PUNCTUAL);\n  }\n\n  // Any nodes that have the extension, add lights field pointing to light object\n  // and remove the extension\n  for (const node of json.nodes || []) {\n    const nodeExtension = gltfScenegraph.getObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n    if (nodeExtension) {\n      // @ts-ignore\n      node.light = nodeExtension.light;\n    }\n    gltfScenegraph.removeObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n  }\n}\n\n// Move the light ar ray out of the extension and remove the extension\nexport async function encode(gltfData): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // @ts-ignore\n  if (json.lights) {\n    const extension = gltfScenegraph.addExtension(KHR_LIGHTS_PUNCTUAL);\n    // @ts-ignore\n    assert(!extension.lights);\n    // @ts-ignore\n    extension.lights = json.lights;\n    // @ts-ignore\n    delete json.lights;\n  }\n\n  // Any nodes that have lights field pointing to light object\n  // add the extension\n  // @ts-ignore\n  if (gltfScenegraph.json.lights) {\n    // @ts-ignore\n    for (const light of gltfScenegraph.json.lights) {\n      const node = light.node;\n      gltfScenegraph.addObjectExtension(node, KHR_LIGHTS_PUNCTUAL, light);\n    }\n    // @ts-ignore\n    delete gltfScenegraph.json.lights;\n  }\n}\n"],"file":"KHR_lights_punctual.js"}