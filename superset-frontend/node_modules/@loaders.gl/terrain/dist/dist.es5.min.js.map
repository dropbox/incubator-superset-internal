{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../worker-utils/src/lib/env-utils/assert.ts","webpack:////home/user/apps/loaders.gl/node_modules/@probe.gl/stats/dist/esm/utils/hi-res-timestamp.js","webpack:///../worker-utils/src/lib/env-utils/version.ts","webpack:///(webpack)/buildin/global.js","webpack:///../schema/src/lib/schema/index.ts","webpack:////home/user/apps/loaders.gl/node_modules/process/browser.js","webpack:///../worker-utils/src/lib/env-utils/globals.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-thread.ts","webpack:///../worker-utils/src/lib/worker-utils/get-transfer-list.ts","webpack:///../schema/src/index.ts","webpack:///../schema/src/lib/table/row-table-batch-aggregator.ts","webpack:///../schema/src/lib/utils/row-utils.ts","webpack:///../schema/src/lib/table/columnar-table-batch-aggregator.ts","webpack:///./src/lib/helpers/skirt.js","webpack:///../loader-utils/src/lib/env-utils/assert.ts","webpack:///../worker-utils/src/index.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-job.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-farm.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-pool.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-body.ts","webpack:///../worker-utils/src/lib/worker-api/get-worker-url.ts","webpack:///../worker-utils/src/lib/async-queue/async-queue.ts","webpack:///../loader-utils/src/lib/binary-utils/get-first-characters.ts","webpack:///../loader-utils/src/lib/binary-utils/array-buffer-utils.ts","webpack:///../loader-utils/src/lib/binary-utils/memory-copy-utils.ts","webpack:///./src/lib/utils/version.js","webpack:///./src/bundle.ts","webpack:///./src/index.ts","webpack:///./src/lib/parse-quantized-mesh.js","webpack:///../schema/src/lib/table/table-batch-builder.ts","webpack:///../schema/src/lib/table/base-table-batch-aggregator.ts","webpack:///../schema/src/category/mesh/mesh-utils.ts","webpack:///../schema/src/lib/schema/impl/schema.ts","webpack:///../schema/src/lib/utils/assert.ts","webpack:///../schema/src/lib/schema/impl/field.ts","webpack:///../schema/src/lib/schema/impl/type.ts","webpack:///../schema/src/lib/schema/impl/enum.ts","webpack:///../schema/src/lib/schema-utils/deduce-table-schema.ts","webpack:///../schema/src/lib/schema-utils/get-type-info.ts","webpack:///../schema/src/lib/schema-utils/type-utils.ts","webpack:///../schema/src/lib/utils/async-queue.ts","webpack:///./src/lib/decode-quantized-mesh.js","webpack:///../loader-utils/src/index.ts","webpack:///../loader-utils/src/lib/env-utils/globals.ts","webpack:///../loader-utils/src/lib/worker-loader-utils/create-loader-worker.ts","webpack:///../worker-utils/src/lib/worker-utils/get-loadable-worker-url.ts","webpack:///../worker-utils/src/lib/worker-api/process-on-worker.ts","webpack:///../worker-utils/src/lib/worker-utils/remove-nontransferable-options.ts","webpack:///../worker-utils/src/lib/worker-api/create-worker.ts","webpack:///../worker-utils/src/lib/worker-api/validate-worker-version.ts","webpack:///../worker-utils/src/lib/library-utils/library-utils.ts","webpack:///../loader-utils/src/lib/worker-loader-utils/parse-with-worker.ts","webpack:///../loader-utils/src/lib/parser-utils/parse-json.ts","webpack:///../loader-utils/src/lib/binary-utils/binary-copy-utils.ts","webpack:///../loader-utils/src/lib/binary-utils/encode-utils.ts","webpack:///../loader-utils/src/lib/iterators/text-iterators.ts","webpack:///../loader-utils/src/lib/iterators/async-iteration.ts","webpack:///../loader-utils/src/lib/request-utils/request-scheduler.ts","webpack:///../loader-utils/src/lib/path-utils/path.ts","webpack:///../loader-utils/src/lib/path-utils/file-aliases.ts","webpack:///../loader-utils/src/lib/binary-utils/buffer-utils.ts","webpack:///../loader-utils/src/json-loader.ts","webpack:///./src/lib/parse-terrain.js","webpack:////home/user/apps/loaders.gl/node_modules/@mapbox/martini/index.js","webpack:///./src/lib/delatin/index.js","webpack:///./src/terrain-loader.ts","webpack:///./src/quantized-mesh-loader.ts","webpack:////home/user/apps/loaders.gl/node_modules/@probe.gl/stats/dist/esm/lib/stat.js","webpack:////home/user/apps/loaders.gl/node_modules/@probe.gl/stats/dist/esm/lib/stats.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","condition","message","Error","getHiResTimestamp","timestamp","window","performance","now","process","hrtime","timeParts","Date","g","this","Function","e","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","globals","self","global","document","self_","window_","global_","document_","isBrowser","String","isWorker","importScripts","isMobile","orientation","matches","exec","nodeVersion","parseFloat","NOOP","WorkerThread","props","source","url","assert","onMessage","onError","error","console","log","worker","_createBrowserWorker","Worker","terminate","terminated","Boolean","data","transferList","getTransferList","postMessage","event","lineno","colno","_loadableURL","getLoadableWorkerURL","onmessage","onerror","_getErrorFromErrorEvent","onmessageerror","isTransferable","ArrayBuffer","MessagePort","ImageBitmap","OffscreenCanvas","recursive","transfers","transfersSet","Set","add","buffer","isView","undefined","from","RowTableBatchAggregator","schema","options","isArray","_headers","index","row","cursor","Number","isFinite","shape","rowObject","convertToObjectRow","addObjectRow","arrayRows","rowArray","convertToArrayRow","addArrayRow","objectRows","rows","slice","batchType","arrayRow","headers","objectRow","ColumnarTableBatchAggregator","_reallocateColumns","fieldName","columns","_pruneColumns","field","allocated","ArrayType","type","Float32Array","oldColumn","typedArray","set","entries","columnName","column","attributes","triangles","skirtHeight","outsideIndices","outsideEdges","getOutsideEdgesFromIndices","POSITION","getOutsideEdgesFromTriangles","newPosition","constructor","newTexcoord0","TEXCOORD_0","newTriangles","edge","updateAttributesForNewEdge","edgeIndex","concatenateTypedArrays","resultTriangles","edges","sort","a","b","Math","min","max","indices","position","westIndices","eastIndices","southIndices","northIndices","indexGroup","positionsLength","vertex1Offset","vertex2Offset","subarray","triangle1Offset","NullWorker","id","VERSION","null","WorkerJob","jobName","workerThread","isRunning","_resolve","_reject","result","Promise","resolve","reject","payload","DEFAULT_PROPS","maxConcurrency","maxMobileConcurrency","onDebug","reuseWorkers","WorkerFarm","Map","setProps","workerPools","isSupported","_workerFarm","values","destroy","_getWorkerPoolProps","workerPool","WorkerPool","idleQueue","forEach","isDestroyed","job","done","startPromise","onStart","jobQueue","_startQueuedJob","_getAvailableWorker","queuedJob","shift","backlog","returnWorkerToQueue","count","_getMaxConcurrency","toLowerCase","onMessageWrapperMap","WorkerBody","isKnownMessage","onMessageWrapper","addEventListener","removeEventListener","startsWith","warning","workerOptions","workerFile","workerUrl","_workerType","versionTag","asyncIterator","AsyncQueue","_values","_settlers","_closed","enqueue","settler","getMagicString","arrayBuffer","byteOffset","byteLength","dataView","DataView","magic","fromCharCode","getUint8","node","toArrayBuffer","text","TextEncoder","encode","_toArrayBuffer","arrayBuffer1","arrayBuffer2","array1","Uint8Array","array2","sources","sourceArrays","map","source2","reduce","offset","sourceArray","typedArrays","arrays","TypedArrayConstructor","sumLength","acc","subArray","targetBuffer","sourceBuffer","targetArray","target","targetOffset","srcByteOffset","srcByteLength","padToNBytes","padding","moduleExports","require","_global","loaders","assign","TerrainLoader","TerrainWorkerLoader","parse","loadTerrain","_typecheckTerrainLoader","QuantizedMeshLoader","QuantizedMeshWorkerLoader","parseSync","parseQuantizedMesh","_typecheckQuantizedMeshLoader","bounds","DECODING_STEPS","triangleIndices","header","vertexData","originalTriangleIndices","minHeight","maxHeight","minX","minY","maxX","maxY","xScale","yScale","zScale","nCoords","positions","texCoords","x","y","z","size","getMeshAttributes","boundingBox","getMeshBoundingBox","addSkirt","newAttributes","loaderData","vertexCount","getTileMesh","DEFAULT_OPTIONS","batchSize","batchDebounceMs","limit","_limitMB","TableBatchBuilder","totalLength","totalBytes","limitReached","rowBytes","_estimateRowMB","aggregator","TableBatchType","_getTableBatchType","chunk","bytesUsed","isChunkComplete","_isFull","_getBatch","keys","rowCount","lastBatchEmittedMs","normalizedBatch","getBatch","batchCount","BaseTableBatchAggregator","ArrowBatch","attributeName","attribute","BYTES_PER_ELEMENT","Infinity","minZ","maxZ","Schema","fields","metadata","usedNames","warn","checkNames","other","compareTo","nameMap","columnNames","selectedFields","filter","columnIndices","schemaOrFields","otherSchema","mergeMaps","fieldMap","m1","m2","Field","nullable","typeId","DataType","Type","NONE","Null","Int","Float","Binary","Utf8","Bool","Decimal","Time","Timestamp","Interval","List","Struct","Union","FixedSizeBinary","FixedSizeList","Dictionary","isSigned","bitWidth","Int8","Int16","Int32","Int64","Uint8","Uint16","Uint32","Uint64","Precision","precision","Float16","Float32","Float64","DateUnit","DAY","MILLISECOND","unit","DateDay","DateMillisecond","TimeUnit","SECOND","MICROSECOND","NANOSECOND","TimeSecond","TimeMillisecond","timezone","TimestampSecond","TimestampMillisecond","TimestampMicrosecond","TimestampNanosecond","IntervalUnit","DAY_TIME","YEAR_MONTH","IntervalDayTime","IntervalYearMonth","listSize","child","children","valueType","deduceTypeFromValue","table","deducedSchema","rowTable","deduceSchemaForRowTable","columnarTable","deduceSchemaForColumnarTable","arrowTypeLike","typeName","toString","typeEnumName","getTypeKey","ReverseType","typeKey","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float64Array","ArrayQueue","dequeue","asyncIterable","iterator","next","userOptions","view","QUANTIZED_MESH_HEADER","bytesCount","getFloat64","getFloat32","headerEndPosition","decodeHeader","maxDecodingStep","vertices","getUint32","bytesPerArrayElement","elementArrayLength","uArrayStartPosition","vArrayStartPosition","heightArrayStartPosition","u","v","height","decodeZigZag","getUint16","vertexDataEndPosition","decodeVertexData","bytesPerIndex","triangleCount","triangleIndicesCount","decodeIndex","triangleIndicesEndPosition","decodeTriangleIndices","edgeIndices","westVertexCount","southVertexCount","eastVertexCount","northVertexCount","edgeIndicesEndPosition","decodeEdgeIndices","extensions","indicesEndPosition","extensionsEndPosition","extensionId","extensionLength","extensionView","vertexNormals","extensionDataView","waterMask","decodeWaterMaskExtension","decodeExtensions","indicesCount","encoded","highest","code","loader","input","parseData","context","parseOnMainThread","requestId","parser","parseTextSync","textDecoder","TextDecoder","decode","workerURL","workerURLCache","getLoadableWorkerURLFromSource","getLoadableWorkerURLFromURL","workerSource","blob","Blob","URL","createObjectURL","getWorkerName","getWorkerURL","workerFarm","getWorkerFarm","getWorkerPool","startJob","transferableOptions","removeNontransferableOptions","JSON","cache","stringify","has","err","processInBatches","processOnMainThread","inputBatches","resultIterator","batch","close","coreVersion","workerVersion","loadLibraryPromises","libraryUrl","moduleName","getLibraryUrl","loadLibraryFromFile","library","CDN","endsWith","fetch","response","requireFromFile","scriptSource","loadLibraryFromString","requireFromString","eval","script","createElement","appendChild","createTextNode","body","string","_","getFirstCharacters","stringBuffer","copyPaddedArrayBufferToDataView","paddedLength","padLength","setUint8","byteAlignment","ceil","whitespace","charCodeAt","binary","arrayBufferIterator","stream","textIterator","textEncoder","previous","eolIndex","indexOf","line","lineIterator","counter","visitor","arrayBuffers","concatenateArrayBuffers","strings","join","throttleRequests","maxRequests","RequestScheduler","stats","Stats","handle","getPriority","requestMap","request","priority","promise","requestQueue","_issueNewRequests","isDone","activeRequestCount","deferredUpdate","_issueNewRequestsAsync","freeSlots","_updateAllRequests","_issueRequest","_updateRequest","splice","slashIndex","lastIndexOf","substr","parts","separator","part","replace","RegExp","prefix","pathPrefix","aliases","fileAliases","filename","alias","replacement","isBuffer","toBuffer","JSONLoader","mimeTypes","category","_typecheckJSONLoader","getTerrain","imageData","width","elevationDecoder","tesselator","rScaler","bScaler","gScaler","terrain","k","getMesh","terrainImage","terrainOptions","mesh","meshMaxError","getMartiniTileMesh","getDelatinTileMesh","gridSize","numOfVerticies","pixelIdx","Martini","createTile","tin","Delatin","coords","image","baseUri","tileSize","numTriangles","numParentTriangles","ax","ay","bx","by","cx","cy","mx","my","Tile","martini","errors","update","interpolatedHeight","middleIndex","middleError","abs","leftChildIndex","rightChildIndex","maxError","numVertices","countElements","fill","triIndex","processTriangle","_halfedges","_candidates","_queueIndices","_queue","_errors","_rms","_pending","_pendingLen","_rmsSum","x1","y1","p0","_addPoint","p1","p2","p3","t0","_addTriangle","_flush","getMaxError","refine","_step","sqrt","_findCandidate","p0x","p0y","p1x","p1y","p2x","p2y","w00","orient","w01","w02","a01","b01","a12","b12","a20","b20","z0","heightAt","z1","z2","rms","dx","floor","w0","w1","w2","wasInside","dz","_queuePush","_queuePop","e0","e1","e2","px","py","pn","_handleCollinear","h0","h1","h2","t1","t2","_legalize","ab","bc","ca","a0","b0","al","ar","bl","br","pr","pl","ey","cp","fx","fy","bp","ex","dy","hal","har","hbl","hbr","_queueRemove","t3","_queueUp","_queueSwap","_queueDown","_queuePopBack","pop","it","j","pi","pj","j0","_queueLess","i0","j1","j2","_typecheckTerrainWorkerLoader","sampleSize","reset","samples","addCount","subtractCount","_count","_samples","_checkSampling","time","_time","lastTiming","_startTime","_timerPending","addTime","lastSampleCount","lastSampleTime","_initializeStats","seal","_getOrCreate","fn","stat","average","getAverageTime","hz","getHz"],"mappings":"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","file":"dist.es5.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\n\n/** Throws an `Error` with the optional `message` if `condition` is falsy */\nexport function assert(condition: any, message?: string): void {\n  if (!condition) {\n    throw new Error(message || 'loaders.gl assertion failed.');\n  }\n}\n","export default function getHiResTimestamp() {\n  let timestamp;\n\n  if (typeof window !== 'undefined' && window.performance) {\n    timestamp = window.performance.now();\n  } else if (typeof process !== 'undefined' && process.hrtime) {\n    const timeParts = process.hrtime();\n    timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n  } else {\n    timestamp = Date.now();\n  }\n\n  return timestamp;\n}\n//# sourceMappingURL=hi-res-timestamp.js.map","// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n\n// Change to `latest` on production branches\nconst DEFAULT_VERSION = 'beta';\ndeclare let __VERSION__;\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : DEFAULT_VERSION;\nif (typeof __VERSION__ === 'undefined') {\n  // eslint-disable-next-line\n  console.error(\n    'loaders.gl: The __VERSION__ variable is not injected using babel plugin. Latest unstable workers would be fetched from the CDN.'\n  );\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*\nexport {\n  Schema,\n  Field,\n  DataType,\n  Null,\n  Bool,\n  Int,\n  Int8,\n  Int16,\n  Int32,\n  Int64,\n  Uint8,\n  Uint16,\n  Uint32,\n  Uint64,\n  Float,\n  Float16,\n  Float32,\n  Float64,\n  Binary,\n  Utf8,\n  Date,\n  DateDay,\n  DateMillisecond,\n  Time,\n  TimeSecond,\n  TimeMillisecond,\n  TimeMicrosecond,\n  TimeNanosecond,\n  Timestamp,\n  TimestampSecond,\n  TimestampMillisecond,\n  TimestampMicrosecond,\n  TimestampNanosecond,\n  Interval,\n  IntervalDayTime,\n  IntervalYearMonth,\n  FixedSizeList\n} from 'apache-arrow';\n*/\nexport {default as Schema} from './impl/schema';\nexport {default as Field} from './impl/field';\nexport {Type} from './impl/type';\nexport {\n  DataType,\n  Null,\n  Bool,\n  Int,\n  Int8,\n  Int16,\n  Int32,\n  Int64,\n  Uint8,\n  Uint16,\n  Uint32,\n  Uint64,\n  Float,\n  Float16,\n  Float32,\n  Float64,\n  Binary,\n  Utf8,\n  Date,\n  DateDay,\n  DateMillisecond,\n  Time,\n  TimeSecond,\n  TimeMillisecond,\n  // TimeMicrosecond,\n  // TimeNanosecond,\n  Timestamp,\n  TimestampSecond,\n  TimestampMillisecond,\n  TimestampMicrosecond,\n  TimestampNanosecond,\n  Interval,\n  IntervalDayTime,\n  IntervalYearMonth,\n  FixedSizeList\n} from './impl/type';\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global' and 'is-browser';\n\n/* eslint-disable no-restricted-globals */\nconst globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document\n};\n\nconst self_: {[key: string]: any} = globals.self || globals.window || globals.global || {};\nconst window_: {[key: string]: any} = globals.window || globals.self || globals.global || {};\nconst global_: {[key: string]: any} = globals.global || globals.self || globals.window || {};\nconst document_: {[key: string]: any} = globals.document || {};\n\nexport {self_ as self, window_ as window, global_ as global, document_ as document};\n\n/** true if running in the browser, false if running in Node.js */\nexport const isBrowser: boolean =\n  // @ts-ignore process.browser\n  typeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n\n/** true if running on a worker thread */\nexport const isWorker: boolean = typeof importScripts === 'function';\n\n/** true if running on a mobile device */\nexport const isMobile: boolean =\n  typeof window !== 'undefined' && typeof window.orientation !== 'undefined';\n\n// Extract node major version\nconst matches =\n  typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\n\n/** Version of Node.js if running under Node, otherwise 0 */\nexport const nodeVersion: number = (matches && parseFloat(matches[1])) || 0;\n","import {assert} from '../env-utils/assert';\nimport {getLoadableWorkerURL} from '../worker-utils/get-loadable-worker-url';\nimport {getTransferList} from '../worker-utils/get-transfer-list';\n\nconst NOOP = () => {};\n\nexport type WorkerThreadProps = {\n  name: string;\n  source?: string;\n  url?: string;\n};\n\n/**\n * Represents one worker thread\n */\nexport default class WorkerThread {\n  readonly name: string;\n  readonly source: string | undefined;\n  readonly url: string | undefined;\n  terminated: boolean = false;\n  worker: Worker;\n  onMessage: (message: any) => void;\n  onError: (error: Error) => void;\n\n  private _loadableURL: string = '';\n\n  static isSupported(): boolean {\n    return typeof Worker !== 'undefined';\n  }\n\n  constructor(props: WorkerThreadProps) {\n    const {name, source, url} = props;\n    assert(source || url); // Either source or url must be defined\n    this.name = name;\n    this.source = source;\n    this.url = url;\n    this.onMessage = NOOP;\n    this.onError = (error) => console.log(error); // eslint-disable-line\n\n    this.worker = this._createBrowserWorker();\n  }\n\n  /**\n   * Terminate this worker thread\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    this.onMessage = NOOP;\n    this.onError = NOOP;\n    // @ts-ignore\n    this.worker.terminate();\n    this.terminated = true;\n  }\n\n  get isRunning() {\n    return Boolean(this.onMessage);\n  }\n\n  /**\n   * Send a message to this worker thread\n   * @param data any data structure, ideally consisting mostly of transferrable objects\n   * @param transferList If not supplied, calculated automatically by traversing data\n   */\n  postMessage(data: any, transferList?: any[]): void {\n    transferList = transferList || getTransferList(data);\n    // @ts-ignore\n    this.worker.postMessage(data, transferList);\n  }\n\n  // PRIVATE\n\n  /**\n   * Generate a standard Error from an ErrorEvent\n   * @param {ErrorEvent} event\n   */\n  _getErrorFromErrorEvent(event) {\n    // Note Error object does not have the expected fields if loading failed completely\n    // https://developer.mozilla.org/en-US/docs/Web/API/Worker#Event_handlers\n    // https://developer.mozilla.org/en-US/docs/Web/API/ErrorEvent\n    let message = 'Failed to load ';\n    message += `worker ${this.name}. `;\n    if (event.message) {\n      message += `${event.message} in `;\n    }\n    // const hasFilename = event.filename && !event.filename.startsWith('blob:');\n    // message += hasFilename ? event.filename : this.source.slice(0, 100);\n    if (event.lineno) {\n      message += `:${event.lineno}:${event.colno}`;\n    }\n    return new Error(message);\n  }\n\n  /**\n   * Creates a worker thread on the browser\n   */\n  _createBrowserWorker() {\n    this._loadableURL = getLoadableWorkerURL({source: this.source, url: this.url});\n    const worker = new Worker(this._loadableURL, {name: this.name});\n\n    worker.onmessage = (event) => {\n      if (!event.data) {\n        this.onError(new Error('No data received'));\n      } else {\n        this.onMessage(event.data);\n      }\n    };\n    // This callback represents an uncaught exception in the worker thread\n    worker.onerror = (error) => {\n      this.onError(this._getErrorFromErrorEvent(error));\n      this.terminated = true;\n    };\n    // TODO - not clear when this would be called, for now just log in case it happens\n    worker.onmessageerror = (event) => console.error(event); // eslint-disable-line\n\n    return worker;\n  }\n}\n","// NOTE - there is a copy of this function is both in core and loader-utils\n// core does not need all the utils in loader-utils, just this one.\n\n/**\n * Returns an array of Transferrable objects that can be used with postMessage\n * https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\n * @param object data to be sent via postMessage\n * @param recursive - not for application use\n * @param transfers - not for application use\n * @returns a transfer list that can be passed to postMessage\n */\nexport function getTransferList(\n  object: any,\n  recursive: boolean = true,\n  transfers?: Set<any>\n): Transferable[] {\n  // Make sure that items in the transfer list is unique\n  const transfersSet = transfers || new Set();\n\n  if (!object) {\n    // ignore\n  } else if (isTransferable(object)) {\n    transfersSet.add(object);\n  } else if (isTransferable(object.buffer)) {\n    // Typed array\n    transfersSet.add(object.buffer);\n  } else if (ArrayBuffer.isView(object)) {\n    // object is a TypeArray viewing into a SharedArrayBuffer (not transferable)\n    // Do not iterate through the content in this case\n  } else if (recursive && typeof object === 'object') {\n    for (const key in object) {\n      // Avoid perf hit - only go one level deep\n      getTransferList(object[key], recursive, transfersSet);\n    }\n  }\n\n  // If transfers is defined, is internal recursive call\n  // Otherwise it's called by the user\n  return transfers === undefined ? Array.from(transfersSet) : [];\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Transferable\nfunction isTransferable(object) {\n  if (!object) {\n    return false;\n  }\n  if (object instanceof ArrayBuffer) {\n    return true;\n  }\n  if (typeof MessagePort !== 'undefined' && object instanceof MessagePort) {\n    return true;\n  }\n  if (typeof ImageBitmap !== 'undefined' && object instanceof ImageBitmap) {\n    return true;\n  }\n  if (typeof OffscreenCanvas !== 'undefined' && object instanceof OffscreenCanvas) {\n    return true;\n  }\n  return false;\n}\n","// COMMON CATEGORY\nexport type {TypedArray, NumberArray, AnyArray} from './types';\n\nexport type {Batch} from './category/common';\n\n// TABLE CATEGORY TYPES\n\nexport type {\n  Table,\n  ArrayRowTable,\n  ObjectRowTable,\n  ColumnarTable,\n  ArrowTable\n} from './category/table';\nexport type {\n  TableBatch,\n  RowArrayTableBatch,\n  RowObjectTableBatch,\n  ColumnarTableBatch,\n  ArrowTableBatch\n} from './category/table';\n\n// TABLE CATEGORY UTILS\nexport {default as TableBatchBuilder} from './lib/table/table-batch-builder';\nexport type {TableBatchAggregator} from './lib/table/table-batch-aggregator';\nexport {default as RowTableBatchAggregator} from './lib/table/row-table-batch-aggregator';\nexport {default as ColumnarTableBatchAggregator} from './lib/table/columnar-table-batch-aggregator';\n\nexport {convertToObjectRow, convertToArrayRow} from './lib/utils/row-utils';\n\n// MESH CATEGORY\nexport type {MeshTable, MeshArrowTable, Mesh, MeshAttribute} from './category/mesh';\n\n// MESH CATEGORY UTILS\nexport type {Attributes as _Attributes} from './category/mesh/mesh-utils';\nexport {getMeshSize, getMeshBoundingBox} from './category/mesh/mesh-utils';\n\n// TYPES\n// GIS CATEGORY - GEOJSON\nexport type {GeoJSON, Feature, Geometry, Position, GeoJsonProperties} from './category/gis';\nexport type {\n  Point,\n  MultiPoint,\n  LineString,\n  MultiLineString,\n  Polygon,\n  MultiPolygon\n} from './category/gis';\n\n// GIS CATEGORY - BINARY\nexport type {\n  BinaryGeometryType,\n  BinaryGeometry,\n  BinaryPointGeometry,\n  BinaryLineGeometry,\n  BinaryPolygonGeometry,\n  BinaryAttribute\n} from './category/gis';\nexport type {\n  BinaryFeatures,\n  BinaryPointFeatures,\n  BinaryLineFeatures,\n  BinaryPolygonFeatures\n} from './category/gis';\n\n// SCHEMA\nexport {\n  Schema,\n  Field,\n  DataType,\n  Null,\n  Binary,\n  Bool,\n  Int,\n  Int8,\n  Int16,\n  Int32,\n  Int64,\n  Uint8,\n  Uint16,\n  Uint32,\n  Uint64,\n  Float,\n  Float16,\n  Float32,\n  Float64,\n  Utf8,\n  Date,\n  DateDay,\n  DateMillisecond,\n  Time,\n  TimeMillisecond,\n  TimeSecond,\n  Timestamp,\n  TimestampSecond,\n  TimestampMillisecond,\n  TimestampMicrosecond,\n  TimestampNanosecond,\n  Interval,\n  IntervalDayTime,\n  IntervalYearMonth,\n  FixedSizeList\n} from './lib/schema';\n\n// SCHEMA UTILS\nexport {deduceTableSchema} from './lib/schema-utils/deduce-table-schema';\nexport {getTypeInfo} from './lib/schema-utils/get-type-info';\nexport {getArrowTypeFromTypedArray} from './lib/schema-utils/type-utils';\n\n// EXPERIMENTAL APIs\nexport {default as AsyncQueue} from './lib/utils/async-queue';\n","import type {Schema} from '../schema';\nimport type {TableBatch} from '../../category/table';\n// import type {ArrayRowTableBatch, ObjectRowTableBatch} from '../../category/table';\nimport {convertToArrayRow, convertToObjectRow} from '../utils/row-utils';\nimport {TableBatchAggregator, TableBatchOptions} from './table-batch-aggregator';\n\nconst DEFAULT_ROW_COUNT = 100;\n\nexport default class RowTableBatchAggregator implements TableBatchAggregator {\n  schema: Schema;\n  options: TableBatchOptions;\n\n  length: number = 0;\n  objectRows: {[columnName: string]: any} | null = null;\n  arrayRows: any[] | null = null;\n  cursor: number = 0;\n  private _headers: string[] = [];\n\n  constructor(schema: Schema, options: TableBatchOptions) {\n    this.options = options;\n    this.schema = schema;\n\n    // schema is an array if there're no headers\n    // object if there are headers\n    if (!Array.isArray(schema)) {\n      this._headers = [];\n      for (const key in schema) {\n        this._headers[schema[key].index] = schema[key].name;\n      }\n    }\n  }\n\n  rowCount(): number {\n    return this.length;\n  }\n\n  addArrayRow(row: any[], cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    // eslint-disable-next-line default-case\n    switch (this.options.shape) {\n      case 'object-row-table':\n        const rowObject = convertToObjectRow(row, this._headers);\n        this.addObjectRow(rowObject, cursor);\n        break;\n      case 'array-row-table':\n        this.arrayRows = this.arrayRows || new Array(DEFAULT_ROW_COUNT);\n        this.arrayRows[this.length] = row;\n        this.length++;\n        break;\n    }\n  }\n\n  addObjectRow(row: {[columnName: string]: any}, cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    // eslint-disable-next-line default-case\n    switch (this.options.shape) {\n      case 'array-row-table':\n        const rowArray = convertToArrayRow(row, this._headers);\n        this.addArrayRow(rowArray, cursor);\n        break;\n      case 'object-row-table':\n        this.objectRows = this.objectRows || new Array(DEFAULT_ROW_COUNT);\n        this.objectRows[this.length] = row;\n        this.length++;\n        break;\n    }\n  }\n\n  getBatch(): TableBatch | null {\n    let rows = this.arrayRows || this.objectRows;\n    if (!rows) {\n      return null;\n    }\n\n    rows = rows.slice(0, this.length);\n    this.arrayRows = null;\n    this.objectRows = null;\n\n    return {\n      shape: this.options.shape,\n      batchType: 'data',\n      data: rows,\n      length: this.length,\n      schema: this.schema,\n      cursor: this.cursor\n    };\n  }\n}\n","/** Convert an object row to an array row */\nexport function convertToObjectRow(\n  arrayRow: any[],\n  headers: string[]\n): {[columnName: string]: any} {\n  if (!arrayRow) {\n    throw new Error('null row');\n  }\n  if (!headers) {\n    throw new Error('no headers');\n  }\n  const objectRow = {};\n  for (let i = 0; i < headers.length; i++) {\n    objectRow[headers[i]] = arrayRow[i];\n  }\n  return objectRow;\n}\n\n/** Convert an object row to an array row */\nexport function convertToArrayRow(\n  objectRow: {[columnName: string]: any},\n  headers: string[]\n): any[] {\n  if (!objectRow) {\n    throw new Error('null row');\n  }\n  if (!headers) {\n    throw new Error('no headers');\n  }\n  const arrayRow = new Array(headers.length);\n  for (let i = 0; i < headers.length; i++) {\n    arrayRow[i] = objectRow[headers[i]];\n  }\n  return arrayRow;\n}\n","import type {Schema} from '../schema';\nimport type {ColumnarTableBatch, ArrowTableBatch} from '../../category/table';\nimport {TableBatchAggregator} from './table-batch-aggregator';\n\ntype ColumnarTableBatchOptions = {};\n\nconst DEFAULT_ROW_COUNT = 100;\n\nexport default class ColumnarTableBatchAggregator implements TableBatchAggregator {\n  schema: Schema;\n  length: number = 0;\n  allocated: number = 0;\n  columns: {[columnName: string]: any[]} = {};\n\n  constructor(schema: Schema, options: ColumnarTableBatchOptions) {\n    this.schema = schema;\n    this._reallocateColumns();\n  }\n\n  rowCount(): number {\n    return this.length;\n  }\n\n  addArrayRow(row: any[]) {\n    // If user keeps pushing rows beyond batch size, reallocate\n    this._reallocateColumns();\n    let i = 0;\n    // TODO what if no csv header, columns not populated?\n    for (const fieldName in this.columns) {\n      this.columns[fieldName][this.length] = row[i++];\n    }\n    this.length++;\n  }\n\n  addObjectRow(row: {[columnName: string]: any}): void {\n    // If user keeps pushing rows beyond batch size, reallocate\n    this._reallocateColumns();\n    for (const fieldName in row) {\n      this.columns[fieldName][this.length] = row[fieldName];\n    }\n    this.length++;\n  }\n\n  getBatch(): ColumnarTableBatch | ArrowTableBatch | null {\n    this._pruneColumns();\n    const columns = Array.isArray(this.schema) ? this.columns : {};\n\n    // schema is an array if there're no headers\n    // object if there are headers\n    // columns should match schema format\n    if (!Array.isArray(this.schema)) {\n      for (const fieldName in this.schema) {\n        const field = this.schema[fieldName];\n        columns[field.name] = this.columns[field.index];\n      }\n    }\n\n    this.columns = {};\n\n    const batch: ColumnarTableBatch = {\n      shape: 'columnar-table',\n      batchType: 'data',\n      data: columns,\n      schema: this.schema,\n      length: this.length\n    };\n\n    return batch;\n  }\n\n  // HELPERS\n\n  _reallocateColumns() {\n    if (this.length < this.allocated) {\n      return;\n    }\n\n    // @ts-ignore TODO\n    this.allocated = this.allocated > 0 ? (this.allocated *= 2) : DEFAULT_ROW_COUNT;\n    this.columns = {};\n\n    for (const fieldName in this.schema) {\n      const field = this.schema[fieldName];\n      const ArrayType = field.type || Float32Array;\n      const oldColumn = this.columns[field.index];\n\n      if (oldColumn && ArrayBuffer.isView(oldColumn)) {\n        // Copy the old data to the new array\n        const typedArray = new ArrayType(this.allocated);\n        typedArray.set(oldColumn);\n        this.columns[field.index] = typedArray;\n      } else if (oldColumn) {\n        // Plain array\n        oldColumn.length = this.allocated;\n        this.columns[field.index] = oldColumn;\n      } else {\n        // Create new\n        this.columns[field.index] = new ArrayType(this.allocated);\n      }\n    }\n  }\n\n  _pruneColumns() {\n    for (const [columnName, column] of Object.entries(this.columns)) {\n      this.columns[columnName] = column.slice(0, this.length);\n    }\n  }\n}\n","import {concatenateTypedArrays} from '@loaders.gl/loader-utils';\n\n/**\n * Add skirt to existing mesh\n * @param {object} attributes - POSITION and TEXCOOD_0 attributes data\n * @param {any} triangles - indices array of the mesh geometry\n * @param {number} skirtHeight - height of the skirt geometry\n * @param {object} outsideIndices - edge indices from quantized mesh data\n * @returns - geometry data with added skirt\n */\nexport function addSkirt(attributes, triangles, skirtHeight, outsideIndices = null) {\n  const outsideEdges = outsideIndices\n    ? getOutsideEdgesFromIndices(outsideIndices, attributes.POSITION.value)\n    : getOutsideEdgesFromTriangles(triangles);\n\n  // 2 new vertices for each outside edge\n  const newPosition = new attributes.POSITION.value.constructor(outsideEdges.length * 6);\n  const newTexcoord0 = new attributes.TEXCOORD_0.value.constructor(outsideEdges.length * 4);\n\n  // 2 new triangles for each outside edge\n  const newTriangles = new triangles.constructor(outsideEdges.length * 6);\n\n  for (let i = 0; i < outsideEdges.length; i++) {\n    const edge = outsideEdges[i];\n\n    updateAttributesForNewEdge({\n      edge,\n      edgeIndex: i,\n      attributes,\n      skirtHeight,\n      newPosition,\n      newTexcoord0,\n      newTriangles\n    });\n  }\n\n  attributes.POSITION.value = concatenateTypedArrays(attributes.POSITION.value, newPosition);\n  attributes.TEXCOORD_0.value = concatenateTypedArrays(attributes.TEXCOORD_0.value, newTexcoord0);\n  const resultTriangles =\n    triangles instanceof Array\n      ? triangles.concat(newTriangles)\n      : concatenateTypedArrays(triangles, newTriangles);\n\n  return {\n    attributes,\n    triangles: resultTriangles\n  };\n}\n\n/**\n * Get geometry edges that located on a border of the mesh\n * @param {any} triangles - indices array of the mesh geometry\n * @returns {number[][]} - outside edges data\n */\nfunction getOutsideEdgesFromTriangles(triangles) {\n  const edges = [];\n  for (let i = 0; i < triangles.length; i += 3) {\n    edges.push([triangles[i], triangles[i + 1]]);\n    edges.push([triangles[i + 1], triangles[i + 2]]);\n    edges.push([triangles[i + 2], triangles[i]]);\n  }\n\n  edges.sort((a, b) => Math.min(...a) - Math.min(...b) || Math.max(...a) - Math.max(...b));\n\n  const outsideEdges = [];\n  let index = 1;\n  while (index < edges.length) {\n    if (edges[index][0] === edges[index - 1][1] && edges[index][1] === edges[index - 1][0]) {\n      index += 2;\n    } else {\n      outsideEdges.push(edges[index - 1]);\n      index++;\n    }\n  }\n  return outsideEdges;\n}\n\n/**\n * Get geometry edges that located on a border of the mesh\n * @param {object} indices - edge indices from quantized mesh data\n * @param {TypedArray} position - position attribute geometry data\n * @returns {number[][]} - outside edges data\n */\nfunction getOutsideEdgesFromIndices(indices, position) {\n  // Sort skirt indices to create adjacent triangles\n  indices.westIndices.sort((a, b) => position[3 * a + 1] - position[3 * b + 1]);\n  // Reverse (b - a) to match triangle winding\n  indices.eastIndices.sort((a, b) => position[3 * b + 1] - position[3 * a + 1]);\n  indices.southIndices.sort((a, b) => position[3 * b] - position[3 * a]);\n  // Reverse (b - a) to match triangle winding\n  indices.northIndices.sort((a, b) => position[3 * a] - position[3 * b]);\n\n  const edges = [];\n  for (const index in indices) {\n    const indexGroup = indices[index];\n    for (let i = 0; i < indexGroup.length - 1; i++) {\n      edges.push([indexGroup[i], indexGroup[i + 1]]);\n    }\n  }\n  return edges;\n}\n\n/**\n * Get geometry edges that located on a border of the mesh\n * @param {object} args\n * @param {number[]} args.edge - edge indices in geometry\n * @param {number} args.edgeIndex - edge index in outsideEdges array\n * @param {object} args.attributes - POSITION and TEXCOORD_0 attributes\n * @param {number} args.skirtHeight - height of the skirt geometry\n * @param {TypedArray} args.newPosition - POSITION array for skirt data\n * @param {TypedArray} args.newTexcoord0 - TEXCOORD_0 array for skirt data\n * @param {TypedArray | Array} args.newTriangles - trinagle indices array for skirt data\n * @returns {void}\n */\nfunction updateAttributesForNewEdge({\n  edge,\n  edgeIndex,\n  attributes,\n  skirtHeight,\n  newPosition,\n  newTexcoord0,\n  newTriangles\n}) {\n  const positionsLength = attributes.POSITION.value.length;\n  const vertex1Offset = edgeIndex * 2;\n  const vertex2Offset = edgeIndex * 2 + 1;\n\n  // Define POSITION for new 1st vertex\n  newPosition.set(\n    attributes.POSITION.value.subarray(edge[0] * 3, edge[0] * 3 + 3),\n    vertex1Offset * 3\n  );\n  newPosition[vertex1Offset * 3 + 2] = newPosition[vertex1Offset * 3 + 2] - skirtHeight; // put down elevation on the skirt height\n\n  // Define POSITION for new 2nd vertex\n  newPosition.set(\n    attributes.POSITION.value.subarray(edge[1] * 3, edge[1] * 3 + 3),\n    vertex2Offset * 3\n  );\n  newPosition[vertex2Offset * 3 + 2] = newPosition[vertex2Offset * 3 + 2] - skirtHeight; // put down elevation on the skirt height\n\n  // Use same TEXCOORDS for skirt vertices\n  newTexcoord0.set(\n    attributes.TEXCOORD_0.value.subarray(edge[0] * 2, edge[0] * 2 + 2),\n    vertex1Offset * 2\n  );\n  newTexcoord0.set(\n    attributes.TEXCOORD_0.value.subarray(edge[1] * 2, edge[1] * 2 + 2),\n    vertex2Offset * 2\n  );\n\n  // Define new triangles\n  const triangle1Offset = edgeIndex * 2 * 3;\n  newTriangles[triangle1Offset] = edge[0];\n  newTriangles[triangle1Offset + 1] = edge[1];\n  newTriangles[triangle1Offset + 2] = positionsLength / 3 + vertex2Offset;\n\n  newTriangles[triangle1Offset + 3] = positionsLength / 3 + vertex2Offset;\n  newTriangles[triangle1Offset + 4] = positionsLength / 3 + vertex1Offset;\n  newTriangles[triangle1Offset + 5] = edge[0];\n}\n","/**\n * Throws an `Error` with the optional `message` if `condition` is falsy\n * @note Replacement for the external assert method to reduce bundle size\n */\nexport function assert(condition: any, message?: string): void {\n  if (!condition) {\n    throw new Error(message || 'loader assertion failed.');\n  }\n}\n","import type {WorkerObject} from './types';\nimport {VERSION} from './lib/env-utils/version';\n\n// TYPES\nexport type {\n  WorkerObject,\n  WorkerOptions,\n  // Protocol\n  WorkerMessage,\n  WorkerMessageType,\n  WorkerMessageData,\n  WorkerMessagePayload\n} from './types';\n\n// GENERAL UTILS\nexport {assert} from './lib/env-utils/assert';\nexport {isBrowser, isWorker} from './lib/env-utils/globals';\n\n// WORKER UTILS - TYPES\nexport {default as WorkerJob} from './lib/worker-farm/worker-job';\nexport {default as WorkerThread} from './lib/worker-farm/worker-thread';\n\n// WORKER FARMS\nexport {default as WorkerFarm} from './lib/worker-farm/worker-farm';\nexport {default as WorkerPool} from './lib/worker-farm/worker-pool';\nexport {default as WorkerBody} from './lib/worker-farm/worker-body';\n\nexport {processOnWorker, canProcessOnWorker} from './lib/worker-api/process-on-worker';\nexport {createWorker} from './lib/worker-api/create-worker';\n\n// WORKER UTILS - EXPORTS\nexport {getWorkerURL} from './lib/worker-api/get-worker-url';\nexport {validateWorkerVersion} from './lib/worker-api/validate-worker-version';\nexport {getTransferList} from './lib/worker-utils/get-transfer-list';\n\n// LIBRARY UTILS\nexport {getLibraryUrl, loadLibrary} from './lib/library-utils/library-utils';\n\n// PARSER UTILS\nexport {default as AsyncQueue} from './lib/async-queue/async-queue';\n\n// PROCESS UTILS\nexport {default as ChildProcessProxy} from './lib/process-utils/child-process-proxy';\n\n// WORKER OBJECTS\n\n/** A null worker to test that worker processing is functional */\nexport const NullWorker: WorkerObject = {\n  id: 'null',\n  name: 'null',\n  module: 'worker-utils',\n  version: VERSION,\n  options: {\n    null: {}\n  }\n};\n","import type {WorkerMessageType, WorkerMessagePayload} from '../../types';\nimport WorkerThread from './worker-thread';\nimport {assert} from '../env-utils/assert';\n\n/**\n * Represents one Job handled by a WorkerPool or WorkerFarm\n */\nexport default class WorkerJob {\n  readonly name: string;\n  readonly workerThread: WorkerThread;\n  isRunning: boolean;\n  /** Promise that resolves when Job is done */\n  readonly result: Promise<any>;\n\n  private _resolve: (value: any) => void;\n  private _reject: (reason?: any) => void;\n\n  constructor(jobName: string, workerThread: WorkerThread) {\n    this.name = jobName;\n    this.workerThread = workerThread;\n    this.isRunning = true;\n    this._resolve = () => {};\n    this._reject = () => {};\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  /**\n   * Send a message to the job's worker thread\n   * @param data any data structure, ideally consisting mostly of transferrable objects\n   */\n  postMessage(type: WorkerMessageType, payload: WorkerMessagePayload): void {\n    this.workerThread.postMessage({\n      source: 'loaders.gl', // Lets worker ignore unrelated messages\n      type,\n      payload\n    });\n  }\n\n  /**\n   * Call to resolve the `result` Promise with the supplied value\n   */\n  done(value): void {\n    assert(this.isRunning);\n    this.isRunning = false;\n    this._resolve(value);\n  }\n\n  /**\n   * Call to reject the `result` Promise with the supplied error\n   */\n  error(error): void {\n    assert(this.isRunning);\n    this.isRunning = false;\n    this._reject(error);\n  }\n}\n","import WorkerPool from './worker-pool';\nimport WorkerThread from './worker-thread';\n\n/**\n * @param maxConcurrency {number} - max count of workers\n */\nexport type WorkerFarmProps = {\n  maxConcurrency?: number;\n  maxMobileConcurrency?: number;\n  reuseWorkers?: boolean;\n  onDebug?: () => void;\n};\n\nconst DEFAULT_PROPS: WorkerFarmProps = {\n  maxConcurrency: 3,\n  maxMobileConcurrency: 1,\n  onDebug: () => {},\n  reuseWorkers: true\n};\n\n/**\n * Process multiple jobs with a \"farm\" of different workers in worker pools.\n */\nexport default class WorkerFarm {\n  private props: WorkerFarmProps;\n  private workerPools = new Map<string, WorkerPool>();\n  // singleton\n  private static _workerFarm?: WorkerFarm;\n\n  /** Check if Workers are supported */\n  static isSupported(): boolean {\n    return WorkerThread.isSupported();\n  }\n\n  /** Get the singleton instance of the global worker farm */\n  static getWorkerFarm(props: WorkerFarmProps = {}): WorkerFarm {\n    WorkerFarm._workerFarm = WorkerFarm._workerFarm || new WorkerFarm({});\n    WorkerFarm._workerFarm.setProps(props);\n    return WorkerFarm._workerFarm;\n  }\n\n  /** get global instance with WorkerFarm.getWorkerFarm() */\n  private constructor(props: WorkerFarmProps) {\n    this.props = {...DEFAULT_PROPS};\n    this.setProps(props);\n    /** @type Map<string, WorkerPool>} */\n    this.workerPools = new Map();\n  }\n\n  /**\n   * Terminate all workers in the farm\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    for (const workerPool of this.workerPools.values()) {\n      workerPool.destroy();\n    }\n  }\n\n  /**\n   * Set props used when initializing worker pools\n   * @param props\n   */\n  setProps(props: WorkerFarmProps): void {\n    this.props = {...this.props, ...props};\n    // Update worker pool props\n    for (const workerPool of this.workerPools.values()) {\n      workerPool.setProps(this._getWorkerPoolProps());\n    }\n  }\n\n  /**\n   * Returns a worker pool for the specified worker\n   * @param options - only used first time for a specific worker name\n   * @param options.name - the name of the worker - used to identify worker pool\n   * @param options.url -\n   * @param options.source -\n   * @example\n   *   const job = WorkerFarm.getWorkerFarm().getWorkerPool({name, url}).startJob(...);\n   */\n  getWorkerPool(options: {name: string; source?: string; url?: string}): WorkerPool {\n    const {name, source, url} = options;\n    let workerPool = this.workerPools.get(name);\n    if (!workerPool) {\n      workerPool = new WorkerPool({\n        name,\n        source,\n        url\n      });\n      workerPool.setProps(this._getWorkerPoolProps());\n      this.workerPools.set(name, workerPool);\n    }\n    return workerPool;\n  }\n\n  _getWorkerPoolProps() {\n    return {\n      maxConcurrency: this.props.maxConcurrency,\n      maxMobileConcurrency: this.props.maxMobileConcurrency,\n      reuseWorkers: this.props.reuseWorkers,\n      onDebug: this.props.onDebug\n    };\n  }\n}\n","import type {WorkerMessageType, WorkerMessagePayload} from '../../types';\nimport {isMobile} from '../env-utils/globals';\nimport WorkerThread from './worker-thread';\nimport WorkerJob from './worker-job';\n\n/** WorkerPool onDebug Callback Parameters */\ntype OnDebugParameters = {\n  message: string;\n  worker: string;\n  name: string;\n  job: string;\n  backlog: number;\n  workerThread: WorkerThread;\n};\n\n/** WorkerPool Properties */\nexport type WorkerPoolProps = {\n  name?: string;\n  source?: string; // | Function;\n  url?: string;\n  maxConcurrency?: number;\n  maxMobileConcurrency?: number;\n  onDebug?: (options: OnDebugParameters) => any;\n  reuseWorkers?: boolean;\n};\n\n/** Private helper types */\ntype OnMessage = (job: WorkerJob, type: WorkerMessageType, payload: WorkerMessagePayload) => void;\ntype OnError = (job: WorkerJob, error: Error) => void;\n\ntype QueuedJob = {\n  name: string;\n  onMessage: OnMessage;\n  onError: OnError;\n  onStart: (value: any) => void; // Resolve job start promise\n};\n\n/**\n * Process multiple data messages with small pool of identical workers\n */\nexport default class WorkerPool {\n  name: string = 'unnamed';\n  source?: string; // | Function;\n  url?: string;\n  maxConcurrency: number = 1;\n  maxMobileConcurrency: number = 1;\n  onDebug: (options: OnDebugParameters) => any = () => {};\n  reuseWorkers: boolean = true;\n\n  private props: WorkerPoolProps = {};\n  private jobQueue: QueuedJob[] = [];\n  private idleQueue: WorkerThread[] = [];\n  private count = 0;\n  private isDestroyed = false;\n\n  /**\n   * @param processor - worker function\n   * @param maxConcurrency - max count of workers\n   */\n  constructor(props: WorkerPoolProps) {\n    this.source = props.source;\n    this.url = props.url;\n    this.setProps(props);\n  }\n\n  /**\n   * Terminates all workers in the pool\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    // Destroy idle workers, active Workers will be destroyed on completion\n    this.idleQueue.forEach((worker) => worker.destroy());\n    this.isDestroyed = true;\n  }\n\n  setProps(props: WorkerPoolProps) {\n    this.props = {...this.props, ...props};\n\n    if (props.name !== undefined) {\n      this.name = props.name;\n    }\n    if (props.maxConcurrency !== undefined) {\n      this.maxConcurrency = props.maxConcurrency;\n    }\n    if (props.maxMobileConcurrency !== undefined) {\n      this.maxMobileConcurrency = props.maxMobileConcurrency;\n    }\n    if (props.reuseWorkers !== undefined) {\n      this.reuseWorkers = props.reuseWorkers;\n    }\n    if (props.onDebug !== undefined) {\n      this.onDebug = props.onDebug;\n    }\n  }\n\n  async startJob(\n    name: string,\n    onMessage: OnMessage = (job, type, data) => job.done(data),\n    onError: OnError = (job, error) => job.error(error)\n  ): Promise<WorkerJob> {\n    // Promise resolves when thread starts working on this job\n    const startPromise = new Promise<WorkerJob>((onStart) => {\n      // Promise resolves when thread completes or fails working on this job\n      this.jobQueue.push({name, onMessage, onError, onStart});\n      return this;\n    });\n    this._startQueuedJob(); // eslint-disable-line @typescript-eslint/no-floating-promises\n    return await startPromise;\n  }\n\n  // PRIVATE\n\n  /**\n   * Starts first queued job if worker is available or can be created\n   * Called when job is started and whenever a worker returns to the idleQueue\n   */\n  async _startQueuedJob(): Promise<void> {\n    if (!this.jobQueue.length) {\n      return;\n    }\n\n    const workerThread = this._getAvailableWorker();\n    if (!workerThread) {\n      return;\n    }\n\n    // We have a worker, dequeue and start the job\n    const queuedJob = this.jobQueue.shift();\n    if (queuedJob) {\n      // Emit a debug event\n      // @ts-ignore\n      this.onDebug({\n        message: 'Starting job',\n        name: queuedJob.name,\n        workerThread,\n        backlog: this.jobQueue.length\n      });\n\n      // Create a worker job to let the app access thread and manage job completion\n      const job = new WorkerJob(queuedJob.name, workerThread);\n\n      // Set the worker thread's message handlers\n      workerThread.onMessage = (data) => queuedJob.onMessage(job, data.type, data.payload);\n      workerThread.onError = (error) => queuedJob.onError(job, error);\n\n      // Resolve the start promise so that the app can start sending messages to worker\n      queuedJob.onStart(job);\n\n      // Wait for the app to signal that the job is complete, then return worker to queue\n      try {\n        await job.result;\n      } finally {\n        this.returnWorkerToQueue(workerThread);\n      }\n    }\n  }\n\n  /**\n   * Returns a worker to the idle queue\n   * Destroys the worker if\n   *  - pool is destroyed\n   *  - if this pool doesn't reuse workers\n   *  - if maxConcurrency has been lowered\n   * @param worker\n   */\n  returnWorkerToQueue(worker: WorkerThread) {\n    const shouldDestroyWorker =\n      this.isDestroyed || !this.reuseWorkers || this.count > this._getMaxConcurrency();\n\n    if (shouldDestroyWorker) {\n      worker.destroy();\n      this.count--;\n    } else {\n      this.idleQueue.push(worker);\n    }\n\n    if (!this.isDestroyed) {\n      this._startQueuedJob(); // eslint-disable-line @typescript-eslint/no-floating-promises\n    }\n  }\n\n  /**\n   * Returns idle worker or creates new worker if maxConcurrency has not been reached\n   */\n  _getAvailableWorker(): WorkerThread | null {\n    // If a worker has completed and returned to the queue, it can be used\n    if (this.idleQueue.length > 0) {\n      return this.idleQueue.shift() || null;\n    }\n\n    // Create fresh worker if we haven't yet created the max amount of worker threads for this worker source\n    if (this.count < this._getMaxConcurrency()) {\n      this.count++;\n      const name = `${this.name.toLowerCase()} (#${this.count} of ${this.maxConcurrency})`;\n      return new WorkerThread({name, source: this.source, url: this.url});\n    }\n\n    // No worker available, have to wait\n    return null;\n  }\n\n  _getMaxConcurrency() {\n    return isMobile ? this.maxMobileConcurrency : this.maxConcurrency;\n  }\n}\n","import type {WorkerMessageData, WorkerMessageType, WorkerMessagePayload} from '../../types';\nimport {getTransferList} from '../worker-utils/get-transfer-list';\n\nconst onMessageWrapperMap = new Map();\n\n/**\n * Type safe wrapper for worker code\n */\nexport default class WorkerBody {\n  /*\n   * (type: WorkerMessageType, payload: WorkerMessagePayload) => any\n   */\n  static set onmessage(onMessage: (type: WorkerMessageType, payload: WorkerMessagePayload) => any) {\n    // eslint-disable-next-line no-restricted-globals\n    self.onmessage = (message) => {\n      if (!isKnownMessage(message)) {\n        return;\n      }\n\n      // Confusingly the message itself also has a 'type' field which is always set to 'message'\n      const {type, payload} = message.data;\n      onMessage(type, payload);\n    };\n  }\n\n  static addEventListener(\n    onMessage: (type: WorkerMessageType, payload: WorkerMessagePayload) => any\n  ) {\n    let onMessageWrapper = onMessageWrapperMap.get(onMessage);\n\n    if (!onMessageWrapper) {\n      onMessageWrapper = (message) => {\n        if (!isKnownMessage(message)) {\n          return;\n        }\n\n        // Confusingly the message itself also has a 'type' field which is always set to 'message'\n        const {type, payload} = message.data;\n        onMessage(type, payload);\n      };\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    self.addEventListener('message', onMessageWrapper);\n  }\n\n  static removeEventListener(\n    onMessage: (type: WorkerMessageType, payload: WorkerMessagePayload) => any\n  ) {\n    const onMessageWrapper = onMessageWrapperMap.get(onMessage);\n    onMessageWrapperMap.delete(onMessage);\n    // eslint-disable-next-line no-restricted-globals\n    self.removeEventListener('message', onMessageWrapper);\n  }\n\n  /**\n   * Send a message from a worker to creating thread (main thread)\n   * @param type\n   * @param payload\n   */\n  static postMessage(type: WorkerMessageType, payload: WorkerMessagePayload): void {\n    if (self) {\n      const data: WorkerMessageData = {source: 'loaders.gl', type, payload};\n      const transferList = getTransferList(payload);\n      // eslint-disable-next-line no-restricted-globals\n      // @ts-ignore\n      self.postMessage(data, transferList);\n    }\n  }\n}\n\n// Filter out noise messages sent to workers\nfunction isKnownMessage(message) {\n  const {type, data} = message;\n  return (\n    type === 'message' &&\n    data &&\n    typeof data.source === 'string' &&\n    data.source.startsWith('loaders.gl')\n  );\n}\n","import type {WorkerObject, WorkerOptions} from '../../types';\nimport {assert} from '../env-utils/assert';\nimport {VERSION as __VERSION__} from '../env-utils/version';\n\nconst NPM_TAG = 'latest';\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : NPM_TAG;\n\n/**\n * Gets worker object's name (for debugging in Chrome thread inspector window)\n */\nexport function getWorkerName(worker: WorkerObject): string {\n  const warning = worker.version !== VERSION ? ` (worker-utils@${VERSION})` : '';\n  return `${worker.name}@${worker.version}${warning}`;\n}\n\n/**\n * Generate a worker URL based on worker object and options\n * @returns A URL to one of the following:\n * - a published worker on unpkg CDN\n * - a local test worker\n * - a URL provided by the user in options\n */\nexport function getWorkerURL(worker: WorkerObject, options: WorkerOptions = {}): string {\n  const workerOptions = options[worker.id] || {};\n\n  const workerFile = `${worker.id}-worker.js`;\n\n  let url = workerOptions.workerUrl;\n\n  // If URL is test, generate local loaders.gl url\n  // @ts-ignore _workerType\n  if (options._workerType === 'test') {\n    url = `modules/${worker.module}/dist/${workerFile}`;\n  }\n\n  // If url override is not provided, generate a URL to published version on npm CDN unpkg.com\n  if (!url) {\n    // GENERATE\n    let version = worker.version;\n    // On master we need to load npm alpha releases published with the `beta` tag\n    if (version === 'latest') {\n      // throw new Error('latest worker version specified');\n      version = NPM_TAG;\n    }\n    const versionTag = version ? `@${version}` : '';\n    url = `https://unpkg.com/@loaders.gl/${worker.module}${versionTag}/dist/${workerFile}`;\n  }\n\n  assert(url);\n\n  // Allow user to override location\n  return url;\n}\n","// From https://github.com/rauschma/async-iter-demo/tree/master/src under MIT license\n// http://2ality.com/2016/10/asynchronous-iteration.html\n\n/**\n * Async Queue\n * - AsyncIterable: An async iterator can be\n * - Values can be pushed onto the queue\n * @example\n *   const asyncQueue = new AsyncQueue();\n *   setTimeout(() => asyncQueue.enqueue('tick'), 1000);\n *   setTimeout(() => asyncQueue.enqueue(new Error('done')), 10000);\n *   for await (const value of asyncQueue) {\n *     console.log(value); // tick\n *   }\n */\nexport default class AsyncQueue<T> {\n  private _values: any[];\n  private _settlers: any[];\n  private _closed: boolean;\n\n  constructor() {\n    this._values = []; // enqueues > dequeues\n    this._settlers = []; // dequeues > enqueues\n    this._closed = false;\n  }\n\n  /** Return an async iterator for this queue */\n  [Symbol.asyncIterator](): AsyncIterator<T> {\n    return this;\n  }\n\n  /** Push a new value - the async iterator will yield a promise resolved to this value */\n  push(value: T): void {\n    return this.enqueue(value);\n  }\n\n  /**\n   * Push a new value - the async iterator will yield a promise resolved to this value\n   * Add an error - the async iterator will yield a promise rejected with this value\n   */\n  enqueue(value: T | Error): void {\n    if (this._closed) {\n      throw new Error('Closed');\n    }\n\n    if (this._settlers.length > 0) {\n      if (this._values.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      const settler = this._settlers.shift();\n      if (value instanceof Error) {\n        settler.reject(value);\n      } else {\n        settler.resolve({value});\n      }\n    } else {\n      this._values.push(value);\n    }\n  }\n\n  /** Indicate that we not waiting for more values - The async iterator will be done */\n  close(): void {\n    while (this._settlers.length > 0) {\n      const settler = this._settlers.shift();\n      settler.resolve({done: true});\n    }\n    this._closed = true;\n  }\n\n  // ITERATOR IMPLEMENTATION\n\n  /** @returns a Promise for an IteratorResult */\n  next(): Promise<IteratorResult<T, any>> {\n    // If values in queue, yield the first value\n    if (this._values.length > 0) {\n      const value = this._values.shift();\n      if (value instanceof Error) {\n        return Promise.reject(value);\n      }\n      return Promise.resolve({done: false, value});\n    }\n\n    // If queue is closed, the iterator is done\n    if (this._closed) {\n      if (this._settlers.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      return Promise.resolve({done: true, value: undefined});\n    }\n\n    // Yield a promise that waits for new values to be enqueued\n    return new Promise((resolve, reject) => {\n      this._settlers.push({resolve, reject});\n    });\n  }\n}\n","export function getFirstCharacters(data, length = 5): string {\n  if (typeof data === 'string') {\n    return data.slice(0, length);\n  } else if (ArrayBuffer.isView(data)) {\n    // Typed Arrays can have offsets into underlying buffer\n    return getMagicString(data.buffer, data.byteOffset, length);\n  } else if (data instanceof ArrayBuffer) {\n    const byteOffset = 0;\n    return getMagicString(data, byteOffset, length);\n  }\n  return '';\n}\n\nexport function getMagicString(\n  arrayBuffer: ArrayBuffer,\n  byteOffset: number,\n  length: number\n): string {\n  if (arrayBuffer.byteLength <= byteOffset + length) {\n    return '';\n  }\n  const dataView = new DataView(arrayBuffer);\n  let magic = '';\n  for (let i = 0; i < length; i++) {\n    magic += String.fromCharCode(dataView.getUint8(byteOffset + i));\n  }\n  return magic;\n}\n","import {TypedArray} from '../../types';\nimport * as node from '../node/buffer-utils.node';\n\n/**\n * Convert an object to an array buffer\n */\nexport function toArrayBuffer(data: any): ArrayBuffer {\n  // Note: Should be called first, Buffers can trigger other detections below\n  if (node.toArrayBuffer) {\n    // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n    data = node.toArrayBuffer(data);\n  }\n\n  if (data instanceof ArrayBuffer) {\n    return data;\n  }\n\n  // Careful - Node Buffers will look like ArrayBuffers (keep after isBuffer)\n  if (ArrayBuffer.isView(data)) {\n    return data.buffer;\n  }\n\n  if (typeof data === 'string') {\n    const text = data;\n    const uint8Array = new TextEncoder().encode(text);\n    return uint8Array.buffer;\n  }\n\n  // HACK to support Blob polyfill\n  if (data && typeof data === 'object' && data._toArrayBuffer) {\n    return data._toArrayBuffer();\n  }\n\n  throw new Error('toArrayBuffer');\n}\n\n/**\n * compare two binary arrays for equality\n * @param {ArrayBuffer} a\n * @param {ArrayBuffer} b\n * @param {number} byteLength\n */\nexport function compareArrayBuffers(\n  arrayBuffer1: ArrayBuffer,\n  arrayBuffer2: ArrayBuffer,\n  byteLength?: number\n): boolean {\n  byteLength = byteLength || arrayBuffer1.byteLength;\n  if (arrayBuffer1.byteLength < byteLength || arrayBuffer2.byteLength < byteLength) {\n    return false;\n  }\n  const array1 = new Uint8Array(arrayBuffer1);\n  const array2 = new Uint8Array(arrayBuffer2);\n  for (let i = 0; i < array1.length; ++i) {\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Concatenate a sequence of ArrayBuffers\n * @return A concatenated ArrayBuffer\n */\nexport function concatenateArrayBuffers(...sources: (ArrayBuffer | Uint8Array)[]): ArrayBuffer {\n  // Make sure all inputs are wrapped in typed arrays\n  const sourceArrays = sources.map((source2) =>\n    source2 instanceof ArrayBuffer ? new Uint8Array(source2) : source2\n  );\n\n  // Get length of all inputs\n  const byteLength = sourceArrays.reduce((length, typedArray) => length + typedArray.byteLength, 0);\n\n  // Allocate array with space for all inputs\n  const result = new Uint8Array(byteLength);\n\n  // Copy the subarrays\n  let offset = 0;\n  for (const sourceArray of sourceArrays) {\n    result.set(sourceArray, offset);\n    offset += sourceArray.byteLength;\n  }\n\n  // We work with ArrayBuffers, discard the typed array wrapper\n  return result.buffer;\n}\n\n/**\n * Concatenate arbitrary count of typed arrays\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays\n * @param {...*} arrays - list of arrays. All arrays should be the same type\n * @return A concatenated TypedArray\n */\nexport function concatenateTypedArrays<T>(...typedArrays: T[]): T {\n  // @ts-ignore\n  const arrays = typedArrays as TypedArray[];\n  // @ts-ignore\n  const TypedArrayConstructor = (arrays && arrays.length > 1 && arrays[0].constructor) || null;\n  if (!TypedArrayConstructor) {\n    throw new Error(\n      '\"concatenateTypedArrays\" - incorrect quantity of arguments or arguments have incompatible data types'\n    );\n  }\n\n  const sumLength = arrays.reduce((acc, value) => acc + value.length, 0);\n  // @ts-ignore typescript does not like dynamic constructors\n  const result = new TypedArrayConstructor(sumLength);\n  let offset = 0;\n  for (const array of arrays) {\n    result.set(array, offset);\n    offset += array.length;\n  }\n  return result;\n}\n\n/**\n * Copy a view of an ArrayBuffer into new ArrayBuffer with byteOffset = 0\n * @param arrayBuffer\n * @param byteOffset\n * @param byteLength\n */\nexport function sliceArrayBuffer(\n  arrayBuffer: ArrayBuffer,\n  byteOffset: number,\n  byteLength?: number\n): ArrayBuffer {\n  const subArray =\n    byteLength !== undefined\n      ? new Uint8Array(arrayBuffer).subarray(byteOffset, byteOffset + byteLength)\n      : new Uint8Array(arrayBuffer).subarray(byteOffset);\n  const arrayCopy = new Uint8Array(subArray);\n  return arrayCopy.buffer;\n}\n","import {assert} from '../env-utils/assert';\n\n/**\n * Calculate new size of an arrayBuffer to be aligned to an n-byte boundary\n * This function increases `byteLength` by the minimum delta,\n * allowing the total length to be divided by `padding`\n * @param byteLength\n * @param padding\n */\nexport function padToNBytes(byteLength: number, padding: number): number {\n  assert(byteLength >= 0); // `Incorrect 'byteLength' value: ${byteLength}`\n  assert(padding > 0); // `Incorrect 'padding' value: ${padding}`\n  return (byteLength + (padding - 1)) & ~(padding - 1);\n}\n\n/**\n * Creates a new Uint8Array based on two different ArrayBuffers\n * @param targetBuffer The first buffer.\n * @param sourceBuffer The second buffer.\n * @return The new ArrayBuffer created out of the two.\n */\nexport function copyArrayBuffer(\n  targetBuffer: ArrayBuffer,\n  sourceBuffer: ArrayBuffer,\n  byteOffset: number,\n  byteLength: number = sourceBuffer.byteLength\n): ArrayBuffer {\n  const targetArray = new Uint8Array(targetBuffer, byteOffset, byteLength);\n  const sourceArray = new Uint8Array(sourceBuffer);\n  targetArray.set(sourceArray);\n  return targetBuffer;\n}\n\n/**\n * Copy from source to target at the targetOffset\n *\n * @param source - The data to copy\n * @param target - The destination to copy data into\n * @param targetOffset - The start offset into target to place the copied data\n * @returns the new offset taking into account proper padding\n */\nexport function copyToArray(source: ArrayBuffer | any, target: any, targetOffset: number): number {\n  let sourceArray;\n\n  if (source instanceof ArrayBuffer) {\n    sourceArray = new Uint8Array(source);\n  } else {\n    // Pack buffer onto the big target array\n    //\n    // 'source.data.buffer' could be a view onto a larger buffer.\n    // We MUST use this constructor to ensure the byteOffset and byteLength is\n    // set to correct values from 'source.data' and not the underlying\n    // buffer for target.set() to work properly.\n    const srcByteOffset = source.byteOffset;\n    const srcByteLength = source.byteLength;\n    // In gltf parser it is set as \"arrayBuffer\" instead of \"buffer\"\n    // https://github.com/visgl/loaders.gl/blob/1e3a82a0a65d7b6a67b1e60633453e5edda2960a/modules/gltf/src/lib/parse-gltf.js#L85\n    sourceArray = new Uint8Array(source.buffer || source.arrayBuffer, srcByteOffset, srcByteLength);\n  }\n\n  // Pack buffer onto the big target array\n  target.set(sourceArray, targetOffset);\n\n  return targetOffset + padToNBytes(sourceArray.byteLength, 4);\n}\n","// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n","// @ts-nocheck\nconst moduleExports = require('./index');\nconst _global = typeof window === 'undefined' ? global : window;\n_global.loaders = _global.loaders || {};\nmodule.exports = Object.assign(_global.loaders, moduleExports);\n","import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport parseQuantizedMesh from './lib/parse-quantized-mesh';\nimport loadTerrain from './lib/parse-terrain';\n\nimport {TerrainLoader as TerrainWorkerLoader} from './terrain-loader';\nimport {QuantizedMeshLoader as QuantizedMeshWorkerLoader} from './quantized-mesh-loader';\n\n// TerrainLoader\n\nexport {TerrainWorkerLoader};\n\nexport const TerrainLoader = {\n  ...TerrainWorkerLoader,\n  parse: loadTerrain\n};\n\nexport const _typecheckTerrainLoader: LoaderWithParser = TerrainLoader; // eslint-disable-line\n\n// QuantizedMeshLoader\n\nexport {QuantizedMeshWorkerLoader};\n\n/**\n * Loader for quantized meshes\n */\nexport const QuantizedMeshLoader = {\n  ...QuantizedMeshWorkerLoader,\n  parseSync: parseQuantizedMesh,\n  parse: async (arrayBuffer, options) => parseQuantizedMesh(arrayBuffer, options)\n};\n\nexport const _typecheckQuantizedMeshLoader: LoaderWithParser = QuantizedMeshLoader;\n","import {getMeshBoundingBox} from '@loaders.gl/schema';\nimport decode, {DECODING_STEPS} from './decode-quantized-mesh';\nimport {addSkirt} from './helpers/skirt';\n\nfunction getMeshAttributes(vertexData, header, bounds) {\n  const {minHeight, maxHeight} = header;\n  const [minX, minY, maxX, maxY] = bounds || [0, 0, 1, 1];\n  const xScale = maxX - minX;\n  const yScale = maxY - minY;\n  const zScale = maxHeight - minHeight;\n\n  const nCoords = vertexData.length / 3;\n  // vec3. x, y defined by bounds, z in meters\n  const positions = new Float32Array(nCoords * 3);\n\n  // vec2. 1 to 1 relationship with position. represents the uv on the texture image. 0,0 to 1,1.\n  const texCoords = new Float32Array(nCoords * 2);\n\n  // Data is not interleaved; all u, then all v, then all heights\n  for (let i = 0; i < nCoords; i++) {\n    const x = vertexData[i] / 32767;\n    const y = vertexData[i + nCoords] / 32767;\n    const z = vertexData[i + nCoords * 2] / 32767;\n\n    positions[3 * i + 0] = x * xScale + minX;\n    positions[3 * i + 1] = y * yScale + minY;\n    positions[3 * i + 2] = z * zScale + minHeight;\n\n    texCoords[2 * i + 0] = x;\n    texCoords[2 * i + 1] = y;\n  }\n\n  return {\n    POSITION: {value: positions, size: 3},\n    TEXCOORD_0: {value: texCoords, size: 2}\n    // TODO: Parse normals if they exist in the file\n    // NORMAL: {}, - optional, but creates the high poly look with lighting\n  };\n}\n\nfunction getTileMesh(arrayBuffer, options) {\n  if (!arrayBuffer) {\n    return null;\n  }\n  const {bounds} = options;\n  // Don't parse edge indices or format extensions\n  const {\n    header,\n    vertexData,\n    triangleIndices: originalTriangleIndices,\n    westIndices,\n    northIndices,\n    eastIndices,\n    southIndices\n  } = decode(arrayBuffer, DECODING_STEPS.triangleIndices);\n  let triangleIndices = originalTriangleIndices;\n  let attributes = getMeshAttributes(vertexData, header, bounds);\n\n  // Compute bounding box before adding skirt so that z values are not skewed\n  // TODO: Find bounding box from header, instead of doing extra pass over\n  // vertices.\n  const boundingBox = getMeshBoundingBox(attributes);\n\n  if (options.skirtHeight) {\n    const {attributes: newAttributes, triangles: newTriangles} = addSkirt(\n      attributes,\n      triangleIndices,\n      options.skirtHeight,\n      {\n        westIndices,\n        northIndices,\n        eastIndices,\n        southIndices\n      }\n    );\n    attributes = newAttributes;\n    triangleIndices = newTriangles;\n  }\n\n  return {\n    // Data return by this loader implementation\n    loaderData: {\n      header: {}\n    },\n    header: {\n      // @ts-ignore\n      vertexCount: triangleIndices.length,\n      boundingBox\n    },\n    mode: 4, // TRIANGLES\n    indices: {value: triangleIndices, size: 1},\n    attributes\n  };\n}\n\nexport default function loadQuantizedMesh(arrayBuffer, options) {\n  return getTileMesh(arrayBuffer, options['quantized-mesh']);\n}\n","import type {Schema} from '../schema';\nimport type {TableBatch} from '../../category/table';\nimport type {TableBatchAggregator, TableBatchConstructor} from './table-batch-aggregator';\nimport BaseTableBatchAggregator from './base-table-batch-aggregator';\nimport RowTableBatchAggregator from './row-table-batch-aggregator';\nimport ColumnarTableBatchAggregator from './columnar-table-batch-aggregator';\n\n// TODO define interface instead\ntype TableBatchBuilderOptions = {\n  shape: 'row-table' | 'array-row-table' | 'object-row-table' | 'columnar-table' | 'arrow-table';\n  batchSize?: number | 'auto';\n  batchDebounceMs?: number;\n  limit: number;\n  _limitMB: number;\n};\n\ntype GetBatchOptions = {\n  bytesUsed?: number;\n  [key: string]: any;\n};\n\nconst DEFAULT_OPTIONS: Required<TableBatchBuilderOptions> = {\n  shape: 'array-row-table',\n  batchSize: 'auto',\n  batchDebounceMs: 0,\n  limit: 0,\n  _limitMB: 0\n};\n\nconst ERR_MESSAGE = 'TableBatchBuilder';\n\n/** Incrementally builds batches from a stream of rows */\nexport default class TableBatchBuilder {\n  schema: Schema;\n  options: Required<TableBatchBuilderOptions>;\n\n  private aggregator: TableBatchAggregator | null = null;\n  private batchCount: number = 0;\n  private bytesUsed: number = 0;\n  private isChunkComplete: boolean = false;\n  private lastBatchEmittedMs: number = Date.now();\n  private totalLength: number = 0;\n  private totalBytes: number = 0;\n  private rowBytes: number = 0;\n\n  static ArrowBatch?: TableBatchConstructor;\n\n  constructor(schema: Schema, options?: TableBatchBuilderOptions) {\n    this.schema = schema;\n    this.options = {...DEFAULT_OPTIONS, ...options};\n  }\n\n  limitReached(): boolean {\n    if (Boolean(this.options?.limit) && this.totalLength >= this.options.limit) {\n      return true;\n    }\n    if (Boolean(this.options?._limitMB) && this.totalBytes / 1e6 >= this.options._limitMB) {\n      return true;\n    }\n    return false;\n  }\n\n  /** @deprecated Use addArrayRow or addObjectRow */\n  addRow(row: any[] | {[columnName: string]: any}): void {\n    if (this.limitReached()) {\n      return;\n    }\n    this.totalLength++;\n    this.rowBytes = this.rowBytes || this._estimateRowMB(row);\n    this.totalBytes += this.rowBytes;\n    if (Array.isArray(row)) {\n      this.addArrayRow(row);\n    } else {\n      this.addObjectRow(row);\n    }\n  }\n\n  /** Add one row to the batch */\n  protected addArrayRow(row: any[]) {\n    if (!this.aggregator) {\n      const TableBatchType = this._getTableBatchType();\n      this.aggregator = new TableBatchType(this.schema, this.options);\n    }\n    this.aggregator.addArrayRow(row);\n  }\n\n  /** Add one row to the batch */\n  protected addObjectRow(row: {[columnName: string]: any}): void {\n    if (!this.aggregator) {\n      const TableBatchType = this._getTableBatchType();\n      this.aggregator = new TableBatchType(this.schema, this.options);\n    }\n    this.aggregator.addObjectRow(row);\n  }\n\n  /** Mark an incoming raw memory chunk has completed */\n  chunkComplete(chunk: ArrayBuffer | string): void {\n    if (chunk instanceof ArrayBuffer) {\n      this.bytesUsed += chunk.byteLength;\n    }\n    if (typeof chunk === 'string') {\n      this.bytesUsed += chunk.length;\n    }\n    this.isChunkComplete = true;\n  }\n\n  getFullBatch(options?: GetBatchOptions): TableBatch | null {\n    return this._isFull() ? this._getBatch(options) : null;\n  }\n\n  getFinalBatch(options?: GetBatchOptions): TableBatch | null {\n    return this._getBatch(options);\n  }\n\n  // INTERNAL\n\n  _estimateRowMB(row) {\n    return Array.isArray(row) ? row.length * 8 : Object.keys(row).length * 8;\n  }\n\n  private _isFull(): boolean {\n    // No batch, not ready\n    if (!this.aggregator || this.aggregator.rowCount() === 0) {\n      return false;\n    }\n\n    // if batchSize === 'auto' we wait for chunk to complete\n    // if batchSize === number, ensure we have enough rows\n    if (this.options.batchSize === 'auto') {\n      if (!this.isChunkComplete) {\n        return false;\n      }\n    } else if (this.options.batchSize > this.aggregator.rowCount()) {\n      return false;\n    }\n\n    // Debounce batches\n    if (this.options.batchDebounceMs > Date.now() - this.lastBatchEmittedMs) {\n      return false;\n    }\n\n    // Emit batch\n    this.isChunkComplete = false;\n    this.lastBatchEmittedMs = Date.now();\n    return true;\n  }\n\n  /**\n   * bytesUsed can be set via chunkComplete or via getBatch*\n   */\n  private _getBatch(options?: GetBatchOptions): TableBatch | null {\n    if (!this.aggregator) {\n      return null;\n    }\n\n    // TODO - this can overly increment bytes used?\n    if (options?.bytesUsed) {\n      this.bytesUsed = options.bytesUsed;\n    }\n    const normalizedBatch = this.aggregator.getBatch() as TableBatch;\n    normalizedBatch.count = this.batchCount;\n    normalizedBatch.bytesUsed = this.bytesUsed;\n    Object.assign(normalizedBatch, options);\n\n    this.batchCount++;\n    this.aggregator = null;\n    return normalizedBatch;\n  }\n\n  private _getTableBatchType(): TableBatchConstructor {\n    switch (this.options.shape) {\n      case 'row-table':\n        return BaseTableBatchAggregator;\n      case 'array-row-table':\n      case 'object-row-table':\n        return RowTableBatchAggregator;\n      case 'columnar-table':\n        return ColumnarTableBatchAggregator;\n      case 'arrow-table':\n        if (!TableBatchBuilder.ArrowBatch) {\n          throw new Error(ERR_MESSAGE);\n        }\n        return TableBatchBuilder.ArrowBatch;\n      default:\n        throw new Error(ERR_MESSAGE);\n    }\n  }\n}\n","import type {Schema} from '../schema';\nimport type {TableBatch} from '../../category/table';\nimport {TableBatchAggregator, TableBatchOptions} from './table-batch-aggregator';\n\nconst DEFAULT_ROW_COUNT = 100;\n\nexport default class RowTableBatchAggregator implements TableBatchAggregator {\n  schema: Schema;\n  options: TableBatchOptions;\n\n  length: number = 0;\n  rows: any[] | null = null;\n  cursor: number = 0;\n  private _headers: string[] = [];\n\n  constructor(schema: Schema, options: TableBatchOptions) {\n    this.options = options;\n    this.schema = schema;\n\n    // schema is an array if there're no headers\n    // object if there are headers\n    if (!Array.isArray(schema)) {\n      this._headers = [];\n      for (const key in schema) {\n        this._headers[schema[key].index] = schema[key].name;\n      }\n    }\n  }\n\n  rowCount(): number {\n    return this.length;\n  }\n\n  addArrayRow(row: any[], cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    this.rows = this.rows || new Array(DEFAULT_ROW_COUNT);\n    this.rows[this.length] = row;\n    this.length++;\n  }\n\n  addObjectRow(row: {[columnName: string]: any}, cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    this.rows = this.rows || new Array(DEFAULT_ROW_COUNT);\n    this.rows[this.length] = row;\n    this.length++;\n  }\n\n  getBatch(): TableBatch | null {\n    let rows = this.rows;\n    if (!rows) {\n      return null;\n    }\n\n    rows = rows.slice(0, this.length);\n    this.rows = null;\n\n    const batch: TableBatch = {\n      shape: this.options.shape,\n      batchType: 'data',\n      data: rows,\n      length: this.length,\n      schema: this.schema,\n      cursor: this.cursor\n    };\n\n    return batch;\n  }\n}\n","// Mesh category utilities\n// TODO - move to mesh category module, or to math.gl/geometry module\nimport {TypedArray} from '../../types';\n\ntype Attribute = {\n  size?: number;\n  type?: number;\n  normalized?: boolean;\n  value: TypedArray;\n};\n\ntype TypedArrays = {[key: string]: TypedArray};\nexport type Attributes = {[key: string]: Attribute};\n\n/**\n * Holds an axis aligned bounding box\n * TODO - make sure AxisAlignedBoundingBox in math.gl/culling understands this format (or change this format)\n */\ntype BoundingBox = [[number, number, number], [number, number, number]];\n\n/**\n * Get number of vertices in mesh\n * @param attributes\n */\nexport function getMeshSize(attributes: TypedArrays): number {\n  let size = 0;\n  for (const attributeName in attributes) {\n    const attribute = attributes[attributeName];\n    if (ArrayBuffer.isView(attribute)) {\n      // @ts-ignore DataView doesn't have BYTES_PER_ELEMENT\n      size += attribute.byteLength * attribute.BYTES_PER_ELEMENT;\n    }\n  }\n  return size;\n}\n\n/**\n * Get the (axis aligned) bounding box of a mesh\n * @param attributes\n * @returns array of two vectors representing the axis aligned bounding box\n */\n// eslint-disable-next-line complexity\nexport function getMeshBoundingBox(attributes: Attributes): BoundingBox {\n  let minX = Infinity;\n  let minY = Infinity;\n  let minZ = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let maxZ = -Infinity;\n\n  const positions = attributes.POSITION ? attributes.POSITION.value : [];\n  const len = positions && positions.length;\n\n  for (let i = 0; i < len; i += 3) {\n    const x = positions[i];\n    const y = positions[i + 1];\n    const z = positions[i + 2];\n\n    minX = x < minX ? x : minX;\n    minY = y < minY ? y : minY;\n    minZ = z < minZ ? z : minZ;\n\n    maxX = x > maxX ? x : maxX;\n    maxY = y > maxY ? y : maxY;\n    maxZ = z > maxZ ? z : maxZ;\n  }\n  return [\n    [minX, minY, minZ],\n    [maxX, maxY, maxZ]\n  ];\n}\n","import {assert} from '../../utils/assert';\nimport Field from './field';\n\nexport type SchemaMetadata = Map<string, any>;\n\n/**\n * ArrowJS `Schema` API-compatible class for row-based tables (returned from `DataTable`)\n * https://loaders.gl/arrowjs/docs/api-reference/schema\n */\nexport default class Schema {\n  fields: Field[];\n  // TODO - Arrow just allows Map<string, string>\n  metadata: SchemaMetadata;\n\n  constructor(fields: Field[], metadata?: SchemaMetadata) {\n    assert(Array.isArray(fields));\n    checkNames(fields);\n    // For kepler fields, create arrow compatible `Fields` that have kepler fields as `metadata`\n    this.fields = fields;\n    this.metadata = metadata || new Map();\n  }\n\n  // TODO - arrow only seems to compare fields, not metadata\n  compareTo(other: Schema): boolean {\n    if (this.metadata !== other.metadata) {\n      return false;\n    }\n    if (this.fields.length !== other.fields.length) {\n      return false;\n    }\n    for (let i = 0; i < this.fields.length; ++i) {\n      if (!this.fields[i].compareTo(other.fields[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  select(...columnNames: string[]): Schema {\n    // Ensure column names reference valid fields\n    const nameMap = Object.create(null);\n    for (const name of columnNames) {\n      nameMap[name] = true;\n    }\n    const selectedFields = this.fields.filter((field) => nameMap[field.name]);\n    return new Schema(selectedFields, this.metadata);\n  }\n\n  selectAt(...columnIndices: number[]): Schema {\n    // Ensure column indices reference valid fields\n    const selectedFields = columnIndices.map((index) => this.fields[index]).filter(Boolean);\n    return new Schema(selectedFields, this.metadata);\n  }\n\n  assign(schemaOrFields: Schema | Field[]): Schema {\n    let fields: Field[];\n    let metadata: SchemaMetadata = this.metadata;\n\n    if (schemaOrFields instanceof Schema) {\n      const otherSchema = schemaOrFields;\n      fields = otherSchema.fields;\n      metadata = mergeMaps(mergeMaps(new Map(), this.metadata), otherSchema.metadata);\n    } else {\n      fields = schemaOrFields;\n    }\n\n    // Create a merged list of fields, overwrite fields in place, new fields at end\n    const fieldMap: {[key: string]: Field} = Object.create(null);\n\n    for (const field of this.fields) {\n      fieldMap[field.name] = field;\n    }\n\n    for (const field of fields) {\n      fieldMap[field.name] = field;\n    }\n\n    const mergedFields = Object.values(fieldMap);\n\n    return new Schema(mergedFields, metadata);\n  }\n}\n\n// Warn if any duplicated field names\nfunction checkNames(fields) {\n  const usedNames = {};\n  for (const field of fields) {\n    if (usedNames[field.name]) {\n      // eslint-disable-next-line\n      console.warn('Schema: duplicated field name', field.name, field);\n    }\n    usedNames[field.name] = true;\n  }\n}\n\nfunction mergeMaps<T>(m1: T, m2: T): T {\n  // @ts-ignore\n  return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n","// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\nexport function assert(condition: boolean, message?: string) {\n  if (!condition) {\n    throw new Error(message || 'loader assertion failed.');\n  }\n}\n","import {DataType} from './type';\n\n/**\n * ArrowJS `Field` API-compatible class for row-based tables\n * https://loaders.gl/arrowjs/docs/api-reference/field\n * A field holds name, nullable, and metadata information about a table \"column\"\n * A Schema is essentially a list of fields\n */\nexport default class Field {\n  name: string;\n  type: DataType;\n  nullable: boolean;\n  metadata: Map<string, string>;\n\n  constructor(\n    name: string,\n    type: DataType,\n    nullable = false,\n    metadata: Map<string, string> = new Map()\n  ) {\n    this.name = name;\n    this.type = type;\n    this.nullable = nullable;\n    this.metadata = metadata;\n  }\n\n  get typeId(): number {\n    return this.type && this.type.typeId;\n  }\n\n  clone(): Field {\n    return new Field(this.name, this.type, this.nullable, this.metadata);\n  }\n\n  compareTo(other: this): boolean {\n    return (\n      this.name === other.name &&\n      this.type === other.type &&\n      this.nullable === other.nullable &&\n      this.metadata === other.metadata\n    );\n  }\n\n  toString(): string {\n    return `${this.type}${this.nullable ? ', nullable' : ''}${\n      this.metadata ? `, metadata: ${this.metadata}` : ''\n    }`;\n  }\n}\n","// This code is adapted from ArrowJS https://github.com/apache/arrow\n// under Apache license http://www.apache.org/licenses/LICENSE-2.0\n\nimport {Type} from './enum';\n\nimport Field from './field';\n\nexport {Type} from './enum';\n\nexport type TypedIntArray =\n  | Int8Array\n  | Uint8Array\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Int32Array\n  | Uint32Array\n  | Uint8ClampedArray;\n\nexport type TypedFloatArray = Float32Array | Float64Array;\n\nexport type TypedArray = TypedIntArray | TypedFloatArray;\n\nexport type AnyArrayType = Array<any> | TypedIntArray | TypedFloatArray;\n\nexport class DataType {\n  static isNull(x: any): boolean {\n    return x && x.typeId === Type.Null;\n  }\n  static isInt(x: any): boolean {\n    return x && x.typeId === Type.Int;\n  }\n  static isFloat(x: any): boolean {\n    return x && x.typeId === Type.Float;\n  }\n  static isBinary(x: any): boolean {\n    return x && x.typeId === Type.Binary;\n  }\n  static isUtf8(x: any): boolean {\n    return x && x.typeId === Type.Utf8;\n  }\n  static isBool(x: any): boolean {\n    return x && x.typeId === Type.Bool;\n  }\n  static isDecimal(x: any): boolean {\n    return x && x.typeId === Type.Decimal;\n  }\n  static isDate(x: any): boolean {\n    return x && x.typeId === Type.Date;\n  }\n  static isTime(x: any): boolean {\n    return x && x.typeId === Type.Time;\n  }\n  static isTimestamp(x: any): boolean {\n    return x && x.typeId === Type.Timestamp;\n  }\n  static isInterval(x: any): boolean {\n    return x && x.typeId === Type.Interval;\n  }\n  static isList(x: any): boolean {\n    return x && x.typeId === Type.List;\n  }\n  static isStruct(x: any): boolean {\n    return x && x.typeId === Type.Struct;\n  }\n  static isUnion(x: any): boolean {\n    return x && x.typeId === Type.Union;\n  }\n  static isFixedSizeBinary(x: any): boolean {\n    return x && x.typeId === Type.FixedSizeBinary;\n  }\n  static isFixedSizeList(x: any): boolean {\n    return x && x.typeId === Type.FixedSizeList;\n  }\n  static isMap(x: any): boolean {\n    return x && x.typeId === Type.Map;\n  }\n  static isDictionary(x: any): boolean {\n    return x && x.typeId === Type.Dictionary;\n  }\n\n  get typeId(): Type {\n    return Type.NONE;\n  }\n\n  // get ArrayType(): AnyArrayType {\n  //   return Int8Array;\n  // }\n\n  // get ArrayType() { return Array; }\n  compareTo(other: DataType): boolean {\n    // TODO\n    return this === other; // comparer.visit(this, other);\n  }\n}\n\n// NULL\n\nexport class Null extends DataType {\n  get typeId(): Type {\n    return Type.Null;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Null';\n  }\n  toString(): string {\n    return 'Null';\n  }\n}\n\n// BOOLEANS\n\nexport class Bool extends DataType {\n  get typeId(): Type {\n    return Type.Bool;\n  }\n  // get ArrayType() {\n  //   return Uint8Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Bool';\n  }\n  toString(): string {\n    return 'Bool';\n  }\n}\n\n// INTS\n\nexport class Int extends DataType {\n  readonly isSigned: boolean;\n  readonly bitWidth: number;\n  constructor(isSigned, bitWidth) {\n    super();\n    this.isSigned = isSigned;\n    this.bitWidth = bitWidth;\n  }\n  get typeId(): Type {\n    return Type.Int;\n  }\n  // get ArrayType() {\n  //   switch (this.bitWidth) {\n  //     case 8:\n  //       return this.isSigned ? Int8Array : Uint8Array;\n  //     case 16:\n  //       return this.isSigned ? Int16Array : Uint16Array;\n  //     case 32:\n  //       return this.isSigned ? Int32Array : Uint32Array;\n  //     case 64:\n  //       return this.isSigned ? Int32Array : Uint32Array;\n  //     default:\n  //       throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n  //   }\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Int';\n  }\n  toString(): string {\n    return `${this.isSigned ? 'I' : 'Ui'}nt${this.bitWidth}`;\n  }\n}\n\nexport class Int8 extends Int {\n  constructor() {\n    super(true, 8);\n  }\n}\nexport class Int16 extends Int {\n  constructor() {\n    super(true, 16);\n  }\n}\nexport class Int32 extends Int {\n  constructor() {\n    super(true, 32);\n  }\n}\nexport class Int64 extends Int {\n  constructor() {\n    super(true, 64);\n  }\n}\nexport class Uint8 extends Int {\n  constructor() {\n    super(false, 8);\n  }\n}\nexport class Uint16 extends Int {\n  constructor() {\n    super(false, 16);\n  }\n}\nexport class Uint32 extends Int {\n  constructor() {\n    super(false, 32);\n  }\n}\nexport class Uint64 extends Int {\n  constructor() {\n    super(false, 64);\n  }\n}\n\n// FLOATS\n\nconst Precision = {\n  HALF: 16,\n  SINGLE: 32,\n  DOUBLE: 64\n};\n\nexport class Float extends DataType {\n  readonly precision: number;\n  constructor(precision) {\n    super();\n    this.precision = precision;\n  }\n  get typeId(): Type {\n    return Type.Float;\n  }\n  // get ArrayType() {\n  //   switch (this.precision) {\n  //     case Precision.HALF:\n  //       return Uint16Array;\n  //     case Precision.SINGLE:\n  //       return Float32Array;\n  //     case Precision.DOUBLE:\n  //       return Float64Array;\n  //     default:\n  //       throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n  //   }\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Float';\n  }\n  toString(): string {\n    return `Float${this.precision}`;\n  }\n}\n\nexport class Float16 extends Float {\n  constructor() {\n    super(Precision.HALF);\n  }\n}\nexport class Float32 extends Float {\n  constructor() {\n    super(Precision.SINGLE);\n  }\n}\nexport class Float64 extends Float {\n  constructor() {\n    super(Precision.DOUBLE);\n  }\n}\n\nexport class Binary extends DataType {\n  constructor() {\n    super();\n  }\n  get typeId() {\n    return Type.Binary;\n  }\n  toString() {\n    return 'Binary';\n  }\n  get [Symbol.toStringTag]() {\n    return 'Binary';\n  }\n}\n\n// STRINGS\n\nexport class Utf8 extends DataType {\n  get typeId(): Type {\n    return Type.Utf8;\n  }\n  // get ArrayType() {\n  //   return Uint8Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Utf8';\n  }\n  toString(): string {\n    return 'Utf8';\n  }\n}\n\n// DATES, TIMES AND INTERVALS\n\nconst DateUnit = {\n  DAY: 0,\n  MILLISECOND: 1\n};\n\nexport class Date extends DataType {\n  readonly unit: number;\n  constructor(unit) {\n    super();\n    this.unit = unit;\n  }\n  get typeId(): Type {\n    return Type.Date;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Date';\n  }\n  toString(): string {\n    return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`;\n  }\n}\n\nexport class DateDay extends Date {\n  constructor() {\n    super(DateUnit.DAY);\n  }\n}\nexport class DateMillisecond extends Date {\n  constructor() {\n    super(DateUnit.MILLISECOND);\n  }\n}\n\nconst TimeUnit = {\n  SECOND: 1,\n  MILLISECOND: 1e3,\n  MICROSECOND: 1e6,\n  NANOSECOND: 1e9\n};\n\nexport class Time extends DataType {\n  readonly unit: number;\n  readonly bitWidth: number;\n\n  constructor(unit, bitWidth) {\n    super();\n    this.unit = unit;\n    this.bitWidth = bitWidth;\n  }\n  get typeId(): Type {\n    return Type.Time;\n  }\n  toString(): string {\n    return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Time';\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n}\n\nexport class TimeSecond extends Time {\n  constructor() {\n    super(TimeUnit.SECOND, 32);\n  }\n}\nexport class TimeMillisecond extends Time {\n  constructor() {\n    super(TimeUnit.MILLISECOND, 32);\n  }\n}\n// export class TimeMicrosecond extends Time { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n// export class TimeNanosecond extends Time { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\nexport class Timestamp extends DataType {\n  readonly unit: any;\n  readonly timezone: any;\n\n  constructor(unit: any, timezone = null) {\n    super();\n    this.unit = unit;\n    this.timezone = timezone;\n  }\n  get typeId(): Type {\n    return Type.Timestamp;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Timestamp';\n  }\n  toString(): string {\n    return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ''}>`;\n  }\n}\n\nexport class TimestampSecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.SECOND, timezone);\n  }\n}\nexport class TimestampMillisecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MILLISECOND, timezone);\n  }\n}\nexport class TimestampMicrosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MICROSECOND, timezone);\n  }\n}\nexport class TimestampNanosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.NANOSECOND, timezone);\n  }\n}\n\nconst IntervalUnit = {\n  DAY_TIME: 0,\n  YEAR_MONTH: 1\n};\n\nexport class Interval extends DataType {\n  readonly unit: number;\n  constructor(unit: number) {\n    super();\n    this.unit = unit;\n  }\n  get typeId(): Type {\n    return Type.Interval;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Interval';\n  }\n  toString(): string {\n    return `Interval<${IntervalUnit[this.unit]}>`;\n  }\n}\n\nexport class IntervalDayTime extends Interval {\n  constructor() {\n    super(IntervalUnit.DAY_TIME);\n  }\n}\nexport class IntervalYearMonth extends Interval {\n  constructor() {\n    super(IntervalUnit.YEAR_MONTH);\n  }\n}\n\nexport class FixedSizeList extends DataType {\n  readonly listSize: number;\n  readonly children: Field[];\n\n  constructor(listSize: number, child: Field) {\n    super();\n    this.listSize = listSize;\n    this.children = [child];\n  }\n  get typeId(): Type {\n    return Type.FixedSizeList;\n  }\n  get valueType() {\n    return this.children[0].type;\n  }\n  get valueField() {\n    return this.children[0];\n  }\n  // get ArrayType() {\n  //   return this.valueType.ArrayType;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'FixedSizeList';\n  }\n  toString(): string {\n    return `FixedSizeList[${this.listSize}]<${this.valueType}>`;\n  }\n}\n","// This code is adapted from ArrowJS https://github.com/apache/arrow\n// under Apache license http://www.apache.org/licenses/LICENSE-2.0\n\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport enum Type {\n  /** The default placeholder type */\n  NONE = 0,\n  /** A NULL type having no physical storage */\n  Null = 1,\n  /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n  Int = 2,\n  /** 2, 4, or 8-byte floating point value */\n  Float = 3,\n  /** Variable-length bytes (no guarantee of UTF8-ness) */\n  Binary = 4,\n  /** UTF8 variable-length string as List<Char> */\n  Utf8 = 5,\n  /** Boolean as 1 bit, LSB bit-packed ordering */\n  Bool = 6,\n  /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n  Decimal = 7,\n  /** int32_t days or int64_t milliseconds since the UNIX epoch */\n  Date = 8,\n  /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n  Time = 9,\n  /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n  Timestamp = 10,\n  /** YEAR_MONTH or DAY_TIME interval in SQL style */\n  Interval = 11,\n  /** A list of some logical data type */\n  List = 12,\n  /** Struct of logical types */\n  Struct = 13,\n  /** Union of logical types */\n  Union = 14,\n  /** Fixed-size binary. Each value occupies the same number of bytes */\n  FixedSizeBinary = 15,\n  /** Fixed-size list. Each value occupies the same number of bytes */\n  FixedSizeList = 16,\n  /** Map of named logical types */\n  Map = 17,\n\n  /** Dictionary aka Category type */\n  Dictionary = -1,\n  Int8 = -2,\n  Int16 = -3,\n  Int32 = -4,\n  Int64 = -5,\n  Uint8 = -6,\n  Uint16 = -7,\n  Uint32 = -8,\n  Uint64 = -9,\n  Float16 = -10,\n  Float32 = -11,\n  Float64 = -12,\n  DateDay = -13,\n  DateMillisecond = -14,\n  TimestampSecond = -15,\n  TimestampMillisecond = -16,\n  TimestampMicrosecond = -17,\n  TimestampNanosecond = -18,\n  TimeSecond = -19,\n  TimeMillisecond = -20,\n  TimeMicrosecond = -21,\n  TimeNanosecond = -22,\n  DenseUnion = -23,\n  SparseUnion = -24,\n  IntervalDayTime = -25,\n  IntervalYearMonth = -26\n}\n","// Type deduction\nimport {\n  Schema\n  // Int,\n  // Int8,\n  // Int16,\n  // Int32,\n  // Uint8,\n  // Uint16,\n  // Uint32,\n  // Float32,\n  // Float64\n  // Bool,\n  // Utf8,\n  // TimestampMillisecond,\n  // Null\n} from '../schema';\n\n// const TYPED_ARRAY_TO_TYPE = {\n//   Int8Array: new Int8(),\n//   Int16Array: new Int16(),\n//   Int32Array: new Int32(),\n//   Uint8Array: new Uint8(),\n//   Uint8ClampedArray: new Uint8(),\n//   Uint16Array: new Uint16(),\n//   Uint32Array: new Uint32(),\n//   Float32Array: new Float32(),\n//   Float64Array: new Float64()\n// };\n\n// if (typeof BigInt64Array !== 'undefined') {\n//   TYPED_ARRAY_TO_TYPE.BigInt64Array = new Int64();\n//   TYPED_ARRAY_TO_TYPE.BigUint64Array = new Uint64();\n// }\n\n/**\n * SCHEMA SUPPORT - AUTODEDUCTION\n * @param {*} table\n * @param {*} schema\n * @returns\n */\nexport function deduceTableSchema(table, schema?: Schema) {\n  const deducedSchema = Array.isArray(table)\n    ? deduceSchemaForRowTable(table)\n    : deduceSchemaForColumnarTable(table);\n  // Deduced schema will fill in missing info from partial options.schema, if provided\n  return Object.assign(deducedSchema, schema);\n}\n\nfunction deduceSchemaForColumnarTable(columnarTable) {\n  const schema = {};\n  for (const field in columnarTable) {\n    const column = columnarTable[field];\n    // Check if column is typed, if so we are done\n    if (ArrayBuffer.isView(column)) {\n      schema[field] = column.constructor;\n      // else we need data\n    } else if (column.length) {\n      const value = column[0];\n      schema[field] = deduceTypeFromValue(value);\n      // TODO - support nested schemas?\n    }\n    // else we mark as present but unknow\n    schema[field] = schema[field] || null;\n  }\n  return schema;\n}\n\nfunction deduceSchemaForRowTable(rowTable) {\n  const schema = {};\n  if (rowTable.length) {\n    const row = rowTable[0];\n    // TODO - Could look at additional rows if nulls in first row\n    for (const field in row) {\n      const value = row[field];\n      schema[field] = deduceTypeFromValue(value);\n    }\n  }\n  return schema;\n}\n\nfunction deduceTypeFromValue(value) {\n  if (value instanceof Date) {\n    return Date;\n  } else if (value instanceof Number) {\n    return Float32Array;\n  } else if (typeof value === 'string') {\n    return String;\n  }\n  return null;\n}\n\n/*\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction deduceSchema(rows) {\n  const row = rows[0];\n\n  const schema = {};\n  let i = 0;\n  for (const columnName in row) {\n    const value = row[columnName];\n    switch (typeof value) {\n      case 'number':\n      case 'boolean':\n        // TODO - booleans could be handled differently...\n        schema[columnName] = {name: String(columnName), index: i, type: Float32Array};\n        break;\n\n      case 'object':\n        schema[columnName] = {name: String(columnName), index: i, type: Array};\n        break;\n\n      case 'string':\n      default:\n        schema[columnName] = {name: String(columnName), index: i, type: Array};\n      // We currently only handle numeric rows\n      // TODO we could offer a function to map strings to numbers?\n    }\n    i++;\n  }\n  return schema;\n}\n*/\n","import {Type} from '../schema';\nimport {AnyArray} from '../../types';\n\n/**\n * Gets type information from an Arrow type object or \"mock\" Arrow type object\n * @param arrowTypeLike Arrow Type or type object of similar shape\n */\nexport function getTypeInfo(arrowTypeLike: any): {\n  typeId: Type;\n  ArrayType: AnyArray;\n  typeName: string;\n  typeEnumName?: string;\n  precision?: number;\n} {\n  return {\n    typeId: arrowTypeLike.typeId,\n    ArrayType: arrowTypeLike.ArrayType,\n    typeName: arrowTypeLike.toString(),\n    typeEnumName: getTypeKey(arrowTypeLike.typeId),\n    precision: arrowTypeLike.precision\n  };\n}\n\nlet ReverseType: {[key: string]: string} | null = null;\n\nfunction getTypeKey(typeKey) {\n  if (!ReverseType) {\n    ReverseType = {};\n    for (const key in Type) {\n      ReverseType[Type[key]] = key;\n    }\n  }\n\n  return ReverseType[typeKey];\n}\n","import type {TypedArray} from '../../types';\nimport {DataType, Float32, Float64, Int16, Int32, Int8, Uint16, Uint32, Uint8} from '../schema';\n\nexport function getArrowTypeFromTypedArray(array: TypedArray): DataType {\n  switch (array.constructor) {\n    case Int8Array:\n      return new Int8();\n    case Uint8Array:\n      return new Uint8();\n    case Int16Array:\n      return new Int16();\n    case Uint16Array:\n      return new Uint16();\n    case Int32Array:\n      return new Int32();\n    case Uint32Array:\n      return new Uint32();\n    case Float32Array:\n      return new Float32();\n    case Float64Array:\n      return new Float64();\n    default:\n      throw new Error('array type not supported');\n  }\n}\n","// From https://github.com/rauschma/async-iter-demo/tree/master/src under MIT license\n// http://2ality.com/2016/10/asynchronous-iteration.html\n\nclass ArrayQueue<T> extends Array<T> {\n  enqueue(value) {\n    // Add at the end\n    return this.push(value);\n  }\n  dequeue(): T {\n    // Remove first element\n    return this.shift() as T;\n  }\n}\n\nexport default class AsyncQueue<T> {\n  private _values: ArrayQueue<T>;\n  private _settlers: ArrayQueue<{resolve; reject}>;\n  private _closed: boolean;\n\n  constructor() {\n    // enqueues > dequeues\n    this._values = new ArrayQueue<T>();\n    // dequeues > enqueues\n    this._settlers = new ArrayQueue<{resolve; reject}>();\n    this._closed = false;\n  }\n\n  close(): void {\n    while (this._settlers.length > 0) {\n      this._settlers.dequeue().resolve({done: true});\n    }\n    this._closed = true;\n  }\n\n  [Symbol.asyncIterator](): AsyncIterator<T> {\n    return this;\n  }\n\n  enqueue(value: T | Error): void {\n    if (this._closed) {\n      throw new Error('Closed');\n    }\n\n    if (this._settlers.length > 0) {\n      if (this._values.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      const settler = this._settlers.dequeue();\n      if (value instanceof Error) {\n        settler.reject(value);\n      } else {\n        settler.resolve({value});\n      }\n    } else {\n      this._values.enqueue(value);\n    }\n  }\n\n  /**\n   * @returns a Promise for an IteratorResult\n   */\n  next(): Promise<any> {\n    if (this._values.length > 0) {\n      const value = this._values.dequeue();\n      if (value instanceof Error) {\n        return Promise.reject(value);\n      }\n      return Promise.resolve({value});\n    }\n\n    if (this._closed) {\n      if (this._settlers.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      return Promise.resolve({done: true});\n    }\n    // Wait for new values to be enqueued\n    return new Promise((resolve, reject) => {\n      this._settlers.enqueue({resolve, reject});\n    });\n  }\n}\n\n/**\n * @returns a Promise for an Array with the elements in `asyncIterable`\n */\nexport async function takeAsync(\n  asyncIterable: AsyncIterable<any>,\n  count = Infinity\n): Promise<any[]> {\n  const result: Array<any> = [];\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  while (result.length < count) {\n    const {value, done} = await iterator.next();\n    if (done) {\n      break;\n    }\n    result.push(value);\n  }\n  return result;\n}\n","// Copyright (C) 2018-2019 HERE Europe B.V.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nconst QUANTIZED_MESH_HEADER = new Map([\n  ['centerX', Float64Array.BYTES_PER_ELEMENT],\n  ['centerY', Float64Array.BYTES_PER_ELEMENT],\n  ['centerZ', Float64Array.BYTES_PER_ELEMENT],\n\n  ['minHeight', Float32Array.BYTES_PER_ELEMENT],\n  ['maxHeight', Float32Array.BYTES_PER_ELEMENT],\n\n  ['boundingSphereCenterX', Float64Array.BYTES_PER_ELEMENT],\n  ['boundingSphereCenterY', Float64Array.BYTES_PER_ELEMENT],\n  ['boundingSphereCenterZ', Float64Array.BYTES_PER_ELEMENT],\n  ['boundingSphereRadius', Float64Array.BYTES_PER_ELEMENT],\n\n  ['horizonOcclusionPointX', Float64Array.BYTES_PER_ELEMENT],\n  ['horizonOcclusionPointY', Float64Array.BYTES_PER_ELEMENT],\n  ['horizonOcclusionPointZ', Float64Array.BYTES_PER_ELEMENT]\n]);\n\nfunction decodeZigZag(value) {\n  return (value >> 1) ^ -(value & 1);\n}\n\nfunction decodeHeader(dataView) {\n  let position = 0;\n  const header = {};\n\n  for (const [key, bytesCount] of QUANTIZED_MESH_HEADER) {\n    const getter = bytesCount === 8 ? dataView.getFloat64 : dataView.getFloat32;\n\n    header[key] = getter.call(dataView, position, true);\n    position += bytesCount;\n  }\n\n  return {header, headerEndPosition: position};\n}\n\nfunction decodeVertexData(dataView, headerEndPosition) {\n  let position = headerEndPosition;\n  const elementsPerVertex = 3;\n  const vertexCount = dataView.getUint32(position, true);\n  const vertexData = new Uint16Array(vertexCount * elementsPerVertex);\n\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const bytesPerArrayElement = Uint16Array.BYTES_PER_ELEMENT;\n  const elementArrayLength = vertexCount * bytesPerArrayElement;\n  const uArrayStartPosition = position;\n  const vArrayStartPosition = uArrayStartPosition + elementArrayLength;\n  const heightArrayStartPosition = vArrayStartPosition + elementArrayLength;\n\n  let u = 0;\n  let v = 0;\n  let height = 0;\n\n  for (let i = 0; i < vertexCount; i++) {\n    u += decodeZigZag(dataView.getUint16(uArrayStartPosition + bytesPerArrayElement * i, true));\n    v += decodeZigZag(dataView.getUint16(vArrayStartPosition + bytesPerArrayElement * i, true));\n    height += decodeZigZag(\n      dataView.getUint16(heightArrayStartPosition + bytesPerArrayElement * i, true)\n    );\n\n    vertexData[i] = u;\n    vertexData[i + vertexCount] = v;\n    vertexData[i + vertexCount * 2] = height;\n  }\n\n  position += elementArrayLength * 3;\n\n  return {vertexData, vertexDataEndPosition: position};\n}\n\nfunction decodeIndex(buffer, position, indicesCount, bytesPerIndex, encoded = true) {\n  let indices;\n\n  if (bytesPerIndex === 2) {\n    indices = new Uint16Array(buffer, position, indicesCount);\n  } else {\n    indices = new Uint32Array(buffer, position, indicesCount);\n  }\n\n  if (!encoded) {\n    return indices;\n  }\n\n  let highest = 0;\n\n  for (let i = 0; i < indices.length; ++i) {\n    const code = indices[i];\n\n    indices[i] = highest - code;\n\n    if (code === 0) {\n      ++highest;\n    }\n  }\n\n  return indices;\n}\n\nfunction decodeTriangleIndices(dataView, vertexData, vertexDataEndPosition) {\n  let position = vertexDataEndPosition;\n  const elementsPerVertex = 3;\n  const vertexCount = vertexData.length / elementsPerVertex;\n  const bytesPerIndex =\n    vertexCount > 65536 ? Uint32Array.BYTES_PER_ELEMENT : Uint16Array.BYTES_PER_ELEMENT;\n\n  if (position % bytesPerIndex !== 0) {\n    position += bytesPerIndex - (position % bytesPerIndex);\n  }\n\n  const triangleCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const triangleIndicesCount = triangleCount * 3;\n  const triangleIndices = decodeIndex(\n    dataView.buffer,\n    position,\n    triangleIndicesCount,\n    bytesPerIndex\n  );\n  position += triangleIndicesCount * bytesPerIndex;\n\n  return {\n    triangleIndicesEndPosition: position,\n    triangleIndices\n  };\n}\n\nfunction decodeEdgeIndices(dataView, vertexData, triangleIndicesEndPosition) {\n  let position = triangleIndicesEndPosition;\n  const elementsPerVertex = 3;\n  const vertexCount = vertexData.length / elementsPerVertex;\n  const bytesPerIndex =\n    vertexCount > 65536 ? Uint32Array.BYTES_PER_ELEMENT : Uint16Array.BYTES_PER_ELEMENT;\n\n  const westVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const westIndices = decodeIndex(dataView.buffer, position, westVertexCount, bytesPerIndex, false);\n  position += westVertexCount * bytesPerIndex;\n\n  const southVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const southIndices = decodeIndex(\n    dataView.buffer,\n    position,\n    southVertexCount,\n    bytesPerIndex,\n    false\n  );\n  position += southVertexCount * bytesPerIndex;\n\n  const eastVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const eastIndices = decodeIndex(dataView.buffer, position, eastVertexCount, bytesPerIndex, false);\n  position += eastVertexCount * bytesPerIndex;\n\n  const northVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const northIndices = decodeIndex(\n    dataView.buffer,\n    position,\n    northVertexCount,\n    bytesPerIndex,\n    false\n  );\n  position += northVertexCount * bytesPerIndex;\n\n  return {\n    edgeIndicesEndPosition: position,\n    westIndices,\n    southIndices,\n    eastIndices,\n    northIndices\n  };\n}\n\nfunction decodeVertexNormalsExtension(extensionDataView) {\n  return new Uint8Array(\n    extensionDataView.buffer,\n    extensionDataView.byteOffset,\n    extensionDataView.byteLength\n  );\n}\n\nfunction decodeWaterMaskExtension(extensionDataView) {\n  return extensionDataView.buffer.slice(\n    extensionDataView.byteOffset,\n    extensionDataView.byteOffset + extensionDataView.byteLength\n  );\n}\n\nfunction decodeExtensions(dataView, indicesEndPosition) {\n  const extensions = {};\n\n  if (dataView.byteLength <= indicesEndPosition) {\n    return {extensions, extensionsEndPosition: indicesEndPosition};\n  }\n\n  let position = indicesEndPosition;\n\n  while (position < dataView.byteLength) {\n    const extensionId = dataView.getUint8(position, true);\n    position += Uint8Array.BYTES_PER_ELEMENT;\n\n    const extensionLength = dataView.getUint32(position, true);\n    position += Uint32Array.BYTES_PER_ELEMENT;\n\n    const extensionView = new DataView(dataView.buffer, position, extensionLength);\n\n    switch (extensionId) {\n      case 1: {\n        extensions.vertexNormals = decodeVertexNormalsExtension(extensionView);\n\n        break;\n      }\n      case 2: {\n        extensions.waterMask = decodeWaterMaskExtension(extensionView);\n\n        break;\n      }\n      default: {\n        // console.warn(`Unknown extension with id ${extensionId}`)\n      }\n    }\n\n    position += extensionLength;\n  }\n\n  return {extensions, extensionsEndPosition: position};\n}\n\nexport const DECODING_STEPS = {\n  header: 0,\n  vertices: 1,\n  triangleIndices: 2,\n  edgeIndices: 3,\n  extensions: 4\n};\n\nconst DEFAULT_OPTIONS = {\n  maxDecodingStep: DECODING_STEPS.extensions\n};\n\nexport default function decode(data, userOptions) {\n  const options = Object.assign({}, DEFAULT_OPTIONS, userOptions);\n  const view = new DataView(data);\n  const {header, headerEndPosition} = decodeHeader(view);\n\n  if (options.maxDecodingStep < DECODING_STEPS.vertices) {\n    return {header};\n  }\n\n  const {vertexData, vertexDataEndPosition} = decodeVertexData(view, headerEndPosition);\n\n  if (options.maxDecodingStep < DECODING_STEPS.triangleIndices) {\n    return {header, vertexData};\n  }\n\n  const {triangleIndices, triangleIndicesEndPosition} = decodeTriangleIndices(\n    view,\n    vertexData,\n    vertexDataEndPosition\n  );\n\n  if (options.maxDecodingStep < DECODING_STEPS.edgeIndices) {\n    return {header, vertexData, triangleIndices};\n  }\n\n  const {westIndices, southIndices, eastIndices, northIndices, edgeIndicesEndPosition} =\n    decodeEdgeIndices(view, vertexData, triangleIndicesEndPosition);\n\n  if (options.maxDecodingStep < DECODING_STEPS.extensions) {\n    return {\n      header,\n      vertexData,\n      triangleIndices,\n      westIndices,\n      northIndices,\n      eastIndices,\n      southIndices\n    };\n  }\n\n  const {extensions} = decodeExtensions(view, edgeIndicesEndPosition);\n\n  return {\n    header,\n    vertexData,\n    triangleIndices,\n    westIndices,\n    northIndices,\n    eastIndices,\n    southIndices,\n    extensions\n  };\n}\n","// TYPES\nexport type {\n  Loader,\n  LoaderWithParser,\n  LoaderContext,\n  LoaderOptions,\n  Writer,\n  WriterOptions,\n  DataType,\n  SyncDataType,\n  BatchableDataType,\n  IFileSystem,\n  IRandomAccessReadFileSystem\n} from './types';\n\n// GENERAL UTILS\nexport {assert} from './lib/env-utils/assert';\nexport {\n  isBrowser,\n  isWorker,\n  nodeVersion,\n  self,\n  window,\n  global,\n  document\n} from './lib/env-utils/globals';\n\n// LOADERS.GL-SPECIFIC WORKER UTILS\nexport {createLoaderWorker} from './lib/worker-loader-utils/create-loader-worker';\nexport {parseWithWorker, canParseWithWorker} from './lib/worker-loader-utils/parse-with-worker';\n\n// PARSER UTILS\nexport {parseJSON} from './lib/parser-utils/parse-json';\n\n// MEMORY COPY UTILS\nexport {\n  toArrayBuffer,\n  sliceArrayBuffer,\n  concatenateArrayBuffers,\n  concatenateTypedArrays,\n  compareArrayBuffers\n} from './lib/binary-utils/array-buffer-utils';\nexport {padToNBytes, copyToArray, copyArrayBuffer} from './lib/binary-utils/memory-copy-utils';\nexport {\n  copyPaddedArrayBufferToDataView,\n  copyPaddedStringToDataView\n} from './lib/binary-utils/binary-copy-utils';\nexport {\n  padStringToByteAlignment,\n  copyStringToDataView,\n  copyBinaryToDataView\n} from './lib/binary-utils/encode-utils';\nexport {getFirstCharacters, getMagicString} from './lib/binary-utils/get-first-characters';\n\n// ITERATOR UTILS\nexport {\n  makeTextEncoderIterator,\n  makeTextDecoderIterator,\n  makeLineIterator,\n  makeNumberedLineIterator\n} from './lib/iterators/text-iterators';\nexport {forEach, concatenateArrayBuffersAsync} from './lib/iterators/async-iteration';\n\n// REQUEST UTILS\nexport {default as RequestScheduler} from './lib/request-utils/request-scheduler';\n\n// NODE `path`` REPLACEMENT\nimport * as path from './lib/path-utils/path';\nexport {path};\nexport {setPathPrefix, getPathPrefix, resolvePath} from './lib/path-utils/file-aliases';\nexport {addAliases as _addAliases} from './lib/path-utils/file-aliases';\n\n// NODE `fs` WRAPPERS\nimport * as fs from './lib/node/fs';\nexport {fs};\n\n// NODE `buffer` WRAPPERS\nexport {isBuffer, toBuffer, bufferToArrayBuffer} from './lib/binary-utils/buffer-utils';\n\nexport {JSONLoader} from './json-loader';\n","// Purpose: include this in your module to avoid\n// dependencies on micro modules like 'global' and 'is-browser';\n\n/* eslint-disable no-restricted-globals */\nconst globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document\n};\n\ntype obj = {[key: string]: any};\nconst self_: obj = globals.self || globals.window || globals.global || {};\nconst window_: obj = globals.window || globals.self || globals.global || {};\nconst global_: obj = globals.global || globals.self || globals.window || {};\nconst document_: obj = globals.document || {};\n\nexport {self_ as self, window_ as window, global_ as global, document_ as document};\n\n/** true if running in a browser */\nexport const isBrowser: boolean =\n  // @ts-ignore process does not exist on browser\n  typeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n\n/** true if running in a worker thread */\nexport const isWorker: boolean = typeof importScripts === 'function';\n\n// Extract node major version\nconst matches =\n  typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\n/** Major Node version (as a number) */\nexport const nodeVersion: number = (matches && parseFloat(matches[1])) || 0;\n","/* eslint-disable no-restricted-globals */\nimport type {LoaderWithParser} from '../../types';\nimport {WorkerBody} from '@loaders.gl/worker-utils';\n// import {validateLoaderVersion} from './validate-loader-version';\n\nlet requestId = 0;\n\n/**\n * Set up a WebWorkerGlobalScope to talk with the main thread\n * @param loader\n */\nexport function createLoaderWorker(loader: LoaderWithParser) {\n  // Check that we are actually in a worker thread\n  if (typeof self === 'undefined') {\n    return;\n  }\n\n  WorkerBody.onmessage = async (type, payload) => {\n    switch (type) {\n      case 'process':\n        try {\n          // validateLoaderVersion(loader, data.source.split('@')[1]);\n\n          const {input, options = {}} = payload;\n\n          const result = await parseData({\n            loader,\n            arrayBuffer: input,\n            options,\n            context: {\n              parse: parseOnMainThread\n            }\n          });\n          WorkerBody.postMessage('done', {result});\n        } catch (error) {\n          const message = error instanceof Error ? error.message : '';\n          WorkerBody.postMessage('error', {error: message});\n        }\n        break;\n      default:\n    }\n  };\n}\n\nfunction parseOnMainThread(arrayBuffer: ArrayBuffer, options: {[key: string]: any}): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const id = requestId++;\n\n    /**\n     */\n    const onMessage = (type, payload) => {\n      if (payload.id !== id) {\n        // not ours\n        return;\n      }\n\n      switch (type) {\n        case 'done':\n          WorkerBody.removeEventListener(onMessage);\n          resolve(payload.result);\n          break;\n\n        case 'error':\n          WorkerBody.removeEventListener(onMessage);\n          reject(payload.error);\n          break;\n\n        default:\n        // ignore\n      }\n    };\n\n    WorkerBody.addEventListener(onMessage);\n\n    // Ask the main thread to decode data\n    const payload = {id, input: arrayBuffer, options};\n    WorkerBody.postMessage('process', payload);\n  });\n}\n\n// TODO - Support byteOffset and byteLength (enabling parsing of embedded binaries without copies)\n// TODO - Why not support async loader.parse* funcs here?\n// TODO - Why not reuse a common function instead of reimplementing loader.parse* selection logic? Keeping loader small?\n// TODO - Lack of appropriate parser functions can be detected when we create worker, no need to wait until parse\nasync function parseData({loader, arrayBuffer, options, context}) {\n  let data;\n  let parser;\n  if (loader.parseSync || loader.parse) {\n    data = arrayBuffer;\n    parser = loader.parseSync || loader.parse;\n  } else if (loader.parseTextSync) {\n    const textDecoder = new TextDecoder();\n    data = textDecoder.decode(arrayBuffer);\n    parser = loader.parseTextSync;\n  } else {\n    throw new Error(`Could not load data with ${loader.name} loader`);\n  }\n\n  // TODO - proper merge in of loader options...\n  options = {\n    ...options,\n    modules: (loader && loader.options && loader.options.modules) || {},\n    worker: false\n  };\n\n  return await parser(data, {...options}, context, loader);\n}\n","import {assert} from '../env-utils/assert';\n\nconst workerURLCache = new Map();\n\n/**\n * Creates a loadable URL from worker source or URL\n * that can be used to create `Worker` instances.\n * Due to CORS issues it may be necessary to wrap a URL in a small importScripts\n * @param props\n * @param props.source Worker source\n * @param props.url Worker URL\n * @returns loadable url\n */\nexport function getLoadableWorkerURL(props: {source?: string; url?: string}) {\n  assert((props.source && !props.url) || (!props.source && props.url)); // Either source or url must be defined\n\n  let workerURL = workerURLCache.get(props.source || props.url);\n  if (!workerURL) {\n    // Differentiate worker urls from worker source code\n    if (props.url) {\n      workerURL = getLoadableWorkerURLFromURL(props.url);\n      workerURLCache.set(props.url, workerURL);\n    }\n\n    if (props.source) {\n      workerURL = getLoadableWorkerURLFromSource(props.source);\n      workerURLCache.set(props.source, workerURL);\n    }\n  }\n\n  assert(workerURL);\n  return workerURL;\n}\n\n/**\n * Build a loadable worker URL from worker URL\n * @param url\n * @returns loadable URL\n */\nfunction getLoadableWorkerURLFromURL(url: string): string {\n  // A local script url, we can use it to initialize a Worker directly\n  if (!url.startsWith('http')) {\n    return url;\n  }\n\n  // A remote script, we need to use `importScripts` to load from different origin\n  const workerSource = buildScriptSource(url);\n  return getLoadableWorkerURLFromSource(workerSource);\n}\n\n/**\n * Build a loadable worker URL from worker source\n * @param workerSource\n * @returns loadable url\n */\nfunction getLoadableWorkerURLFromSource(workerSource: string): string {\n  // NOTE: webworkify was previously used\n  // const blob = webworkify(workerSource, {bare: true});\n  const blob = new Blob([workerSource], {type: 'application/javascript'});\n  return URL.createObjectURL(blob);\n}\n\n/**\n * Per spec, worker cannot be initialized with a script from a different origin\n * However a local worker script can still import scripts from other origins,\n * so we simply build a wrapper script.\n *\n * @param workerUrl\n * @returns source\n */\nfunction buildScriptSource(workerUrl: string): string {\n  return `\\\ntry {\n  importScripts('${workerUrl}');\n} catch (error) {\n  console.error(error);\n  throw error;\n}`;\n}\n","import type {\n  WorkerObject,\n  WorkerOptions,\n  WorkerContext,\n  WorkerMessageType,\n  WorkerMessagePayload\n} from '../../types';\nimport type WorkerJob from '../worker-farm/worker-job';\nimport WorkerFarm from '../worker-farm/worker-farm';\nimport {removeNontransferableOptions} from '../worker-utils/remove-nontransferable-options';\nimport {getWorkerURL, getWorkerName} from './get-worker-url';\n\ntype ProcessOnWorkerOptions = WorkerOptions & {\n  jobName?: string;\n  [key: string]: any;\n};\n\n/**\n * Determines if we can parse with worker\n * @param loader\n * @param data\n * @param options\n */\nexport function canProcessOnWorker(worker: WorkerObject, options?: WorkerOptions) {\n  if (!WorkerFarm.isSupported()) {\n    return false;\n  }\n\n  return worker.worker && options?.worker;\n}\n\n/**\n * This function expects that the worker thread sends certain messages,\n * Creating such a worker can be automated if the worker is wrapper by a call to\n * createWorker in @loaders.gl/worker-utils.\n */\nexport async function processOnWorker(\n  worker: WorkerObject,\n  data: any,\n  options: ProcessOnWorkerOptions = {},\n  context: WorkerContext = {}\n): Promise<any> {\n  const name = getWorkerName(worker);\n  const url = getWorkerURL(worker, options);\n\n  const workerFarm = WorkerFarm.getWorkerFarm(options);\n  const workerPool = workerFarm.getWorkerPool({name, url});\n\n  const jobName = options.jobName || worker.name;\n  const job = await workerPool.startJob(\n    jobName,\n    // eslint-disable-next-line\n    onMessage.bind(null, context)\n  );\n\n  // Kick off the processing in the worker\n  const transferableOptions = removeNontransferableOptions(options);\n  job.postMessage('process', {input: data, options: transferableOptions});\n\n  const result = await job.result;\n  return result.result;\n}\n\n/**\n * Job completes when we receive the result\n * @param job\n * @param message\n */\nasync function onMessage(\n  context: WorkerContext,\n  job: WorkerJob,\n  type: WorkerMessageType,\n  payload: WorkerMessagePayload\n) {\n  switch (type) {\n    case 'done':\n      // Worker is done\n      job.done(payload);\n      break;\n\n    case 'error':\n      // Worker encountered an error\n      job.error(payload.error);\n      break;\n\n    case 'process':\n      // Worker is asking for us (main thread) to process something\n      const {id, input, options} = payload;\n      try {\n        if (!context.process) {\n          job.postMessage('error', {id, error: 'Worker not set up to process on main thread'});\n          return;\n        }\n        const result = await context.process(input, options);\n        job.postMessage('done', {id, result});\n      } catch (error) {\n        const message = error instanceof Error ? error.message : 'unknown error';\n        job.postMessage('error', {id, error: message});\n      }\n      break;\n\n    default:\n      // eslint-disable-next-line\n      console.warn(`process-on-worker: unknown message ${type}`);\n  }\n}\n","/**\n * Safely stringify JSON (drop non serializable values like functions and regexps)\n * @param value\n */\nexport function removeNontransferableOptions(object: object): object {\n  // options.log object contains functions which cannot be transferred\n  // TODO - decide how to handle logging on workers\n  // TODO - warn if options stringification is long\n  return JSON.parse(stringifyJSON(object));\n}\n\nfunction stringifyJSON(v) {\n  const cache = new Set();\n  return JSON.stringify(v, (key, value) => {\n    if (typeof value === 'object' && value !== null) {\n      if (cache.has(value)) {\n        // Circular reference found\n        try {\n          // If this value does not reference a parent it can be deduped\n          return JSON.parse(JSON.stringify(value));\n        } catch (err) {\n          // discard key if value cannot be deduped\n          return undefined;\n        }\n      }\n      // Store value in our set\n      cache.add(value);\n    }\n    return value;\n  });\n}\n","import type {\n  WorkerMessageType,\n  WorkerMessagePayload,\n  WorkerContext,\n  Process,\n  ProcessInBatches\n} from '../../types';\nimport AsyncQueue from '../async-queue/async-queue';\nimport WorkerBody from '../worker-farm/worker-body';\n// import {validateWorkerVersion} from './validate-worker-version';\n\n/** Counter for jobs */\nlet requestId = 0;\nlet inputBatches;\nlet options;\n\nexport type ProcessOnMainThread = (data: any, options?: {[key: string]: any}, context?) => any;\n\n/**\n * Set up a WebWorkerGlobalScope to talk with the main thread\n */\nexport function createWorker(process: Process, processInBatches?: ProcessInBatches): void {\n  // Check that we are actually in a worker thread\n  if (typeof self === 'undefined') {\n    return;\n  }\n\n  const context: WorkerContext = {\n    process: processOnMainThread\n  };\n\n  // eslint-disable-next-line complexity\n  WorkerBody.onmessage = async (type: WorkerMessageType, payload: WorkerMessagePayload) => {\n    try {\n      switch (type) {\n        case 'process':\n          if (!process) {\n            throw new Error('Worker does not support atomic processing');\n          }\n          const result = await process(payload.input, payload.options || {}, context);\n          WorkerBody.postMessage('done', {result});\n          break;\n\n        case 'process-in-batches':\n          if (!processInBatches) {\n            throw new Error('Worker does not support batched processing');\n          }\n          inputBatches = new AsyncQueue();\n          options = payload.options || {};\n          const resultIterator = processInBatches(inputBatches, options, context?.processInBatches);\n          for await (const batch of resultIterator) {\n            WorkerBody.postMessage('output-batch', {result: batch});\n          }\n          WorkerBody.postMessage('done', {});\n          break;\n\n        case 'input-batch':\n          inputBatches.push(payload.input);\n          break;\n\n        case 'input-done':\n          inputBatches.close();\n          break;\n\n        default:\n      }\n    } catch (error) {\n      const message = error instanceof Error ? error.message : '';\n      WorkerBody.postMessage('error', {error: message});\n    }\n  };\n}\n\nfunction processOnMainThread(arrayBuffer, options = {}) {\n  return new Promise((resolve, reject) => {\n    const id = requestId++;\n\n    /**\n     */\n    const onMessage = (type, payload) => {\n      if (payload.id !== id) {\n        // not ours\n        return;\n      }\n\n      switch (type) {\n        case 'done':\n          WorkerBody.removeEventListener(onMessage);\n          resolve(payload.result);\n          break;\n\n        case 'error':\n          WorkerBody.removeEventListener(onMessage);\n          reject(payload.error);\n          break;\n\n        default:\n        // ignore\n      }\n    };\n\n    WorkerBody.addEventListener(onMessage);\n\n    // Ask the main thread to decode data\n    const payload = {id, input: arrayBuffer, options};\n    WorkerBody.postMessage('process', payload);\n  });\n}\n","import type {WorkerObject} from '../../types';\nimport {assert} from '../env-utils/assert';\nimport {VERSION} from '../env-utils/version';\n\n/**\n * Check if worker is compatible with this library version\n * @param worker\n * @param libVersion\n * @returns `true` if the two versions are compatible\n */\nexport function validateWorkerVersion(\n  worker: WorkerObject,\n  coreVersion: string = VERSION\n): boolean {\n  assert(worker, 'no worker provided');\n\n  const workerVersion = worker.version;\n  if (!coreVersion || !workerVersion) {\n    return false;\n  }\n\n  // TODO enable when fix the __version__ injection\n  // const coreVersions = parseVersion(coreVersion);\n  // const workerVersions = parseVersion(workerVersion);\n  // assert(\n  //   coreVersion.major === workerVersion.major && coreVersion.minor <= workerVersion.minor,\n  //   `worker: ${worker.name} is not compatible. ${coreVersion.major}.${\n  //     coreVersion.minor\n  //   }+ is required.`\n  // );\n\n  return true;\n}\n\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction parseVersion(version) {\n  const parts = version.split('.').map(Number);\n  return {major: parts[0], minor: parts[1]};\n}\n","/* global importScripts */\nimport {global, isBrowser, isWorker} from '../env-utils/globals';\nimport * as node from '../node/require-utils.node';\nimport {assert} from '../env-utils/assert';\nimport {VERSION as __VERSION__} from '../env-utils/version';\n\n// TODO - unpkg.com doesn't seem to have a `latest` specifier for alpha releases...\nconst LATEST = 'beta';\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : LATEST;\n\nconst loadLibraryPromises = {}; // promises\n\n/**\n * Dynamically loads a library (\"module\")\n *\n * - wasm library: Array buffer is returned\n * - js library: Parse JS is returned\n *\n * Method depends on environment\n * - browser - script element is created and installed on document\n * - worker - eval is called on global context\n * - node - file is required\n *\n * @param libraryUrl\n * @param moduleName\n * @param options\n */\nexport async function loadLibrary(\n  libraryUrl: string,\n  moduleName: string | null = null,\n  options: object = {}\n): Promise<any> {\n  if (moduleName) {\n    libraryUrl = getLibraryUrl(libraryUrl, moduleName, options);\n  }\n\n  // Ensure libraries are only loaded once\n  loadLibraryPromises[libraryUrl] =\n    loadLibraryPromises[libraryUrl] || loadLibraryFromFile(libraryUrl);\n  return await loadLibraryPromises[libraryUrl];\n}\n\n// TODO - sort out how to resolve paths for main/worker and dev/prod\nexport function getLibraryUrl(library, moduleName?: string, options?): string {\n  // Check if already a URL\n  if (library.startsWith('http')) {\n    return library;\n  }\n\n  // Allow application to import and supply libraries through `options.modules`\n  const modules = options.modules || {};\n  if (modules[library]) {\n    return modules[library];\n  }\n\n  // Load from local files, not from CDN scripts in Node.js\n  // TODO - needs to locate the modules directory when installed!\n  if (!isBrowser) {\n    return `modules/${moduleName}/dist/libs/${library}`;\n  }\n\n  // In browser, load from external scripts\n  if (options.CDN) {\n    assert(options.CDN.startsWith('http'));\n    return `${options.CDN}/${moduleName}@${VERSION}/dist/libs/${library}`;\n  }\n\n  // TODO - loading inside workers requires paths relative to worker script location...\n  if (isWorker) {\n    return `../src/libs/${library}`;\n  }\n\n  return `modules/${moduleName}/src/libs/${library}`;\n}\n\nasync function loadLibraryFromFile(libraryUrl) {\n  if (libraryUrl.endsWith('wasm')) {\n    const response = await fetch(libraryUrl);\n    return await response.arrayBuffer();\n  }\n\n  if (!isBrowser) {\n    return node.requireFromFile && (await node.requireFromFile(libraryUrl));\n  }\n  if (isWorker) {\n    return importScripts(libraryUrl);\n  }\n  // TODO - fix - should be more secure than string parsing since observes CORS\n  // if (isBrowser) {\n  //   return await loadScriptFromFile(libraryUrl);\n  // }\n\n  const response = await fetch(libraryUrl);\n  const scriptSource = await response.text();\n  return loadLibraryFromString(scriptSource, libraryUrl);\n}\n\n/*\nasync function loadScriptFromFile(libraryUrl) {\n  const script = document.createElement('script');\n  script.src = libraryUrl;\n  return await new Promise((resolve, reject) => {\n    script.onload = data => {\n      resolve(data);\n    };\n    script.onerror = reject;\n  });\n}\n*/\n\n// TODO - Needs security audit...\n//  - Raw eval call\n//  - Potentially bypasses CORS\n// Upside is that this separates fetching and parsing\n// we could create a`LibraryLoader` or`ModuleLoader`\nfunction loadLibraryFromString(scriptSource, id) {\n  if (!isBrowser) {\n    return node.requireFromString && node.requireFromString(scriptSource, id);\n  }\n\n  if (isWorker) {\n    // Use lvalue trick to make eval run in global scope\n    eval.call(global, scriptSource); // eslint-disable-line no-eval\n    // https://stackoverflow.com/questions/9107240/1-evalthis-vs-evalthis-in-javascript\n    // http://perfectionkills.com/global-eval-what-are-the-options/\n    return null;\n  }\n\n  const script = document.createElement('script');\n  script.id = id;\n  // most browsers like a separate text node but some throw an error. The second method covers those.\n  try {\n    script.appendChild(document.createTextNode(scriptSource));\n  } catch (e) {\n    script.text = scriptSource;\n  }\n  document.body.appendChild(script);\n  return null;\n}\n\n// TODO - technique for module injection into worker, from THREE.DracoLoader...\n/*\nfunction combineWorkerWithLibrary(worker, jsContent) {\n  var fn = wWorker.toString();\n  var body = [\n    '// injected',\n    jsContent,\n    '',\n    '// worker',\n    fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))\n  ].join('\\n');\n  this.workerSourceURL = URL.createObjectURL(new Blob([body]));\n}\n*/\n","import type {WorkerJob, WorkerMessageType, WorkerMessagePayload} from '@loaders.gl/worker-utils';\nimport type {Loader, LoaderOptions, LoaderContext} from '../../types';\nimport {WorkerFarm, getWorkerURL} from '@loaders.gl/worker-utils';\n\n/**\n * Determines if a loader can parse with worker\n * @param loader\n * @param options\n */\nexport function canParseWithWorker(loader: Loader, options?: LoaderOptions) {\n  if (!WorkerFarm.isSupported()) {\n    return false;\n  }\n\n  return loader.worker && options?.worker;\n}\n\n/**\n * this function expects that the worker function sends certain messages,\n * this can be automated if the worker is wrapper by a call to createLoaderWorker in @loaders.gl/loader-utils.\n */\nexport async function parseWithWorker(\n  loader: Loader,\n  data,\n  options?: LoaderOptions,\n  context?: LoaderContext,\n  parseOnMainThread?: (arrayBuffer: ArrayBuffer, options: {[key: string]: any}) => Promise<void>\n) {\n  const name = loader.id; // TODO\n  const url = getWorkerURL(loader, options);\n\n  const workerFarm = WorkerFarm.getWorkerFarm(options);\n  const workerPool = workerFarm.getWorkerPool({name, url});\n\n  // options.log object contains functions which cannot be transferred\n  // TODO - decide how to handle logging on workers\n  options = JSON.parse(JSON.stringify(options));\n\n  const job = await workerPool.startJob(\n    'process-on-worker',\n    // eslint-disable-next-line\n    onMessage.bind(null, parseOnMainThread)\n  );\n\n  job.postMessage('process', {\n    // @ts-ignore\n    input: data,\n    options\n  });\n\n  const result = await job.result;\n  return await result.result;\n}\n\n/**\n * Handle worker's responses to the main thread\n * @param job\n * @param type\n * @param payload\n */\nasync function onMessage(\n  parseOnMainThread,\n  job: WorkerJob,\n  type: WorkerMessageType,\n  payload: WorkerMessagePayload\n) {\n  switch (type) {\n    case 'done':\n      job.done(payload);\n      break;\n\n    case 'error':\n      job.error(payload.error);\n      break;\n\n    case 'process':\n      // Worker is asking for main thread to parseO\n      const {id, input, options} = payload;\n      try {\n        const result = await parseOnMainThread(input, options);\n        job.postMessage('done', {id, result});\n      } catch (error) {\n        const message = error instanceof Error ? error.message : 'unknown error';\n        job.postMessage('error', {id, error: message});\n      }\n      break;\n\n    default:\n      // eslint-disable-next-line\n      console.warn(`parse-with-worker unknown message ${type}`);\n  }\n}\n","import {getFirstCharacters} from '../binary-utils/get-first-characters';\n\n/**\n * Minimal JSON parser that throws more meaningful error messages\n */\nexport function parseJSON(string: string): any {\n  try {\n    return JSON.parse(string);\n  } catch (_) {\n    throw new Error(`Failed to parse JSON from data starting with \"${getFirstCharacters(string)}\"`);\n  }\n}\n","import {TypedArray} from '../../types';\nimport {padToNBytes} from './memory-copy-utils';\n\n/**\n * Copy sourceBuffer to dataView with some padding\n *\n * @param {DataView | null} dataView - destination data container. If null - only new offset is calculated\n * @param {number} byteOffset - destination byte offset to copy to\n * @param {Array | TypedArray} sourceBuffer - source data buffer\n * @param {number} padding - pad the resulting array to multiple of \"padding\" bytes. Additional bytes are filled with 0x20 (ASCII space)\n *\n * @return new byteOffset of resulting dataView\n */\nexport function copyPaddedArrayBufferToDataView(\n  dataView: DataView | null,\n  byteOffset: number,\n  sourceBuffer: TypedArray,\n  padding: number\n) {\n  const paddedLength = padToNBytes(sourceBuffer.byteLength, padding);\n  const padLength = paddedLength - sourceBuffer.byteLength;\n\n  if (dataView) {\n    // Copy array\n    const targetArray = new Uint8Array(\n      dataView.buffer,\n      dataView.byteOffset + byteOffset,\n      sourceBuffer.byteLength\n    );\n    const sourceArray = new Uint8Array(sourceBuffer);\n    targetArray.set(sourceArray);\n\n    // Add PADDING\n    for (let i = 0; i < padLength; ++i) {\n      // json chunk is padded with spaces (ASCII 0x20)\n      dataView.setUint8(byteOffset + sourceBuffer.byteLength + i, 0x20);\n    }\n  }\n  byteOffset += paddedLength;\n  return byteOffset;\n}\n\n/**\n * Copy string to dataView with some padding\n *\n * @param {DataView | null} dataView - destination data container. If null - only new offset is calculated\n * @param {number} byteOffset - destination byte offset to copy to\n * @param {string} string - source string\n * @param {number} padding - pad the resulting array to multiple of \"padding\" bytes. Additional bytes are filled with 0x20 (ASCII space)\n *\n * @return new byteOffset of resulting dataView\n */\nexport function copyPaddedStringToDataView(\n  dataView: DataView | null,\n  byteOffset: number,\n  string: string,\n  padding: number\n): number {\n  const textEncoder = new TextEncoder();\n  // PERFORMANCE IDEA: We encode twice, once to get size and once to store\n  // PERFORMANCE IDEA: Use TextEncoder.encodeInto() to avoid temporary copy\n  const stringBuffer = textEncoder.encode(string);\n\n  byteOffset = copyPaddedArrayBufferToDataView(dataView, byteOffset, stringBuffer, padding);\n\n  return byteOffset;\n}\n","// Note: These were broken out from gltf loader...\n// eslint-disable-next-line complexity\n\n// PERFORMANCE IDEA: No need to copy string twice...\nexport function padStringToByteAlignment(string, byteAlignment) {\n  const length = string.length;\n  const paddedLength = Math.ceil(length / byteAlignment) * byteAlignment; // Round up to the required alignment\n  const padding = paddedLength - length;\n  let whitespace = '';\n  for (let i = 0; i < padding; ++i) {\n    whitespace += ' ';\n  }\n  return string + whitespace;\n}\n\nexport function copyStringToDataView(dataView, byteOffset, string, byteLength) {\n  if (dataView) {\n    for (let i = 0; i < byteLength; i++) {\n      dataView.setUint8(byteOffset + i, string.charCodeAt(i));\n    }\n  }\n  return byteOffset + byteLength;\n}\n\nexport function copyBinaryToDataView(dataView, byteOffset, binary, byteLength) {\n  if (dataView) {\n    for (let i = 0; i < byteLength; i++) {\n      dataView.setUint8(byteOffset + i, binary[i]);\n    }\n  }\n  return byteOffset + byteLength;\n}\n","// TextDecoder iterators\n// TextDecoder will keep any partial undecoded bytes between calls to `decode`\n\nexport async function* makeTextDecoderIterator(\n  arrayBufferIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>,\n  options: TextDecoderOptions = {}\n): AsyncIterable<string> {\n  const textDecoder = new TextDecoder(undefined, options);\n  for await (const arrayBuffer of arrayBufferIterator) {\n    yield typeof arrayBuffer === 'string'\n      ? arrayBuffer\n      : textDecoder.decode(arrayBuffer, {stream: true});\n  }\n}\n\n// TextEncoder iterator\n// TODO - this is not useful unless min chunk size is given\n// TextEncoder will keep any partial undecoded bytes between calls to `encode`\n// If iterator does not yield strings, assume arrayBuffer and return unencoded\n\nexport async function* makeTextEncoderIterator(\n  textIterator: AsyncIterable<string> | Iterable<ArrayBuffer>\n): AsyncIterable<ArrayBuffer> {\n  const textEncoder = new TextEncoder();\n  for await (const text of textIterator) {\n    yield typeof text === 'string' ? textEncoder.encode(text) : text;\n  }\n}\n\n/**\n * @param textIterator async iterable yielding strings\n * @returns an async iterable over lines\n * See http://2ality.com/2018/04/async-iter-nodejs.html\n */\n\nexport async function* makeLineIterator(\n  textIterator: AsyncIterable<string>\n): AsyncIterable<string> {\n  let previous = '';\n  for await (const textChunk of textIterator) {\n    previous += textChunk;\n    let eolIndex;\n    while ((eolIndex = previous.indexOf('\\n')) >= 0) {\n      // line includes the EOL\n      const line = previous.slice(0, eolIndex + 1);\n      previous = previous.slice(eolIndex + 1);\n      yield line;\n    }\n  }\n\n  if (previous.length > 0) {\n    yield previous;\n  }\n}\n\n/**\n * @param lineIterator async iterable yielding lines\n * @returns async iterable yielding numbered lines\n *\n * See http://2ality.com/2018/04/async-iter-nodejs.html\n */\nexport async function* makeNumberedLineIterator(\n  lineIterator: AsyncIterable<string>\n): AsyncIterable<{counter: number; line: string}> {\n  let counter = 1;\n  for await (const line of lineIterator) {\n    yield {counter, line};\n    counter++;\n  }\n}\n","import {concatenateArrayBuffers} from '../binary-utils/array-buffer-utils';\n\n// GENERAL UTILITIES\n\n/**\n * Iterate over async iterator, without resetting iterator if end is not reached\n * - forEach intentionally does not reset iterator if exiting loop prematurely\n *   so that iteration can continue in a second loop\n * - It is recommended to use a standard for-await as last loop to ensure\n *   iterator gets properly reset\n *\n * TODO - optimize using sync iteration if argument is an Iterable?\n *\n * @param iterator\n * @param visitor\n */\nexport async function forEach(iterator, visitor) {\n  // eslint-disable-next-line\n  while (true) {\n    const {done, value} = await iterator.next();\n    if (done) {\n      iterator.return();\n      return;\n    }\n    const cancel = visitor(value);\n    if (cancel) {\n      return;\n    }\n  }\n}\n\n// Breaking big data into iterable chunks, concatenating iterable chunks into big data objects\n\n/**\n * Concatenates all data chunks yielded by an (async) iterator\n * This function can e.g. be used to enable atomic parsers to work on (async) iterator inputs\n */\n\nexport async function concatenateArrayBuffersAsync(\n  asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n): Promise<ArrayBuffer> {\n  const arrayBuffers: ArrayBuffer[] = [];\n  for await (const chunk of asyncIterator) {\n    arrayBuffers.push(chunk);\n  }\n  return concatenateArrayBuffers(...arrayBuffers);\n}\n\nexport async function concatenateStringsAsync(\n  asyncIterator: AsyncIterable<string> | Iterable<string>\n): Promise<string> {\n  const strings: string[] = [];\n  for await (const chunk of asyncIterator) {\n    strings.push(chunk);\n  }\n  return strings.join('');\n}\n","import {Stats} from '@probe.gl/stats';\n\ntype Handle = any;\ntype DoneFunction = () => any;\ntype GetPriorityFunction = () => number;\ntype RequestResult = {\n  done: DoneFunction;\n} | null;\n\n/** RequestScheduler Options */\nexport type RequestSchedulerProps = {\n  id?: string;\n  throttleRequests?: boolean;\n  maxRequests?: number;\n};\n\nconst STAT_QUEUED_REQUESTS = 'Queued Requests';\nconst STAT_ACTIVE_REQUESTS = 'Active Requests';\nconst STAT_CANCELLED_REQUESTS = 'Cancelled Requests';\nconst STAT_QUEUED_REQUESTS_EVER = 'Queued Requests Ever';\nconst STAT_ACTIVE_REQUESTS_EVER = 'Active Requests Ever';\n\nconst DEFAULT_PROPS: Required<RequestSchedulerProps> = {\n  id: 'request-scheduler',\n  // Specifies if the request scheduler should throttle incoming requests, mainly for comparative testing\n  throttleRequests: true,\n  // The maximum number of simultaneous active requests. Un-throttled requests do not observe this limit.\n  maxRequests: 6\n};\n\n/** Tracks one request */\ntype Request = {\n  handle: Handle;\n  priority: number;\n  getPriority: GetPriorityFunction;\n  resolve?: (value: any) => any;\n};\n\n/**\n * Used to issue a request, without having them \"deeply queued\" by the browser.\n * @todo - Track requests globally, across multiple servers\n */\nexport default class RequestScheduler {\n  readonly props: Required<RequestSchedulerProps>;\n  readonly stats: Stats;\n  activeRequestCount: number = 0;\n\n  /** Tracks the number of active requests and prioritizes/cancels queued requests. */\n  private requestQueue: Request[] = [];\n  private requestMap: Map<Handle, Promise<RequestResult>> = new Map();\n  private deferredUpdate: any = null;\n\n  constructor(props: RequestSchedulerProps = {}) {\n    this.props = {...DEFAULT_PROPS, ...props};\n\n    // Returns the statistics used by the request scheduler.\n    this.stats = new Stats({id: this.props.id});\n    this.stats.get(STAT_QUEUED_REQUESTS);\n    this.stats.get(STAT_ACTIVE_REQUESTS);\n    this.stats.get(STAT_CANCELLED_REQUESTS);\n    this.stats.get(STAT_QUEUED_REQUESTS_EVER);\n    this.stats.get(STAT_ACTIVE_REQUESTS_EVER);\n  }\n\n  /**\n   * Called by an application that wants to issue a request, without having it deeply queued by the browser\n   *\n   * When the returned promise resolved, it is OK for the application to issue a request.\n   * The promise resolves to an object that contains a `done` method.\n   * When the application's request has completed (or failed), the application must call the `done` function\n   *\n   * @param handle\n   * @param getPriority will be called when request \"slots\" open up,\n   *    allowing the caller to update priority or cancel the request\n   *    Highest priority executes first, priority < 0 cancels the request\n   * @returns a promise\n   *   - resolves to a object (with a `done` field) when the request can be issued without queueing,\n   *   - resolves to `null` if the request has been cancelled (by the callback return < 0).\n   *     In this case the application should not issue the request\n   */\n  scheduleRequest(\n    handle: Handle,\n    getPriority: GetPriorityFunction = () => 0\n  ): Promise<RequestResult> {\n    // Allows throttling to be disabled\n    if (!this.props.throttleRequests) {\n      return Promise.resolve({done: () => {}});\n    }\n\n    // dedupe\n    if (this.requestMap.has(handle)) {\n      return this.requestMap.get(handle) as Promise<any>;\n    }\n\n    const request: Request = {handle, priority: 0, getPriority};\n    const promise = new Promise<RequestResult>((resolve) => {\n      // @ts-ignore\n      request.resolve = resolve;\n      return request;\n    });\n\n    this.requestQueue.push(request);\n    this.requestMap.set(handle, promise);\n    this._issueNewRequests();\n    return promise;\n  }\n\n  // PRIVATE\n\n  _issueRequest(request: Request): Promise<any> {\n    const {handle, resolve} = request;\n    let isDone = false;\n\n    const done = () => {\n      // can only be called once\n      if (!isDone) {\n        isDone = true;\n\n        // Stop tracking a request - it has completed, failed, cancelled etc\n        this.requestMap.delete(handle);\n        this.activeRequestCount--;\n        // A slot just freed up, see if any queued requests are waiting\n        this._issueNewRequests();\n      }\n    };\n\n    // Track this request\n    this.activeRequestCount++;\n\n    return resolve ? resolve({done}) : Promise.resolve({done});\n  }\n\n  /** We check requests asynchronously, to prevent multiple updates */\n  _issueNewRequests(): void {\n    if (!this.deferredUpdate) {\n      this.deferredUpdate = setTimeout(() => this._issueNewRequestsAsync(), 0);\n    }\n  }\n\n  /** Refresh all requests  */\n  _issueNewRequestsAsync() {\n    // TODO - shouldn't we clear the timeout?\n    this.deferredUpdate = null;\n\n    const freeSlots = Math.max(this.props.maxRequests - this.activeRequestCount, 0);\n\n    if (freeSlots === 0) {\n      return;\n    }\n\n    this._updateAllRequests();\n\n    // Resolve pending promises for the top-priority requests\n    for (let i = 0; i < freeSlots; ++i) {\n      const request = this.requestQueue.shift();\n      if (request) {\n        this._issueRequest(request); // eslint-disable-line @typescript-eslint/no-floating-promises\n      }\n    }\n\n    // Uncomment to debug\n    // console.log(`${freeSlots} free slots, ${this.requestQueue.length} queued requests`);\n  }\n\n  /** Ensure all requests have updated priorities, and that no longer valid requests are cancelled */\n  _updateAllRequests() {\n    const requestQueue = this.requestQueue;\n    for (let i = 0; i < requestQueue.length; ++i) {\n      const request = requestQueue[i];\n      if (!this._updateRequest(request)) {\n        // Remove the element and make sure to adjust the counter to account for shortened array\n        requestQueue.splice(i, 1);\n        this.requestMap.delete(request.handle);\n        i--;\n      }\n    }\n\n    // Sort the remaining requests based on priority\n    requestQueue.sort((a, b) => a.priority - b.priority);\n  }\n\n  /** Update a single request by calling the callback */\n  _updateRequest(request) {\n    request.priority = request.getPriority(request.handle); // eslint-disable-line callback-return\n\n    // by returning a negative priority, the callback cancels the request\n    if (request.priority < 0) {\n      request.resolve(null);\n      return false;\n    }\n    return true;\n  }\n}\n","// Beginning of a minimal implementation of the Node.js path API, that doesn't pull in big polyfills.\n\n/**\n * Replacement for Node.js path.dirname\n * @param url\n */\nexport function dirname(url: string): string {\n  const slashIndex = url && url.lastIndexOf('/');\n  return slashIndex >= 0 ? url.substr(0, slashIndex as number) : '';\n}\n\n/**\n * Replacement for Node.js path.join\n * @param parts\n */\nexport function join(...parts: string[]): string {\n  const separator = '/';\n  parts = parts.map((part, index) => {\n    if (index) {\n      part = part.replace(new RegExp(`^${separator}`), '');\n    }\n    if (index !== parts.length - 1) {\n      part = part.replace(new RegExp(`${separator}$`), '');\n    }\n    return part;\n  });\n  return parts.join(separator);\n}\n","// Simple file alias mechanisms for tests.\n\nlet pathPrefix = '';\nconst fileAliases: {[aliasPath: string]: string} = {};\n\n/*\n * Set a relative path prefix\n */\nexport function setPathPrefix(prefix: string): void {\n  pathPrefix = prefix;\n}\n\n/*\n * Get the relative path prefix\n */\nexport function getPathPrefix(): string {\n  return pathPrefix;\n}\n\n/**\n *\n * @param aliases\n *\n * Note: addAliases are an experimental export, they are only for testing of loaders.gl loaders\n * not intended as a generic aliasing mechanism\n */\nexport function addAliases(aliases: {[aliasPath: string]: string}): void {\n  Object.assign(fileAliases, aliases);\n}\n\n/**\n * Resolves aliases and adds path-prefix to paths\n */\nexport function resolvePath(filename: string): string {\n  for (const alias in fileAliases) {\n    if (filename.startsWith(alias)) {\n      const replacement = fileAliases[alias];\n      filename = filename.replace(alias, replacement);\n    }\n  }\n  if (!filename.startsWith('http://') && !filename.startsWith('https://')) {\n    filename = `${pathPrefix}${filename}`;\n  }\n  return filename;\n}\n","import * as node from '../node/buffer-utils.node';\n\n/**\n * Check for Node.js `Buffer` (without triggering bundler to include Buffer polyfill on browser)\n */\nexport function isBuffer(value: any): boolean {\n  return value && typeof value === 'object' && value.isBuffer;\n}\n\n/**\n * Converts to Node.js `Buffer` (without triggering bundler to include Buffer polyfill on browser)\n * @todo better data type\n */\nexport function toBuffer(data: any): Buffer {\n  return node.toBuffer ? node.toBuffer(data) : data;\n}\n\n/**\n * Converts Node.js `Buffer` to `ArrayBuffer` (without triggering bundler to include Buffer polyfill on browser)\n * @todo better data type\n */\nexport function bufferToArrayBuffer(data: any): ArrayBuffer {\n  if (node.toArrayBuffer) {\n    // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n    return node.toArrayBuffer(data);\n  }\n  return data;\n}\n","import type {LoaderWithParser} from './types';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\n/**\n * A JSON Micro loader (minimal bundle size)\n * Alternative to `@loaders.gl/json`\n */\nexport const JSONLoader = {\n  name: 'JSON',\n  id: 'json',\n  module: 'json',\n  version: VERSION,\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json'],\n  category: 'json',\n  text: true,\n  parseTextSync,\n  parse: async (arrayBuffer) => parseTextSync(new TextDecoder().decode(arrayBuffer)),\n  options: {}\n};\n\n// TODO - deprecated\nfunction parseTextSync(text) {\n  return JSON.parse(text);\n}\n\nexport const _typecheckJSONLoader: LoaderWithParser = JSONLoader;\n","import {getMeshBoundingBox} from '@loaders.gl/schema';\nimport Martini from '@mapbox/martini';\nimport Delatin from './delatin';\nimport {addSkirt} from './helpers/skirt';\n\nfunction getTerrain(imageData, width, height, elevationDecoder, tesselator) {\n  const {rScaler, bScaler, gScaler, offset} = elevationDecoder;\n\n  // From Martini demo\n  // https://observablehq.com/@mourner/martin-real-time-rtin-terrain-mesh\n  const terrain = new Float32Array((width + 1) * (height + 1));\n  // decode terrain values\n  for (let i = 0, y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++, i++) {\n      const k = i * 4;\n      const r = imageData[k + 0];\n      const g = imageData[k + 1];\n      const b = imageData[k + 2];\n      terrain[i + y] = r * rScaler + g * gScaler + b * bScaler + offset;\n    }\n  }\n\n  if (tesselator === 'martini') {\n    // backfill bottom border\n    for (let i = (width + 1) * width, x = 0; x < width; x++, i++) {\n      terrain[i] = terrain[i - width - 1];\n    }\n    // backfill right border\n    for (let i = height, y = 0; y < height + 1; y++, i += height + 1) {\n      terrain[i] = terrain[i - 1];\n    }\n  }\n\n  return terrain;\n}\n\nfunction getMeshAttributes(vertices, terrain, width, height, bounds) {\n  const gridSize = width + 1;\n  const numOfVerticies = vertices.length / 2;\n  // vec3. x, y in pixels, z in meters\n  const positions = new Float32Array(numOfVerticies * 3);\n  // vec2. 1 to 1 relationship with position. represents the uv on the texture image. 0,0 to 1,1.\n  const texCoords = new Float32Array(numOfVerticies * 2);\n\n  const [minX, minY, maxX, maxY] = bounds || [0, 0, width, height];\n  const xScale = (maxX - minX) / width;\n  const yScale = (maxY - minY) / height;\n\n  for (let i = 0; i < numOfVerticies; i++) {\n    const x = vertices[i * 2];\n    const y = vertices[i * 2 + 1];\n    const pixelIdx = y * gridSize + x;\n\n    positions[3 * i + 0] = x * xScale + minX;\n    positions[3 * i + 1] = -y * yScale + maxY;\n    positions[3 * i + 2] = terrain[pixelIdx];\n\n    texCoords[2 * i + 0] = x / width;\n    texCoords[2 * i + 1] = y / height;\n  }\n\n  return {\n    POSITION: {value: positions, size: 3},\n    TEXCOORD_0: {value: texCoords, size: 2}\n    // NORMAL: {}, - optional, but creates the high poly look with lighting\n  };\n}\n\n/**\n * Returns generated mesh object from image data\n *\n * @param {object} terrainImage terrain image data\n * @param {object} terrainOptions terrain options\n * @returns mesh object\n */\nfunction getMesh(terrainImage, terrainOptions) {\n  if (terrainImage === null) {\n    return null;\n  }\n  const {meshMaxError, bounds, elevationDecoder} = terrainOptions;\n\n  const {data, width, height} = terrainImage;\n\n  let terrain;\n  let mesh;\n  switch (terrainOptions.tesselator) {\n    case 'martini':\n      terrain = getTerrain(data, width, height, elevationDecoder, terrainOptions.tesselator);\n      mesh = getMartiniTileMesh(meshMaxError, width, terrain);\n      break;\n    case 'delatin':\n      terrain = getTerrain(data, width, height, elevationDecoder, terrainOptions.tesselator);\n      mesh = getDelatinTileMesh(meshMaxError, width, height, terrain);\n      break;\n    // auto\n    default:\n      if (width === height && !(height & (width - 1))) {\n        terrain = getTerrain(data, width, height, elevationDecoder, 'martini');\n        mesh = getMartiniTileMesh(meshMaxError, width, terrain);\n      } else {\n        terrain = getTerrain(data, width, height, elevationDecoder, 'delatin');\n        mesh = getDelatinTileMesh(meshMaxError, width, height, terrain);\n      }\n      break;\n  }\n\n  const {vertices} = mesh;\n  let {triangles} = mesh;\n  let attributes = getMeshAttributes(vertices, terrain, width, height, bounds);\n\n  // Compute bounding box before adding skirt so that z values are not skewed\n  const boundingBox = getMeshBoundingBox(attributes);\n\n  if (terrainOptions.skirtHeight) {\n    const {attributes: newAttributes, triangles: newTriangles} = addSkirt(\n      attributes,\n      triangles,\n      terrainOptions.skirtHeight\n    );\n    attributes = newAttributes;\n    triangles = newTriangles;\n  }\n\n  return {\n    // Data return by this loader implementation\n    loaderData: {\n      header: {}\n    },\n    header: {\n      vertexCount: triangles.length,\n      boundingBox\n    },\n    mode: 4, // TRIANGLES\n    indices: {value: Uint32Array.from(triangles), size: 1},\n    attributes\n  };\n}\n\n/**\n * Get Martini generated vertices and triangles\n *\n * @param {number} meshMaxError threshold for simplifying mesh\n * @param {number} width width of the input data\n * @param {number[] | Float32Array} terrain elevation data\n * @returns {{vertices: Uint16Array, triangles: Uint32Array}} vertices and triangles data\n */\nfunction getMartiniTileMesh(meshMaxError, width, terrain) {\n  const gridSize = width + 1;\n  const martini = new Martini(gridSize);\n  const tile = martini.createTile(terrain);\n  const {vertices, triangles} = tile.getMesh(meshMaxError);\n\n  return {vertices, triangles};\n}\n\n/**\n * Get Delatin generated vertices and triangles\n *\n * @param {number} meshMaxError threshold for simplifying mesh\n * @param {number} width width of the input data array\n * @param {number} height height of the input data array\n * @param {number[] | Float32Array} terrain elevation data\n * @returns {{vertices: number[], triangles: number[]}} vertices and triangles data\n */\nfunction getDelatinTileMesh(meshMaxError, width, height, terrain) {\n  const tin = new Delatin(terrain, width + 1, height + 1);\n  tin.run(meshMaxError);\n  const {coords, triangles} = tin;\n  const vertices = coords;\n  return {vertices, triangles};\n}\n\nexport default async function loadTerrain(arrayBuffer, options, context) {\n  options.image = options.image || {};\n  options.image.type = 'data';\n  const image = await context.parse(arrayBuffer, options, options.baseUri);\n  // Extend function to support additional mesh generation options (square grid or delatin)\n  return getMesh(image, options.terrain);\n}\n","\nexport default class Martini {\n    constructor(gridSize = 257) {\n        this.gridSize = gridSize;\n        const tileSize = gridSize - 1;\n        if (tileSize & (tileSize - 1)) throw new Error(\n            `Expected grid size to be 2^n+1, got ${gridSize}.`);\n\n        this.numTriangles = tileSize * tileSize * 2 - 2;\n        this.numParentTriangles = this.numTriangles - tileSize * tileSize;\n\n        this.indices = new Uint32Array(this.gridSize * this.gridSize);\n\n        // coordinates for all possible triangles in an RTIN tile\n        this.coords = new Uint16Array(this.numTriangles * 4);\n\n        // get triangle coordinates from its index in an implicit binary tree\n        for (let i = 0; i < this.numTriangles; i++) {\n            let id = i + 2;\n            let ax = 0, ay = 0, bx = 0, by = 0, cx = 0, cy = 0;\n            if (id & 1) {\n                bx = by = cx = tileSize; // bottom-left triangle\n            } else {\n                ax = ay = cy = tileSize; // top-right triangle\n            }\n            while ((id >>= 1) > 1) {\n                const mx = (ax + bx) >> 1;\n                const my = (ay + by) >> 1;\n\n                if (id & 1) { // left half\n                    bx = ax; by = ay;\n                    ax = cx; ay = cy;\n                } else { // right half\n                    ax = bx; ay = by;\n                    bx = cx; by = cy;\n                }\n                cx = mx; cy = my;\n            }\n            const k = i * 4;\n            this.coords[k + 0] = ax;\n            this.coords[k + 1] = ay;\n            this.coords[k + 2] = bx;\n            this.coords[k + 3] = by;\n        }\n    }\n\n    createTile(terrain) {\n        return new Tile(terrain, this);\n    }\n}\n\nclass Tile {\n    constructor(terrain, martini) {\n        const size = martini.gridSize;\n        if (terrain.length !== size * size) throw new Error(\n            `Expected terrain data of length ${size * size} (${size} x ${size}), got ${terrain.length}.`);\n\n        this.terrain = terrain;\n        this.martini = martini;\n        this.errors = new Float32Array(terrain.length);\n        this.update();\n    }\n\n    update() {\n        const {numTriangles, numParentTriangles, coords, gridSize: size} = this.martini;\n        const {terrain, errors} = this;\n\n        // iterate over all possible triangles, starting from the smallest level\n        for (let i = numTriangles - 1; i >= 0; i--) {\n            const k = i * 4;\n            const ax = coords[k + 0];\n            const ay = coords[k + 1];\n            const bx = coords[k + 2];\n            const by = coords[k + 3];\n            const mx = (ax + bx) >> 1;\n            const my = (ay + by) >> 1;\n            const cx = mx + my - ay;\n            const cy = my + ax - mx;\n\n            // calculate error in the middle of the long edge of the triangle\n            const interpolatedHeight = (terrain[ay * size + ax] + terrain[by * size + bx]) / 2;\n            const middleIndex = my * size + mx;\n            const middleError = Math.abs(interpolatedHeight - terrain[middleIndex]);\n\n            errors[middleIndex] = Math.max(errors[middleIndex], middleError);\n\n            if (i < numParentTriangles) { // bigger triangles; accumulate error with children\n                const leftChildIndex = ((ay + cy) >> 1) * size + ((ax + cx) >> 1);\n                const rightChildIndex = ((by + cy) >> 1) * size + ((bx + cx) >> 1);\n                errors[middleIndex] = Math.max(errors[middleIndex], errors[leftChildIndex], errors[rightChildIndex]);\n            }\n        }\n    }\n\n    getMesh(maxError = 0) {\n        const {gridSize: size, indices} = this.martini;\n        const {errors} = this;\n        let numVertices = 0;\n        let numTriangles = 0;\n        const max = size - 1;\n\n        // use an index grid to keep track of vertices that were already used to avoid duplication\n        indices.fill(0);\n\n        // retrieve mesh in two stages that both traverse the error map:\n        // - countElements: find used vertices (and assign each an index), and count triangles (for minimum allocation)\n        // - processTriangle: fill the allocated vertices & triangles typed arrays\n\n        function countElements(ax, ay, bx, by, cx, cy) {\n            const mx = (ax + bx) >> 1;\n            const my = (ay + by) >> 1;\n\n            if (Math.abs(ax - cx) + Math.abs(ay - cy) > 1 && errors[my * size + mx] > maxError) {\n                countElements(cx, cy, ax, ay, mx, my);\n                countElements(bx, by, cx, cy, mx, my);\n            } else {\n                indices[ay * size + ax] = indices[ay * size + ax] || ++numVertices;\n                indices[by * size + bx] = indices[by * size + bx] || ++numVertices;\n                indices[cy * size + cx] = indices[cy * size + cx] || ++numVertices;\n                numTriangles++;\n            }\n        }\n        countElements(0, 0, max, max, max, 0);\n        countElements(max, max, 0, 0, 0, max);\n\n        const vertices = new Uint16Array(numVertices * 2);\n        const triangles = new Uint32Array(numTriangles * 3);\n        let triIndex = 0;\n\n        function processTriangle(ax, ay, bx, by, cx, cy) {\n            const mx = (ax + bx) >> 1;\n            const my = (ay + by) >> 1;\n\n            if (Math.abs(ax - cx) + Math.abs(ay - cy) > 1 && errors[my * size + mx] > maxError) {\n                // triangle doesn't approximate the surface well enough; drill down further\n                processTriangle(cx, cy, ax, ay, mx, my);\n                processTriangle(bx, by, cx, cy, mx, my);\n\n            } else {\n                // add a triangle\n                const a = indices[ay * size + ax] - 1;\n                const b = indices[by * size + bx] - 1;\n                const c = indices[cy * size + cx] - 1;\n\n                vertices[2 * a] = ax;\n                vertices[2 * a + 1] = ay;\n\n                vertices[2 * b] = bx;\n                vertices[2 * b + 1] = by;\n\n                vertices[2 * c] = cx;\n                vertices[2 * c + 1] = cy;\n\n                triangles[triIndex++] = a;\n                triangles[triIndex++] = b;\n                triangles[triIndex++] = c;\n            }\n        }\n        processTriangle(0, 0, max, max, max, 0);\n        processTriangle(max, max, 0, 0, 0, max);\n\n        return {vertices, triangles};\n    }\n}\n","// ISC License\n\n// Copyright(c) 2019, Michael Fogleman, Vladimir Agafonkin\n\n// Permission to use, copy, modify, and / or distribute this software for any purpose\n// with or without fee is hereby granted, provided that the above copyright notice\n// and this permission notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n// REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n// FITNESS.IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n//   INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\n// OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n// TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\n// THIS SOFTWARE.\n\n/* eslint-disable complexity, max-params, max-statements, max-depth, no-constant-condition */\nexport default class Delatin {\n  constructor(data, width, height = width) {\n    this.data = data; // height data\n    this.width = width;\n    this.height = height;\n\n    this.coords = []; // vertex coordinates (x, y)\n    this.triangles = []; // mesh triangle indices\n\n    // additional triangle data\n    this._halfedges = [];\n    this._candidates = [];\n    this._queueIndices = [];\n\n    this._queue = []; // queue of added triangles\n    this._errors = [];\n    this._rms = [];\n    this._pending = []; // triangles pending addition to queue\n    this._pendingLen = 0;\n\n    this._rmsSum = 0;\n\n    const x1 = width - 1;\n    const y1 = height - 1;\n    const p0 = this._addPoint(0, 0);\n    const p1 = this._addPoint(x1, 0);\n    const p2 = this._addPoint(0, y1);\n    const p3 = this._addPoint(x1, y1);\n\n    // add initial two triangles\n    const t0 = this._addTriangle(p3, p0, p2, -1, -1, -1);\n    this._addTriangle(p0, p3, p1, t0, -1, -1);\n    this._flush();\n  }\n\n  // refine the mesh until its maximum error gets below the given one\n  run(maxError = 1) {\n    while (this.getMaxError() > maxError) {\n      this.refine();\n    }\n  }\n\n  // refine the mesh with a single point\n  refine() {\n    this._step();\n    this._flush();\n  }\n\n  // max error of the current mesh\n  getMaxError() {\n    return this._errors[0];\n  }\n\n  // root-mean-square deviation of the current mesh\n  getRMSD() {\n    return this._rmsSum > 0 ? Math.sqrt(this._rmsSum / (this.width * this.height)) : 0;\n  }\n\n  // height value at a given position\n  heightAt(x, y) {\n    return this.data[this.width * y + x];\n  }\n\n  // rasterize and queue all triangles that got added or updated in _step\n  _flush() {\n    const coords = this.coords;\n    for (let i = 0; i < this._pendingLen; i++) {\n      const t = this._pending[i];\n      // rasterize triangle to find maximum pixel error\n      const a = 2 * this.triangles[t * 3 + 0];\n      const b = 2 * this.triangles[t * 3 + 1];\n      const c = 2 * this.triangles[t * 3 + 2];\n      this._findCandidate(\n        coords[a],\n        coords[a + 1],\n        coords[b],\n        coords[b + 1],\n        coords[c],\n        coords[c + 1],\n        t\n      );\n    }\n    this._pendingLen = 0;\n  }\n\n  // rasterize a triangle, find its max error, and queue it for processing\n  _findCandidate(p0x, p0y, p1x, p1y, p2x, p2y, t) {\n    // triangle bounding box\n    const minX = Math.min(p0x, p1x, p2x);\n    const minY = Math.min(p0y, p1y, p2y);\n    const maxX = Math.max(p0x, p1x, p2x);\n    const maxY = Math.max(p0y, p1y, p2y);\n\n    // forward differencing variables\n    let w00 = orient(p1x, p1y, p2x, p2y, minX, minY);\n    let w01 = orient(p2x, p2y, p0x, p0y, minX, minY);\n    let w02 = orient(p0x, p0y, p1x, p1y, minX, minY);\n    const a01 = p1y - p0y;\n    const b01 = p0x - p1x;\n    const a12 = p2y - p1y;\n    const b12 = p1x - p2x;\n    const a20 = p0y - p2y;\n    const b20 = p2x - p0x;\n\n    // pre-multiplied z values at vertices\n    const a = orient(p0x, p0y, p1x, p1y, p2x, p2y);\n    const z0 = this.heightAt(p0x, p0y) / a;\n    const z1 = this.heightAt(p1x, p1y) / a;\n    const z2 = this.heightAt(p2x, p2y) / a;\n\n    // iterate over pixels in bounding box\n    let maxError = 0;\n    let mx = 0;\n    let my = 0;\n    let rms = 0;\n    for (let y = minY; y <= maxY; y++) {\n      // compute starting offset\n      let dx = 0;\n      if (w00 < 0 && a12 !== 0) {\n        dx = Math.max(dx, Math.floor(-w00 / a12));\n      }\n      if (w01 < 0 && a20 !== 0) {\n        dx = Math.max(dx, Math.floor(-w01 / a20));\n      }\n      if (w02 < 0 && a01 !== 0) {\n        dx = Math.max(dx, Math.floor(-w02 / a01));\n      }\n\n      let w0 = w00 + a12 * dx;\n      let w1 = w01 + a20 * dx;\n      let w2 = w02 + a01 * dx;\n\n      let wasInside = false;\n\n      for (let x = minX + dx; x <= maxX; x++) {\n        // check if inside triangle\n        if (w0 >= 0 && w1 >= 0 && w2 >= 0) {\n          wasInside = true;\n\n          // compute z using barycentric coordinates\n          const z = z0 * w0 + z1 * w1 + z2 * w2;\n          const dz = Math.abs(z - this.heightAt(x, y));\n          rms += dz * dz;\n          if (dz > maxError) {\n            maxError = dz;\n            mx = x;\n            my = y;\n          }\n        } else if (wasInside) {\n          break;\n        }\n\n        w0 += a12;\n        w1 += a20;\n        w2 += a01;\n      }\n\n      w00 += b12;\n      w01 += b20;\n      w02 += b01;\n    }\n\n    if ((mx === p0x && my === p0y) || (mx === p1x && my === p1y) || (mx === p2x && my === p2y)) {\n      maxError = 0;\n    }\n\n    // update triangle metadata\n    this._candidates[2 * t] = mx;\n    this._candidates[2 * t + 1] = my;\n    this._rms[t] = rms;\n\n    // add triangle to priority queue\n    this._queuePush(t, maxError, rms);\n  }\n\n  // process the next triangle in the queue, splitting it with a new point\n  _step() {\n    // pop triangle with highest error from priority queue\n    const t = this._queuePop();\n\n    const e0 = t * 3 + 0;\n    const e1 = t * 3 + 1;\n    const e2 = t * 3 + 2;\n\n    const p0 = this.triangles[e0];\n    const p1 = this.triangles[e1];\n    const p2 = this.triangles[e2];\n\n    const ax = this.coords[2 * p0];\n    const ay = this.coords[2 * p0 + 1];\n    const bx = this.coords[2 * p1];\n    const by = this.coords[2 * p1 + 1];\n    const cx = this.coords[2 * p2];\n    const cy = this.coords[2 * p2 + 1];\n    const px = this._candidates[2 * t];\n    const py = this._candidates[2 * t + 1];\n\n    const pn = this._addPoint(px, py);\n\n    if (orient(ax, ay, bx, by, px, py) === 0) {\n      this._handleCollinear(pn, e0);\n    } else if (orient(bx, by, cx, cy, px, py) === 0) {\n      this._handleCollinear(pn, e1);\n    } else if (orient(cx, cy, ax, ay, px, py) === 0) {\n      this._handleCollinear(pn, e2);\n    } else {\n      const h0 = this._halfedges[e0];\n      const h1 = this._halfedges[e1];\n      const h2 = this._halfedges[e2];\n\n      const t0 = this._addTriangle(p0, p1, pn, h0, -1, -1, e0);\n      const t1 = this._addTriangle(p1, p2, pn, h1, -1, t0 + 1);\n      const t2 = this._addTriangle(p2, p0, pn, h2, t0 + 2, t1 + 1);\n\n      this._legalize(t0);\n      this._legalize(t1);\n      this._legalize(t2);\n    }\n  }\n\n  // add coordinates for a new vertex\n  _addPoint(x, y) {\n    const i = this.coords.length >> 1;\n    this.coords.push(x, y);\n    return i;\n  }\n\n  // add or update a triangle in the mesh\n  _addTriangle(a, b, c, ab, bc, ca, e = this.triangles.length) {\n    const t = e / 3; // new triangle index\n\n    // add triangle vertices\n    this.triangles[e + 0] = a;\n    this.triangles[e + 1] = b;\n    this.triangles[e + 2] = c;\n\n    // add triangle halfedges\n    this._halfedges[e + 0] = ab;\n    this._halfedges[e + 1] = bc;\n    this._halfedges[e + 2] = ca;\n\n    // link neighboring halfedges\n    if (ab >= 0) {\n      this._halfedges[ab] = e + 0;\n    }\n    if (bc >= 0) {\n      this._halfedges[bc] = e + 1;\n    }\n    if (ca >= 0) {\n      this._halfedges[ca] = e + 2;\n    }\n\n    // init triangle metadata\n    this._candidates[2 * t + 0] = 0;\n    this._candidates[2 * t + 1] = 0;\n    this._queueIndices[t] = -1;\n    this._rms[t] = 0;\n\n    // add triangle to pending queue for later rasterization\n    this._pending[this._pendingLen++] = t;\n\n    // return first halfedge index\n    return e;\n  }\n\n  _legalize(a) {\n    // if the pair of triangles doesn't satisfy the Delaunay condition\n    // (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n    // then do the same check/flip recursively for the new pair of triangles\n    //\n    //           pl                    pl\n    //          /||\\                  /  \\\n    //       al/ || \\bl            al/    \\a\n    //        /  ||  \\              /      \\\n    //       /  a||b  \\    flip    /___ar___\\\n    //     p0\\   ||   /p1   =>   p0\\---bl---/p1\n    //        \\  ||  /              \\      /\n    //       ar\\ || /br             b\\    /br\n    //          \\||/                  \\  /\n    //           pr                    pr\n\n    const b = this._halfedges[a];\n\n    if (b < 0) {\n      return;\n    }\n\n    const a0 = a - (a % 3);\n    const b0 = b - (b % 3);\n    const al = a0 + ((a + 1) % 3);\n    const ar = a0 + ((a + 2) % 3);\n    const bl = b0 + ((b + 2) % 3);\n    const br = b0 + ((b + 1) % 3);\n    const p0 = this.triangles[ar];\n    const pr = this.triangles[a];\n    const pl = this.triangles[al];\n    const p1 = this.triangles[bl];\n    const coords = this.coords;\n\n    if (\n      !inCircle(\n        coords[2 * p0],\n        coords[2 * p0 + 1],\n        coords[2 * pr],\n        coords[2 * pr + 1],\n        coords[2 * pl],\n        coords[2 * pl + 1],\n        coords[2 * p1],\n        coords[2 * p1 + 1]\n      )\n    ) {\n      return;\n    }\n\n    const hal = this._halfedges[al];\n    const har = this._halfedges[ar];\n    const hbl = this._halfedges[bl];\n    const hbr = this._halfedges[br];\n\n    this._queueRemove(a0 / 3);\n    this._queueRemove(b0 / 3);\n\n    const t0 = this._addTriangle(p0, p1, pl, -1, hbl, hal, a0);\n    const t1 = this._addTriangle(p1, p0, pr, t0, har, hbr, b0);\n\n    this._legalize(t0 + 1);\n    this._legalize(t1 + 2);\n  }\n\n  // handle a case where new vertex is on the edge of a triangle\n  _handleCollinear(pn, a) {\n    const a0 = a - (a % 3);\n    const al = a0 + ((a + 1) % 3);\n    const ar = a0 + ((a + 2) % 3);\n    const p0 = this.triangles[ar];\n    const pr = this.triangles[a];\n    const pl = this.triangles[al];\n    const hal = this._halfedges[al];\n    const har = this._halfedges[ar];\n\n    const b = this._halfedges[a];\n\n    if (b < 0) {\n      const t0 = this._addTriangle(pn, p0, pr, -1, har, -1, a0);\n      const t1 = this._addTriangle(p0, pn, pl, t0, -1, hal);\n      this._legalize(t0 + 1);\n      this._legalize(t1 + 2);\n      return;\n    }\n\n    const b0 = b - (b % 3);\n    const bl = b0 + ((b + 2) % 3);\n    const br = b0 + ((b + 1) % 3);\n    const p1 = this.triangles[bl];\n    const hbl = this._halfedges[bl];\n    const hbr = this._halfedges[br];\n\n    this._queueRemove(b0 / 3);\n\n    const t0 = this._addTriangle(p0, pr, pn, har, -1, -1, a0);\n    const t1 = this._addTriangle(pr, p1, pn, hbr, -1, t0 + 1, b0);\n    const t2 = this._addTriangle(p1, pl, pn, hbl, -1, t1 + 1);\n    const t3 = this._addTriangle(pl, p0, pn, hal, t0 + 2, t2 + 1);\n\n    this._legalize(t0);\n    this._legalize(t1);\n    this._legalize(t2);\n    this._legalize(t3);\n  }\n\n  // priority queue methods\n\n  _queuePush(t, error, rms) {\n    const i = this._queue.length;\n    this._queueIndices[t] = i;\n    this._queue.push(t);\n    this._errors.push(error);\n    this._rmsSum += rms;\n    this._queueUp(i);\n  }\n\n  _queuePop() {\n    const n = this._queue.length - 1;\n    this._queueSwap(0, n);\n    this._queueDown(0, n);\n    return this._queuePopBack();\n  }\n\n  _queuePopBack() {\n    const t = this._queue.pop();\n    this._errors.pop();\n    this._rmsSum -= this._rms[t];\n    this._queueIndices[t] = -1;\n    return t;\n  }\n\n  _queueRemove(t) {\n    const i = this._queueIndices[t];\n    if (i < 0) {\n      const it = this._pending.indexOf(t);\n      if (it !== -1) {\n        this._pending[it] = this._pending[--this._pendingLen];\n      } else {\n        throw new Error('Broken triangulation (something went wrong).');\n      }\n      return;\n    }\n    const n = this._queue.length - 1;\n    if (n !== i) {\n      this._queueSwap(i, n);\n      if (!this._queueDown(i, n)) {\n        this._queueUp(i);\n      }\n    }\n    this._queuePopBack();\n  }\n\n  _queueLess(i, j) {\n    return this._errors[i] > this._errors[j];\n  }\n\n  _queueSwap(i, j) {\n    const pi = this._queue[i];\n    const pj = this._queue[j];\n    this._queue[i] = pj;\n    this._queue[j] = pi;\n    this._queueIndices[pi] = j;\n    this._queueIndices[pj] = i;\n    const e = this._errors[i];\n    this._errors[i] = this._errors[j];\n    this._errors[j] = e;\n  }\n\n  _queueUp(j0) {\n    let j = j0;\n    while (true) {\n      const i = (j - 1) >> 1;\n      if (i === j || !this._queueLess(j, i)) {\n        break;\n      }\n      this._queueSwap(i, j);\n      j = i;\n    }\n  }\n\n  _queueDown(i0, n) {\n    let i = i0;\n    while (true) {\n      const j1 = 2 * i + 1;\n      if (j1 >= n || j1 < 0) {\n        break;\n      }\n      const j2 = j1 + 1;\n      let j = j1;\n      if (j2 < n && this._queueLess(j2, j1)) {\n        j = j2;\n      }\n      if (!this._queueLess(j, i)) {\n        break;\n      }\n      this._queueSwap(i, j);\n      i = j;\n    }\n    return i > i0;\n  }\n}\n\nfunction orient(ax, ay, bx, by, cx, cy) {\n  return (bx - cx) * (ay - cy) - (by - cy) * (ax - cx);\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n  const dx = ax - px;\n  const dy = ay - py;\n  const ex = bx - px;\n  const ey = by - py;\n  const fx = cx - px;\n  const fy = cy - py;\n\n  const ap = dx * dx + dy * dy;\n  const bp = ex * ex + ey * ey;\n  const cp = fx * fx + fy * fy;\n\n  return dx * (ey * cp - bp * fy) - dy * (ex * cp - bp * fx) + ap * (ex * fy - ey * fx) < 0;\n}\n","import type {Loader} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\n\n/**\n * Worker loader for quantized meshes\n */\nexport const TerrainLoader = {\n  name: 'Terrain',\n  id: 'terrain',\n  module: 'terrain',\n  version: VERSION,\n  worker: true,\n  extensions: ['png', 'pngraw'],\n  mimeTypes: ['image/png'],\n  options: {\n    terrain: {\n      tesselator: 'auto',\n      bounds: null,\n      meshMaxError: 10,\n      elevationDecoder: {\n        rScaler: 1,\n        gScaler: 0,\n        bScaler: 0,\n        offset: 0\n      },\n      skirtHeight: null\n    }\n  }\n};\n\n/**\n * Loader for quantized meshes\n */\nexport const _typecheckTerrainWorkerLoader: Loader = TerrainLoader;\n","import type {Loader} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\n\n/**\n * Worker loader for quantized meshes\n */\nexport const QuantizedMeshLoader = {\n  name: 'Quantized Mesh',\n  id: 'quantized-mesh',\n  module: 'terrain',\n  version: VERSION,\n  worker: true,\n  extensions: ['terrain'],\n  mimeTypes: ['application/vnd.quantized-mesh'],\n  options: {\n    'quantized-mesh': {\n      bounds: [0, 0, 1, 1],\n      skirtHeight: null\n    }\n  }\n};\n\nexport const _typecheckQuantizedMeshLoader: Loader = QuantizedMeshLoader;\n","import getHiResTimestamp from '../utils/hi-res-timestamp';\nexport default class Stat {\n  constructor(name, type) {\n    this.name = name;\n    this.type = type;\n    this.sampleSize = 1;\n    this.reset();\n  }\n\n  setSampleSize(samples) {\n    this.sampleSize = samples;\n    return this;\n  }\n\n  incrementCount() {\n    this.addCount(1);\n    return this;\n  }\n\n  decrementCount() {\n    this.subtractCount(1);\n    return this;\n  }\n\n  addCount(value) {\n    this._count += value;\n    this._samples++;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  subtractCount(value) {\n    this._count -= value;\n    this._samples++;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  addTime(time) {\n    this._time += time;\n    this.lastTiming = time;\n    this._samples++;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  timeStart() {\n    this._startTime = getHiResTimestamp();\n    this._timerPending = true;\n    return this;\n  }\n\n  timeEnd() {\n    if (!this._timerPending) {\n      return this;\n    }\n\n    this.addTime(getHiResTimestamp() - this._startTime);\n    this._timerPending = false;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  getSampleAverageCount() {\n    return this.sampleSize > 0 ? this.lastSampleCount / this.sampleSize : 0;\n  }\n\n  getSampleAverageTime() {\n    return this.sampleSize > 0 ? this.lastSampleTime / this.sampleSize : 0;\n  }\n\n  getSampleHz() {\n    return this.lastSampleTime > 0 ? this.sampleSize / (this.lastSampleTime / 1000) : 0;\n  }\n\n  getAverageCount() {\n    return this.samples > 0 ? this.count / this.samples : 0;\n  }\n\n  getAverageTime() {\n    return this.samples > 0 ? this.time / this.samples : 0;\n  }\n\n  getHz() {\n    return this.time > 0 ? this.samples / (this.time / 1000) : 0;\n  }\n\n  reset() {\n    this.time = 0;\n    this.count = 0;\n    this.samples = 0;\n    this.lastTiming = 0;\n    this.lastSampleTime = 0;\n    this.lastSampleCount = 0;\n    this._count = 0;\n    this._time = 0;\n    this._samples = 0;\n    this._startTime = 0;\n    this._timerPending = false;\n    return this;\n  }\n\n  _checkSampling() {\n    if (this._samples === this.sampleSize) {\n      this.lastSampleTime = this._time;\n      this.lastSampleCount = this._count;\n      this.count += this._count;\n      this.time += this._time;\n      this.samples += this._samples;\n      this._time = 0;\n      this._count = 0;\n      this._samples = 0;\n    }\n  }\n\n}\n//# sourceMappingURL=stat.js.map","import Stat from './stat';\nexport default class Stats {\n  constructor({\n    id,\n    stats\n  }) {\n    this.id = id;\n    this.stats = {};\n\n    this._initializeStats(stats);\n\n    Object.seal(this);\n  }\n\n  get(name, type = 'count') {\n    return this._getOrCreate({\n      name,\n      type\n    });\n  }\n\n  get size() {\n    return Object.keys(this.stats).length;\n  }\n\n  reset() {\n    for (const key in this.stats) {\n      this.stats[key].reset();\n    }\n\n    return this;\n  }\n\n  forEach(fn) {\n    for (const key in this.stats) {\n      fn(this.stats[key]);\n    }\n  }\n\n  getTable() {\n    const table = {};\n    this.forEach(stat => {\n      table[stat.name] = {\n        time: stat.time || 0,\n        count: stat.count || 0,\n        average: stat.getAverageTime() || 0,\n        hz: stat.getHz() || 0\n      };\n    });\n    return table;\n  }\n\n  _initializeStats(stats = []) {\n    stats.forEach(stat => this._getOrCreate(stat));\n  }\n\n  _getOrCreate(stat) {\n    if (!stat || !stat.name) {\n      return null;\n    }\n\n    const {\n      name,\n      type\n    } = stat;\n\n    if (!this.stats[name]) {\n      if (stat instanceof Stat) {\n        this.stats[name] = stat;\n      } else {\n        this.stats[name] = new Stat(name, type);\n      }\n    }\n\n    return this.stats[name];\n  }\n\n}\n//# sourceMappingURL=stats.js.map"],"sourceRoot":""}