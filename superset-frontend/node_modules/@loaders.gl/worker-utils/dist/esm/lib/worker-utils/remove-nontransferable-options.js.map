{"version":3,"sources":["../../../../src/lib/worker-utils/remove-nontransferable-options.ts"],"names":["removeNontransferableOptions","object","JSON","parse","stringifyJSON","v","cache","Set","stringify","key","value","has","err","undefined","add"],"mappings":"AAIA,OAAO,SAASA,4BAAT,CAAsCC,MAAtC,EAA8D;AAInE,SAAOC,IAAI,CAACC,KAAL,CAAWC,aAAa,CAACH,MAAD,CAAxB,CAAP;AACD;;AAED,SAASG,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,QAAMC,KAAK,GAAG,IAAIC,GAAJ,EAAd;AACA,SAAOL,IAAI,CAACM,SAAL,CAAeH,CAAf,EAAkB,CAACI,GAAD,EAAMC,KAAN,KAAgB;AACvC,QAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAA3C,EAAiD;AAC/C,UAAIJ,KAAK,CAACK,GAAN,CAAUD,KAAV,CAAJ,EAAsB;AAEpB,YAAI;AAEF,iBAAOR,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACM,SAAL,CAAeE,KAAf,CAAX,CAAP;AACD,SAHD,CAGE,OAAOE,GAAP,EAAY;AAEZ,iBAAOC,SAAP;AACD;AACF;;AAEDP,MAAAA,KAAK,CAACQ,GAAN,CAAUJ,KAAV;AACD;;AACD,WAAOA,KAAP;AACD,GAhBM,CAAP;AAiBD","sourcesContent":["/**\n * Safely stringify JSON (drop non serializable values like functions and regexps)\n * @param value\n */\nexport function removeNontransferableOptions(object: object): object {\n  // options.log object contains functions which cannot be transferred\n  // TODO - decide how to handle logging on workers\n  // TODO - warn if options stringification is long\n  return JSON.parse(stringifyJSON(object));\n}\n\nfunction stringifyJSON(v) {\n  const cache = new Set();\n  return JSON.stringify(v, (key, value) => {\n    if (typeof value === 'object' && value !== null) {\n      if (cache.has(value)) {\n        // Circular reference found\n        try {\n          // If this value does not reference a parent it can be deduped\n          return JSON.parse(JSON.stringify(value));\n        } catch (err) {\n          // discard key if value cannot be deduped\n          return undefined;\n        }\n      }\n      // Store value in our set\n      cache.add(value);\n    }\n    return value;\n  });\n}\n"],"file":"remove-nontransferable-options.js"}