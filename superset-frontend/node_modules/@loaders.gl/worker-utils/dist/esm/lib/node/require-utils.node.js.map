{"version":3,"sources":["../../../../src/lib/node/require-utils.node.js"],"names":["Module","path","requireFromFile","filename","startsWith","response","fetch","code","text","requireFromString","process","cwd","require","options","appendPaths","prependPaths","Error","paths","_nodeModulePaths","dirname","parent","module","newModule","concat","_compile","children","splice","indexOf","exports"],"mappings":"AAMA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAMA,OAAO,eAAeC,eAAf,CAA+BC,QAA/B,EAAyC;AAC9C,MAAIA,QAAQ,CAACC,UAAT,CAAoB,MAApB,CAAJ,EAAiC;AAC/B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAD,CAA5B;AACA,UAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,WAAOC,iBAAiB,CAACF,IAAD,CAAxB;AACD;;AAED,MAAI,CAACJ,QAAQ,CAACC,UAAT,CAAoB,GAApB,CAAL,EAA+B;AAC7BD,IAAAA,QAAQ,GAAI,GAAEO,OAAO,CAACC,GAAR,EAAc,IAAGR,QAAS,EAAxC;AACD;;AACD,SAAOS,OAAO,CAACT,QAAD,CAAd;AACD;AAQD,OAAO,SAASM,iBAAT,CAA2BF,IAA3B,EAAiCJ,QAAQ,GAAG,EAA5C,EAAgDU,OAAO,GAAG,EAA1D,EAA8D;AACnE,MAAI,OAAOV,QAAP,KAAoB,QAAxB,EAAkC;AAChCU,IAAAA,OAAO,GAAGV,QAAV;AACAA,IAAAA,QAAQ,GAAG,EAAX;AACD;;AAEDU,EAAAA,OAAO,GAAG;AACRC,IAAAA,WAAW,EAAE,EADL;AAERC,IAAAA,YAAY,EAAE,EAFN;AAGR,OAAGF;AAHK,GAAV;;AAMA,MAAI,OAAON,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAIS,KAAJ,CAAW,8BAA6B,OAAOT,IAAK,EAApD,CAAN;AACD;;AAGD,QAAMU,KAAK,GAAGjB,MAAM,CAACkB,gBAAP,CAAwBjB,IAAI,CAACkB,OAAL,CAAahB,QAAb,CAAxB,CAAd;;AAEA,QAAMiB,MAAM,GAAGC,MAAM,CAACD,MAAtB;AAEA,QAAME,SAAS,GAAG,IAAItB,MAAJ,CAAWG,QAAX,EAAqBiB,MAArB,CAAlB;AACAE,EAAAA,SAAS,CAACnB,QAAV,GAAqBA,QAArB;AACAmB,EAAAA,SAAS,CAACL,KAAV,GAAkB,GAAGM,MAAH,CAAUV,OAAO,CAACE,YAAlB,EAAgCQ,MAAhC,CAAuCN,KAAvC,EAA8CM,MAA9C,CAAqDV,OAAO,CAACC,WAA7D,CAAlB;;AAEAQ,EAAAA,SAAS,CAACE,QAAV,CAAmBjB,IAAnB,EAAyBJ,QAAzB;;AAEA,MAAIiB,MAAM,IAAIA,MAAM,CAACK,QAArB,EAA+B;AAC7BL,IAAAA,MAAM,CAACK,QAAP,CAAgBC,MAAhB,CAAuBN,MAAM,CAACK,QAAP,CAAgBE,OAAhB,CAAwBL,SAAxB,CAAvB,EAA2D,CAA3D;AACD;;AAED,SAAOA,SAAS,CAACM,OAAjB;AACD","sourcesContent":["// Fork of https://github.com/floatdrop/require-from-string/blob/master/index.js\n// Copyright (c) Vsevolod Strukchinsky <floatdrop@gmail.com> (github.com/floatdrop)\n// MIT license\n\n// this file is not visible to webpack (it is excluded in the package.json \"browser\" field).\n\nimport Module from 'module';\nimport path from 'path';\n\n// Node.js Dynamically require from file\n// Relative names are resolved relative to cwd\n// This indirect function is provided because webpack will try to bundle `module.require`.\n// this file is not visible to webpack (it is excluded in the package.json \"browser\" field).\nexport async function requireFromFile(filename) {\n  if (filename.startsWith('http')) {\n    const response = await fetch(filename);\n    const code = await response.text();\n    return requireFromString(code);\n  }\n\n  if (!filename.startsWith('/')) {\n    filename = `${process.cwd()}/${filename}`;\n  }\n  return require(filename);\n}\n\n// Dynamically require from string\n// - `code` - Required - Type: string - Module code.\n// - `filename` - Type: string - Default: '' - Optional filename.\n// - `options.appendPaths` Type: Array List of paths, that will be appended to module paths.\n// Useful, when you want to be able require modules from these paths.\n// - `options.prependPaths` Type: Array Same as appendPaths, but paths will be prepended.\nexport function requireFromString(code, filename = '', options = {}) {\n  if (typeof filename === 'object') {\n    options = filename;\n    filename = '';\n  }\n\n  options = {\n    appendPaths: [],\n    prependPaths: [],\n    ...options\n  };\n\n  if (typeof code !== 'string') {\n    throw new Error(`code must be a string, not ${typeof code}`);\n  }\n\n  // @ts-ignore\n  const paths = Module._nodeModulePaths(path.dirname(filename));\n\n  const parent = module.parent;\n  // @ts-ignore\n  const newModule = new Module(filename, parent);\n  newModule.filename = filename;\n  newModule.paths = [].concat(options.prependPaths).concat(paths).concat(options.appendPaths);\n  // @ts-ignore\n  newModule._compile(code, filename);\n\n  if (parent && parent.children) {\n    parent.children.splice(parent.children.indexOf(newModule), 1);\n  }\n\n  return newModule.exports;\n}\n"],"file":"require-utils.node.js"}