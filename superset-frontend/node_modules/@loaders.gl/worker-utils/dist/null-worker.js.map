{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/user/apps/loaders.gl/node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./src/lib/async-queue/async-queue.ts","webpack:///./src/lib/worker-api/create-worker.ts","webpack:///./src/lib/worker-farm/worker-body.ts","webpack:///./src/lib/worker-utils/get-transfer-list.ts","webpack:///./src/workers/null-worker.ts"],"names":["Symbol","asyncIterator","AsyncQueue","constructor","_values","_settlers","_closed","push","value","enqueue","Error","length","settler","shift","reject","resolve","close","done","next","Promise","undefined","requestId","inputBatches","options","createWorker","process","processInBatches","self","context","processOnMainThread","WorkerBody","onmessage","type","payload","result","input","postMessage","resultIterator","batch","error","message","arrayBuffer","id","onMessage","removeEventListener","addEventListener","onMessageWrapperMap","Map","isKnownMessage","data","onMessageWrapper","get","delete","source","transferList","getTransferList","startsWith","object","recursive","transfers","transfersSet","Set","isTransferable","add","buffer","ArrayBuffer","isView","key","Array","from","MessagePort","ImageBitmap","OffscreenCanvas"],"mappings":"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","file":"null-worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/workers/null-worker.ts\");\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","// From https://github.com/rauschma/async-iter-demo/tree/master/src under MIT license\n// http://2ality.com/2016/10/asynchronous-iteration.html\n\n/**\n * Async Queue\n * - AsyncIterable: An async iterator can be\n * - Values can be pushed onto the queue\n * @example\n *   const asyncQueue = new AsyncQueue();\n *   setTimeout(() => asyncQueue.enqueue('tick'), 1000);\n *   setTimeout(() => asyncQueue.enqueue(new Error('done')), 10000);\n *   for await (const value of asyncQueue) {\n *     console.log(value); // tick\n *   }\n */\nexport default class AsyncQueue<T> {\n  private _values: any[];\n  private _settlers: any[];\n  private _closed: boolean;\n\n  constructor() {\n    this._values = []; // enqueues > dequeues\n    this._settlers = []; // dequeues > enqueues\n    this._closed = false;\n  }\n\n  /** Return an async iterator for this queue */\n  [Symbol.asyncIterator](): AsyncIterator<T> {\n    return this;\n  }\n\n  /** Push a new value - the async iterator will yield a promise resolved to this value */\n  push(value: T): void {\n    return this.enqueue(value);\n  }\n\n  /**\n   * Push a new value - the async iterator will yield a promise resolved to this value\n   * Add an error - the async iterator will yield a promise rejected with this value\n   */\n  enqueue(value: T | Error): void {\n    if (this._closed) {\n      throw new Error('Closed');\n    }\n\n    if (this._settlers.length > 0) {\n      if (this._values.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      const settler = this._settlers.shift();\n      if (value instanceof Error) {\n        settler.reject(value);\n      } else {\n        settler.resolve({value});\n      }\n    } else {\n      this._values.push(value);\n    }\n  }\n\n  /** Indicate that we not waiting for more values - The async iterator will be done */\n  close(): void {\n    while (this._settlers.length > 0) {\n      const settler = this._settlers.shift();\n      settler.resolve({done: true});\n    }\n    this._closed = true;\n  }\n\n  // ITERATOR IMPLEMENTATION\n\n  /** @returns a Promise for an IteratorResult */\n  next(): Promise<IteratorResult<T, any>> {\n    // If values in queue, yield the first value\n    if (this._values.length > 0) {\n      const value = this._values.shift();\n      if (value instanceof Error) {\n        return Promise.reject(value);\n      }\n      return Promise.resolve({done: false, value});\n    }\n\n    // If queue is closed, the iterator is done\n    if (this._closed) {\n      if (this._settlers.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      return Promise.resolve({done: true, value: undefined});\n    }\n\n    // Yield a promise that waits for new values to be enqueued\n    return new Promise((resolve, reject) => {\n      this._settlers.push({resolve, reject});\n    });\n  }\n}\n","import type {\n  WorkerMessageType,\n  WorkerMessagePayload,\n  WorkerContext,\n  Process,\n  ProcessInBatches\n} from '../../types';\nimport AsyncQueue from '../async-queue/async-queue';\nimport WorkerBody from '../worker-farm/worker-body';\n// import {validateWorkerVersion} from './validate-worker-version';\n\n/** Counter for jobs */\nlet requestId = 0;\nlet inputBatches;\nlet options;\n\nexport type ProcessOnMainThread = (data: any, options?: {[key: string]: any}, context?) => any;\n\n/**\n * Set up a WebWorkerGlobalScope to talk with the main thread\n */\nexport function createWorker(process: Process, processInBatches?: ProcessInBatches): void {\n  // Check that we are actually in a worker thread\n  if (typeof self === 'undefined') {\n    return;\n  }\n\n  const context: WorkerContext = {\n    process: processOnMainThread\n  };\n\n  // eslint-disable-next-line complexity\n  WorkerBody.onmessage = async (type: WorkerMessageType, payload: WorkerMessagePayload) => {\n    try {\n      switch (type) {\n        case 'process':\n          if (!process) {\n            throw new Error('Worker does not support atomic processing');\n          }\n          const result = await process(payload.input, payload.options || {}, context);\n          WorkerBody.postMessage('done', {result});\n          break;\n\n        case 'process-in-batches':\n          if (!processInBatches) {\n            throw new Error('Worker does not support batched processing');\n          }\n          inputBatches = new AsyncQueue();\n          options = payload.options || {};\n          const resultIterator = processInBatches(inputBatches, options, context?.processInBatches);\n          for await (const batch of resultIterator) {\n            WorkerBody.postMessage('output-batch', {result: batch});\n          }\n          WorkerBody.postMessage('done', {});\n          break;\n\n        case 'input-batch':\n          inputBatches.push(payload.input);\n          break;\n\n        case 'input-done':\n          inputBatches.close();\n          break;\n\n        default:\n      }\n    } catch (error) {\n      const message = error instanceof Error ? error.message : '';\n      WorkerBody.postMessage('error', {error: message});\n    }\n  };\n}\n\nfunction processOnMainThread(arrayBuffer, options = {}) {\n  return new Promise((resolve, reject) => {\n    const id = requestId++;\n\n    /**\n     */\n    const onMessage = (type, payload) => {\n      if (payload.id !== id) {\n        // not ours\n        return;\n      }\n\n      switch (type) {\n        case 'done':\n          WorkerBody.removeEventListener(onMessage);\n          resolve(payload.result);\n          break;\n\n        case 'error':\n          WorkerBody.removeEventListener(onMessage);\n          reject(payload.error);\n          break;\n\n        default:\n        // ignore\n      }\n    };\n\n    WorkerBody.addEventListener(onMessage);\n\n    // Ask the main thread to decode data\n    const payload = {id, input: arrayBuffer, options};\n    WorkerBody.postMessage('process', payload);\n  });\n}\n","import type {WorkerMessageData, WorkerMessageType, WorkerMessagePayload} from '../../types';\nimport {getTransferList} from '../worker-utils/get-transfer-list';\n\nconst onMessageWrapperMap = new Map();\n\n/**\n * Type safe wrapper for worker code\n */\nexport default class WorkerBody {\n  /*\n   * (type: WorkerMessageType, payload: WorkerMessagePayload) => any\n   */\n  static set onmessage(onMessage: (type: WorkerMessageType, payload: WorkerMessagePayload) => any) {\n    // eslint-disable-next-line no-restricted-globals\n    self.onmessage = (message) => {\n      if (!isKnownMessage(message)) {\n        return;\n      }\n\n      // Confusingly the message itself also has a 'type' field which is always set to 'message'\n      const {type, payload} = message.data;\n      onMessage(type, payload);\n    };\n  }\n\n  static addEventListener(\n    onMessage: (type: WorkerMessageType, payload: WorkerMessagePayload) => any\n  ) {\n    let onMessageWrapper = onMessageWrapperMap.get(onMessage);\n\n    if (!onMessageWrapper) {\n      onMessageWrapper = (message) => {\n        if (!isKnownMessage(message)) {\n          return;\n        }\n\n        // Confusingly the message itself also has a 'type' field which is always set to 'message'\n        const {type, payload} = message.data;\n        onMessage(type, payload);\n      };\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    self.addEventListener('message', onMessageWrapper);\n  }\n\n  static removeEventListener(\n    onMessage: (type: WorkerMessageType, payload: WorkerMessagePayload) => any\n  ) {\n    const onMessageWrapper = onMessageWrapperMap.get(onMessage);\n    onMessageWrapperMap.delete(onMessage);\n    // eslint-disable-next-line no-restricted-globals\n    self.removeEventListener('message', onMessageWrapper);\n  }\n\n  /**\n   * Send a message from a worker to creating thread (main thread)\n   * @param type\n   * @param payload\n   */\n  static postMessage(type: WorkerMessageType, payload: WorkerMessagePayload): void {\n    if (self) {\n      const data: WorkerMessageData = {source: 'loaders.gl', type, payload};\n      const transferList = getTransferList(payload);\n      // eslint-disable-next-line no-restricted-globals\n      // @ts-ignore\n      self.postMessage(data, transferList);\n    }\n  }\n}\n\n// Filter out noise messages sent to workers\nfunction isKnownMessage(message) {\n  const {type, data} = message;\n  return (\n    type === 'message' &&\n    data &&\n    typeof data.source === 'string' &&\n    data.source.startsWith('loaders.gl')\n  );\n}\n","// NOTE - there is a copy of this function is both in core and loader-utils\n// core does not need all the utils in loader-utils, just this one.\n\n/**\n * Returns an array of Transferrable objects that can be used with postMessage\n * https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\n * @param object data to be sent via postMessage\n * @param recursive - not for application use\n * @param transfers - not for application use\n * @returns a transfer list that can be passed to postMessage\n */\nexport function getTransferList(\n  object: any,\n  recursive: boolean = true,\n  transfers?: Set<any>\n): Transferable[] {\n  // Make sure that items in the transfer list is unique\n  const transfersSet = transfers || new Set();\n\n  if (!object) {\n    // ignore\n  } else if (isTransferable(object)) {\n    transfersSet.add(object);\n  } else if (isTransferable(object.buffer)) {\n    // Typed array\n    transfersSet.add(object.buffer);\n  } else if (ArrayBuffer.isView(object)) {\n    // object is a TypeArray viewing into a SharedArrayBuffer (not transferable)\n    // Do not iterate through the content in this case\n  } else if (recursive && typeof object === 'object') {\n    for (const key in object) {\n      // Avoid perf hit - only go one level deep\n      getTransferList(object[key], recursive, transfersSet);\n    }\n  }\n\n  // If transfers is defined, is internal recursive call\n  // Otherwise it's called by the user\n  return transfers === undefined ? Array.from(transfersSet) : [];\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Transferable\nfunction isTransferable(object) {\n  if (!object) {\n    return false;\n  }\n  if (object instanceof ArrayBuffer) {\n    return true;\n  }\n  if (typeof MessagePort !== 'undefined' && object instanceof MessagePort) {\n    return true;\n  }\n  if (typeof ImageBitmap !== 'undefined' && object instanceof ImageBitmap) {\n    return true;\n  }\n  if (typeof OffscreenCanvas !== 'undefined' && object instanceof OffscreenCanvas) {\n    return true;\n  }\n  return false;\n}\n","import {createWorker} from '../lib/worker-api/create-worker';\n\ncreateWorker(async (data) => {\n  // @ts-ignore\n  return data;\n});\n"],"sourceRoot":""}