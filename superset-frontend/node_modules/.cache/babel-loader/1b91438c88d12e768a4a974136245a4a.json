{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckboxTree from 'react-checkbox-tree';\nimport { filterScopeSelectorTreeNodePropShape } from 'src/dashboard/util/propShapes';\nimport renderFilterScopeTreeNodes from './renderFilterScopeTreeNodes';\nimport treeIcons from './treeIcons';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  nodes: PropTypes.arrayOf(filterScopeSelectorTreeNodePropShape).isRequired,\n  checked: PropTypes.arrayOf(\n  PropTypes.oneOfType([PropTypes.number, PropTypes.string])).\n  isRequired,\n  expanded: PropTypes.arrayOf(\n  PropTypes.oneOfType([PropTypes.number, PropTypes.string])).\n  isRequired,\n  onCheck: PropTypes.func.isRequired,\n  onExpand: PropTypes.func.isRequired,\n  selectedChartId: PropTypes.number };\n\n\nconst defaultProps = {\n  selectedChartId: null };\n\n\nconst NOOP = () => {};\n\nexport default function FilterScopeTree(_ref)\n\n\n\n\n\n\n{let { nodes = [], checked = [], expanded = [], onCheck, onExpand, selectedChartId } = _ref;\n  return (\n    ___EmotionJSX(CheckboxTree, {\n      showExpandAll: true,\n      expandOnClick: true,\n      showNodeIcon: false,\n      nodes: renderFilterScopeTreeNodes({ nodes, selectedChartId }),\n      checked: checked,\n      expanded: expanded,\n      onCheck: onCheck,\n      onExpand: onExpand,\n      onClick: NOOP,\n      icons: treeIcons }));\n\n\n}\n\nFilterScopeTree.propTypes = propTypes;\nFilterScopeTree.defaultProps = defaultProps;","map":{"version":3,"names":["React","PropTypes","CheckboxTree","filterScopeSelectorTreeNodePropShape","renderFilterScopeTreeNodes","treeIcons","propTypes","nodes","arrayOf","isRequired","checked","oneOfType","number","string","expanded","onCheck","func","onExpand","selectedChartId","defaultProps","NOOP","FilterScopeTree"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/filterscope/FilterScopeTree.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckboxTree from 'react-checkbox-tree';\nimport { filterScopeSelectorTreeNodePropShape } from 'src/dashboard/util/propShapes';\nimport renderFilterScopeTreeNodes from './renderFilterScopeTreeNodes';\nimport treeIcons from './treeIcons';\n\nconst propTypes = {\n  nodes: PropTypes.arrayOf(filterScopeSelectorTreeNodePropShape).isRequired,\n  checked: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  ).isRequired,\n  expanded: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  ).isRequired,\n  onCheck: PropTypes.func.isRequired,\n  onExpand: PropTypes.func.isRequired,\n  selectedChartId: PropTypes.number,\n};\n\nconst defaultProps = {\n  selectedChartId: null,\n};\n\nconst NOOP = () => {};\n\nexport default function FilterScopeTree({\n  nodes = [],\n  checked = [],\n  expanded = [],\n  onCheck,\n  onExpand,\n  selectedChartId,\n}) {\n  return (\n    <CheckboxTree\n      showExpandAll\n      expandOnClick\n      showNodeIcon={false}\n      nodes={renderFilterScopeTreeNodes({ nodes, selectedChartId })}\n      checked={checked}\n      expanded={expanded}\n      onCheck={onCheck}\n      onExpand={onExpand}\n      onClick={NOOP}\n      icons={treeIcons}\n    />\n  );\n}\n\nFilterScopeTree.propTypes = propTypes;\nFilterScopeTree.defaultProps = defaultProps;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,oCAAT,QAAqD,+BAArD;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;AACA,OAAOC,SAAP,MAAsB,aAAtB,C;;AAEA,MAAMC,SAAS,GAAG;EAChBC,KAAK,EAAEN,SAAS,CAACO,OAAV,CAAkBL,oCAAlB,EAAwDM,UAD/C;EAEhBC,OAAO,EAAET,SAAS,CAACO,OAAV;EACPP,SAAS,CAACU,SAAV,CAAoB,CAACV,SAAS,CAACW,MAAX,EAAmBX,SAAS,CAACY,MAA7B,CAApB,CADO;EAEPJ,UAJc;EAKhBK,QAAQ,EAAEb,SAAS,CAACO,OAAV;EACRP,SAAS,CAACU,SAAV,CAAoB,CAACV,SAAS,CAACW,MAAX,EAAmBX,SAAS,CAACY,MAA7B,CAApB,CADQ;EAERJ,UAPc;EAQhBM,OAAO,EAAEd,SAAS,CAACe,IAAV,CAAeP,UARR;EAShBQ,QAAQ,EAAEhB,SAAS,CAACe,IAAV,CAAeP,UATT;EAUhBS,eAAe,EAAEjB,SAAS,CAACW,MAVX,EAAlB;;;AAaA,MAAMO,YAAY,GAAG;EACnBD,eAAe,EAAE,IADE,EAArB;;;AAIA,MAAME,IAAI,GAAG,MAAM,CAAE,CAArB;;AAEA,eAAe,SAASC,eAAT;;;;;;;AAOZ,KAPqC,EACtCd,KAAK,GAAG,EAD8B,EAEtCG,OAAO,GAAG,EAF4B,EAGtCI,QAAQ,GAAG,EAH2B,EAItCC,OAJsC,EAKtCE,QALsC,EAMtCC,eANsC,EAOrC;EACD;IACE,cAAC,YAAD;MACE,aAAa,MADf;MAEE,aAAa,MAFf;MAGE,YAAY,EAAE,KAHhB;MAIE,KAAK,EAAEd,0BAA0B,CAAC,EAAEG,KAAF,EAASW,eAAT,EAAD,CAJnC;MAKE,OAAO,EAAER,OALX;MAME,QAAQ,EAAEI,QANZ;MAOE,OAAO,EAAEC,OAPX;MAQE,QAAQ,EAAEE,QARZ;MASE,OAAO,EAAEG,IATX;MAUE,KAAK,EAAEf,SAVT,GADF;;;AAcD;;AAEDgB,eAAe,CAACf,SAAhB,GAA4BA,SAA5B;AACAe,eAAe,CAACF,YAAhB,GAA+BA,YAA/B"},"metadata":{},"sourceType":"module"}