{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled, safeHtmlSpan } from '@superset-ui/core';\nimport React from 'react';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledDiv = styled.div`\n  ${(_ref) => {let { theme, top, left } = _ref;return `\n    position: absolute;\n    top: ${top}px;\n    left: ${left}px;\n    padding: ${theme.gridUnit * 2}px;\n    margin: ${theme.gridUnit * 2}px;\n    background: ${theme.colors.grayscale.dark2};\n    color: ${theme.colors.grayscale.light5};\n    maxWidth: 300px;\n    fontSize: ${theme.typography.sizes.s}px;\n    zIndex: 9;\n    pointerEvents: none;\n  `;}}\n`;\nexport default function Tooltip(props) {\n  const { tooltip } = props;\n  if (typeof tooltip === 'undefined' || tooltip === null) {\n    return null;\n  }\n  const { x, y, content } = tooltip;\n  const safeContent = typeof content === 'string' ? safeHtmlSpan(content) : content;\n  return ___EmotionJSX(StyledDiv, { top: y, left: x },\n  safeContent);\n\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,MAAT,EAAiBC,YAAjB,QAAqC,mBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C;AAaA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAkC;IACvD,eAAC,EAAEC,KAAF,EAASC,GAAT,EAAcC,IAAd,EAAD,eAA0B;;WAEnBD,GAAG;YACFC,IAAI;eACDF,KAAK,CAACG,QAAN,GAAiB,CAAC;cACnBH,KAAK,CAACG,QAAN,GAAiB,CAAC;kBACdH,KAAK,CAACI,MAAN,CAAaC,SAAb,CAAuBC,KAAK;aACjCN,KAAK,CAACI,MAAN,CAAaC,SAAb,CAAuBE,MAAM;;gBAE1BP,KAAK,CAACQ,UAAN,CAAiBC,KAAjB,CAAuBC,CAAC;;;GATpC,EAYD;CAbH;AAgBA,eAAc,SAAUC,OAAV,CAAkBC,KAAlB,EAAqC;EACjD,MAAM,EAAEC,OAAF,KAAcD,KAApB;EACA,IAAI,OAAOC,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,KAAK,IAAlD,EAAwD;IACtD,OAAO,IAAP;EACD;EAED,MAAM,EAAEC,CAAF,EAAKC,CAAL,EAAQC,OAAR,KAAoBH,OAA1B;EACA,MAAMI,WAAW,GACf,OAAOD,OAAP,KAAmB,QAAnB,GAA8BpB,YAAY,CAACoB,OAAD,CAA1C,GAAsDA,OADxD;EAGA,OACE,cAAC,SAAD,IAAW,GAAG,EAAED,CAAhB,EAAmB,IAAI,EAAED,CAAzB;EACGG,WADH,CADF;;AAKD","names":["styled","safeHtmlSpan","React","StyledDiv","div","theme","top","left","gridUnit","colors","grayscale","dark2","light5","typography","sizes","s","Tooltip","props","tooltip","x","y","content","safeContent"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/legacy-preset-chart-deckgl/src/components/Tooltip.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { styled, safeHtmlSpan } from '@superset-ui/core';\nimport React from 'react';\n\nexport type TooltipProps = {\n  tooltip:\n    | {\n        x: number;\n        y: number;\n        content: string;\n      }\n    | null\n    | undefined;\n};\n\nconst StyledDiv = styled.div<{ top: number; left: number }>`\n  ${({ theme, top, left }) => `\n    position: absolute;\n    top: ${top}px;\n    left: ${left}px;\n    padding: ${theme.gridUnit * 2}px;\n    margin: ${theme.gridUnit * 2}px;\n    background: ${theme.colors.grayscale.dark2};\n    color: ${theme.colors.grayscale.light5};\n    maxWidth: 300px;\n    fontSize: ${theme.typography.sizes.s}px;\n    zIndex: 9;\n    pointerEvents: none;\n  `}\n`;\n\nexport default function Tooltip(props: TooltipProps) {\n  const { tooltip } = props;\n  if (typeof tooltip === 'undefined' || tooltip === null) {\n    return null;\n  }\n\n  const { x, y, content } = tooltip;\n  const safeContent =\n    typeof content === 'string' ? safeHtmlSpan(content) : content;\n\n  return (\n    <StyledDiv top={y} left={x}>\n      {safeContent}\n    </StyledDiv>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}