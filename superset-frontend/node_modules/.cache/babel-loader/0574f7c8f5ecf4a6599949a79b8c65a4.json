{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { css, useTheme, useCSSTextTruncation, truncationCSS } from '@superset-ui/core';\nimport React from 'react';\nimport Icons from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { FilterBarOrientation } from 'src/dashboard/types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst VerticalDivider = (_ref) => {let { title, description } = _ref;return ___EmotionJSX(\"div\", null,\n  ___EmotionJSX(\"h3\", null, title),\n  description ? ___EmotionJSX(\"p\", null, description) : null);};\n\nconst HorizontalDivider = (_ref2) => {let { title, description } = _ref2;\n  const theme = useTheme();\n  const [titleRef, titleIsTruncated] = useCSSTextTruncation();\n  return ___EmotionJSX(\"div\", { css: css`\n        display: flex;\n        align-items: center;\n        height: ${6 * theme.gridUnit}px;\n        border-left: 1px solid ${theme.colors.grayscale.light2};\n        padding-left: ${4 * theme.gridUnit}px;\n\n        .filter-item-wrapper:first-child & {\n          border-left: none;\n          padding-left: 0;\n        }\n      ` },\n  ___EmotionJSX(Tooltip, { overlay: titleIsTruncated ? title : null },\n  ___EmotionJSX(\"h3\", { ref: titleRef, css: css`\n            ${truncationCSS};\n            max-width: ${theme.gridUnit * 32.5}px;\n            font-size: ${theme.typography.sizes.m}px;\n            font-weight: ${theme.typography.weights.normal};\n            margin: 0;\n            color: ${theme.colors.grayscale.dark1};\n          ` },\n  title)),\n\n\n  description ? ___EmotionJSX(Tooltip, { overlay: description },\n  ___EmotionJSX(Icons.BookOutlined, { iconSize: \"l\", iconColor: theme.colors.grayscale.base, css: css`\n              margin: 0 ${theme.gridUnit * 1.5}px;\n              vertical-align: unset;\n              line-height: unset;\n            ` })) :\n  null);\n\n};\nconst HorizontalOverflowDivider = (_ref3) => {let { title, description } = _ref3;\n  const theme = useTheme();\n  const [titleRef, titleIsTruncated] = useCSSTextTruncation();\n  const [descriptionRef, descriptionIsTruncated] = useCSSTextTruncation();\n  return ___EmotionJSX(\"div\", { css: css`\n        border-top: 1px solid ${theme.colors.grayscale.light2};\n        padding-top: ${theme.gridUnit * 4}px;\n        margin-bottom: ${theme.gridUnit * 4}px;\n      ` },\n  ___EmotionJSX(Tooltip, { overlay: titleIsTruncated ? ___EmotionJSX(\"strong\", null, title) : null },\n  ___EmotionJSX(\"h3\", { ref: titleRef, css: css`\n            ${truncationCSS};\n            display: block;\n            color: ${theme.colors.grayscale.dark1};\n            font-weight: ${theme.typography.weights.normal};\n            font-size: ${theme.typography.sizes.m}px;\n            margin: 0 0 ${theme.gridUnit}px 0;\n          ` },\n  title)),\n\n\n  description ? ___EmotionJSX(Tooltip, { overlay: descriptionIsTruncated ? description : null },\n  ___EmotionJSX(\"p\", { ref: descriptionRef, css: css`\n              ${truncationCSS};\n              display: block;\n              font-size: ${theme.typography.sizes.s}px;\n              color: ${theme.colors.grayscale.base};\n              margin: ${theme.gridUnit}px 0 0 0;\n            ` },\n  description)) :\n\n  null);\n\n};\nconst FilterDivider = (_ref4) => {let { title, description, orientation = FilterBarOrientation.VERTICAL, overflow = false } = _ref4;\n  if (orientation === FilterBarOrientation.HORIZONTAL) {\n    if (overflow) {\n      return ___EmotionJSX(HorizontalOverflowDivider, { title: title, description: description });\n    }\n    return ___EmotionJSX(HorizontalDivider, { title: title, description: description });\n  }\n  return ___EmotionJSX(VerticalDivider, { title: title, description: description });\n};\nexport default FilterDivider;","map":{"version":3,"mappings":"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","names":["css","useTheme","useCSSTextTruncation","truncationCSS","React","Icons","Tooltip","FilterBarOrientation","VerticalDivider","title","description","HorizontalDivider","theme","titleRef","titleIsTruncated","gridUnit","colors","grayscale","light2","typography","sizes","m","weights","normal","dark1","base","HorizontalOverflowDivider","descriptionRef","descriptionIsTruncated","s","FilterDivider","orientation","VERTICAL","overflow","HORIZONTAL"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterControls/FilterDivider.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  css,\n  useTheme,\n  useCSSTextTruncation,\n  truncationCSS,\n} from '@superset-ui/core';\nimport React from 'react';\nimport Icons from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { FilterBarOrientation } from 'src/dashboard/types';\nimport { FilterDividerProps } from './types';\n\nconst VerticalDivider = ({ title, description }: FilterDividerProps) => (\n  <div>\n    <h3>{title}</h3>\n    {description ? <p data-test=\"divider-description\">{description}</p> : null}\n  </div>\n);\n\nconst HorizontalDivider = ({ title, description }: FilterDividerProps) => {\n  const theme = useTheme();\n  const [titleRef, titleIsTruncated] =\n    useCSSTextTruncation<HTMLHeadingElement>();\n\n  return (\n    <div\n      css={css`\n        display: flex;\n        align-items: center;\n        height: ${6 * theme.gridUnit}px;\n        border-left: 1px solid ${theme.colors.grayscale.light2};\n        padding-left: ${4 * theme.gridUnit}px;\n\n        .filter-item-wrapper:first-child & {\n          border-left: none;\n          padding-left: 0;\n        }\n      `}\n    >\n      <Tooltip overlay={titleIsTruncated ? title : null}>\n        <h3\n          ref={titleRef}\n          css={css`\n            ${truncationCSS};\n            max-width: ${theme.gridUnit * 32.5}px;\n            font-size: ${theme.typography.sizes.m}px;\n            font-weight: ${theme.typography.weights.normal};\n            margin: 0;\n            color: ${theme.colors.grayscale.dark1};\n          `}\n        >\n          {title}\n        </h3>\n      </Tooltip>\n      {description ? (\n        <Tooltip overlay={description}>\n          <Icons.BookOutlined\n            data-test=\"divider-description-icon\"\n            iconSize=\"l\"\n            iconColor={theme.colors.grayscale.base}\n            css={css`\n              margin: 0 ${theme.gridUnit * 1.5}px;\n              vertical-align: unset;\n              line-height: unset;\n            `}\n          />\n        </Tooltip>\n      ) : null}\n    </div>\n  );\n};\n\nconst HorizontalOverflowDivider = ({\n  title,\n  description,\n}: FilterDividerProps) => {\n  const theme = useTheme();\n  const [titleRef, titleIsTruncated] =\n    useCSSTextTruncation<HTMLHeadingElement>();\n\n  const [descriptionRef, descriptionIsTruncated] =\n    useCSSTextTruncation<HTMLHeadingElement>();\n\n  return (\n    <div\n      css={css`\n        border-top: 1px solid ${theme.colors.grayscale.light2};\n        padding-top: ${theme.gridUnit * 4}px;\n        margin-bottom: ${theme.gridUnit * 4}px;\n      `}\n    >\n      <Tooltip overlay={titleIsTruncated ? <strong>{title}</strong> : null}>\n        <h3\n          ref={titleRef}\n          css={css`\n            ${truncationCSS};\n            display: block;\n            color: ${theme.colors.grayscale.dark1};\n            font-weight: ${theme.typography.weights.normal};\n            font-size: ${theme.typography.sizes.m}px;\n            margin: 0 0 ${theme.gridUnit}px 0;\n          `}\n        >\n          {title}\n        </h3>\n      </Tooltip>\n      {description ? (\n        <Tooltip overlay={descriptionIsTruncated ? description : null}>\n          <p\n            ref={descriptionRef}\n            data-test=\"divider-description\"\n            css={css`\n              ${truncationCSS};\n              display: block;\n              font-size: ${theme.typography.sizes.s}px;\n              color: ${theme.colors.grayscale.base};\n              margin: ${theme.gridUnit}px 0 0 0;\n            `}\n          >\n            {description}\n          </p>\n        </Tooltip>\n      ) : null}\n    </div>\n  );\n};\n\nconst FilterDivider = ({\n  title,\n  description,\n  orientation = FilterBarOrientation.VERTICAL,\n  overflow = false,\n}: FilterDividerProps) => {\n  if (orientation === FilterBarOrientation.HORIZONTAL) {\n    if (overflow) {\n      return (\n        <HorizontalOverflowDivider title={title} description={description} />\n      );\n    }\n\n    return <HorizontalDivider title={title} description={description} />;\n  }\n\n  return <VerticalDivider title={title} description={description} />;\n};\n\nexport default FilterDivider;\n"]},"metadata":{},"sourceType":"module"}