{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback } from 'react';\nimport { styled, t, useTheme } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { CaretContainer, CloseContainer, OptionControlContainer, Label } from 'src/explore/components/controls/OptionControls';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledInfoTooltipWithTrigger = styled(InfoTooltipWithTrigger)`\n  margin: 0 ${(_ref) => {let { theme } = _ref;return theme.gridUnit;}}px;\n`;\nexport default function Option(_ref2) {let { children, index, clickClose, withCaret, isExtra, datasourceWarningMessage, canDelete = true } = _ref2;\n  const theme = useTheme();\n  const onClickClose = useCallback((e) => {\n    e.stopPropagation();\n    clickClose(index);\n  }, [clickClose, index]);\n  return ___EmotionJSX(OptionControlContainer, { withCaret: withCaret },\n  canDelete && ___EmotionJSX(CloseContainer, { role: \"button\", onClick: onClickClose },\n  ___EmotionJSX(Icons.XSmall, { iconColor: theme.colors.grayscale.light1 })),\n\n  ___EmotionJSX(Label, null, children),\n  (!!datasourceWarningMessage || isExtra) && ___EmotionJSX(StyledInfoTooltipWithTrigger, { icon: \"exclamation-triangle\", placement: \"top\", bsStyle: \"warning\", tooltip: datasourceWarningMessage ||\n    t(`\n                This filter was inherited from the dashboard's context.\n                It won't be saved when saving the chart.\n              `) }),\n  withCaret && ___EmotionJSX(CaretContainer, null,\n  ___EmotionJSX(Icons.CaretRight, { iconColor: theme.colors.grayscale.light1 })));\n\n\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,EAAiBC,CAAjB,EAAoBC,QAApB,QAAoC,mBAApC;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,sBAHF,EAIEC,KAJF,QAKO,gDALP;AAOA,SAASC,sBAAT,QAAuC,6BAAvC,C;AAEA,MAAMC,4BAA4B,GAAGT,MAAM,CAACQ,sBAAD,CAAwB;cACrD,eAAC,EAAEE,KAAF,EAAD,eAAeA,KAAK,CAACC,QAArB,EAA6B;CAD3C;AAIA,eAAc,SAAUC,MAAV,QAQA,KARiB,EAC7BC,QAD6B,EAE7BC,KAF6B,EAG7BC,UAH6B,EAI7BC,SAJ6B,EAK7BC,OAL6B,EAM7BC,wBAN6B,EAO7BC,SAAS,GAAG,IAPiB,EAQjB;EACZ,MAAMT,KAAK,GAAGR,QAAQ,EAAtB;EACA,MAAMkB,YAAY,GAAGrB,WAAW,CAC9B,EAAC,KAAG;IACFsB,CAAC,CAACC,eAAF;IACAP,UAAU,CAACD,KAAD,CAAV;EACD,CAJ6B,EAK9B,CAACC,UAAD,EAAaD,KAAb,CAL8B,CAAhC;EAOA,OACE,cAAC,sBAAD,IAAiD,SAAS,EAAEE,SAA5D;EACGG,SAAS,IACR,cAAC,cAAD,IACE,IAAI,EAAC,QADP,EAGE,OAAO,EAAEC,YAHX;EAKE,cAAC,KAAD,CAAO,MAAP,IAAc,SAAS,EAAEV,KAAK,CAACa,MAAN,CAAaC,SAAb,CAAuBC,MAAhD,GALF,CAFJ;;EAUE,cAAC,KAAD,QAAkCZ,QAAlC,CAVF;EAWG,CAAC,CAAC,CAACK,wBAAF,IAA8BD,OAA/B,KACC,cAAC,4BAAD,IACE,IAAI,EAAC,sBADP,EAEE,SAAS,EAAC,KAFZ,EAGE,OAAO,EAAC,SAHV,EAIE,OAAO,EACLC,wBAAwB;IACxBjB,CAAC,CAAC;;;eAAD,CANL,GAZJ;EAyBGe,SAAS,IACR,cAAC,cAAD;EACE,cAAC,KAAD,CAAO,UAAP,IAAkB,SAAS,EAAEN,KAAK,CAACa,MAAN,CAAaC,SAAb,CAAuBC,MAApD,GADF,CA1BJ,CADF;;;AAiCD","names":["React","useCallback","styled","t","useTheme","Icons","CaretContainer","CloseContainer","OptionControlContainer","Label","InfoTooltipWithTrigger","StyledInfoTooltipWithTrigger","theme","gridUnit","Option","children","index","clickClose","withCaret","isExtra","datasourceWarningMessage","canDelete","onClickClose","e","stopPropagation","colors","grayscale","light1"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/explore/components/controls/DndColumnSelectControl/Option.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback } from 'react';\nimport { styled, t, useTheme } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport {\n  CaretContainer,\n  CloseContainer,\n  OptionControlContainer,\n  Label,\n} from 'src/explore/components/controls/OptionControls';\nimport { OptionProps } from 'src/explore/components/controls/DndColumnSelectControl/types';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\n\nconst StyledInfoTooltipWithTrigger = styled(InfoTooltipWithTrigger)`\n  margin: 0 ${({ theme }) => theme.gridUnit}px;\n`;\n\nexport default function Option({\n  children,\n  index,\n  clickClose,\n  withCaret,\n  isExtra,\n  datasourceWarningMessage,\n  canDelete = true,\n}: OptionProps) {\n  const theme = useTheme();\n  const onClickClose = useCallback(\n    e => {\n      e.stopPropagation();\n      clickClose(index);\n    },\n    [clickClose, index],\n  );\n  return (\n    <OptionControlContainer data-test=\"option-label\" withCaret={withCaret}>\n      {canDelete && (\n        <CloseContainer\n          role=\"button\"\n          data-test=\"remove-control-button\"\n          onClick={onClickClose}\n        >\n          <Icons.XSmall iconColor={theme.colors.grayscale.light1} />\n        </CloseContainer>\n      )}\n      <Label data-test=\"control-label\">{children}</Label>\n      {(!!datasourceWarningMessage || isExtra) && (\n        <StyledInfoTooltipWithTrigger\n          icon=\"exclamation-triangle\"\n          placement=\"top\"\n          bsStyle=\"warning\"\n          tooltip={\n            datasourceWarningMessage ||\n            t(`\n                This filter was inherited from the dashboard's context.\n                It won't be saved when saving the chart.\n              `)\n          }\n        />\n      )}\n      {withCaret && (\n        <CaretContainer>\n          <Icons.CaretRight iconColor={theme.colors.grayscale.light1} />\n        </CaretContainer>\n      )}\n    </OptionControlContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}