{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from './InfoTooltipWithTrigger';\nimport { Tooltip } from './Tooltip';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function ControlHeader(_ref) {let { name, description, label, tooltipOnClick, onClick, warning, danger, leftNode, rightNode, validationErrors = [], renderTrigger = false, hovered = false, required = false } = _ref;\n  const renderOptionalIcons = () => {\n    if (hovered) {\n      return ___EmotionJSX(\"span\", null,\n      description && ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(InfoTooltipWithTrigger, { label: t('description'), tooltip: description, placement: \"top\", onClick: tooltipOnClick }), ' '),\n\n      renderTrigger && ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(InfoTooltipWithTrigger, { label: t('bolt'), tooltip: t('Changing this control takes effect instantly'), placement: \"top\", icon: \"bolt\" }), ' '));\n\n\n    }\n    return null;\n  };\n  if (!label) {\n    return null;\n  }\n  const labelClass = validationErrors.length > 0 ? 'text-danger' : '';\n  return ___EmotionJSX(\"div\", { className: \"ControlHeader\" },\n  ___EmotionJSX(\"div\", { className: \"pull-left\" },\n  ___EmotionJSX(\"label\", { className: \"control-label\", htmlFor: name },\n  leftNode && ___EmotionJSX(\"span\", null, leftNode),\n  ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, onClick: onClick, className: labelClass, style: { cursor: onClick ? 'pointer' : '' } },\n  label),\n  ' ',\n  warning && ___EmotionJSX(\"span\", null,\n  ___EmotionJSX(Tooltip, { id: \"error-tooltip\", placement: \"top\", title: warning },\n  ___EmotionJSX(\"i\", { className: \"fa fa-exclamation-circle text-warning\" })),\n  ' '),\n\n  danger && ___EmotionJSX(\"span\", null,\n  ___EmotionJSX(Tooltip, { id: \"error-tooltip\", placement: \"top\", title: danger },\n  ___EmotionJSX(\"i\", { className: \"fa fa-exclamation-circle text-danger\" })),\n  ' '),\n\n  validationErrors.length > 0 && ___EmotionJSX(\"span\", null,\n  ___EmotionJSX(Tooltip, { id: \"error-tooltip\", placement: \"top\", title: validationErrors.join(' ') },\n  ___EmotionJSX(\"i\", { className: \"fa fa-exclamation-circle text-danger\" })),\n  ' '),\n\n  renderOptionalIcons(),\n  required && ___EmotionJSX(\"span\", { className: \"text-danger m-l-4\" },\n  ___EmotionJSX(\"strong\", null, \"*\")))),\n\n\n\n  rightNode && ___EmotionJSX(\"div\", { className: \"pull-right\" }, rightNode),\n  ___EmotionJSX(\"div\", { className: \"clearfix\" }));\n\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,CAAT,QAAkB,mBAAlB;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,SAASC,OAAT,QAAwB,WAAxB,C;AAoBA,eAAc,SAAUC,aAAV,OAcO,KAdiB,EACpCC,IADoC,EAEpCC,WAFoC,EAGpCC,KAHoC,EAIpCC,cAJoC,EAKpCC,OALoC,EAMpCC,OANoC,EAOpCC,MAPoC,EAQpCC,QARoC,EASpCC,SAToC,EAUpCC,gBAAgB,GAAG,EAViB,EAWpCC,aAAa,GAAG,KAXoB,EAYpCC,OAAO,GAAG,KAZ0B,EAapCC,QAAQ,GAAG,KAbyB,EAcjB;EACnB,MAAMC,mBAAmB,GAAG,MAAK;IAC/B,IAAIF,OAAJ,EAAa;MACX,OACE;MACGV,WAAW,IACV;MACE,cAAC,sBAAD,IACE,KAAK,EAAEL,CAAC,CAAC,aAAD,CADV,EAEE,OAAO,EAAEK,WAFX,EAGE,SAAS,EAAC,KAHZ,EAIE,OAAO,EAAEE,cAJX,GADF,EAMK,GANL,CAFJ;;MAWGO,aAAa,IACZ;MACE,cAAC,sBAAD,IACE,KAAK,EAAEd,CAAC,CAAC,MAAD,CADV,EAEE,OAAO,EAAEA,CAAC,CAAC,8CAAD,CAFZ,EAGE,SAAS,EAAC,KAHZ,EAIE,IAAI,EAAC,MAJP,GADF,EAMK,GANL,CAZJ,CADF;;;IAwBD;IACD,OAAO,IAAP;EACD,CA5BD;EA8BA,IAAI,CAACM,KAAL,EAAY;IACV,OAAO,IAAP;EACD;EACD,MAAMY,UAAU,GAAGL,gBAAgB,CAACM,MAAjB,GAA0B,CAA1B,GAA8B,aAA9B,GAA8C,EAAjE;EACA,OACE,uBAAK,SAAS,EAAC,eAAf;EACE,uBAAK,SAAS,EAAC,WAAf;EACE,yBAAO,SAAS,EAAC,eAAjB,EAAiC,OAAO,EAAEf,IAA1C;EACGO,QAAQ,IAAI,4BAAOA,QAAP,CADf;EAEE,wBACE,IAAI,EAAC,QADP,EAEE,QAAQ,EAAE,CAFZ,EAGE,OAAO,EAAEH,OAHX,EAIE,SAAS,EAAEU,UAJb,EAKE,KAAK,EAAE,EAAEE,MAAM,EAAEZ,OAAO,GAAG,SAAH,GAAe,EAAhC,EALT;EAOGF,KAPH,CAFF;EAUU,GAVV;EAWGG,OAAO,IACN;EACE,cAAC,OAAD,IAAS,EAAE,EAAC,eAAZ,EAA4B,SAAS,EAAC,KAAtC,EAA4C,KAAK,EAAEA,OAAnD;EACE,qBAAG,SAAS,EAAC,uCAAb,GADF,CADF;EAGa,GAHb,CAZJ;;EAkBGC,MAAM,IACL;EACE,cAAC,OAAD,IAAS,EAAE,EAAC,eAAZ,EAA4B,SAAS,EAAC,KAAtC,EAA4C,KAAK,EAAEA,MAAnD;EACE,qBAAG,SAAS,EAAC,sCAAb,GADF,CADF;EAGa,GAHb,CAnBJ;;EAyBGG,gBAAgB,CAACM,MAAjB,GAA0B,CAA1B,IACC;EACE,cAAC,OAAD,IACE,EAAE,EAAC,eADL,EAEE,SAAS,EAAC,KAFZ,EAGE,KAAK,EAAEN,gBAAgB,CAACQ,IAAjB,CAAsB,GAAtB,CAHT;EAKE,qBAAG,SAAS,EAAC,sCAAb,GALF,CADF;EAOa,GAPb,CA1BJ;;EAoCGJ,mBAAmB,EApCtB;EAqCGD,QAAQ,IACP,wBAAM,SAAS,EAAC,mBAAhB;EACE,kCADF,CAtCJ,CADF,CADF;;;;EA8CGJ,SAAS,IAAI,uBAAK,SAAS,EAAC,YAAf,IAA6BA,SAA7B,CA9ChB;EA+CE,uBAAK,SAAS,EAAC,UAAf,GA/CF,CADF;;AAmDD","names":["React","t","InfoTooltipWithTrigger","Tooltip","ControlHeader","name","description","label","tooltipOnClick","onClick","warning","danger","leftNode","rightNode","validationErrors","renderTrigger","hovered","required","renderOptionalIcons","labelClass","length","cursor","join"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/components/ControlHeader.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ReactNode } from 'react';\nimport { t } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from './InfoTooltipWithTrigger';\nimport { Tooltip } from './Tooltip';\n\ntype ValidationError = string;\n\nexport type ControlHeaderProps = {\n  name?: string;\n  label?: ReactNode;\n  description?: ReactNode;\n  validationErrors?: ValidationError[];\n  renderTrigger?: boolean;\n  rightNode?: ReactNode;\n  leftNode?: ReactNode;\n  hovered?: boolean;\n  required?: boolean;\n  warning?: string;\n  danger?: string;\n  onClick?: () => void;\n  tooltipOnClick?: () => void;\n};\n\nexport default function ControlHeader({\n  name,\n  description,\n  label,\n  tooltipOnClick,\n  onClick,\n  warning,\n  danger,\n  leftNode,\n  rightNode,\n  validationErrors = [],\n  renderTrigger = false,\n  hovered = false,\n  required = false,\n}: ControlHeaderProps) {\n  const renderOptionalIcons = () => {\n    if (hovered) {\n      return (\n        <span>\n          {description && (\n            <span>\n              <InfoTooltipWithTrigger\n                label={t('description')}\n                tooltip={description}\n                placement=\"top\"\n                onClick={tooltipOnClick}\n              />{' '}\n            </span>\n          )}\n          {renderTrigger && (\n            <span>\n              <InfoTooltipWithTrigger\n                label={t('bolt')}\n                tooltip={t('Changing this control takes effect instantly')}\n                placement=\"top\"\n                icon=\"bolt\"\n              />{' '}\n            </span>\n          )}\n        </span>\n      );\n    }\n    return null;\n  };\n\n  if (!label) {\n    return null;\n  }\n  const labelClass = validationErrors.length > 0 ? 'text-danger' : '';\n  return (\n    <div className=\"ControlHeader\" data-test={`${name}-header`}>\n      <div className=\"pull-left\">\n        <label className=\"control-label\" htmlFor={name}>\n          {leftNode && <span>{leftNode}</span>}\n          <span\n            role=\"button\"\n            tabIndex={0}\n            onClick={onClick}\n            className={labelClass}\n            style={{ cursor: onClick ? 'pointer' : '' }}\n          >\n            {label}\n          </span>{' '}\n          {warning && (\n            <span>\n              <Tooltip id=\"error-tooltip\" placement=\"top\" title={warning}>\n                <i className=\"fa fa-exclamation-circle text-warning\" />\n              </Tooltip>{' '}\n            </span>\n          )}\n          {danger && (\n            <span>\n              <Tooltip id=\"error-tooltip\" placement=\"top\" title={danger}>\n                <i className=\"fa fa-exclamation-circle text-danger\" />\n              </Tooltip>{' '}\n            </span>\n          )}\n          {validationErrors.length > 0 && (\n            <span>\n              <Tooltip\n                id=\"error-tooltip\"\n                placement=\"top\"\n                title={validationErrors.join(' ')}\n              >\n                <i className=\"fa fa-exclamation-circle text-danger\" />\n              </Tooltip>{' '}\n            </span>\n          )}\n          {renderOptionalIcons()}\n          {required && (\n            <span className=\"text-danger m-l-4\">\n              <strong>*</strong>\n            </span>\n          )}\n        </label>\n      </div>\n      {rightNode && <div className=\"pull-right\">{rightNode}</div>}\n      <div className=\"clearfix\" />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}