{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useCallback } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport TableSelector, { TableOption } from 'src/components/TableSelector';\nimport { emptyStateComponent } from 'src/components/EmptyState';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport { LocalStorageKeys, getItem } from 'src/utils/localStorageHelpers';\nimport { DatasetActionType } from 'src/features/datasets/AddDataset/types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst LeftPanelStyle = styled.div`\n  ${(_ref) => {let { theme } = _ref;return `\n    padding: ${theme.gridUnit * 4}px;\n    height: 100%;\n    background-color: ${theme.colors.grayscale.light5};\n    position: relative;\n    .emptystate {\n      height: auto;\n      margin-top: ${theme.gridUnit * 17.5}px;\n    }\n    .section-title {\n      margin-top: ${theme.gridUnit * 5.5}px;\n      margin-bottom: ${theme.gridUnit * 11}px;\n      font-weight: ${theme.typography.weights.bold};\n    }\n    .table-title {\n      margin-top: ${theme.gridUnit * 11}px;\n      margin-bottom: ${theme.gridUnit * 6}px;\n      font-weight: ${theme.typography.weights.bold};\n    }\n    .options-list {\n      overflow: auto;\n      position: absolute;\n      bottom: 0;\n      top: ${theme.gridUnit * 92.25}px;\n      left: ${theme.gridUnit * 3.25}px;\n      right: 0;\n\n      .no-scrollbar {\n        margin-right: ${theme.gridUnit * 4}px;\n      }\n\n      .options {\n        cursor: pointer;\n        padding: ${theme.gridUnit * 1.75}px;\n        border-radius: ${theme.borderRadius}px;\n        :hover {\n          background-color: ${theme.colors.grayscale.light4}\n        }\n      }\n\n      .options-highlighted {\n        cursor: pointer;\n        padding: ${theme.gridUnit * 1.75}px;\n        border-radius: ${theme.borderRadius}px;\n        background-color: ${theme.colors.primary.dark1};\n        color: ${theme.colors.grayscale.light5};\n      }\n\n      .options, .options-highlighted {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n      }\n    }\n    form > span[aria-label=\"refresh\"] {\n      position: absolute;\n      top: ${theme.gridUnit * 69}px;\n      left: ${theme.gridUnit * 42.75}px;\n      font-size: ${theme.gridUnit * 4.25}px;\n    }\n    .table-form {\n      margin-bottom: ${theme.gridUnit * 8}px;\n    }\n    .loading-container {\n      position: absolute;\n      top: ${theme.gridUnit * 89.75}px;\n      left: 0;\n      right: 0;\n      text-align: center;\n      img {\n        width: ${theme.gridUnit * 20}px;\n        margin-bottom: ${theme.gridUnit * 2.5}px;\n      }\n      p {\n        color: ${theme.colors.grayscale.light1};\n      }\n    }\n`;}}\n`;\nexport default function LeftPanel(_ref2) {let { setDataset, dataset, datasetNames } = _ref2;\n  const { addDangerToast } = useToasts();\n  const setDatabase = useCallback((db) => {\n    setDataset({ type: DatasetActionType.selectDatabase, payload: { db } });\n  }, [setDataset]);\n  const setSchema = (schema) => {\n    if (schema) {\n      setDataset({\n        type: DatasetActionType.selectSchema,\n        payload: { name: 'schema', value: schema } });\n\n    }\n  };\n  const setTable = (tableName) => {\n    setDataset({\n      type: DatasetActionType.selectTable,\n      payload: { name: 'table_name', value: tableName } });\n\n  };\n  useEffect(() => {\n    const currentUserSelectedDb = getItem(LocalStorageKeys.db, null);\n    if (currentUserSelectedDb) {\n      setDatabase(currentUserSelectedDb);\n    }\n  }, [setDatabase]);\n  const customTableOptionLabelRenderer = useCallback((table) => ___EmotionJSX(TableOption, { table: datasetNames != null && _includesInstanceProperty(datasetNames).call(datasetNames, table.value) ?\n    {\n      ...table,\n      extra: {\n        warning_markdown: t('This table already has a dataset') } } :\n\n\n    table }), [datasetNames]);\n  return ___EmotionJSX(LeftPanelStyle, null,\n  ___EmotionJSX(TableSelector, _extends({ database: dataset == null ? void 0 : dataset.db, handleError: addDangerToast, emptyState: emptyStateComponent(false), onDbChange: setDatabase, onSchemaChange: setSchema, onTableSelectChange: setTable, sqlLabMode: false, customTableOptionLabelRenderer: customTableOptionLabelRenderer }, (dataset == null ? void 0 : dataset.schema) && { schema: dataset.schema })));\n\n}","map":{"version":3,"mappings":"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","names":["React","useEffect","useCallback","styled","t","TableSelector","TableOption","emptyStateComponent","useToasts","LocalStorageKeys","getItem","DatasetActionType","LeftPanelStyle","div","theme","gridUnit","colors","grayscale","light5","typography","weights","bold","borderRadius","light4","primary","dark1","light1","LeftPanel","setDataset","dataset","datasetNames","addDangerToast","setDatabase","db","type","selectDatabase","payload","setSchema","schema","selectSchema","name","value","setTable","tableName","selectTable","currentUserSelectedDb","customTableOptionLabelRenderer","table","extra","warning_markdown"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/features/datasets/AddDataset/LeftPanel/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, SetStateAction, Dispatch, useCallback } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport TableSelector, { TableOption } from 'src/components/TableSelector';\nimport { DatabaseObject } from 'src/components/DatabaseSelector';\nimport { emptyStateComponent } from 'src/components/EmptyState';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport { LocalStorageKeys, getItem } from 'src/utils/localStorageHelpers';\nimport {\n  DatasetActionType,\n  DatasetObject,\n} from 'src/features/datasets/AddDataset/types';\nimport { Table } from 'src/hooks/apiResources';\n\ninterface LeftPanelProps {\n  setDataset: Dispatch<SetStateAction<object>>;\n  dataset?: Partial<DatasetObject> | null;\n  datasetNames?: (string | null | undefined)[] | undefined;\n}\n\nconst LeftPanelStyle = styled.div`\n  ${({ theme }) => `\n    padding: ${theme.gridUnit * 4}px;\n    height: 100%;\n    background-color: ${theme.colors.grayscale.light5};\n    position: relative;\n    .emptystate {\n      height: auto;\n      margin-top: ${theme.gridUnit * 17.5}px;\n    }\n    .section-title {\n      margin-top: ${theme.gridUnit * 5.5}px;\n      margin-bottom: ${theme.gridUnit * 11}px;\n      font-weight: ${theme.typography.weights.bold};\n    }\n    .table-title {\n      margin-top: ${theme.gridUnit * 11}px;\n      margin-bottom: ${theme.gridUnit * 6}px;\n      font-weight: ${theme.typography.weights.bold};\n    }\n    .options-list {\n      overflow: auto;\n      position: absolute;\n      bottom: 0;\n      top: ${theme.gridUnit * 92.25}px;\n      left: ${theme.gridUnit * 3.25}px;\n      right: 0;\n\n      .no-scrollbar {\n        margin-right: ${theme.gridUnit * 4}px;\n      }\n\n      .options {\n        cursor: pointer;\n        padding: ${theme.gridUnit * 1.75}px;\n        border-radius: ${theme.borderRadius}px;\n        :hover {\n          background-color: ${theme.colors.grayscale.light4}\n        }\n      }\n\n      .options-highlighted {\n        cursor: pointer;\n        padding: ${theme.gridUnit * 1.75}px;\n        border-radius: ${theme.borderRadius}px;\n        background-color: ${theme.colors.primary.dark1};\n        color: ${theme.colors.grayscale.light5};\n      }\n\n      .options, .options-highlighted {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n      }\n    }\n    form > span[aria-label=\"refresh\"] {\n      position: absolute;\n      top: ${theme.gridUnit * 69}px;\n      left: ${theme.gridUnit * 42.75}px;\n      font-size: ${theme.gridUnit * 4.25}px;\n    }\n    .table-form {\n      margin-bottom: ${theme.gridUnit * 8}px;\n    }\n    .loading-container {\n      position: absolute;\n      top: ${theme.gridUnit * 89.75}px;\n      left: 0;\n      right: 0;\n      text-align: center;\n      img {\n        width: ${theme.gridUnit * 20}px;\n        margin-bottom: ${theme.gridUnit * 2.5}px;\n      }\n      p {\n        color: ${theme.colors.grayscale.light1};\n      }\n    }\n`}\n`;\n\nexport default function LeftPanel({\n  setDataset,\n  dataset,\n  datasetNames,\n}: LeftPanelProps) {\n  const { addDangerToast } = useToasts();\n\n  const setDatabase = useCallback(\n    (db: Partial<DatabaseObject>) => {\n      setDataset({ type: DatasetActionType.selectDatabase, payload: { db } });\n    },\n    [setDataset],\n  );\n  const setSchema = (schema: string) => {\n    if (schema) {\n      setDataset({\n        type: DatasetActionType.selectSchema,\n        payload: { name: 'schema', value: schema },\n      });\n    }\n  };\n  const setTable = (tableName: string) => {\n    setDataset({\n      type: DatasetActionType.selectTable,\n      payload: { name: 'table_name', value: tableName },\n    });\n  };\n  useEffect(() => {\n    const currentUserSelectedDb = getItem(\n      LocalStorageKeys.db,\n      null,\n    ) as DatabaseObject;\n    if (currentUserSelectedDb) {\n      setDatabase(currentUserSelectedDb);\n    }\n  }, [setDatabase]);\n\n  const customTableOptionLabelRenderer = useCallback(\n    (table: Table) => (\n      <TableOption\n        table={\n          datasetNames?.includes(table.value)\n            ? {\n                ...table,\n                extra: {\n                  warning_markdown: t('This table already has a dataset'),\n                },\n              }\n            : table\n        }\n      />\n    ),\n    [datasetNames],\n  );\n\n  return (\n    <LeftPanelStyle>\n      <TableSelector\n        database={dataset?.db}\n        handleError={addDangerToast}\n        emptyState={emptyStateComponent(false)}\n        onDbChange={setDatabase}\n        onSchemaChange={setSchema}\n        onTableSelectChange={setTable}\n        sqlLabMode={false}\n        customTableOptionLabelRenderer={customTableOptionLabelRenderer}\n        {...(dataset?.schema && { schema: dataset.schema })}\n      />\n    </LeftPanelStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}