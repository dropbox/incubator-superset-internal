{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding\n * g copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Behavior, t } from '@superset-ui/core';\nimport buildQuery from './buildQuery';\nimport controlPanel from './controlPanel';\nimport transformProps from './transformProps';\nimport thumbnail from './images/thumbnail.png';\nimport example1 from './images/treemap_v2_1.png';\nimport example2 from './images/treemap_v2_2.jpg';\nimport { EchartsChartPlugin } from '../types';\nexport default class EchartsTreemapChartPlugin extends EchartsChartPlugin {\n  /**\n   * The constructor is used to pass relevant metadata and callbacks that get\n   * registered in respective registries that are used throughout the library\n   * and application. A more thorough description of each property is given in\n   * the respective imported file.\n   *\n   * It is worth noting that `buildQuery` and is optional, and only needed for\n   * advanced visualizations that require either post processing operations\n   * (pivoting, rolling aggregations, sorting etc) or submitting multiple queries.\n   */\n  constructor() {\n    super({\n      buildQuery,\n      controlPanel,\n      loadChart: () => import('./EchartsTreemap'),\n      metadata: {\n        behaviors: [\n        Behavior.INTERACTIVE_CHART,\n        Behavior.DRILL_TO_DETAIL,\n        Behavior.DRILL_BY],\n\n        category: t('Part of a Whole'),\n        credits: ['https://echarts.apache.org'],\n        description: t('Show hierarchical relationships of data, with the value represented by area, showing proportion and contribution to the whole.'),\n        exampleGallery: [{ url: example1 }, { url: example2 }],\n        name: t('Treemap'),\n        tags: [\n        t('Aesthetic'),\n        t('Categorical'),\n        t('Comparison'),\n        t('ECharts'),\n        t('Multi-Levels'),\n        t('Percentages'),\n        t('Proportional')],\n\n        thumbnail },\n\n      transformProps });\n\n  }}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;;AAmBA,SAASA,QAAT,EAAmBC,CAAnB,QAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,SAASC,kBAAT,QAAmC,UAAnC;AAEA,eAAc,MAAOC,yBAAP,SAAyCD,kBAAzC,CAGb;EACC;;;;;;;;;;EAUAE;IACE,MAAM;MACJR,UADI;MAEJC,YAFI;MAGJQ,SAAS,EAAE,MAAM,OAAO,kBAAP,CAHb;MAIJC,QAAQ,EAAE;QACRC,SAAS,EAAE;QACTb,QAAQ,CAACc,iBADA;QAETd,QAAQ,CAACe,eAFA;QAGTf,QAAQ,CAACgB,QAHA,CADH;;QAMRC,QAAQ,EAAEhB,CAAC,CAAC,iBAAD,CANH;QAORiB,OAAO,EAAE,CAAC,4BAAD,CAPD;QAQRC,WAAW,EAAElB,CAAC,CACZ,gIADY,CARN;QAWRmB,cAAc,EAAE,CAAC,EAAEC,GAAG,EAAEf,QAAP,EAAD,EAAoB,EAAEe,GAAG,EAAEd,QAAP,EAApB,CAXR;QAYRe,IAAI,EAAErB,CAAC,CAAC,SAAD,CAZC;QAaRsB,IAAI,EAAE;QACJtB,CAAC,CAAC,WAAD,CADG;QAEJA,CAAC,CAAC,aAAD,CAFG;QAGJA,CAAC,CAAC,YAAD,CAHG;QAIJA,CAAC,CAAC,SAAD,CAJG;QAKJA,CAAC,CAAC,cAAD,CALG;QAMJA,CAAC,CAAC,aAAD,CANG;QAOJA,CAAC,CAAC,cAAD,CAPG,CAbE;;QAsBRI,SAtBQ,EAJN;;MA4BJD,cA5BI,EAAN;;EA8BD,CA1CF","names":["Behavior","t","buildQuery","controlPanel","transformProps","thumbnail","example1","example2","EchartsChartPlugin","EchartsTreemapChartPlugin","constructor","loadChart","metadata","behaviors","INTERACTIVE_CHART","DRILL_TO_DETAIL","DRILL_BY","category","credits","description","exampleGallery","url","name","tags"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/index.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding\n * g copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Behavior, t } from '@superset-ui/core';\nimport buildQuery from './buildQuery';\nimport controlPanel from './controlPanel';\nimport transformProps from './transformProps';\nimport thumbnail from './images/thumbnail.png';\nimport example1 from './images/treemap_v2_1.png';\nimport example2 from './images/treemap_v2_2.jpg';\nimport { EchartsTreemapChartProps, EchartsTreemapFormData } from './types';\nimport { EchartsChartPlugin } from '../types';\n\nexport default class EchartsTreemapChartPlugin extends EchartsChartPlugin<\n  EchartsTreemapFormData,\n  EchartsTreemapChartProps\n> {\n  /**\n   * The constructor is used to pass relevant metadata and callbacks that get\n   * registered in respective registries that are used throughout the library\n   * and application. A more thorough description of each property is given in\n   * the respective imported file.\n   *\n   * It is worth noting that `buildQuery` and is optional, and only needed for\n   * advanced visualizations that require either post processing operations\n   * (pivoting, rolling aggregations, sorting etc) or submitting multiple queries.\n   */\n  constructor() {\n    super({\n      buildQuery,\n      controlPanel,\n      loadChart: () => import('./EchartsTreemap'),\n      metadata: {\n        behaviors: [\n          Behavior.INTERACTIVE_CHART,\n          Behavior.DRILL_TO_DETAIL,\n          Behavior.DRILL_BY,\n        ],\n        category: t('Part of a Whole'),\n        credits: ['https://echarts.apache.org'],\n        description: t(\n          'Show hierarchical relationships of data, with the value represented by area, showing proportion and contribution to the whole.',\n        ),\n        exampleGallery: [{ url: example1 }, { url: example2 }],\n        name: t('Treemap'),\n        tags: [\n          t('Aesthetic'),\n          t('Categorical'),\n          t('Comparison'),\n          t('ECharts'),\n          t('Multi-Levels'),\n          t('Percentages'),\n          t('Proportional'),\n        ],\n        thumbnail,\n      },\n      transformProps,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}