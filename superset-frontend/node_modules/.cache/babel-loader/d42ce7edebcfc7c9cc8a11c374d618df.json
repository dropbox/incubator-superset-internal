{"ast":null,"code":"import { css as _css } from \"@emotion/react\";import _isEmpty from \"lodash/isEmpty\";var _bootstrapData$common, _bootstrapData$common2, _bootstrapData$common3, _bootstrapData$common4;(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, {\nuseState,\nuseEffect,\nuseMemo,\nuseRef,\nuseCallback } from\n'react';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\nimport { CSSTransition } from 'react-transition-group';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Split from 'react-split';\nimport { css, FeatureFlag, styled, t, useTheme } from '@superset-ui/core';\nimport debounce from 'lodash/debounce';\nimport throttle from 'lodash/throttle';\nimport Modal from 'src/components/Modal';\nimport Mousetrap from 'mousetrap';\nimport Button from 'src/components/Button';\nimport Timer from 'src/components/Timer';\nimport ResizableSidebar from 'src/components/ResizableSidebar';\nimport { AntdDropdown, AntdSwitch } from 'src/components';\nimport { Input } from 'src/components/Input';\nimport { Menu } from 'src/components/Menu';\nimport Icons from 'src/components/Icons';\nimport { detectOS } from 'src/utils/common';\nimport {\naddNewQueryEditor,\nCtasEnum,\nestimateQueryCost,\npersistEditorHeight,\npostStopQuery,\nqueryEditorSetAutorun,\nqueryEditorSetSql,\nqueryEditorSetAndSaveSql,\nqueryEditorSetTemplateParams,\nrunQueryFromSqlEditor,\nsaveQuery,\naddSavedQueryToTabState,\nscheduleQuery,\nsetActiveSouthPaneTab,\nupdateSavedQuery,\nvalidateQuery } from\n'src/SqlLab/actions/sqlLab';\nimport {\nSTATE_TYPE_MAP,\nSQL_EDITOR_GUTTER_HEIGHT,\nSQL_EDITOR_GUTTER_MARGIN,\nSQL_TOOLBAR_HEIGHT,\nSQL_EDITOR_LEFTBAR_WIDTH,\nSQL_EDITOR_PADDING,\nINITIAL_NORTH_PERCENT,\nINITIAL_SOUTH_PERCENT,\nSET_QUERY_EDITOR_SQL_DEBOUNCE_MS,\nVALIDATION_DEBOUNCE_MS,\nWINDOW_RESIZE_THROTTLE_MS } from\n'src/SqlLab/constants';\nimport {\ngetItem,\nLocalStorageKeys,\nsetItem } from\n'src/utils/localStorageHelpers';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport { EmptyStateBig } from 'src/components/EmptyState';\nimport getBootstrapData from 'src/utils/getBootstrapData';\n\nimport TemplateParamsEditor from '../TemplateParamsEditor';\nimport SouthPane from '../SouthPane';\nimport SaveQuery from '../SaveQuery';\nimport ScheduleQueryButton from '../ScheduleQueryButton';\nimport EstimateQueryCostButton from '../EstimateQueryCostButton';\nimport ShareSqlLabQuery from '../ShareSqlLabQuery';\nimport SqlEditorLeftBar from '../SqlEditorLeftBar';\nimport AceEditorWrapper from '../AceEditorWrapper';\nimport RunQueryActionButton from '../RunQueryActionButton';\nimport QueryLimitSelect from '../QueryLimitSelect';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst bootstrapData = getBootstrapData();\nconst validatorMap =\n(bootstrapData == null ? void 0 : (_bootstrapData$common = bootstrapData.common) == null ? void 0 : (_bootstrapData$common2 = _bootstrapData$common.conf) == null ? void 0 : _bootstrapData$common2.SQL_VALIDATORS_BY_ENGINE) || {};\nconst scheduledQueriesConf = bootstrapData == null ? void 0 : (_bootstrapData$common3 = bootstrapData.common) == null ? void 0 : (_bootstrapData$common4 = _bootstrapData$common3.conf) == null ? void 0 : _bootstrapData$common4.SCHEDULED_QUERIES;\n\nconst StyledToolbar = styled.div`\n  padding: ${(_ref) => {let { theme } = _ref;return theme.gridUnit * 2;}}px;\n  background: ${(_ref2) => {let { theme } = _ref2;return theme.colors.grayscale.light5;}};\n  display: flex;\n  justify-content: space-between;\n  border: 1px solid ${(_ref3) => {let { theme } = _ref3;return theme.colors.grayscale.light2;}};\n  border-top: 0;\n\n  form {\n    margin-block-end: 0;\n  }\n\n  .leftItems,\n  .rightItems {\n    display: flex;\n    align-items: center;\n    & > span {\n      margin-right: ${(_ref4) => {let { theme } = _ref4;return theme.gridUnit * 2;}}px;\n      display: inline-block;\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n\n  .limitDropdown {\n    white-space: nowrap;\n  }\n`;\n\nconst StyledSidebar = styled.div`\n  flex: 0 0 ${(_ref5) => {let { width } = _ref5;return width;}}px;\n  width: ${(_ref6) => {let { width } = _ref6;return width;}}px;\n  padding: ${(_ref7) => {let { theme, hide } = _ref7;return hide ? 0 : theme.gridUnit * 2.5;}}px;\n  border-right: 1px solid\n    ${(_ref8) => {let { theme, hide } = _ref8;return (\n    hide ? 'transparent' : theme.colors.grayscale.light2);}};\n`;\n\nconst StyledSqlEditor = styled.div`\n  ${(_ref9) => {let { theme } = _ref9;return css`\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n\n    .schemaPane {\n      transition: transform ${theme.transitionTiming}s ease-in-out;\n    }\n\n    .queryPane {\n      flex: 1 1 auto;\n      padding: ${theme.gridUnit * 2}px;\n      overflow-y: auto;\n      overflow-x: scroll;\n    }\n\n    .schemaPane-enter-done,\n    .schemaPane-exit {\n      transform: translateX(0);\n      z-index: 7;\n    }\n\n    .schemaPane-exit-active {\n      transform: translateX(-120%);\n    }\n\n    .schemaPane-enter-active {\n      transform: translateX(0);\n      max-width: ${theme.gridUnit * 75}px;\n    }\n\n    .schemaPane-enter,\n    .schemaPane-exit-done {\n      max-width: 0;\n      transform: translateX(-120%);\n      overflow: hidden;\n    }\n\n    .schemaPane-exit-done + .queryPane {\n      margin-left: 0;\n    }\n\n    .gutter {\n      border-top: 1px solid ${theme.colors.grayscale.light2};\n      border-bottom: 1px solid ${theme.colors.grayscale.light2};\n      width: 3%;\n      margin: ${SQL_EDITOR_GUTTER_MARGIN}px 47%;\n    }\n\n    .gutter.gutter-vertical {\n      cursor: row-resize;\n    }\n  `;}}\n`;\n\nconst propTypes = {\n  tables: PropTypes.array.isRequired,\n  queryEditor: PropTypes.object.isRequired,\n  defaultQueryLimit: PropTypes.number.isRequired,\n  maxRow: PropTypes.number.isRequired,\n  displayLimit: PropTypes.number.isRequired,\n  saveQueryWarning: PropTypes.string,\n  scheduleQueryWarning: PropTypes.string };var _ref13 = process.env.NODE_ENV === \"production\" ? { name: \"1eoy87d\", styles: \"display:flex;justify-content:space-between\" } : { name: \"1egglng-renderDropdown\", styles: \"display:flex;justify-content:space-between;label:renderDropdown;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ib2dkYW5reXJ5bGl1ay9jb2RlL29wZW5zb3VyY2Uvc3VwZXJzZXQvc3VwZXJzZXQtZnJvbnRlbmQvc3JjL1NxbExhYi9jb21wb25lbnRzL1NxbEVkaXRvci9pbmRleC5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeWdCbUIiLCJmaWxlIjoiL1VzZXJzL2JvZ2Rhbmt5cnlsaXVrL2NvZGUvb3BlbnNvdXJjZS9zdXBlcnNldC9zdXBlcnNldC1mcm9udGVuZC9zcmMvU3FsTGFiL2NvbXBvbmVudHMvU3FsRWRpdG9yL2luZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbi8qIGVzbGludC1kaXNhYmxlIGpzeC1hMTF5L2FuY2hvci1pcy12YWxpZCAqL1xuLyogZXNsaW50LWRpc2FibGUganN4LWExMXkvbm8tc3RhdGljLWVsZW1lbnQtaW50ZXJhY3Rpb25zICovXG5pbXBvcnQgUmVhY3QsIHtcbiAgdXNlU3RhdGUsXG4gIHVzZUVmZmVjdCxcbiAgdXNlTWVtbyxcbiAgdXNlUmVmLFxuICB1c2VDYWxsYmFjayxcbn0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZUVmZmVjdEV2ZW50IGZyb20gJ3NyYy9ob29rcy91c2VFZmZlY3RFdmVudCc7XG5pbXBvcnQgeyBDU1NUcmFuc2l0aW9uIH0gZnJvbSAncmVhY3QtdHJhbnNpdGlvbi1ncm91cCc7XG5pbXBvcnQgeyBzaGFsbG93RXF1YWwsIHVzZURpc3BhdGNoLCB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgU3BsaXQgZnJvbSAncmVhY3Qtc3BsaXQnO1xuaW1wb3J0IHsgY3NzLCBGZWF0dXJlRmxhZywgc3R5bGVkLCB0LCB1c2VUaGVtZSB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcbmltcG9ydCBkZWJvdW5jZSBmcm9tICdsb2Rhc2gvZGVib3VuY2UnO1xuaW1wb3J0IHRocm90dGxlIGZyb20gJ2xvZGFzaC90aHJvdHRsZSc7XG5pbXBvcnQgTW9kYWwgZnJvbSAnc3JjL2NvbXBvbmVudHMvTW9kYWwnO1xuaW1wb3J0IE1vdXNldHJhcCBmcm9tICdtb3VzZXRyYXAnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICdzcmMvY29tcG9uZW50cy9CdXR0b24nO1xuaW1wb3J0IFRpbWVyIGZyb20gJ3NyYy9jb21wb25lbnRzL1RpbWVyJztcbmltcG9ydCBSZXNpemFibGVTaWRlYmFyIGZyb20gJ3NyYy9jb21wb25lbnRzL1Jlc2l6YWJsZVNpZGViYXInO1xuaW1wb3J0IHsgQW50ZERyb3Bkb3duLCBBbnRkU3dpdGNoIH0gZnJvbSAnc3JjL2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgSW5wdXQgfSBmcm9tICdzcmMvY29tcG9uZW50cy9JbnB1dCc7XG5pbXBvcnQgeyBNZW51IH0gZnJvbSAnc3JjL2NvbXBvbmVudHMvTWVudSc7XG5pbXBvcnQgSWNvbnMgZnJvbSAnc3JjL2NvbXBvbmVudHMvSWNvbnMnO1xuaW1wb3J0IHsgZGV0ZWN0T1MgfSBmcm9tICdzcmMvdXRpbHMvY29tbW9uJztcbmltcG9ydCB7XG4gIGFkZE5ld1F1ZXJ5RWRpdG9yLFxuICBDdGFzRW51bSxcbiAgZXN0aW1hdGVRdWVyeUNvc3QsXG4gIHBlcnNpc3RFZGl0b3JIZWlnaHQsXG4gIHBvc3RTdG9wUXVlcnksXG4gIHF1ZXJ5RWRpdG9yU2V0QXV0b3J1bixcbiAgcXVlcnlFZGl0b3JTZXRTcWwsXG4gIHF1ZXJ5RWRpdG9yU2V0QW5kU2F2ZVNxbCxcbiAgcXVlcnlFZGl0b3JTZXRUZW1wbGF0ZVBhcmFtcyxcbiAgcnVuUXVlcnlGcm9tU3FsRWRpdG9yLFxuICBzYXZlUXVlcnksXG4gIGFkZFNhdmVkUXVlcnlUb1RhYlN0YXRlLFxuICBzY2hlZHVsZVF1ZXJ5LFxuICBzZXRBY3RpdmVTb3V0aFBhbmVUYWIsXG4gIHVwZGF0ZVNhdmVkUXVlcnksXG4gIHZhbGlkYXRlUXVlcnksXG59IGZyb20gJ3NyYy9TcWxMYWIvYWN0aW9ucy9zcWxMYWInO1xuaW1wb3J0IHtcbiAgU1RBVEVfVFlQRV9NQVAsXG4gIFNRTF9FRElUT1JfR1VUVEVSX0hFSUdIVCxcbiAgU1FMX0VESVRPUl9HVVRURVJfTUFSR0lOLFxuICBTUUxfVE9PTEJBUl9IRUlHSFQsXG4gIFNRTF9FRElUT1JfTEVGVEJBUl9XSURUSCxcbiAgU1FMX0VESVRPUl9QQURESU5HLFxuICBJTklUSUFMX05PUlRIX1BFUkNFTlQsXG4gIElOSVRJQUxfU09VVEhfUEVSQ0VOVCxcbiAgU0VUX1FVRVJZX0VESVRPUl9TUUxfREVCT1VOQ0VfTVMsXG4gIFZBTElEQVRJT05fREVCT1VOQ0VfTVMsXG4gIFdJTkRPV19SRVNJWkVfVEhST1RUTEVfTVMsXG59IGZyb20gJ3NyYy9TcWxMYWIvY29uc3RhbnRzJztcbmltcG9ydCB7XG4gIGdldEl0ZW0sXG4gIExvY2FsU3RvcmFnZUtleXMsXG4gIHNldEl0ZW0sXG59IGZyb20gJ3NyYy91dGlscy9sb2NhbFN0b3JhZ2VIZWxwZXJzJztcbmltcG9ydCB7IGlzRmVhdHVyZUVuYWJsZWQgfSBmcm9tICdzcmMvZmVhdHVyZUZsYWdzJztcbmltcG9ydCB7IEVtcHR5U3RhdGVCaWcgfSBmcm9tICdzcmMvY29tcG9uZW50cy9FbXB0eVN0YXRlJztcbmltcG9ydCBnZXRCb290c3RyYXBEYXRhIGZyb20gJ3NyYy91dGlscy9nZXRCb290c3RyYXBEYXRhJztcbmltcG9ydCB7IGlzRW1wdHkgfSBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IFRlbXBsYXRlUGFyYW1zRWRpdG9yIGZyb20gJy4uL1RlbXBsYXRlUGFyYW1zRWRpdG9yJztcbmltcG9ydCBTb3V0aFBhbmUgZnJvbSAnLi4vU291dGhQYW5lJztcbmltcG9ydCBTYXZlUXVlcnkgZnJvbSAnLi4vU2F2ZVF1ZXJ5JztcbmltcG9ydCBTY2hlZHVsZVF1ZXJ5QnV0dG9uIGZyb20gJy4uL1NjaGVkdWxlUXVlcnlCdXR0b24nO1xuaW1wb3J0IEVzdGltYXRlUXVlcnlDb3N0QnV0dG9uIGZyb20gJy4uL0VzdGltYXRlUXVlcnlDb3N0QnV0dG9uJztcbmltcG9ydCBTaGFyZVNxbExhYlF1ZXJ5IGZyb20gJy4uL1NoYXJlU3FsTGFiUXVlcnknO1xuaW1wb3J0IFNxbEVkaXRvckxlZnRCYXIgZnJvbSAnLi4vU3FsRWRpdG9yTGVmdEJhcic7XG5pbXBvcnQgQWNlRWRpdG9yV3JhcHBlciBmcm9tICcuLi9BY2VFZGl0b3JXcmFwcGVyJztcbmltcG9ydCBSdW5RdWVyeUFjdGlvbkJ1dHRvbiBmcm9tICcuLi9SdW5RdWVyeUFjdGlvbkJ1dHRvbic7XG5pbXBvcnQgUXVlcnlMaW1pdFNlbGVjdCBmcm9tICcuLi9RdWVyeUxpbWl0U2VsZWN0JztcblxuY29uc3QgYm9vdHN0cmFwRGF0YSA9IGdldEJvb3RzdHJhcERhdGEoKTtcbmNvbnN0IHZhbGlkYXRvck1hcCA9XG4gIGJvb3RzdHJhcERhdGE/LmNvbW1vbj8uY29uZj8uU1FMX1ZBTElEQVRPUlNfQllfRU5HSU5FIHx8IHt9O1xuY29uc3Qgc2NoZWR1bGVkUXVlcmllc0NvbmYgPSBib290c3RyYXBEYXRhPy5jb21tb24/LmNvbmY/LlNDSEVEVUxFRF9RVUVSSUVTO1xuXG5jb25zdCBTdHlsZWRUb29sYmFyID0gc3R5bGVkLmRpdmBcbiAgcGFkZGluZzogJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5ncmlkVW5pdCAqIDJ9cHg7XG4gIGJhY2tncm91bmQ6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUuY29sb3JzLmdyYXlzY2FsZS5saWdodDV9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUuY29sb3JzLmdyYXlzY2FsZS5saWdodDJ9O1xuICBib3JkZXItdG9wOiAwO1xuXG4gIGZvcm0ge1xuICAgIG1hcmdpbi1ibG9jay1lbmQ6IDA7XG4gIH1cblxuICAubGVmdEl0ZW1zLFxuICAucmlnaHRJdGVtcyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICYgPiBzcGFuIHtcbiAgICAgIG1hcmdpbi1yaWdodDogJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5ncmlkVW5pdCAqIDJ9cHg7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cbiAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAubGltaXREcm9wZG93biB7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgfVxuYDtcblxuY29uc3QgU3R5bGVkU2lkZWJhciA9IHN0eWxlZC5kaXZgXG4gIGZsZXg6IDAgMCAkeyh7IHdpZHRoIH0pID0+IHdpZHRofXB4O1xuICB3aWR0aDogJHsoeyB3aWR0aCB9KSA9PiB3aWR0aH1weDtcbiAgcGFkZGluZzogJHsoeyB0aGVtZSwgaGlkZSB9KSA9PiAoaGlkZSA/IDAgOiB0aGVtZS5ncmlkVW5pdCAqIDIuNSl9cHg7XG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkXG4gICAgJHsoeyB0aGVtZSwgaGlkZSB9KSA9PlxuICAgICAgaGlkZSA/ICd0cmFuc3BhcmVudCcgOiB0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmxpZ2h0Mn07XG5gO1xuXG5jb25zdCBTdHlsZWRTcWxFZGl0b3IgPSBzdHlsZWQuZGl2YFxuICAkeyh7IHRoZW1lIH0pID0+IGNzc2BcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgaGVpZ2h0OiAxMDAlO1xuXG4gICAgLnNjaGVtYVBhbmUge1xuICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtICR7dGhlbWUudHJhbnNpdGlvblRpbWluZ31zIGVhc2UtaW4tb3V0O1xuICAgIH1cblxuICAgIC5xdWVyeVBhbmUge1xuICAgICAgZmxleDogMSAxIGF1dG87XG4gICAgICBwYWRkaW5nOiAke3RoZW1lLmdyaWRVbml0ICogMn1weDtcbiAgICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgICBvdmVyZmxvdy14OiBzY3JvbGw7XG4gICAgfVxuXG4gICAgLnNjaGVtYVBhbmUtZW50ZXItZG9uZSxcbiAgICAuc2NoZW1hUGFuZS1leGl0IHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAgIHotaW5kZXg6IDc7XG4gICAgfVxuXG4gICAgLnNjaGVtYVBhbmUtZXhpdC1hY3RpdmUge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMjAlKTtcbiAgICB9XG5cbiAgICAuc2NoZW1hUGFuZS1lbnRlci1hY3RpdmUge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgICAgbWF4LXdpZHRoOiAke3RoZW1lLmdyaWRVbml0ICogNzV9cHg7XG4gICAgfVxuXG4gICAgLnNjaGVtYVBhbmUtZW50ZXIsXG4gICAgLnNjaGVtYVBhbmUtZXhpdC1kb25lIHtcbiAgICAgIG1heC13aWR0aDogMDtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTIwJSk7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIH1cblxuICAgIC5zY2hlbWFQYW5lLWV4aXQtZG9uZSArIC5xdWVyeVBhbmUge1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgfVxuXG4gICAgLmd1dHRlciB7XG4gICAgICBib3JkZXItdG9wOiAxcHggc29saWQgJHt0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmxpZ2h0Mn07XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHt0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmxpZ2h0Mn07XG4gICAgICB3aWR0aDogMyU7XG4gICAgICBtYXJnaW46ICR7U1FMX0VESVRPUl9HVVRURVJfTUFSR0lOfXB4IDQ3JTtcbiAgICB9XG5cbiAgICAuZ3V0dGVyLmd1dHRlci12ZXJ0aWNhbCB7XG4gICAgICBjdXJzb3I6IHJvdy1yZXNpemU7XG4gICAgfVxuICBgfVxuYDtcblxuY29uc3QgcHJvcFR5cGVzID0ge1xuICB0YWJsZXM6IFByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLFxuICBxdWVyeUVkaXRvcjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBkZWZhdWx0UXVlcnlMaW1pdDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBtYXhSb3c6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgZGlzcGxheUxpbWl0OiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIHNhdmVRdWVyeVdhcm5pbmc6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNjaGVkdWxlUXVlcnlXYXJuaW5nOiBQcm9wVHlwZXMuc3RyaW5nLFxufTtcblxuY29uc3QgU3FsRWRpdG9yID0gKHtcbiAgdGFibGVzLFxuICBxdWVyeUVkaXRvcixcbiAgZGVmYXVsdFF1ZXJ5TGltaXQsXG4gIG1heFJvdyxcbiAgZGlzcGxheUxpbWl0LFxuICBzYXZlUXVlcnlXYXJuaW5nLFxuICBzY2hlZHVsZVF1ZXJ5V2FybmluZyA9IG51bGwsXG59KSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xuXG4gIGNvbnN0IHsgZGF0YWJhc2UsIGxhdGVzdFF1ZXJ5LCBoaWRlTGVmdEJhciB9ID0gdXNlU2VsZWN0b3IoXG4gICAgKHsgc3FsTGFiOiB7IHVuc2F2ZWRRdWVyeUVkaXRvciwgZGF0YWJhc2VzLCBxdWVyaWVzIH0gfSkgPT4ge1xuICAgICAgbGV0IHsgZGJJZCwgbGF0ZXN0UXVlcnlJZCwgaGlkZUxlZnRCYXIgfSA9IHF1ZXJ5RWRpdG9yO1xuICAgICAgaWYgKHVuc2F2ZWRRdWVyeUVkaXRvci5pZCA9PT0gcXVlcnlFZGl0b3IuaWQpIHtcbiAgICAgICAgZGJJZCA9IHVuc2F2ZWRRdWVyeUVkaXRvci5kYklkIHx8IGRiSWQ7XG4gICAgICAgIGxhdGVzdFF1ZXJ5SWQgPSB1bnNhdmVkUXVlcnlFZGl0b3IubGF0ZXN0UXVlcnlJZCB8fCBsYXRlc3RRdWVyeUlkO1xuICAgICAgICBoaWRlTGVmdEJhciA9IHVuc2F2ZWRRdWVyeUVkaXRvci5oaWRlTGVmdEJhciB8fCBoaWRlTGVmdEJhcjtcbiAgICAgIH1cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGRhdGFiYXNlOiBkYXRhYmFzZXNbZGJJZF0sXG4gICAgICAgIGxhdGVzdFF1ZXJ5OiBxdWVyaWVzW2xhdGVzdFF1ZXJ5SWRdLFxuICAgICAgICBoaWRlTGVmdEJhcixcbiAgICAgIH07XG4gICAgfSxcbiAgICBzaGFsbG93RXF1YWwsXG4gICk7XG5cbiAgY29uc3QgW2hlaWdodCwgc2V0SGVpZ2h0XSA9IHVzZVN0YXRlKDApO1xuICBjb25zdCBbYXV0b3J1biwgc2V0QXV0b3J1bl0gPSB1c2VTdGF0ZShxdWVyeUVkaXRvci5hdXRvcnVuKTtcbiAgY29uc3QgW2N0YXMsIHNldEN0YXNdID0gdXNlU3RhdGUoJycpO1xuICBjb25zdCBbbm9ydGhQZXJjZW50LCBzZXROb3J0aFBlcmNlbnRdID0gdXNlU3RhdGUoXG4gICAgcXVlcnlFZGl0b3Iubm9ydGhQZXJjZW50IHx8IElOSVRJQUxfTk9SVEhfUEVSQ0VOVCxcbiAgKTtcbiAgY29uc3QgW3NvdXRoUGVyY2VudCwgc2V0U291dGhQZXJjZW50XSA9IHVzZVN0YXRlKFxuICAgIHF1ZXJ5RWRpdG9yLnNvdXRoUGVyY2VudCB8fCBJTklUSUFMX1NPVVRIX1BFUkNFTlQsXG4gICk7XG4gIGNvbnN0IFthdXRvY29tcGxldGVFbmFibGVkLCBzZXRBdXRvY29tcGxldGVFbmFibGVkXSA9IHVzZVN0YXRlKFxuICAgIGdldEl0ZW0oTG9jYWxTdG9yYWdlS2V5cy5zcWxsYWJfX2lzX2F1dG9jb21wbGV0ZV9lbmFibGVkLCB0cnVlKSxcbiAgKTtcbiAgY29uc3QgW3Nob3dDcmVhdGVBc01vZGFsLCBzZXRTaG93Q3JlYXRlQXNNb2RhbF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtjcmVhdGVBcywgc2V0Q3JlYXRlQXNdID0gdXNlU3RhdGUoJycpO1xuICBjb25zdCBbc2hvd0VtcHR5U3RhdGUsIHNldFNob3dFbXB0eVN0YXRlXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICBjb25zdCBzcWxFZGl0b3JSZWYgPSB1c2VSZWYobnVsbCk7XG4gIGNvbnN0IG5vcnRoUGFuZVJlZiA9IHVzZVJlZihudWxsKTtcblxuICBjb25zdCBzdGFydFF1ZXJ5ID0gdXNlQ2FsbGJhY2soXG4gICAgKGN0YXNBcmcgPSBmYWxzZSwgY3Rhc19tZXRob2QgPSBDdGFzRW51bS5UQUJMRSkgPT4ge1xuICAgICAgaWYgKCFkYXRhYmFzZSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGRpc3BhdGNoKFxuICAgICAgICBydW5RdWVyeUZyb21TcWxFZGl0b3IoXG4gICAgICAgICAgZGF0YWJhc2UsXG4gICAgICAgICAgcXVlcnlFZGl0b3IsXG4gICAgICAgICAgZGVmYXVsdFF1ZXJ5TGltaXQsXG4gICAgICAgICAgY3Rhc0FyZyA/IGN0YXMgOiAnJyxcbiAgICAgICAgICBjdGFzQXJnLFxuICAgICAgICAgIGN0YXNfbWV0aG9kLFxuICAgICAgICApLFxuICAgICAgKTtcbiAgICAgIGRpc3BhdGNoKHNldEFjdGl2ZVNvdXRoUGFuZVRhYignUmVzdWx0cycpKTtcbiAgICB9LFxuICAgIFtjdGFzLCBkYXRhYmFzZSwgZGVmYXVsdFF1ZXJ5TGltaXQsIGRpc3BhdGNoLCBxdWVyeUVkaXRvcl0sXG4gICk7XG5cbiAgY29uc3Qgc3RvcFF1ZXJ5ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmIChsYXRlc3RRdWVyeSAmJiBbJ3J1bm5pbmcnLCAncGVuZGluZyddLmluZGV4T2YobGF0ZXN0UXVlcnkuc3RhdGUpID49IDApIHtcbiAgICAgIGRpc3BhdGNoKHBvc3RTdG9wUXVlcnkobGF0ZXN0UXVlcnkpKTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9LCBbZGlzcGF0Y2gsIGxhdGVzdFF1ZXJ5XSk7XG5cbiAgY29uc3QgcnVuUXVlcnkgPSAoKSA9PiB7XG4gICAgaWYgKGRhdGFiYXNlKSB7XG4gICAgICBzdGFydFF1ZXJ5KCk7XG4gICAgfVxuICB9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGF1dG9ydW4pIHtcbiAgICAgIHNldEF1dG9ydW4oZmFsc2UpO1xuICAgICAgZGlzcGF0Y2gocXVlcnlFZGl0b3JTZXRBdXRvcnVuKHF1ZXJ5RWRpdG9yLCBmYWxzZSkpO1xuICAgICAgc3RhcnRRdWVyeSgpO1xuICAgIH1cbiAgfSwgW2F1dG9ydW4sIGRpc3BhdGNoLCBxdWVyeUVkaXRvciwgc3RhcnRRdWVyeV0pO1xuXG4gIC8vIE9uZSBsYXllciBvZiBhYnN0cmFjdGlvbiBmb3IgZWFzeSBzcHlpbmcgaW4gdW5pdCB0ZXN0c1xuICBjb25zdCBnZXRTcWxFZGl0b3JIZWlnaHQgPSAoKSA9PlxuICAgIHNxbEVkaXRvclJlZi5jdXJyZW50XG4gICAgICA/IHNxbEVkaXRvclJlZi5jdXJyZW50LmNsaWVudEhlaWdodCAtIFNRTF9FRElUT1JfUEFERElORyAqIDJcbiAgICAgIDogMDtcblxuICBjb25zdCBnZXRIb3RrZXlDb25maWcgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgLy8gR2V0IHRoZSB1c2VyJ3MgT1NcbiAgICBjb25zdCB1c2VyT1MgPSBkZXRlY3RPUygpO1xuICAgIGNvbnN0IGJhc2UgPSBbXG4gICAgICB7XG4gICAgICAgIG5hbWU6ICdydW5RdWVyeTEnLFxuICAgICAgICBrZXk6ICdjdHJsK3InLFxuICAgICAgICBkZXNjcjogdCgnUnVuIHF1ZXJ5JyksXG4gICAgICAgIGZ1bmM6ICgpID0+IHtcbiAgICAgICAgICBpZiAocXVlcnlFZGl0b3Iuc3FsLnRyaW0oKSAhPT0gJycpIHtcbiAgICAgICAgICAgIHN0YXJ0UXVlcnkoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBuYW1lOiAncnVuUXVlcnkyJyxcbiAgICAgICAga2V5OiAnY3RybCtlbnRlcicsXG4gICAgICAgIGRlc2NyOiB0KCdSdW4gcXVlcnknKSxcbiAgICAgICAgZnVuYzogKCkgPT4ge1xuICAgICAgICAgIGlmIChxdWVyeUVkaXRvci5zcWwudHJpbSgpICE9PSAnJykge1xuICAgICAgICAgICAgc3RhcnRRdWVyeSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG5hbWU6ICduZXdUYWInLFxuICAgICAgICBrZXk6IHVzZXJPUyA9PT0gJ1dpbmRvd3MnID8gJ2N0cmwrcScgOiAnY3RybCt0JyxcbiAgICAgICAgZGVzY3I6IHQoJ05ldyB0YWInKSxcbiAgICAgICAgZnVuYzogKCkgPT4ge1xuICAgICAgICAgIGRpc3BhdGNoKGFkZE5ld1F1ZXJ5RWRpdG9yKCkpO1xuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbmFtZTogJ3N0b3BRdWVyeScsXG4gICAgICAgIGtleTogdXNlck9TID09PSAnTWFjT1MnID8gJ2N0cmwreCcgOiAnY3RybCtlJyxcbiAgICAgICAgZGVzY3I6IHQoJ1N0b3AgcXVlcnknKSxcbiAgICAgICAgZnVuYzogc3RvcFF1ZXJ5LFxuICAgICAgfSxcbiAgICBdO1xuXG4gICAgaWYgKHVzZXJPUyA9PT0gJ01hY09TJykge1xuICAgICAgYmFzZS5wdXNoKHtcbiAgICAgICAgbmFtZTogJ3ByZXZpb3VzTGluZScsXG4gICAgICAgIGtleTogJ2N0cmwrcCcsXG4gICAgICAgIGRlc2NyOiB0KCdQcmV2aW91cyBMaW5lJyksXG4gICAgICAgIGZ1bmM6IGVkaXRvciA9PiB7XG4gICAgICAgICAgZWRpdG9yLm5hdmlnYXRlVXAoMSk7XG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gYmFzZTtcbiAgfSwgW2Rpc3BhdGNoLCBxdWVyeUVkaXRvci5zcWwsIHN0YXJ0UXVlcnksIHN0b3BRdWVyeV0pO1xuXG4gIGNvbnN0IG9uQmVmb3JlVW5sb2FkID0gdXNlRWZmZWN0RXZlbnQoZXZlbnQgPT4ge1xuICAgIGlmIChcbiAgICAgIGRhdGFiYXNlPy5leHRyYV9qc29uPy5jYW5jZWxfcXVlcnlfb25fd2luZG93c191bmxvYWQgJiZcbiAgICAgIGxhdGVzdFF1ZXJ5Py5zdGF0ZSA9PT0gJ3J1bm5pbmcnXG4gICAgKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgc3RvcFF1ZXJ5KCk7XG4gICAgfVxuICB9KTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIFdlIG5lZWQgdG8gbWVhc3VyZSB0aGUgaGVpZ2h0IG9mIHRoZSBzcWwgZWRpdG9yIHBvc3QgcmVuZGVyIHRvIGZpZ3VyZSB0aGUgaGVpZ2h0IG9mXG4gICAgLy8gdGhlIHNvdXRoIHBhbmUgc28gaXQgZ2V0cyByZW5kZXJlZCBwcm9wZXJseVxuICAgIHNldEhlaWdodChnZXRTcWxFZGl0b3JIZWlnaHQoKSk7XG4gICAgY29uc3QgaGFuZGxlV2luZG93UmVzaXplV2l0aFRocm90dGxlID0gdGhyb3R0bGUoXG4gICAgICAoKSA9PiBzZXRIZWlnaHQoZ2V0U3FsRWRpdG9ySGVpZ2h0KCkpLFxuICAgICAgV0lORE9XX1JFU0laRV9USFJPVFRMRV9NUyxcbiAgICApO1xuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGhhbmRsZVdpbmRvd1Jlc2l6ZVdpdGhUaHJvdHRsZSk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2JlZm9yZXVubG9hZCcsIG9uQmVmb3JlVW5sb2FkKTtcblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaGFuZGxlV2luZG93UmVzaXplV2l0aFRocm90dGxlKTtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdiZWZvcmV1bmxvYWQnLCBvbkJlZm9yZVVubG9hZCk7XG4gICAgfTtcbiAgICAvLyBUT0RPOiBSZW1vdmUgdXNlRWZmZWN0RXZlbnQgZGVwcyBvbmNlIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC9wdWxsLzI1ODgxIGlzIHJlbGVhc2VkXG4gIH0sIFtvbkJlZm9yZVVubG9hZF0pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFkYXRhYmFzZSB8fCBpc0VtcHR5KGRhdGFiYXNlKSkge1xuICAgICAgc2V0U2hvd0VtcHR5U3RhdGUodHJ1ZSk7XG4gICAgfVxuICB9LCBbZGF0YWJhc2VdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIHNldHVwIGhvdGtleXNcbiAgICBNb3VzZXRyYXAucmVzZXQoKTtcbiAgICBjb25zdCBob3RrZXlzID0gZ2V0SG90a2V5Q29uZmlnKCk7XG4gICAgaG90a2V5cy5mb3JFYWNoKGtleUNvbmZpZyA9PiB7XG4gICAgICBNb3VzZXRyYXAuYmluZChba2V5Q29uZmlnLmtleV0sIGtleUNvbmZpZy5mdW5jKTtcbiAgICB9KTtcbiAgfSwgW2dldEhvdGtleUNvbmZpZywgbGF0ZXN0UXVlcnldKTtcblxuICBjb25zdCBvblJlc2l6ZVN0YXJ0ID0gKCkgPT4ge1xuICAgIC8vIFNldCB0aGUgaGVpZ2h0cyBvbiB0aGUgYWNlIGVkaXRvciBhbmQgdGhlIGFjZSBjb250ZW50IGFyZWEgYWZ0ZXIgZHJhZyBzdGFydHNcbiAgICAvLyB0byBzbW9vdGggb3V0IHRoZSB2aXN1YWwgdHJhbnNpdGlvbiB0byB0aGUgbmV3IGhlaWdodHMgd2hlbiBkcmFnIGVuZHNcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdhY2VfY29udGVudCcpWzBdLnN0eWxlLmhlaWdodCA9ICcxMDAlJztcbiAgfTtcblxuICBjb25zdCBvblJlc2l6ZUVuZCA9IChbbm9ydGhQZXJjZW50LCBzb3V0aFBlcmNlbnRdKSA9PiB7XG4gICAgc2V0Tm9ydGhQZXJjZW50KG5vcnRoUGVyY2VudCk7XG4gICAgc2V0U291dGhQZXJjZW50KHNvdXRoUGVyY2VudCk7XG5cbiAgICBpZiAobm9ydGhQYW5lUmVmLmN1cnJlbnQ/LmNsaWVudEhlaWdodCkge1xuICAgICAgZGlzcGF0Y2gocGVyc2lzdEVkaXRvckhlaWdodChxdWVyeUVkaXRvciwgbm9ydGhQZXJjZW50LCBzb3V0aFBlcmNlbnQpKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3Qgc2V0UXVlcnlFZGl0b3JBbmRTYXZlU3FsID0gdXNlQ2FsbGJhY2soXG4gICAgc3FsID0+IHtcbiAgICAgIGRpc3BhdGNoKHF1ZXJ5RWRpdG9yU2V0QW5kU2F2ZVNxbChxdWVyeUVkaXRvciwgc3FsKSk7XG4gICAgfSxcbiAgICBbZGlzcGF0Y2gsIHF1ZXJ5RWRpdG9yXSxcbiAgKTtcblxuICBjb25zdCBzZXRRdWVyeUVkaXRvckFuZFNhdmVTcWxXaXRoRGVib3VuY2UgPSB1c2VNZW1vKFxuICAgICgpID0+IGRlYm91bmNlKHNldFF1ZXJ5RWRpdG9yQW5kU2F2ZVNxbCwgU0VUX1FVRVJZX0VESVRPUl9TUUxfREVCT1VOQ0VfTVMpLFxuICAgIFtzZXRRdWVyeUVkaXRvckFuZFNhdmVTcWxdLFxuICApO1xuXG4gIGNvbnN0IGNhblZhbGlkYXRlUXVlcnkgPSAoKSA9PiB7XG4gICAgLy8gQ2hlY2sgd2hldGhlciBvciBub3Qgd2UgY2FuIHZhbGlkYXRlIHRoZSBjdXJyZW50IHF1ZXJ5IGJhc2VkIG9uIHdoZXRoZXJcbiAgICAvLyBvciBub3QgdGhlIGJhY2tlbmQgaGFzIGEgdmFsaWRhdG9yIGNvbmZpZ3VyZWQgZm9yIGl0LlxuICAgIGlmIChkYXRhYmFzZSkge1xuICAgICAgcmV0dXJuIHZhbGlkYXRvck1hcC5oYXNPd25Qcm9wZXJ0eShkYXRhYmFzZS5iYWNrZW5kKTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9O1xuXG4gIGNvbnN0IHJlcXVlc3RWYWxpZGF0aW9uID0gdXNlQ2FsbGJhY2soXG4gICAgc3FsID0+IHtcbiAgICAgIGlmIChkYXRhYmFzZSkge1xuICAgICAgICBkaXNwYXRjaCh2YWxpZGF0ZVF1ZXJ5KHF1ZXJ5RWRpdG9yLCBzcWwpKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIFtkYXRhYmFzZSwgZGlzcGF0Y2gsIHF1ZXJ5RWRpdG9yXSxcbiAgKTtcblxuICBjb25zdCByZXF1ZXN0VmFsaWRhdGlvbldpdGhEZWJvdW5jZSA9IHVzZU1lbW8oXG4gICAgKCkgPT4gZGVib3VuY2UocmVxdWVzdFZhbGlkYXRpb24sIFZBTElEQVRJT05fREVCT1VOQ0VfTVMpLFxuICAgIFtyZXF1ZXN0VmFsaWRhdGlvbl0sXG4gICk7XG5cbiAgY29uc3Qgb25TcWxDaGFuZ2VkID0gc3FsID0+IHtcbiAgICBkaXNwYXRjaChxdWVyeUVkaXRvclNldFNxbChxdWVyeUVkaXRvciwgc3FsKSk7XG4gICAgc2V0UXVlcnlFZGl0b3JBbmRTYXZlU3FsV2l0aERlYm91bmNlKHNxbCk7XG4gICAgLy8gUmVxdWVzdCBzZXJ2ZXItc2lkZSB2YWxpZGF0aW9uIG9mIHRoZSBxdWVyeSB0ZXh0XG4gICAgaWYgKGNhblZhbGlkYXRlUXVlcnkoKSkge1xuICAgICAgLy8gTkIuIHJlcXVlc3RWYWxpZGF0aW9uIGlzIGRlYm91bmNlZFxuICAgICAgcmVxdWVzdFZhbGlkYXRpb25XaXRoRGVib3VuY2Uoc3FsKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gUmV0dXJuIHRoZSBoZWlnaHRzIGZvciB0aGUgYWNlIGVkaXRvciBhbmQgdGhlIHNvdXRoIHBhbmUgYXMgYW4gb2JqZWN0XG4gIC8vIGdpdmVuIHRoZSBoZWlnaHQgb2YgdGhlIHNxbCBlZGl0b3IsIG5vcnRoIHBhbmUgcGVyY2VudCBhbmQgc291dGggcGFuZSBwZXJjZW50LlxuICBjb25zdCBnZXRBY2VFZGl0b3JBbmRTb3V0aFBhbmVIZWlnaHRzID0gKFxuICAgIGhlaWdodCxcbiAgICBub3J0aFBlcmNlbnQsXG4gICAgc291dGhQZXJjZW50LFxuICApID0+ICh7XG4gICAgYWNlRWRpdG9ySGVpZ2h0OlxuICAgICAgKGhlaWdodCAqIG5vcnRoUGVyY2VudCkgLyAodGhlbWUuZ3JpZFVuaXQgKiAyNSkgLVxuICAgICAgKFNRTF9FRElUT1JfR1VUVEVSX0hFSUdIVCAvIDIgKyBTUUxfRURJVE9SX0dVVFRFUl9NQVJHSU4pIC1cbiAgICAgIFNRTF9UT09MQkFSX0hFSUdIVCxcbiAgICBzb3V0aFBhbmVIZWlnaHQ6XG4gICAgICAoaGVpZ2h0ICogc291dGhQZXJjZW50KSAvICh0aGVtZS5ncmlkVW5pdCAqIDI1KSAtXG4gICAgICAoU1FMX0VESVRPUl9HVVRURVJfSEVJR0hUIC8gMiArIFNRTF9FRElUT1JfR1VUVEVSX01BUkdJTiksXG4gIH0pO1xuXG4gIGNvbnN0IGdldFF1ZXJ5Q29zdEVzdGltYXRlID0gKCkgPT4ge1xuICAgIGlmIChkYXRhYmFzZSkge1xuICAgICAgZGlzcGF0Y2goZXN0aW1hdGVRdWVyeUNvc3QocXVlcnlFZGl0b3IpKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlVG9nZ2xlQXV0b2NvbXBsZXRlRW5hYmxlZCA9ICgpID0+IHtcbiAgICBzZXRJdGVtKFxuICAgICAgTG9jYWxTdG9yYWdlS2V5cy5zcWxsYWJfX2lzX2F1dG9jb21wbGV0ZV9lbmFibGVkLFxuICAgICAgIWF1dG9jb21wbGV0ZUVuYWJsZWQsXG4gICAgKTtcbiAgICBzZXRBdXRvY29tcGxldGVFbmFibGVkKCFhdXRvY29tcGxldGVFbmFibGVkKTtcbiAgfTtcblxuICBjb25zdCBlbGVtZW50U3R5bGUgPSAoZGltZW5zaW9uLCBlbGVtZW50U2l6ZSwgZ3V0dGVyU2l6ZSkgPT4gKHtcbiAgICBbZGltZW5zaW9uXTogYGNhbGMoJHtlbGVtZW50U2l6ZX0lIC0gJHtcbiAgICAgIGd1dHRlclNpemUgKyBTUUxfRURJVE9SX0dVVFRFUl9NQVJHSU5cbiAgICB9cHgpYCxcbiAgfSk7XG5cbiAgY29uc3QgY3JlYXRlVGFibGVBcyA9ICgpID0+IHtcbiAgICBzdGFydFF1ZXJ5KHRydWUsIEN0YXNFbnVtLlRBQkxFKTtcbiAgICBzZXRTaG93Q3JlYXRlQXNNb2RhbChmYWxzZSk7XG4gICAgc2V0Q3RhcygnJyk7XG4gIH07XG5cbiAgY29uc3QgY3JlYXRlVmlld0FzID0gKCkgPT4ge1xuICAgIHN0YXJ0UXVlcnkodHJ1ZSwgQ3Rhc0VudW0uVklFVyk7XG4gICAgc2V0U2hvd0NyZWF0ZUFzTW9kYWwoZmFsc2UpO1xuICAgIHNldEN0YXMoJycpO1xuICB9O1xuXG4gIGNvbnN0IGN0YXNDaGFuZ2VkID0gZXZlbnQgPT4ge1xuICAgIHNldEN0YXMoZXZlbnQudGFyZ2V0LnZhbHVlKTtcbiAgfTtcblxuICBjb25zdCByZW5kZXJEcm9wZG93biA9ICgpID0+IHtcbiAgICBjb25zdCBxZSA9IHF1ZXJ5RWRpdG9yO1xuICAgIGNvbnN0IHN1Y2Nlc3NmdWwgPSBsYXRlc3RRdWVyeT8uc3RhdGUgPT09ICdzdWNjZXNzJztcbiAgICBjb25zdCBzY2hlZHVsZVRvb2xUaXAgPSBzdWNjZXNzZnVsXG4gICAgICA/IHQoJ1NjaGVkdWxlIHRoZSBxdWVyeSBwZXJpb2RpY2FsbHknKVxuICAgICAgOiB0KCdZb3UgbXVzdCBydW4gdGhlIHF1ZXJ5IHN1Y2Nlc3NmdWxseSBmaXJzdCcpO1xuICAgIHJldHVybiAoXG4gICAgICA8TWVudSBjc3M9e3sgd2lkdGg6IHRoZW1lLmdyaWRVbml0ICogNDQgfX0+XG4gICAgICAgIDxNZW51Lkl0ZW0gY3NzPXt7IGRpc3BsYXk6ICdmbGV4JywganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJyB9fT5cbiAgICAgICAgICB7JyAnfVxuICAgICAgICAgIDxzcGFuPnt0KCdBdXRvY29tcGxldGUnKX08L3NwYW4+eycgJ31cbiAgICAgICAgICA8QW50ZFN3aXRjaFxuICAgICAgICAgICAgY2hlY2tlZD17YXV0b2NvbXBsZXRlRW5hYmxlZH1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVUb2dnbGVBdXRvY29tcGxldGVFbmFibGVkfVxuICAgICAgICAgICAgbmFtZT1cImF1dG9jb21wbGV0ZS1zd2l0Y2hcIlxuICAgICAgICAgIC8+eycgJ31cbiAgICAgICAgPC9NZW51Lkl0ZW0+XG4gICAgICAgIHtpc0ZlYXR1cmVFbmFibGVkKEZlYXR1cmVGbGFnLkVOQUJMRV9URU1QTEFURV9QUk9DRVNTSU5HKSAmJiAoXG4gICAgICAgICAgPE1lbnUuSXRlbT5cbiAgICAgICAgICAgIDxUZW1wbGF0ZVBhcmFtc0VkaXRvclxuICAgICAgICAgICAgICBsYW5ndWFnZT1cImpzb25cIlxuICAgICAgICAgICAgICBvbkNoYW5nZT17cGFyYW1zID0+IHtcbiAgICAgICAgICAgICAgICBkaXNwYXRjaChxdWVyeUVkaXRvclNldFRlbXBsYXRlUGFyYW1zKHFlLCBwYXJhbXMpKTtcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgcXVlcnlFZGl0b3JJZD17cWUuaWR9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvTWVudS5JdGVtPlxuICAgICAgICApfVxuICAgICAgICB7IWlzRW1wdHkoc2NoZWR1bGVkUXVlcmllc0NvbmYpICYmIChcbiAgICAgICAgICA8TWVudS5JdGVtPlxuICAgICAgICAgICAgPFNjaGVkdWxlUXVlcnlCdXR0b25cbiAgICAgICAgICAgICAgZGVmYXVsdExhYmVsPXtxZS5uYW1lfVxuICAgICAgICAgICAgICBzcWw9e3FlLnNxbH1cbiAgICAgICAgICAgICAgb25TY2hlZHVsZT17cXVlcnkgPT4gZGlzcGF0Y2goc2NoZWR1bGVRdWVyeShxdWVyeSkpfVxuICAgICAgICAgICAgICBzY2hlbWE9e3FlLnNjaGVtYX1cbiAgICAgICAgICAgICAgZGJJZD17cWUuZGJJZH1cbiAgICAgICAgICAgICAgc2NoZWR1bGVRdWVyeVdhcm5pbmc9e3NjaGVkdWxlUXVlcnlXYXJuaW5nfVxuICAgICAgICAgICAgICB0b29sdGlwPXtzY2hlZHVsZVRvb2xUaXB9XG4gICAgICAgICAgICAgIGRpc2FibGVkPXshc3VjY2Vzc2Z1bH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9NZW51Lkl0ZW0+XG4gICAgICAgICl9XG4gICAgICA8L01lbnU+XG4gICAgKTtcbiAgfTtcblxuICBjb25zdCBvblNhdmVRdWVyeSA9IGFzeW5jIChxdWVyeSwgY2xpZW50SWQpID0+IHtcbiAgICBjb25zdCBzYXZlZFF1ZXJ5ID0gYXdhaXQgZGlzcGF0Y2goc2F2ZVF1ZXJ5KHF1ZXJ5LCBjbGllbnRJZCkpO1xuICAgIGRpc3BhdGNoKGFkZFNhdmVkUXVlcnlUb1RhYlN0YXRlKHF1ZXJ5RWRpdG9yLCBzYXZlZFF1ZXJ5KSk7XG4gIH07XG5cbiAgY29uc3QgcmVuZGVyRWRpdG9yQm90dG9tQmFyID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgYWxsb3dfY3RhczogYWxsb3dDVEFTLCBhbGxvd19jdmFzOiBhbGxvd0NWQVMgfSA9IGRhdGFiYXNlIHx8IHt9O1xuXG4gICAgY29uc3Qgc2hvd01lbnUgPSBhbGxvd0NUQVMgfHwgYWxsb3dDVkFTO1xuICAgIGNvbnN0IHJ1bk1lbnVCdG4gPSAoXG4gICAgICA8TWVudT5cbiAgICAgICAge2FsbG93Q1RBUyAmJiAoXG4gICAgICAgICAgPE1lbnUuSXRlbVxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICBzZXRTaG93Q3JlYXRlQXNNb2RhbCh0cnVlKTtcbiAgICAgICAgICAgICAgc2V0Q3JlYXRlQXMoQ3Rhc0VudW0uVEFCTEUpO1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIGtleT1cIjFcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIHt0KCdDUkVBVEUgVEFCTEUgQVMnKX1cbiAgICAgICAgICA8L01lbnUuSXRlbT5cbiAgICAgICAgKX1cbiAgICAgICAge2FsbG93Q1ZBUyAmJiAoXG4gICAgICAgICAgPE1lbnUuSXRlbVxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICBzZXRTaG93Q3JlYXRlQXNNb2RhbCh0cnVlKTtcbiAgICAgICAgICAgICAgc2V0Q3JlYXRlQXMoQ3Rhc0VudW0uVklFVyk7XG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAga2V5PVwiMlwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAge3QoJ0NSRUFURSBWSUVXIEFTJyl9XG4gICAgICAgICAgPC9NZW51Lkl0ZW0+XG4gICAgICAgICl9XG4gICAgICA8L01lbnU+XG4gICAgKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8U3R5bGVkVG9vbGJhciBjbGFzc05hbWU9XCJzcWwtdG9vbGJhclwiIGlkPVwianMtc3FsLXRvb2xiYXJcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsZWZ0SXRlbXNcIj5cbiAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgIDxSdW5RdWVyeUFjdGlvbkJ1dHRvblxuICAgICAgICAgICAgICBhbGxvd0FzeW5jPXtkYXRhYmFzZSA/IGRhdGFiYXNlLmFsbG93X3J1bl9hc3luYyA6IGZhbHNlfVxuICAgICAgICAgICAgICBxdWVyeUVkaXRvcklkPXtxdWVyeUVkaXRvci5pZH1cbiAgICAgICAgICAgICAgcXVlcnlTdGF0ZT17bGF0ZXN0UXVlcnk/LnN0YXRlfVxuICAgICAgICAgICAgICBydW5RdWVyeT17cnVuUXVlcnl9XG4gICAgICAgICAgICAgIHN0b3BRdWVyeT17c3RvcFF1ZXJ5fVxuICAgICAgICAgICAgICBvdmVybGF5Q3JlYXRlQXNNZW51PXtzaG93TWVudSA/IHJ1bk1lbnVCdG4gOiBudWxsfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAge2lzRmVhdHVyZUVuYWJsZWQoRmVhdHVyZUZsYWcuRVNUSU1BVEVfUVVFUllfQ09TVCkgJiZcbiAgICAgICAgICAgIGRhdGFiYXNlPy5hbGxvd3NfY29zdF9lc3RpbWF0ZSAmJiAoXG4gICAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgIDxFc3RpbWF0ZVF1ZXJ5Q29zdEJ1dHRvblxuICAgICAgICAgICAgICAgICAgZ2V0RXN0aW1hdGU9e2dldFF1ZXJ5Q29zdEVzdGltYXRlfVxuICAgICAgICAgICAgICAgICAgcXVlcnlFZGl0b3JJZD17cXVlcnlFZGl0b3IuaWR9XG4gICAgICAgICAgICAgICAgICB0b29sdGlwPXt0KCdFc3RpbWF0ZSB0aGUgY29zdCBiZWZvcmUgcnVubmluZyBhIHF1ZXJ5Jyl9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgIDxRdWVyeUxpbWl0U2VsZWN0XG4gICAgICAgICAgICAgIHF1ZXJ5RWRpdG9ySWQ9e3F1ZXJ5RWRpdG9yLmlkfVxuICAgICAgICAgICAgICBtYXhSb3c9e21heFJvd31cbiAgICAgICAgICAgICAgZGVmYXVsdFF1ZXJ5TGltaXQ9e2RlZmF1bHRRdWVyeUxpbWl0fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAge2xhdGVzdFF1ZXJ5ICYmIChcbiAgICAgICAgICAgIDxUaW1lclxuICAgICAgICAgICAgICBzdGFydFRpbWU9e2xhdGVzdFF1ZXJ5LnN0YXJ0RHR0bX1cbiAgICAgICAgICAgICAgZW5kVGltZT17bGF0ZXN0UXVlcnkuZW5kRHR0bX1cbiAgICAgICAgICAgICAgc3RhdGU9e1NUQVRFX1RZUEVfTUFQW2xhdGVzdFF1ZXJ5LnN0YXRlXX1cbiAgICAgICAgICAgICAgaXNSdW5uaW5nPXtsYXRlc3RRdWVyeS5zdGF0ZSA9PT0gJ3J1bm5pbmcnfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyaWdodEl0ZW1zXCI+XG4gICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICA8U2F2ZVF1ZXJ5XG4gICAgICAgICAgICAgIHF1ZXJ5RWRpdG9ySWQ9e3F1ZXJ5RWRpdG9yLmlkfVxuICAgICAgICAgICAgICBjb2x1bW5zPXtsYXRlc3RRdWVyeT8ucmVzdWx0cz8uY29sdW1ucyB8fCBbXX1cbiAgICAgICAgICAgICAgb25TYXZlPXtvblNhdmVRdWVyeX1cbiAgICAgICAgICAgICAgb25VcGRhdGU9eyhxdWVyeSwgcmVtb3RlSWQsIGlkKSA9PlxuICAgICAgICAgICAgICAgIGRpc3BhdGNoKHVwZGF0ZVNhdmVkUXVlcnkocXVlcnksIHJlbW90ZUlkLCBpZCkpXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgc2F2ZVF1ZXJ5V2FybmluZz17c2F2ZVF1ZXJ5V2FybmluZ31cbiAgICAgICAgICAgICAgZGF0YWJhc2U9e2RhdGFiYXNlfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICA8U2hhcmVTcWxMYWJRdWVyeSBxdWVyeUVkaXRvcklkPXtxdWVyeUVkaXRvci5pZH0gLz5cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgPEFudGREcm9wZG93biBvdmVybGF5PXtyZW5kZXJEcm9wZG93bigpfSB0cmlnZ2VyPVwiY2xpY2tcIj5cbiAgICAgICAgICAgIDxJY29ucy5Nb3JlSG9yaXogaWNvbkNvbG9yPXt0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmJhc2V9IC8+XG4gICAgICAgICAgPC9BbnRkRHJvcGRvd24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9TdHlsZWRUb29sYmFyPlxuICAgICk7XG4gIH07XG5cbiAgY29uc3QgcXVlcnlQYW5lID0gKCkgPT4ge1xuICAgIGNvbnN0IGhvdGtleXMgPSBnZXRIb3RrZXlDb25maWcoKTtcbiAgICBjb25zdCB7IGFjZUVkaXRvckhlaWdodCwgc291dGhQYW5lSGVpZ2h0IH0gPVxuICAgICAgZ2V0QWNlRWRpdG9yQW5kU291dGhQYW5lSGVpZ2h0cyhoZWlnaHQsIG5vcnRoUGVyY2VudCwgc291dGhQZXJjZW50KTtcbiAgICByZXR1cm4gKFxuICAgICAgPFNwbGl0XG4gICAgICAgIGV4cGFuZFRvTWluXG4gICAgICAgIGNsYXNzTmFtZT1cInF1ZXJ5UGFuZVwiXG4gICAgICAgIHNpemVzPXtbbm9ydGhQZXJjZW50LCBzb3V0aFBlcmNlbnRdfVxuICAgICAgICBlbGVtZW50U3R5bGU9e2VsZW1lbnRTdHlsZX1cbiAgICAgICAgbWluU2l6ZT17MjAwfVxuICAgICAgICBkaXJlY3Rpb249XCJ2ZXJ0aWNhbFwiXG4gICAgICAgIGd1dHRlclNpemU9e1NRTF9FRElUT1JfR1VUVEVSX0hFSUdIVH1cbiAgICAgICAgb25EcmFnU3RhcnQ9e29uUmVzaXplU3RhcnR9XG4gICAgICAgIG9uRHJhZ0VuZD17b25SZXNpemVFbmR9XG4gICAgICA+XG4gICAgICAgIDxkaXYgcmVmPXtub3J0aFBhbmVSZWZ9IGNsYXNzTmFtZT1cIm5vcnRoLXBhbmVcIj5cbiAgICAgICAgICA8QWNlRWRpdG9yV3JhcHBlclxuICAgICAgICAgICAgYXV0b2NvbXBsZXRlPXthdXRvY29tcGxldGVFbmFibGVkfVxuICAgICAgICAgICAgb25CbHVyPXtzZXRRdWVyeUVkaXRvckFuZFNhdmVTcWx9XG4gICAgICAgICAgICBvbkNoYW5nZT17b25TcWxDaGFuZ2VkfVxuICAgICAgICAgICAgcXVlcnlFZGl0b3JJZD17cXVlcnlFZGl0b3IuaWR9XG4gICAgICAgICAgICBkYXRhYmFzZT17ZGF0YWJhc2V9XG4gICAgICAgICAgICBleHRlbmRlZFRhYmxlcz17dGFibGVzfVxuICAgICAgICAgICAgaGVpZ2h0PXtgJHthY2VFZGl0b3JIZWlnaHR9cHhgfVxuICAgICAgICAgICAgaG90a2V5cz17aG90a2V5c31cbiAgICAgICAgICAvPlxuICAgICAgICAgIHtyZW5kZXJFZGl0b3JCb3R0b21CYXIoaG90a2V5cyl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8U291dGhQYW5lXG4gICAgICAgICAgcXVlcnlFZGl0b3JJZD17cXVlcnlFZGl0b3IuaWR9XG4gICAgICAgICAgbGF0ZXN0UXVlcnlJZD17bGF0ZXN0UXVlcnk/LmlkfVxuICAgICAgICAgIGhlaWdodD17c291dGhQYW5lSGVpZ2h0fVxuICAgICAgICAgIGRpc3BsYXlMaW1pdD17ZGlzcGxheUxpbWl0fVxuICAgICAgICAgIGRlZmF1bHRRdWVyeUxpbWl0PXtkZWZhdWx0UXVlcnlMaW1pdH1cbiAgICAgICAgLz5cbiAgICAgIDwvU3BsaXQ+XG4gICAgKTtcbiAgfTtcblxuICBjb25zdCBjcmVhdGVWaWV3TW9kYWxUaXRsZSA9XG4gICAgY3JlYXRlQXMgPT09IEN0YXNFbnVtLlZJRVcgPyAnQ1JFQVRFIFZJRVcgQVMnIDogJ0NSRUFURSBUQUJMRSBBUyc7XG5cbiAgY29uc3QgY3JlYXRlTW9kYWxQbGFjZUhvbGRlciA9XG4gICAgY3JlYXRlQXMgPT09IEN0YXNFbnVtLlZJRVdcbiAgICAgID8gdCgnU3BlY2lmeSBuYW1lIHRvIENSRUFURSBWSUVXIEFTIHNjaGVtYSBpbjogcHVibGljJylcbiAgICAgIDogdCgnU3BlY2lmeSBuYW1lIHRvIENSRUFURSBUQUJMRSBBUyBzY2hlbWEgaW46IHB1YmxpYycpO1xuXG4gIGNvbnN0IGxlZnRCYXJTdGF0ZUNsYXNzID0gaGlkZUxlZnRCYXJcbiAgICA/ICdzY2hlbWFQYW5lLWV4aXQtZG9uZSdcbiAgICA6ICdzY2hlbWFQYW5lLWVudGVyLWRvbmUnO1xuICByZXR1cm4gKFxuICAgIDxTdHlsZWRTcWxFZGl0b3IgcmVmPXtzcWxFZGl0b3JSZWZ9IGNsYXNzTmFtZT1cIlNxbEVkaXRvclwiPlxuICAgICAgPENTU1RyYW5zaXRpb24gY2xhc3NOYW1lcz1cInNjaGVtYVBhbmVcIiBpbj17IWhpZGVMZWZ0QmFyfSB0aW1lb3V0PXszMDB9PlxuICAgICAgICA8UmVzaXphYmxlU2lkZWJhclxuICAgICAgICAgIGlkPXtgc3FsbGFiOiR7cXVlcnlFZGl0b3IuaWR9YH1cbiAgICAgICAgICBtaW5XaWR0aD17U1FMX0VESVRPUl9MRUZUQkFSX1dJRFRIfVxuICAgICAgICAgIGluaXRpYWxXaWR0aD17U1FMX0VESVRPUl9MRUZUQkFSX1dJRFRIfVxuICAgICAgICAgIGVuYWJsZT17IWhpZGVMZWZ0QmFyfVxuICAgICAgICA+XG4gICAgICAgICAge2FkanVzdGVkV2lkdGggPT4gKFxuICAgICAgICAgICAgPFN0eWxlZFNpZGViYXJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgc2NoZW1hUGFuZSAke2xlZnRCYXJTdGF0ZUNsYXNzfWB9XG4gICAgICAgICAgICAgIHdpZHRoPXthZGp1c3RlZFdpZHRofVxuICAgICAgICAgICAgICBoaWRlPXtoaWRlTGVmdEJhcn1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPFNxbEVkaXRvckxlZnRCYXJcbiAgICAgICAgICAgICAgICBkYXRhYmFzZT17ZGF0YWJhc2V9XG4gICAgICAgICAgICAgICAgcXVlcnlFZGl0b3JJZD17cXVlcnlFZGl0b3IuaWR9XG4gICAgICAgICAgICAgICAgdGFibGVzPXt0YWJsZXN9XG4gICAgICAgICAgICAgICAgc2V0RW1wdHlTdGF0ZT17Ym9vbCA9PiBzZXRTaG93RW1wdHlTdGF0ZShib29sKX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvU3R5bGVkU2lkZWJhcj5cbiAgICAgICAgICApfVxuICAgICAgICA8L1Jlc2l6YWJsZVNpZGViYXI+XG4gICAgICA8L0NTU1RyYW5zaXRpb24+XG4gICAgICB7c2hvd0VtcHR5U3RhdGUgPyAoXG4gICAgICAgIDxFbXB0eVN0YXRlQmlnXG4gICAgICAgICAgaW1hZ2U9XCJ2ZWN0b3Iuc3ZnXCJcbiAgICAgICAgICB0aXRsZT17dCgnU2VsZWN0IGEgZGF0YWJhc2UgdG8gd3JpdGUgYSBxdWVyeScpfVxuICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KFxuICAgICAgICAgICAgJ0Nob29zZSBvbmUgb2YgdGhlIGF2YWlsYWJsZSBkYXRhYmFzZXMgZnJvbSB0aGUgcGFuZWwgb24gdGhlIGxlZnQuJyxcbiAgICAgICAgICApfVxuICAgICAgICAvPlxuICAgICAgKSA6IChcbiAgICAgICAgcXVlcnlQYW5lKClcbiAgICAgICl9XG4gICAgICA8TW9kYWxcbiAgICAgICAgdmlzaWJsZT17c2hvd0NyZWF0ZUFzTW9kYWx9XG4gICAgICAgIHRpdGxlPXt0KGNyZWF0ZVZpZXdNb2RhbFRpdGxlKX1cbiAgICAgICAgb25IaWRlPXsoKSA9PiBzZXRTaG93Q3JlYXRlQXNNb2RhbChmYWxzZSl9XG4gICAgICAgIGZvb3Rlcj17XG4gICAgICAgICAgPD5cbiAgICAgICAgICAgIDxCdXR0b24gb25DbGljaz17KCkgPT4gc2V0U2hvd0NyZWF0ZUFzTW9kYWwoZmFsc2UpfT5cbiAgICAgICAgICAgICAge3QoJ0NhbmNlbCcpfVxuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICB7Y3JlYXRlQXMgPT09IEN0YXNFbnVtLlRBQkxFICYmIChcbiAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgIGJ1dHRvblN0eWxlPVwicHJpbWFyeVwiXG4gICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2N0YXMubGVuZ3RoID09PSAwfVxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2NyZWF0ZVRhYmxlQXN9XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7dCgnQ3JlYXRlJyl9XG4gICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIHtjcmVhdGVBcyA9PT0gQ3Rhc0VudW0uVklFVyAmJiAoXG4gICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICBidXR0b25TdHlsZT1cInByaW1hcnlcIlxuICAgICAgICAgICAgICAgIGRpc2FibGVkPXtjdGFzLmxlbmd0aCA9PT0gMH1cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXtjcmVhdGVWaWV3QXN9XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7dCgnQ3JlYXRlJyl9XG4gICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8Lz5cbiAgICAgICAgfVxuICAgICAgPlxuICAgICAgICA8c3Bhbj57dCgnTmFtZScpfTwvc3Bhbj5cbiAgICAgICAgPElucHV0IHBsYWNlaG9sZGVyPXtjcmVhdGVNb2RhbFBsYWNlSG9sZGVyfSBvbkNoYW5nZT17Y3Rhc0NoYW5nZWR9IC8+XG4gICAgICA8L01vZGFsPlxuICAgIDwvU3R5bGVkU3FsRWRpdG9yPlxuICApO1xufTtcblxuU3FsRWRpdG9yLnByb3BUeXBlcyA9IHByb3BUeXBlcztcblxuZXhwb3J0IGRlZmF1bHQgU3FsRWRpdG9yO1xuIl19 */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\n\nconst SqlEditor = (_ref10) =>\n\n\n\n\n\n\n\n{let { tables, queryEditor, defaultQueryLimit, maxRow, displayLimit, saveQueryWarning, scheduleQueryWarning = null } = _ref10;\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const { database, latestQuery, hideLeftBar } = useSelector(\n  (_ref11) => {let { sqlLab: { unsavedQueryEditor, databases, queries } } = _ref11;\n    let { dbId, latestQueryId, hideLeftBar } = queryEditor;\n    if (unsavedQueryEditor.id === queryEditor.id) {\n      dbId = unsavedQueryEditor.dbId || dbId;\n      latestQueryId = unsavedQueryEditor.latestQueryId || latestQueryId;\n      hideLeftBar = unsavedQueryEditor.hideLeftBar || hideLeftBar;\n    }\n    return {\n      database: databases[dbId],\n      latestQuery: queries[latestQueryId],\n      hideLeftBar };\n\n  },\n  shallowEqual);\n\n\n  const [height, setHeight] = useState(0);\n  const [autorun, setAutorun] = useState(queryEditor.autorun);\n  const [ctas, setCtas] = useState('');\n  const [northPercent, setNorthPercent] = useState(\n  queryEditor.northPercent || INITIAL_NORTH_PERCENT);\n\n  const [southPercent, setSouthPercent] = useState(\n  queryEditor.southPercent || INITIAL_SOUTH_PERCENT);\n\n  const [autocompleteEnabled, setAutocompleteEnabled] = useState(\n  getItem(LocalStorageKeys.sqllab__is_autocomplete_enabled, true));\n\n  const [showCreateAsModal, setShowCreateAsModal] = useState(false);\n  const [createAs, setCreateAs] = useState('');\n  const [showEmptyState, setShowEmptyState] = useState(false);\n\n  const sqlEditorRef = useRef(null);\n  const northPaneRef = useRef(null);\n\n  const startQuery = useCallback(\n  function (ctasArg, ctas_method) {if (ctasArg === void 0) {ctasArg = false;}if (ctas_method === void 0) {ctas_method = CtasEnum.TABLE;}\n    if (!database) {\n      return;\n    }\n\n    dispatch(\n    runQueryFromSqlEditor(\n    database,\n    queryEditor,\n    defaultQueryLimit,\n    ctasArg ? ctas : '',\n    ctasArg,\n    ctas_method));\n\n\n    dispatch(setActiveSouthPaneTab('Results'));\n  },\n  [ctas, database, defaultQueryLimit, dispatch, queryEditor]);\n\n\n  const stopQuery = useCallback(() => {\n    if (latestQuery && ['running', 'pending'].indexOf(latestQuery.state) >= 0) {\n      dispatch(postStopQuery(latestQuery));\n    }\n    return false;\n  }, [dispatch, latestQuery]);\n\n  const runQuery = () => {\n    if (database) {\n      startQuery();\n    }\n  };\n\n  useEffect(() => {\n    if (autorun) {\n      setAutorun(false);\n      dispatch(queryEditorSetAutorun(queryEditor, false));\n      startQuery();\n    }\n  }, [autorun, dispatch, queryEditor, startQuery]);\n\n  // One layer of abstraction for easy spying in unit tests\n  const getSqlEditorHeight = () =>\n  sqlEditorRef.current ?\n  sqlEditorRef.current.clientHeight - SQL_EDITOR_PADDING * 2 :\n  0;\n\n  const getHotkeyConfig = useCallback(() => {\n    // Get the user's OS\n    const userOS = detectOS();\n    const base = [\n    {\n      name: 'runQuery1',\n      key: 'ctrl+r',\n      descr: t('Run query'),\n      func: () => {\n        if (queryEditor.sql.trim() !== '') {\n          startQuery();\n        }\n      } },\n\n    {\n      name: 'runQuery2',\n      key: 'ctrl+enter',\n      descr: t('Run query'),\n      func: () => {\n        if (queryEditor.sql.trim() !== '') {\n          startQuery();\n        }\n      } },\n\n    {\n      name: 'newTab',\n      key: userOS === 'Windows' ? 'ctrl+q' : 'ctrl+t',\n      descr: t('New tab'),\n      func: () => {\n        dispatch(addNewQueryEditor());\n      } },\n\n    {\n      name: 'stopQuery',\n      key: userOS === 'MacOS' ? 'ctrl+x' : 'ctrl+e',\n      descr: t('Stop query'),\n      func: stopQuery }];\n\n\n\n    if (userOS === 'MacOS') {\n      base.push({\n        name: 'previousLine',\n        key: 'ctrl+p',\n        descr: t('Previous Line'),\n        func: (editor) => {\n          editor.navigateUp(1);\n        } });\n\n    }\n\n    return base;\n  }, [dispatch, queryEditor.sql, startQuery, stopQuery]);\n\n  const onBeforeUnload = useEffectEvent((event) => {var _database$extra_json;\n    if (\n    database != null && (_database$extra_json = database.extra_json) != null && _database$extra_json.cancel_query_on_windows_unload &&\n    (latestQuery == null ? void 0 : latestQuery.state) === 'running')\n    {\n      event.preventDefault();\n      stopQuery();\n    }\n  });\n\n  useEffect(() => {\n    // We need to measure the height of the sql editor post render to figure the height of\n    // the south pane so it gets rendered properly\n    setHeight(getSqlEditorHeight());\n    const handleWindowResizeWithThrottle = throttle(\n    () => setHeight(getSqlEditorHeight()),\n    WINDOW_RESIZE_THROTTLE_MS);\n\n\n    window.addEventListener('resize', handleWindowResizeWithThrottle);\n    window.addEventListener('beforeunload', onBeforeUnload);\n\n    return () => {\n      window.removeEventListener('resize', handleWindowResizeWithThrottle);\n      window.removeEventListener('beforeunload', onBeforeUnload);\n    };\n    // TODO: Remove useEffectEvent deps once https://github.com/facebook/react/pull/25881 is released\n  }, [onBeforeUnload]);\n\n  useEffect(() => {\n    if (!database || _isEmpty(database)) {\n      setShowEmptyState(true);\n    }\n  }, [database]);\n\n  useEffect(() => {\n    // setup hotkeys\n    Mousetrap.reset();\n    const hotkeys = getHotkeyConfig();\n    hotkeys.forEach((keyConfig) => {\n      Mousetrap.bind([keyConfig.key], keyConfig.func);\n    });\n  }, [getHotkeyConfig, latestQuery]);\n\n  const onResizeStart = () => {\n    // Set the heights on the ace editor and the ace content area after drag starts\n    // to smooth out the visual transition to the new heights when drag ends\n    document.getElementsByClassName('ace_content')[0].style.height = '100%';\n  };\n\n  const onResizeEnd = (_ref12) => {var _northPaneRef$current;let [northPercent, southPercent] = _ref12;\n    setNorthPercent(northPercent);\n    setSouthPercent(southPercent);\n\n    if ((_northPaneRef$current = northPaneRef.current) != null && _northPaneRef$current.clientHeight) {\n      dispatch(persistEditorHeight(queryEditor, northPercent, southPercent));\n    }\n  };\n\n  const setQueryEditorAndSaveSql = useCallback(\n  (sql) => {\n    dispatch(queryEditorSetAndSaveSql(queryEditor, sql));\n  },\n  [dispatch, queryEditor]);\n\n\n  const setQueryEditorAndSaveSqlWithDebounce = useMemo(\n  () => debounce(setQueryEditorAndSaveSql, SET_QUERY_EDITOR_SQL_DEBOUNCE_MS),\n  [setQueryEditorAndSaveSql]);\n\n\n  const canValidateQuery = () => {\n    // Check whether or not we can validate the current query based on whether\n    // or not the backend has a validator configured for it.\n    if (database) {\n      return validatorMap.hasOwnProperty(database.backend);\n    }\n    return false;\n  };\n\n  const requestValidation = useCallback(\n  (sql) => {\n    if (database) {\n      dispatch(validateQuery(queryEditor, sql));\n    }\n  },\n  [database, dispatch, queryEditor]);\n\n\n  const requestValidationWithDebounce = useMemo(\n  () => debounce(requestValidation, VALIDATION_DEBOUNCE_MS),\n  [requestValidation]);\n\n\n  const onSqlChanged = (sql) => {\n    dispatch(queryEditorSetSql(queryEditor, sql));\n    setQueryEditorAndSaveSqlWithDebounce(sql);\n    // Request server-side validation of the query text\n    if (canValidateQuery()) {\n      // NB. requestValidation is debounced\n      requestValidationWithDebounce(sql);\n    }\n  };\n\n  // Return the heights for the ace editor and the south pane as an object\n  // given the height of the sql editor, north pane percent and south pane percent.\n  const getAceEditorAndSouthPaneHeights = (\n  height,\n  northPercent,\n  southPercent) => (\n  {\n    aceEditorHeight:\n    height * northPercent / (theme.gridUnit * 25) - (\n    SQL_EDITOR_GUTTER_HEIGHT / 2 + SQL_EDITOR_GUTTER_MARGIN) -\n    SQL_TOOLBAR_HEIGHT,\n    southPaneHeight:\n    height * southPercent / (theme.gridUnit * 25) - (\n    SQL_EDITOR_GUTTER_HEIGHT / 2 + SQL_EDITOR_GUTTER_MARGIN) });\n\n\n  const getQueryCostEstimate = () => {\n    if (database) {\n      dispatch(estimateQueryCost(queryEditor));\n    }\n  };\n\n  const handleToggleAutocompleteEnabled = () => {\n    setItem(\n    LocalStorageKeys.sqllab__is_autocomplete_enabled,\n    !autocompleteEnabled);\n\n    setAutocompleteEnabled(!autocompleteEnabled);\n  };\n\n  const elementStyle = (dimension, elementSize, gutterSize) => ({\n    [dimension]: `calc(${elementSize}% - ${\n    gutterSize + SQL_EDITOR_GUTTER_MARGIN\n    }px)` });\n\n\n  const createTableAs = () => {\n    startQuery(true, CtasEnum.TABLE);\n    setShowCreateAsModal(false);\n    setCtas('');\n  };\n\n  const createViewAs = () => {\n    startQuery(true, CtasEnum.VIEW);\n    setShowCreateAsModal(false);\n    setCtas('');\n  };\n\n  const ctasChanged = (event) => {\n    setCtas(event.target.value);\n  };\n\n  const renderDropdown = () => {\n    const qe = queryEditor;\n    const successful = (latestQuery == null ? void 0 : latestQuery.state) === 'success';\n    const scheduleToolTip = successful ?\n    t('Schedule the query periodically') :\n    t('You must run the query successfully first');\n    return (\n      ___EmotionJSX(Menu, { css: /*#__PURE__*/_css({ width: theme.gridUnit * 44 }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:renderDropdown;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") },\n      ___EmotionJSX(Menu.Item, { css: _ref13 },\n      ' ',\n      ___EmotionJSX(\"span\", null, t('Autocomplete')), ' ',\n      ___EmotionJSX(AntdSwitch, {\n        checked: autocompleteEnabled,\n        onChange: handleToggleAutocompleteEnabled,\n        name: \"autocomplete-switch\" }),\n      ' '),\n\n      isFeatureEnabled(FeatureFlag.ENABLE_TEMPLATE_PROCESSING) &&\n      ___EmotionJSX(Menu.Item, null,\n      ___EmotionJSX(TemplateParamsEditor, {\n        language: \"json\",\n        onChange: (params) => {\n          dispatch(queryEditorSetTemplateParams(qe, params));\n        },\n        queryEditorId: qe.id })),\n\n\n\n      !_isEmpty(scheduledQueriesConf) &&\n      ___EmotionJSX(Menu.Item, null,\n      ___EmotionJSX(ScheduleQueryButton, {\n        defaultLabel: qe.name,\n        sql: qe.sql,\n        onSchedule: (query) => dispatch(scheduleQuery(query)),\n        schema: qe.schema,\n        dbId: qe.dbId,\n        scheduleQueryWarning: scheduleQueryWarning,\n        tooltip: scheduleToolTip,\n        disabled: !successful }))));\n\n\n\n\n\n  };\n\n  const onSaveQuery = async (query, clientId) => {\n    const savedQuery = await dispatch(saveQuery(query, clientId));\n    dispatch(addSavedQueryToTabState(queryEditor, savedQuery));\n  };\n\n  const renderEditorBottomBar = () => {var _latestQuery$results;\n    const { allow_ctas: allowCTAS, allow_cvas: allowCVAS } = database || {};\n\n    const showMenu = allowCTAS || allowCVAS;\n    const runMenuBtn =\n    ___EmotionJSX(Menu, null,\n    allowCTAS &&\n    ___EmotionJSX(Menu.Item, {\n      onClick: () => {\n        setShowCreateAsModal(true);\n        setCreateAs(CtasEnum.TABLE);\n      },\n      key: \"1\" },\n\n    t('CREATE TABLE AS')),\n\n\n    allowCVAS &&\n    ___EmotionJSX(Menu.Item, {\n      onClick: () => {\n        setShowCreateAsModal(true);\n        setCreateAs(CtasEnum.VIEW);\n      },\n      key: \"2\" },\n\n    t('CREATE VIEW AS')));\n\n\n\n\n\n    return (\n      ___EmotionJSX(StyledToolbar, { className: \"sql-toolbar\", id: \"js-sql-toolbar\" },\n      ___EmotionJSX(\"div\", { className: \"leftItems\" },\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(RunQueryActionButton, {\n        allowAsync: database ? database.allow_run_async : false,\n        queryEditorId: queryEditor.id,\n        queryState: latestQuery == null ? void 0 : latestQuery.state,\n        runQuery: runQuery,\n        stopQuery: stopQuery,\n        overlayCreateAsMenu: showMenu ? runMenuBtn : null })),\n\n\n      isFeatureEnabled(FeatureFlag.ESTIMATE_QUERY_COST) && (\n      database == null ? void 0 : database.allows_cost_estimate) &&\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(EstimateQueryCostButton, {\n        getEstimate: getQueryCostEstimate,\n        queryEditorId: queryEditor.id,\n        tooltip: t('Estimate the cost before running a query') })),\n\n\n\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(QueryLimitSelect, {\n        queryEditorId: queryEditor.id,\n        maxRow: maxRow,\n        defaultQueryLimit: defaultQueryLimit })),\n\n\n      latestQuery &&\n      ___EmotionJSX(Timer, {\n        startTime: latestQuery.startDttm,\n        endTime: latestQuery.endDttm,\n        state: STATE_TYPE_MAP[latestQuery.state],\n        isRunning: latestQuery.state === 'running' })),\n\n\n\n      ___EmotionJSX(\"div\", { className: \"rightItems\" },\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(SaveQuery, {\n        queryEditorId: queryEditor.id,\n        columns: (latestQuery == null ? void 0 : (_latestQuery$results = latestQuery.results) == null ? void 0 : _latestQuery$results.columns) || [],\n        onSave: onSaveQuery,\n        onUpdate: (query, remoteId, id) =>\n        dispatch(updateSavedQuery(query, remoteId, id)),\n\n        saveQueryWarning: saveQueryWarning,\n        database: database })),\n\n\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(ShareSqlLabQuery, { queryEditorId: queryEditor.id })),\n\n      ___EmotionJSX(AntdDropdown, { overlay: renderDropdown(), trigger: \"click\" },\n      ___EmotionJSX(Icons.MoreHoriz, { iconColor: theme.colors.grayscale.base })))));\n\n\n\n\n  };\n\n  const queryPane = () => {\n    const hotkeys = getHotkeyConfig();\n    const { aceEditorHeight, southPaneHeight } =\n    getAceEditorAndSouthPaneHeights(height, northPercent, southPercent);\n    return (\n      ___EmotionJSX(Split, {\n        expandToMin: true,\n        className: \"queryPane\",\n        sizes: [northPercent, southPercent],\n        elementStyle: elementStyle,\n        minSize: 200,\n        direction: \"vertical\",\n        gutterSize: SQL_EDITOR_GUTTER_HEIGHT,\n        onDragStart: onResizeStart,\n        onDragEnd: onResizeEnd },\n\n      ___EmotionJSX(\"div\", { ref: northPaneRef, className: \"north-pane\" },\n      ___EmotionJSX(AceEditorWrapper, {\n        autocomplete: autocompleteEnabled,\n        onBlur: setQueryEditorAndSaveSql,\n        onChange: onSqlChanged,\n        queryEditorId: queryEditor.id,\n        database: database,\n        extendedTables: tables,\n        height: `${aceEditorHeight}px`,\n        hotkeys: hotkeys }),\n\n      renderEditorBottomBar(hotkeys)),\n\n      ___EmotionJSX(SouthPane, {\n        queryEditorId: queryEditor.id,\n        latestQueryId: latestQuery == null ? void 0 : latestQuery.id,\n        height: southPaneHeight,\n        displayLimit: displayLimit,\n        defaultQueryLimit: defaultQueryLimit })));\n\n\n\n  };\n\n  const createViewModalTitle =\n  createAs === CtasEnum.VIEW ? 'CREATE VIEW AS' : 'CREATE TABLE AS';\n\n  const createModalPlaceHolder =\n  createAs === CtasEnum.VIEW ?\n  t('Specify name to CREATE VIEW AS schema in: public') :\n  t('Specify name to CREATE TABLE AS schema in: public');\n\n  const leftBarStateClass = hideLeftBar ?\n  'schemaPane-exit-done' :\n  'schemaPane-enter-done';\n  return (\n    ___EmotionJSX(StyledSqlEditor, { ref: sqlEditorRef, className: \"SqlEditor\" },\n    ___EmotionJSX(CSSTransition, { classNames: \"schemaPane\", in: !hideLeftBar, timeout: 300 },\n    ___EmotionJSX(ResizableSidebar, {\n      id: `sqllab:${queryEditor.id}`,\n      minWidth: SQL_EDITOR_LEFTBAR_WIDTH,\n      initialWidth: SQL_EDITOR_LEFTBAR_WIDTH,\n      enable: !hideLeftBar },\n\n    (adjustedWidth) =>\n    ___EmotionJSX(StyledSidebar, {\n      className: `schemaPane ${leftBarStateClass}`,\n      width: adjustedWidth,\n      hide: hideLeftBar },\n\n    ___EmotionJSX(SqlEditorLeftBar, {\n      database: database,\n      queryEditorId: queryEditor.id,\n      tables: tables,\n      setEmptyState: (bool) => setShowEmptyState(bool) })))),\n\n\n\n\n\n    showEmptyState ?\n    ___EmotionJSX(EmptyStateBig, {\n      image: \"vector.svg\",\n      title: t('Select a database to write a query'),\n      description: t(\n      'Choose one of the available databases from the panel on the left.') }) :\n\n\n\n    queryPane(),\n\n    ___EmotionJSX(Modal, {\n      visible: showCreateAsModal,\n      title: t(createViewModalTitle),\n      onHide: () => setShowCreateAsModal(false),\n      footer:\n      ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(Button, { onClick: () => setShowCreateAsModal(false) },\n      t('Cancel')),\n\n      createAs === CtasEnum.TABLE &&\n      ___EmotionJSX(Button, {\n        buttonStyle: \"primary\",\n        disabled: ctas.length === 0,\n        onClick: createTableAs },\n\n      t('Create')),\n\n\n      createAs === CtasEnum.VIEW &&\n      ___EmotionJSX(Button, {\n        buttonStyle: \"primary\",\n        disabled: ctas.length === 0,\n        onClick: createViewAs },\n\n      t('Create'))) },\n\n\n\n\n\n    ___EmotionJSX(\"span\", null, t('Name')),\n    ___EmotionJSX(Input, { placeholder: createModalPlaceHolder, onChange: ctasChanged }))));\n\n\n\n};__signature__(SqlEditor, \"useTheme{theme}\\nuseDispatch{dispatch}\\nuseSelector{{ database, latestQuery, hideLeftBar }}\\nuseState{[height, setHeight](0)}\\nuseState{[autorun, setAutorun](queryEditor.autorun)}\\nuseState{[ctas, setCtas]('')}\\nuseState{[northPercent, setNorthPercent](queryEditor.northPercent || INITIAL_NORTH_PERCENT)}\\nuseState{[southPercent, setSouthPercent](queryEditor.southPercent || INITIAL_SOUTH_PERCENT)}\\nuseState{[autocompleteEnabled, setAutocompleteEnabled](getItem(LocalStorageKeys.sqllab__is_autocomplete_enabled, true))}\\nuseState{[showCreateAsModal, setShowCreateAsModal](false)}\\nuseState{[createAs, setCreateAs]('')}\\nuseState{[showEmptyState, setShowEmptyState](false)}\\nuseRef{sqlEditorRef}\\nuseRef{northPaneRef}\\nuseCallback{startQuery}\\nuseCallback{stopQuery}\\nuseEffect{}\\nuseCallback{getHotkeyConfig}\\nuseEffectEvent{onBeforeUnload}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\\nuseCallback{setQueryEditorAndSaveSql}\\nuseMemo{setQueryEditorAndSaveSqlWithDebounce}\\nuseCallback{requestValidation}\\nuseMemo{requestValidationWithDebounce}\", () => [useTheme, useDispatch, useSelector, useEffectEvent]);\n\nSqlEditor.propTypes = propTypes;const _default =\n\nSqlEditor;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(bootstrapData, \"bootstrapData\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/SqlEditor/index.jsx\");reactHotLoader.register(validatorMap, \"validatorMap\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/SqlEditor/index.jsx\");reactHotLoader.register(scheduledQueriesConf, \"scheduledQueriesConf\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/SqlEditor/index.jsx\");reactHotLoader.register(StyledToolbar, \"StyledToolbar\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/SqlEditor/index.jsx\");reactHotLoader.register(StyledSidebar, \"StyledSidebar\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/SqlEditor/index.jsx\");reactHotLoader.register(StyledSqlEditor, \"StyledSqlEditor\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/SqlEditor/index.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/SqlEditor/index.jsx\");reactHotLoader.register(SqlEditor, \"SqlEditor\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/SqlEditor/index.jsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/SqlEditor/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","useCallback","useEffectEvent","CSSTransition","shallowEqual","useDispatch","useSelector","PropTypes","Split","css","FeatureFlag","styled","t","useTheme","debounce","throttle","Modal","Mousetrap","Button","Timer","ResizableSidebar","AntdDropdown","AntdSwitch","Input","Menu","Icons","detectOS","addNewQueryEditor","CtasEnum","estimateQueryCost","persistEditorHeight","postStopQuery","queryEditorSetAutorun","queryEditorSetSql","queryEditorSetAndSaveSql","queryEditorSetTemplateParams","runQueryFromSqlEditor","saveQuery","addSavedQueryToTabState","scheduleQuery","setActiveSouthPaneTab","updateSavedQuery","validateQuery","STATE_TYPE_MAP","SQL_EDITOR_GUTTER_HEIGHT","SQL_EDITOR_GUTTER_MARGIN","SQL_TOOLBAR_HEIGHT","SQL_EDITOR_LEFTBAR_WIDTH","SQL_EDITOR_PADDING","INITIAL_NORTH_PERCENT","INITIAL_SOUTH_PERCENT","SET_QUERY_EDITOR_SQL_DEBOUNCE_MS","VALIDATION_DEBOUNCE_MS","WINDOW_RESIZE_THROTTLE_MS","getItem","LocalStorageKeys","setItem","isFeatureEnabled","EmptyStateBig","getBootstrapData","TemplateParamsEditor","SouthPane","SaveQuery","ScheduleQueryButton","EstimateQueryCostButton","ShareSqlLabQuery","SqlEditorLeftBar","AceEditorWrapper","RunQueryActionButton","QueryLimitSelect","bootstrapData","validatorMap","common","conf","SQL_VALIDATORS_BY_ENGINE","scheduledQueriesConf","SCHEDULED_QUERIES","StyledToolbar","div","theme","gridUnit","colors","grayscale","light5","light2","StyledSidebar","width","hide","StyledSqlEditor","transitionTiming","propTypes","tables","array","isRequired","queryEditor","object","defaultQueryLimit","number","maxRow","displayLimit","saveQueryWarning","string","scheduleQueryWarning","SqlEditor","dispatch","database","latestQuery","hideLeftBar","sqlLab","unsavedQueryEditor","databases","queries","dbId","latestQueryId","id","height","setHeight","autorun","setAutorun","ctas","setCtas","northPercent","setNorthPercent","southPercent","setSouthPercent","autocompleteEnabled","setAutocompleteEnabled","sqllab__is_autocomplete_enabled","showCreateAsModal","setShowCreateAsModal","createAs","setCreateAs","showEmptyState","setShowEmptyState","sqlEditorRef","northPaneRef","startQuery","ctasArg","ctas_method","TABLE","stopQuery","indexOf","state","runQuery","getSqlEditorHeight","current","clientHeight","getHotkeyConfig","userOS","base","name","key","descr","func","sql","trim","push","editor","navigateUp","onBeforeUnload","event","extra_json","cancel_query_on_windows_unload","preventDefault","handleWindowResizeWithThrottle","window","addEventListener","removeEventListener","reset","hotkeys","forEach","keyConfig","bind","onResizeStart","document","getElementsByClassName","style","onResizeEnd","setQueryEditorAndSaveSql","setQueryEditorAndSaveSqlWithDebounce","canValidateQuery","hasOwnProperty","backend","requestValidation","requestValidationWithDebounce","onSqlChanged","getAceEditorAndSouthPaneHeights","aceEditorHeight","southPaneHeight","getQueryCostEstimate","handleToggleAutocompleteEnabled","elementStyle","dimension","elementSize","gutterSize","createTableAs","createViewAs","VIEW","ctasChanged","target","value","renderDropdown","qe","successful","scheduleToolTip","ENABLE_TEMPLATE_PROCESSING","params","query","schema","onSaveQuery","clientId","savedQuery","renderEditorBottomBar","allow_ctas","allowCTAS","allow_cvas","allowCVAS","showMenu","runMenuBtn","allow_run_async","ESTIMATE_QUERY_COST","allows_cost_estimate","startDttm","endDttm","results","columns","remoteId","queryPane","createViewModalTitle","createModalPlaceHolder","leftBarStateClass","adjustedWidth","bool","length"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/SqlEditor/index.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, {\n  useState,\n  useEffect,\n  useMemo,\n  useRef,\n  useCallback,\n} from 'react';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\nimport { CSSTransition } from 'react-transition-group';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Split from 'react-split';\nimport { css, FeatureFlag, styled, t, useTheme } from '@superset-ui/core';\nimport debounce from 'lodash/debounce';\nimport throttle from 'lodash/throttle';\nimport Modal from 'src/components/Modal';\nimport Mousetrap from 'mousetrap';\nimport Button from 'src/components/Button';\nimport Timer from 'src/components/Timer';\nimport ResizableSidebar from 'src/components/ResizableSidebar';\nimport { AntdDropdown, AntdSwitch } from 'src/components';\nimport { Input } from 'src/components/Input';\nimport { Menu } from 'src/components/Menu';\nimport Icons from 'src/components/Icons';\nimport { detectOS } from 'src/utils/common';\nimport {\n  addNewQueryEditor,\n  CtasEnum,\n  estimateQueryCost,\n  persistEditorHeight,\n  postStopQuery,\n  queryEditorSetAutorun,\n  queryEditorSetSql,\n  queryEditorSetAndSaveSql,\n  queryEditorSetTemplateParams,\n  runQueryFromSqlEditor,\n  saveQuery,\n  addSavedQueryToTabState,\n  scheduleQuery,\n  setActiveSouthPaneTab,\n  updateSavedQuery,\n  validateQuery,\n} from 'src/SqlLab/actions/sqlLab';\nimport {\n  STATE_TYPE_MAP,\n  SQL_EDITOR_GUTTER_HEIGHT,\n  SQL_EDITOR_GUTTER_MARGIN,\n  SQL_TOOLBAR_HEIGHT,\n  SQL_EDITOR_LEFTBAR_WIDTH,\n  SQL_EDITOR_PADDING,\n  INITIAL_NORTH_PERCENT,\n  INITIAL_SOUTH_PERCENT,\n  SET_QUERY_EDITOR_SQL_DEBOUNCE_MS,\n  VALIDATION_DEBOUNCE_MS,\n  WINDOW_RESIZE_THROTTLE_MS,\n} from 'src/SqlLab/constants';\nimport {\n  getItem,\n  LocalStorageKeys,\n  setItem,\n} from 'src/utils/localStorageHelpers';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport { EmptyStateBig } from 'src/components/EmptyState';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport { isEmpty } from 'lodash';\nimport TemplateParamsEditor from '../TemplateParamsEditor';\nimport SouthPane from '../SouthPane';\nimport SaveQuery from '../SaveQuery';\nimport ScheduleQueryButton from '../ScheduleQueryButton';\nimport EstimateQueryCostButton from '../EstimateQueryCostButton';\nimport ShareSqlLabQuery from '../ShareSqlLabQuery';\nimport SqlEditorLeftBar from '../SqlEditorLeftBar';\nimport AceEditorWrapper from '../AceEditorWrapper';\nimport RunQueryActionButton from '../RunQueryActionButton';\nimport QueryLimitSelect from '../QueryLimitSelect';\n\nconst bootstrapData = getBootstrapData();\nconst validatorMap =\n  bootstrapData?.common?.conf?.SQL_VALIDATORS_BY_ENGINE || {};\nconst scheduledQueriesConf = bootstrapData?.common?.conf?.SCHEDULED_QUERIES;\n\nconst StyledToolbar = styled.div`\n  padding: ${({ theme }) => theme.gridUnit * 2}px;\n  background: ${({ theme }) => theme.colors.grayscale.light5};\n  display: flex;\n  justify-content: space-between;\n  border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  border-top: 0;\n\n  form {\n    margin-block-end: 0;\n  }\n\n  .leftItems,\n  .rightItems {\n    display: flex;\n    align-items: center;\n    & > span {\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n      display: inline-block;\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n\n  .limitDropdown {\n    white-space: nowrap;\n  }\n`;\n\nconst StyledSidebar = styled.div`\n  flex: 0 0 ${({ width }) => width}px;\n  width: ${({ width }) => width}px;\n  padding: ${({ theme, hide }) => (hide ? 0 : theme.gridUnit * 2.5)}px;\n  border-right: 1px solid\n    ${({ theme, hide }) =>\n      hide ? 'transparent' : theme.colors.grayscale.light2};\n`;\n\nconst StyledSqlEditor = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n\n    .schemaPane {\n      transition: transform ${theme.transitionTiming}s ease-in-out;\n    }\n\n    .queryPane {\n      flex: 1 1 auto;\n      padding: ${theme.gridUnit * 2}px;\n      overflow-y: auto;\n      overflow-x: scroll;\n    }\n\n    .schemaPane-enter-done,\n    .schemaPane-exit {\n      transform: translateX(0);\n      z-index: 7;\n    }\n\n    .schemaPane-exit-active {\n      transform: translateX(-120%);\n    }\n\n    .schemaPane-enter-active {\n      transform: translateX(0);\n      max-width: ${theme.gridUnit * 75}px;\n    }\n\n    .schemaPane-enter,\n    .schemaPane-exit-done {\n      max-width: 0;\n      transform: translateX(-120%);\n      overflow: hidden;\n    }\n\n    .schemaPane-exit-done + .queryPane {\n      margin-left: 0;\n    }\n\n    .gutter {\n      border-top: 1px solid ${theme.colors.grayscale.light2};\n      border-bottom: 1px solid ${theme.colors.grayscale.light2};\n      width: 3%;\n      margin: ${SQL_EDITOR_GUTTER_MARGIN}px 47%;\n    }\n\n    .gutter.gutter-vertical {\n      cursor: row-resize;\n    }\n  `}\n`;\n\nconst propTypes = {\n  tables: PropTypes.array.isRequired,\n  queryEditor: PropTypes.object.isRequired,\n  defaultQueryLimit: PropTypes.number.isRequired,\n  maxRow: PropTypes.number.isRequired,\n  displayLimit: PropTypes.number.isRequired,\n  saveQueryWarning: PropTypes.string,\n  scheduleQueryWarning: PropTypes.string,\n};\n\nconst SqlEditor = ({\n  tables,\n  queryEditor,\n  defaultQueryLimit,\n  maxRow,\n  displayLimit,\n  saveQueryWarning,\n  scheduleQueryWarning = null,\n}) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const { database, latestQuery, hideLeftBar } = useSelector(\n    ({ sqlLab: { unsavedQueryEditor, databases, queries } }) => {\n      let { dbId, latestQueryId, hideLeftBar } = queryEditor;\n      if (unsavedQueryEditor.id === queryEditor.id) {\n        dbId = unsavedQueryEditor.dbId || dbId;\n        latestQueryId = unsavedQueryEditor.latestQueryId || latestQueryId;\n        hideLeftBar = unsavedQueryEditor.hideLeftBar || hideLeftBar;\n      }\n      return {\n        database: databases[dbId],\n        latestQuery: queries[latestQueryId],\n        hideLeftBar,\n      };\n    },\n    shallowEqual,\n  );\n\n  const [height, setHeight] = useState(0);\n  const [autorun, setAutorun] = useState(queryEditor.autorun);\n  const [ctas, setCtas] = useState('');\n  const [northPercent, setNorthPercent] = useState(\n    queryEditor.northPercent || INITIAL_NORTH_PERCENT,\n  );\n  const [southPercent, setSouthPercent] = useState(\n    queryEditor.southPercent || INITIAL_SOUTH_PERCENT,\n  );\n  const [autocompleteEnabled, setAutocompleteEnabled] = useState(\n    getItem(LocalStorageKeys.sqllab__is_autocomplete_enabled, true),\n  );\n  const [showCreateAsModal, setShowCreateAsModal] = useState(false);\n  const [createAs, setCreateAs] = useState('');\n  const [showEmptyState, setShowEmptyState] = useState(false);\n\n  const sqlEditorRef = useRef(null);\n  const northPaneRef = useRef(null);\n\n  const startQuery = useCallback(\n    (ctasArg = false, ctas_method = CtasEnum.TABLE) => {\n      if (!database) {\n        return;\n      }\n\n      dispatch(\n        runQueryFromSqlEditor(\n          database,\n          queryEditor,\n          defaultQueryLimit,\n          ctasArg ? ctas : '',\n          ctasArg,\n          ctas_method,\n        ),\n      );\n      dispatch(setActiveSouthPaneTab('Results'));\n    },\n    [ctas, database, defaultQueryLimit, dispatch, queryEditor],\n  );\n\n  const stopQuery = useCallback(() => {\n    if (latestQuery && ['running', 'pending'].indexOf(latestQuery.state) >= 0) {\n      dispatch(postStopQuery(latestQuery));\n    }\n    return false;\n  }, [dispatch, latestQuery]);\n\n  const runQuery = () => {\n    if (database) {\n      startQuery();\n    }\n  };\n\n  useEffect(() => {\n    if (autorun) {\n      setAutorun(false);\n      dispatch(queryEditorSetAutorun(queryEditor, false));\n      startQuery();\n    }\n  }, [autorun, dispatch, queryEditor, startQuery]);\n\n  // One layer of abstraction for easy spying in unit tests\n  const getSqlEditorHeight = () =>\n    sqlEditorRef.current\n      ? sqlEditorRef.current.clientHeight - SQL_EDITOR_PADDING * 2\n      : 0;\n\n  const getHotkeyConfig = useCallback(() => {\n    // Get the user's OS\n    const userOS = detectOS();\n    const base = [\n      {\n        name: 'runQuery1',\n        key: 'ctrl+r',\n        descr: t('Run query'),\n        func: () => {\n          if (queryEditor.sql.trim() !== '') {\n            startQuery();\n          }\n        },\n      },\n      {\n        name: 'runQuery2',\n        key: 'ctrl+enter',\n        descr: t('Run query'),\n        func: () => {\n          if (queryEditor.sql.trim() !== '') {\n            startQuery();\n          }\n        },\n      },\n      {\n        name: 'newTab',\n        key: userOS === 'Windows' ? 'ctrl+q' : 'ctrl+t',\n        descr: t('New tab'),\n        func: () => {\n          dispatch(addNewQueryEditor());\n        },\n      },\n      {\n        name: 'stopQuery',\n        key: userOS === 'MacOS' ? 'ctrl+x' : 'ctrl+e',\n        descr: t('Stop query'),\n        func: stopQuery,\n      },\n    ];\n\n    if (userOS === 'MacOS') {\n      base.push({\n        name: 'previousLine',\n        key: 'ctrl+p',\n        descr: t('Previous Line'),\n        func: editor => {\n          editor.navigateUp(1);\n        },\n      });\n    }\n\n    return base;\n  }, [dispatch, queryEditor.sql, startQuery, stopQuery]);\n\n  const onBeforeUnload = useEffectEvent(event => {\n    if (\n      database?.extra_json?.cancel_query_on_windows_unload &&\n      latestQuery?.state === 'running'\n    ) {\n      event.preventDefault();\n      stopQuery();\n    }\n  });\n\n  useEffect(() => {\n    // We need to measure the height of the sql editor post render to figure the height of\n    // the south pane so it gets rendered properly\n    setHeight(getSqlEditorHeight());\n    const handleWindowResizeWithThrottle = throttle(\n      () => setHeight(getSqlEditorHeight()),\n      WINDOW_RESIZE_THROTTLE_MS,\n    );\n\n    window.addEventListener('resize', handleWindowResizeWithThrottle);\n    window.addEventListener('beforeunload', onBeforeUnload);\n\n    return () => {\n      window.removeEventListener('resize', handleWindowResizeWithThrottle);\n      window.removeEventListener('beforeunload', onBeforeUnload);\n    };\n    // TODO: Remove useEffectEvent deps once https://github.com/facebook/react/pull/25881 is released\n  }, [onBeforeUnload]);\n\n  useEffect(() => {\n    if (!database || isEmpty(database)) {\n      setShowEmptyState(true);\n    }\n  }, [database]);\n\n  useEffect(() => {\n    // setup hotkeys\n    Mousetrap.reset();\n    const hotkeys = getHotkeyConfig();\n    hotkeys.forEach(keyConfig => {\n      Mousetrap.bind([keyConfig.key], keyConfig.func);\n    });\n  }, [getHotkeyConfig, latestQuery]);\n\n  const onResizeStart = () => {\n    // Set the heights on the ace editor and the ace content area after drag starts\n    // to smooth out the visual transition to the new heights when drag ends\n    document.getElementsByClassName('ace_content')[0].style.height = '100%';\n  };\n\n  const onResizeEnd = ([northPercent, southPercent]) => {\n    setNorthPercent(northPercent);\n    setSouthPercent(southPercent);\n\n    if (northPaneRef.current?.clientHeight) {\n      dispatch(persistEditorHeight(queryEditor, northPercent, southPercent));\n    }\n  };\n\n  const setQueryEditorAndSaveSql = useCallback(\n    sql => {\n      dispatch(queryEditorSetAndSaveSql(queryEditor, sql));\n    },\n    [dispatch, queryEditor],\n  );\n\n  const setQueryEditorAndSaveSqlWithDebounce = useMemo(\n    () => debounce(setQueryEditorAndSaveSql, SET_QUERY_EDITOR_SQL_DEBOUNCE_MS),\n    [setQueryEditorAndSaveSql],\n  );\n\n  const canValidateQuery = () => {\n    // Check whether or not we can validate the current query based on whether\n    // or not the backend has a validator configured for it.\n    if (database) {\n      return validatorMap.hasOwnProperty(database.backend);\n    }\n    return false;\n  };\n\n  const requestValidation = useCallback(\n    sql => {\n      if (database) {\n        dispatch(validateQuery(queryEditor, sql));\n      }\n    },\n    [database, dispatch, queryEditor],\n  );\n\n  const requestValidationWithDebounce = useMemo(\n    () => debounce(requestValidation, VALIDATION_DEBOUNCE_MS),\n    [requestValidation],\n  );\n\n  const onSqlChanged = sql => {\n    dispatch(queryEditorSetSql(queryEditor, sql));\n    setQueryEditorAndSaveSqlWithDebounce(sql);\n    // Request server-side validation of the query text\n    if (canValidateQuery()) {\n      // NB. requestValidation is debounced\n      requestValidationWithDebounce(sql);\n    }\n  };\n\n  // Return the heights for the ace editor and the south pane as an object\n  // given the height of the sql editor, north pane percent and south pane percent.\n  const getAceEditorAndSouthPaneHeights = (\n    height,\n    northPercent,\n    southPercent,\n  ) => ({\n    aceEditorHeight:\n      (height * northPercent) / (theme.gridUnit * 25) -\n      (SQL_EDITOR_GUTTER_HEIGHT / 2 + SQL_EDITOR_GUTTER_MARGIN) -\n      SQL_TOOLBAR_HEIGHT,\n    southPaneHeight:\n      (height * southPercent) / (theme.gridUnit * 25) -\n      (SQL_EDITOR_GUTTER_HEIGHT / 2 + SQL_EDITOR_GUTTER_MARGIN),\n  });\n\n  const getQueryCostEstimate = () => {\n    if (database) {\n      dispatch(estimateQueryCost(queryEditor));\n    }\n  };\n\n  const handleToggleAutocompleteEnabled = () => {\n    setItem(\n      LocalStorageKeys.sqllab__is_autocomplete_enabled,\n      !autocompleteEnabled,\n    );\n    setAutocompleteEnabled(!autocompleteEnabled);\n  };\n\n  const elementStyle = (dimension, elementSize, gutterSize) => ({\n    [dimension]: `calc(${elementSize}% - ${\n      gutterSize + SQL_EDITOR_GUTTER_MARGIN\n    }px)`,\n  });\n\n  const createTableAs = () => {\n    startQuery(true, CtasEnum.TABLE);\n    setShowCreateAsModal(false);\n    setCtas('');\n  };\n\n  const createViewAs = () => {\n    startQuery(true, CtasEnum.VIEW);\n    setShowCreateAsModal(false);\n    setCtas('');\n  };\n\n  const ctasChanged = event => {\n    setCtas(event.target.value);\n  };\n\n  const renderDropdown = () => {\n    const qe = queryEditor;\n    const successful = latestQuery?.state === 'success';\n    const scheduleToolTip = successful\n      ? t('Schedule the query periodically')\n      : t('You must run the query successfully first');\n    return (\n      <Menu css={{ width: theme.gridUnit * 44 }}>\n        <Menu.Item css={{ display: 'flex', justifyContent: 'space-between' }}>\n          {' '}\n          <span>{t('Autocomplete')}</span>{' '}\n          <AntdSwitch\n            checked={autocompleteEnabled}\n            onChange={handleToggleAutocompleteEnabled}\n            name=\"autocomplete-switch\"\n          />{' '}\n        </Menu.Item>\n        {isFeatureEnabled(FeatureFlag.ENABLE_TEMPLATE_PROCESSING) && (\n          <Menu.Item>\n            <TemplateParamsEditor\n              language=\"json\"\n              onChange={params => {\n                dispatch(queryEditorSetTemplateParams(qe, params));\n              }}\n              queryEditorId={qe.id}\n            />\n          </Menu.Item>\n        )}\n        {!isEmpty(scheduledQueriesConf) && (\n          <Menu.Item>\n            <ScheduleQueryButton\n              defaultLabel={qe.name}\n              sql={qe.sql}\n              onSchedule={query => dispatch(scheduleQuery(query))}\n              schema={qe.schema}\n              dbId={qe.dbId}\n              scheduleQueryWarning={scheduleQueryWarning}\n              tooltip={scheduleToolTip}\n              disabled={!successful}\n            />\n          </Menu.Item>\n        )}\n      </Menu>\n    );\n  };\n\n  const onSaveQuery = async (query, clientId) => {\n    const savedQuery = await dispatch(saveQuery(query, clientId));\n    dispatch(addSavedQueryToTabState(queryEditor, savedQuery));\n  };\n\n  const renderEditorBottomBar = () => {\n    const { allow_ctas: allowCTAS, allow_cvas: allowCVAS } = database || {};\n\n    const showMenu = allowCTAS || allowCVAS;\n    const runMenuBtn = (\n      <Menu>\n        {allowCTAS && (\n          <Menu.Item\n            onClick={() => {\n              setShowCreateAsModal(true);\n              setCreateAs(CtasEnum.TABLE);\n            }}\n            key=\"1\"\n          >\n            {t('CREATE TABLE AS')}\n          </Menu.Item>\n        )}\n        {allowCVAS && (\n          <Menu.Item\n            onClick={() => {\n              setShowCreateAsModal(true);\n              setCreateAs(CtasEnum.VIEW);\n            }}\n            key=\"2\"\n          >\n            {t('CREATE VIEW AS')}\n          </Menu.Item>\n        )}\n      </Menu>\n    );\n\n    return (\n      <StyledToolbar className=\"sql-toolbar\" id=\"js-sql-toolbar\">\n        <div className=\"leftItems\">\n          <span>\n            <RunQueryActionButton\n              allowAsync={database ? database.allow_run_async : false}\n              queryEditorId={queryEditor.id}\n              queryState={latestQuery?.state}\n              runQuery={runQuery}\n              stopQuery={stopQuery}\n              overlayCreateAsMenu={showMenu ? runMenuBtn : null}\n            />\n          </span>\n          {isFeatureEnabled(FeatureFlag.ESTIMATE_QUERY_COST) &&\n            database?.allows_cost_estimate && (\n              <span>\n                <EstimateQueryCostButton\n                  getEstimate={getQueryCostEstimate}\n                  queryEditorId={queryEditor.id}\n                  tooltip={t('Estimate the cost before running a query')}\n                />\n              </span>\n            )}\n          <span>\n            <QueryLimitSelect\n              queryEditorId={queryEditor.id}\n              maxRow={maxRow}\n              defaultQueryLimit={defaultQueryLimit}\n            />\n          </span>\n          {latestQuery && (\n            <Timer\n              startTime={latestQuery.startDttm}\n              endTime={latestQuery.endDttm}\n              state={STATE_TYPE_MAP[latestQuery.state]}\n              isRunning={latestQuery.state === 'running'}\n            />\n          )}\n        </div>\n        <div className=\"rightItems\">\n          <span>\n            <SaveQuery\n              queryEditorId={queryEditor.id}\n              columns={latestQuery?.results?.columns || []}\n              onSave={onSaveQuery}\n              onUpdate={(query, remoteId, id) =>\n                dispatch(updateSavedQuery(query, remoteId, id))\n              }\n              saveQueryWarning={saveQueryWarning}\n              database={database}\n            />\n          </span>\n          <span>\n            <ShareSqlLabQuery queryEditorId={queryEditor.id} />\n          </span>\n          <AntdDropdown overlay={renderDropdown()} trigger=\"click\">\n            <Icons.MoreHoriz iconColor={theme.colors.grayscale.base} />\n          </AntdDropdown>\n        </div>\n      </StyledToolbar>\n    );\n  };\n\n  const queryPane = () => {\n    const hotkeys = getHotkeyConfig();\n    const { aceEditorHeight, southPaneHeight } =\n      getAceEditorAndSouthPaneHeights(height, northPercent, southPercent);\n    return (\n      <Split\n        expandToMin\n        className=\"queryPane\"\n        sizes={[northPercent, southPercent]}\n        elementStyle={elementStyle}\n        minSize={200}\n        direction=\"vertical\"\n        gutterSize={SQL_EDITOR_GUTTER_HEIGHT}\n        onDragStart={onResizeStart}\n        onDragEnd={onResizeEnd}\n      >\n        <div ref={northPaneRef} className=\"north-pane\">\n          <AceEditorWrapper\n            autocomplete={autocompleteEnabled}\n            onBlur={setQueryEditorAndSaveSql}\n            onChange={onSqlChanged}\n            queryEditorId={queryEditor.id}\n            database={database}\n            extendedTables={tables}\n            height={`${aceEditorHeight}px`}\n            hotkeys={hotkeys}\n          />\n          {renderEditorBottomBar(hotkeys)}\n        </div>\n        <SouthPane\n          queryEditorId={queryEditor.id}\n          latestQueryId={latestQuery?.id}\n          height={southPaneHeight}\n          displayLimit={displayLimit}\n          defaultQueryLimit={defaultQueryLimit}\n        />\n      </Split>\n    );\n  };\n\n  const createViewModalTitle =\n    createAs === CtasEnum.VIEW ? 'CREATE VIEW AS' : 'CREATE TABLE AS';\n\n  const createModalPlaceHolder =\n    createAs === CtasEnum.VIEW\n      ? t('Specify name to CREATE VIEW AS schema in: public')\n      : t('Specify name to CREATE TABLE AS schema in: public');\n\n  const leftBarStateClass = hideLeftBar\n    ? 'schemaPane-exit-done'\n    : 'schemaPane-enter-done';\n  return (\n    <StyledSqlEditor ref={sqlEditorRef} className=\"SqlEditor\">\n      <CSSTransition classNames=\"schemaPane\" in={!hideLeftBar} timeout={300}>\n        <ResizableSidebar\n          id={`sqllab:${queryEditor.id}`}\n          minWidth={SQL_EDITOR_LEFTBAR_WIDTH}\n          initialWidth={SQL_EDITOR_LEFTBAR_WIDTH}\n          enable={!hideLeftBar}\n        >\n          {adjustedWidth => (\n            <StyledSidebar\n              className={`schemaPane ${leftBarStateClass}`}\n              width={adjustedWidth}\n              hide={hideLeftBar}\n            >\n              <SqlEditorLeftBar\n                database={database}\n                queryEditorId={queryEditor.id}\n                tables={tables}\n                setEmptyState={bool => setShowEmptyState(bool)}\n              />\n            </StyledSidebar>\n          )}\n        </ResizableSidebar>\n      </CSSTransition>\n      {showEmptyState ? (\n        <EmptyStateBig\n          image=\"vector.svg\"\n          title={t('Select a database to write a query')}\n          description={t(\n            'Choose one of the available databases from the panel on the left.',\n          )}\n        />\n      ) : (\n        queryPane()\n      )}\n      <Modal\n        visible={showCreateAsModal}\n        title={t(createViewModalTitle)}\n        onHide={() => setShowCreateAsModal(false)}\n        footer={\n          <>\n            <Button onClick={() => setShowCreateAsModal(false)}>\n              {t('Cancel')}\n            </Button>\n            {createAs === CtasEnum.TABLE && (\n              <Button\n                buttonStyle=\"primary\"\n                disabled={ctas.length === 0}\n                onClick={createTableAs}\n              >\n                {t('Create')}\n              </Button>\n            )}\n            {createAs === CtasEnum.VIEW && (\n              <Button\n                buttonStyle=\"primary\"\n                disabled={ctas.length === 0}\n                onClick={createViewAs}\n              >\n                {t('Create')}\n              </Button>\n            )}\n          </>\n        }\n      >\n        <span>{t('Name')}</span>\n        <Input placeholder={createModalPlaceHolder} onChange={ctasChanged} />\n      </Modal>\n    </StyledSqlEditor>\n  );\n};\n\nSqlEditor.propTypes = propTypes;\n\nexport default SqlEditor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}