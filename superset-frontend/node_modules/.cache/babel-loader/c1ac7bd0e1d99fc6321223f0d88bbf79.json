{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport shortid from 'shortid';\nimport { t, styled } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport Fieldset from './Fieldset';\nimport { recurseReactClone } from './utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nvar SortOrder;\n(function (SortOrder) {\n  SortOrder[SortOrder[\"asc\"] = 1] = \"asc\";\n  SortOrder[SortOrder[\"desc\"] = 2] = \"desc\";\n  SortOrder[SortOrder[\"unsort\"] = 0] = \"unsort\";\n})(SortOrder || (SortOrder = {}));\nfunction createCollectionArray(collection) {\n  return Object.keys(collection).map((k) => collection[k]);\n}\nfunction createKeyedCollection(arr) {\n  const collectionArray = arr.map((o) => ({\n    ...o,\n    id: o.id || shortid.generate() }));\n\n  const collection = {};\n  collectionArray.forEach((o) => {\n    collection[o.id] = o;\n  });\n  return {\n    collection,\n    collectionArray };\n\n}\nconst CrudTableWrapper = styled.div`\n  ${(_ref) => {let { stickyHeader } = _ref;return stickyHeader &&\n  `\n      height: 350px;\n      overflow-y: auto;\n      overflow-x: auto;\n\n      .table {\n        min-width: 800px;\n      }\n      thead th {\n        background: #fff;\n        position: sticky;\n        top: 0;\n        z-index: 9;\n        min\n      }\n    `;}}\n  ${(_ref2) => {let { theme } = _ref2;return `\n    th span {\n      vertical-align: ${theme.gridUnit * -2}px;\n    }\n    .text-right {\n      text-align: right;\n    }\n    .empty-collection {\n      padding: ${theme.gridUnit * 2 + 2}px;\n    }\n    .tiny-cell {\n      width: ${theme.gridUnit + 1}px;\n    }\n    i.fa-caret-down,\n    i.fa-caret-up {\n      width: ${theme.gridUnit + 1}px;\n    }\n    td.expanded {\n      border-top: 0;\n      padding: 0;\n    }\n  `;}}\n`;\nconst CrudButtonWrapper = styled.div`\n  text-align: right;\n  ${(_ref3) => {let { theme } = _ref3;return `margin-bottom: ${theme.gridUnit * 2}px`;}}\n`;\nconst StyledButtonWrapper = styled.span`\n  ${(_ref4) => {let { theme } = _ref4;return `\n    margin-top: ${theme.gridUnit * 3}px;\n    margin-left: ${theme.gridUnit * 3}px;\n  `;}}\n`;\nexport default class CRUDCollection extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const { collection, collectionArray } = createKeyedCollection(props.collection);\n    this.state = {\n      expandedColumns: {},\n      collection,\n      collectionArray,\n      sortColumn: '',\n      sort: 0 };\n\n    this.renderItem = this.renderItem.bind(this);\n    this.onAddItem = this.onAddItem.bind(this);\n    this.renderExpandableSection = this.renderExpandableSection.bind(this);\n    this.getLabel = this.getLabel.bind(this);\n    this.onFieldsetChange = this.onFieldsetChange.bind(this);\n    this.renderTableBody = this.renderTableBody.bind(this);\n    this.changeCollection = this.changeCollection.bind(this);\n    this.sortColumn = this.sortColumn.bind(this);\n    this.renderSortIcon = this.renderSortIcon.bind(this);\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.collection !== this.props.collection) {\n      const { collection, collectionArray } = createKeyedCollection(nextProps.collection);\n      this.setState({\n        collection,\n        collectionArray });\n\n    }\n  }\n  onCellChange(id, col, val) {\n    this.changeCollection({\n      ...this.state.collection,\n      [id]: {\n        ...this.state.collection[id],\n        [col]: val } });\n\n\n  }\n  onAddItem() {\n    if (this.props.itemGenerator) {\n      let newItem = this.props.itemGenerator();\n      if (!newItem.id) {\n        newItem = { ...newItem, id: shortid.generate() };\n      }\n      this.changeCollection(this.state.collection, newItem);\n    }\n  }\n  onFieldsetChange(item) {\n    this.changeCollection({\n      ...this.state.collection,\n      [item.id]: item });\n\n  }\n  getLabel(col) {\n    const { columnLabels } = this.props;\n    let label = columnLabels != null && columnLabels[col] ? columnLabels[col] : col;\n    if (label.startsWith('__')) {\n      // special label-free columns (ie: caret for expand, delete cross)\n      label = '';\n    }\n    return label;\n  }\n  changeCollection(collection, newItem) {\n    this.setState({ collection });\n    if (this.props.onChange) {\n      const collectionArray = this.state.collectionArray.\n      map((c) => collection[c.id])\n      // filter out removed items\n      .filter((c) => c !== undefined);\n      if (newItem) {\n        collectionArray.unshift(newItem);\n      }\n      this.props.onChange(collectionArray);\n    }\n  }\n  deleteItem(id) {\n    const newColl = { ...this.state.collection };\n    delete newColl[id];\n    this.changeCollection(newColl);\n  }\n  effectiveTableColumns() {\n    const { tableColumns, allowDeletes, expandFieldset } = this.props;\n    const cols = allowDeletes ?\n    tableColumns.concat(['__actions']) :\n    tableColumns;\n    return expandFieldset ? ['__expand'].concat(cols) : cols;\n  }\n  toggleExpand(id) {\n    this.onCellChange(id, '__expanded', false);\n    this.setState((prevState) => ({\n      expandedColumns: {\n        ...prevState.expandedColumns,\n        [id]: !prevState.expandedColumns[id] } }));\n\n\n  }\n  sortColumn(col, sort) {if (sort === void 0) {sort = SortOrder.unsort;}\n    const { sortColumns } = this.props;\n    // default sort logic sorting string, boolean and number\n    const compareSort = (m, n) => {\n      if (typeof m === 'string') {\n        return (m || ' ').localeCompare(n);\n      }\n      return m - n;\n    };\n    return () => {\n      if (sortColumns != null && _includesInstanceProperty(sortColumns).call(sortColumns, col)) {\n        // display in unsorted order if no sort specified\n        if (sort === SortOrder.unsort) {\n          const { collection } = createKeyedCollection(this.props.collection);\n          const collectionArray = createCollectionArray(collection);\n          this.setState({\n            collectionArray,\n            sortColumn: '',\n            sort });\n\n          return;\n        }\n        // newly ordered collection\n        const sorted = [...this.state.collectionArray].sort((a, b) => compareSort(a[col], b[col]));\n        const newCollection = sort === SortOrder.asc ? sorted : sorted.reverse();\n        this.setState((prevState) => ({\n          ...prevState,\n          collectionArray: newCollection,\n          sortColumn: col,\n          sort }));\n\n      }\n    };\n  }\n  renderSortIcon(col) {\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.asc) {\n      return ___EmotionJSX(Icons.SortAsc, { onClick: this.sortColumn(col, 2) });\n    }\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.desc) {\n      return ___EmotionJSX(Icons.SortDesc, { onClick: this.sortColumn(col, 0) });\n    }\n    return ___EmotionJSX(Icons.Sort, { onClick: this.sortColumn(col, 1) });\n  }\n  renderHeaderRow() {\n    const cols = this.effectiveTableColumns();\n    const { allowDeletes, expandFieldset, extraButtons, sortColumns } = this.props;\n    return ___EmotionJSX(\"thead\", null,\n    ___EmotionJSX(\"tr\", null,\n    expandFieldset && ___EmotionJSX(\"th\", { \"aria-label\": \"Expand\", className: \"tiny-cell\" }),\n    cols.map((col) => ___EmotionJSX(\"th\", { key: col },\n    this.getLabel(col),\n    (sortColumns == null ? void 0 : _includesInstanceProperty(sortColumns).call(sortColumns, col)) && this.renderSortIcon(col))),\n\n    extraButtons,\n    allowDeletes && ___EmotionJSX(\"th\", { key: \"delete-item\", \"aria-label\": \"Delete\", className: \"tiny-cell\" })));\n\n\n  }\n  renderExpandableSection(item) {\n    const propsGenerator = () => ({ item, onChange: this.onFieldsetChange });\n    return recurseReactClone(this.props.expandFieldset, Fieldset, propsGenerator);\n  }\n  getCellProps(record, col) {var _this$props$itemCellP;\n    const cellPropsFn = (_this$props$itemCellP = this.props.itemCellProps) == null ? void 0 : _this$props$itemCellP[col];\n    const val = record[col];\n    return cellPropsFn ? cellPropsFn(val, this.getLabel(col), record) : {};\n  }\n  renderCell(record, col) {var _this$props$itemRende;\n    const renderer = (_this$props$itemRende = this.props.itemRenderers) == null ? void 0 : _this$props$itemRende[col];\n    const val = record[col];\n    const onChange = this.onCellChange.bind(this, record.id, col);\n    return renderer ? renderer(val, onChange, this.getLabel(col), record) : val;\n  }\n  renderItem(record) {\n    const { allowAddItem, allowDeletes, expandFieldset, tableColumns } = this.props;\n    /* eslint-disable no-underscore-dangle */\n    const isExpanded = !!this.state.expandedColumns[record.id] || record.__expanded;\n    let tds = [];\n    if (expandFieldset) {\n      tds.push(___EmotionJSX(\"td\", { key: \"__expand\", className: \"expand\" },\n      ___EmotionJSX(\"i\", { role: \"button\", \"aria-label\": \"Toggle expand\", tabIndex: 0, className: `fa fa-caret-${isExpanded ? 'down' : 'right'} text-primary pointer`, onClick: this.toggleExpand.bind(this, record.id) })));\n\n    }\n    tds = tds.concat(tableColumns.map((col) => ___EmotionJSX(\"td\", _extends({}, this.getCellProps(record, col), { key: col }),\n    this.renderCell(record, col))));\n\n    if (allowAddItem) {\n      tds.push(___EmotionJSX(\"td\", { key: \"add\" }));\n    }\n    if (allowDeletes) {\n      tds.push(___EmotionJSX(\"td\", { key: \"__actions\", className: \"text-primary\" },\n      ___EmotionJSX(Icons.Trash, { \"aria-label\": \"Delete item\", className: \"pointer\", role: \"button\", tabIndex: 0, onClick: this.deleteItem.bind(this, record.id) })));\n\n    }\n    const trs = [\n    ___EmotionJSX(\"tr\", { 'data-test': 'table-row', className: \"row\", key: record.id },\n    tds)];\n\n\n    if (isExpanded) {\n      trs.push(___EmotionJSX(\"tr\", { className: \"exp\", key: `exp__${record.id}` },\n      ___EmotionJSX(\"td\", { colSpan: this.effectiveTableColumns().length, className: \"expanded\" },\n      ___EmotionJSX(\"div\", null, this.renderExpandableSection(record)))));\n\n\n    }\n    return trs;\n  }\n  renderEmptyCell() {\n    return ___EmotionJSX(\"tr\", null,\n    ___EmotionJSX(\"td\", { className: \"empty-collection\" }, this.props.emptyMessage));\n\n  }\n  renderTableBody() {\n    const data = this.state.collectionArray;\n    const content = data.length ?\n    data.map((d) => this.renderItem(d)) :\n    this.renderEmptyCell();\n    return ___EmotionJSX(\"tbody\", null, content);\n  }\n  render() {\n    return ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(CrudButtonWrapper, null,\n    this.props.allowAddItem && ___EmotionJSX(StyledButtonWrapper, null,\n    ___EmotionJSX(Button, { buttonSize: \"small\", buttonStyle: \"tertiary\", onClick: this.onAddItem },\n    ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }), ' ',\n    t('Add item')))),\n\n\n\n    ___EmotionJSX(CrudTableWrapper, { className: \"CRUD\", stickyHeader: this.props.stickyHeader },\n    ___EmotionJSX(\"table\", { className: \"table\" },\n    this.renderHeaderRow(),\n    this.renderTableBody())));\n\n\n\n  }}","map":{"version":3,"mappings":"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","names":["React","shortid","t","styled","Button","Icons","Fieldset","recurseReactClone","SortOrder","createCollectionArray","collection","Object","keys","map","k","createKeyedCollection","arr","collectionArray","o","id","generate","forEach","CrudTableWrapper","div","stickyHeader","theme","gridUnit","CrudButtonWrapper","StyledButtonWrapper","span","CRUDCollection","PureComponent","constructor","props","state","expandedColumns","sortColumn","sort","renderItem","bind","onAddItem","renderExpandableSection","getLabel","onFieldsetChange","renderTableBody","changeCollection","renderSortIcon","UNSAFE_componentWillReceiveProps","nextProps","setState","onCellChange","col","val","itemGenerator","newItem","item","columnLabels","label","startsWith","onChange","c","filter","undefined","unshift","deleteItem","newColl","effectiveTableColumns","tableColumns","allowDeletes","expandFieldset","cols","concat","toggleExpand","prevState","unsort","sortColumns","compareSort","m","n","localeCompare","sorted","a","b","newCollection","asc","reverse","desc","renderHeaderRow","extraButtons","propsGenerator","getCellProps","record","cellPropsFn","itemCellProps","renderCell","renderer","itemRenderers","allowAddItem","isExpanded","__expanded","tds","push","trs","length","renderEmptyCell","emptyMessage","data","content","d","render"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Datasource/CollectionTable.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ReactNode } from 'react';\nimport shortid from 'shortid';\nimport { t, styled } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport Fieldset from './Fieldset';\nimport { recurseReactClone } from './utils';\n\ninterface CRUDCollectionProps {\n  allowAddItem?: boolean;\n  allowDeletes?: boolean;\n  collection: Array<object>;\n  columnLabels?: object;\n  emptyMessage?: ReactNode;\n  expandFieldset?: ReactNode;\n  extraButtons?: ReactNode;\n  itemGenerator?: () => any;\n  itemCellProps?: ((\n    val: unknown,\n    label: string,\n    record: any,\n  ) => React.DetailedHTMLProps<\n    React.TdHTMLAttributes<HTMLTableCellElement>,\n    HTMLTableCellElement\n  >)[];\n  itemRenderers?: ((\n    val: unknown,\n    onChange: () => void,\n    label: string,\n    record: any,\n  ) => ReactNode)[];\n  onChange?: (arg0: any) => void;\n  tableColumns: Array<any>;\n  sortColumns: Array<string>;\n  stickyHeader?: boolean;\n}\n\ntype Sort = number | string | boolean | any;\n\nenum SortOrder {\n  asc = 1,\n  desc = 2,\n  unsort = 0,\n}\n\ninterface CRUDCollectionState {\n  collection: object;\n  collectionArray: Array<object>;\n  expandedColumns: object;\n  sortColumn: string;\n  sort: SortOrder;\n}\n\nfunction createCollectionArray(collection: object) {\n  return Object.keys(collection).map(k => collection[k]);\n}\n\nfunction createKeyedCollection(arr: Array<object>) {\n  const collectionArray = arr.map((o: any) => ({\n    ...o,\n    id: o.id || shortid.generate(),\n  }));\n\n  const collection = {};\n  collectionArray.forEach((o: any) => {\n    collection[o.id] = o;\n  });\n\n  return {\n    collection,\n    collectionArray,\n  };\n}\n\nconst CrudTableWrapper = styled.div<{ stickyHeader?: boolean }>`\n  ${({ stickyHeader }) =>\n    stickyHeader &&\n    `\n      height: 350px;\n      overflow-y: auto;\n      overflow-x: auto;\n\n      .table {\n        min-width: 800px;\n      }\n      thead th {\n        background: #fff;\n        position: sticky;\n        top: 0;\n        z-index: 9;\n        min\n      }\n    `}\n  ${({ theme }) => `\n    th span {\n      vertical-align: ${theme.gridUnit * -2}px;\n    }\n    .text-right {\n      text-align: right;\n    }\n    .empty-collection {\n      padding: ${theme.gridUnit * 2 + 2}px;\n    }\n    .tiny-cell {\n      width: ${theme.gridUnit + 1}px;\n    }\n    i.fa-caret-down,\n    i.fa-caret-up {\n      width: ${theme.gridUnit + 1}px;\n    }\n    td.expanded {\n      border-top: 0;\n      padding: 0;\n    }\n  `}\n`;\n\nconst CrudButtonWrapper = styled.div`\n  text-align: right;\n  ${({ theme }) => `margin-bottom: ${theme.gridUnit * 2}px`}\n`;\n\nconst StyledButtonWrapper = styled.span`\n  ${({ theme }) => `\n    margin-top: ${theme.gridUnit * 3}px;\n    margin-left: ${theme.gridUnit * 3}px;\n  `}\n`;\n\nexport default class CRUDCollection extends React.PureComponent<\n  CRUDCollectionProps,\n  CRUDCollectionState\n> {\n  constructor(props: CRUDCollectionProps) {\n    super(props);\n\n    const { collection, collectionArray } = createKeyedCollection(\n      props.collection,\n    );\n    this.state = {\n      expandedColumns: {},\n      collection,\n      collectionArray,\n      sortColumn: '',\n      sort: 0,\n    };\n    this.renderItem = this.renderItem.bind(this);\n    this.onAddItem = this.onAddItem.bind(this);\n    this.renderExpandableSection = this.renderExpandableSection.bind(this);\n    this.getLabel = this.getLabel.bind(this);\n    this.onFieldsetChange = this.onFieldsetChange.bind(this);\n    this.renderTableBody = this.renderTableBody.bind(this);\n    this.changeCollection = this.changeCollection.bind(this);\n    this.sortColumn = this.sortColumn.bind(this);\n    this.renderSortIcon = this.renderSortIcon.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: CRUDCollectionProps) {\n    if (nextProps.collection !== this.props.collection) {\n      const { collection, collectionArray } = createKeyedCollection(\n        nextProps.collection,\n      );\n      this.setState({\n        collection,\n        collectionArray,\n      });\n    }\n  }\n\n  onCellChange(id: number, col: string, val: boolean) {\n    this.changeCollection({\n      ...this.state.collection,\n      [id]: {\n        ...this.state.collection[id],\n        [col]: val,\n      },\n    });\n  }\n\n  onAddItem() {\n    if (this.props.itemGenerator) {\n      let newItem = this.props.itemGenerator();\n      if (!newItem.id) {\n        newItem = { ...newItem, id: shortid.generate() };\n      }\n      this.changeCollection(this.state.collection, newItem);\n    }\n  }\n\n  onFieldsetChange(item: any) {\n    this.changeCollection({\n      ...this.state.collection,\n      [item.id]: item,\n    });\n  }\n\n  getLabel(col: any) {\n    const { columnLabels } = this.props;\n    let label = columnLabels?.[col] ? columnLabels[col] : col;\n    if (label.startsWith('__')) {\n      // special label-free columns (ie: caret for expand, delete cross)\n      label = '';\n    }\n    return label;\n  }\n\n  changeCollection(collection: any, newItem?: object) {\n    this.setState({ collection });\n    if (this.props.onChange) {\n      const collectionArray = this.state.collectionArray\n        .map((c: { id: number }) => collection[c.id])\n        // filter out removed items\n        .filter(c => c !== undefined);\n\n      if (newItem) {\n        collectionArray.unshift(newItem);\n      }\n      this.props.onChange(collectionArray);\n    }\n  }\n\n  deleteItem(id: number) {\n    const newColl = { ...this.state.collection };\n    delete newColl[id];\n    this.changeCollection(newColl);\n  }\n\n  effectiveTableColumns() {\n    const { tableColumns, allowDeletes, expandFieldset } = this.props;\n    const cols = allowDeletes\n      ? tableColumns.concat(['__actions'])\n      : tableColumns;\n    return expandFieldset ? ['__expand'].concat(cols) : cols;\n  }\n\n  toggleExpand(id: any) {\n    this.onCellChange(id, '__expanded', false);\n    this.setState(prevState => ({\n      expandedColumns: {\n        ...prevState.expandedColumns,\n        [id]: !prevState.expandedColumns[id],\n      },\n    }));\n  }\n\n  sortColumn(col: string, sort = SortOrder.unsort) {\n    const { sortColumns } = this.props;\n    // default sort logic sorting string, boolean and number\n    const compareSort = (m: Sort, n: Sort) => {\n      if (typeof m === 'string') {\n        return (m || ' ').localeCompare(n);\n      }\n      return m - n;\n    };\n    return () => {\n      if (sortColumns?.includes(col)) {\n        // display in unsorted order if no sort specified\n        if (sort === SortOrder.unsort) {\n          const { collection } = createKeyedCollection(this.props.collection);\n          const collectionArray = createCollectionArray(collection);\n          this.setState({\n            collectionArray,\n            sortColumn: '',\n            sort,\n          });\n          return;\n        }\n\n        // newly ordered collection\n        const sorted = [...this.state.collectionArray].sort(\n          (a: object, b: object) => compareSort(a[col], b[col]),\n        );\n        const newCollection =\n          sort === SortOrder.asc ? sorted : sorted.reverse();\n\n        this.setState(prevState => ({\n          ...prevState,\n          collectionArray: newCollection,\n          sortColumn: col,\n          sort,\n        }));\n      }\n    };\n  }\n\n  renderSortIcon(col: string) {\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.asc) {\n      return <Icons.SortAsc onClick={this.sortColumn(col, 2)} />;\n    }\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.desc) {\n      return <Icons.SortDesc onClick={this.sortColumn(col, 0)} />;\n    }\n    return <Icons.Sort onClick={this.sortColumn(col, 1)} />;\n  }\n\n  renderHeaderRow() {\n    const cols = this.effectiveTableColumns();\n    const { allowDeletes, expandFieldset, extraButtons, sortColumns } =\n      this.props;\n    return (\n      <thead>\n        <tr>\n          {expandFieldset && <th aria-label=\"Expand\" className=\"tiny-cell\" />}\n          {cols.map(col => (\n            <th key={col}>\n              {this.getLabel(col)}\n              {sortColumns?.includes(col) && this.renderSortIcon(col)}\n            </th>\n          ))}\n          {extraButtons}\n          {allowDeletes && (\n            <th key=\"delete-item\" aria-label=\"Delete\" className=\"tiny-cell\" />\n          )}\n        </tr>\n      </thead>\n    );\n  }\n\n  renderExpandableSection(item: any) {\n    const propsGenerator = () => ({ item, onChange: this.onFieldsetChange });\n    return recurseReactClone(\n      this.props.expandFieldset,\n      Fieldset,\n      propsGenerator,\n    );\n  }\n\n  getCellProps(record: any, col: any) {\n    const cellPropsFn = this.props.itemCellProps?.[col];\n    const val = record[col];\n    return cellPropsFn ? cellPropsFn(val, this.getLabel(col), record) : {};\n  }\n\n  renderCell(record: any, col: any) {\n    const renderer = this.props.itemRenderers?.[col];\n    const val = record[col];\n    const onChange = this.onCellChange.bind(this, record.id, col);\n    return renderer ? renderer(val, onChange, this.getLabel(col), record) : val;\n  }\n\n  renderItem(record: any) {\n    const { allowAddItem, allowDeletes, expandFieldset, tableColumns } =\n      this.props;\n    /* eslint-disable no-underscore-dangle */\n    const isExpanded =\n      !!this.state.expandedColumns[record.id] || record.__expanded;\n    let tds = [];\n    if (expandFieldset) {\n      tds.push(\n        <td key=\"__expand\" className=\"expand\">\n          <i\n            role=\"button\"\n            aria-label=\"Toggle expand\"\n            tabIndex={0}\n            className={`fa fa-caret-${\n              isExpanded ? 'down' : 'right'\n            } text-primary pointer`}\n            onClick={this.toggleExpand.bind(this, record.id)}\n          />\n        </td>,\n      );\n    }\n    tds = tds.concat(\n      tableColumns.map(col => (\n        <td {...this.getCellProps(record, col)} key={col}>\n          {this.renderCell(record, col)}\n        </td>\n      )),\n    );\n    if (allowAddItem) {\n      tds.push(<td key=\"add\" />);\n    }\n    if (allowDeletes) {\n      tds.push(\n        <td\n          key=\"__actions\"\n          data-test=\"crud-delete-option\"\n          className=\"text-primary\"\n        >\n          <Icons.Trash\n            aria-label=\"Delete item\"\n            className=\"pointer\"\n            data-test=\"crud-delete-icon\"\n            role=\"button\"\n            tabIndex={0}\n            onClick={this.deleteItem.bind(this, record.id)}\n          />\n        </td>,\n      );\n    }\n    const trs = [\n      <tr {...{ 'data-test': 'table-row' }} className=\"row\" key={record.id}>\n        {tds}\n      </tr>,\n    ];\n    if (isExpanded) {\n      trs.push(\n        <tr className=\"exp\" key={`exp__${record.id}`}>\n          <td\n            colSpan={this.effectiveTableColumns().length}\n            className=\"expanded\"\n          >\n            <div>{this.renderExpandableSection(record)}</div>\n          </td>\n        </tr>,\n      );\n    }\n    return trs;\n  }\n\n  renderEmptyCell() {\n    return (\n      <tr>\n        <td className=\"empty-collection\">{this.props.emptyMessage}</td>\n      </tr>\n    );\n  }\n\n  renderTableBody() {\n    const data = this.state.collectionArray;\n    const content = data.length\n      ? data.map(d => this.renderItem(d))\n      : this.renderEmptyCell();\n    return <tbody data-test=\"table-content-rows\">{content}</tbody>;\n  }\n\n  render() {\n    return (\n      <>\n        <CrudButtonWrapper>\n          {this.props.allowAddItem && (\n            <StyledButtonWrapper>\n              <Button\n                buttonSize=\"small\"\n                buttonStyle=\"tertiary\"\n                onClick={this.onAddItem}\n                data-test=\"add-item-button\"\n              >\n                <i data-test=\"crud-add-table-item\" className=\"fa fa-plus\" />{' '}\n                {t('Add item')}\n              </Button>\n            </StyledButtonWrapper>\n          )}\n        </CrudButtonWrapper>\n        <CrudTableWrapper\n          className=\"CRUD\"\n          stickyHeader={this.props.stickyHeader}\n        >\n          <table data-test=\"crud-table\" className=\"table\">\n            {this.renderHeaderRow()}\n            {this.renderTableBody()}\n          </table>\n        </CrudTableWrapper>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}