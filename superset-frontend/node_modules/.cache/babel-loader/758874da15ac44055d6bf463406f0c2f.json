{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isUnaryOperator, isBinaryOperator, isSetOperator } from './Operator';\n//---------------------------------------------------\n// Type guards\n//---------------------------------------------------\nexport function isSimpleAdhocFilter(filter) {\n  return filter.expressionType === 'SIMPLE';\n}\nexport function isFreeFormAdhocFilter(filter) {\n  return filter.expressionType === 'SQL';\n}\nexport function isUnaryAdhocFilter(filter) {\n  return isUnaryOperator(filter.operator);\n}\nexport function isBinaryAdhocFilter(filter) {\n  return isBinaryOperator(filter.operator);\n}\nexport function isSetAdhocFilter(filter) {\n  return isSetOperator(filter.operator);\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAmBA,SAIEA,eAJF,EAKEC,gBALF,EAMEC,aANF,QAOO,YAPP;AA+CA;AACA;AACA;AAEA,OAAM,SAAUC,mBAAV,CACJC,MADI,EACe;EAEnB,OAAOA,MAAM,CAACC,cAAP,KAA0B,QAAjC;AACD;AAED,OAAM,SAAUC,qBAAV,CACJF,MADI,EACe;EAEnB,OAAOA,MAAM,CAACC,cAAP,KAA0B,KAAjC;AACD;AAED,OAAM,SAAUE,kBAAV,CACJH,MADI,EACqB;EAEzB,OAAOJ,eAAe,CAACI,MAAM,CAACI,QAAR,CAAtB;AACD;AAED,OAAM,SAAUC,mBAAV,CACJL,MADI,EACqB;EAEzB,OAAOH,gBAAgB,CAACG,MAAM,CAACI,QAAR,CAAvB;AACD;AAED,OAAM,SAAUE,gBAAV,CACJN,MADI,EACqB;EAEzB,OAAOF,aAAa,CAACE,MAAM,CAACI,QAAR,CAApB;AACD","names":["isUnaryOperator","isBinaryOperator","isSetOperator","isSimpleAdhocFilter","filter","expressionType","isFreeFormAdhocFilter","isUnaryAdhocFilter","operator","isBinaryAdhocFilter","isSetAdhocFilter"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/query/types/Filter.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  UnaryOperator,\n  BinaryOperator,\n  SetOperator,\n  isUnaryOperator,\n  isBinaryOperator,\n  isSetOperator,\n} from './Operator';\nimport { TimeGranularity } from '../../time-format';\n\ninterface BaseAdhocFilter {\n  clause: 'WHERE' | 'HAVING';\n  timeGrain?: TimeGranularity;\n  isExtra?: boolean;\n}\n\ninterface BaseSimpleAdhocFilter extends BaseAdhocFilter {\n  expressionType: 'SIMPLE';\n  subject: string;\n}\n\nexport type UnaryAdhocFilter = BaseSimpleAdhocFilter & {\n  operator: UnaryOperator;\n};\n\nexport type BinaryAdhocFilter = BaseSimpleAdhocFilter & {\n  operator: BinaryOperator;\n  comparator: string;\n};\n\nexport type SetAdhocFilter = BaseSimpleAdhocFilter & {\n  operator: SetOperator;\n  comparator: string[];\n};\n\nexport type SimpleAdhocFilter =\n  | UnaryAdhocFilter\n  | BinaryAdhocFilter\n  | SetAdhocFilter;\n\nexport interface FreeFormAdhocFilter extends BaseAdhocFilter {\n  expressionType: 'SQL';\n  sqlExpression: string;\n}\n\nexport type AdhocFilter = SimpleAdhocFilter | FreeFormAdhocFilter;\n\n//---------------------------------------------------\n// Type guards\n//---------------------------------------------------\n\nexport function isSimpleAdhocFilter(\n  filter: AdhocFilter,\n): filter is SimpleAdhocFilter {\n  return filter.expressionType === 'SIMPLE';\n}\n\nexport function isFreeFormAdhocFilter(\n  filter: AdhocFilter,\n): filter is FreeFormAdhocFilter {\n  return filter.expressionType === 'SQL';\n}\n\nexport function isUnaryAdhocFilter(\n  filter: SimpleAdhocFilter,\n): filter is UnaryAdhocFilter {\n  return isUnaryOperator(filter.operator);\n}\n\nexport function isBinaryAdhocFilter(\n  filter: SimpleAdhocFilter,\n): filter is BinaryAdhocFilter {\n  return isBinaryOperator(filter.operator);\n}\n\nexport function isSetAdhocFilter(\n  filter: SimpleAdhocFilter,\n): filter is SetAdhocFilter {\n  return isSetOperator(filter.operator);\n}\n"]},"metadata":{},"sourceType":"module"}