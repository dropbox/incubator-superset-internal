{"ast":null,"code":"/* eslint-disable no-underscore-dangle */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray } from '@superset-ui/core';\nexport const useVerboseMap = (dataset) => {\n  const verbose_map = {};\n  ensureIsArray(dataset == null ? void 0 : dataset.columns).forEach((column) => {\n    verbose_map[column.column_name] = column.verbose_name || column.column_name;\n  });\n  ensureIsArray(dataset == null ? void 0 : dataset.metrics).forEach((metric) => {\n    verbose_map[metric.metric_name] = metric.verbose_name || metric.metric_name;\n  });\n  return verbose_map;\n};","map":{"version":3,"mappings":"AAAA;AACA;;;;;;;;;;;;;;;;;;AAkBA,SAAyBA,aAAzB,QAA8C,mBAA9C;AAGA,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAD,KAAsB;EACjD,MAAMC,WAAW,GAAG,EAApB;EACAH,aAAa,CAACE,OAAD,oBAACA,OAAO,CAAEE,OAAV,CAAb,CAAgCC,OAAhC,CAAwC,CAACC,MAAD,KAAmB;IACzDH,WAAW,CAACG,MAAM,CAACC,WAAR,CAAX,GAAkCD,MAAM,CAACE,YAAP,IAAuBF,MAAM,CAACC,WAAhE;EACD,CAFD;EAGAP,aAAa,CAACE,OAAD,oBAACA,OAAO,CAAEO,OAAV,CAAb,CAAgCJ,OAAhC,CAAwC,CAACK,MAAD,KAAmB;IACzDP,WAAW,CAACO,MAAM,CAACC,WAAR,CAAX,GAAkCD,MAAM,CAACF,YAAP,IAAuBE,MAAM,CAACC,WAAhE;EACD,CAFD;EAGA,OAAOR,WAAP;AACD,CATM","names":["ensureIsArray","useVerboseMap","dataset","verbose_map","columns","forEach","column","column_name","verbose_name","metrics","metric","metric_name"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/hooks/apiResources/datasets.ts"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Column, Metric, ensureIsArray } from '@superset-ui/core';\nimport { Dataset } from 'src/components/Chart/types';\n\nexport const useVerboseMap = (dataset?: Dataset) => {\n  const verbose_map = {};\n  ensureIsArray(dataset?.columns).forEach((column: Column) => {\n    verbose_map[column.column_name] = column.verbose_name || column.column_name;\n  });\n  ensureIsArray(dataset?.metrics).forEach((metric: Metric) => {\n    verbose_map[metric.metric_name] = metric.verbose_name || metric.metric_name;\n  });\n  return verbose_map;\n};\n"]},"metadata":{},"sourceType":"module"}