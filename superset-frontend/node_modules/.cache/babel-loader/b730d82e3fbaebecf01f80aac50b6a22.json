{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, styled, SupersetClient } from '@superset-ui/core';\nimport React, { useMemo, useState } from 'react';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport Icons from 'src/components/Icons';\nimport ListView, { FilterOperator } from 'src/components/ListView';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { Tooltip } from 'src/components/Tooltip';\nimport SubMenu from 'src/features/home/SubMenu';\nimport rison from 'rison';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport RowLevelSecurityModal from 'src/features/rls/RowLevelSecurityModal';\nimport { createErrorHandler } from 'src/views/CRUD/utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Actions = styled.div`\n  color: ${(_ref) => {let { theme } = _ref;return theme.colors.grayscale.base;}};\n`;\nfunction RowLevelSecurityList(props) {\n  const { addDangerToast, addSuccessToast, user } = props;\n  const [ruleModalOpen, setRuleModalOpen] = useState(false);\n  const [currentRule, setCurrentRule] = useState(null);\n  const { state: { loading, resourceCount: rulesCount, resourceCollection: rules, bulkSelectEnabled }, hasPerm, fetchData, refreshData, toggleBulkSelect } = useListViewResource('rowlevelsecurity', t('Row Level Security'), addDangerToast, true, undefined, undefined, true);\n  function handleRuleEdit(rule) {\n    setCurrentRule(rule);\n    setRuleModalOpen(true);\n  }\n  function handleRuleDelete(_ref2, refreshData, addSuccessToast, addDangerToast) {let { id, name } = _ref2;\n    return SupersetClient.delete({\n      endpoint: `/api/v1/rowlevelsecurity/${id}` }).\n    then(() => {\n      refreshData();\n      addSuccessToast(t('Deleted %s', name));\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting %s: %s', name, errMsg))));\n  }\n  function handleBulkRulesDelete(rulesToDelete) {\n    const ids = rulesToDelete.map((_ref3) => {let { id } = _ref3;return id;});\n    return SupersetClient.delete({\n      endpoint: `/api/v1/rowlevelsecurity/?q=${rison.encode(ids)}` }).\n    then(() => {\n      refreshData();\n      addSuccessToast(t(`Deleted`));\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting rules: %s', errMsg))));\n  }\n  function handleRuleModalHide() {\n    setCurrentRule(null);\n    setRuleModalOpen(false);\n    refreshData();\n  }\n  const canWrite = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canExport = hasPerm('can_export');\n  const columns = useMemo(() => [\n  {\n    accessor: 'name',\n    Header: t('Name') },\n\n  {\n    accessor: 'filter_type',\n    Header: t('Filter Type'),\n    size: 'xl' },\n\n  {\n    accessor: 'group_key',\n    Header: t('Group Key'),\n    size: 'xl' },\n\n  {\n    accessor: 'clause',\n    Header: t('Clause') },\n\n  {\n    Cell: (_ref4) => {let { row: { original: { changed_on_delta_humanized: changedOn } } } = _ref4;return ___EmotionJSX(\"span\", { className: \"no-wrap\" }, changedOn);},\n    Header: t('Modified'),\n    accessor: 'changed_on_delta_humanized',\n    size: 'xl' },\n\n  {\n    Cell: (_ref5) => {let { row: { original } } = _ref5;\n      const handleDelete = () => handleRuleDelete(original, refreshData, addSuccessToast, addDangerToast);\n      const handleEdit = () => handleRuleEdit(original);\n      return ___EmotionJSX(Actions, { className: \"actions\" },\n      canWrite && ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: ___EmotionJSX(React.Fragment, null,\n        t('Are you sure you want to delete'), ' ',\n        ___EmotionJSX(\"b\", null, original.name)),\n        onConfirm: handleDelete },\n      (confirmDelete) => ___EmotionJSX(Tooltip, { id: \"delete-action-tooltip\", title: t('Delete'), placement: \"bottom\" },\n      ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: confirmDelete },\n      ___EmotionJSX(Icons.Trash, { \"data-test\": \"rls-list-trash-icon\" })))),\n\n\n\n      canEdit && ___EmotionJSX(Tooltip, { id: \"edit-action-tooltip\", title: t('Edit'), placement: \"bottom\" },\n      ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: handleEdit },\n      ___EmotionJSX(Icons.EditAlt, { \"data-test\": \"edit-alt\" }))));\n\n\n\n    },\n    Header: t('Actions'),\n    id: 'actions',\n    hidden: !canEdit && !canWrite && !canExport,\n    disableSortBy: true }],\n\n  [\n  user.userId,\n  canEdit,\n  canWrite,\n  canExport,\n  hasPerm,\n  refreshData,\n  addDangerToast,\n  addSuccessToast]);\n\n  const emptyState = {\n    title: t('No Rules yet'),\n    image: 'filter-results.svg',\n    buttonAction: () => handleRuleEdit(null),\n    buttonText: canEdit ? ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(\"i\", { className: \"fa fa-plus\", \"data-test\": \"add-rule-empty\" }), \" \", 'Rule', ' ') :\n    null };\n\n  const filters = useMemo(() => [\n  {\n    Header: t('Name'),\n    key: 'search',\n    id: 'name',\n    input: 'search',\n    operator: FilterOperator.startsWith },\n\n  {\n    Header: t('Filter Type'),\n    key: 'filter_type',\n    id: 'filter_type',\n    input: 'select',\n    operator: FilterOperator.equals,\n    unfilteredLabel: t('Any'),\n    selects: [\n    { label: t('Regular'), value: 'Regular' },\n    { label: t('Base'), value: 'Base' }] },\n\n\n  {\n    Header: t('Group Key'),\n    key: 'search',\n    id: 'group_key',\n    input: 'search',\n    operator: FilterOperator.startsWith }],\n\n  [user]);\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n  const PAGE_SIZE = 25;\n  const subMenuButtons = [];\n  if (canWrite) {\n    subMenuButtons.push({\n      name: ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"i\", { className: \"fa fa-plus\", \"data-test\": \"add-rule\" }), \" \", t('Rule')),\n\n      buttonStyle: 'primary',\n      onClick: () => handleRuleEdit(null) });\n\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select',\n      onClick: toggleBulkSelect });\n\n  }\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, { name: t('Row Level Security'), buttons: subMenuButtons }),\n  ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: t('Are you sure you want to delete the selected rules?'), onConfirm: handleBulkRulesDelete },\n  (confirmDelete) => {\n    const bulkActions = [];\n    if (canWrite) {\n      bulkActions.push({\n        key: 'delete',\n        name: t('Delete'),\n        type: 'danger',\n        onSelect: confirmDelete });\n\n    }\n    return ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(RowLevelSecurityModal, { rule: currentRule, addDangerToast: addDangerToast, onHide: handleRuleModalHide, addSuccessToast: addSuccessToast, show: ruleModalOpen }),\n    ___EmotionJSX(ListView, { className: \"rls-list-view\", bulkActions: bulkActions, bulkSelectEnabled: bulkSelectEnabled, disableBulkSelect: toggleBulkSelect, columns: columns, count: rulesCount, data: rules, emptyState: emptyState, fetchData: fetchData, filters: filters, initialSort: initialSort, loading: loading, pageSize: PAGE_SIZE }));\n\n  }));\n\n\n}__signature__(RowLevelSecurityList, \"useState{[ruleModalOpen, setRuleModalOpen](false)}\\nuseState{[currentRule, setCurrentRule](null)}\\nuseListViewResource{{ state: { loading, resourceCount: rulesCount, resourceCollection: rules, bulkSelectEnabled, }, hasPerm, fetchData, refreshData, toggleBulkSelect, }}\\nuseMemo{columns}\\nuseMemo{filters}\", () => [useListViewResource]);const _default =\nwithToasts(RowLevelSecurityList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Actions, \"Actions\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/RowLevelSecurityList/index.tsx\");reactHotLoader.register(RowLevelSecurityList, \"RowLevelSecurityList\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/RowLevelSecurityList/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/RowLevelSecurityList/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["t","styled","SupersetClient","React","useMemo","useState","ConfirmStatusChange","Icons","ListView","FilterOperator","withToasts","Tooltip","SubMenu","rison","useListViewResource","RowLevelSecurityModal","createErrorHandler","Actions","div","theme","colors","grayscale","base","RowLevelSecurityList","props","addDangerToast","addSuccessToast","user","ruleModalOpen","setRuleModalOpen","currentRule","setCurrentRule","state","loading","resourceCount","rulesCount","resourceCollection","rules","bulkSelectEnabled","hasPerm","fetchData","refreshData","toggleBulkSelect","undefined","handleRuleEdit","rule","handleRuleDelete","id","name","delete","endpoint","then","errMsg","handleBulkRulesDelete","rulesToDelete","ids","map","encode","handleRuleModalHide","canWrite","canEdit","canExport","columns","accessor","Header","size","Cell","row","original","changed_on_delta_humanized","changedOn","handleDelete","handleEdit","confirmDelete","hidden","disableSortBy","userId","emptyState","title","image","buttonAction","buttonText","filters","key","input","operator","startsWith","equals","unfilteredLabel","selects","label","value","initialSort","desc","PAGE_SIZE","subMenuButtons","push","buttonStyle","onClick","bulkActions","type","onSelect"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/RowLevelSecurityList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, styled, SupersetClient } from '@superset-ui/core';\nimport React, { useMemo, useState } from 'react';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport Icons from 'src/components/Icons';\nimport ListView, {\n  FetchDataConfig,\n  FilterOperator,\n  ListViewProps,\n  Filters,\n} from 'src/components/ListView';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { Tooltip } from 'src/components/Tooltip';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport rison from 'rison';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport RowLevelSecurityModal from 'src/features/rls/RowLevelSecurityModal';\nimport { RLSObject } from 'src/features/rls/types';\nimport { createErrorHandler } from 'src/views/CRUD/utils';\n\nconst Actions = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\ninterface RLSProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId?: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nfunction RowLevelSecurityList(props: RLSProps) {\n  const { addDangerToast, addSuccessToast, user } = props;\n  const [ruleModalOpen, setRuleModalOpen] = useState<boolean>(false);\n  const [currentRule, setCurrentRule] = useState(null);\n\n  const {\n    state: {\n      loading,\n      resourceCount: rulesCount,\n      resourceCollection: rules,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<RLSObject>(\n    'rowlevelsecurity',\n    t('Row Level Security'),\n    addDangerToast,\n    true,\n    undefined,\n    undefined,\n    true,\n  );\n\n  function handleRuleEdit(rule: null) {\n    setCurrentRule(rule);\n    setRuleModalOpen(true);\n  }\n\n  function handleRuleDelete(\n    { id, name }: RLSObject,\n    refreshData: (arg0?: FetchDataConfig | null) => void,\n    addSuccessToast: (arg0: string) => void,\n    addDangerToast: (arg0: string) => void,\n  ) {\n    return SupersetClient.delete({\n      endpoint: `/api/v1/rowlevelsecurity/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        addSuccessToast(t('Deleted %s', name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', name, errMsg)),\n      ),\n    );\n  }\n  function handleBulkRulesDelete(rulesToDelete: RLSObject[]) {\n    const ids = rulesToDelete.map(({ id }) => id);\n    return SupersetClient.delete({\n      endpoint: `/api/v1/rowlevelsecurity/?q=${rison.encode(ids)}`,\n    }).then(\n      () => {\n        refreshData();\n        addSuccessToast(t(`Deleted`));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting rules: %s', errMsg)),\n      ),\n    );\n  }\n\n  function handleRuleModalHide() {\n    setCurrentRule(null);\n    setRuleModalOpen(false);\n    refreshData();\n  }\n\n  const canWrite = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canExport = hasPerm('can_export');\n\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'name',\n        Header: t('Name'),\n      },\n      {\n        accessor: 'filter_type',\n        Header: t('Filter Type'),\n        size: 'xl',\n      },\n      {\n        accessor: 'group_key',\n        Header: t('Group Key'),\n        size: 'xl',\n      },\n      {\n        accessor: 'clause',\n        Header: t('Clause'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { changed_on_delta_humanized: changedOn },\n          },\n        }: any) => <span className=\"no-wrap\">{changedOn}</span>,\n        Header: t('Modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleDelete = () =>\n            handleRuleDelete(\n              original,\n              refreshData,\n              addSuccessToast,\n              addDangerToast,\n            );\n          const handleEdit = () => handleRuleEdit(original);\n          return (\n            <Actions className=\"actions\">\n              {canWrite && (\n                <ConfirmStatusChange\n                  title={t('Please confirm')}\n                  description={\n                    <>\n                      {t('Are you sure you want to delete')}{' '}\n                      <b>{original.name}</b>\n                    </>\n                  }\n                  onConfirm={handleDelete}\n                >\n                  {confirmDelete => (\n                    <Tooltip\n                      id=\"delete-action-tooltip\"\n                      title={t('Delete')}\n                      placement=\"bottom\"\n                    >\n                      <span\n                        role=\"button\"\n                        tabIndex={0}\n                        className=\"action-button\"\n                        onClick={confirmDelete}\n                      >\n                        <Icons.Trash data-test=\"rls-list-trash-icon\" />\n                      </span>\n                    </Tooltip>\n                  )}\n                </ConfirmStatusChange>\n              )}\n              {canEdit && (\n                <Tooltip\n                  id=\"edit-action-tooltip\"\n                  title={t('Edit')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleEdit}\n                  >\n                    <Icons.EditAlt data-test=\"edit-alt\" />\n                  </span>\n                </Tooltip>\n              )}\n            </Actions>\n          );\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        hidden: !canEdit && !canWrite && !canExport,\n        disableSortBy: true,\n      },\n    ],\n    [\n      user.userId,\n      canEdit,\n      canWrite,\n      canExport,\n      hasPerm,\n      refreshData,\n      addDangerToast,\n      addSuccessToast,\n    ],\n  );\n\n  const emptyState = {\n    title: t('No Rules yet'),\n    image: 'filter-results.svg',\n    buttonAction: () => handleRuleEdit(null),\n    buttonText: canEdit ? (\n      <>\n        <i className=\"fa fa-plus\" data-test=\"add-rule-empty\" /> {'Rule'}{' '}\n      </>\n    ) : null,\n  };\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Name'),\n        key: 'search',\n        id: 'name',\n        input: 'search',\n        operator: FilterOperator.startsWith,\n      },\n      {\n        Header: t('Filter Type'),\n        key: 'filter_type',\n        id: 'filter_type',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: t('Any'),\n        selects: [\n          { label: t('Regular'), value: 'Regular' },\n          { label: t('Base'), value: 'Base' },\n        ],\n      },\n      {\n        Header: t('Group Key'),\n        key: 'search',\n        id: 'group_key',\n        input: 'search',\n        operator: FilterOperator.startsWith,\n      },\n    ],\n    [user],\n  );\n\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n  const PAGE_SIZE = 25;\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canWrite) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" data-test=\"add-rule\" /> {t('Rule')}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => handleRuleEdit(null),\n    });\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select',\n      onClick: toggleBulkSelect,\n    });\n  }\n\n  return (\n    <>\n      <SubMenu name={t('Row Level Security')} buttons={subMenuButtons} />\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected rules?')}\n        onConfirm={handleBulkRulesDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [];\n          if (canWrite) {\n            bulkActions.push({\n              key: 'delete',\n              name: t('Delete'),\n              type: 'danger',\n              onSelect: confirmDelete,\n            });\n          }\n          return (\n            <>\n              <RowLevelSecurityModal\n                rule={currentRule}\n                addDangerToast={addDangerToast}\n                onHide={handleRuleModalHide}\n                addSuccessToast={addSuccessToast}\n                show={ruleModalOpen}\n              />\n              <ListView<RLSObject>\n                className=\"rls-list-view\"\n                bulkActions={bulkActions}\n                bulkSelectEnabled={bulkSelectEnabled}\n                disableBulkSelect={toggleBulkSelect}\n                columns={columns}\n                count={rulesCount}\n                data={rules}\n                emptyState={emptyState}\n                fetchData={fetchData}\n                filters={filters}\n                initialSort={initialSort}\n                loading={loading}\n                pageSize={PAGE_SIZE}\n              />\n            </>\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(RowLevelSecurityList);\n"]},"metadata":{},"sourceType":"module"}