{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport Alert from 'src/components/Alert';\nimport { SupersetClient, t, styled } from '@superset-ui/core';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport StyledModal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { useDebouncedEffect } from 'src/explore/exploreUtils';\nimport { SLOW_DEBOUNCE } from 'src/constants';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport Loading from 'src/components/Loading';\nimport { Input } from 'src/components/Input';\nimport { PAGE_SIZE as DATASET_PAGE_SIZE, SORT_BY as DATASET_SORT_BY } from 'src/features/datasets/constants';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport FacePile from '../FacePile';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst CONFIRM_WARNING_MESSAGE = t('Warning! Changing the dataset may break the chart if the metadata does not exist.');\nconst CHANGE_WARNING_MSG = t('Changing the dataset may break the chart if the chart relies ' +\n'on columns or metadata that does not exist in the target dataset');\nconst Modal = styled(StyledModal)`\n  .ant-modal-body {\n    display: flex;\n    flex-direction: column;\n  }\n`;\nconst ConfirmModalStyled = styled.div`\n  .btn-container {\n    display: flex;\n    justify-content: flex-end;\n    padding: 0px 15px;\n    margin: 10px 0 0 0;\n  }\n\n  .confirm-modal-container {\n    margin: 9px;\n  }\n`;\nconst StyledSpan = styled.span`\n  cursor: pointer;\n  color: ${(_ref) => {let { theme } = _ref;return theme.colors.primary.dark1;}};\n  &: hover {\n    color: ${(_ref2) => {let { theme } = _ref2;return theme.colors.primary.dark2;}};\n  }\n`;\nconst ChangeDatasourceModal = (_ref3) => {let { addDangerToast, addSuccessToast, onChange, onDatasourceSave, onHide, show } = _ref3;\n  const [filter, setFilter] = useState(undefined);\n  const [pageIndex, setPageIndex] = useState(0);\n  const [sortBy, setSortBy] = useState(DATASET_SORT_BY);\n  const [confirmChange, setConfirmChange] = useState(false);\n  const [confirmedDataset, setConfirmedDataset] = useState();\n  const searchRef = useRef(null);\n  const { state: { loading, resourceCollection, resourceCount }, fetchData } = useListViewResource('dataset', t('dataset'), addDangerToast);\n  const selectDatasource = useCallback((datasource) => {\n    setConfirmChange(true);\n    setConfirmedDataset(datasource);\n  }, []);\n  const fetchDatasetPayload = {\n    pageIndex,\n    pageSize: DATASET_PAGE_SIZE,\n    filters: [],\n    sortBy };\n\n  useDebouncedEffect(() => {\n    fetchData({\n      ...fetchDatasetPayload,\n      ...(filter && {\n        filters: [\n        {\n          id: 'table_name',\n          operator: 'ct',\n          value: filter }] }) });\n\n\n\n\n  }, SLOW_DEBOUNCE, [filter, pageIndex, sortBy]);\n  useEffect(() => {\n    const onEnterModal = async () => {\n      setTimeout(() => {var _searchRef$current;return searchRef == null ? void 0 : (_searchRef$current = searchRef.current) == null ? void 0 : _searchRef$current.focus();}, 200);\n    };\n    if (show) {\n      onEnterModal();\n    }\n  }, [\n  addDangerToast,\n  fetchData,\n  onChange,\n  onDatasourceSave,\n  onHide,\n  selectDatasource,\n  show]);\n\n  const changeSearch = (event) => {var _event$target$value;\n    const searchValue = (_event$target$value = event.target.value) != null ? _event$target$value : '';\n    setFilter(searchValue);\n    setPageIndex(0);\n  };\n  const handleChangeConfirm = () => {\n    SupersetClient.get({\n      endpoint: `/api/v1/dataset/${confirmedDataset == null ? void 0 : confirmedDataset.id}` }).\n\n    then((_ref4) => {let { json } = _ref4;\n      // eslint-disable-next-line no-param-reassign\n      json.result.type = 'table';\n      onDatasourceSave(json.result);\n      onChange(`${confirmedDataset == null ? void 0 : confirmedDataset.id}__table`);\n    }).\n    catch((response) => {\n      getClientErrorObject(response).then((_ref5) => {let { error, message } = _ref5;\n        const errorMessage = error ?\n        error.error || error.statusText || error :\n        message;\n        addDangerToast(errorMessage);\n      });\n    });\n    onHide();\n    addSuccessToast(t('Successfully changed dataset!'));\n  };\n  const handlerCancelConfirm = () => {\n    setConfirmChange(false);\n  };\n  const columns = [\n  {\n    Cell: (_ref6) => {let { row: { original } } = _ref6;return ___EmotionJSX(StyledSpan, { role: \"button\", tabIndex: 0, onClick: () => selectDatasource({ type: 'table', ...original }) },\n      original == null ? void 0 : original.table_name);},\n\n    Header: t('Name'),\n    accessor: 'table_name' },\n\n  {\n    Header: t('Type'),\n    accessor: 'kind',\n    disableSortBy: true },\n\n  {\n    Header: t('Schema'),\n    accessor: 'schema' },\n\n  {\n    Header: t('Connection'),\n    accessor: 'database.database_name',\n    disableSortBy: true },\n\n  {\n    Cell: (_ref7) => {let { row: { original: { owners = [] } } } = _ref7;return ___EmotionJSX(FacePile, { users: owners });},\n    Header: t('Owners'),\n    id: 'owners',\n    disableSortBy: true }];\n\n\n  const onServerPagination = (args) => {\n    setPageIndex(args.pageIndex);\n    if (args.sortBy) {\n      // ensure default sort by\n      setSortBy(args.sortBy.length > 0 ? args.sortBy : DATASET_SORT_BY);\n    }\n  };\n  return ___EmotionJSX(Modal, { show: show, onHide: onHide, responsive: true, title: t('Swap dataset'), width: confirmChange ? '432px' : '', height: confirmChange ? 'auto' : '540px', hideFooter: !confirmChange, footer: ___EmotionJSX(React.Fragment, null,\n    confirmChange && ___EmotionJSX(ConfirmModalStyled, null,\n    ___EmotionJSX(\"div\", { className: \"btn-container\" },\n    ___EmotionJSX(Button, { onClick: handlerCancelConfirm }, t('Cancel')),\n    ___EmotionJSX(Button, { className: \"proceed-btn\", buttonStyle: \"primary\", onClick: handleChangeConfirm },\n    t('Proceed'))))) },\n\n\n\n\n  ___EmotionJSX(React.Fragment, null,\n  !confirmChange && ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Alert, { roomBelow: true, type: \"warning\", css: (theme) => ({ marginBottom: theme.gridUnit * 4 }), message: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(\"strong\", null, t('Warning!')), \" \", CHANGE_WARNING_MSG) }),\n\n  ___EmotionJSX(Input, { ref: searchRef, type: \"text\", value: filter, placeholder: t('Search / Filter'), onChange: changeSearch }),\n  loading && ___EmotionJSX(Loading, null),\n  !loading && ___EmotionJSX(TableView, { columns: columns, data: resourceCollection, pageSize: DATASET_PAGE_SIZE, initialPageIndex: pageIndex, initialSortBy: sortBy, totalCount: resourceCount, onServerPagination: onServerPagination, className: \"table-condensed\", emptyWrapperType: EmptyWrapperType.Small, serverPagination: true, isPaginationSticky: true, scrollTable: true })),\n\n  confirmChange && ___EmotionJSX(React.Fragment, null, CONFIRM_WARNING_MESSAGE)));\n\n\n};\nexport default withToasts(ChangeDatasourceModal);","map":{"version":3,"mappings":"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","names":["React","useState","useRef","useEffect","useCallback","Alert","SupersetClient","t","styled","TableView","EmptyWrapperType","StyledModal","Button","useListViewResource","useDebouncedEffect","SLOW_DEBOUNCE","getClientErrorObject","Loading","Input","PAGE_SIZE","DATASET_PAGE_SIZE","SORT_BY","DATASET_SORT_BY","withToasts","FacePile","CONFIRM_WARNING_MESSAGE","CHANGE_WARNING_MSG","Modal","ConfirmModalStyled","div","StyledSpan","span","theme","colors","primary","dark1","dark2","ChangeDatasourceModal","addDangerToast","addSuccessToast","onChange","onDatasourceSave","onHide","show","filter","setFilter","undefined","pageIndex","setPageIndex","sortBy","setSortBy","confirmChange","setConfirmChange","confirmedDataset","setConfirmedDataset","searchRef","state","loading","resourceCollection","resourceCount","fetchData","selectDatasource","datasource","fetchDatasetPayload","pageSize","filters","id","operator","value","onEnterModal","setTimeout","current","focus","changeSearch","event","searchValue","target","handleChangeConfirm","get","endpoint","then","json","result","type","catch","response","error","message","errorMessage","statusText","handlerCancelConfirm","columns","Cell","row","original","table_name","Header","accessor","disableSortBy","owners","onServerPagination","args","length","marginBottom","gridUnit","Small"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/components/Datasource/ChangeDatasourceModal.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  FunctionComponent,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n} from 'react';\nimport Alert from 'src/components/Alert';\nimport { SupersetClient, t, styled } from '@superset-ui/core';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport { ServerPagination, SortByType } from 'src/components/TableView/types';\nimport StyledModal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport Dataset from 'src/types/Dataset';\nimport { useDebouncedEffect } from 'src/explore/exploreUtils';\nimport { SLOW_DEBOUNCE } from 'src/constants';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport Loading from 'src/components/Loading';\nimport { AntdInput } from 'src/components';\nimport { Input } from 'src/components/Input';\nimport {\n  PAGE_SIZE as DATASET_PAGE_SIZE,\n  SORT_BY as DATASET_SORT_BY,\n} from 'src/features/datasets/constants';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport FacePile from '../FacePile';\n\nconst CONFIRM_WARNING_MESSAGE = t(\n  'Warning! Changing the dataset may break the chart if the metadata does not exist.',\n);\n\nconst CHANGE_WARNING_MSG = t(\n  'Changing the dataset may break the chart if the chart relies ' +\n    'on columns or metadata that does not exist in the target dataset',\n);\n\ninterface Datasource {\n  type: string;\n  id: number;\n  uid: string;\n}\n\ninterface ChangeDatasourceModalProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  onChange: (uid: string) => void;\n  onDatasourceSave: (datasource: object, errors?: Array<any>) => {};\n  onHide: () => void;\n  show: boolean;\n}\n\nconst Modal = styled(StyledModal)`\n  .ant-modal-body {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst ConfirmModalStyled = styled.div`\n  .btn-container {\n    display: flex;\n    justify-content: flex-end;\n    padding: 0px 15px;\n    margin: 10px 0 0 0;\n  }\n\n  .confirm-modal-container {\n    margin: 9px;\n  }\n`;\n\nconst StyledSpan = styled.span`\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.primary.dark1};\n  &: hover {\n    color: ${({ theme }) => theme.colors.primary.dark2};\n  }\n`;\n\nconst ChangeDatasourceModal: FunctionComponent<ChangeDatasourceModalProps> = ({\n  addDangerToast,\n  addSuccessToast,\n  onChange,\n  onDatasourceSave,\n  onHide,\n  show,\n}) => {\n  const [filter, setFilter] = useState<any>(undefined);\n  const [pageIndex, setPageIndex] = useState<number>(0);\n  const [sortBy, setSortBy] = useState<SortByType>(DATASET_SORT_BY);\n  const [confirmChange, setConfirmChange] = useState(false);\n  const [confirmedDataset, setConfirmedDataset] = useState<Datasource>();\n  const searchRef = useRef<AntdInput>(null);\n\n  const {\n    state: { loading, resourceCollection, resourceCount },\n    fetchData,\n  } = useListViewResource<Dataset>('dataset', t('dataset'), addDangerToast);\n\n  const selectDatasource = useCallback((datasource: Datasource) => {\n    setConfirmChange(true);\n    setConfirmedDataset(datasource);\n  }, []);\n\n  const fetchDatasetPayload = {\n    pageIndex,\n    pageSize: DATASET_PAGE_SIZE,\n    filters: [],\n    sortBy,\n  };\n\n  useDebouncedEffect(\n    () => {\n      fetchData({\n        ...fetchDatasetPayload,\n        ...(filter && {\n          filters: [\n            {\n              id: 'table_name',\n              operator: 'ct',\n              value: filter,\n            },\n          ],\n        }),\n      });\n    },\n    SLOW_DEBOUNCE,\n    [filter, pageIndex, sortBy],\n  );\n\n  useEffect(() => {\n    const onEnterModal = async () => {\n      setTimeout(() => searchRef?.current?.focus(), 200);\n    };\n\n    if (show) {\n      onEnterModal();\n    }\n  }, [\n    addDangerToast,\n    fetchData,\n    onChange,\n    onDatasourceSave,\n    onHide,\n    selectDatasource,\n    show,\n  ]);\n\n  const changeSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const searchValue = event.target.value ?? '';\n    setFilter(searchValue);\n    setPageIndex(0);\n  };\n\n  const handleChangeConfirm = () => {\n    SupersetClient.get({\n      endpoint: `/api/v1/dataset/${confirmedDataset?.id}`,\n    })\n      .then(({ json }) => {\n        // eslint-disable-next-line no-param-reassign\n        json.result.type = 'table';\n        onDatasourceSave(json.result);\n        onChange(`${confirmedDataset?.id}__table`);\n      })\n      .catch(response => {\n        getClientErrorObject(response).then(\n          ({ error, message }: { error: any; message: string }) => {\n            const errorMessage = error\n              ? error.error || error.statusText || error\n              : message;\n            addDangerToast(errorMessage);\n          },\n        );\n      });\n    onHide();\n    addSuccessToast(t('Successfully changed dataset!'));\n  };\n\n  const handlerCancelConfirm = () => {\n    setConfirmChange(false);\n  };\n\n  const columns = [\n    {\n      Cell: ({ row: { original } }: any) => (\n        <StyledSpan\n          role=\"button\"\n          tabIndex={0}\n          data-test=\"datasource-link\"\n          onClick={() => selectDatasource({ type: 'table', ...original })}\n        >\n          {original?.table_name}\n        </StyledSpan>\n      ),\n      Header: t('Name'),\n      accessor: 'table_name',\n    },\n    {\n      Header: t('Type'),\n      accessor: 'kind',\n      disableSortBy: true,\n    },\n    {\n      Header: t('Schema'),\n      accessor: 'schema',\n    },\n    {\n      Header: t('Connection'),\n      accessor: 'database.database_name',\n      disableSortBy: true,\n    },\n    {\n      Cell: ({\n        row: {\n          original: { owners = [] },\n        },\n      }: any) => <FacePile users={owners} />,\n      Header: t('Owners'),\n      id: 'owners',\n      disableSortBy: true,\n    },\n  ];\n\n  const onServerPagination = (args: ServerPagination) => {\n    setPageIndex(args.pageIndex);\n    if (args.sortBy) {\n      // ensure default sort by\n      setSortBy(args.sortBy.length > 0 ? args.sortBy : DATASET_SORT_BY);\n    }\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      responsive\n      title={t('Swap dataset')}\n      width={confirmChange ? '432px' : ''}\n      height={confirmChange ? 'auto' : '540px'}\n      hideFooter={!confirmChange}\n      footer={\n        <>\n          {confirmChange && (\n            <ConfirmModalStyled>\n              <div className=\"btn-container\">\n                <Button onClick={handlerCancelConfirm}>{t('Cancel')}</Button>\n                <Button\n                  className=\"proceed-btn\"\n                  buttonStyle=\"primary\"\n                  onClick={handleChangeConfirm}\n                >\n                  {t('Proceed')}\n                </Button>\n              </div>\n            </ConfirmModalStyled>\n          )}\n        </>\n      }\n    >\n      <>\n        {!confirmChange && (\n          <>\n            <Alert\n              roomBelow\n              type=\"warning\"\n              css={theme => ({ marginBottom: theme.gridUnit * 4 })}\n              message={\n                <>\n                  <strong>{t('Warning!')}</strong> {CHANGE_WARNING_MSG}\n                </>\n              }\n            />\n            <Input\n              ref={searchRef}\n              type=\"text\"\n              value={filter}\n              placeholder={t('Search / Filter')}\n              onChange={changeSearch}\n            />\n            {loading && <Loading />}\n            {!loading && (\n              <TableView\n                columns={columns}\n                data={resourceCollection}\n                pageSize={DATASET_PAGE_SIZE}\n                initialPageIndex={pageIndex}\n                initialSortBy={sortBy}\n                totalCount={resourceCount}\n                onServerPagination={onServerPagination}\n                className=\"table-condensed\"\n                emptyWrapperType={EmptyWrapperType.Small}\n                serverPagination\n                isPaginationSticky\n                scrollTable\n              />\n            )}\n          </>\n        )}\n        {confirmChange && <>{CONFIRM_WARNING_MESSAGE}</>}\n      </>\n    </Modal>\n  );\n};\n\nexport default withToasts(ChangeDatasourceModal);\n"]},"metadata":{},"sourceType":"module"}