{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, css } from '@superset-ui/core';\nimport ControlHeader from '../ControlHeader';\nimport Checkbox from '../../../components/Checkbox';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  value: PropTypes.bool,\n  label: PropTypes.string,\n  onChange: PropTypes.func };\n\n\nconst defaultProps = {\n  value: false,\n  onChange: () => {} };\n\n\nconst CheckBoxControlWrapper = styled.div`\n  ${(_ref) => {let { theme } = _ref;return css`\n    .ControlHeader label {\n      color: ${theme.colors.grayscale.dark1};\n    }\n    span[role='checkbox'] {\n      padding-right: ${theme.gridUnit * 2}px;\n    }\n  `;}}\n`;\n\nexport default class CheckboxControl extends React.Component {\n  onChange() {\n    this.props.onChange(!this.props.value);\n  }\n\n  renderCheckbox() {\n    return (\n      ___EmotionJSX(Checkbox, {\n        onChange: this.onChange.bind(this),\n        checked: !!this.props.value }));\n\n\n  }\n\n  render() {\n    if (this.props.label) {\n      return (\n        ___EmotionJSX(CheckBoxControlWrapper, null,\n        ___EmotionJSX(ControlHeader, _extends({},\n        this.props, {\n          leftNode: this.renderCheckbox(),\n          onClick: this.onChange.bind(this) }))));\n\n\n\n    }\n    return this.renderCheckbox();\n  }}\n\nCheckboxControl.propTypes = propTypes;\nCheckboxControl.defaultProps = defaultProps;","map":{"version":3,"names":["React","PropTypes","styled","css","ControlHeader","Checkbox","propTypes","value","bool","label","string","onChange","func","defaultProps","CheckBoxControlWrapper","div","theme","colors","grayscale","dark1","gridUnit","CheckboxControl","Component","props","renderCheckbox","bind","render"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/CheckboxControl.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, css } from '@superset-ui/core';\nimport ControlHeader from '../ControlHeader';\nimport Checkbox from '../../../components/Checkbox';\n\nconst propTypes = {\n  value: PropTypes.bool,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst defaultProps = {\n  value: false,\n  onChange: () => {},\n};\n\nconst CheckBoxControlWrapper = styled.div`\n  ${({ theme }) => css`\n    .ControlHeader label {\n      color: ${theme.colors.grayscale.dark1};\n    }\n    span[role='checkbox'] {\n      padding-right: ${theme.gridUnit * 2}px;\n    }\n  `}\n`;\n\nexport default class CheckboxControl extends React.Component {\n  onChange() {\n    this.props.onChange(!this.props.value);\n  }\n\n  renderCheckbox() {\n    return (\n      <Checkbox\n        onChange={this.onChange.bind(this)}\n        checked={!!this.props.value}\n      />\n    );\n  }\n\n  render() {\n    if (this.props.label) {\n      return (\n        <CheckBoxControlWrapper>\n          <ControlHeader\n            {...this.props}\n            leftNode={this.renderCheckbox()}\n            onClick={this.onChange.bind(this)}\n          />\n        </CheckBoxControlWrapper>\n      );\n    }\n    return this.renderCheckbox();\n  }\n}\nCheckboxControl.propTypes = propTypes;\nCheckboxControl.defaultProps = defaultProps;\n"],"mappings":"+DAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,8BAArB,C;;AAEA,MAAMC,SAAS,GAAG;EAChBC,KAAK,EAAEN,SAAS,CAACO,IADD;EAEhBC,KAAK,EAAER,SAAS,CAACS,MAFD;EAGhBC,QAAQ,EAAEV,SAAS,CAACW,IAHJ,EAAlB;;;AAMA,MAAMC,YAAY,GAAG;EACnBN,KAAK,EAAE,KADY;EAEnBI,QAAQ,EAAE,MAAM,CAAE,CAFC,EAArB;;;AAKA,MAAMG,sBAAsB,GAAGZ,MAAM,CAACa,GAAI;AAC1C,IAAI,eAAC,EAAEC,KAAF,EAAD,eAAeb,GAAI;AACvB;AACA,eAAea,KAAK,CAACC,MAAN,CAAaC,SAAb,CAAuBC,KAAM;AAC5C;AACA;AACA,uBAAuBH,KAAK,CAACI,QAAN,GAAiB,CAAE;AAC1C;AACA,GAPI,EAOA;AACJ,CATA;;AAWA,eAAe,MAAMC,eAAN,SAA8BrB,KAAK,CAACsB,SAApC,CAA8C;EAC3DX,QAAQ,GAAG;IACT,KAAKY,KAAL,CAAWZ,QAAX,CAAoB,CAAC,KAAKY,KAAL,CAAWhB,KAAhC;EACD;;EAEDiB,cAAc,GAAG;IACf;MACE,cAAC,QAAD;QACE,QAAQ,EAAE,KAAKb,QAAL,CAAcc,IAAd,CAAmB,IAAnB,CADZ;QAEE,OAAO,EAAE,CAAC,CAAC,KAAKF,KAAL,CAAWhB,KAFxB,GADF;;;EAMD;;EAEDmB,MAAM,GAAG;IACP,IAAI,KAAKH,KAAL,CAAWd,KAAf,EAAsB;MACpB;QACE,cAAC,sBAAD;QACE,cAAC,aAAD;QACM,KAAKc,KADX;UAEE,QAAQ,EAAE,KAAKC,cAAL,EAFZ;UAGE,OAAO,EAAE,KAAKb,QAAL,CAAcc,IAAd,CAAmB,IAAnB,CAHX,IADF,CADF;;;;IASD;IACD,OAAO,KAAKD,cAAL,EAAP;EACD,CA3B0D;;AA6B7DH,eAAe,CAACf,SAAhB,GAA4BA,SAA5B;AACAe,eAAe,CAACR,YAAhB,GAA+BA,YAA/B"},"metadata":{},"sourceType":"module"}