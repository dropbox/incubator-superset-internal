{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useRef } from 'react';\nimport Alert from 'src/components/Alert';\nimport Button from 'src/components/Button';\nimport { FeatureFlag, isDefined, isFeatureEnabled, styled, SupersetClient, t } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport AsyncEsmComponent from 'src/components/AsyncEsmComponent';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useSelector } from 'react-redux';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DatasourceEditor = AsyncEsmComponent(() => import('./DatasourceEditor'));\nconst StyledDatasourceModal = styled(Modal)`\n  .modal-content {\n    height: 900px;\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n  }\n\n  .modal-header {\n    flex: 0 1 auto;\n  }\n  .modal-body {\n    flex: 1 1 auto;\n    overflow: auto;\n  }\n\n  .modal-footer {\n    flex: 0 1 auto;\n  }\n`;\nfunction buildExtraJsonObject(item) {\n  const certification = item != null && item.certified_by || item != null && item.certification_details ?\n  {\n    certified_by: item == null ? void 0 : item.certified_by,\n    details: item == null ? void 0 : item.certification_details } :\n\n  undefined;\n  return JSON.stringify({\n    certification,\n    warning_markdown: item == null ? void 0 : item.warning_markdown });\n\n}\nconst DatasourceModal = (_ref) => {var _datasource$metrics;let { addSuccessToast, datasource, onDatasourceSave, onHide, show } = _ref;\n  const [currentDatasource, setCurrentDatasource] = useState({\n    ...datasource,\n    metrics: datasource == null ? void 0 : (_datasource$metrics = datasource.metrics) == null ? void 0 : _datasource$metrics.map((metric) => ({\n      ...metric,\n      currency: JSON.parse(metric.currency || 'null') })) });\n\n\n  const currencies = useSelector((state) => {var _state$common;return (_state$common = state.common) == null ? void 0 : _state$common.currencies;});\n  const [errors, setErrors] = useState([]);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const dialog = useRef(null);\n  const [modal, contextHolder] = Modal.useModal();\n  const onConfirmSave = () => {var _currentDatasource$ta, _currentDatasource$da, _currentDatasource$da2, _currentDatasource$me, _currentDatasource$co;\n    // Pull out extra fields into the extra object\n    const schema = ((_currentDatasource$ta = currentDatasource.tableSelector) == null ? void 0 : _currentDatasource$ta.schema) || ((_currentDatasource$da =\n    currentDatasource.databaseSelector) == null ? void 0 : _currentDatasource$da.schema) ||\n    currentDatasource.schema;\n    setIsSaving(true);\n    SupersetClient.put({\n      endpoint: `/api/v1/dataset/${currentDatasource.id}`,\n      jsonPayload: {\n        table_name: currentDatasource.table_name,\n        database_id: (_currentDatasource$da2 = currentDatasource.database) == null ? void 0 : _currentDatasource$da2.id,\n        sql: currentDatasource.sql,\n        filter_select_enabled: currentDatasource.filter_select_enabled,\n        fetch_values_predicate: currentDatasource.fetch_values_predicate,\n        schema,\n        description: currentDatasource.description,\n        main_dttm_col: currentDatasource.main_dttm_col,\n        normalize_columns: currentDatasource.normalize_columns,\n        offset: currentDatasource.offset,\n        default_endpoint: currentDatasource.default_endpoint,\n        cache_timeout: currentDatasource.cache_timeout === '' ?\n        null :\n        currentDatasource.cache_timeout,\n        is_sqllab_view: currentDatasource.is_sqllab_view,\n        template_params: currentDatasource.template_params,\n        extra: currentDatasource.extra,\n        is_managed_externally: currentDatasource.is_managed_externally,\n        external_url: currentDatasource.external_url,\n        metrics: currentDatasource == null ? void 0 : (_currentDatasource$me = currentDatasource.metrics) == null ? void 0 : _currentDatasource$me.map((metric) => {\n          const metricBody = {\n            expression: metric.expression,\n            description: metric.description,\n            metric_name: metric.metric_name,\n            metric_type: metric.metric_type,\n            d3format: metric.d3format || null,\n            currency: !isDefined(metric.currency) ?\n            null :\n            JSON.stringify(metric.currency),\n            verbose_name: metric.verbose_name,\n            warning_text: metric.warning_text,\n            uuid: metric.uuid,\n            extra: buildExtraJsonObject(metric) };\n\n          if (!Number.isNaN(Number(metric.id))) {\n            metricBody.id = metric.id;\n          }\n          return metricBody;\n        }),\n        columns: currentDatasource == null ? void 0 : (_currentDatasource$co = currentDatasource.columns) == null ? void 0 : _currentDatasource$co.map((column) => ({\n          id: typeof column.id === 'number' ? column.id : undefined,\n          column_name: column.column_name,\n          type: column.type,\n          advanced_data_type: column.advanced_data_type,\n          verbose_name: column.verbose_name,\n          description: column.description,\n          expression: column.expression,\n          filterable: column.filterable,\n          groupby: column.groupby,\n          is_active: column.is_active,\n          is_dttm: column.is_dttm,\n          python_date_format: column.python_date_format || null,\n          uuid: column.uuid,\n          extra: buildExtraJsonObject(column) })),\n\n        owners: currentDatasource.owners.map((o) => o.value || o.id) } }).\n\n\n    then(() => {\n      addSuccessToast(t('The dataset has been saved'));\n      return SupersetClient.get({\n        endpoint: `/api/v1/dataset/${currentDatasource == null ? void 0 : currentDatasource.id}` });\n\n    }).\n    then((_ref2) => {let { json } = _ref2;\n      // eslint-disable-next-line no-param-reassign\n      json.result.type = 'table';\n      onDatasourceSave({\n        ...json.result,\n        owners: currentDatasource.owners });\n\n      onHide();\n    }).\n    catch((response) => {\n      setIsSaving(false);\n      getClientErrorObject(response).then((_ref3) => {let { error } = _ref3;\n        modal.error({\n          title: t('Error'),\n          content: error || t('An error has occurred'),\n          okButtonProps: { danger: true, className: 'btn-danger' } });\n\n      });\n    });\n  };\n  const onDatasourceChange = (data, err) => {\n    setCurrentDatasource({\n      ...data,\n      metrics: data == null ? void 0 : data.metrics.map((metric) => ({\n        ...metric,\n        is_certified: (metric == null ? void 0 : metric.certified_by) || (metric == null ? void 0 : metric.certification_details) })) });\n\n\n    setErrors(err);\n  };\n  const renderSaveDialog = () => ___EmotionJSX(\"div\", null,\n  ___EmotionJSX(Alert, { css: (theme) => ({\n      marginTop: theme.gridUnit * 4,\n      marginBottom: theme.gridUnit * 4 }),\n    type: \"warning\", showIcon: true, message: t(`The dataset configuration exposed here\n                affects all the charts using this dataset.\n                Be mindful that changing settings\n                here may affect other charts\n                in undesirable ways.`) }),\n  t('Are you sure you want to save and apply changes?'));\n\n  const onClickSave = () => {\n    dialog.current = modal.confirm({\n      title: t('Confirm save'),\n      content: renderSaveDialog(),\n      onOk: onConfirmSave,\n      icon: null,\n      okText: t('OK'),\n      cancelText: t('Cancel') });\n\n  };\n  const showLegacyDatasourceEditor = !isFeatureEnabled(FeatureFlag.DISABLE_LEGACY_DATASOURCE_EDITOR);\n  return ___EmotionJSX(StyledDatasourceModal, { show: show, onHide: onHide, title: ___EmotionJSX(\"span\", null,\n    t('Edit Dataset '),\n    ___EmotionJSX(\"strong\", null, currentDatasource.table_name)),\n    maskClosable: !isEditing, footer: ___EmotionJSX(React.Fragment, null,\n    showLegacyDatasourceEditor && ___EmotionJSX(Button, { buttonSize: \"small\", buttonStyle: \"default\", className: \"m-r-5\", onClick: () => {\n        window.location.href =\n        currentDatasource.edit_url || currentDatasource.url;\n      } },\n    t('Use legacy datasource editor')),\n\n    ___EmotionJSX(Button, { buttonSize: \"small\", className: \"m-r-5\", onClick: onHide },\n    t('Cancel')),\n\n    ___EmotionJSX(Button, { buttonSize: \"small\", buttonStyle: \"primary\", onClick: onClickSave, disabled: isSaving ||\n      errors.length > 0 ||\n      currentDatasource.is_managed_externally, tooltip: currentDatasource.is_managed_externally ?\n      t(\"This dataset is managed externally, and can't be edited in Superset\") :\n      '' },\n    t('Save'))),\n\n    responsive: true },\n  ___EmotionJSX(DatasourceEditor, { showLoadingForImport: true, height: 500, datasource: currentDatasource, onChange: onDatasourceChange, setIsEditing: setIsEditing, currencies: currencies }),\n  contextHolder);\n\n};\nexport default withToasts(DatasourceModal);","map":{"version":3,"mappings":"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","names":["React","useState","useRef","Alert","Button","FeatureFlag","isDefined","isFeatureEnabled","styled","SupersetClient","t","Modal","AsyncEsmComponent","getClientErrorObject","withToasts","useSelector","DatasourceEditor","StyledDatasourceModal","buildExtraJsonObject","item","certification","certified_by","certification_details","details","undefined","JSON","stringify","warning_markdown","DatasourceModal","addSuccessToast","datasource","onDatasourceSave","onHide","show","currentDatasource","setCurrentDatasource","metrics","map","metric","currency","parse","currencies","state","common","errors","setErrors","isSaving","setIsSaving","isEditing","setIsEditing","dialog","modal","contextHolder","useModal","onConfirmSave","schema","tableSelector","databaseSelector","put","endpoint","id","jsonPayload","table_name","database_id","database","sql","filter_select_enabled","fetch_values_predicate","description","main_dttm_col","normalize_columns","offset","default_endpoint","cache_timeout","is_sqllab_view","template_params","extra","is_managed_externally","external_url","metricBody","expression","metric_name","metric_type","d3format","verbose_name","warning_text","uuid","Number","isNaN","columns","column","column_name","type","advanced_data_type","filterable","groupby","is_active","is_dttm","python_date_format","owners","o","value","then","get","json","result","catch","response","error","title","content","okButtonProps","danger","className","onDatasourceChange","data","err","is_certified","renderSaveDialog","marginTop","theme","gridUnit","marginBottom","onClickSave","current","confirm","onOk","icon","okText","cancelText","showLegacyDatasourceEditor","DISABLE_LEGACY_DATASOURCE_EDITOR","window","location","href","edit_url","url","length"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/components/Datasource/DatasourceModal.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState, useRef } from 'react';\nimport Alert from 'src/components/Alert';\nimport Button from 'src/components/Button';\nimport {\n  FeatureFlag,\n  isDefined,\n  isFeatureEnabled,\n  Metric,\n  styled,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\n\nimport Modal from 'src/components/Modal';\nimport AsyncEsmComponent from 'src/components/AsyncEsmComponent';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useSelector } from 'react-redux';\n\nconst DatasourceEditor = AsyncEsmComponent(() => import('./DatasourceEditor'));\n\nconst StyledDatasourceModal = styled(Modal)`\n  .modal-content {\n    height: 900px;\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n  }\n\n  .modal-header {\n    flex: 0 1 auto;\n  }\n  .modal-body {\n    flex: 1 1 auto;\n    overflow: auto;\n  }\n\n  .modal-footer {\n    flex: 0 1 auto;\n  }\n`;\n\ninterface DatasourceModalProps {\n  addSuccessToast: (msg: string) => void;\n  datasource: any;\n  onChange: () => {};\n  onDatasourceSave: (datasource: object, errors?: Array<any>) => {};\n  onHide: () => {};\n  show: boolean;\n}\n\nfunction buildExtraJsonObject(item: Record<string, unknown>) {\n  const certification =\n    item?.certified_by || item?.certification_details\n      ? {\n          certified_by: item?.certified_by,\n          details: item?.certification_details,\n        }\n      : undefined;\n  return JSON.stringify({\n    certification,\n    warning_markdown: item?.warning_markdown,\n  });\n}\n\nconst DatasourceModal: FunctionComponent<DatasourceModalProps> = ({\n  addSuccessToast,\n  datasource,\n  onDatasourceSave,\n  onHide,\n  show,\n}) => {\n  const [currentDatasource, setCurrentDatasource] = useState({\n    ...datasource,\n    metrics: datasource?.metrics?.map((metric: Metric) => ({\n      ...metric,\n      currency: JSON.parse(metric.currency || 'null'),\n    })),\n  });\n  const currencies = useSelector<\n    {\n      common: {\n        currencies: string[];\n      };\n    },\n    string[]\n  >(state => state.common?.currencies);\n  const [errors, setErrors] = useState<any[]>([]);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n  const dialog = useRef<any>(null);\n  const [modal, contextHolder] = Modal.useModal();\n\n  const onConfirmSave = () => {\n    // Pull out extra fields into the extra object\n    const schema =\n      currentDatasource.tableSelector?.schema ||\n      currentDatasource.databaseSelector?.schema ||\n      currentDatasource.schema;\n\n    setIsSaving(true);\n    SupersetClient.put({\n      endpoint: `/api/v1/dataset/${currentDatasource.id}`,\n      jsonPayload: {\n        table_name: currentDatasource.table_name,\n        database_id: currentDatasource.database?.id,\n        sql: currentDatasource.sql,\n        filter_select_enabled: currentDatasource.filter_select_enabled,\n        fetch_values_predicate: currentDatasource.fetch_values_predicate,\n        schema,\n        description: currentDatasource.description,\n        main_dttm_col: currentDatasource.main_dttm_col,\n        normalize_columns: currentDatasource.normalize_columns,\n        offset: currentDatasource.offset,\n        default_endpoint: currentDatasource.default_endpoint,\n        cache_timeout:\n          currentDatasource.cache_timeout === ''\n            ? null\n            : currentDatasource.cache_timeout,\n        is_sqllab_view: currentDatasource.is_sqllab_view,\n        template_params: currentDatasource.template_params,\n        extra: currentDatasource.extra,\n        is_managed_externally: currentDatasource.is_managed_externally,\n        external_url: currentDatasource.external_url,\n        metrics: currentDatasource?.metrics?.map(\n          (metric: Record<string, unknown>) => {\n            const metricBody: any = {\n              expression: metric.expression,\n              description: metric.description,\n              metric_name: metric.metric_name,\n              metric_type: metric.metric_type,\n              d3format: metric.d3format || null,\n              currency: !isDefined(metric.currency)\n                ? null\n                : JSON.stringify(metric.currency),\n              verbose_name: metric.verbose_name,\n              warning_text: metric.warning_text,\n              uuid: metric.uuid,\n              extra: buildExtraJsonObject(metric),\n            };\n            if (!Number.isNaN(Number(metric.id))) {\n              metricBody.id = metric.id;\n            }\n            return metricBody;\n          },\n        ),\n        columns: currentDatasource?.columns?.map(\n          (column: Record<string, unknown>) => ({\n            id: typeof column.id === 'number' ? column.id : undefined,\n            column_name: column.column_name,\n            type: column.type,\n            advanced_data_type: column.advanced_data_type,\n            verbose_name: column.verbose_name,\n            description: column.description,\n            expression: column.expression,\n            filterable: column.filterable,\n            groupby: column.groupby,\n            is_active: column.is_active,\n            is_dttm: column.is_dttm,\n            python_date_format: column.python_date_format || null,\n            uuid: column.uuid,\n            extra: buildExtraJsonObject(column),\n          }),\n        ),\n        owners: currentDatasource.owners.map(\n          (o: Record<string, number>) => o.value || o.id,\n        ),\n      },\n    })\n      .then(() => {\n        addSuccessToast(t('The dataset has been saved'));\n        return SupersetClient.get({\n          endpoint: `/api/v1/dataset/${currentDatasource?.id}`,\n        });\n      })\n      .then(({ json }) => {\n        // eslint-disable-next-line no-param-reassign\n        json.result.type = 'table';\n        onDatasourceSave({\n          ...json.result,\n          owners: currentDatasource.owners,\n        });\n        onHide();\n      })\n      .catch(response => {\n        setIsSaving(false);\n        getClientErrorObject(response).then(({ error }) => {\n          modal.error({\n            title: t('Error'),\n            content: error || t('An error has occurred'),\n            okButtonProps: { danger: true, className: 'btn-danger' },\n          });\n        });\n      });\n  };\n\n  const onDatasourceChange = (data: Record<string, any>, err: Array<any>) => {\n    setCurrentDatasource({\n      ...data,\n      metrics: data?.metrics.map((metric: Record<string, unknown>) => ({\n        ...metric,\n        is_certified: metric?.certified_by || metric?.certification_details,\n      })),\n    });\n    setErrors(err);\n  };\n\n  const renderSaveDialog = () => (\n    <div>\n      <Alert\n        css={theme => ({\n          marginTop: theme.gridUnit * 4,\n          marginBottom: theme.gridUnit * 4,\n        })}\n        type=\"warning\"\n        showIcon\n        message={t(`The dataset configuration exposed here\n                affects all the charts using this dataset.\n                Be mindful that changing settings\n                here may affect other charts\n                in undesirable ways.`)}\n      />\n      {t('Are you sure you want to save and apply changes?')}\n    </div>\n  );\n\n  const onClickSave = () => {\n    dialog.current = modal.confirm({\n      title: t('Confirm save'),\n      content: renderSaveDialog(),\n      onOk: onConfirmSave,\n      icon: null,\n      okText: t('OK'),\n      cancelText: t('Cancel'),\n    });\n  };\n\n  const showLegacyDatasourceEditor = !isFeatureEnabled(\n    FeatureFlag.DISABLE_LEGACY_DATASOURCE_EDITOR,\n  );\n\n  return (\n    <StyledDatasourceModal\n      show={show}\n      onHide={onHide}\n      title={\n        <span>\n          {t('Edit Dataset ')}\n          <strong>{currentDatasource.table_name}</strong>\n        </span>\n      }\n      maskClosable={!isEditing}\n      footer={\n        <>\n          {showLegacyDatasourceEditor && (\n            <Button\n              buttonSize=\"small\"\n              buttonStyle=\"default\"\n              data-test=\"datasource-modal-legacy-edit\"\n              className=\"m-r-5\"\n              onClick={() => {\n                window.location.href =\n                  currentDatasource.edit_url || currentDatasource.url;\n              }}\n            >\n              {t('Use legacy datasource editor')}\n            </Button>\n          )}\n          <Button\n            data-test=\"datasource-modal-cancel\"\n            buttonSize=\"small\"\n            className=\"m-r-5\"\n            onClick={onHide}\n          >\n            {t('Cancel')}\n          </Button>\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"primary\"\n            data-test=\"datasource-modal-save\"\n            onClick={onClickSave}\n            disabled={\n              isSaving ||\n              errors.length > 0 ||\n              currentDatasource.is_managed_externally\n            }\n            tooltip={\n              currentDatasource.is_managed_externally\n                ? t(\n                    \"This dataset is managed externally, and can't be edited in Superset\",\n                  )\n                : ''\n            }\n          >\n            {t('Save')}\n          </Button>\n        </>\n      }\n      responsive\n    >\n      <DatasourceEditor\n        showLoadingForImport\n        height={500}\n        datasource={currentDatasource}\n        onChange={onDatasourceChange}\n        setIsEditing={setIsEditing}\n        currencies={currencies}\n      />\n      {contextHolder}\n    </StyledDatasourceModal>\n  );\n};\n\nexport default withToasts(DatasourceModal);\n"]},"metadata":{},"sourceType":"module"}