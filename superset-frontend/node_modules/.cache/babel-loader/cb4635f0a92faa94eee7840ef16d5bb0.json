{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { format as d3Format } from 'd3-format';\nimport NumberFormatter from '../NumberFormatter';\nexport default function createSiAtMostNDigitFormatter(config) {if (config === void 0) {config = {};}\n  const { description, n = 3, id, label } = config;\n  const siFormatter = d3Format(`.${n}s`);\n  return new NumberFormatter({\n    description,\n    formatFunc: (value) => {\n      const si = siFormatter(value);\n      /* Removing trailing `.00` if any */\n      return si.slice(-1) < 'A' ? parseFloat(si).toString() : si;\n    },\n    id: id != null ? id : `si_at_most_${n}_digit`,\n    label: label != null ? label : `SI with at most ${n} significant digits` });\n\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,MAAM,IAAIC,QAAnB,QAAmC,WAAnC;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,eAAc,SAAUC,6BAAV,CACZC,MADY,EAMN,KALNA,MAKM,cALNA,MAKM,GAAF,EAAE;EAEN,MAAM,EAAEC,WAAF,EAAeC,CAAC,GAAG,CAAnB,EAAsBC,EAAtB,EAA0BC,KAA1B,KAAoCJ,MAA1C;EACA,MAAMK,WAAW,GAAGR,QAAQ,CAAC,IAAIK,CAAC,GAAN,CAA5B;EAEA,OAAO,IAAIJ,eAAJ,CAAoB;IACzBG,WADyB;IAEzBK,UAAU,EAAE,MAAK,KAAG;MAClB,MAAMC,EAAE,GAAGF,WAAW,CAACG,KAAD,CAAtB;MAEA;MACA,OAAOD,EAAE,CAACE,KAAH,CAAS,CAAC,CAAV,IAAe,GAAf,GAAqBC,UAAU,CAACH,EAAD,CAAV,CAAeI,QAAf,EAArB,GAAiDJ,EAAxD;IACD,CAPwB;IAQzBJ,EAAE,EAAEA,EAAF,WAAEA,EAAF,GAAQ,cAAcD,CAAC,QARA;IASzBE,KAAK,EAAEA,KAAF,WAAEA,KAAF,GAAW,mBAAmBF,CAAC,qBATX,EAApB,CAAP;;AAWD","names":["format","d3Format","NumberFormatter","createSiAtMostNDigitFormatter","config","description","n","id","label","siFormatter","formatFunc","si","value","slice","parseFloat","toString"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/packages/superset-ui-core/src/number-format/factories/createSiAtMostNDigitFormatter.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { format as d3Format } from 'd3-format';\nimport NumberFormatter from '../NumberFormatter';\n\nexport default function createSiAtMostNDigitFormatter(\n  config: {\n    description?: string;\n    n?: number;\n    id?: string;\n    label?: string;\n  } = {},\n) {\n  const { description, n = 3, id, label } = config;\n  const siFormatter = d3Format(`.${n}s`);\n\n  return new NumberFormatter({\n    description,\n    formatFunc: value => {\n      const si = siFormatter(value);\n\n      /* Removing trailing `.00` if any */\n      return si.slice(-1) < 'A' ? parseFloat(si).toString() : si;\n    },\n    id: id ?? `si_at_most_${n}_digit`,\n    label: label ?? `SI with at most ${n} significant digits`,\n  });\n}\n"]},"metadata":{},"sourceType":"module"}