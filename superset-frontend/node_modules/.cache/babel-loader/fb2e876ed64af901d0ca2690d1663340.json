{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { D3_TIME_FORMAT_DOCS, formatSelectOptions, getStandardizedControls, sections, sharedControls } from '@superset-ui/chart-controls';\nimport { legendSection, richTooltipSection, seriesOrderSection, showValueSection } from '../../../controls';\nimport { OrientationType } from '../../types';\nimport { DEFAULT_FORM_DATA, TIME_SERIES_DESCRIPTION_TEXT } from '../../constants';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst { logAxis, minorSplitLine, truncateYAxis, yAxisBounds, zoomable, xAxisLabelRotation, orientation } = DEFAULT_FORM_DATA;\nfunction createAxisTitleControl(axis) {\n  const isXAxis = axis === 'x';\n  const isVertical = (controls) => Boolean((controls == null ? void 0 : controls.orientation.value) === OrientationType.vertical);\n  const isHorizontal = (controls) => Boolean((controls == null ? void 0 : controls.orientation.value) === OrientationType.horizontal);\n  return [\n  [\n  {\n    name: 'x_axis_title',\n    config: {\n      type: 'TextControl',\n      label: t('Axis Title'),\n      renderTrigger: true,\n      default: '',\n      description: t('Changing this control takes effect instantly'),\n      visibility: (_ref) => {let { controls } = _ref;return isXAxis ? isVertical(controls) : isHorizontal(controls);} } }],\n\n\n\n  [\n  {\n    name: 'x_axis_title_margin',\n    config: {\n      type: 'SelectControl',\n      freeForm: true,\n      clearable: true,\n      label: t('AXIS TITLE MARGIN'),\n      renderTrigger: true,\n      default: sections.TITLE_MARGIN_OPTIONS[0],\n      choices: formatSelectOptions(sections.TITLE_MARGIN_OPTIONS),\n      description: t('Changing this control takes effect instantly'),\n      visibility: (_ref2) => {let { controls } = _ref2;return isXAxis ? isVertical(controls) : isHorizontal(controls);} } }],\n\n\n\n  [\n  {\n    name: 'y_axis_title',\n    config: {\n      type: 'TextControl',\n      label: t('Axis Title'),\n      renderTrigger: true,\n      default: '',\n      description: t('Changing this control takes effect instantly'),\n      visibility: (_ref3) => {let { controls } = _ref3;return isXAxis ? isHorizontal(controls) : isVertical(controls);} } }],\n\n\n\n  [\n  {\n    name: 'y_axis_title_margin',\n    config: {\n      type: 'SelectControl',\n      freeForm: true,\n      clearable: true,\n      label: t('AXIS TITLE MARGIN'),\n      renderTrigger: true,\n      default: sections.TITLE_MARGIN_OPTIONS[0],\n      choices: formatSelectOptions(sections.TITLE_MARGIN_OPTIONS),\n      description: t('Changing this control takes effect instantly'),\n      visibility: (_ref4) => {let { controls } = _ref4;return isXAxis ? isHorizontal(controls) : isVertical(controls);} } }],\n\n\n\n  [\n  {\n    name: 'y_axis_title_position',\n    config: {\n      type: 'SelectControl',\n      freeForm: true,\n      clearable: false,\n      label: t('AXIS TITLE POSITION'),\n      renderTrigger: true,\n      default: sections.TITLE_POSITION_OPTIONS[0][0],\n      choices: sections.TITLE_POSITION_OPTIONS,\n      description: t('Changing this control takes effect instantly'),\n      visibility: (_ref5) => {let { controls } = _ref5;return isXAxis ? isHorizontal(controls) : isVertical(controls);} } }]];\n\n\n\n\n}\nfunction createAxisControl(axis) {\n  const isXAxis = axis === 'x';\n  const isVertical = (controls) => Boolean((controls == null ? void 0 : controls.orientation.value) === OrientationType.vertical);\n  const isHorizontal = (controls) => Boolean((controls == null ? void 0 : controls.orientation.value) === OrientationType.horizontal);\n  return [\n  [\n  {\n    name: 'x_axis_time_format',\n    config: {\n      ...sharedControls.x_axis_time_format,\n      default: 'smart_date',\n      description: `${D3_TIME_FORMAT_DOCS}. ${TIME_SERIES_DESCRIPTION_TEXT}`,\n      visibility: (_ref6) => {let { controls } = _ref6;return isXAxis ? isVertical(controls) : isHorizontal(controls);} } }],\n\n\n\n  [\n  {\n    name: 'xAxisLabelRotation',\n    config: {\n      type: 'SelectControl',\n      freeForm: true,\n      clearable: false,\n      label: t('Rotate axis label'),\n      choices: [\n      [0, '0°'],\n      [45, '45°']],\n\n      default: xAxisLabelRotation,\n      renderTrigger: true,\n      description: t('Input field supports custom rotation. e.g. 30 for 30°'),\n      visibility: (_ref7) => {let { controls } = _ref7;return isXAxis ? isVertical(controls) : isHorizontal(controls);} } }],\n\n\n\n  [\n  {\n    name: 'y_axis_format',\n    config: {\n      ...sharedControls.y_axis_format,\n      label: t('Axis Format'),\n      visibility: (_ref8) => {let { controls } = _ref8;return isXAxis ? isHorizontal(controls) : isVertical(controls);} } }],\n\n\n\n  [\n  {\n    name: 'logAxis',\n    config: {\n      type: 'CheckboxControl',\n      label: t('Logarithmic axis'),\n      renderTrigger: true,\n      default: logAxis,\n      description: t('Logarithmic axis'),\n      visibility: (_ref9) => {let { controls } = _ref9;return isXAxis ? isHorizontal(controls) : isVertical(controls);} } }],\n\n\n\n  [\n  {\n    name: 'minorSplitLine',\n    config: {\n      type: 'CheckboxControl',\n      label: t('Minor Split Line'),\n      renderTrigger: true,\n      default: minorSplitLine,\n      description: t('Draw split lines for minor axis ticks'),\n      visibility: (_ref10) => {let { controls } = _ref10;return isXAxis ? isHorizontal(controls) : isVertical(controls);} } }],\n\n\n\n  [\n  {\n    name: 'truncateYAxis',\n    config: {\n      type: 'CheckboxControl',\n      label: t('Truncate Axis'),\n      default: truncateYAxis,\n      renderTrigger: true,\n      description: t('It’s not recommended to truncate axis in Bar chart.'),\n      visibility: (_ref11) => {let { controls } = _ref11;return isXAxis ? isHorizontal(controls) : isVertical(controls);} } }],\n\n\n\n  [\n  {\n    name: 'y_axis_bounds',\n    config: {\n      type: 'BoundsControl',\n      label: t('Axis Bounds'),\n      renderTrigger: true,\n      default: yAxisBounds,\n      description: t('Bounds for the axis. When left empty, the bounds are ' +\n      'dynamically defined based on the min/max of the data. Note that ' +\n      \"this feature will only expand the axis range. It won't \" +\n      \"narrow the data's extent.\"),\n      visibility: (_ref12) => {var _controls$truncateYAx;let { controls } = _ref12;return Boolean(controls == null ? void 0 : (_controls$truncateYAx = controls.truncateYAxis) == null ? void 0 : _controls$truncateYAx.value) && (\n        isXAxis ? isHorizontal(controls) : isVertical(controls));} } }]];\n\n\n\n\n}\nconst config = {\n  controlPanelSections: [\n  sections.genericTime,\n  sections.echartsTimeSeriesQueryWithXAxisSort,\n  sections.advancedAnalyticsControls,\n  sections.annotationsAndLayersControls,\n  sections.forecastIntervalControls,\n  {\n    label: t('Chart Orientation'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'orientation',\n      config: {\n        type: 'RadioButtonControl',\n        renderTrigger: true,\n        label: t('Bar orientation'),\n        default: orientation,\n        options: [\n        [OrientationType.vertical, t('Vertical')],\n        [OrientationType.horizontal, t('Horizontal')]],\n\n        description: t('Orientation of bar chart') } }]] },\n\n\n\n\n\n  {\n    label: t('Chart Title'),\n    tabOverride: 'customize',\n    expanded: true,\n    controlSetRows: [\n    [___EmotionJSX(\"div\", { className: \"section-header\" }, t('X Axis'))],\n    ...createAxisTitleControl('x'),\n    [___EmotionJSX(\"div\", { className: \"section-header\" }, t('Y Axis'))],\n    ...createAxisTitleControl('y')] },\n\n\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [\n    ...seriesOrderSection,\n    ['color_scheme'],\n    ...showValueSection,\n    [\n    {\n      name: 'zoomable',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Data Zoom'),\n        default: zoomable,\n        renderTrigger: true,\n        description: t('Enable data zooming controls') } }],\n\n\n\n    ...legendSection,\n    [___EmotionJSX(\"div\", { className: \"section-header\" }, t('X Axis'))],\n    ...createAxisControl('x'),\n    ...richTooltipSection,\n    [___EmotionJSX(\"div\", { className: \"section-header\" }, t('Y Axis'))],\n    ...createAxisControl('y')] }],\n\n\n\n  formDataOverrides: (formData) => ({\n    ...formData,\n    metrics: getStandardizedControls().popAllMetrics(),\n    groupby: getStandardizedControls().popAllColumns() }) };\n\n\nexport default config;","map":{"version":3,"mappings":"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","names":["React","t","D3_TIME_FORMAT_DOCS","formatSelectOptions","getStandardizedControls","sections","sharedControls","legendSection","richTooltipSection","seriesOrderSection","showValueSection","OrientationType","DEFAULT_FORM_DATA","TIME_SERIES_DESCRIPTION_TEXT","logAxis","minorSplitLine","truncateYAxis","yAxisBounds","zoomable","xAxisLabelRotation","orientation","createAxisTitleControl","axis","isXAxis","isVertical","controls","Boolean","value","vertical","isHorizontal","horizontal","name","config","type","label","renderTrigger","default","description","visibility","freeForm","clearable","TITLE_MARGIN_OPTIONS","choices","TITLE_POSITION_OPTIONS","createAxisControl","x_axis_time_format","y_axis_format","controlPanelSections","genericTime","echartsTimeSeriesQueryWithXAxisSort","advancedAnalyticsControls","annotationsAndLayersControls","forecastIntervalControls","expanded","controlSetRows","options","tabOverride","formDataOverrides","formData","metrics","popAllMetrics","groupby","popAllColumns"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Timeseries/Regular/Bar/controlPanel.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  ControlPanelsContainerProps,\n  ControlSetRow,\n  ControlStateMapping,\n  D3_TIME_FORMAT_DOCS,\n  formatSelectOptions,\n  getStandardizedControls,\n  sections,\n  sharedControls,\n} from '@superset-ui/chart-controls';\nimport {\n  legendSection,\n  richTooltipSection,\n  seriesOrderSection,\n  showValueSection,\n} from '../../../controls';\n\nimport { OrientationType } from '../../types';\nimport {\n  DEFAULT_FORM_DATA,\n  TIME_SERIES_DESCRIPTION_TEXT,\n} from '../../constants';\n\nconst {\n  logAxis,\n  minorSplitLine,\n  truncateYAxis,\n  yAxisBounds,\n  zoomable,\n  xAxisLabelRotation,\n  orientation,\n} = DEFAULT_FORM_DATA;\n\nfunction createAxisTitleControl(axis: 'x' | 'y'): ControlSetRow[] {\n  const isXAxis = axis === 'x';\n  const isVertical = (controls: ControlStateMapping) =>\n    Boolean(controls?.orientation.value === OrientationType.vertical);\n  const isHorizontal = (controls: ControlStateMapping) =>\n    Boolean(controls?.orientation.value === OrientationType.horizontal);\n  return [\n    [\n      {\n        name: 'x_axis_title',\n        config: {\n          type: 'TextControl',\n          label: t('Axis Title'),\n          renderTrigger: true,\n          default: '',\n          description: t('Changing this control takes effect instantly'),\n          visibility: ({ controls }: ControlPanelsContainerProps) =>\n            isXAxis ? isVertical(controls) : isHorizontal(controls),\n        },\n      },\n    ],\n    [\n      {\n        name: 'x_axis_title_margin',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          clearable: true,\n          label: t('AXIS TITLE MARGIN'),\n          renderTrigger: true,\n          default: sections.TITLE_MARGIN_OPTIONS[0],\n          choices: formatSelectOptions(sections.TITLE_MARGIN_OPTIONS),\n          description: t('Changing this control takes effect instantly'),\n          visibility: ({ controls }: ControlPanelsContainerProps) =>\n            isXAxis ? isVertical(controls) : isHorizontal(controls),\n        },\n      },\n    ],\n    [\n      {\n        name: 'y_axis_title',\n        config: {\n          type: 'TextControl',\n          label: t('Axis Title'),\n          renderTrigger: true,\n          default: '',\n          description: t('Changing this control takes effect instantly'),\n          visibility: ({ controls }: ControlPanelsContainerProps) =>\n            isXAxis ? isHorizontal(controls) : isVertical(controls),\n        },\n      },\n    ],\n    [\n      {\n        name: 'y_axis_title_margin',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          clearable: true,\n          label: t('AXIS TITLE MARGIN'),\n          renderTrigger: true,\n          default: sections.TITLE_MARGIN_OPTIONS[0],\n          choices: formatSelectOptions(sections.TITLE_MARGIN_OPTIONS),\n          description: t('Changing this control takes effect instantly'),\n          visibility: ({ controls }: ControlPanelsContainerProps) =>\n            isXAxis ? isHorizontal(controls) : isVertical(controls),\n        },\n      },\n    ],\n    [\n      {\n        name: 'y_axis_title_position',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          clearable: false,\n          label: t('AXIS TITLE POSITION'),\n          renderTrigger: true,\n          default: sections.TITLE_POSITION_OPTIONS[0][0],\n          choices: sections.TITLE_POSITION_OPTIONS,\n          description: t('Changing this control takes effect instantly'),\n          visibility: ({ controls }: ControlPanelsContainerProps) =>\n            isXAxis ? isHorizontal(controls) : isVertical(controls),\n        },\n      },\n    ],\n  ];\n}\n\nfunction createAxisControl(axis: 'x' | 'y'): ControlSetRow[] {\n  const isXAxis = axis === 'x';\n  const isVertical = (controls: ControlStateMapping) =>\n    Boolean(controls?.orientation.value === OrientationType.vertical);\n  const isHorizontal = (controls: ControlStateMapping) =>\n    Boolean(controls?.orientation.value === OrientationType.horizontal);\n  return [\n    [\n      {\n        name: 'x_axis_time_format',\n        config: {\n          ...sharedControls.x_axis_time_format,\n          default: 'smart_date',\n          description: `${D3_TIME_FORMAT_DOCS}. ${TIME_SERIES_DESCRIPTION_TEXT}`,\n          visibility: ({ controls }: ControlPanelsContainerProps) =>\n            isXAxis ? isVertical(controls) : isHorizontal(controls),\n        },\n      },\n    ],\n    [\n      {\n        name: 'xAxisLabelRotation',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          clearable: false,\n          label: t('Rotate axis label'),\n          choices: [\n            [0, '0°'],\n            [45, '45°'],\n          ],\n          default: xAxisLabelRotation,\n          renderTrigger: true,\n          description: t(\n            'Input field supports custom rotation. e.g. 30 for 30°',\n          ),\n          visibility: ({ controls }: ControlPanelsContainerProps) =>\n            isXAxis ? isVertical(controls) : isHorizontal(controls),\n        },\n      },\n    ],\n    [\n      {\n        name: 'y_axis_format',\n        config: {\n          ...sharedControls.y_axis_format,\n          label: t('Axis Format'),\n          visibility: ({ controls }: ControlPanelsContainerProps) =>\n            isXAxis ? isHorizontal(controls) : isVertical(controls),\n        },\n      },\n    ],\n    [\n      {\n        name: 'logAxis',\n        config: {\n          type: 'CheckboxControl',\n          label: t('Logarithmic axis'),\n          renderTrigger: true,\n          default: logAxis,\n          description: t('Logarithmic axis'),\n          visibility: ({ controls }: ControlPanelsContainerProps) =>\n            isXAxis ? isHorizontal(controls) : isVertical(controls),\n        },\n      },\n    ],\n    [\n      {\n        name: 'minorSplitLine',\n        config: {\n          type: 'CheckboxControl',\n          label: t('Minor Split Line'),\n          renderTrigger: true,\n          default: minorSplitLine,\n          description: t('Draw split lines for minor axis ticks'),\n          visibility: ({ controls }: ControlPanelsContainerProps) =>\n            isXAxis ? isHorizontal(controls) : isVertical(controls),\n        },\n      },\n    ],\n    [\n      {\n        name: 'truncateYAxis',\n        config: {\n          type: 'CheckboxControl',\n          label: t('Truncate Axis'),\n          default: truncateYAxis,\n          renderTrigger: true,\n          description: t('It’s not recommended to truncate axis in Bar chart.'),\n          visibility: ({ controls }: ControlPanelsContainerProps) =>\n            isXAxis ? isHorizontal(controls) : isVertical(controls),\n        },\n      },\n    ],\n    [\n      {\n        name: 'y_axis_bounds',\n        config: {\n          type: 'BoundsControl',\n          label: t('Axis Bounds'),\n          renderTrigger: true,\n          default: yAxisBounds,\n          description: t(\n            'Bounds for the axis. When left empty, the bounds are ' +\n              'dynamically defined based on the min/max of the data. Note that ' +\n              \"this feature will only expand the axis range. It won't \" +\n              \"narrow the data's extent.\",\n          ),\n          visibility: ({ controls }: ControlPanelsContainerProps) =>\n            Boolean(controls?.truncateYAxis?.value) &&\n            (isXAxis ? isHorizontal(controls) : isVertical(controls)),\n        },\n      },\n    ],\n  ];\n}\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.genericTime,\n    sections.echartsTimeSeriesQueryWithXAxisSort,\n    sections.advancedAnalyticsControls,\n    sections.annotationsAndLayersControls,\n    sections.forecastIntervalControls,\n    {\n      label: t('Chart Orientation'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'orientation',\n            config: {\n              type: 'RadioButtonControl',\n              renderTrigger: true,\n              label: t('Bar orientation'),\n              default: orientation,\n              options: [\n                [OrientationType.vertical, t('Vertical')],\n                [OrientationType.horizontal, t('Horizontal')],\n              ],\n              description: t('Orientation of bar chart'),\n            },\n          },\n        ],\n      ],\n    },\n    {\n      label: t('Chart Title'),\n      tabOverride: 'customize',\n      expanded: true,\n      controlSetRows: [\n        [<div className=\"section-header\">{t('X Axis')}</div>],\n        ...createAxisTitleControl('x'),\n        [<div className=\"section-header\">{t('Y Axis')}</div>],\n        ...createAxisTitleControl('y'),\n      ],\n    },\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        ...seriesOrderSection,\n        ['color_scheme'],\n        ...showValueSection,\n        [\n          {\n            name: 'zoomable',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Data Zoom'),\n              default: zoomable,\n              renderTrigger: true,\n              description: t('Enable data zooming controls'),\n            },\n          },\n        ],\n        ...legendSection,\n        [<div className=\"section-header\">{t('X Axis')}</div>],\n        ...createAxisControl('x'),\n        ...richTooltipSection,\n        [<div className=\"section-header\">{t('Y Axis')}</div>],\n        ...createAxisControl('y'),\n      ],\n    },\n  ],\n  formDataOverrides: formData => ({\n    ...formData,\n    metrics: getStandardizedControls().popAllMetrics(),\n    groupby: getStandardizedControls().popAllColumns(),\n  }),\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}