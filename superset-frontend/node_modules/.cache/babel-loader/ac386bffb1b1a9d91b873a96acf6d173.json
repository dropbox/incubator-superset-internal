{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, isDefined } from '@superset-ui/core';\nimport { isDataset, isQueryResponse } from '@superset-ui/chart-controls';\nexport function getTemporalColumns(datasource) {\n  const rv = {\n    temporalColumns: [],\n    defaultTemporalColumn: undefined };\n\n  if (isDataset(datasource)) {\n    rv.temporalColumns = ensureIsArray(datasource.columns).filter((c) => c.is_dttm);\n  }\n  if (isQueryResponse(datasource)) {\n    rv.temporalColumns = ensureIsArray(datasource.columns).filter((c) => c.is_dttm);\n  }\n  if (isDataset(datasource)) {\n    rv.defaultTemporalColumn = datasource.main_dttm_col;\n  }\n  if (!isDefined(rv.defaultTemporalColumn)) {var _rv$temporalColumns$, _rv$temporalColumns$2, _rv$temporalColumns$3;\n    rv.defaultTemporalColumn = (_rv$temporalColumns$ = (_rv$temporalColumns$2 =\n    rv.temporalColumns[0]) == null ? void 0 : _rv$temporalColumns$2.column_name) != null ? _rv$temporalColumns$ : (_rv$temporalColumns$3 =\n    rv.temporalColumns[0]) == null ? void 0 : _rv$temporalColumns$3.name;\n  }\n  return rv;\n}\nexport function isTemporalColumn(columnName, datasource) {\n  const columns = getTemporalColumns(datasource).temporalColumns;\n  for (let i = 0; i < columns.length; i += 1) {\n    if (columns[i].column_name === columnName) {\n      return true;\n    }\n  }\n  return false;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getTemporalColumns, \"getTemporalColumns\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/utils/getTemporalColumns.ts\");reactHotLoader.register(isTemporalColumn, \"isTemporalColumn\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/utils/getTemporalColumns.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,aADF,EAEEC,SAFF,QAKO,mBALP;AAMA,SAGEC,SAHF,EAIEC,eAJF,QAKO,6BALP;AAOA,OAAM,SAAUC,kBAAV,CACJC,UADI,EACsD;EAE1D,MAAMC,EAAE,GAGJ;IACFC,eAAe,EAAE,EADf;IAEFC,qBAAqB,EAAEC,SAFrB,EAHJ;;EAQA,IAAIP,SAAS,CAACG,UAAD,CAAb,EAA2B;IACzBC,EAAE,CAACC,eAAH,GAAqBP,aAAa,CAACK,UAAU,CAACK,OAAZ,CAAb,CAAkCC,MAAlC,CACnB,EAAC,KAAIC,CAAC,CAACC,OADY,CAArB;EAGD;EACD,IAAIV,eAAe,CAACE,UAAD,CAAnB,EAAiC;IAC/BC,EAAE,CAACC,eAAH,GAAqBP,aAAa,CAACK,UAAU,CAACK,OAAZ,CAAb,CAAkCC,MAAlC,CACnB,EAAC,KAAIC,CAAC,CAACC,OADY,CAArB;EAGD;EAED,IAAIX,SAAS,CAACG,UAAD,CAAb,EAA2B;IACzBC,EAAE,CAACE,qBAAH,GAA2BH,UAAU,CAACS,aAAtC;EACD;EACD,IAAI,CAACb,SAAS,CAACK,EAAE,CAACE,qBAAJ,CAAd,EAA0C;IACxCF,EAAE,CAACE,qBAAH;IACGF,EAAE,CAACC,eAAH,CAAmB,CAAnB,CADH,qBACG,sBAAsCQ,WADzC;IAEGT,EAAE,CAACC,eAAH,CAAmB,CAAnB,CAFH,qBAEG,sBAAuCS,IAF1C;EAGD;EAED,OAAOV,EAAP;AACD;AAED,OAAM,SAAUW,gBAAV,CACJC,UADI,EAEJb,UAFI,EAEsD;EAE1D,MAAMK,OAAO,GAAGN,kBAAkB,CAACC,UAAD,CAAlB,CAA+BE,eAA/C;EACA,KAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,OAAO,CAACU,MAA5B,EAAoCD,CAAC,IAAI,CAAzC,EAA4C;IAC1C,IAAIT,OAAO,CAACS,CAAD,CAAP,CAAWJ,WAAX,KAA2BG,UAA/B,EAA2C;MACzC,OAAO,IAAP;IACD;EACF;EACD,OAAO,KAAP;AACD,C,iLA7Ced,kB,wLAkCAa,gB","names":["ensureIsArray","isDefined","isDataset","isQueryResponse","getTemporalColumns","datasource","rv","temporalColumns","defaultTemporalColumn","undefined","columns","filter","c","is_dttm","main_dttm_col","column_name","name","isTemporalColumn","columnName","i","length"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/utils/getTemporalColumns.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ensureIsArray,\n  isDefined,\n  QueryColumn,\n  ValueOf,\n} from '@superset-ui/core';\nimport {\n  ColumnMeta,\n  ControlPanelState,\n  isDataset,\n  isQueryResponse,\n} from '@superset-ui/chart-controls';\n\nexport function getTemporalColumns(\n  datasource: ValueOf<Pick<ControlPanelState, 'datasource'>>,\n) {\n  const rv: {\n    temporalColumns: ColumnMeta[] | QueryColumn[];\n    defaultTemporalColumn: string | null | undefined;\n  } = {\n    temporalColumns: [],\n    defaultTemporalColumn: undefined,\n  };\n\n  if (isDataset(datasource)) {\n    rv.temporalColumns = ensureIsArray(datasource.columns).filter(\n      c => c.is_dttm,\n    );\n  }\n  if (isQueryResponse(datasource)) {\n    rv.temporalColumns = ensureIsArray(datasource.columns).filter(\n      c => c.is_dttm,\n    );\n  }\n\n  if (isDataset(datasource)) {\n    rv.defaultTemporalColumn = datasource.main_dttm_col;\n  }\n  if (!isDefined(rv.defaultTemporalColumn)) {\n    rv.defaultTemporalColumn =\n      (rv.temporalColumns[0] as ColumnMeta)?.column_name ??\n      (rv.temporalColumns[0] as QueryColumn)?.name;\n  }\n\n  return rv;\n}\n\nexport function isTemporalColumn(\n  columnName: string,\n  datasource: ValueOf<Pick<ControlPanelState, 'datasource'>>,\n): boolean {\n  const columns = getTemporalColumns(datasource).temporalColumns;\n  for (let i = 0; i < columns.length; i += 1) {\n    if (columns[i].column_name === columnName) {\n      return true;\n    }\n  }\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}