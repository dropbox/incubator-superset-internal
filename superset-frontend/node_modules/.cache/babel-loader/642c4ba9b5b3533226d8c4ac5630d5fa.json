{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\nimport { RangePicker } from 'src/components/DatePicker';\nimport moment from 'moment';\nimport Icons from 'src/components/Icons';\nimport Modal from 'src/components/Modal';\nimport { StyledIcon } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { JsonEditor } from 'src/components/AsyncAceEditor';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledAnnotationTitle = styled.div`\n  margin: ${(_ref) => {let { theme } = _ref;return theme.gridUnit * 2;}}px auto\n    ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit * 4;}}px auto;\n`;\nconst StyledJsonEditor = styled(JsonEditor)`\n  border-radius: ${(_ref3) => {let { theme } = _ref3;return theme.borderRadius;}}px;\n  border: 1px solid ${(_ref4) => {let { theme } = _ref4;return theme.colors.secondary.light2;}};\n`;\nconst AnnotationContainer = styled.div`\n  margin-bottom: ${(_ref5) => {let { theme } = _ref5;return theme.gridUnit * 5;}}px;\n\n  .control-label {\n    margin-bottom: ${(_ref6) => {let { theme } = _ref6;return theme.gridUnit * 2;}}px;\n  }\n\n  .required {\n    margin-left: ${(_ref7) => {let { theme } = _ref7;return theme.gridUnit / 2;}}px;\n    color: ${(_ref8) => {let { theme } = _ref8;return theme.colors.error.base;}};\n  }\n\n  textarea {\n    flex: 1 1 auto;\n    height: ${(_ref9) => {let { theme } = _ref9;return theme.gridUnit * 17;}}px;\n    resize: none;\n    width: 100%;\n  }\n\n  textarea,\n  input[type='text'] {\n    padding: ${(_ref10) => {let { theme } = _ref10;return theme.gridUnit * 1.5;}}px\n      ${(_ref11) => {let { theme } = _ref11;return theme.gridUnit * 2;}}px;\n    border: 1px solid ${(_ref12) => {let { theme } = _ref12;return theme.colors.grayscale.light2;}};\n    border-radius: ${(_ref13) => {let { theme } = _ref13;return theme.gridUnit;}}px;\n  }\n\n  input[type='text'] {\n    width: 65%;\n  }\n`;\nconst AnnotationModal = (_ref14) => {var _currentAnnotation$st2, _currentAnnotation$en2;let { addDangerToast, addSuccessToast, annotationLayerId, annotation = null, onAnnotationAdd, onHide, show } = _ref14;\n  const [disableSave, setDisableSave] = useState(true);\n  const [currentAnnotation, setCurrentAnnotation] = useState(null);\n  const isEditMode = annotation !== null;\n  // annotation fetch logic\n  const { state: { loading, resource }, fetchResource, createResource, updateResource } = useSingleViewResource(`annotation_layer/${annotationLayerId}/annotation`, t('annotation'), addDangerToast);\n  const resetAnnotation = () => {\n    // Reset annotation\n    setCurrentAnnotation({\n      short_descr: '',\n      start_dttm: '',\n      end_dttm: '',\n      json_metadata: '',\n      long_descr: '' });\n\n  };\n  const hide = () => {\n    if (isEditMode) {\n      setCurrentAnnotation(resource);\n    } else\n    {\n      resetAnnotation();\n    }\n    onHide();\n  };\n  const onSave = () => {\n    if (isEditMode) {\n      // Edit\n      if (currentAnnotation != null && currentAnnotation.id) {\n        const update_id = currentAnnotation.id;\n        delete currentAnnotation.id;\n        delete currentAnnotation.created_by;\n        delete currentAnnotation.changed_by;\n        delete currentAnnotation.changed_on_delta_humanized;\n        delete currentAnnotation.layer;\n        updateResource(update_id, currentAnnotation).then((response) => {\n          // No response on error\n          if (!response) {\n            return;\n          }\n          if (onAnnotationAdd) {\n            onAnnotationAdd();\n          }\n          hide();\n          addSuccessToast(t('The annotation has been updated'));\n        });\n      }\n    } else\n    if (currentAnnotation) {\n      // Create\n      createResource(currentAnnotation).then((response) => {\n        if (!response) {\n          return;\n        }\n        if (onAnnotationAdd) {\n          onAnnotationAdd();\n        }\n        hide();\n        addSuccessToast(t('The annotation has been saved'));\n      });\n    }\n  };\n  const onAnnotationTextChange = (event) => {\n    const { target } = event;\n    const data = {\n      ...currentAnnotation,\n      end_dttm: currentAnnotation ? currentAnnotation.end_dttm : '',\n      short_descr: currentAnnotation ? currentAnnotation.short_descr : '',\n      start_dttm: currentAnnotation ? currentAnnotation.start_dttm : '' };\n\n    data[target.name] = target.value;\n    setCurrentAnnotation(data);\n  };\n  const onJsonChange = (json) => {\n    const data = {\n      ...currentAnnotation,\n      end_dttm: currentAnnotation ? currentAnnotation.end_dttm : '',\n      json_metadata: json,\n      short_descr: currentAnnotation ? currentAnnotation.short_descr : '',\n      start_dttm: currentAnnotation ? currentAnnotation.start_dttm : '' };\n\n    setCurrentAnnotation(data);\n  };\n  const onDateChange = (value, dateString) => {\n    const data = {\n      ...currentAnnotation,\n      end_dttm: currentAnnotation && dateString[1].length ?\n      moment(dateString[1]).format('YYYY-MM-DD HH:mm') :\n      '',\n      short_descr: currentAnnotation ? currentAnnotation.short_descr : '',\n      start_dttm: currentAnnotation && dateString[0].length ?\n      moment(dateString[0]).format('YYYY-MM-DD HH:mm') :\n      '' };\n\n    setCurrentAnnotation(data);\n  };\n  const validate = () => {var _currentAnnotation$sh, _currentAnnotation$st, _currentAnnotation$en;\n    if (currentAnnotation != null && (_currentAnnotation$sh = currentAnnotation.short_descr) != null && _currentAnnotation$sh.length &&\n    currentAnnotation != null && (_currentAnnotation$st = currentAnnotation.start_dttm) != null && _currentAnnotation$st.length &&\n    currentAnnotation != null && (_currentAnnotation$en = currentAnnotation.end_dttm) != null && _currentAnnotation$en.length) {\n      setDisableSave(false);\n    } else\n    {\n      setDisableSave(true);\n    }\n  };\n  // Initialize\n  useEffect(() => {\n    if (isEditMode && (\n    !currentAnnotation ||\n    !currentAnnotation.id ||\n    annotation && annotation.id !== currentAnnotation.id ||\n    show)) {\n      if ((annotation == null ? void 0 : annotation.id) !== null && !loading) {\n        const id = annotation.id || 0;\n        fetchResource(id);\n      }\n    } else\n    if (!isEditMode && (\n    !currentAnnotation || currentAnnotation.id || show)) {\n      resetAnnotation();\n    }\n  }, [annotation]);\n  useEffect(() => {\n    if (resource) {\n      setCurrentAnnotation(resource);\n    }\n  }, [resource]);\n  // Validation\n  useEffect(() => {\n    validate();\n  }, [\n  currentAnnotation ? currentAnnotation.short_descr : '',\n  currentAnnotation ? currentAnnotation.start_dttm : '',\n  currentAnnotation ? currentAnnotation.end_dttm : '']);\n\n  return ___EmotionJSX(Modal, { disablePrimaryButton: disableSave, onHandledPrimaryAction: onSave, onHide: hide, primaryButtonName: isEditMode ? t('Save') : t('Add'), show: show, width: \"55%\", title: ___EmotionJSX(\"h4\", { \"data-test\": \"annotation-modal-title\" },\n    isEditMode ? ___EmotionJSX(Icons.EditAlt, { css: StyledIcon }) : ___EmotionJSX(Icons.PlusLarge, { css: StyledIcon }),\n    isEditMode ? t('Edit annotation') : t('Add annotation')) },\n\n  ___EmotionJSX(StyledAnnotationTitle, null,\n  ___EmotionJSX(\"h4\", null, t('Basic information'))),\n\n  ___EmotionJSX(AnnotationContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" },\n  t('Annotation name'),\n  ___EmotionJSX(\"span\", { className: \"required\" }, \"*\")),\n\n  ___EmotionJSX(\"input\", { name: \"short_descr\", onChange: onAnnotationTextChange, type: \"text\", value: currentAnnotation == null ? void 0 : currentAnnotation.short_descr })),\n\n  ___EmotionJSX(AnnotationContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" },\n  t('date'),\n  ___EmotionJSX(\"span\", { className: \"required\" }, \"*\")),\n\n  ___EmotionJSX(RangePicker, { placeholder: [t('Start date'), t('End date')], format: \"YYYY-MM-DD HH:mm\", onChange: onDateChange, showTime: { format: 'hh:mm a' }, use12Hours: true, value: currentAnnotation != null && (_currentAnnotation$st2 = currentAnnotation.start_dttm) != null && _currentAnnotation$st2.length ||\n    currentAnnotation != null && (_currentAnnotation$en2 = currentAnnotation.end_dttm) != null && _currentAnnotation$en2.length ?\n    [\n    moment(currentAnnotation.start_dttm),\n    moment(currentAnnotation.end_dttm)] :\n\n    null })),\n\n  ___EmotionJSX(StyledAnnotationTitle, null,\n  ___EmotionJSX(\"h4\", null, t('Additional information'))),\n\n  ___EmotionJSX(AnnotationContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('description')),\n  ___EmotionJSX(\"textarea\", { name: \"long_descr\", value: currentAnnotation ? currentAnnotation.long_descr : '', placeholder: t('Description (this can be seen in the list)'), onChange: onAnnotationTextChange })),\n\n  ___EmotionJSX(AnnotationContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('JSON metadata')),\n  ___EmotionJSX(StyledJsonEditor, { onChange: onJsonChange, value: currentAnnotation != null && currentAnnotation.json_metadata ?\n    currentAnnotation.json_metadata :\n    '', width: \"100%\", height: \"120px\" })));\n\n\n};__signature__(AnnotationModal, \"useState{[disableSave, setDisableSave](true)}\\nuseState{[currentAnnotation, setCurrentAnnotation](null)}\\nuseSingleViewResource{{ state: { loading, resource }, fetchResource, createResource, updateResource, }}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\", () => [useSingleViewResource]);const _default =\nwithToasts(AnnotationModal);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledAnnotationTitle, \"StyledAnnotationTitle\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/annotations/AnnotationModal.tsx\");reactHotLoader.register(StyledJsonEditor, \"StyledJsonEditor\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/annotations/AnnotationModal.tsx\");reactHotLoader.register(AnnotationContainer, \"AnnotationContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/annotations/AnnotationModal.tsx\");reactHotLoader.register(AnnotationModal, \"AnnotationModal\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/annotations/AnnotationModal.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/annotations/AnnotationModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useState","useEffect","styled","t","useSingleViewResource","RangePicker","moment","Icons","Modal","StyledIcon","withToasts","JsonEditor","StyledAnnotationTitle","div","theme","gridUnit","StyledJsonEditor","borderRadius","colors","secondary","light2","AnnotationContainer","error","base","grayscale","AnnotationModal","addDangerToast","addSuccessToast","annotationLayerId","annotation","onAnnotationAdd","onHide","show","disableSave","setDisableSave","currentAnnotation","setCurrentAnnotation","isEditMode","state","loading","resource","fetchResource","createResource","updateResource","resetAnnotation","short_descr","start_dttm","end_dttm","json_metadata","long_descr","hide","onSave","id","update_id","created_by","changed_by","changed_on_delta_humanized","layer","then","response","onAnnotationTextChange","event","target","data","name","value","onJsonChange","json","onDateChange","dateString","length","format","validate"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/annotations/AnnotationModal.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\nimport { RangePicker } from 'src/components/DatePicker';\nimport moment from 'moment';\nimport Icons from 'src/components/Icons';\nimport Modal from 'src/components/Modal';\nimport { StyledIcon } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { JsonEditor } from 'src/components/AsyncAceEditor';\n\nimport { AnnotationObject } from './types';\n\ninterface AnnotationModalProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  annotationLayerId: number;\n  annotation?: AnnotationObject | null;\n  onAnnotationAdd?: (annotation?: AnnotationObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst StyledAnnotationTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 2}px auto\n    ${({ theme }) => theme.gridUnit * 4}px auto;\n`;\n\nconst StyledJsonEditor = styled(JsonEditor)`\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  border: 1px solid ${({ theme }) => theme.colors.secondary.light2};\n`;\n\nconst AnnotationContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 5}px;\n\n  .control-label {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit / 2}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n\n  textarea {\n    flex: 1 1 auto;\n    height: ${({ theme }) => theme.gridUnit * 17}px;\n    resize: none;\n    width: 100%;\n  }\n\n  textarea,\n  input[type='text'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n  }\n\n  input[type='text'] {\n    width: 65%;\n  }\n`;\n\nconst AnnotationModal: FunctionComponent<AnnotationModalProps> = ({\n  addDangerToast,\n  addSuccessToast,\n  annotationLayerId,\n  annotation = null,\n  onAnnotationAdd,\n  onHide,\n  show,\n}) => {\n  const [disableSave, setDisableSave] = useState<boolean>(true);\n  const [currentAnnotation, setCurrentAnnotation] =\n    useState<AnnotationObject | null>(null);\n  const isEditMode = annotation !== null;\n\n  // annotation fetch logic\n  const {\n    state: { loading, resource },\n    fetchResource,\n    createResource,\n    updateResource,\n  } = useSingleViewResource<AnnotationObject>(\n    `annotation_layer/${annotationLayerId}/annotation`,\n    t('annotation'),\n    addDangerToast,\n  );\n\n  const resetAnnotation = () => {\n    // Reset annotation\n    setCurrentAnnotation({\n      short_descr: '',\n      start_dttm: '',\n      end_dttm: '',\n      json_metadata: '',\n      long_descr: '',\n    });\n  };\n\n  const hide = () => {\n    if (isEditMode) {\n      setCurrentAnnotation(resource);\n    } else {\n      resetAnnotation();\n    }\n    onHide();\n  };\n\n  const onSave = () => {\n    if (isEditMode) {\n      // Edit\n      if (currentAnnotation?.id) {\n        const update_id = currentAnnotation.id;\n        delete currentAnnotation.id;\n        delete currentAnnotation.created_by;\n        delete currentAnnotation.changed_by;\n        delete currentAnnotation.changed_on_delta_humanized;\n        delete currentAnnotation.layer;\n        updateResource(update_id, currentAnnotation).then(response => {\n          // No response on error\n          if (!response) {\n            return;\n          }\n\n          if (onAnnotationAdd) {\n            onAnnotationAdd();\n          }\n\n          hide();\n\n          addSuccessToast(t('The annotation has been updated'));\n        });\n      }\n    } else if (currentAnnotation) {\n      // Create\n      createResource(currentAnnotation).then(response => {\n        if (!response) {\n          return;\n        }\n\n        if (onAnnotationAdd) {\n          onAnnotationAdd();\n        }\n\n        hide();\n\n        addSuccessToast(t('The annotation has been saved'));\n      });\n    }\n  };\n\n  const onAnnotationTextChange = (\n    event:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { target } = event;\n\n    const data = {\n      ...currentAnnotation,\n      end_dttm: currentAnnotation ? currentAnnotation.end_dttm : '',\n      short_descr: currentAnnotation ? currentAnnotation.short_descr : '',\n      start_dttm: currentAnnotation ? currentAnnotation.start_dttm : '',\n    };\n\n    data[target.name] = target.value;\n    setCurrentAnnotation(data);\n  };\n\n  const onJsonChange = (json: string) => {\n    const data = {\n      ...currentAnnotation,\n      end_dttm: currentAnnotation ? currentAnnotation.end_dttm : '',\n      json_metadata: json,\n      short_descr: currentAnnotation ? currentAnnotation.short_descr : '',\n      start_dttm: currentAnnotation ? currentAnnotation.start_dttm : '',\n    };\n    setCurrentAnnotation(data);\n  };\n\n  const onDateChange = (value: any, dateString: Array<string>) => {\n    const data = {\n      ...currentAnnotation,\n      end_dttm:\n        currentAnnotation && dateString[1].length\n          ? moment(dateString[1]).format('YYYY-MM-DD HH:mm')\n          : '',\n      short_descr: currentAnnotation ? currentAnnotation.short_descr : '',\n      start_dttm:\n        currentAnnotation && dateString[0].length\n          ? moment(dateString[0]).format('YYYY-MM-DD HH:mm')\n          : '',\n    };\n    setCurrentAnnotation(data);\n  };\n\n  const validate = () => {\n    if (\n      currentAnnotation?.short_descr?.length &&\n      currentAnnotation?.start_dttm?.length &&\n      currentAnnotation?.end_dttm?.length\n    ) {\n      setDisableSave(false);\n    } else {\n      setDisableSave(true);\n    }\n  };\n\n  // Initialize\n  useEffect(() => {\n    if (\n      isEditMode &&\n      (!currentAnnotation ||\n        !currentAnnotation.id ||\n        (annotation && annotation.id !== currentAnnotation.id) ||\n        show)\n    ) {\n      if (annotation?.id !== null && !loading) {\n        const id = annotation.id || 0;\n\n        fetchResource(id);\n      }\n    } else if (\n      !isEditMode &&\n      (!currentAnnotation || currentAnnotation.id || show)\n    ) {\n      resetAnnotation();\n    }\n  }, [annotation]);\n\n  useEffect(() => {\n    if (resource) {\n      setCurrentAnnotation(resource);\n    }\n  }, [resource]);\n\n  // Validation\n  useEffect(() => {\n    validate();\n  }, [\n    currentAnnotation ? currentAnnotation.short_descr : '',\n    currentAnnotation ? currentAnnotation.start_dttm : '',\n    currentAnnotation ? currentAnnotation.end_dttm : '',\n  ]);\n\n  return (\n    <Modal\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={hide}\n      primaryButtonName={isEditMode ? t('Save') : t('Add')}\n      show={show}\n      width=\"55%\"\n      title={\n        <h4 data-test=\"annotation-modal-title\">\n          {isEditMode ? (\n            <Icons.EditAlt css={StyledIcon} />\n          ) : (\n            <Icons.PlusLarge css={StyledIcon} />\n          )}\n          {isEditMode ? t('Edit annotation') : t('Add annotation')}\n        </h4>\n      }\n    >\n      <StyledAnnotationTitle>\n        <h4>{t('Basic information')}</h4>\n      </StyledAnnotationTitle>\n      <AnnotationContainer>\n        <div className=\"control-label\">\n          {t('Annotation name')}\n          <span className=\"required\">*</span>\n        </div>\n        <input\n          name=\"short_descr\"\n          onChange={onAnnotationTextChange}\n          type=\"text\"\n          value={currentAnnotation?.short_descr}\n        />\n      </AnnotationContainer>\n      <AnnotationContainer>\n        <div className=\"control-label\">\n          {t('date')}\n          <span className=\"required\">*</span>\n        </div>\n        <RangePicker\n          placeholder={[t('Start date'), t('End date')]}\n          format=\"YYYY-MM-DD HH:mm\"\n          onChange={onDateChange}\n          showTime={{ format: 'hh:mm a' }}\n          use12Hours\n          value={\n            currentAnnotation?.start_dttm?.length ||\n            currentAnnotation?.end_dttm?.length\n              ? [\n                  moment(currentAnnotation.start_dttm),\n                  moment(currentAnnotation.end_dttm),\n                ]\n              : null\n          }\n        />\n      </AnnotationContainer>\n      <StyledAnnotationTitle>\n        <h4>{t('Additional information')}</h4>\n      </StyledAnnotationTitle>\n      <AnnotationContainer>\n        <div className=\"control-label\">{t('description')}</div>\n        <textarea\n          name=\"long_descr\"\n          value={currentAnnotation ? currentAnnotation.long_descr : ''}\n          placeholder={t('Description (this can be seen in the list)')}\n          onChange={onAnnotationTextChange}\n        />\n      </AnnotationContainer>\n      <AnnotationContainer>\n        <div className=\"control-label\">{t('JSON metadata')}</div>\n        <StyledJsonEditor\n          onChange={onJsonChange}\n          value={\n            currentAnnotation?.json_metadata\n              ? currentAnnotation.json_metadata\n              : ''\n          }\n          width=\"100%\"\n          height=\"120px\"\n        />\n      </AnnotationContainer>\n    </Modal>\n  );\n};\n\nexport default withToasts(AnnotationModal);\n"]},"metadata":{},"sourceType":"module"}