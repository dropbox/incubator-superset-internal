{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useMemo, forwardRef, useImperativeHandle } from 'react';\nimport { t } from '@superset-ui/core';\nimport { Select } from 'src/components';\nimport { FormLabel } from 'src/components/Form';\nimport AsyncSelect from 'src/components/Select/AsyncSelect';\nimport { FilterContainer } from './Base';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction SelectFilter(_ref, ref) {let { Header, name, fetchSelects, initialValue, onSelect, selects = [] } = _ref;\n  const [selectedOption, setSelectedOption] = useState(initialValue);\n  const onChange = (selected) => {\n    onSelect(selected ? { label: selected.label, value: selected.value } : undefined);\n    setSelectedOption(selected);\n  };\n  const onClear = () => {\n    onSelect(undefined, true);\n    setSelectedOption(undefined);\n  };\n  useImperativeHandle(ref, () => ({\n    clearFilter: () => {\n      onClear();\n    } }));\n\n  const fetchAndFormatSelects = useMemo(() => async (inputValue, page, pageSize) => {\n    if (fetchSelects) {\n      const selectValues = await fetchSelects(inputValue, page, pageSize);\n      return {\n        data: selectValues.data,\n        totalCount: selectValues.totalCount };\n\n    }\n    return {\n      data: [],\n      totalCount: 0 };\n\n  }, [fetchSelects]);\n  return ___EmotionJSX(FilterContainer, null,\n  fetchSelects ? ___EmotionJSX(AsyncSelect, { allowClear: true, ariaLabel: typeof Header === 'string' ? Header : name || t('Filter'), header: ___EmotionJSX(FormLabel, null, Header), onChange: onChange, onClear: onClear, options: fetchAndFormatSelects, placeholder: t('Select or type a value'), showSearch: true, value: selectedOption }) : ___EmotionJSX(Select, { allowClear: true, ariaLabel: typeof Header === 'string' ? Header : name || t('Filter'), header: ___EmotionJSX(FormLabel, null, Header), labelInValue: true, onChange: onChange, onClear: onClear, options: selects, placeholder: t('Select or type a value'), showSearch: true, value: selectedOption }));\n\n}\nexport default /*#__PURE__*/forwardRef(SelectFilter);","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IACEC,QADF,EAEEC,OAFF,EAGEC,UAHF,EAIEC,mBAJF,QAKO,OALP;AAMA,SAASC,CAAT,QAAkB,mBAAlB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,SAASC,eAAT,QAA2D,QAA3D,C;AAUA,SAASC,YAAT,OASEC,GATF,EASqC,KARnC,EACEC,MADF,EAEEC,IAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,QALF,EAMEC,OAAO,GAAG,EANZ,EAQmC;EAEnC,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsClB,QAAQ,CAACc,YAAD,CAApD;EAEA,MAAMK,QAAQ,GAAG,CAACC,QAAD,KAA2B;IAC1CL,QAAQ,CACNK,QAAQ,GAAG,EAAEC,KAAK,EAAED,QAAQ,CAACC,KAAlB,EAAyBC,KAAK,EAAEF,QAAQ,CAACE,KAAzC,EAAH,GAAsDC,SADxD,CAAR;IAGAL,iBAAiB,CAACE,QAAD,CAAjB;EACD,CALD;EAOA,MAAMI,OAAO,GAAG,MAAK;IACnBT,QAAQ,CAACQ,SAAD,EAAY,IAAZ,CAAR;IACAL,iBAAiB,CAACK,SAAD,CAAjB;EACD,CAHD;EAKApB,mBAAmB,CAACO,GAAD,EAAM,OAAO;IAC9Be,WAAW,EAAE,MAAK;MAChBD,OAAO;IACR,CAH6B,EAAP,CAAN,CAAnB;;EAMA,MAAME,qBAAqB,GAAGzB,OAAO,CACnC,MAAM,OAAO0B,UAAP,EAA2BC,IAA3B,EAAyCC,QAAzC,KAA6D;IACjE,IAAIhB,YAAJ,EAAkB;MAChB,MAAMiB,YAAY,GAAG,MAAMjB,YAAY,CAACc,UAAD,EAAaC,IAAb,EAAmBC,QAAnB,CAAvC;MACA,OAAO;QACLE,IAAI,EAAED,YAAY,CAACC,IADd;QAELC,UAAU,EAAEF,YAAY,CAACE,UAFpB,EAAP;;IAID;IACD,OAAO;MACLD,IAAI,EAAE,EADD;MAELC,UAAU,EAAE,CAFP,EAAP;;EAID,CAbkC,EAcnC,CAACnB,YAAD,CAdmC,CAArC;EAiBA,OACE,cAAC,eAAD;EACGA,YAAY,GACX,cAAC,WAAD,IACE,UAAU,MADZ,EAEE,SAAS,EAAE,OAAOF,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCC,IAAI,IAAIR,CAAC,CAAC,QAAD,CAF5D,EAIE,MAAM,EAAE,cAAC,SAAD,QAAYO,MAAZ,CAJV,EAKE,QAAQ,EAAEQ,QALZ,EAME,OAAO,EAAEK,OANX,EAOE,OAAO,EAAEE,qBAPX,EAQE,WAAW,EAAEtB,CAAC,CAAC,wBAAD,CARhB,EASE,UAAU,MATZ,EAUE,KAAK,EAAEa,cAVT,GADW,GAcX,cAAC,MAAD,IACE,UAAU,MADZ,EAEE,SAAS,EAAE,OAAON,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCC,IAAI,IAAIR,CAAC,CAAC,QAAD,CAF5D,EAIE,MAAM,EAAE,cAAC,SAAD,QAAYO,MAAZ,CAJV,EAKE,YAAY,MALd,EAME,QAAQ,EAAEQ,QANZ,EAOE,OAAO,EAAEK,OAPX,EAQE,OAAO,EAAER,OARX,EASE,WAAW,EAAEZ,CAAC,CAAC,wBAAD,CAThB,EAUE,UAAU,MAVZ,EAWE,KAAK,EAAEa,cAXT,GAfJ,CADF;;AAgCD;AACD,4BAAef,UAAU,CAACO,YAAD,CAAzB","names":["React","useState","useMemo","forwardRef","useImperativeHandle","t","Select","FormLabel","AsyncSelect","FilterContainer","SelectFilter","ref","Header","name","fetchSelects","initialValue","onSelect","selects","selectedOption","setSelectedOption","onChange","selected","label","value","undefined","onClear","clearFilter","fetchAndFormatSelects","inputValue","page","pageSize","selectValues","data","totalCount"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ListView/Filters/Select.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  useState,\n  useMemo,\n  forwardRef,\n  useImperativeHandle,\n} from 'react';\nimport { t } from '@superset-ui/core';\nimport { Select } from 'src/components';\nimport { Filter, SelectOption } from 'src/components/ListView/types';\nimport { FormLabel } from 'src/components/Form';\nimport AsyncSelect from 'src/components/Select/AsyncSelect';\nimport { FilterContainer, BaseFilter, FilterHandler } from './Base';\n\ninterface SelectFilterProps extends BaseFilter {\n  fetchSelects?: Filter['fetchSelects'];\n  name?: string;\n  onSelect: (selected: SelectOption | undefined, isClear?: boolean) => void;\n  paginate?: boolean;\n  selects: Filter['selects'];\n}\n\nfunction SelectFilter(\n  {\n    Header,\n    name,\n    fetchSelects,\n    initialValue,\n    onSelect,\n    selects = [],\n  }: SelectFilterProps,\n  ref: React.RefObject<FilterHandler>,\n) {\n  const [selectedOption, setSelectedOption] = useState(initialValue);\n\n  const onChange = (selected: SelectOption) => {\n    onSelect(\n      selected ? { label: selected.label, value: selected.value } : undefined,\n    );\n    setSelectedOption(selected);\n  };\n\n  const onClear = () => {\n    onSelect(undefined, true);\n    setSelectedOption(undefined);\n  };\n\n  useImperativeHandle(ref, () => ({\n    clearFilter: () => {\n      onClear();\n    },\n  }));\n\n  const fetchAndFormatSelects = useMemo(\n    () => async (inputValue: string, page: number, pageSize: number) => {\n      if (fetchSelects) {\n        const selectValues = await fetchSelects(inputValue, page, pageSize);\n        return {\n          data: selectValues.data,\n          totalCount: selectValues.totalCount,\n        };\n      }\n      return {\n        data: [],\n        totalCount: 0,\n      };\n    },\n    [fetchSelects],\n  );\n\n  return (\n    <FilterContainer>\n      {fetchSelects ? (\n        <AsyncSelect\n          allowClear\n          ariaLabel={typeof Header === 'string' ? Header : name || t('Filter')}\n          data-test=\"filters-select\"\n          header={<FormLabel>{Header}</FormLabel>}\n          onChange={onChange}\n          onClear={onClear}\n          options={fetchAndFormatSelects}\n          placeholder={t('Select or type a value')}\n          showSearch\n          value={selectedOption}\n        />\n      ) : (\n        <Select\n          allowClear\n          ariaLabel={typeof Header === 'string' ? Header : name || t('Filter')}\n          data-test=\"filters-select\"\n          header={<FormLabel>{Header}</FormLabel>}\n          labelInValue\n          onChange={onChange}\n          onClear={onClear}\n          options={selects}\n          placeholder={t('Select or type a value')}\n          showSearch\n          value={selectedOption}\n        />\n      )}\n    </FilterContainer>\n  );\n}\nexport default forwardRef(SelectFilter);\n"]},"metadata":{},"sourceType":"module"}