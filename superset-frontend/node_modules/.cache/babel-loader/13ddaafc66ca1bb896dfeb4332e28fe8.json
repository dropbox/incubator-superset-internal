{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilterConfiguration } from 'src/dashboard/actions/nativeFilters';\nimport Button from 'src/components/Button';\nimport { styled } from '@superset-ui/core';\nimport FiltersConfigModal from 'src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigModal';\nimport { getFilterBarTestId } from '../utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst HeaderButton = styled(Button)`\n  padding: 0;\n`;\nexport const FilterConfigurationLink = (_ref) => {let { createNewOnOpen, dashboardId, initialFilterId, onClick, children } = _ref;\n  const dispatch = useDispatch();\n  const [isOpen, setOpen] = useState(false);\n  const close = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n  const submit = useCallback(async (filterConfig) => {\n    dispatch(await setFilterConfiguration(filterConfig));\n    close();\n  }, [dispatch, close]);\n  const handleClick = useCallback(() => {\n    setOpen(true);\n    if (onClick) {\n      onClick();\n    }\n  }, [setOpen, onClick]);\n  return ___EmotionJSX(React.Fragment, null,\n\n  ___EmotionJSX(HeaderButton, _extends({}, getFilterBarTestId('create-filter'), { buttonStyle: \"link\", buttonSize: \"xsmall\", onClick: handleClick }),\n  children),\n\n  ___EmotionJSX(FiltersConfigModal, { isOpen: isOpen, onSave: submit, onCancel: close, initialFilterId: initialFilterId, createNewOnOpen: createNewOnOpen, key: `filters-for-${dashboardId}` }));\n\n};__signature__(FilterConfigurationLink, \"useDispatch{dispatch}\\nuseState{[isOpen, setOpen](false)}\\nuseCallback{close}\\nuseCallback{submit}\\nuseCallback{handleClick}\", () => [useDispatch]);const _default = /*#__PURE__*/\nReact.memo(FilterConfigurationLink);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(HeaderButton, \"HeaderButton\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterConfigurationLink/index.tsx\");reactHotLoader.register(FilterConfigurationLink, \"FilterConfigurationLink\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterConfigurationLink/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterConfigurationLink/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"sWAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,sBAAT,QAAuC,qCAAvC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAA8BC,MAA9B,QAA4C,mBAA5C;AACA,OAAOC,kBAAP,MAA+B,8EAA/B;AACA,SAASC,kBAAT,QAAmC,UAAnC,C;AAUA,MAAMC,YAAY,GAAGH,MAAM,CAACD,MAAD,CAAQ;;CAAnC;AAIA,OAAO,MAAMK,uBAAuB,GAAuB,UAMtD,KANuD,EAC1DC,eAD0D,EAE1DC,WAF0D,EAG1DC,eAH0D,EAI1DC,OAJ0D,EAK1DC,QAL0D,EAMvD;EACH,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;EACA,MAAM,CAACc,MAAD,EAASC,OAAT,IAAoBhB,QAAQ,CAAC,KAAD,CAAlC;EAEA,MAAMiB,KAAK,GAAGlB,WAAW,CAAC,MAAK;IAC7BiB,OAAO,CAAC,KAAD,CAAP;EACD,CAFwB,EAEtB,CAACA,OAAD,CAFsB,CAAzB;EAIA,MAAME,MAAM,GAAGnB,WAAW,CACxB,OAAOoB,YAAP,KAA4C;IAC1CL,QAAQ,CAAC,MAAMZ,sBAAsB,CAACiB,YAAD,CAA7B,CAAR;IACAF,KAAK;EACN,CAJuB,EAKxB,CAACH,QAAD,EAAWG,KAAX,CALwB,CAA1B;EAQA,MAAMG,WAAW,GAAGrB,WAAW,CAAC,MAAK;IACnCiB,OAAO,CAAC,IAAD,CAAP;IACA,IAAIJ,OAAJ,EAAa;MACXA,OAAO;IACR;EACF,CAL8B,EAK5B,CAACI,OAAD,EAAUJ,OAAV,CAL4B,CAA/B;EAOA,OACE;;EAEE,cAAC,YAAD,eACMN,kBAAkB,CAAC,eAAD,CADxB,IAEE,WAAW,EAAC,MAFd,EAGE,UAAU,EAAC,QAHb,EAIE,OAAO,EAAEc,WAJX;EAMGP,QANH,CAFF;;EAUE,cAAC,kBAAD,IACE,MAAM,EAAEE,MADV,EAEE,MAAM,EAAEG,MAFV,EAGE,QAAQ,EAAED,KAHZ,EAIE,eAAe,EAAEN,eAJnB,EAKE,eAAe,EAAEF,eALnB,EAME,GAAG,EAAE,eAAeC,WAAW,EANjC,GAVF,CADF;;AAqBD,CAlDM,C,cAAMF,uB,yIAOMP,W;AA6CJH,KAAK,CAACuB,IAAN,CAAWb,uBAAX,C,CAAf,wB,iLAxDMD,Y,iMAIOC,uB","names":["React","useCallback","useState","useDispatch","setFilterConfiguration","Button","styled","FiltersConfigModal","getFilterBarTestId","HeaderButton","FilterConfigurationLink","createNewOnOpen","dashboardId","initialFilterId","onClick","children","dispatch","isOpen","setOpen","close","submit","filterConfig","handleClick","memo"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterConfigurationLink/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilterConfiguration } from 'src/dashboard/actions/nativeFilters';\nimport Button from 'src/components/Button';\nimport { FilterConfiguration, styled } from '@superset-ui/core';\nimport FiltersConfigModal from 'src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigModal';\nimport { getFilterBarTestId } from '../utils';\n\nexport interface FCBProps {\n  createNewOnOpen?: boolean;\n  dashboardId?: number;\n  initialFilterId?: string;\n  onClick?: () => void;\n  children?: React.ReactNode;\n}\n\nconst HeaderButton = styled(Button)`\n  padding: 0;\n`;\n\nexport const FilterConfigurationLink: React.FC<FCBProps> = ({\n  createNewOnOpen,\n  dashboardId,\n  initialFilterId,\n  onClick,\n  children,\n}) => {\n  const dispatch = useDispatch();\n  const [isOpen, setOpen] = useState(false);\n\n  const close = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const submit = useCallback(\n    async (filterConfig: FilterConfiguration) => {\n      dispatch(await setFilterConfiguration(filterConfig));\n      close();\n    },\n    [dispatch, close],\n  );\n\n  const handleClick = useCallback(() => {\n    setOpen(true);\n    if (onClick) {\n      onClick();\n    }\n  }, [setOpen, onClick]);\n\n  return (\n    <>\n      {/* eslint-disable-next-line jsx-a11y/no-static-element-interactions */}\n      <HeaderButton\n        {...getFilterBarTestId('create-filter')}\n        buttonStyle=\"link\"\n        buttonSize=\"xsmall\"\n        onClick={handleClick}\n      >\n        {children}\n      </HeaderButton>\n      <FiltersConfigModal\n        isOpen={isOpen}\n        onSave={submit}\n        onCancel={close}\n        initialFilterId={initialFilterId}\n        createNewOnOpen={createNewOnOpen}\n        key={`filters-for-${dashboardId}`}\n      />\n    </>\n  );\n};\n\nexport default React.memo(FilterConfigurationLink);\n"]},"metadata":{},"sourceType":"module"}