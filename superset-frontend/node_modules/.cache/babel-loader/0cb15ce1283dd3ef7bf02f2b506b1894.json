{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetClient } from '../../../connection';\nexport default function getFormData(_ref) {let { client = SupersetClient, sliceId, overrideFormData, requestConfig } = _ref;\n  const promise = client.\n  get({\n    endpoint: `/api/v1/form_data/?slice_id=${sliceId}`,\n    ...requestConfig }).\n\n  then((_ref2) => {let { json } = _ref2;return json;});\n  return overrideFormData ?\n  promise.then((formData) => ({ ...formData, ...overrideFormData })) :\n  promise;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getFormData, \"getFormData\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/query/api/legacy/getFormData.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,cAAT,QAA+B,qBAA/B;AASA,eAAc,SAAUC,WAAV,OAKL,KAL2B,EAClCC,MAAM,GAAGF,cADyB,EAElCG,OAFkC,EAGlCC,gBAHkC,EAIlCC,aAJkC,EAK3B;EACP,MAAMC,OAAO,GAAGJ,MAAM;EACnBK,GADa,CACT;IACHC,QAAQ,EAAE,+BAA+BL,OAAO,EAD7C;IAEH,GAAGE,aAFA,EADS;;EAKbI,IALa,CAKR,gBAAC,EAAEC,IAAF,EAAD,gBAAcA,IAAd,EALQ,CAAhB;EAOA,OAAON,gBAAgB;EACnBE,OAAO,CAACG,IAAR,CAAa,SAAQ,MAAK,EAAE,GAAGE,QAAL,EAAe,GAAGP,gBAAlB,EAAL,CAArB,CADmB;EAEnBE,OAFJ;AAGD,C,iLAhBuBL,W","names":["SupersetClient","getFormData","client","sliceId","overrideFormData","requestConfig","promise","get","endpoint","then","json","formData"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/query/api/legacy/getFormData.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { SupersetClient } from '../../../connection';\nimport { BaseParams } from '../types';\nimport { QueryFormData } from '../../types/QueryFormData';\n\nexport interface Params extends BaseParams {\n  sliceId: number;\n  overrideFormData?: Partial<QueryFormData>;\n}\n\nexport default function getFormData({\n  client = SupersetClient,\n  sliceId,\n  overrideFormData,\n  requestConfig,\n}: Params) {\n  const promise = client\n    .get({\n      endpoint: `/api/v1/form_data/?slice_id=${sliceId}`,\n      ...requestConfig,\n    })\n    .then(({ json }) => json as QueryFormData);\n\n  return overrideFormData\n    ? promise.then(formData => ({ ...formData, ...overrideFormData }))\n    : promise;\n}\n"]},"metadata":{},"sourceType":"module"}