{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport DeleteModal from 'src/components/DeleteModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function ConfirmStatusChange(_ref) {let { title, description, onConfirm, children } = _ref;\n  const [open, setOpen] = useState(false);\n  const [currentCallbackArgs, setCurrentCallbackArgs] = useState([]);\n  const showConfirm = function () {for (var _len = arguments.length, callbackArgs = new Array(_len), _key = 0; _key < _len; _key++) {callbackArgs[_key] = arguments[_key];}\n    // check if any args are DOM events, if so, call persist\n    callbackArgs.forEach((arg) => {\n      if (!arg) {\n        return;\n      }\n      if (typeof arg.persist === 'function') {\n        arg.persist();\n      }\n      if (typeof arg.preventDefault === 'function') {\n        arg.preventDefault();\n      }\n      if (typeof arg.stopPropagation === 'function') {\n        arg.stopPropagation();\n      }\n    });\n    setOpen(true);\n    setCurrentCallbackArgs(callbackArgs);\n  };\n  const hide = () => {\n    setOpen(false);\n    setCurrentCallbackArgs([]);\n  };\n  const confirm = () => {\n    onConfirm(...currentCallbackArgs);\n    hide();\n  };\n  return ___EmotionJSX(React.Fragment, null,\n  children == null ? void 0 : children(showConfirm),\n  ___EmotionJSX(DeleteModal, { description: description, onConfirm: confirm, onHide: hide, open: open, title: title }));\n\n}__signature__(ConfirmStatusChange, \"useState{[open, setOpen](false)}\\nuseState{[currentCallbackArgs, setCurrentCallbackArgs]([])}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ConfirmStatusChange, \"ConfirmStatusChange\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ConfirmStatusChange/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,4BAAxB,C;AAWA,eAAc,SAAUC,mBAAV,OAKa,KALiB,EAC1CC,KAD0C,EAE1CC,WAF0C,EAG1CC,SAH0C,EAI1CC,QAJ0C,EAKjB;EACzB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;EACA,MAAM,CAACS,mBAAD,EAAsBC,sBAAtB,IAAgDV,QAAQ,CAAQ,EAAR,CAA9D;EAEA,MAAMW,WAAW,GAAG,YAA2B,mCAAvBC,YAAuB,oDAAvBA,YAAuB;IAC7C;IACAA,YAAY,CAACC,OAAb,CAAqB,IAAG,KAAG;MACzB,IAAI,CAACC,GAAL,EAAU;QACR;MACD;MACD,IAAI,OAAOA,GAAG,CAACC,OAAX,KAAuB,UAA3B,EAAuC;QACrCD,GAAG,CAACC,OAAJ;MACD;MACD,IAAI,OAAOD,GAAG,CAACE,cAAX,KAA8B,UAAlC,EAA8C;QAC5CF,GAAG,CAACE,cAAJ;MACD;MACD,IAAI,OAAOF,GAAG,CAACG,eAAX,KAA+B,UAAnC,EAA+C;QAC7CH,GAAG,CAACG,eAAJ;MACD;IACF,CAbD;IAcAT,OAAO,CAAC,IAAD,CAAP;IACAE,sBAAsB,CAACE,YAAD,CAAtB;EACD,CAlBD;EAoBA,MAAMM,IAAI,GAAG,MAAK;IAChBV,OAAO,CAAC,KAAD,CAAP;IACAE,sBAAsB,CAAC,EAAD,CAAtB;EACD,CAHD;EAKA,MAAMS,OAAO,GAAG,MAAK;IACnBd,SAAS,CAAC,GAAGI,mBAAJ,CAAT;IACAS,IAAI;EACL,CAHD;EAKA,OACE;EACGZ,QADH,oBACGA,QAAQ,CAAGK,WAAH,CADX;EAEE,cAAC,WAAD,IACE,WAAW,EAAEP,WADf,EAEE,SAAS,EAAEe,OAFb,EAGE,MAAM,EAAED,IAHV,EAIE,IAAI,EAAEX,IAJR,EAKE,KAAK,EAAEJ,KALT,GAFF,CADF;;AAYD,C,cAnDuBD,mB,oRAAAA,mB","names":["React","useState","DeleteModal","ConfirmStatusChange","title","description","onConfirm","children","open","setOpen","currentCallbackArgs","setCurrentCallbackArgs","showConfirm","callbackArgs","forEach","arg","persist","preventDefault","stopPropagation","hide","confirm"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ConfirmStatusChange/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport DeleteModal from 'src/components/DeleteModal';\n\nexport type Callback = (...args: any[]) => void;\n\nexport interface ConfirmStatusChangeProps {\n  title: React.ReactNode;\n  description: React.ReactNode;\n  onConfirm: Callback;\n  children: (showConfirm: Callback) => React.ReactNode;\n}\n\nexport default function ConfirmStatusChange({\n  title,\n  description,\n  onConfirm,\n  children,\n}: ConfirmStatusChangeProps) {\n  const [open, setOpen] = useState(false);\n  const [currentCallbackArgs, setCurrentCallbackArgs] = useState<any[]>([]);\n\n  const showConfirm = (...callbackArgs: any[]) => {\n    // check if any args are DOM events, if so, call persist\n    callbackArgs.forEach(arg => {\n      if (!arg) {\n        return;\n      }\n      if (typeof arg.persist === 'function') {\n        arg.persist();\n      }\n      if (typeof arg.preventDefault === 'function') {\n        arg.preventDefault();\n      }\n      if (typeof arg.stopPropagation === 'function') {\n        arg.stopPropagation();\n      }\n    });\n    setOpen(true);\n    setCurrentCallbackArgs(callbackArgs);\n  };\n\n  const hide = () => {\n    setOpen(false);\n    setCurrentCallbackArgs([]);\n  };\n\n  const confirm = () => {\n    onConfirm(...currentCallbackArgs);\n    hide();\n  };\n\n  return (\n    <>\n      {children?.(showConfirm)}\n      <DeleteModal\n        description={description}\n        onConfirm={confirm}\n        onHide={hide}\n        open={open}\n        title={title}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}