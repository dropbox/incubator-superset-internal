{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { css } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { getFilterValueForDisplay } from 'src/dashboard/components/nativeFilters/FilterBar/FilterSets/utils';\nimport { FilterValue, FilterItem, FilterName } from 'src/dashboard/components/FiltersBadge/Styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst FilterIndicator = (_ref) => {let { indicator: { column, name, value, path = [] }, onClick } = _ref;\n  const resultValue = getFilterValueForDisplay(value);\n  return ___EmotionJSX(FilterItem, { onClick: onClick ? () => onClick([...path, `LABEL-${column}`]) : undefined },\n  onClick && ___EmotionJSX(\"i\", null,\n  ___EmotionJSX(Icons.SearchOutlined, { iconSize: \"m\", css: css`\n              span {\n                vertical-align: 0;\n              }\n            ` })),\n\n  ___EmotionJSX(\"div\", null,\n  ___EmotionJSX(FilterName, null,\n  name,\n  resultValue ? ': ' : ''),\n\n  ___EmotionJSX(FilterValue, null, resultValue)));\n\n\n};\nexport default FilterIndicator;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,wBAAT,QAAyC,mEAAzC;AACA,SACEC,WADF,EAEEC,UAFF,EAGEC,UAHF,QAIO,8CAJP,C;AAYA,MAAMC,eAAe,GAAuB,UAGvC,KAHwC,EAC3CC,SAAS,EAAE,EAAEC,MAAF,EAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,IAAI,GAAG,EAA9B,EADgC,EAE3CC,OAF2C,EAGxC;EACH,MAAMC,WAAW,GAAGX,wBAAwB,CAACQ,KAAD,CAA5C;EACA,OACE,cAAC,UAAD,IACE,OAAO,EACLE,OAAO,GAAG,MAAMA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,SAASH,MAAM,EAAzB,CAAD,CAAhB,GAAiDM,SAF5D;EAKGF,OAAO,IACN;EACE,cAAC,KAAD,CAAO,cAAP,IACE,QAAQ,EAAC,GADX,EAEE,GAAG,EAAEZ,GAAG;;;;aAFV,GADF,CANJ;;EAiBE;EACE,cAAC,UAAD;EACGS,IADH;EAEGI,WAAW,GAAG,IAAH,GAAU,EAFxB,CADF;;EAKE,cAAC,WAAD,QAAcA,WAAd,CALF,CAjBF,CADF;;;AA2BD,CAhCD;AAkCA,eAAeP,eAAf","names":["React","css","Icons","getFilterValueForDisplay","FilterValue","FilterItem","FilterName","FilterIndicator","indicator","column","name","value","path","onClick","resultValue","undefined"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/FiltersBadge/FilterIndicator/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FC } from 'react';\nimport { css } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { getFilterValueForDisplay } from 'src/dashboard/components/nativeFilters/FilterBar/FilterSets/utils';\nimport {\n  FilterValue,\n  FilterItem,\n  FilterName,\n} from 'src/dashboard/components/FiltersBadge/Styles';\nimport { Indicator } from 'src/dashboard/components/nativeFilters/selectors';\n\nexport interface IndicatorProps {\n  indicator: Indicator;\n  onClick?: (path: string[]) => void;\n}\n\nconst FilterIndicator: FC<IndicatorProps> = ({\n  indicator: { column, name, value, path = [] },\n  onClick,\n}) => {\n  const resultValue = getFilterValueForDisplay(value);\n  return (\n    <FilterItem\n      onClick={\n        onClick ? () => onClick([...path, `LABEL-${column}`]) : undefined\n      }\n    >\n      {onClick && (\n        <i>\n          <Icons.SearchOutlined\n            iconSize=\"m\"\n            css={css`\n              span {\n                vertical-align: 0;\n              }\n            `}\n          />\n        </i>\n      )}\n      <div>\n        <FilterName>\n          {name}\n          {resultValue ? ': ' : ''}\n        </FilterName>\n        <FilterValue>{resultValue}</FilterValue>\n      </div>\n    </FilterItem>\n  );\n};\n\nexport default FilterIndicator;\n"]},"metadata":{},"sourceType":"module"}