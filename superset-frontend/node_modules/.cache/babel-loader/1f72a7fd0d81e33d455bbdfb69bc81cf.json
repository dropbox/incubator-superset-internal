{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Select from 'src/components/Select/Select';\nimport { t, styled } from '@superset-ui/core';\nimport Alert from 'src/components/Alert';\nimport Button from 'src/components/Button';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport { FormLabel } from 'src/components/Form';\nimport { propertyComparator } from 'src/components/Select/utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledModalTrigger = styled(ModalTrigger)`\n  .ant-modal-body {\n    overflow: visible;\n  }\n`;\nconst RefreshWarningContainer = styled.div`\n  margin-top: ${(_ref) => {let { theme } = _ref;return theme.gridUnit * 6;}}px;\n`;\nclass RefreshIntervalModal extends React.PureComponent {\n\n\n\n\n\n  constructor(props) {\n    super(props);this.modalRef = void 0;\n    this.modalRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      refreshFrequency: props.refreshFrequency };\n\n    this.handleFrequencyChange = this.handleFrequencyChange.bind(this);\n    this.onSave = this.onSave.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n  }\n  onSave() {var _this$modalRef, _this$modalRef$curren;\n    this.props.onChange(this.state.refreshFrequency, this.props.editMode);\n    (_this$modalRef = this.modalRef) == null ? void 0 : (_this$modalRef$curren = _this$modalRef.current) == null ? void 0 : _this$modalRef$curren.close();\n    this.props.addSuccessToast(t('Refresh interval saved'));\n  }\n  onCancel() {var _this$modalRef2, _this$modalRef2$curre;\n    this.setState({\n      refreshFrequency: this.props.refreshFrequency });\n\n    (_this$modalRef2 = this.modalRef) == null ? void 0 : (_this$modalRef2$curre = _this$modalRef2.current) == null ? void 0 : _this$modalRef2$curre.close();\n  }\n  handleFrequencyChange(value) {\n    const { refreshIntervalOptions } = this.props;\n    this.setState({\n      refreshFrequency: value || refreshIntervalOptions[0][0] });\n\n  }\n  render() {\n    const { refreshLimit = 0, refreshWarning, editMode, refreshIntervalOptions } = this.props;\n    const { refreshFrequency = 0 } = this.state;\n    const showRefreshWarning = !!refreshFrequency && !!refreshWarning && refreshFrequency < refreshLimit;\n    return ___EmotionJSX(StyledModalTrigger, { ref: this.modalRef, triggerNode: this.props.triggerNode, modalTitle: t('Refresh interval'), modalBody: ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(FormLabel, null, t('Refresh frequency')),\n      ___EmotionJSX(Select, { ariaLabel: t('Refresh interval'), options: refreshIntervalOptions.map((option) => ({\n          value: option[0],\n          label: t(option[1]) })),\n        value: refreshFrequency, onChange: this.handleFrequencyChange, sortComparator: propertyComparator('value') }),\n      showRefreshWarning && ___EmotionJSX(RefreshWarningContainer, null,\n      ___EmotionJSX(Alert, { type: \"warning\", message: ___EmotionJSX(React.Fragment, null,\n        ___EmotionJSX(\"div\", null, refreshWarning),\n        ___EmotionJSX(\"br\", null),\n        ___EmotionJSX(\"strong\", null, t('Are you sure you want to proceed?'))) }))),\n\n\n      modalFooter: ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(Button, { buttonStyle: \"primary\", buttonSize: \"small\", onClick: this.onSave },\n      editMode ? t('Save') : t('Save for this session')),\n\n      ___EmotionJSX(Button, { onClick: this.onCancel, buttonSize: \"small\" },\n      t('Cancel'))) });\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}RefreshIntervalModal.defaultProps = { refreshLimit: 0, refreshWarning: null };const _default = RefreshIntervalModal;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledModalTrigger, \"StyledModalTrigger\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/RefreshIntervalModal.tsx\");reactHotLoader.register(RefreshWarningContainer, \"RefreshWarningContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/RefreshIntervalModal.tsx\");reactHotLoader.register(RefreshIntervalModal, \"RefreshIntervalModal\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/RefreshIntervalModal.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/RefreshIntervalModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","Select","t","styled","Alert","Button","ModalTrigger","FormLabel","propertyComparator","StyledModalTrigger","RefreshWarningContainer","div","theme","gridUnit","RefreshIntervalModal","PureComponent","constructor","props","modalRef","createRef","state","refreshFrequency","handleFrequencyChange","bind","onSave","onCancel","onChange","editMode","current","close","addSuccessToast","setState","value","refreshIntervalOptions","render","refreshLimit","refreshWarning","showRefreshWarning","triggerNode","map","option","label","defaultProps"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/RefreshIntervalModal.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Select from 'src/components/Select/Select';\nimport { t, styled } from '@superset-ui/core';\nimport Alert from 'src/components/Alert';\nimport Button from 'src/components/Button';\n\nimport ModalTrigger, { ModalTriggerRef } from 'src/components/ModalTrigger';\nimport { FormLabel } from 'src/components/Form';\nimport { propertyComparator } from 'src/components/Select/utils';\n\nconst StyledModalTrigger = styled(ModalTrigger)`\n  .ant-modal-body {\n    overflow: visible;\n  }\n`;\n\nconst RefreshWarningContainer = styled.div`\n  margin-top: ${({ theme }) => theme.gridUnit * 6}px;\n`;\n\ntype RefreshIntervalModalProps = {\n  addSuccessToast: (msg: string) => void;\n  triggerNode: JSX.Element;\n  refreshFrequency: number;\n  onChange: (refreshLimit: number, editMode: boolean) => void;\n  editMode: boolean;\n  refreshLimit?: number;\n  refreshWarning: string | null;\n  refreshIntervalOptions: [number, string][];\n};\n\ntype RefreshIntervalModalState = {\n  refreshFrequency: number;\n};\n\nclass RefreshIntervalModal extends React.PureComponent<\n  RefreshIntervalModalProps,\n  RefreshIntervalModalState\n> {\n  static defaultProps = {\n    refreshLimit: 0,\n    refreshWarning: null,\n  };\n\n  modalRef: ModalTriggerRef | null;\n\n  constructor(props: RefreshIntervalModalProps) {\n    super(props);\n    this.modalRef = React.createRef() as ModalTriggerRef;\n    this.state = {\n      refreshFrequency: props.refreshFrequency,\n    };\n    this.handleFrequencyChange = this.handleFrequencyChange.bind(this);\n    this.onSave = this.onSave.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n  }\n\n  onSave() {\n    this.props.onChange(this.state.refreshFrequency, this.props.editMode);\n    this.modalRef?.current?.close();\n    this.props.addSuccessToast(t('Refresh interval saved'));\n  }\n\n  onCancel() {\n    this.setState({\n      refreshFrequency: this.props.refreshFrequency,\n    });\n    this.modalRef?.current?.close();\n  }\n\n  handleFrequencyChange(value: number) {\n    const { refreshIntervalOptions } = this.props;\n    this.setState({\n      refreshFrequency: value || refreshIntervalOptions[0][0],\n    });\n  }\n\n  render() {\n    const {\n      refreshLimit = 0,\n      refreshWarning,\n      editMode,\n      refreshIntervalOptions,\n    } = this.props;\n    const { refreshFrequency = 0 } = this.state;\n    const showRefreshWarning =\n      !!refreshFrequency && !!refreshWarning && refreshFrequency < refreshLimit;\n\n    return (\n      <StyledModalTrigger\n        ref={this.modalRef}\n        triggerNode={this.props.triggerNode}\n        modalTitle={t('Refresh interval')}\n        modalBody={\n          <div>\n            <FormLabel>{t('Refresh frequency')}</FormLabel>\n            <Select\n              ariaLabel={t('Refresh interval')}\n              options={refreshIntervalOptions.map(option => ({\n                value: option[0],\n                label: t(option[1]),\n              }))}\n              value={refreshFrequency}\n              onChange={this.handleFrequencyChange}\n              sortComparator={propertyComparator('value')}\n            />\n            {showRefreshWarning && (\n              <RefreshWarningContainer>\n                <Alert\n                  type=\"warning\"\n                  message={\n                    <>\n                      <div>{refreshWarning}</div>\n                      <br />\n                      <strong>{t('Are you sure you want to proceed?')}</strong>\n                    </>\n                  }\n                />\n              </RefreshWarningContainer>\n            )}\n          </div>\n        }\n        modalFooter={\n          <>\n            <Button\n              buttonStyle=\"primary\"\n              buttonSize=\"small\"\n              onClick={this.onSave}\n            >\n              {editMode ? t('Save') : t('Save for this session')}\n            </Button>\n            <Button onClick={this.onCancel} buttonSize=\"small\">\n              {t('Cancel')}\n            </Button>\n          </>\n        }\n      />\n    );\n  }\n}\n\nexport default RefreshIntervalModal;\n"]},"metadata":{},"sourceType":"module"}