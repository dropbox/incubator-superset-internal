{"ast":null,"code":"function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";} /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { css, ensureIsArray, GenericDataType, t, useTheme } from '@superset-ui/core';\nimport { useResizeDetector } from 'react-resize-detector';\nimport Loading from 'src/components/Loading';\nimport BooleanCell from 'src/components/Table/cell-renderers/BooleanCell';\nimport NullCell from 'src/components/Table/cell-renderers/NullCell';\nimport TimeCell from 'src/components/Table/cell-renderers/TimeCell';\nimport { EmptyStateMedium } from 'src/components/EmptyState';\nimport { getDatasourceSamples } from 'src/components/Chart/chartAction';\nimport Table, { TableSize } from 'src/components/Table';\nimport HeaderWithRadioGroup from 'src/components/Table/header-renderers/HeaderWithRadioGroup';\nimport { ResourceStatus } from 'src/hooks/apiResources/apiResources';\nimport { useDatasetMetadataBar } from 'src/features/datasets/metadataBar/useDatasetMetadataBar';\nimport TableControls from './DrillDetailTableControls';\nimport { getDrillPayload } from './utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst PAGE_SIZE = 50;\n// Must be outside of the main component due to problems in\n// react-resize-detector with conditional rendering\n// https://github.com/maslianok/react-resize-detector/issues/178\nvar _ref2 = process.env.NODE_ENV === \"production\" ? { name: \"82a6rk\", styles: \"flex:1\" } : { name: \"1715jyj-Resizable\", styles: \"flex:1;label:Resizable;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };function Resizable(_ref) {let { children } = _ref;\n  const { ref, height } = useResizeDetector();\n  return ___EmotionJSX(\"div\", { ref: ref, css: _ref2 }, /*#__PURE__*/\n  React.cloneElement(children, { height }));\n\n}\nvar TimeFormatting;\n(function (TimeFormatting) {\n  TimeFormatting[TimeFormatting[\"Original\"] = 0] = \"Original\";\n  TimeFormatting[TimeFormatting[\"Formatted\"] = 1] = \"Formatted\";\n})(TimeFormatting || (TimeFormatting = {}));\nexport default function DrillDetailPane(_ref3) {let { formData, initialFilters } = _ref3;\n  const theme = useTheme();\n  const [pageIndex, setPageIndex] = useState(0);\n  const lastPageIndex = useRef(pageIndex);\n  const [filters, setFilters] = useState(initialFilters);\n  const [isLoading, setIsLoading] = useState(false);\n  const [responseError, setResponseError] = useState('');\n  const [resultsPages, setResultsPages] = useState(new Map());\n  const [timeFormatting, setTimeFormatting] = useState({});\n  const SAMPLES_ROW_LIMIT = useSelector((state) => state.common.conf.SAMPLES_ROW_LIMIT);\n  // Extract datasource ID/type from string ID\n  const [datasourceId, datasourceType] = useMemo(() => formData.datasource.split('__'), [formData.datasource]);\n  const { metadataBar, status: metadataBarStatus } = useDatasetMetadataBar({\n    datasetId: datasourceId });\n\n  // Get page of results\n  const resultsPage = useMemo(() => {\n    const nextResultsPage = resultsPages.get(pageIndex);\n    if (nextResultsPage) {\n      lastPageIndex.current = pageIndex;\n      return nextResultsPage;\n    }\n    return resultsPages.get(lastPageIndex.current);\n  }, [pageIndex, resultsPages]);\n  const mappedColumns = useMemo(() => (resultsPage == null ? void 0 : resultsPage.colNames.map((column, index) => ({\n    key: column,\n    dataIndex: column,\n    title: (resultsPage == null ? void 0 : resultsPage.colTypes[index]) === GenericDataType.TEMPORAL ? ___EmotionJSX(HeaderWithRadioGroup, { headerTitle: column, groupTitle: t('Formatting'), groupOptions: [\n      { label: t('Original value'), value: TimeFormatting.Original },\n      {\n        label: t('Formatted value'),\n        value: TimeFormatting.Formatted }],\n\n      value: timeFormatting[column] === TimeFormatting.Original ?\n      TimeFormatting.Original :\n      TimeFormatting.Formatted, onChange: (value) => setTimeFormatting((state) => ({ ...state, [column]: value })) }) : column,\n    render: (value) => {\n      if (value === true || value === false) {\n        return ___EmotionJSX(BooleanCell, { value: value });\n      }\n      if (value === null) {\n        return ___EmotionJSX(NullCell, null);\n      }\n      if ((resultsPage == null ? void 0 : resultsPage.colTypes[index]) === GenericDataType.TEMPORAL &&\n      timeFormatting[column] !== TimeFormatting.Original && (\n      typeof value === 'number' || value instanceof Date)) {\n        return ___EmotionJSX(TimeCell, { value: value });\n      }\n      return String(value);\n    },\n    width: 150 }))) ||\n  [], [resultsPage == null ? void 0 : resultsPage.colNames, resultsPage == null ? void 0 : resultsPage.colTypes, timeFormatting]);\n  const data = useMemo(() => (resultsPage == null ? void 0 : resultsPage.data.map((row, index) => resultsPage == null ? void 0 : resultsPage.colNames.reduce((acc, curr) => ({ ...acc, [curr]: row[curr] }), {\n    key: index }))) ||\n  [], [resultsPage == null ? void 0 : resultsPage.colNames, resultsPage == null ? void 0 : resultsPage.data]);\n  // Clear cache on reload button click\n  const handleReload = useCallback(() => {\n    setResponseError('');\n    setResultsPages(new Map());\n    setPageIndex(0);\n  }, []);\n  // Clear cache and reset page index if filters change\n  useEffect(() => {\n    setResponseError('');\n    setResultsPages(new Map());\n    setPageIndex(0);\n  }, [filters]);\n  // Update cache order if page in cache\n  useEffect(() => {\n    if (resultsPages.has(pageIndex) &&\n    [...resultsPages.keys()].at(-1) !== pageIndex) {\n      const nextResultsPages = new Map(resultsPages);\n      nextResultsPages.delete(pageIndex);\n      setResultsPages(nextResultsPages.set(pageIndex, resultsPages.get(pageIndex)));\n    }\n  }, [pageIndex, resultsPages]);\n  // Download page of results & trim cache if page not in cache\n  useEffect(() => {\n    if (!responseError && !isLoading && !resultsPages.has(pageIndex)) {var _getDrillPayload;\n      setIsLoading(true);\n      const jsonPayload = (_getDrillPayload = getDrillPayload(formData, filters)) != null ? _getDrillPayload : {};\n      const cachePageLimit = Math.ceil(SAMPLES_ROW_LIMIT / PAGE_SIZE);\n      getDatasourceSamples(datasourceType, datasourceId, false, jsonPayload, PAGE_SIZE, pageIndex + 1).\n      then((response) => {\n        setResultsPages(new Map([\n        ...[...resultsPages.entries()].slice(-cachePageLimit + 1),\n        [\n        pageIndex,\n        {\n          total: response.total_count,\n          data: response.data,\n          colNames: ensureIsArray(response.colnames),\n          colTypes: ensureIsArray(response.coltypes) }]]));\n\n\n\n        setResponseError('');\n      }).\n      catch((error) => {\n        setResponseError(`${error.name}: ${error.message}`);\n      }).\n      finally(() => {\n        setIsLoading(false);\n      });\n    }\n  }, [\n  SAMPLES_ROW_LIMIT,\n  datasourceId,\n  datasourceType,\n  filters,\n  formData,\n  isLoading,\n  pageIndex,\n  responseError,\n  resultsPages]);\n\n  const bootstrapping = !responseError && !resultsPages.size ||\n  metadataBarStatus === ResourceStatus.LOADING;\n  let tableContent = null;\n  if (responseError) {\n    // Render error if page download failed\n    tableContent = ___EmotionJSX(\"pre\", { css: css`\n          margin-top: ${theme.gridUnit * 4}px;\n        ` },\n    responseError);\n\n  } else\n  if (bootstrapping) {\n    // Render loading if first page hasn't loaded\n    tableContent = ___EmotionJSX(Loading, null);\n  } else\n  if ((resultsPage == null ? void 0 : resultsPage.total) === 0) {\n    // Render empty state if no results are returned for page\n    const title = t('No rows were returned for this dataset');\n    tableContent = ___EmotionJSX(EmptyStateMedium, { image: \"document.svg\", title: title });\n  } else\n  {\n    // Render table if at least one page has successfully loaded\n    tableContent = ___EmotionJSX(Resizable, null,\n    ___EmotionJSX(Table, { data: data, columns: mappedColumns, size: TableSize.SMALL, defaultPageSize: PAGE_SIZE, recordCount: resultsPage == null ? void 0 : resultsPage.total, usePagination: true, loading: isLoading, onChange: (pagination) => setPageIndex(pagination.current ? pagination.current - 1 : 0), resizable: true, virtualize: true }));\n\n  }\n  return ___EmotionJSX(React.Fragment, null,\n  !bootstrapping && metadataBar,\n  !bootstrapping && ___EmotionJSX(TableControls, { filters: filters, setFilters: setFilters, totalCount: resultsPage == null ? void 0 : resultsPage.total, loading: isLoading, onReload: handleReload }),\n  tableContent);\n\n}","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useMemo","useRef","useState","useSelector","css","ensureIsArray","GenericDataType","t","useTheme","useResizeDetector","Loading","BooleanCell","NullCell","TimeCell","EmptyStateMedium","getDatasourceSamples","Table","TableSize","HeaderWithRadioGroup","ResourceStatus","useDatasetMetadataBar","TableControls","getDrillPayload","PAGE_SIZE","Resizable","children","ref","height","cloneElement","TimeFormatting","DrillDetailPane","formData","initialFilters","theme","pageIndex","setPageIndex","lastPageIndex","filters","setFilters","isLoading","setIsLoading","responseError","setResponseError","resultsPages","setResultsPages","Map","timeFormatting","setTimeFormatting","SAMPLES_ROW_LIMIT","state","common","conf","datasourceId","datasourceType","datasource","split","metadataBar","status","metadataBarStatus","datasetId","resultsPage","nextResultsPage","get","current","mappedColumns","colNames","map","column","index","key","dataIndex","title","colTypes","TEMPORAL","label","value","Original","Formatted","render","Date","String","width","data","row","reduce","acc","curr","handleReload","has","keys","at","nextResultsPages","delete","set","jsonPayload","cachePageLimit","Math","ceil","then","entries","slice","total","response","total_count","colnames","coltypes","catch","error","name","message","finally","bootstrapping","size","LOADING","tableContent","gridUnit","SMALL","pagination"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Chart/DrillDetail/DrillDetailPane.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  BinaryQueryObjectFilterClause,\n  css,\n  ensureIsArray,\n  GenericDataType,\n  JsonObject,\n  QueryFormData,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport { useResizeDetector } from 'react-resize-detector';\nimport Loading from 'src/components/Loading';\nimport BooleanCell from 'src/components/Table/cell-renderers/BooleanCell';\nimport NullCell from 'src/components/Table/cell-renderers/NullCell';\nimport TimeCell from 'src/components/Table/cell-renderers/TimeCell';\nimport { EmptyStateMedium } from 'src/components/EmptyState';\nimport { getDatasourceSamples } from 'src/components/Chart/chartAction';\nimport Table, { ColumnsType, TableSize } from 'src/components/Table';\nimport HeaderWithRadioGroup from 'src/components/Table/header-renderers/HeaderWithRadioGroup';\nimport { ResourceStatus } from 'src/hooks/apiResources/apiResources';\nimport { useDatasetMetadataBar } from 'src/features/datasets/metadataBar/useDatasetMetadataBar';\nimport TableControls from './DrillDetailTableControls';\nimport { getDrillPayload } from './utils';\nimport { ResultsPage } from './types';\n\nconst PAGE_SIZE = 50;\n\ninterface DataType {\n  [key: string]: any;\n}\n\n// Must be outside of the main component due to problems in\n// react-resize-detector with conditional rendering\n// https://github.com/maslianok/react-resize-detector/issues/178\nfunction Resizable({ children }: { children: ReactElement }) {\n  const { ref, height } = useResizeDetector();\n  return (\n    <div ref={ref} css={{ flex: 1 }}>\n      {React.cloneElement(children, { height })}\n    </div>\n  );\n}\n\nenum TimeFormatting {\n  Original,\n  Formatted,\n}\n\nexport default function DrillDetailPane({\n  formData,\n  initialFilters,\n}: {\n  formData: QueryFormData;\n  initialFilters: BinaryQueryObjectFilterClause[];\n}) {\n  const theme = useTheme();\n  const [pageIndex, setPageIndex] = useState(0);\n  const lastPageIndex = useRef(pageIndex);\n  const [filters, setFilters] = useState(initialFilters);\n  const [isLoading, setIsLoading] = useState(false);\n  const [responseError, setResponseError] = useState('');\n  const [resultsPages, setResultsPages] = useState<Map<number, ResultsPage>>(\n    new Map(),\n  );\n  const [timeFormatting, setTimeFormatting] = useState({});\n\n  const SAMPLES_ROW_LIMIT = useSelector(\n    (state: { common: { conf: JsonObject } }) =>\n      state.common.conf.SAMPLES_ROW_LIMIT,\n  );\n\n  // Extract datasource ID/type from string ID\n  const [datasourceId, datasourceType] = useMemo(\n    () => formData.datasource.split('__'),\n    [formData.datasource],\n  );\n\n  const { metadataBar, status: metadataBarStatus } = useDatasetMetadataBar({\n    datasetId: datasourceId,\n  });\n  // Get page of results\n  const resultsPage = useMemo(() => {\n    const nextResultsPage = resultsPages.get(pageIndex);\n    if (nextResultsPage) {\n      lastPageIndex.current = pageIndex;\n      return nextResultsPage;\n    }\n\n    return resultsPages.get(lastPageIndex.current);\n  }, [pageIndex, resultsPages]);\n\n  const mappedColumns: ColumnsType<DataType> = useMemo(\n    () =>\n      resultsPage?.colNames.map((column, index) => ({\n        key: column,\n        dataIndex: column,\n        title:\n          resultsPage?.colTypes[index] === GenericDataType.TEMPORAL ? (\n            <HeaderWithRadioGroup\n              headerTitle={column}\n              groupTitle={t('Formatting')}\n              groupOptions={[\n                { label: t('Original value'), value: TimeFormatting.Original },\n                {\n                  label: t('Formatted value'),\n                  value: TimeFormatting.Formatted,\n                },\n              ]}\n              value={\n                timeFormatting[column] === TimeFormatting.Original\n                  ? TimeFormatting.Original\n                  : TimeFormatting.Formatted\n              }\n              onChange={value =>\n                setTimeFormatting(state => ({ ...state, [column]: value }))\n              }\n            />\n          ) : (\n            column\n          ),\n        render: value => {\n          if (value === true || value === false) {\n            return <BooleanCell value={value} />;\n          }\n          if (value === null) {\n            return <NullCell />;\n          }\n          if (\n            resultsPage?.colTypes[index] === GenericDataType.TEMPORAL &&\n            timeFormatting[column] !== TimeFormatting.Original &&\n            (typeof value === 'number' || value instanceof Date)\n          ) {\n            return <TimeCell value={value} />;\n          }\n          return String(value);\n        },\n        width: 150,\n      })) || [],\n    [resultsPage?.colNames, resultsPage?.colTypes, timeFormatting],\n  );\n\n  const data: DataType[] = useMemo(\n    () =>\n      resultsPage?.data.map((row, index) =>\n        resultsPage?.colNames.reduce(\n          (acc, curr) => ({ ...acc, [curr]: row[curr] }),\n          {\n            key: index,\n          },\n        ),\n      ) || [],\n    [resultsPage?.colNames, resultsPage?.data],\n  );\n\n  // Clear cache on reload button click\n  const handleReload = useCallback(() => {\n    setResponseError('');\n    setResultsPages(new Map());\n    setPageIndex(0);\n  }, []);\n\n  // Clear cache and reset page index if filters change\n  useEffect(() => {\n    setResponseError('');\n    setResultsPages(new Map());\n    setPageIndex(0);\n  }, [filters]);\n\n  // Update cache order if page in cache\n  useEffect(() => {\n    if (\n      resultsPages.has(pageIndex) &&\n      [...resultsPages.keys()].at(-1) !== pageIndex\n    ) {\n      const nextResultsPages = new Map(resultsPages);\n      nextResultsPages.delete(pageIndex);\n      setResultsPages(\n        nextResultsPages.set(\n          pageIndex,\n          resultsPages.get(pageIndex) as ResultsPage,\n        ),\n      );\n    }\n  }, [pageIndex, resultsPages]);\n\n  // Download page of results & trim cache if page not in cache\n  useEffect(() => {\n    if (!responseError && !isLoading && !resultsPages.has(pageIndex)) {\n      setIsLoading(true);\n      const jsonPayload = getDrillPayload(formData, filters) ?? {};\n      const cachePageLimit = Math.ceil(SAMPLES_ROW_LIMIT / PAGE_SIZE);\n      getDatasourceSamples(\n        datasourceType,\n        datasourceId,\n        false,\n        jsonPayload,\n        PAGE_SIZE,\n        pageIndex + 1,\n      )\n        .then(response => {\n          setResultsPages(\n            new Map([\n              ...[...resultsPages.entries()].slice(-cachePageLimit + 1),\n              [\n                pageIndex,\n                {\n                  total: response.total_count,\n                  data: response.data,\n                  colNames: ensureIsArray(response.colnames),\n                  colTypes: ensureIsArray(response.coltypes),\n                },\n              ],\n            ]),\n          );\n          setResponseError('');\n        })\n        .catch(error => {\n          setResponseError(`${error.name}: ${error.message}`);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, [\n    SAMPLES_ROW_LIMIT,\n    datasourceId,\n    datasourceType,\n    filters,\n    formData,\n    isLoading,\n    pageIndex,\n    responseError,\n    resultsPages,\n  ]);\n\n  const bootstrapping =\n    (!responseError && !resultsPages.size) ||\n    metadataBarStatus === ResourceStatus.LOADING;\n\n  let tableContent = null;\n  if (responseError) {\n    // Render error if page download failed\n    tableContent = (\n      <pre\n        css={css`\n          margin-top: ${theme.gridUnit * 4}px;\n        `}\n      >\n        {responseError}\n      </pre>\n    );\n  } else if (bootstrapping) {\n    // Render loading if first page hasn't loaded\n    tableContent = <Loading />;\n  } else if (resultsPage?.total === 0) {\n    // Render empty state if no results are returned for page\n    const title = t('No rows were returned for this dataset');\n    tableContent = <EmptyStateMedium image=\"document.svg\" title={title} />;\n  } else {\n    // Render table if at least one page has successfully loaded\n    tableContent = (\n      <Resizable>\n        <Table\n          data={data}\n          columns={mappedColumns}\n          size={TableSize.SMALL}\n          defaultPageSize={PAGE_SIZE}\n          recordCount={resultsPage?.total}\n          usePagination\n          loading={isLoading}\n          onChange={pagination =>\n            setPageIndex(pagination.current ? pagination.current - 1 : 0)\n          }\n          resizable\n          virtualize\n        />\n      </Resizable>\n    );\n  }\n\n  return (\n    <>\n      {!bootstrapping && metadataBar}\n      {!bootstrapping && (\n        <TableControls\n          filters={filters}\n          setFilters={setFilters}\n          totalCount={resultsPage?.total}\n          loading={isLoading}\n          onReload={handleReload}\n        />\n      )}\n      {tableContent}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}