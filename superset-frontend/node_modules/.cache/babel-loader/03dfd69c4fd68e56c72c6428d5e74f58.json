{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport cx from 'classnames';\nimport Button from 'src/components/Button';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SyntaxHighlighterCopy from 'src/features/queries/SyntaxHighlighterCopy';\nimport useQueryPreviewState from 'src/features/queries/hooks/useQueryPreviewState';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst QueryTitle = styled.div`\n  color: ${(_ref) => {let { theme } = _ref;return theme.colors.secondary.light2;}};\n  font-size: ${(_ref2) => {let { theme } = _ref2;return theme.typography.sizes.s;}}px;\n  margin-bottom: 0;\n  text-transform: uppercase;\n`;\nconst QueryLabel = styled.div`\n  color: ${(_ref3) => {let { theme } = _ref3;return theme.colors.grayscale.dark2;}};\n  font-size: ${(_ref4) => {let { theme } = _ref4;return theme.typography.sizes.m;}}px;\n  padding: 4px 0 24px 0;\n`;\nconst QueryViewToggle = styled.div`\n  margin: 0 0 ${(_ref5) => {let { theme } = _ref5;return theme.gridUnit * 6;}}px 0;\n`;\nconst TabButton = styled.div`\n  display: inline;\n  font-size: ${(_ref6) => {let { theme } = _ref6;return theme.typography.sizes.s;}}px;\n  padding: ${(_ref7) => {let { theme } = _ref7;return theme.gridUnit * 2;}}px\n    ${(_ref8) => {let { theme } = _ref8;return theme.gridUnit * 4;}}px;\n  margin-right: ${(_ref9) => {let { theme } = _ref9;return theme.gridUnit * 4;}}px;\n  color: ${(_ref10) => {let { theme } = _ref10;return theme.colors.secondary.dark1;}};\n\n  &.active,\n  &:focus,\n  &:hover {\n    background: ${(_ref11) => {let { theme } = _ref11;return theme.colors.secondary.light4;}};\n    border-bottom: none;\n    border-radius: ${(_ref12) => {let { theme } = _ref12;return theme.borderRadius;}}px;\n    margin-bottom: ${(_ref13) => {let { theme } = _ref13;return theme.gridUnit * 2;}}px;\n  }\n\n  &:hover:not(.active) {\n    background: ${(_ref14) => {let { theme } = _ref14;return theme.colors.secondary.light5;}};\n  }\n`;\nconst StyledModal = styled(Modal)`\n  .ant-modal-body {\n    padding: ${(_ref15) => {let { theme } = _ref15;return theme.gridUnit * 6;}}px;\n  }\n\n  pre {\n    font-size: ${(_ref16) => {let { theme } = _ref16;return theme.typography.sizes.xs;}}px;\n    font-weight: ${(_ref17) => {let { theme } = _ref17;return theme.typography.weights.normal;}};\n    line-height: ${(_ref18) => {let { theme } = _ref18;return theme.typography.sizes.l;}}px;\n    height: 375px;\n    border: none;\n  }\n`;\nfunction QueryPreviewModal(_ref19) {let { onHide, openInSqlLab, queries, query, fetchData, show, addDangerToast, addSuccessToast } = _ref19;\n  const { handleKeyPress, handleDataChange, disablePrevious, disableNext } = useQueryPreviewState({\n    queries,\n    currentQueryId: query.id,\n    fetchData });\n\n  const [currentTab, setCurrentTab] = useState('user');\n  const { id, sql, executed_sql } = query;\n  return ___EmotionJSX(\"div\", { role: \"none\", onKeyUp: handleKeyPress },\n  ___EmotionJSX(StyledModal, { onHide: onHide, show: show, title: t('Query preview'), footer: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(Button, { \"data-test\": \"previous-query\", key: \"previous-query\", disabled: disablePrevious, onClick: () => handleDataChange(true) },\n    t('Previous')),\n\n    ___EmotionJSX(Button, { \"data-test\": \"next-query\", key: \"next-query\", disabled: disableNext, onClick: () => handleDataChange(false) },\n    t('Next')),\n\n    ___EmotionJSX(Button, { \"data-test\": \"open-in-sql-lab\", key: \"open-in-sql-lab\", buttonStyle: \"primary\", onClick: () => openInSqlLab(id) },\n    t('Open in SQL Lab'))) },\n\n\n  ___EmotionJSX(QueryTitle, null, t('Tab name')),\n  ___EmotionJSX(QueryLabel, null, query.tab_name),\n  ___EmotionJSX(QueryViewToggle, null,\n  ___EmotionJSX(TabButton, { role: \"button\", \"data-test\": \"toggle-user-sql\", className: cx({ active: currentTab === 'user' }), onClick: () => setCurrentTab('user') },\n  t('User query')),\n\n  ___EmotionJSX(TabButton, { role: \"button\", \"data-test\": \"toggle-executed-sql\", className: cx({ active: currentTab === 'executed' }), onClick: () => setCurrentTab('executed') },\n  t('Executed query'))),\n\n\n  ___EmotionJSX(SyntaxHighlighterCopy, { addDangerToast: addDangerToast, addSuccessToast: addSuccessToast, language: \"sql\" },\n  (currentTab === 'user' ? sql : executed_sql) || '')));\n\n\n\n}__signature__(QueryPreviewModal, \"useQueryPreviewState{{ handleKeyPress, handleDataChange, disablePrevious, disableNext }}\\nuseState{[currentTab, setCurrentTab]('user')}\", () => [useQueryPreviewState]);const _default =\nwithToasts(QueryPreviewModal);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(QueryTitle, \"QueryTitle\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/queries/QueryPreviewModal.tsx\");reactHotLoader.register(QueryLabel, \"QueryLabel\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/queries/QueryPreviewModal.tsx\");reactHotLoader.register(QueryViewToggle, \"QueryViewToggle\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/queries/QueryPreviewModal.tsx\");reactHotLoader.register(TabButton, \"TabButton\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/queries/QueryPreviewModal.tsx\");reactHotLoader.register(StyledModal, \"StyledModal\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/queries/QueryPreviewModal.tsx\");reactHotLoader.register(QueryPreviewModal, \"QueryPreviewModal\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/queries/QueryPreviewModal.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/queries/QueryPreviewModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useState","styled","t","Modal","cx","Button","withToasts","SyntaxHighlighterCopy","useQueryPreviewState","QueryTitle","div","theme","colors","secondary","light2","typography","sizes","s","QueryLabel","grayscale","dark2","m","QueryViewToggle","gridUnit","TabButton","dark1","light4","borderRadius","light5","StyledModal","xs","weights","normal","l","QueryPreviewModal","onHide","openInSqlLab","queries","query","fetchData","show","addDangerToast","addSuccessToast","handleKeyPress","handleDataChange","disablePrevious","disableNext","currentQueryId","id","currentTab","setCurrentTab","sql","executed_sql","tab_name","active"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/queries/QueryPreviewModal.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport cx from 'classnames';\nimport Button from 'src/components/Button';\nimport withToasts, {\n  ToastProps,\n} from 'src/components/MessageToasts/withToasts';\nimport SyntaxHighlighterCopy from 'src/features/queries/SyntaxHighlighterCopy';\nimport useQueryPreviewState from 'src/features/queries/hooks/useQueryPreviewState';\nimport { QueryObject } from 'src/views/CRUD/types';\n\nconst QueryTitle = styled.div`\n  color: ${({ theme }) => theme.colors.secondary.light2};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-bottom: 0;\n  text-transform: uppercase;\n`;\n\nconst QueryLabel = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n  font-size: ${({ theme }) => theme.typography.sizes.m}px;\n  padding: 4px 0 24px 0;\n`;\n\nconst QueryViewToggle = styled.div`\n  margin: 0 0 ${({ theme }) => theme.gridUnit * 6}px 0;\n`;\n\nconst TabButton = styled.div`\n  display: inline;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  padding: ${({ theme }) => theme.gridUnit * 2}px\n    ${({ theme }) => theme.gridUnit * 4}px;\n  margin-right: ${({ theme }) => theme.gridUnit * 4}px;\n  color: ${({ theme }) => theme.colors.secondary.dark1};\n\n  &.active,\n  &:focus,\n  &:hover {\n    background: ${({ theme }) => theme.colors.secondary.light4};\n    border-bottom: none;\n    border-radius: ${({ theme }) => theme.borderRadius}px;\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  &:hover:not(.active) {\n    background: ${({ theme }) => theme.colors.secondary.light5};\n  }\n`;\nconst StyledModal = styled(Modal)`\n  .ant-modal-body {\n    padding: ${({ theme }) => theme.gridUnit * 6}px;\n  }\n\n  pre {\n    font-size: ${({ theme }) => theme.typography.sizes.xs}px;\n    font-weight: ${({ theme }) => theme.typography.weights.normal};\n    line-height: ${({ theme }) => theme.typography.sizes.l}px;\n    height: 375px;\n    border: none;\n  }\n`;\n\ninterface QueryPreviewModalProps extends ToastProps {\n  onHide: () => void;\n  openInSqlLab: (id: number) => any;\n  queries: QueryObject[];\n  query: QueryObject;\n  fetchData: (id: number) => any;\n  show: boolean;\n}\n\nfunction QueryPreviewModal({\n  onHide,\n  openInSqlLab,\n  queries,\n  query,\n  fetchData,\n  show,\n  addDangerToast,\n  addSuccessToast,\n}: QueryPreviewModalProps) {\n  const { handleKeyPress, handleDataChange, disablePrevious, disableNext } =\n    useQueryPreviewState<QueryObject>({\n      queries,\n      currentQueryId: query.id,\n      fetchData,\n    });\n\n  const [currentTab, setCurrentTab] = useState<'user' | 'executed'>('user');\n\n  const { id, sql, executed_sql } = query;\n  return (\n    <div role=\"none\" onKeyUp={handleKeyPress}>\n      <StyledModal\n        onHide={onHide}\n        show={show}\n        title={t('Query preview')}\n        footer={\n          <>\n            <Button\n              data-test=\"previous-query\"\n              key=\"previous-query\"\n              disabled={disablePrevious}\n              onClick={() => handleDataChange(true)}\n            >\n              {t('Previous')}\n            </Button>\n            <Button\n              data-test=\"next-query\"\n              key=\"next-query\"\n              disabled={disableNext}\n              onClick={() => handleDataChange(false)}\n            >\n              {t('Next')}\n            </Button>\n            <Button\n              data-test=\"open-in-sql-lab\"\n              key=\"open-in-sql-lab\"\n              buttonStyle=\"primary\"\n              onClick={() => openInSqlLab(id)}\n            >\n              {t('Open in SQL Lab')}\n            </Button>\n          </>\n        }\n      >\n        <QueryTitle>{t('Tab name')}</QueryTitle>\n        <QueryLabel>{query.tab_name}</QueryLabel>\n        <QueryViewToggle>\n          <TabButton\n            role=\"button\"\n            data-test=\"toggle-user-sql\"\n            className={cx({ active: currentTab === 'user' })}\n            onClick={() => setCurrentTab('user')}\n          >\n            {t('User query')}\n          </TabButton>\n          <TabButton\n            role=\"button\"\n            data-test=\"toggle-executed-sql\"\n            className={cx({ active: currentTab === 'executed' })}\n            onClick={() => setCurrentTab('executed')}\n          >\n            {t('Executed query')}\n          </TabButton>\n        </QueryViewToggle>\n        <SyntaxHighlighterCopy\n          addDangerToast={addDangerToast}\n          addSuccessToast={addSuccessToast}\n          language=\"sql\"\n        >\n          {(currentTab === 'user' ? sql : executed_sql) || ''}\n        </SyntaxHighlighterCopy>\n      </StyledModal>\n    </div>\n  );\n}\n\nexport default withToasts(QueryPreviewModal);\n"]},"metadata":{},"sourceType":"module"}