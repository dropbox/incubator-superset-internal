{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useSelector } from 'react-redux';\nimport getChartAndLabelComponentIdFromPath from 'src/dashboard/util/getChartAndLabelComponentIdFromPath';\nexport const useFilterOutlined = () => useSelector((state) => {var _getChartAndLabelComp;return {\n    outlinedFilterId: (_getChartAndLabelComp = getChartAndLabelComponentIdFromPath(state.dashboardState.directPathToChild || [])) == null ? void 0 : _getChartAndLabelComp.native_filter,\n    lastUpdated: state.dashboardState.directPathLastUpdated };});__signature__(useFilterOutlined, \"useSelector{}\", () => [useSelector]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useFilterOutlined, \"useFilterOutlined\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/useFilterOutlined.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,WAAT,QAA4B,aAA5B;AAEA,OAAOC,mCAAP,MAAgD,wDAAhD;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAC/BF,WAAW,CACT,MAAK,uCAAK;IACRG,gBAAgB,2BACdF,mCAAmC,CACjCG,KAAK,CAACC,cAAN,CAAqBC,iBAArB,IAA0C,EADT,CADrB,qBACd,sBAGCC,aALK;IAMRC,WAAW,EAAEJ,KAAK,CAACC,cAAN,CAAqBI,qBAN1B,EAAL,EADI,CADN,C,cAAMP,iB,0BACXF,W,oLADWE,iB","names":["useSelector","getChartAndLabelComponentIdFromPath","useFilterOutlined","outlinedFilterId","state","dashboardState","directPathToChild","native_filter","lastUpdated","directPathLastUpdated"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/useFilterOutlined.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'src/dashboard/types';\nimport getChartAndLabelComponentIdFromPath from 'src/dashboard/util/getChartAndLabelComponentIdFromPath';\n\nexport const useFilterOutlined = () =>\n  useSelector<RootState, { outlinedFilterId: string; lastUpdated: number }>(\n    state => ({\n      outlinedFilterId: (\n        getChartAndLabelComponentIdFromPath(\n          state.dashboardState.directPathToChild || [],\n        ) as Record<string, string>\n      )?.native_filter,\n      lastUpdated: state.dashboardState.directPathLastUpdated,\n    }),\n  );\n"]},"metadata":{},"sourceType":"module"}