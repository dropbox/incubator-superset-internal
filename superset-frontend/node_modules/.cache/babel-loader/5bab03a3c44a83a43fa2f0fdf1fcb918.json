{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { legacyValidateNumber, legacyValidateInteger } from '@superset-ui/core';\nimport debounce from 'lodash/debounce';\nimport { FAST_DEBOUNCE } from 'src/constants';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport { Input } from 'src/components/Input';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst safeStringify = (value) => value == null ? '' : String(value);\nexport default class TextControl extends React.Component {\n\n  constructor(props) {\n    super(props);this.initialValue = void 0;this.\n\n\n\n\n\n    onChange = (inputValue) => {var _this$props$onChange, _this$props;\n      let parsedValue = inputValue;\n      // Validation & casting\n      const errors = [];\n      if (inputValue !== '' && this.props.isFloat) {\n        const error = legacyValidateNumber(inputValue);\n        if (error) {\n          errors.push(error);\n        } else\n        {\n          parsedValue = inputValue.match(/.*([.0])$/g) ?\n          inputValue :\n          parseFloat(inputValue);\n        }\n      }\n      if (inputValue !== '' && this.props.isInt) {\n        const error = legacyValidateInteger(inputValue);\n        if (error) {\n          errors.push(error);\n        } else\n        {\n          parsedValue = parseInt(inputValue, 10);\n        }\n      }\n      (_this$props$onChange = (_this$props = this.props).onChange) == null ? void 0 : _this$props$onChange.call(_this$props, parsedValue, errors);\n    };this.\n    debouncedOnChange = debounce((inputValue) => {\n      this.onChange(inputValue);\n    }, FAST_DEBOUNCE);this.\n    onChangeWrapper = (event) => {\n      const { value } = event.target;\n      this.setState({ value }, () => {\n        this.debouncedOnChange(value);\n      });\n    };this.initialValue = props.value;this.state = { value: safeStringify(this.initialValue) };}\n  render() {\n    let { value } = this.state;\n    if (this.initialValue !== this.props.value) {\n      this.initialValue = this.props.value;\n      value = safeStringify(this.props.value);\n    }\n    return ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(ControlHeader, this.props),\n    ___EmotionJSX(Input, { type: \"text\", \"data-test\": \"inline-name\", placeholder: this.props.placeholder, onChange: this.onChangeWrapper, onFocus: this.props.onFocus, value: value, disabled: this.props.disabled, \"aria-label\": this.props.label }));\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(safeStringify, \"safeStringify\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/TextControl/index.tsx\");reactHotLoader.register(TextControl, \"TextControl\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/TextControl/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,EAA+BC,qBAA/B,QAA4D,mBAA5D;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,SAASC,KAAT,QAAsB,sBAAtB,C;AAqBA,MAAMC,aAAa,GAAG,CAACC,KAAD,KACpBA,KAAK,IAAI,IAAT,GAAgB,EAAhB,GAAqBC,MAAM,CAACD,KAAD,CAD7B;AAGA,eAAc,MAAOE,WAAP,SAEJV,KAAK,CAACW,SAFF,CAEkD;;EAG9DC,YAAYC,KAAZ,EAAsC;IACpC,MAAMA,KAAN,EADoC,KAFtCC,YAEsC;;;;;;IAQtCC,QARsC,GAQ3B,CAACC,UAAD,KAAuB;MAChC,IAAIC,WAAW,GAAmBD,UAAlC;MACA;MACA,MAAME,MAAM,GAAG,EAAf;MACA,IAAIF,UAAU,KAAK,EAAf,IAAqB,KAAKH,KAAL,CAAWM,OAApC,EAA6C;QAC3C,MAAMC,KAAK,GAAGnB,oBAAoB,CAACe,UAAD,CAAlC;QACA,IAAII,KAAJ,EAAW;UACTF,MAAM,CAACG,IAAP,CAAYD,KAAZ;QACD,CAFD;QAEO;UACLH,WAAW,GAAGD,UAAU,CAACM,KAAX,CAAiB,YAAjB;UACVN,UADU;UAEVO,UAAU,CAACP,UAAD,CAFd;QAGD;MACF;MACD,IAAIA,UAAU,KAAK,EAAf,IAAqB,KAAKH,KAAL,CAAWW,KAApC,EAA2C;QACzC,MAAMJ,KAAK,GAAGlB,qBAAqB,CAACc,UAAD,CAAnC;QACA,IAAII,KAAJ,EAAW;UACTF,MAAM,CAACG,IAAP,CAAYD,KAAZ;QACD,CAFD;QAEO;UACLH,WAAW,GAAGQ,QAAQ,CAACT,UAAD,EAAa,EAAb,CAAtB;QACD;MACF;MACD,4CAAKH,KAAL,EAAWE,QAAX,4DAAsBE,WAAtB,EAAwCC,MAAxC;IACD,CA/BqC;IAiCtCQ,iBAjCsC,GAiClBvB,QAAQ,CAAC,CAACa,UAAD,KAAuB;MAClD,KAAKD,QAAL,CAAcC,UAAd;IACD,CAF2B,EAEzBZ,aAFyB,CAjCU;IAqCtCuB,eArCsC,GAqCpB,CAACC,KAAD,KAA+C;MAC/D,MAAM,EAAEpB,KAAF,KAAYoB,KAAK,CAACC,MAAxB;MACA,KAAKC,QAAL,CAAc,EAAEtB,KAAF,EAAd,EAAyB,MAAK;QAC5B,KAAKkB,iBAAL,CAAuBlB,KAAvB;MACD,CAFD;IAGD,CA1CqC,CAEpC,KAAKM,YAAL,GAAoBD,KAAK,CAACL,KAA1B,CACA,KAAKuB,KAAL,GAAa,EACXvB,KAAK,EAAED,aAAa,CAAC,KAAKO,YAAN,CADT,EAAb,CAGD;EAsCDkB,MAAM;IACJ,IAAI,EAAExB,KAAF,KAAY,KAAKuB,KAArB;IACA,IAAI,KAAKjB,YAAL,KAAsB,KAAKD,KAAL,CAAWL,KAArC,EAA4C;MAC1C,KAAKM,YAAL,GAAoB,KAAKD,KAAL,CAAWL,KAA/B;MACAA,KAAK,GAAGD,aAAa,CAAC,KAAKM,KAAL,CAAWL,KAAZ,CAArB;IACD;IACD,OACE;IACE,cAAC,aAAD,EAAmB,KAAKK,KAAxB,CADF;IAEE,cAAC,KAAD,IACE,IAAI,EAAC,MADP,EAEE,aAAU,aAFZ,EAGE,WAAW,EAAE,KAAKA,KAAL,CAAWoB,WAH1B,EAIE,QAAQ,EAAE,KAAKN,eAJjB,EAKE,OAAO,EAAE,KAAKd,KAAL,CAAWqB,OALtB,EAME,KAAK,EAAE1B,KANT,EAOE,QAAQ,EAAE,KAAKK,KAAL,CAAWsB,QAPvB,EAQE,cAAY,KAAKtB,KAAL,CAAWuB,KARzB,GAFF,CADF;;EAeD,CApE6D;EAAA;IAAA,yB,iLAL1D7B,a,qKAGeG,W","names":["React","legacyValidateNumber","legacyValidateInteger","debounce","FAST_DEBOUNCE","ControlHeader","Input","safeStringify","value","String","TextControl","Component","constructor","props","initialValue","onChange","inputValue","parsedValue","errors","isFloat","error","push","match","parseFloat","isInt","parseInt","debouncedOnChange","onChangeWrapper","event","target","setState","state","render","placeholder","onFocus","disabled","label"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/TextControl/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { legacyValidateNumber, legacyValidateInteger } from '@superset-ui/core';\nimport debounce from 'lodash/debounce';\nimport { FAST_DEBOUNCE } from 'src/constants';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport { Input } from 'src/components/Input';\n\ntype InputValueType = string | number;\n\nexport interface TextControlProps<T extends InputValueType = InputValueType> {\n  label?: string;\n  disabled?: boolean;\n  isFloat?: boolean;\n  isInt?: boolean;\n  onChange?: (value: T, errors: any) => {};\n  onFocus?: () => {};\n  placeholder?: string;\n  value?: T | null;\n  controlId?: string;\n  renderTrigger?: boolean;\n}\n\nexport interface TextControlState {\n  value: string;\n}\n\nconst safeStringify = (value?: InputValueType | null) =>\n  value == null ? '' : String(value);\n\nexport default class TextControl<\n  T extends InputValueType = InputValueType,\n> extends React.Component<TextControlProps<T>, TextControlState> {\n  initialValue?: TextControlProps['value'];\n\n  constructor(props: TextControlProps<T>) {\n    super(props);\n    this.initialValue = props.value;\n    this.state = {\n      value: safeStringify(this.initialValue),\n    };\n  }\n\n  onChange = (inputValue: string) => {\n    let parsedValue: InputValueType = inputValue;\n    // Validation & casting\n    const errors = [];\n    if (inputValue !== '' && this.props.isFloat) {\n      const error = legacyValidateNumber(inputValue);\n      if (error) {\n        errors.push(error);\n      } else {\n        parsedValue = inputValue.match(/.*([.0])$/g)\n          ? inputValue\n          : parseFloat(inputValue);\n      }\n    }\n    if (inputValue !== '' && this.props.isInt) {\n      const error = legacyValidateInteger(inputValue);\n      if (error) {\n        errors.push(error);\n      } else {\n        parsedValue = parseInt(inputValue, 10);\n      }\n    }\n    this.props.onChange?.(parsedValue as T, errors);\n  };\n\n  debouncedOnChange = debounce((inputValue: string) => {\n    this.onChange(inputValue);\n  }, FAST_DEBOUNCE);\n\n  onChangeWrapper = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    this.setState({ value }, () => {\n      this.debouncedOnChange(value);\n    });\n  };\n\n  render() {\n    let { value } = this.state;\n    if (this.initialValue !== this.props.value) {\n      this.initialValue = this.props.value;\n      value = safeStringify(this.props.value);\n    }\n    return (\n      <div>\n        <ControlHeader {...this.props} />\n        <Input\n          type=\"text\"\n          data-test=\"inline-name\"\n          placeholder={this.props.placeholder}\n          onChange={this.onChangeWrapper}\n          onFocus={this.props.onFocus}\n          value={value}\n          disabled={this.props.disabled}\n          aria-label={this.props.label}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}