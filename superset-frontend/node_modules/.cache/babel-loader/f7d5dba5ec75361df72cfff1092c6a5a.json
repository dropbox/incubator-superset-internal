{"ast":null,"code":"import { makeSingleton } from '@encodable/registry';\nimport TimeRangeFormatterRegistry from './TimeRangeFormatterRegistry';\nexport const getTimeRangeFormatterRegistry = makeSingleton(() => new TimeRangeFormatterRegistry({\n  globalId: '@encodable/format:TimeRangeFormatterRegistry' }));\n\nexport function getTimeRangeFormatter(format) {\n  return getTimeRangeFormatterRegistry().get(format);\n}\nexport function formatTimeRange(format, range) {\n  return getTimeRangeFormatter(format)(range);\n}\nexport { TimeRangeFormatterRegistry };","map":{"version":3,"names":["makeSingleton","TimeRangeFormatterRegistry","getTimeRangeFormatterRegistry","globalId","getTimeRangeFormatter","format","get","formatTimeRange","range"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/node_modules/@encodable/format/esm/timeRange/index.js"],"sourcesContent":["import { makeSingleton } from '@encodable/registry';\nimport TimeRangeFormatterRegistry from './TimeRangeFormatterRegistry';\nexport const getTimeRangeFormatterRegistry = makeSingleton(() => new TimeRangeFormatterRegistry({\n  globalId: '@encodable/format:TimeRangeFormatterRegistry'\n}));\nexport function getTimeRangeFormatter(format) {\n  return getTimeRangeFormatterRegistry().get(format);\n}\nexport function formatTimeRange(format, range) {\n  return getTimeRangeFormatter(format)(range);\n}\nexport { TimeRangeFormatterRegistry };"],"mappings":"AAAA,SAASA,aAAT,QAA8B,qBAA9B;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;AACA,OAAO,MAAMC,6BAA6B,GAAGF,aAAa,CAAC,MAAM,IAAIC,0BAAJ,CAA+B;EAC9FE,QAAQ,EAAE,8CADoF,EAA/B,CAAP,CAAnD;;AAGP,OAAO,SAASC,qBAAT,CAA+BC,MAA/B,EAAuC;EAC5C,OAAOH,6BAA6B,GAAGI,GAAhC,CAAoCD,MAApC,CAAP;AACD;AACD,OAAO,SAASE,eAAT,CAAyBF,MAAzB,EAAiCG,KAAjC,EAAwC;EAC7C,OAAOJ,qBAAqB,CAACC,MAAD,CAArB,CAA8BG,KAA9B,CAAP;AACD;AACD,SAASP,0BAAT"},"metadata":{},"sourceType":"module"}