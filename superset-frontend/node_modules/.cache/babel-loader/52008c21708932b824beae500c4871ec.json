{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { sections, getStandardizedControls } from '@superset-ui/chart-controls';\nimport { lineInterpolation, showBrush, showLegend, xAxisLabel, bottomMargin, xTicksLayout, xAxisFormat, yLogScale, yAxisBounds, yAxisLabel, xAxisShowMinmax, yAxisShowMinmax, richTooltip, leftMargin, showMarkers, timeSeriesSection } from '../NVD3Controls';\nconst config = {\n  controlPanelSections: [\n  sections.legacyTimeseriesTime,\n  timeSeriesSection[0],\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [\n    ['color_scheme'],\n    [showBrush],\n    [\n    {\n      name: 'send_time_range',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Propagate'),\n        renderTrigger: true,\n        default: false,\n        description: t('Send range filter events to other charts') } }],\n\n\n\n    [showLegend],\n    [richTooltip],\n    [showMarkers],\n    [lineInterpolation]] },\n\n\n  {\n    label: t('X Axis'),\n    expanded: true,\n    controlSetRows: [\n    [xAxisLabel],\n    [bottomMargin],\n    [xTicksLayout],\n    [xAxisFormat],\n    [xAxisShowMinmax, null]] },\n\n\n  {\n    label: t('Y Axis'),\n    expanded: true,\n    controlSetRows: [\n    [yAxisLabel],\n    [leftMargin],\n    [yAxisShowMinmax],\n    [yLogScale],\n    ['y_axis_format'],\n    [yAxisBounds]] },\n\n\n  timeSeriesSection[1],\n  sections.annotations],\n\n  controlOverrides: {\n    row_limit: {\n      default: 50000 } },\n\n\n  formDataOverrides: (formData) => ({\n    ...formData,\n    metrics: getStandardizedControls().popAllMetrics(),\n    groupby: getStandardizedControls().popAllColumns() }) };\n\n\nexport default config;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,CAAT,QAAkB,mBAAlB;AACA,SAEEC,QAFF,EAGEC,uBAHF,QAIO,6BAJP;AAKA,SACEC,iBADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,UAJF,EAKEC,YALF,EAMEC,YANF,EAOEC,WAPF,EAQEC,SARF,EASEC,WATF,EAUEC,UAVF,EAWEC,eAXF,EAYEC,eAZF,EAaEC,WAbF,EAcEC,UAdF,EAeEC,WAfF,EAgBEC,iBAhBF,QAiBO,iBAjBP;AAmBA,MAAMC,MAAM,GAAuB;EACjCC,oBAAoB,EAAE;EACpBnB,QAAQ,CAACoB,oBADW;EAEpBH,iBAAiB,CAAC,CAAD,CAFG;EAGpB;IACEI,KAAK,EAAEtB,CAAC,CAAC,eAAD,CADV;IAEEuB,QAAQ,EAAE,IAFZ;IAGEC,cAAc,EAAE;IACd,CAAC,cAAD,CADc;IAEd,CAACpB,SAAD,CAFc;IAGd;IACE;MACEqB,IAAI,EAAE,iBADR;MAEEN,MAAM,EAAE;QACNO,IAAI,EAAE,iBADA;QAENJ,KAAK,EAAEtB,CAAC,CAAC,WAAD,CAFF;QAGN2B,aAAa,EAAE,IAHT;QAINC,OAAO,EAAE,KAJH;QAKNC,WAAW,EAAE7B,CAAC,CAAC,0CAAD,CALR,EAFV,EADF,CAHc;;;;IAed,CAACK,UAAD,CAfc;IAgBd,CAACU,WAAD,CAhBc;IAiBd,CAACE,WAAD,CAjBc;IAkBd,CAACd,iBAAD,CAlBc,CAHlB,EAHoB;;;EA2BpB;IACEmB,KAAK,EAAEtB,CAAC,CAAC,QAAD,CADV;IAEEuB,QAAQ,EAAE,IAFZ;IAGEC,cAAc,EAAE;IACd,CAAClB,UAAD,CADc;IAEd,CAACC,YAAD,CAFc;IAGd,CAACC,YAAD,CAHc;IAId,CAACC,WAAD,CAJc;IAKd,CAACI,eAAD,EAAkB,IAAlB,CALc,CAHlB,EA3BoB;;;EAsCpB;IACES,KAAK,EAAEtB,CAAC,CAAC,QAAD,CADV;IAEEuB,QAAQ,EAAE,IAFZ;IAGEC,cAAc,EAAE;IACd,CAACZ,UAAD,CADc;IAEd,CAACI,UAAD,CAFc;IAGd,CAACF,eAAD,CAHc;IAId,CAACJ,SAAD,CAJc;IAKd,CAAC,eAAD,CALc;IAMd,CAACC,WAAD,CANc,CAHlB,EAtCoB;;;EAkDpBO,iBAAiB,CAAC,CAAD,CAlDG;EAmDpBjB,QAAQ,CAAC6B,WAnDW,CADW;;EAsDjCC,gBAAgB,EAAE;IAChBC,SAAS,EAAE;MACTJ,OAAO,EAAE,KADA,EADK,EAtDe;;;EA2DjCK,iBAAiB,EAAE,SAAQ,MAAK;IAC9B,GAAGC,QAD2B;IAE9BC,OAAO,EAAEjC,uBAAuB,GAAGkC,aAA1B,EAFqB;IAG9BC,OAAO,EAAEnC,uBAAuB,GAAGoC,aAA1B,EAHqB,EAAL,CA3DM,EAAnC;;;AAkEA,eAAenB,MAAf","names":["t","sections","getStandardizedControls","lineInterpolation","showBrush","showLegend","xAxisLabel","bottomMargin","xTicksLayout","xAxisFormat","yLogScale","yAxisBounds","yAxisLabel","xAxisShowMinmax","yAxisShowMinmax","richTooltip","leftMargin","showMarkers","timeSeriesSection","config","controlPanelSections","legacyTimeseriesTime","label","expanded","controlSetRows","name","type","renderTrigger","default","description","annotations","controlOverrides","row_limit","formDataOverrides","formData","metrics","popAllMetrics","groupby","popAllColumns"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/legacy-preset-chart-nvd3/src/Line/controlPanel.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  sections,\n  getStandardizedControls,\n} from '@superset-ui/chart-controls';\nimport {\n  lineInterpolation,\n  showBrush,\n  showLegend,\n  xAxisLabel,\n  bottomMargin,\n  xTicksLayout,\n  xAxisFormat,\n  yLogScale,\n  yAxisBounds,\n  yAxisLabel,\n  xAxisShowMinmax,\n  yAxisShowMinmax,\n  richTooltip,\n  leftMargin,\n  showMarkers,\n  timeSeriesSection,\n} from '../NVD3Controls';\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.legacyTimeseriesTime,\n    timeSeriesSection[0],\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        ['color_scheme'],\n        [showBrush],\n        [\n          {\n            name: 'send_time_range',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Propagate'),\n              renderTrigger: true,\n              default: false,\n              description: t('Send range filter events to other charts'),\n            },\n          },\n        ],\n        [showLegend],\n        [richTooltip],\n        [showMarkers],\n        [lineInterpolation],\n      ],\n    },\n    {\n      label: t('X Axis'),\n      expanded: true,\n      controlSetRows: [\n        [xAxisLabel],\n        [bottomMargin],\n        [xTicksLayout],\n        [xAxisFormat],\n        [xAxisShowMinmax, null],\n      ],\n    },\n    {\n      label: t('Y Axis'),\n      expanded: true,\n      controlSetRows: [\n        [yAxisLabel],\n        [leftMargin],\n        [yAxisShowMinmax],\n        [yLogScale],\n        ['y_axis_format'],\n        [yAxisBounds],\n      ],\n    },\n    timeSeriesSection[1],\n    sections.annotations,\n  ],\n  controlOverrides: {\n    row_limit: {\n      default: 50000,\n    },\n  },\n  formDataOverrides: formData => ({\n    ...formData,\n    metrics: getStandardizedControls().popAllMetrics(),\n    groupby: getStandardizedControls().popAllColumns(),\n  }),\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}