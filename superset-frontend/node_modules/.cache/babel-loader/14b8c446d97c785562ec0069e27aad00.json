{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport LinesEllipsis from 'react-lines-ellipsis';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledButton = styled(Button)`\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n`;\nconst StyledImage = styled.div`\n  padding: ${(_ref) => {let { theme } = _ref;return theme.gridUnit * 4;}}px;\n  height: ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit * 18;}}px;\n  margin: ${(_ref3) => {let { theme } = _ref3;return theme.gridUnit * 3;}}px 0;\n\n  .default-db-icon {\n    font-size: 36px;\n    color: ${(_ref4) => {let { theme } = _ref4;return theme.colors.grayscale.base;}};\n    margin-right: 0;\n    span:first-of-type {\n      margin-right: 0;\n    }\n  }\n\n  &:first-of-type {\n    margin-right: 0;\n  }\n\n  img {\n    width: ${(_ref5) => {let { theme } = _ref5;return theme.gridUnit * 10;}}px;\n    height: ${(_ref6) => {let { theme } = _ref6;return theme.gridUnit * 10;}}px;\n    margin: 0;\n    &:first-of-type {\n      margin-right: 0;\n    }\n  }\n  svg {\n    &:first-of-type {\n      margin-right: 0;\n    }\n  }\n`;\nconst StyledInner = styled.div`\n  max-height: calc(1.5em * 2);\n  white-space: break-spaces;\n\n  &:first-of-type {\n    margin-right: 0;\n  }\n\n  .LinesEllipsis {\n    &:first-of-type {\n      margin-right: 0;\n    }\n  }\n`;\nconst StyledBottom = styled.div`\n  padding: ${(_ref7) => {let { theme } = _ref7;return theme.gridUnit * 4;}}px 0;\n  border-radius: 0 0 ${(_ref8) => {let { theme } = _ref8;return theme.borderRadius;}}px\n    ${(_ref9) => {let { theme } = _ref9;return theme.borderRadius;}}px;\n  background-color: ${(_ref10) => {let { theme } = _ref10;return theme.colors.grayscale.light4;}};\n  width: 100%;\n  line-height: 1.5em;\n  overflow: hidden;\n  white-space: no-wrap;\n  text-overflow: ellipsis;\n\n  &:first-of-type {\n    margin-right: 0;\n  }\n`;\nconst IconButton = styled((_ref11) => {let { icon, altText, buttonText, ...props } = _ref11;return ___EmotionJSX(StyledButton, props,\n  ___EmotionJSX(StyledImage, null,\n  icon && ___EmotionJSX(\"img\", { src: icon, alt: altText }),\n  !icon && ___EmotionJSX(Icons.DatabaseOutlined, { className: \"default-db-icon\", \"aria-label\": \"default-icon\" })),\n\n\n  ___EmotionJSX(StyledBottom, null,\n  ___EmotionJSX(StyledInner, null,\n  ___EmotionJSX(LinesEllipsis, { text: buttonText, maxLine: \"2\", basedOn: \"words\", trimRight: true }))));})\n\n\n`\n  text-transform: none;\n  background-color: ${(_ref12) => {let { theme } = _ref12;return theme.colors.grayscale.light5;}};\n  font-weight: ${(_ref13) => {let { theme } = _ref13;return theme.typography.weights.normal;}};\n  color: ${(_ref14) => {let { theme } = _ref14;return theme.colors.grayscale.dark2;}};\n  border: 1px solid ${(_ref15) => {let { theme } = _ref15;return theme.colors.grayscale.light2;}};\n  margin: 0;\n  width: 100%;\n\n  &:hover,\n  &:focus {\n    background-color: ${(_ref16) => {let { theme } = _ref16;return theme.colors.grayscale.light5;}};\n    color: ${(_ref17) => {let { theme } = _ref17;return theme.colors.grayscale.dark2;}};\n    border: 1px solid ${(_ref18) => {let { theme } = _ref18;return theme.colors.grayscale.light2;}};\n    box-shadow: 4px 4px 20px ${(_ref19) => {let { theme } = _ref19;return theme.colors.grayscale.light2;}};\n  }\n`;const _default =\nIconButton;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledButton, \"StyledButton\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/IconButton/index.tsx\");reactHotLoader.register(StyledImage, \"StyledImage\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/IconButton/index.tsx\");reactHotLoader.register(StyledInner, \"StyledInner\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/IconButton/index.tsx\");reactHotLoader.register(StyledBottom, \"StyledBottom\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/IconButton/index.tsx\");reactHotLoader.register(IconButton, \"IconButton\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/IconButton/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/IconButton/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","styled","Button","Icons","LinesEllipsis","StyledButton","StyledImage","div","theme","gridUnit","colors","grayscale","base","StyledInner","StyledBottom","borderRadius","light4","IconButton","icon","altText","buttonText","props","light5","typography","weights","normal","dark2","light2"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/IconButton/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport { ButtonProps as AntdButtonProps } from 'antd/lib/button';\nimport Icons from 'src/components/Icons';\nimport LinesEllipsis from 'react-lines-ellipsis';\n\nexport interface IconButtonProps extends AntdButtonProps {\n  buttonText: string;\n  icon: string;\n  altText?: string;\n}\n\nconst StyledButton = styled(Button)`\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n`;\n\nconst StyledImage = styled.div`\n  padding: ${({ theme }) => theme.gridUnit * 4}px;\n  height: ${({ theme }) => theme.gridUnit * 18}px;\n  margin: ${({ theme }) => theme.gridUnit * 3}px 0;\n\n  .default-db-icon {\n    font-size: 36px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n    margin-right: 0;\n    span:first-of-type {\n      margin-right: 0;\n    }\n  }\n\n  &:first-of-type {\n    margin-right: 0;\n  }\n\n  img {\n    width: ${({ theme }) => theme.gridUnit * 10}px;\n    height: ${({ theme }) => theme.gridUnit * 10}px;\n    margin: 0;\n    &:first-of-type {\n      margin-right: 0;\n    }\n  }\n  svg {\n    &:first-of-type {\n      margin-right: 0;\n    }\n  }\n`;\n\nconst StyledInner = styled.div`\n  max-height: calc(1.5em * 2);\n  white-space: break-spaces;\n\n  &:first-of-type {\n    margin-right: 0;\n  }\n\n  .LinesEllipsis {\n    &:first-of-type {\n      margin-right: 0;\n    }\n  }\n`;\n\nconst StyledBottom = styled.div`\n  padding: ${({ theme }) => theme.gridUnit * 4}px 0;\n  border-radius: 0 0 ${({ theme }) => theme.borderRadius}px\n    ${({ theme }) => theme.borderRadius}px;\n  background-color: ${({ theme }) => theme.colors.grayscale.light4};\n  width: 100%;\n  line-height: 1.5em;\n  overflow: hidden;\n  white-space: no-wrap;\n  text-overflow: ellipsis;\n\n  &:first-of-type {\n    margin-right: 0;\n  }\n`;\n\nconst IconButton = styled(\n  ({ icon, altText, buttonText, ...props }: IconButtonProps) => (\n    <StyledButton {...props}>\n      <StyledImage>\n        {icon && <img src={icon} alt={altText} />}\n        {!icon && (\n          <Icons.DatabaseOutlined\n            className=\"default-db-icon\"\n            aria-label=\"default-icon\"\n          />\n        )}\n      </StyledImage>\n\n      <StyledBottom>\n        <StyledInner>\n          <LinesEllipsis\n            text={buttonText}\n            maxLine=\"2\"\n            basedOn=\"words\"\n            trimRight\n          />\n        </StyledInner>\n      </StyledBottom>\n    </StyledButton>\n  ),\n)`\n  text-transform: none;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n  font-weight: ${({ theme }) => theme.typography.weights.normal};\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n  border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  margin: 0;\n  width: 100%;\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.colors.grayscale.light5};\n    color: ${({ theme }) => theme.colors.grayscale.dark2};\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    box-shadow: 4px 4px 20px ${({ theme }) => theme.colors.grayscale.light2};\n  }\n`;\n\nexport default IconButton;\n"]},"metadata":{},"sourceType":"module"}