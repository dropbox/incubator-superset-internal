{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport { sections } from '@superset-ui/chart-controls';\nimport { lineInterpolation, showLegend, xAxisLabel, bottomMargin, xTicksLayout, xAxisFormat, xAxisShowMinmax, showMarkers, yAxis2Format, yAxisShowMinmax, yAxisBounds, yAxis2ShowMinmax, yAxis2Bounds } from '../NVD3Controls';\nconst config = {\n  controlPanelSections: [\n  {\n    ...sections.legacyRegularTime,\n    controlSetRows: [['time_range']] },\n\n  {\n    label: t('Chart Options'),\n    tabOverride: 'customize',\n    expanded: true,\n    controlSetRows: [\n    ['color_scheme'],\n    [\n    {\n      name: 'prefix_metric_with_slice_name',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Prefix metric name with slice name'),\n        default: false,\n        renderTrigger: true } },\n\n\n    null],\n\n    [showLegend],\n    [showMarkers],\n    [lineInterpolation, null]] },\n\n\n  {\n    label: t('X Axis'),\n    expanded: true,\n    controlSetRows: [\n    [xAxisLabel],\n    [bottomMargin],\n    [xTicksLayout],\n    [xAxisFormat],\n    [xAxisShowMinmax, null]] },\n\n\n  {\n    label: t('Y Axis Left'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'line_charts',\n      config: {\n        type: 'SelectAsyncControl',\n        multi: true,\n        label: t('Left Axis chart(s)'),\n        validators: [validateNonEmpty],\n        default: [],\n        description: t('Choose one or more charts for left axis'),\n        dataEndpoint: '/sliceasync/api/read?_flt_0_viz_type=line&_flt_7_viz_type=line_multi',\n        placeholder: t('Select charts'),\n        onAsyncErrorMessage: t('Error while fetching charts'),\n        mutator: (data) => {\n          if (!data || !data.result) {\n            return [];\n          }\n          return data.result.map((o) => ({\n            value: o.id,\n            label: o.slice_name }));\n\n        } } }],\n\n\n\n    ['y_axis_format'],\n    [yAxisShowMinmax],\n    [yAxisBounds]] },\n\n\n  {\n    label: t('Y Axis Right'),\n    expanded: false,\n    controlSetRows: [\n    [\n    {\n      name: 'line_charts_2',\n      config: {\n        type: 'SelectAsyncControl',\n        multi: true,\n        label: t('Right Axis chart(s)'),\n        validators: [],\n        default: [],\n        description: t('Choose one or more charts for right axis'),\n        dataEndpoint: '/sliceasync/api/read?_flt_0_viz_type=line&_flt_7_viz_type=line_multi',\n        placeholder: t('Select charts'),\n        onAsyncErrorMessage: t('Error while fetching charts'),\n        mutator: (data) => {\n          if (!data || !data.result) {\n            return [];\n          }\n          return data.result.map((o) => ({\n            value: o.id,\n            label: o.slice_name }));\n\n        } } }],\n\n\n\n    [yAxis2Format],\n    [yAxis2ShowMinmax],\n    [yAxis2Bounds]] },\n\n\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [['adhoc_filters']] },\n\n  sections.annotations],\n\n  controlOverrides: {\n    y_axis_format: {\n      label: t('Left Axis Format') } } };const _default =\n\n\n\nconfig;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(config, \"config\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/LineMulti/controlPanel.ts\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/LineMulti/controlPanel.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["t","validateNonEmpty","sections","lineInterpolation","showLegend","xAxisLabel","bottomMargin","xTicksLayout","xAxisFormat","xAxisShowMinmax","showMarkers","yAxis2Format","yAxisShowMinmax","yAxisBounds","yAxis2ShowMinmax","yAxis2Bounds","config","controlPanelSections","legacyRegularTime","controlSetRows","label","tabOverride","expanded","name","type","default","renderTrigger","multi","validators","description","dataEndpoint","placeholder","onAsyncErrorMessage","mutator","data","result","map","value","o","id","slice_name","annotations","controlOverrides","y_axis_format"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/LineMulti/controlPanel.ts"],"sourcesContent":["/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport { ControlPanelConfig, sections } from '@superset-ui/chart-controls';\nimport {\n  lineInterpolation,\n  showLegend,\n  xAxisLabel,\n  bottomMargin,\n  xTicksLayout,\n  xAxisFormat,\n  xAxisShowMinmax,\n  showMarkers,\n  yAxis2Format,\n  yAxisShowMinmax,\n  yAxisBounds,\n  yAxis2ShowMinmax,\n  yAxis2Bounds,\n} from '../NVD3Controls';\n\nexport type Result = {\n  id: unknown;\n  slice_name: string;\n};\n\nexport type Data = {\n  result?: Result[];\n};\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    {\n      ...sections.legacyRegularTime,\n      controlSetRows: [['time_range']],\n    },\n    {\n      label: t('Chart Options'),\n      tabOverride: 'customize',\n      expanded: true,\n      controlSetRows: [\n        ['color_scheme'],\n        [\n          {\n            name: 'prefix_metric_with_slice_name',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Prefix metric name with slice name'),\n              default: false,\n              renderTrigger: true,\n            },\n          },\n          null,\n        ],\n        [showLegend],\n        [showMarkers],\n        [lineInterpolation, null],\n      ],\n    },\n    {\n      label: t('X Axis'),\n      expanded: true,\n      controlSetRows: [\n        [xAxisLabel],\n        [bottomMargin],\n        [xTicksLayout],\n        [xAxisFormat],\n        [xAxisShowMinmax, null],\n      ],\n    },\n    {\n      label: t('Y Axis Left'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'line_charts',\n            config: {\n              type: 'SelectAsyncControl',\n              multi: true,\n              label: t('Left Axis chart(s)'),\n              validators: [validateNonEmpty],\n              default: [],\n              description: t('Choose one or more charts for left axis'),\n              dataEndpoint:\n                '/sliceasync/api/read?_flt_0_viz_type=line&_flt_7_viz_type=line_multi',\n              placeholder: t('Select charts'),\n              onAsyncErrorMessage: t('Error while fetching charts'),\n              mutator: (data?: Data) => {\n                if (!data || !data.result) {\n                  return [];\n                }\n                return data.result.map(o => ({\n                  value: o.id,\n                  label: o.slice_name,\n                }));\n              },\n            },\n          },\n        ],\n        ['y_axis_format'],\n        [yAxisShowMinmax],\n        [yAxisBounds],\n      ],\n    },\n    {\n      label: t('Y Axis Right'),\n      expanded: false,\n      controlSetRows: [\n        [\n          {\n            name: 'line_charts_2',\n            config: {\n              type: 'SelectAsyncControl',\n              multi: true,\n              label: t('Right Axis chart(s)'),\n              validators: [],\n              default: [],\n              description: t('Choose one or more charts for right axis'),\n              dataEndpoint:\n                '/sliceasync/api/read?_flt_0_viz_type=line&_flt_7_viz_type=line_multi',\n              placeholder: t('Select charts'),\n              onAsyncErrorMessage: t('Error while fetching charts'),\n              mutator: (data: Data) => {\n                if (!data || !data.result) {\n                  return [];\n                }\n                return data.result.map(o => ({\n                  value: o.id,\n                  label: o.slice_name,\n                }));\n              },\n            },\n          },\n        ],\n        [yAxis2Format],\n        [yAxis2ShowMinmax],\n        [yAxis2Bounds],\n      ],\n    },\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [['adhoc_filters']],\n    },\n    sections.annotations,\n  ],\n  controlOverrides: {\n    y_axis_format: {\n      label: t('Left Axis Format'),\n    },\n  },\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}