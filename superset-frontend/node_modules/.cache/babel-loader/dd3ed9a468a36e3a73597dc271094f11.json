{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport { AntdButton, AntdSelect } from 'src/components';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport FormLabel from 'src/components/Form/FormLabel';\nimport Icons from 'src/components/Icons';\nimport { infoTooltip, labelMarginBottom, CredentialInfoForm } from '../styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nvar CredentialInfoOptions;\n(function (CredentialInfoOptions) {\n  CredentialInfoOptions[CredentialInfoOptions[\"jsonUpload\"] = 0] = \"jsonUpload\";\n  CredentialInfoOptions[CredentialInfoOptions[\"copyPaste\"] = 1] = \"copyPaste\";\n})(CredentialInfoOptions || (CredentialInfoOptions = {}));\n// These are the columns that are going to be added to encrypted extra, they differ in name based\n// on the engine, however we want to use the same component for each of them. Make sure to add the\n// the engine specific name here.\nexport const encryptedCredentialsMap = {\n  gsheets: 'service_account_info',\n  bigquery: 'credentials_info' };\n\nconst castStringToBoolean = (optionValue) => optionValue === 'true';var _ref2 = process.env.NODE_ENV === \"production\" ? { name: \"s5xdrg\", styles: \"display:flex;align-items:center\" } : { name: \"13vndg3-EncryptedField\", styles: \"display:flex;align-items:center;label:EncryptedField;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\nexport const EncryptedField = (_ref) => {var _db$parameters, _db$parameters2, _db$parameters3;let { changeMethods, isEditMode, db, editNewDb } = _ref;\n  const [uploadOption, setUploadOption] = useState(CredentialInfoOptions.jsonUpload.valueOf());\n  const [fileToUpload, setFileToUpload] = useState(null);\n  const [isPublic, setIsPublic] = useState(true);\n  const showCredentialsInfo = (db == null ? void 0 : db.engine) === 'gsheets' ? !isEditMode && !isPublic : !isEditMode;\n  const isEncrypted = isEditMode && (db == null ? void 0 : db.masked_encrypted_extra) !== '{}';\n  const encryptedField = (db == null ? void 0 : db.engine) && encryptedCredentialsMap[db.engine];\n  const encryptedValue = typeof (db == null ? void 0 : (_db$parameters = db.parameters) == null ? void 0 : _db$parameters[encryptedField]) === 'object' ?\n  JSON.stringify(db == null ? void 0 : (_db$parameters2 = db.parameters) == null ? void 0 : _db$parameters2[encryptedField]) :\n  db == null ? void 0 : (_db$parameters3 = db.parameters) == null ? void 0 : _db$parameters3[encryptedField];\n  return ___EmotionJSX(CredentialInfoForm, null,\n  (db == null ? void 0 : db.engine) === 'gsheets' && ___EmotionJSX(\"div\", { className: \"catalog-type-select\" },\n  ___EmotionJSX(FormLabel, { css: (theme) => labelMarginBottom(theme), required: true },\n  t('Type of Google Sheets allowed')),\n\n  ___EmotionJSX(AntdSelect, { style: { width: '100%' }, defaultValue: isEncrypted ? 'false' : 'true', onChange: (value) => setIsPublic(castStringToBoolean(value)) },\n  ___EmotionJSX(AntdSelect.Option, { value: \"true\", key: 1 },\n  t('Publicly shared sheets only')),\n\n  ___EmotionJSX(AntdSelect.Option, { value: \"false\", key: 2 },\n  t('Public and privately shared sheets')))),\n\n\n\n  showCredentialsInfo && ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(FormLabel, { required: true },\n  t('How do you want to enter service account credentials?')),\n\n  ___EmotionJSX(AntdSelect, { defaultValue: uploadOption, style: { width: '100%' }, onChange: (option) => setUploadOption(option) },\n  ___EmotionJSX(AntdSelect.Option, { value: CredentialInfoOptions.jsonUpload },\n  t('Upload JSON file')),\n\n\n  ___EmotionJSX(AntdSelect.Option, { value: CredentialInfoOptions.copyPaste },\n  t('Copy and Paste JSON credentials')))),\n\n\n\n  uploadOption === CredentialInfoOptions.copyPaste ||\n  isEditMode ||\n  editNewDb ? ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(FormLabel, { required: true }, t('Service Account')),\n  ___EmotionJSX(\"textarea\", { className: \"input-form\", name: encryptedField, value: encryptedValue, onChange: changeMethods.onParametersChange, placeholder: t('Paste content of service credentials JSON file here') }),\n  ___EmotionJSX(\"span\", { className: \"label-paste\" },\n  t('Copy and paste the entire service account .json file here'))) :\n\n  showCredentialsInfo && ___EmotionJSX(\"div\", { className: \"input-container\", css: (theme) => infoTooltip(theme) },\n  ___EmotionJSX(\"div\", { css: _ref2 },\n  ___EmotionJSX(FormLabel, { required: true }, t('Upload Credentials')),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Use the JSON file you automatically downloaded when creating your service account.'), viewBox: \"0 0 24 24\" })),\n\n\n  !fileToUpload && ___EmotionJSX(AntdButton, { className: \"input-upload-btn\", onClick: () => {var _document, _document$getElementB;return (_document = document) == null ? void 0 : (_document$getElementB = _document.getElementById('selectedFile')) == null ? void 0 : _document$getElementB.click();} },\n  t('Choose File')),\n\n  fileToUpload && ___EmotionJSX(\"div\", { className: \"input-upload-current\" },\n  fileToUpload,\n  ___EmotionJSX(Icons.DeleteFilled, { iconSize: \"m\", onClick: () => {\n      setFileToUpload(null);\n      changeMethods.onParametersChange({\n        target: {\n          name: encryptedField,\n          value: '' } });\n\n\n    } })),\n\n\n  ___EmotionJSX(\"input\", { id: \"selectedFile\", accept: \".json\", className: \"input-upload\", type: \"file\", onChange: async (event) => {var _file, _file2;\n      let file;\n      if (event.target.files) {\n        file = event.target.files[0];\n      }\n      setFileToUpload((_file = file) == null ? void 0 : _file.name);\n      changeMethods.onParametersChange({\n        target: {\n          type: null,\n          name: encryptedField,\n          value: await ((_file2 = file) == null ? void 0 : _file2.text()),\n          checked: false } });\n\n\n      document.getElementById('selectedFile').value = null;\n    } })));\n\n\n};__signature__(EncryptedField, \"useState{[uploadOption, setUploadOption](CredentialInfoOptions.jsonUpload.valueOf())}\\nuseState{[fileToUpload, setFileToUpload](null)}\\nuseState{[isPublic, setIsPublic](true)}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CredentialInfoOptions, \"CredentialInfoOptions\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/databases/DatabaseModal/DatabaseConnectionForm/EncryptedField.tsx\");reactHotLoader.register(encryptedCredentialsMap, \"encryptedCredentialsMap\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/databases/DatabaseModal/DatabaseConnectionForm/EncryptedField.tsx\");reactHotLoader.register(castStringToBoolean, \"castStringToBoolean\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/databases/DatabaseModal/DatabaseConnectionForm/EncryptedField.tsx\");reactHotLoader.register(EncryptedField, \"EncryptedField\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/databases/DatabaseModal/DatabaseConnectionForm/EncryptedField.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useState","t","AntdButton","AntdSelect","InfoTooltip","FormLabel","Icons","infoTooltip","labelMarginBottom","CredentialInfoForm","CredentialInfoOptions","encryptedCredentialsMap","gsheets","bigquery","castStringToBoolean","optionValue","EncryptedField","changeMethods","isEditMode","db","editNewDb","uploadOption","setUploadOption","jsonUpload","valueOf","fileToUpload","setFileToUpload","isPublic","setIsPublic","showCredentialsInfo","engine","isEncrypted","masked_encrypted_extra","encryptedField","encryptedValue","parameters","JSON","stringify","theme","width","value","option","copyPaste","onParametersChange","document","getElementById","click","target","name","event","file","files","type","text","checked"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/databases/DatabaseModal/DatabaseConnectionForm/EncryptedField.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { SupersetTheme, t } from '@superset-ui/core';\nimport { AntdButton, AntdSelect } from 'src/components';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport FormLabel from 'src/components/Form/FormLabel';\nimport Icons from 'src/components/Icons';\nimport { FieldPropTypes } from '.';\nimport { infoTooltip, labelMarginBottom, CredentialInfoForm } from '../styles';\n\nenum CredentialInfoOptions {\n  jsonUpload,\n  copyPaste,\n}\n\n// These are the columns that are going to be added to encrypted extra, they differ in name based\n// on the engine, however we want to use the same component for each of them. Make sure to add the\n// the engine specific name here.\nexport const encryptedCredentialsMap = {\n  gsheets: 'service_account_info',\n  bigquery: 'credentials_info',\n};\n\nconst castStringToBoolean = (optionValue: string) => optionValue === 'true';\n\nexport const EncryptedField = ({\n  changeMethods,\n  isEditMode,\n  db,\n  editNewDb,\n}: FieldPropTypes) => {\n  const [uploadOption, setUploadOption] = useState<number>(\n    CredentialInfoOptions.jsonUpload.valueOf(),\n  );\n  const [fileToUpload, setFileToUpload] = useState<string | null | undefined>(\n    null,\n  );\n  const [isPublic, setIsPublic] = useState<boolean>(true);\n  const showCredentialsInfo =\n    db?.engine === 'gsheets' ? !isEditMode && !isPublic : !isEditMode;\n  const isEncrypted = isEditMode && db?.masked_encrypted_extra !== '{}';\n  const encryptedField = db?.engine && encryptedCredentialsMap[db.engine];\n  const encryptedValue =\n    typeof db?.parameters?.[encryptedField] === 'object'\n      ? JSON.stringify(db?.parameters?.[encryptedField])\n      : db?.parameters?.[encryptedField];\n  return (\n    <CredentialInfoForm>\n      {db?.engine === 'gsheets' && (\n        <div className=\"catalog-type-select\">\n          <FormLabel\n            css={(theme: SupersetTheme) => labelMarginBottom(theme)}\n            required\n          >\n            {t('Type of Google Sheets allowed')}\n          </FormLabel>\n          <AntdSelect\n            style={{ width: '100%' }}\n            defaultValue={isEncrypted ? 'false' : 'true'}\n            onChange={(value: string) =>\n              setIsPublic(castStringToBoolean(value))\n            }\n          >\n            <AntdSelect.Option value=\"true\" key={1}>\n              {t('Publicly shared sheets only')}\n            </AntdSelect.Option>\n            <AntdSelect.Option value=\"false\" key={2}>\n              {t('Public and privately shared sheets')}\n            </AntdSelect.Option>\n          </AntdSelect>\n        </div>\n      )}\n      {showCredentialsInfo && (\n        <>\n          <FormLabel required>\n            {t('How do you want to enter service account credentials?')}\n          </FormLabel>\n          <AntdSelect\n            defaultValue={uploadOption}\n            style={{ width: '100%' }}\n            onChange={option => setUploadOption(option)}\n          >\n            <AntdSelect.Option value={CredentialInfoOptions.jsonUpload}>\n              {t('Upload JSON file')}\n            </AntdSelect.Option>\n\n            <AntdSelect.Option value={CredentialInfoOptions.copyPaste}>\n              {t('Copy and Paste JSON credentials')}\n            </AntdSelect.Option>\n          </AntdSelect>\n        </>\n      )}\n      {uploadOption === CredentialInfoOptions.copyPaste ||\n      isEditMode ||\n      editNewDb ? (\n        <div className=\"input-container\">\n          <FormLabel required>{t('Service Account')}</FormLabel>\n          <textarea\n            className=\"input-form\"\n            name={encryptedField}\n            value={encryptedValue}\n            onChange={changeMethods.onParametersChange}\n            placeholder={t(\n              'Paste content of service credentials JSON file here',\n            )}\n          />\n          <span className=\"label-paste\">\n            {t('Copy and paste the entire service account .json file here')}\n          </span>\n        </div>\n      ) : (\n        showCredentialsInfo && (\n          <div\n            className=\"input-container\"\n            css={(theme: SupersetTheme) => infoTooltip(theme)}\n          >\n            <div css={{ display: 'flex', alignItems: 'center' }}>\n              <FormLabel required>{t('Upload Credentials')}</FormLabel>\n              <InfoTooltip\n                tooltip={t(\n                  'Use the JSON file you automatically downloaded when creating your service account.',\n                )}\n                viewBox=\"0 0 24 24\"\n              />\n            </div>\n\n            {!fileToUpload && (\n              <AntdButton\n                className=\"input-upload-btn\"\n                onClick={() =>\n                  document?.getElementById('selectedFile')?.click()\n                }\n              >\n                {t('Choose File')}\n              </AntdButton>\n            )}\n            {fileToUpload && (\n              <div className=\"input-upload-current\">\n                {fileToUpload}\n                <Icons.DeleteFilled\n                  iconSize=\"m\"\n                  onClick={() => {\n                    setFileToUpload(null);\n                    changeMethods.onParametersChange({\n                      target: {\n                        name: encryptedField,\n                        value: '',\n                      },\n                    });\n                  }}\n                />\n              </div>\n            )}\n\n            <input\n              id=\"selectedFile\"\n              accept=\".json\"\n              className=\"input-upload\"\n              type=\"file\"\n              onChange={async event => {\n                let file;\n                if (event.target.files) {\n                  file = event.target.files[0];\n                }\n                setFileToUpload(file?.name);\n                changeMethods.onParametersChange({\n                  target: {\n                    type: null,\n                    name: encryptedField,\n                    value: await file?.text(),\n                    checked: false,\n                  },\n                });\n                (\n                  document.getElementById('selectedFile') as HTMLInputElement\n                ).value = null as any;\n              }}\n            />\n          </div>\n        )\n      )}\n    </CredentialInfoForm>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}