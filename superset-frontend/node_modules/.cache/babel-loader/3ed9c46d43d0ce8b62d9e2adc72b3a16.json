{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-console: 0 */\nimport Translator from './Translator';\nlet singleton;\nlet isConfigured = false;\nfunction configure(config) {\n  singleton = new Translator(config);\n  isConfigured = true;\n  return singleton;\n}\nfunction getInstance() {\n  if (!isConfigured) {\n    console.warn('You should call configure(...) before calling other methods');\n  }\n  if (typeof singleton === 'undefined') {\n    singleton = new Translator();\n  }\n  return singleton;\n}\nfunction resetTranslation() {\n  if (isConfigured) {\n    isConfigured = false;\n    singleton = undefined;\n  }\n}\nfunction addTranslation(key, translations) {\n  return getInstance().addTranslation(key, translations);\n}\nfunction addTranslations(translations) {\n  return getInstance().addTranslations(translations);\n}\nfunction addLocaleData(data) {\n  return getInstance().addLocaleData(data);\n}\nfunction t(input) {for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {args[_key - 1] = arguments[_key];}\n  return getInstance().translate(input, ...args);\n}\nfunction tn(key) {for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {args[_key2 - 1] = arguments[_key2];}\n  return getInstance().translateWithNumber(key, ...args);\n}\nexport { configure, addTranslation, addTranslations, addLocaleData, t, tn, resetTranslation };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(singleton, \"singleton\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");reactHotLoader.register(isConfigured, \"isConfigured\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");reactHotLoader.register(configure, \"configure\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");reactHotLoader.register(getInstance, \"getInstance\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");reactHotLoader.register(resetTranslation, \"resetTranslation\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");reactHotLoader.register(addTranslation, \"addTranslation\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");reactHotLoader.register(addTranslations, \"addTranslations\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");reactHotLoader.register(addLocaleData, \"addLocaleData\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");reactHotLoader.register(t, \"t\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");reactHotLoader.register(tn, \"tn\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA;AAEA,OAAOA,UAAP,MAAuB,cAAvB;AAGA,IAAIC,SAAJ;AACA,IAAIC,YAAY,GAAG,KAAnB;AAEA,SAASC,SAAT,CAAmBC,MAAnB,EAA4C;EAC1CH,SAAS,GAAG,IAAID,UAAJ,CAAeI,MAAf,CAAZ;EACAF,YAAY,GAAG,IAAf;EAEA,OAAOD,SAAP;AACD;AAED,SAASI,WAAT,GAAoB;EAClB,IAAI,CAACH,YAAL,EAAmB;IACjBI,OAAO,CAACC,IAAR,CAAa,6DAAb;EACD;EAED,IAAI,OAAON,SAAP,KAAqB,WAAzB,EAAsC;IACpCA,SAAS,GAAG,IAAID,UAAJ,EAAZ;EACD;EAED,OAAOC,SAAP;AACD;AAED,SAASO,gBAAT,GAAyB;EACvB,IAAIN,YAAJ,EAAkB;IAChBA,YAAY,GAAG,KAAf;IACAD,SAAS,GAAGQ,SAAZ;EACD;AACF;AAED,SAASC,cAAT,CAAwBC,GAAxB,EAAqCC,YAArC,EAA2D;EACzD,OAAOP,WAAW,GAAGK,cAAd,CAA6BC,GAA7B,EAAkCC,YAAlC,CAAP;AACD;AAED,SAASC,eAAT,CAAyBD,YAAzB,EAAmD;EACjD,OAAOP,WAAW,GAAGQ,eAAd,CAA8BD,YAA9B,CAAP;AACD;AAED,SAASE,aAAT,CAAuBC,IAAvB,EAAuC;EACrC,OAAOV,WAAW,GAAGS,aAAd,CAA4BC,IAA5B,CAAP;AACD;AAED,SAASC,CAAT,CAAWC,KAAX,EAA4C,mCAAfC,IAAe,uEAAfA,IAAe;EAC1C,OAAOb,WAAW,GAAGc,SAAd,CAAwBF,KAAxB,EAA+B,GAAGC,IAAlC,CAAP;AACD;AAED,SAASE,EAAT,CAAYT,GAAZ,EAA2C,oCAAfO,IAAe,6EAAfA,IAAe;EACzC,OAAOb,WAAW,GAAGgB,mBAAd,CAAkCV,GAAlC,EAAuC,GAAGO,IAA1C,CAAP;AACD;AAED,SACEf,SADF,EAEEO,cAFF,EAGEG,eAHF,EAIEC,aAJF,EAKEE,CALF,EAMEI,EANF,EAOEZ,gBAPF,G,iLAjDIP,S,4KACAC,Y,+KAEKC,S,4KAOAE,W,8KAYAG,gB,mLAOAE,c,iLAIAG,e,kLAIAC,a,gLAIAE,C,oKAIAI,E","names":["Translator","singleton","isConfigured","configure","config","getInstance","console","warn","resetTranslation","undefined","addTranslation","key","translations","addTranslations","addLocaleData","data","t","input","args","translate","tn","translateWithNumber"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/translation/TranslatorSingleton.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint no-console: 0 */\n\nimport Translator from './Translator';\nimport { TranslatorConfig, Translations, LocaleData } from './types';\n\nlet singleton: Translator | undefined;\nlet isConfigured = false;\n\nfunction configure(config?: TranslatorConfig) {\n  singleton = new Translator(config);\n  isConfigured = true;\n\n  return singleton;\n}\n\nfunction getInstance() {\n  if (!isConfigured) {\n    console.warn('You should call configure(...) before calling other methods');\n  }\n\n  if (typeof singleton === 'undefined') {\n    singleton = new Translator();\n  }\n\n  return singleton;\n}\n\nfunction resetTranslation() {\n  if (isConfigured) {\n    isConfigured = false;\n    singleton = undefined;\n  }\n}\n\nfunction addTranslation(key: string, translations: string[]) {\n  return getInstance().addTranslation(key, translations);\n}\n\nfunction addTranslations(translations: Translations) {\n  return getInstance().addTranslations(translations);\n}\n\nfunction addLocaleData(data: LocaleData) {\n  return getInstance().addLocaleData(data);\n}\n\nfunction t(input: string, ...args: unknown[]) {\n  return getInstance().translate(input, ...args);\n}\n\nfunction tn(key: string, ...args: unknown[]) {\n  return getInstance().translateWithNumber(key, ...args);\n}\n\nexport {\n  configure,\n  addTranslation,\n  addTranslations,\n  addLocaleData,\n  t,\n  tn,\n  resetTranslation,\n};\n"]},"metadata":{},"sourceType":"module"}