{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { t, isFeatureEnabled, FeatureFlag, css } from '@superset-ui/core';\nimport ImageLoader from 'src/components/ListViewCard/ImageLoader';\nimport { usePluginContext } from 'src/components/DynamicPlugins';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { GenericLink } from 'src/components/GenericLink/GenericLink';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst FALLBACK_THUMBNAIL_URL = '/static/assets/images/chart-card-fallback.svg';\nconst TruncatedTextWithTooltip = (_ref) => {let { children, ...props } = _ref;\n  const [isTruncated, setIsTruncated] = useState(false);\n  const ref = useRef(null);\n  useEffect(() => {\n    setIsTruncated(ref.current ? ref.current.scrollWidth > ref.current.clientWidth : false);\n  }, [children]);\n  const div = ___EmotionJSX(\"div\", _extends({}, props, { ref: ref, css: css`\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        display: block;\n      ` }),\n  children);\n\n  return isTruncated ? ___EmotionJSX(Tooltip, { title: children }, div) : div;\n};__signature__(TruncatedTextWithTooltip, \"useState{[isTruncated, setIsTruncated](false)}\\nuseRef{ref}\\nuseEffect{}\");\nconst MetadataItem = (_ref2) => {let { label, value } = _ref2;return ___EmotionJSX(\"div\", { css: (theme) => css`\n      font-size: ${theme.typography.sizes.s}px;\n      display: flex;\n      justify-content: space-between;\n\n      &:not(:last-child) {\n        margin-bottom: ${theme.gridUnit}px;\n      }\n    ` },\n  ___EmotionJSX(\"span\", { css: (theme) => css`\n        margin-right: ${theme.gridUnit * 4}px;\n        color: ${theme.colors.grayscale.base};\n      ` },\n  label),\n\n  ___EmotionJSX(\"span\", { css: css`\n        min-width: 0;\n      ` },\n  ___EmotionJSX(TruncatedTextWithTooltip, null, value)));};\n\n\nconst SliceAddedBadgePlaceholder = (_ref3) => {let { showThumbnails, placeholderRef } = _ref3;return ___EmotionJSX(\"div\", { ref: placeholderRef, css: (theme) => css`\n      /* Display styles */\n      border: 1px solid ${theme.colors.primary.dark1};\n      border-radius: ${theme.gridUnit}px;\n      color: ${theme.colors.primary.dark1};\n      font-size: ${theme.typography.sizes.xs}px;\n      text-transform: uppercase;\n      letter-spacing: 0.02em;\n      padding: ${theme.gridUnit / 2}px ${theme.gridUnit * 2}px;\n      margin-left: ${theme.gridUnit * 4}px;\n      pointer-events: none;\n\n      /* Position styles */\n      visibility: hidden;\n      position: ${showThumbnails ? 'absolute' : 'unset'};\n      top: ${showThumbnails ? '72px' : 'unset'};\n      left: ${showThumbnails ? '84px' : 'unset'};\n    ` },\n  t('Added'));};\n\nconst SliceAddedBadge = (_ref4) => {let { placeholder } = _ref4;return ___EmotionJSX(\"div\", { css: (theme) => css`\n      /* Display styles */\n      border: 1px solid ${theme.colors.primary.dark1};\n      border-radius: ${theme.gridUnit}px;\n      color: ${theme.colors.primary.dark1};\n      font-size: ${theme.typography.sizes.xs}px;\n      text-transform: uppercase;\n      letter-spacing: 0.02em;\n      padding: ${theme.gridUnit / 2}px ${theme.gridUnit * 2}px;\n      margin-left: ${theme.gridUnit * 4}px;\n      pointer-events: none;\n\n      /* Position styles */\n      display: ${placeholder ? 'unset' : 'none'};\n      position: absolute;\n      top: ${placeholder ? `${placeholder.offsetTop}px` : 'unset'};\n      left: ${placeholder ? `${placeholder.offsetLeft - 2}px` : 'unset'};\n    ` },\n  t('Added'));};\n\nconst AddSliceCard = (_ref5) => {let { datasourceUrl, datasourceName = '-', innerRef, isSelected = false, lastModified, sliceName, style = {}, thumbnailUrl, visType } = _ref5;\n  const showThumbnails = isFeatureEnabled(FeatureFlag.THUMBNAILS);\n  const [sliceAddedBadge, setSliceAddedBadge] = useState();\n  const { mountedPluginMetadata } = usePluginContext();\n  const vizName = useMemo(() => mountedPluginMetadata[visType].name, [mountedPluginMetadata, visType]);\n  return ___EmotionJSX(\"div\", { ref: innerRef, style: style },\n  ___EmotionJSX(\"div\", { \"data-test\": \"chart-card\", css: (theme) => css`\n          border: 1px solid ${theme.colors.grayscale.light2};\n          border-radius: ${theme.gridUnit}px;\n          background: ${theme.colors.grayscale.light5};\n          padding: ${theme.gridUnit * 4}px;\n          margin: 0 ${theme.gridUnit * 3}px\n            ${theme.gridUnit * 3}px\n            ${theme.gridUnit * 3}px;\n          position: relative;\n          cursor: ${isSelected ? 'not-allowed' : 'move'};\n          white-space: nowrap;\n          overflow: hidden;\n          line-height: 1.3;\n          color: ${theme.colors.grayscale.dark1}\n\n          &:hover {\n            background: ${theme.colors.grayscale.light4};\n          }\n\n          opacity: ${isSelected ? 0.4 : 'unset'};\n        ` },\n  ___EmotionJSX(\"div\", { css: css`\n            display: flex;\n          ` },\n  showThumbnails ? ___EmotionJSX(\"div\", { \"data-test\": \"thumbnail\", css: css`\n                width: 146px;\n                height: 82px;\n                flex-shrink: 0;\n                margin-right: 16px;\n              ` },\n  ___EmotionJSX(ImageLoader, { src: thumbnailUrl || '', fallback: FALLBACK_THUMBNAIL_URL, position: \"top\" }),\n  isSelected && showThumbnails ? ___EmotionJSX(SliceAddedBadgePlaceholder, { placeholderRef: setSliceAddedBadge, showThumbnails: showThumbnails }) : null) :\n  null,\n  ___EmotionJSX(\"div\", { css: css`\n              flex-grow: 1;\n              min-width: 0;\n            ` },\n  ___EmotionJSX(\"div\", { \"data-test\": \"card-title\", css: (theme) => css`\n                margin-bottom: ${theme.gridUnit * 2}px;\n                font-weight: ${theme.typography.weights.bold};\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n              ` },\n  ___EmotionJSX(TruncatedTextWithTooltip, null, sliceName),\n  isSelected && !showThumbnails ? ___EmotionJSX(SliceAddedBadgePlaceholder, { placeholderRef: setSliceAddedBadge }) : null),\n\n  ___EmotionJSX(\"div\", { css: css`\n                display: flex;\n                flex-direction: column;\n              ` },\n  ___EmotionJSX(MetadataItem, { label: t('Viz type'), value: vizName }),\n  ___EmotionJSX(MetadataItem, { label: t('Dataset'), value: datasourceUrl ? ___EmotionJSX(GenericLink, { to: datasourceUrl },\n    datasourceName) :\n    datasourceName }),\n  ___EmotionJSX(MetadataItem, { label: t('Modified'), value: lastModified }))))),\n\n\n\n\n  ___EmotionJSX(SliceAddedBadge, { placeholder: sliceAddedBadge }));\n\n};__signature__(AddSliceCard, \"useState{[sliceAddedBadge, setSliceAddedBadge]}\\nusePluginContext{{ mountedPluginMetadata }}\\nuseMemo{vizName}\", () => [usePluginContext]);const _default =\nAddSliceCard;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(FALLBACK_THUMBNAIL_URL, \"FALLBACK_THUMBNAIL_URL\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/AddSliceCard/AddSliceCard.tsx\");reactHotLoader.register(TruncatedTextWithTooltip, \"TruncatedTextWithTooltip\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/AddSliceCard/AddSliceCard.tsx\");reactHotLoader.register(MetadataItem, \"MetadataItem\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/AddSliceCard/AddSliceCard.tsx\");reactHotLoader.register(SliceAddedBadgePlaceholder, \"SliceAddedBadgePlaceholder\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/AddSliceCard/AddSliceCard.tsx\");reactHotLoader.register(SliceAddedBadge, \"SliceAddedBadge\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/AddSliceCard/AddSliceCard.tsx\");reactHotLoader.register(AddSliceCard, \"AddSliceCard\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/AddSliceCard/AddSliceCard.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/AddSliceCard/AddSliceCard.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useEffect","useMemo","useRef","useState","t","isFeatureEnabled","FeatureFlag","css","ImageLoader","usePluginContext","Tooltip","GenericLink","FALLBACK_THUMBNAIL_URL","TruncatedTextWithTooltip","children","props","isTruncated","setIsTruncated","ref","current","scrollWidth","clientWidth","div","MetadataItem","label","value","theme","typography","sizes","s","gridUnit","colors","grayscale","base","SliceAddedBadgePlaceholder","showThumbnails","placeholderRef","primary","dark1","xs","SliceAddedBadge","placeholder","offsetTop","offsetLeft","AddSliceCard","datasourceUrl","datasourceName","innerRef","isSelected","lastModified","sliceName","style","thumbnailUrl","visType","THUMBNAILS","sliceAddedBadge","setSliceAddedBadge","mountedPluginMetadata","vizName","name","light2","light5","light4","weights","bold"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/AddSliceCard/AddSliceCard.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n  CSSProperties,\n  ReactNode,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { t, isFeatureEnabled, FeatureFlag, css } from '@superset-ui/core';\nimport ImageLoader from 'src/components/ListViewCard/ImageLoader';\nimport { usePluginContext } from 'src/components/DynamicPlugins';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { GenericLink } from 'src/components/GenericLink/GenericLink';\nimport { Theme } from '@emotion/react';\n\nconst FALLBACK_THUMBNAIL_URL = '/static/assets/images/chart-card-fallback.svg';\n\nconst TruncatedTextWithTooltip: React.FC = ({ children, ...props }) => {\n  const [isTruncated, setIsTruncated] = useState(false);\n  const ref = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    setIsTruncated(\n      ref.current ? ref.current.scrollWidth > ref.current.clientWidth : false,\n    );\n  }, [children]);\n\n  const div = (\n    <div\n      {...props}\n      ref={ref}\n      css={css`\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        display: block;\n      `}\n    >\n      {children}\n    </div>\n  );\n\n  return isTruncated ? <Tooltip title={children}>{div}</Tooltip> : div;\n};\n\nconst MetadataItem: React.FC<{\n  label: ReactNode;\n  value: ReactNode;\n}> = ({ label, value }) => (\n  <div\n    css={(theme: Theme) => css`\n      font-size: ${theme.typography.sizes.s}px;\n      display: flex;\n      justify-content: space-between;\n\n      &:not(:last-child) {\n        margin-bottom: ${theme.gridUnit}px;\n      }\n    `}\n  >\n    <span\n      css={(theme: Theme) => css`\n        margin-right: ${theme.gridUnit * 4}px;\n        color: ${theme.colors.grayscale.base};\n      `}\n    >\n      {label}\n    </span>\n    <span\n      css={css`\n        min-width: 0;\n      `}\n    >\n      <TruncatedTextWithTooltip>{value}</TruncatedTextWithTooltip>\n    </span>\n  </div>\n);\n\nconst SliceAddedBadgePlaceholder: React.FC<{\n  showThumbnails?: boolean;\n  placeholderRef: (element: HTMLDivElement) => void;\n}> = ({ showThumbnails, placeholderRef }) => (\n  <div\n    ref={placeholderRef}\n    css={(theme: Theme) => css`\n      /* Display styles */\n      border: 1px solid ${theme.colors.primary.dark1};\n      border-radius: ${theme.gridUnit}px;\n      color: ${theme.colors.primary.dark1};\n      font-size: ${theme.typography.sizes.xs}px;\n      text-transform: uppercase;\n      letter-spacing: 0.02em;\n      padding: ${theme.gridUnit / 2}px ${theme.gridUnit * 2}px;\n      margin-left: ${theme.gridUnit * 4}px;\n      pointer-events: none;\n\n      /* Position styles */\n      visibility: hidden;\n      position: ${showThumbnails ? 'absolute' : 'unset'};\n      top: ${showThumbnails ? '72px' : 'unset'};\n      left: ${showThumbnails ? '84px' : 'unset'};\n    `}\n  >\n    {t('Added')}\n  </div>\n);\n\nconst SliceAddedBadge: React.FC<{ placeholder?: HTMLDivElement }> = ({\n  placeholder,\n}) => (\n  <div\n    css={(theme: Theme) => css`\n      /* Display styles */\n      border: 1px solid ${theme.colors.primary.dark1};\n      border-radius: ${theme.gridUnit}px;\n      color: ${theme.colors.primary.dark1};\n      font-size: ${theme.typography.sizes.xs}px;\n      text-transform: uppercase;\n      letter-spacing: 0.02em;\n      padding: ${theme.gridUnit / 2}px ${theme.gridUnit * 2}px;\n      margin-left: ${theme.gridUnit * 4}px;\n      pointer-events: none;\n\n      /* Position styles */\n      display: ${placeholder ? 'unset' : 'none'};\n      position: absolute;\n      top: ${placeholder ? `${placeholder.offsetTop}px` : 'unset'};\n      left: ${placeholder ? `${placeholder.offsetLeft - 2}px` : 'unset'};\n    `}\n  >\n    {t('Added')}\n  </div>\n);\n\nconst AddSliceCard: React.FC<{\n  datasourceUrl?: string;\n  datasourceName?: string;\n  innerRef?: React.RefObject<HTMLDivElement>;\n  isSelected?: boolean;\n  lastModified?: string;\n  sliceName: string;\n  style?: CSSProperties;\n  thumbnailUrl?: string;\n  visType: string;\n}> = ({\n  datasourceUrl,\n  datasourceName = '-',\n  innerRef,\n  isSelected = false,\n  lastModified,\n  sliceName,\n  style = {},\n  thumbnailUrl,\n  visType,\n}) => {\n  const showThumbnails = isFeatureEnabled(FeatureFlag.THUMBNAILS);\n  const [sliceAddedBadge, setSliceAddedBadge] = useState<HTMLDivElement>();\n  const { mountedPluginMetadata } = usePluginContext();\n  const vizName = useMemo(\n    () => mountedPluginMetadata[visType].name,\n    [mountedPluginMetadata, visType],\n  );\n\n  return (\n    <div ref={innerRef} style={style}>\n      <div\n        data-test=\"chart-card\"\n        css={(theme: Theme) => css`\n          border: 1px solid ${theme.colors.grayscale.light2};\n          border-radius: ${theme.gridUnit}px;\n          background: ${theme.colors.grayscale.light5};\n          padding: ${theme.gridUnit * 4}px;\n          margin: 0 ${theme.gridUnit * 3}px\n            ${theme.gridUnit * 3}px\n            ${theme.gridUnit * 3}px;\n          position: relative;\n          cursor: ${isSelected ? 'not-allowed' : 'move'};\n          white-space: nowrap;\n          overflow: hidden;\n          line-height: 1.3;\n          color: ${theme.colors.grayscale.dark1}\n\n          &:hover {\n            background: ${theme.colors.grayscale.light4};\n          }\n\n          opacity: ${isSelected ? 0.4 : 'unset'};\n        `}\n      >\n        <div\n          css={css`\n            display: flex;\n          `}\n        >\n          {showThumbnails ? (\n            <div\n              data-test=\"thumbnail\"\n              css={css`\n                width: 146px;\n                height: 82px;\n                flex-shrink: 0;\n                margin-right: 16px;\n              `}\n            >\n              <ImageLoader\n                src={thumbnailUrl || ''}\n                fallback={FALLBACK_THUMBNAIL_URL}\n                position=\"top\"\n              />\n              {isSelected && showThumbnails ? (\n                <SliceAddedBadgePlaceholder\n                  placeholderRef={setSliceAddedBadge}\n                  showThumbnails={showThumbnails}\n                />\n              ) : null}\n            </div>\n          ) : null}\n          <div\n            css={css`\n              flex-grow: 1;\n              min-width: 0;\n            `}\n          >\n            <div\n              data-test=\"card-title\"\n              css={(theme: Theme) => css`\n                margin-bottom: ${theme.gridUnit * 2}px;\n                font-weight: ${theme.typography.weights.bold};\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n              `}\n            >\n              <TruncatedTextWithTooltip>{sliceName}</TruncatedTextWithTooltip>\n              {isSelected && !showThumbnails ? (\n                <SliceAddedBadgePlaceholder\n                  placeholderRef={setSliceAddedBadge}\n                />\n              ) : null}\n            </div>\n            <div\n              css={css`\n                display: flex;\n                flex-direction: column;\n              `}\n            >\n              <MetadataItem label={t('Viz type')} value={vizName} />\n              <MetadataItem\n                label={t('Dataset')}\n                value={\n                  datasourceUrl ? (\n                    <GenericLink to={datasourceUrl}>\n                      {datasourceName}\n                    </GenericLink>\n                  ) : (\n                    datasourceName\n                  )\n                }\n              />\n              <MetadataItem label={t('Modified')} value={lastModified} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <SliceAddedBadge placeholder={sliceAddedBadge} />\n    </div>\n  );\n};\n\nexport default AddSliceCard;\n"]},"metadata":{},"sourceType":"module"}