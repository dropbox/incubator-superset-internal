{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport AdhocFilterEditPopover from 'src/explore/components/controls/FilterControl/AdhocFilterEditPopover';\nimport { ExplorePopoverContent } from 'src/explore/components/ExploreContentPopover';\nimport ControlPopover from '../../ControlPopover/ControlPopover';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nclass AdhocFilterPopoverTrigger extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onPopoverResize = this.onPopoverResize.bind(this);\n    this.closePopover = this.closePopover.bind(this);\n    this.togglePopover = this.togglePopover.bind(this);\n    this.state = {\n      popoverVisible: false };\n\n  }\n  onPopoverResize() {\n    this.forceUpdate();\n  }\n  closePopover() {\n    this.togglePopover(false);\n  }\n  togglePopover(visible) {\n    this.setState({\n      popoverVisible: visible });\n\n  }\n  render() {\n    const { adhocFilter, isControlledComponent } = this.props;\n    const { visible, togglePopover, closePopover } = isControlledComponent ?\n    {\n      visible: this.props.visible,\n      togglePopover: this.props.togglePopover,\n      closePopover: this.props.closePopover } :\n\n    {\n      visible: this.state.popoverVisible,\n      togglePopover: this.togglePopover,\n      closePopover: this.closePopover };\n\n    const overlayContent = ___EmotionJSX(ExplorePopoverContent, null,\n    ___EmotionJSX(AdhocFilterEditPopover, { adhocFilter: adhocFilter, options: this.props.options, datasource: this.props.datasource, partitionColumn: this.props.partitionColumn, onResize: this.onPopoverResize, onClose: closePopover, sections: this.props.sections, operators: this.props.operators, onChange: this.props.onFilterEdit, requireSave: this.props.requireSave }));\n\n    return ___EmotionJSX(ControlPopover, { trigger: \"click\", content: overlayContent, defaultVisible: visible, visible: visible, onVisibleChange: togglePopover, destroyTooltipOnHide: true },\n    this.props.children);\n\n  }}\n\nexport default AdhocFilterPopoverTrigger;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,sBAAP,MAAmC,sEAAnC;AAEA,SAASC,qBAAT,QAAsC,8CAAtC;AAEA,OAAOC,cAAP,MAA2B,qCAA3B,C;AAqBA,MAAMC,yBAAN,SAAwCJ,KAAK,CAACK,aAA9C,CAGC;EACCC,YAAYC,KAAZ,EAAiD;IAC/C,MAAMA,KAAN;IACA,KAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;IACA,KAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;IACA,KAAKE,aAAL,GAAqB,KAAKA,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CAArB;IACA,KAAKG,KAAL,GAAa;MACXC,cAAc,EAAE,KADL,EAAb;;EAGD;EAEDL,eAAe;IACb,KAAKM,WAAL;EACD;EAEDJ,YAAY;IACV,KAAKC,aAAL,CAAmB,KAAnB;EACD;EAEDA,aAAa,CAACI,OAAD,EAAiB;IAC5B,KAAKC,QAAL,CAAc;MACZH,cAAc,EAAEE,OADJ,EAAd;;EAGD;EAEDE,MAAM;IACJ,MAAM,EAAEC,WAAF,EAAeC,qBAAf,KAAyC,KAAKZ,KAApD;IAEA,MAAM,EAAEQ,OAAF,EAAWJ,aAAX,EAA0BD,YAA1B,KAA2CS,qBAAqB;IAClE;MACEJ,OAAO,EAAE,KAAKR,KAAL,CAAWQ,OADtB;MAEEJ,aAAa,EAAE,KAAKJ,KAAL,CAAWI,aAF5B;MAGED,YAAY,EAAE,KAAKH,KAAL,CAAWG,YAH3B,EADkE;;IAMlE;MACEK,OAAO,EAAE,KAAKH,KAAL,CAAWC,cADtB;MAEEF,aAAa,EAAE,KAAKA,aAFtB;MAGED,YAAY,EAAE,KAAKA,YAHrB,EANJ;;IAWA,MAAMU,cAAc,GAClB,cAAC,qBAAD;IACE,cAAC,sBAAD,IACE,WAAW,EAAEF,WADf,EAEE,OAAO,EAAE,KAAKX,KAAL,CAAWc,OAFtB,EAGE,UAAU,EAAE,KAAKd,KAAL,CAAWe,UAHzB,EAIE,eAAe,EAAE,KAAKf,KAAL,CAAWgB,eAJ9B,EAKE,QAAQ,EAAE,KAAKf,eALjB,EAME,OAAO,EAAEE,YANX,EAOE,QAAQ,EAAE,KAAKH,KAAL,CAAWiB,QAPvB,EAQE,SAAS,EAAE,KAAKjB,KAAL,CAAWkB,SARxB,EASE,QAAQ,EAAE,KAAKlB,KAAL,CAAWmB,YATvB,EAUE,WAAW,EAAE,KAAKnB,KAAL,CAAWoB,WAV1B,GADF,CADF;;IAiBA,OACE,cAAC,cAAD,IACE,OAAO,EAAC,OADV,EAEE,OAAO,EAAEP,cAFX,EAGE,cAAc,EAAEL,OAHlB,EAIE,OAAO,EAAEA,OAJX,EAKE,eAAe,EAAEJ,aALnB,EAME,oBAAoB,MANtB;IAQG,KAAKJ,KAAL,CAAWqB,QARd,CADF;;EAYD,CApEF;;AAuED,eAAexB,yBAAf","names":["React","AdhocFilterEditPopover","ExplorePopoverContent","ControlPopover","AdhocFilterPopoverTrigger","PureComponent","constructor","props","onPopoverResize","bind","closePopover","togglePopover","state","popoverVisible","forceUpdate","visible","setState","render","adhocFilter","isControlledComponent","overlayContent","options","datasource","partitionColumn","sections","operators","onFilterEdit","requireSave","children"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilterPopoverTrigger/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { OptionSortType } from 'src/explore/types';\nimport AdhocFilterEditPopover from 'src/explore/components/controls/FilterControl/AdhocFilterEditPopover';\nimport AdhocFilter from 'src/explore/components/controls/FilterControl/AdhocFilter';\nimport { ExplorePopoverContent } from 'src/explore/components/ExploreContentPopover';\nimport { Operators } from 'src/explore/constants';\nimport ControlPopover from '../../ControlPopover/ControlPopover';\n\ninterface AdhocFilterPopoverTriggerProps {\n  sections?: string[];\n  operators?: Operators[];\n  adhocFilter: AdhocFilter;\n  options: OptionSortType[];\n  datasource: Record<string, any>;\n  onFilterEdit: (editedFilter: AdhocFilter) => void;\n  partitionColumn?: string;\n  isControlledComponent?: boolean;\n  visible?: boolean;\n  togglePopover?: (visible: boolean) => void;\n  closePopover?: () => void;\n  requireSave?: boolean;\n}\n\ninterface AdhocFilterPopoverTriggerState {\n  popoverVisible: boolean;\n}\n\nclass AdhocFilterPopoverTrigger extends React.PureComponent<\n  AdhocFilterPopoverTriggerProps,\n  AdhocFilterPopoverTriggerState\n> {\n  constructor(props: AdhocFilterPopoverTriggerProps) {\n    super(props);\n    this.onPopoverResize = this.onPopoverResize.bind(this);\n    this.closePopover = this.closePopover.bind(this);\n    this.togglePopover = this.togglePopover.bind(this);\n    this.state = {\n      popoverVisible: false,\n    };\n  }\n\n  onPopoverResize() {\n    this.forceUpdate();\n  }\n\n  closePopover() {\n    this.togglePopover(false);\n  }\n\n  togglePopover(visible: boolean) {\n    this.setState({\n      popoverVisible: visible,\n    });\n  }\n\n  render() {\n    const { adhocFilter, isControlledComponent } = this.props;\n\n    const { visible, togglePopover, closePopover } = isControlledComponent\n      ? {\n          visible: this.props.visible,\n          togglePopover: this.props.togglePopover,\n          closePopover: this.props.closePopover,\n        }\n      : {\n          visible: this.state.popoverVisible,\n          togglePopover: this.togglePopover,\n          closePopover: this.closePopover,\n        };\n    const overlayContent = (\n      <ExplorePopoverContent>\n        <AdhocFilterEditPopover\n          adhocFilter={adhocFilter}\n          options={this.props.options}\n          datasource={this.props.datasource}\n          partitionColumn={this.props.partitionColumn}\n          onResize={this.onPopoverResize}\n          onClose={closePopover}\n          sections={this.props.sections}\n          operators={this.props.operators}\n          onChange={this.props.onFilterEdit}\n          requireSave={this.props.requireSave}\n        />\n      </ExplorePopoverContent>\n    );\n\n    return (\n      <ControlPopover\n        trigger=\"click\"\n        content={overlayContent}\n        defaultVisible={visible}\n        visible={visible}\n        onVisibleChange={togglePopover}\n        destroyTooltipOnHide\n      >\n        {this.props.children}\n      </ControlPopover>\n    );\n  }\n}\n\nexport default AdhocFilterPopoverTrigger;\n"]},"metadata":{},"sourceType":"module"}