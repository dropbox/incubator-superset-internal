{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Suspense } from 'react';\nimport { t } from '@superset-ui/core';\nimport backgroundStyleOptions from 'src/dashboard/util/backgroundStyleOptions';\nimport cx from 'classnames';\nimport { useSelector } from 'react-redux';\nimport DragDroppable from '../dnd/DragDroppable';\nimport { COLUMN_TYPE, ROW_TYPE } from '../../util/componentTypes';\nimport WithPopoverMenu from '../menu/WithPopoverMenu';\nimport ResizableContainer from '../resizable/ResizableContainer';\nimport { BACKGROUND_TRANSPARENT, GRID_BASE_UNIT, GRID_MIN_COLUMN_COUNT } from '../../util/constants';\nimport HoverMenu from '../menu/HoverMenu';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport BackgroundStyleDropdown from '../menu/BackgroundStyleDropdown';\nimport dashboardComponents from '../../../visualizations/presets/dashboardComponents';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DynamicComponent = (_ref) => {let { component, parentComponent, index, depth, handleComponentDrop, editMode, columnWidth, availableColumnCount, onResizeStart, onResizeStop, onResize, deleteComponent, parentId, updateComponents, id } = _ref;\n  // inherit the size of parent columns\n  const widthMultiple = parentComponent.type === COLUMN_TYPE ?\n  parentComponent.meta.width || GRID_MIN_COLUMN_COUNT :\n  component.meta.width || GRID_MIN_COLUMN_COUNT;\n  const handleDeleteComponent = () => {\n    deleteComponent(id, parentId);\n  };\n  const rowStyle = backgroundStyleOptions.find((opt) => opt.value === (component.meta.background || BACKGROUND_TRANSPARENT));\n  const updateMeta = (metaKey, nextValue) => {\n    updateComponents({\n      [component.id]: {\n        ...component,\n        meta: {\n          ...component.meta,\n          [metaKey]: nextValue } } });\n\n\n\n  };\n  const { Component } = dashboardComponents.get(component.meta.componentKey);\n  const dashboardData = useSelector((_ref2) => {let { nativeFilters, dataMask } = _ref2;return {\n      nativeFilters,\n      dataMask };});\n\n  return ___EmotionJSX(DragDroppable\n  // @ts-ignore\n  , { component: component\n    // @ts-ignore\n    , parentComponent: parentComponent, orientation: parentComponent.type === ROW_TYPE ? 'column' : 'row', index: index, depth: depth, onDrop: handleComponentDrop, editMode: editMode },\n  (_ref3) => {let { dropIndicatorProps, dragSourceRef } = _ref3;return ___EmotionJSX(WithPopoverMenu, { menuItems: [\n      ___EmotionJSX(BackgroundStyleDropdown, { id: `${component.id}-background`, value: component.meta.background, onChange: (value) => updateMeta('background', value) })],\n      editMode: editMode },\n    ___EmotionJSX(\"div\", { className: cx('dashboard-component', `dashboard-${component.componentKey}`, rowStyle == null ? void 0 : rowStyle.className), id: component.id },\n    ___EmotionJSX(ResizableContainer, { id: component.id, adjustableWidth: parentComponent.type === ROW_TYPE, widthStep: columnWidth, widthMultiple: widthMultiple, heightStep: GRID_BASE_UNIT, adjustableHeight: false, heightMultiple: component.meta.height, minWidthMultiple: GRID_MIN_COLUMN_COUNT, minHeightMultiple: GRID_MIN_COLUMN_COUNT, maxWidthMultiple: availableColumnCount + widthMultiple, onResizeStart: onResizeStart, onResize: onResize, onResizeStop: onResizeStop },\n    ___EmotionJSX(\"div\", { ref: dragSourceRef, className: \"dashboard-component\" },\n    editMode && ___EmotionJSX(HoverMenu, { position: \"top\" },\n    ___EmotionJSX(DeleteComponentButton, { onDelete: handleDeleteComponent })),\n\n    ___EmotionJSX(Suspense, { fallback: ___EmotionJSX(\"div\", null, t('Loading...')) },\n    ___EmotionJSX(Component, { dashboardData: dashboardData }))))),\n\n\n\n\n    dropIndicatorProps && ___EmotionJSX(\"div\", dropIndicatorProps));});\n\n\n};\nexport default DynamicComponent;","map":{"version":3,"mappings":"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","names":["React","Suspense","t","backgroundStyleOptions","cx","useSelector","DragDroppable","COLUMN_TYPE","ROW_TYPE","WithPopoverMenu","ResizableContainer","BACKGROUND_TRANSPARENT","GRID_BASE_UNIT","GRID_MIN_COLUMN_COUNT","HoverMenu","DeleteComponentButton","BackgroundStyleDropdown","dashboardComponents","DynamicComponent","component","parentComponent","index","depth","handleComponentDrop","editMode","columnWidth","availableColumnCount","onResizeStart","onResizeStop","onResize","deleteComponent","parentId","updateComponents","id","widthMultiple","type","meta","width","handleDeleteComponent","rowStyle","find","opt","value","background","updateMeta","metaKey","nextValue","Component","get","componentKey","dashboardData","nativeFilters","dataMask","dropIndicatorProps","dragSourceRef","className","height"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/gridComponents/DynamicComponent.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FC, Suspense } from 'react';\nimport { DashboardComponentMetadata, JsonObject, t } from '@superset-ui/core';\nimport backgroundStyleOptions from 'src/dashboard/util/backgroundStyleOptions';\nimport cx from 'classnames';\nimport { useSelector } from 'react-redux';\nimport DragDroppable from '../dnd/DragDroppable';\nimport { COLUMN_TYPE, ROW_TYPE } from '../../util/componentTypes';\nimport WithPopoverMenu from '../menu/WithPopoverMenu';\nimport ResizableContainer from '../resizable/ResizableContainer';\nimport {\n  BACKGROUND_TRANSPARENT,\n  GRID_BASE_UNIT,\n  GRID_MIN_COLUMN_COUNT,\n} from '../../util/constants';\nimport HoverMenu from '../menu/HoverMenu';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport BackgroundStyleDropdown from '../menu/BackgroundStyleDropdown';\nimport dashboardComponents from '../../../visualizations/presets/dashboardComponents';\nimport { RootState } from '../../types';\n\ntype FilterSummaryType = {\n  component: JsonObject;\n  parentComponent: JsonObject;\n  index: number;\n  depth: number;\n  handleComponentDrop: (...args: any[]) => any;\n  editMode: boolean;\n  columnWidth: number;\n  availableColumnCount: number;\n  onResizeStart: Function;\n  onResizeStop: Function;\n  onResize: Function;\n  deleteComponent: Function;\n  updateComponents: Function;\n  parentId: number;\n  id: number;\n};\n\nconst DynamicComponent: FC<FilterSummaryType> = ({\n  component,\n  parentComponent,\n  index,\n  depth,\n  handleComponentDrop,\n  editMode,\n  columnWidth,\n  availableColumnCount,\n  onResizeStart,\n  onResizeStop,\n  onResize,\n  deleteComponent,\n  parentId,\n  updateComponents,\n  id,\n}) => {\n  // inherit the size of parent columns\n  const widthMultiple =\n    parentComponent.type === COLUMN_TYPE\n      ? parentComponent.meta.width || GRID_MIN_COLUMN_COUNT\n      : component.meta.width || GRID_MIN_COLUMN_COUNT;\n\n  const handleDeleteComponent = () => {\n    deleteComponent(id, parentId);\n  };\n\n  const rowStyle = backgroundStyleOptions.find(\n    opt => opt.value === (component.meta.background || BACKGROUND_TRANSPARENT),\n  );\n\n  const updateMeta = (metaKey: string, nextValue: string | number) => {\n    updateComponents({\n      [component.id]: {\n        ...component,\n        meta: {\n          ...component.meta,\n          [metaKey]: nextValue,\n        },\n      },\n    });\n  };\n\n  const { Component } = dashboardComponents.get(component.meta.componentKey);\n  const dashboardData = useSelector<RootState, DashboardComponentMetadata>(\n    ({ nativeFilters, dataMask }) => ({\n      nativeFilters,\n      dataMask,\n    }),\n  );\n\n  return (\n    <DragDroppable\n      // @ts-ignore\n      component={component}\n      // @ts-ignore\n      parentComponent={parentComponent}\n      orientation={parentComponent.type === ROW_TYPE ? 'column' : 'row'}\n      index={index}\n      depth={depth}\n      onDrop={handleComponentDrop}\n      editMode={editMode}\n    >\n      {({ dropIndicatorProps, dragSourceRef }) => (\n        <WithPopoverMenu\n          menuItems={[\n            <BackgroundStyleDropdown\n              id={`${component.id}-background`}\n              value={component.meta.background}\n              onChange={value => updateMeta('background', value)}\n            />,\n          ]}\n          editMode={editMode}\n        >\n          <div\n            data-test={`dashboard-${component.componentKey}`}\n            className={cx(\n              'dashboard-component',\n              `dashboard-${component.componentKey}`,\n              rowStyle?.className,\n            )}\n            id={component.id}\n          >\n            <ResizableContainer\n              id={component.id}\n              adjustableWidth={parentComponent.type === ROW_TYPE}\n              widthStep={columnWidth}\n              widthMultiple={widthMultiple}\n              heightStep={GRID_BASE_UNIT}\n              adjustableHeight={false}\n              heightMultiple={component.meta.height}\n              minWidthMultiple={GRID_MIN_COLUMN_COUNT}\n              minHeightMultiple={GRID_MIN_COLUMN_COUNT}\n              maxWidthMultiple={availableColumnCount + widthMultiple}\n              onResizeStart={onResizeStart}\n              onResize={onResize}\n              onResizeStop={onResizeStop}\n            >\n              <div\n                ref={dragSourceRef}\n                className=\"dashboard-component\"\n                data-test=\"dashboard-component-chart-holder\"\n              >\n                {editMode && (\n                  <HoverMenu position=\"top\">\n                    <DeleteComponentButton onDelete={handleDeleteComponent} />\n                  </HoverMenu>\n                )}\n                <Suspense fallback={<div>{t('Loading...')}</div>}>\n                  <Component dashboardData={dashboardData} />\n                </Suspense>\n              </div>\n            </ResizableContainer>\n          </div>\n          {dropIndicatorProps && <div {...dropIndicatorProps} />}\n        </WithPopoverMenu>\n      )}\n    </DragDroppable>\n  );\n};\nexport default DynamicComponent;\n"]},"metadata":{},"sourceType":"module"}