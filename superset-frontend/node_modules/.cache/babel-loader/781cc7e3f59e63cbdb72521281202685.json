{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState, useCallback } from 'react';\nimport { QueryState, styled, SupersetClient, t, useTheme } from '@superset-ui/core';\nimport moment from 'moment';\nimport { createFetchRelated, createFetchDistinct, createErrorHandler, shortenSQL } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport SubMenu from 'src/features/home/SubMenu';\nimport Popover from 'src/components/Popover';\nimport { commonMenuData } from 'src/features/home/commonMenuData';\nimport ListView, { FilterOperator } from 'src/components/ListView';\nimport { Tooltip } from 'src/components/Tooltip';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport sql from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport { DATETIME_WITH_TIME_ZONE, TIME_WITH_MS } from 'src/constants';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';\nimport Icons from 'src/components/Icons';\nimport QueryPreviewModal from 'src/features/queries/QueryPreviewModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst PAGE_SIZE = 25;\nconst SQL_PREVIEW_MAX_LINES = 4;\nconst TopAlignedListView = styled(ListView)`\n  table .table-cell {\n    vertical-align: top;\n  }\n`;\nSyntaxHighlighter.registerLanguage('sql', sql);\nconst StyledSyntaxHighlighter = styled(SyntaxHighlighter)`\n  height: ${(_ref) => {let { theme } = _ref;return theme.gridUnit * 26;}}px;\n  overflow: hidden !important; /* needed to override inline styles */\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\nconst StyledTableLabel = styled.div`\n  .count {\n    margin-left: 5px;\n    color: ${(_ref2) => {let { theme } = _ref2;return theme.colors.primary.base;}};\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\nconst StyledPopoverItem = styled.div`\n  color: ${(_ref3) => {let { theme } = _ref3;return theme.colors.grayscale.dark2;}};\n`;\nfunction QueryList(_ref4) {let { addDangerToast } = _ref4;\n  const { state: { loading, resourceCount: queryCount, resourceCollection: queries }, fetchData } = useListViewResource('query', t('Query history'), addDangerToast, false);\n  const [queryCurrentlyPreviewing, setQueryCurrentlyPreviewing] = useState();\n  const theme = useTheme();\n  const handleQueryPreview = useCallback((id) => {\n    SupersetClient.get({\n      endpoint: `/api/v1/query/${id}` }).\n    then((_ref5) => {let { json = {} } = _ref5;\n      setQueryCurrentlyPreviewing({ ...json.result });\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue previewing the selected query. %s', errMsg))));\n  }, [addDangerToast]);\n  const menuData = {\n    activeChild: 'Query history',\n    ...commonMenuData };\n\n  const initialSort = [{ id: QueryObjectColumns.start_time, desc: true }];\n  const columns = useMemo(() => [\n  {\n    Cell: (_ref6) => {let { row: { original: { status } } } = _ref6;\n      const statusConfig = {\n        name: null,\n        label: '' };\n\n      if (status === QueryState.SUCCESS) {\n        statusConfig.name = ___EmotionJSX(Icons.Check, { iconColor: theme.colors.success.base });\n        statusConfig.label = t('Success');\n      } else\n      if (status === QueryState.FAILED ||\n      status === QueryState.STOPPED) {\n        statusConfig.name = ___EmotionJSX(Icons.XSmall, { iconColor: status === QueryState.FAILED ?\n          theme.colors.error.base :\n          theme.colors.grayscale.base });\n        statusConfig.label = t('Failed');\n      } else\n      if (status === QueryState.RUNNING) {\n        statusConfig.name = ___EmotionJSX(Icons.Running, { iconColor: theme.colors.primary.base });\n        statusConfig.label = t('Running');\n      } else\n      if (status === QueryState.TIMED_OUT) {\n        statusConfig.name = ___EmotionJSX(Icons.Offline, { iconColor: theme.colors.grayscale.light1 });\n        statusConfig.label = t('Offline');\n      } else\n      if (status === QueryState.SCHEDULED ||\n      status === QueryState.PENDING) {\n        statusConfig.name = ___EmotionJSX(Icons.Queued, { iconColor: theme.colors.grayscale.base });\n        statusConfig.label = t('Scheduled');\n      }\n      return ___EmotionJSX(Tooltip, { title: statusConfig.label, placement: \"bottom\" },\n      ___EmotionJSX(\"span\", null, statusConfig.name));\n\n    },\n    accessor: QueryObjectColumns.status,\n    size: 'xs',\n    disableSortBy: true },\n\n  {\n    accessor: QueryObjectColumns.start_time,\n    Header: t('Time'),\n    size: 'xl',\n    Cell: (_ref7) => {let { row: { original: { start_time, end_time } } } = _ref7;\n      const startMoment = moment.utc(start_time).local();\n      const formattedStartTimeData = startMoment.\n      format(DATETIME_WITH_TIME_ZONE).\n      split(' ');\n      const formattedStartTime = ___EmotionJSX(React.Fragment, null,\n      formattedStartTimeData[0], \" \", ___EmotionJSX(\"br\", null),\n      formattedStartTimeData[1]);\n\n      return end_time ? ___EmotionJSX(Tooltip, { title: t('Duration: %s', moment(moment.utc(end_time - start_time)).format(TIME_WITH_MS)), placement: \"bottom\" },\n      ___EmotionJSX(\"span\", null, formattedStartTime)) :\n      formattedStartTime;\n    } },\n\n  {\n    accessor: QueryObjectColumns.tab_name,\n    Header: t('Tab name'),\n    size: 'xl' },\n\n  {\n    accessor: QueryObjectColumns.database_name,\n    Header: t('Database'),\n    size: 'xl' },\n\n  {\n    accessor: QueryObjectColumns.database,\n    hidden: true },\n\n  {\n    accessor: QueryObjectColumns.schema,\n    Header: t('Schema'),\n    size: 'xl' },\n\n  {\n    Cell: (_ref8) => {let { row: { original: { sql_tables: tables = [] } } } = _ref8;\n      const names = tables.map((table) => table.table);\n      const main = names.length > 0 ? names.shift() : '';\n      if (names.length) {\n        return ___EmotionJSX(StyledTableLabel, null,\n        ___EmotionJSX(\"span\", null, main),\n        ___EmotionJSX(Popover, { placement: \"right\", title: t('TABLES'), trigger: \"click\", content: ___EmotionJSX(React.Fragment, null,\n          names.map((name) => ___EmotionJSX(StyledPopoverItem, { key: name }, name))) },\n\n        ___EmotionJSX(\"span\", { className: \"count\" }, \"(+\", names.length, \")\")));\n\n\n      }\n      return main;\n    },\n    accessor: QueryObjectColumns.sql_tables,\n    Header: t('Tables'),\n    size: 'xl',\n    disableSortBy: true },\n\n  {\n    accessor: QueryObjectColumns.user_first_name,\n    Header: t('User'),\n    size: 'xl',\n    Cell: (_ref9) => {let { row: { original: { user } } } = _ref9;return user ? `${user.first_name} ${user.last_name}` : '';} },\n\n  {\n    accessor: QueryObjectColumns.user,\n    hidden: true },\n\n  {\n    accessor: QueryObjectColumns.rows,\n    Header: t('Rows'),\n    size: 'md' },\n\n  {\n    accessor: QueryObjectColumns.sql,\n    Header: t('SQL'),\n    Cell: (_ref10) => {let { row: { original, id } } = _ref10;return ___EmotionJSX(\"div\", { tabIndex: 0, role: \"button\", \"data-test\": `open-sql-preview-${id}`, onClick: () => setQueryCurrentlyPreviewing(original) },\n      ___EmotionJSX(StyledSyntaxHighlighter, { language: \"sql\", style: github },\n      shortenSQL(original.sql, SQL_PREVIEW_MAX_LINES)));} },\n\n\n\n  {\n    Header: t('Actions'),\n    id: 'actions',\n    disableSortBy: true,\n    Cell: (_ref11) => {let { row: { original: { id } } } = _ref11;return ___EmotionJSX(Tooltip, { title: t('Open query in SQL Lab'), placement: \"bottom\" },\n      ___EmotionJSX(\"a\", { href: `/superset/sqllab?queryId=${id}` },\n      ___EmotionJSX(Icons.Full, { iconColor: theme.colors.grayscale.base })));} }],\n\n\n\n  []);\n  const filters = useMemo(() => [\n  {\n    Header: t('Database'),\n    key: 'database',\n    id: 'database',\n    input: 'select',\n    operator: FilterOperator.relationOneMany,\n    unfilteredLabel: t('All'),\n    fetchSelects: createFetchRelated('query', 'database', createErrorHandler((errMsg) => addDangerToast(t('An error occurred while fetching database values: %s', errMsg)))),\n    paginate: true },\n\n  {\n    Header: t('State'),\n    key: 'state',\n    id: 'status',\n    input: 'select',\n    operator: FilterOperator.equals,\n    unfilteredLabel: 'All',\n    fetchSelects: createFetchDistinct('query', 'status', createErrorHandler((errMsg) => addDangerToast(t('An error occurred while fetching schema values: %s', errMsg)))),\n    paginate: true },\n\n  {\n    Header: t('User'),\n    key: 'user',\n    id: 'user',\n    input: 'select',\n    operator: FilterOperator.relationOneMany,\n    unfilteredLabel: 'All',\n    fetchSelects: createFetchRelated('query', 'user', createErrorHandler((errMsg) => addDangerToast(t('An error occurred while fetching user values: %s', errMsg)))),\n    paginate: true },\n\n  {\n    Header: t('Time range'),\n    key: 'start_time',\n    id: 'start_time',\n    input: 'datetime_range',\n    operator: FilterOperator.between },\n\n  {\n    Header: t('Search by query text'),\n    key: 'sql',\n    id: 'sql',\n    input: 'search',\n    operator: FilterOperator.contains }],\n\n  [addDangerToast]);\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, menuData),\n  queryCurrentlyPreviewing && ___EmotionJSX(QueryPreviewModal, { onHide: () => setQueryCurrentlyPreviewing(undefined), query: queryCurrentlyPreviewing, queries: queries, fetchData: handleQueryPreview, openInSqlLab: (id) => window.location.assign(`/superset/sqllab?queryId=${id}`), show: true }),\n  ___EmotionJSX(TopAlignedListView, { className: \"query-history-list-view\", columns: columns, count: queryCount, data: queries, fetchData: fetchData, filters: filters, initialSort: initialSort, loading: loading, pageSize: PAGE_SIZE, highlightRowId: queryCurrentlyPreviewing == null ? void 0 : queryCurrentlyPreviewing.id }));\n\n}__signature__(QueryList, \"useListViewResource{{ state: { loading, resourceCount: queryCount, resourceCollection: queries }, fetchData, }}\\nuseState{[queryCurrentlyPreviewing, setQueryCurrentlyPreviewing]}\\nuseTheme{theme}\\nuseCallback{handleQueryPreview}\\nuseMemo{columns}\\nuseMemo{filters}\", () => [useListViewResource, useTheme]);const _default =\nwithToasts(QueryList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/QueryHistoryList/index.tsx\");reactHotLoader.register(SQL_PREVIEW_MAX_LINES, \"SQL_PREVIEW_MAX_LINES\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/QueryHistoryList/index.tsx\");reactHotLoader.register(TopAlignedListView, \"TopAlignedListView\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/QueryHistoryList/index.tsx\");reactHotLoader.register(StyledSyntaxHighlighter, \"StyledSyntaxHighlighter\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/QueryHistoryList/index.tsx\");reactHotLoader.register(StyledTableLabel, \"StyledTableLabel\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/QueryHistoryList/index.tsx\");reactHotLoader.register(StyledPopoverItem, \"StyledPopoverItem\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/QueryHistoryList/index.tsx\");reactHotLoader.register(QueryList, \"QueryList\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/QueryHistoryList/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/QueryHistoryList/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useMemo","useState","useCallback","QueryState","styled","SupersetClient","t","useTheme","moment","createFetchRelated","createFetchDistinct","createErrorHandler","shortenSQL","withToasts","useListViewResource","SubMenu","Popover","commonMenuData","ListView","FilterOperator","Tooltip","SyntaxHighlighter","sql","github","DATETIME_WITH_TIME_ZONE","TIME_WITH_MS","QueryObjectColumns","Icons","QueryPreviewModal","PAGE_SIZE","SQL_PREVIEW_MAX_LINES","TopAlignedListView","registerLanguage","StyledSyntaxHighlighter","theme","gridUnit","StyledTableLabel","div","colors","primary","base","StyledPopoverItem","grayscale","dark2","QueryList","addDangerToast","state","loading","resourceCount","queryCount","resourceCollection","queries","fetchData","queryCurrentlyPreviewing","setQueryCurrentlyPreviewing","handleQueryPreview","id","get","endpoint","then","json","result","errMsg","menuData","activeChild","initialSort","start_time","desc","columns","Cell","row","original","status","statusConfig","name","label","SUCCESS","success","FAILED","STOPPED","error","RUNNING","TIMED_OUT","light1","SCHEDULED","PENDING","accessor","size","disableSortBy","Header","end_time","startMoment","utc","local","formattedStartTimeData","format","split","formattedStartTime","tab_name","database_name","database","hidden","schema","sql_tables","tables","names","map","table","main","length","shift","user_first_name","user","first_name","last_name","rows","filters","key","input","operator","relationOneMany","unfilteredLabel","fetchSelects","paginate","equals","between","contains","undefined","window","location","assign"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/QueryHistoryList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState, useCallback, ReactElement } from 'react';\nimport {\n  QueryState,\n  styled,\n  SupersetClient,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport moment from 'moment';\nimport {\n  createFetchRelated,\n  createFetchDistinct,\n  createErrorHandler,\n  shortenSQL,\n} from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport Popover from 'src/components/Popover';\nimport { commonMenuData } from 'src/features/home/commonMenuData';\nimport ListView, {\n  Filters,\n  FilterOperator,\n  ListViewProps,\n} from 'src/components/ListView';\nimport { Tooltip } from 'src/components/Tooltip';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport sql from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport { DATETIME_WITH_TIME_ZONE, TIME_WITH_MS } from 'src/constants';\nimport { QueryObject, QueryObjectColumns } from 'src/views/CRUD/types';\n\nimport Icons from 'src/components/Icons';\nimport QueryPreviewModal from 'src/features/queries/QueryPreviewModal';\n\nconst PAGE_SIZE = 25;\nconst SQL_PREVIEW_MAX_LINES = 4;\n\nconst TopAlignedListView = styled(ListView)<ListViewProps<QueryObject>>`\n  table .table-cell {\n    vertical-align: top;\n  }\n`;\n\nSyntaxHighlighter.registerLanguage('sql', sql);\nconst StyledSyntaxHighlighter = styled(SyntaxHighlighter)`\n  height: ${({ theme }) => theme.gridUnit * 26}px;\n  overflow: hidden !important; /* needed to override inline styles */\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\ninterface QueryListProps {\n  addDangerToast: (msg: string, config?: any) => any;\n  addSuccessToast: (msg: string, config?: any) => any;\n}\n\nconst StyledTableLabel = styled.div`\n  .count {\n    margin-left: 5px;\n    color: ${({ theme }) => theme.colors.primary.base};\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\n\nconst StyledPopoverItem = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n`;\n\nfunction QueryList({ addDangerToast }: QueryListProps) {\n  const {\n    state: { loading, resourceCount: queryCount, resourceCollection: queries },\n    fetchData,\n  } = useListViewResource<QueryObject>(\n    'query',\n    t('Query history'),\n    addDangerToast,\n    false,\n  );\n\n  const [queryCurrentlyPreviewing, setQueryCurrentlyPreviewing] =\n    useState<QueryObject>();\n\n  const theme = useTheme();\n\n  const handleQueryPreview = useCallback(\n    (id: number) => {\n      SupersetClient.get({\n        endpoint: `/api/v1/query/${id}`,\n      }).then(\n        ({ json = {} }) => {\n          setQueryCurrentlyPreviewing({ ...json.result });\n        },\n        createErrorHandler(errMsg =>\n          addDangerToast(\n            t('There was an issue previewing the selected query. %s', errMsg),\n          ),\n        ),\n      );\n    },\n    [addDangerToast],\n  );\n\n  const menuData: SubMenuProps = {\n    activeChild: 'Query history',\n    ...commonMenuData,\n  };\n\n  const initialSort = [{ id: QueryObjectColumns.start_time, desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { status },\n          },\n        }: {\n          row: {\n            original: {\n              status: QueryState;\n            };\n          };\n        }) => {\n          const statusConfig: {\n            name: ReactElement | null;\n            label: string;\n          } = {\n            name: null,\n            label: '',\n          };\n          if (status === QueryState.SUCCESS) {\n            statusConfig.name = (\n              <Icons.Check iconColor={theme.colors.success.base} />\n            );\n            statusConfig.label = t('Success');\n          } else if (\n            status === QueryState.FAILED ||\n            status === QueryState.STOPPED\n          ) {\n            statusConfig.name = (\n              <Icons.XSmall\n                iconColor={\n                  status === QueryState.FAILED\n                    ? theme.colors.error.base\n                    : theme.colors.grayscale.base\n                }\n              />\n            );\n            statusConfig.label = t('Failed');\n          } else if (status === QueryState.RUNNING) {\n            statusConfig.name = (\n              <Icons.Running iconColor={theme.colors.primary.base} />\n            );\n            statusConfig.label = t('Running');\n          } else if (status === QueryState.TIMED_OUT) {\n            statusConfig.name = (\n              <Icons.Offline iconColor={theme.colors.grayscale.light1} />\n            );\n            statusConfig.label = t('Offline');\n          } else if (\n            status === QueryState.SCHEDULED ||\n            status === QueryState.PENDING\n          ) {\n            statusConfig.name = (\n              <Icons.Queued iconColor={theme.colors.grayscale.base} />\n            );\n            statusConfig.label = t('Scheduled');\n          }\n          return (\n            <Tooltip title={statusConfig.label} placement=\"bottom\">\n              <span>{statusConfig.name}</span>\n            </Tooltip>\n          );\n        },\n        accessor: QueryObjectColumns.status,\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        accessor: QueryObjectColumns.start_time,\n        Header: t('Time'),\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { start_time, end_time },\n          },\n        }: any) => {\n          const startMoment = moment.utc(start_time).local();\n          const formattedStartTimeData = startMoment\n            .format(DATETIME_WITH_TIME_ZONE)\n            .split(' ');\n\n          const formattedStartTime = (\n            <>\n              {formattedStartTimeData[0]} <br />\n              {formattedStartTimeData[1]}\n            </>\n          );\n\n          return end_time ? (\n            <Tooltip\n              title={t(\n                'Duration: %s',\n                moment(moment.utc(end_time - start_time)).format(TIME_WITH_MS),\n              )}\n              placement=\"bottom\"\n            >\n              <span>{formattedStartTime}</span>\n            </Tooltip>\n          ) : (\n            formattedStartTime\n          );\n        },\n      },\n      {\n        accessor: QueryObjectColumns.tab_name,\n        Header: t('Tab name'),\n        size: 'xl',\n      },\n      {\n        accessor: QueryObjectColumns.database_name,\n        Header: t('Database'),\n        size: 'xl',\n      },\n      {\n        accessor: QueryObjectColumns.database,\n        hidden: true,\n      },\n      {\n        accessor: QueryObjectColumns.schema,\n        Header: t('Schema'),\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { sql_tables: tables = [] },\n          },\n        }: any) => {\n          const names = tables.map((table: any) => table.table);\n          const main = names.length > 0 ? names.shift() : '';\n\n          if (names.length) {\n            return (\n              <StyledTableLabel>\n                <span>{main}</span>\n                <Popover\n                  placement=\"right\"\n                  title={t('TABLES')}\n                  trigger=\"click\"\n                  content={\n                    <>\n                      {names.map((name: string) => (\n                        <StyledPopoverItem key={name}>{name}</StyledPopoverItem>\n                      ))}\n                    </>\n                  }\n                >\n                  <span className=\"count\">(+{names.length})</span>\n                </Popover>\n              </StyledTableLabel>\n            );\n          }\n\n          return main;\n        },\n        accessor: QueryObjectColumns.sql_tables,\n        Header: t('Tables'),\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        accessor: QueryObjectColumns.user_first_name,\n        Header: t('User'),\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { user },\n          },\n        }: any) => (user ? `${user.first_name} ${user.last_name}` : ''),\n      },\n      {\n        accessor: QueryObjectColumns.user,\n        hidden: true,\n      },\n      {\n        accessor: QueryObjectColumns.rows,\n        Header: t('Rows'),\n        size: 'md',\n      },\n      {\n        accessor: QueryObjectColumns.sql,\n        Header: t('SQL'),\n        Cell: ({ row: { original, id } }: any) => (\n          <div\n            tabIndex={0}\n            role=\"button\"\n            data-test={`open-sql-preview-${id}`}\n            onClick={() => setQueryCurrentlyPreviewing(original)}\n          >\n            <StyledSyntaxHighlighter language=\"sql\" style={github}>\n              {shortenSQL(original.sql, SQL_PREVIEW_MAX_LINES)}\n            </StyledSyntaxHighlighter>\n          </div>\n        ),\n      },\n      {\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        Cell: ({\n          row: {\n            original: { id },\n          },\n        }: any) => (\n          <Tooltip title={t('Open query in SQL Lab')} placement=\"bottom\">\n            <a href={`/superset/sqllab?queryId=${id}`}>\n              <Icons.Full iconColor={theme.colors.grayscale.base} />\n            </a>\n          </Tooltip>\n        ),\n      },\n    ],\n    [],\n  );\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Database'),\n        key: 'database',\n        id: 'database',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'query',\n          'database',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching database values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('State'),\n        key: 'state',\n        id: 'status',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchDistinct(\n          'query',\n          'status',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching schema values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('User'),\n        key: 'user',\n        id: 'user',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'query',\n          'user',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching user values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Time range'),\n        key: 'start_time',\n        id: 'start_time',\n        input: 'datetime_range',\n        operator: FilterOperator.between,\n      },\n      {\n        Header: t('Search by query text'),\n        key: 'sql',\n        id: 'sql',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ],\n    [addDangerToast],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      {queryCurrentlyPreviewing && (\n        <QueryPreviewModal\n          onHide={() => setQueryCurrentlyPreviewing(undefined)}\n          query={queryCurrentlyPreviewing}\n          queries={queries}\n          fetchData={handleQueryPreview}\n          openInSqlLab={(id: number) =>\n            window.location.assign(`/superset/sqllab?queryId=${id}`)\n          }\n          show\n        />\n      )}\n      <TopAlignedListView\n        className=\"query-history-list-view\"\n        columns={columns}\n        count={queryCount}\n        data={queries}\n        fetchData={fetchData}\n        filters={filters}\n        initialSort={initialSort}\n        loading={loading}\n        pageSize={PAGE_SIZE}\n        highlightRowId={queryCurrentlyPreviewing?.id}\n      />\n    </>\n  );\n}\n\nexport default withToasts(QueryList);\n"]},"metadata":{},"sourceType":"module"}