{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { isUrlExternal, parseUrl } from 'src/utils/urlUtils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const GenericLink = (_ref) => {let { to, component, replace, innerRef, children, ...rest } = _ref;\n  if (typeof to === 'string' && isUrlExternal(to)) {\n    return ___EmotionJSX(\"a\", _extends({ href: parseUrl(to) }, rest),\n    children);\n\n  }\n  return ___EmotionJSX(Link, _extends({ to: to, component: component, replace: replace, innerRef: innerRef }, rest),\n  children);\n\n};","map":{"version":3,"mappings":"+DAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAgC,kBAAhC;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,oBAAxC,C;AAEA,OAAO,MAAMC,WAAW,GAAG,UAQiB,KARZ,EAC9BC,EAD8B,EAE9BC,SAF8B,EAG9BC,OAH8B,EAI9BC,QAJ8B,EAK9BC,QAL8B,EAM9B,GAAGC,IAN2B,EAQY;EAC1C,IAAI,OAAOL,EAAP,KAAc,QAAd,IAA0BH,aAAa,CAACG,EAAD,CAA3C,EAAiD;IAC/C,OACE,8BAA6B,IAAI,EAAEF,QAAQ,CAACE,EAAD,CAA3C,IAAqDK,IAArD;IACGD,QADH,CADF;;EAKD;EACD,OACE,cAAC,IAAD,aAEE,EAAE,EAAEJ,EAFN,EAGE,SAAS,EAAEC,SAHb,EAIE,OAAO,EAAEC,OAJX,EAKE,QAAQ,EAAEC,QALZ,IAMME,IANN;EAQGD,QARH,CADF;;AAYD,CA5BM","names":["React","Link","isUrlExternal","parseUrl","GenericLink","to","component","replace","innerRef","children","rest"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/GenericLink/GenericLink.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link, LinkProps } from 'react-router-dom';\nimport { isUrlExternal, parseUrl } from 'src/utils/urlUtils';\n\nexport const GenericLink = <S,>({\n  to,\n  component,\n  replace,\n  innerRef,\n  children,\n  ...rest\n}: React.PropsWithoutRef<LinkProps<S>> &\n  React.RefAttributes<HTMLAnchorElement>) => {\n  if (typeof to === 'string' && isUrlExternal(to)) {\n    return (\n      <a data-test=\"external-link\" href={parseUrl(to)} {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <Link\n      data-test=\"internal-link\"\n      to={to}\n      component={component}\n      replace={replace}\n      innerRef={innerRef}\n      {...rest}\n    >\n      {children}\n    </Link>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}