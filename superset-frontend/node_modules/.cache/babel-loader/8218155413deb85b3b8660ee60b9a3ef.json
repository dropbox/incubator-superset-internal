{"ast":null,"code":"import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react/sort-prop-types */\nimport d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { extent as d3Extent } from 'd3-array';\nimport {\ngetSequentialSchemeRegistry,\nCategoricalColorNamespace } from\n'@superset-ui/core';\nimport Datamap from 'datamaps/dist/datamaps.world.min';\nimport { ColorBy } from './utils';\n\nconst propTypes = {\n  data: PropTypes.arrayOf(\n  PropTypes.shape({\n    country: PropTypes.string,\n    latitude: PropTypes.number,\n    longitude: PropTypes.number,\n    name: PropTypes.string,\n    m1: PropTypes.number,\n    m2: PropTypes.number })),\n\n\n  height: PropTypes.number,\n  maxBubbleSize: PropTypes.number,\n  showBubbles: PropTypes.bool,\n  linearColorScheme: PropTypes.string,\n  color: PropTypes.string,\n  setDataMask: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  emitCrossFilters: PropTypes.bool,\n  formatter: PropTypes.object };\n\n\nfunction WorldMap(element, props) {var _filterState$selected;\n  const {\n    countryFieldtype,\n    entity,\n    data,\n    width,\n    height,\n    maxBubbleSize,\n    showBubbles,\n    linearColorScheme,\n    color,\n    colorBy,\n    colorScheme,\n    sliceId,\n    theme,\n    onContextMenu,\n    setDataMask,\n    inContextMenu,\n    filterState,\n    emitCrossFilters,\n    formatter } =\n  props;\n  const div = d3.select(element);\n  div.classed('superset-legacy-chart-world-map', true);\n  div.selectAll('*').remove();\n\n  // Ignore XXX's to get better normalization\n  const filteredData = data.filter((d) => d.country && d.country !== 'XXX');\n\n  const extRadius = d3.extent(filteredData, (d) => Math.sqrt(d.m2));\n  const radiusScale = d3.scale.\n  linear().\n  domain([extRadius[0], extRadius[1]]).\n  range([1, maxBubbleSize]);\n\n  let processedData;\n  let colorScale;\n  if (colorBy === ColorBy.country) {\n    colorScale = CategoricalColorNamespace.getScale(colorScheme);\n\n    processedData = filteredData.map((d) => ({\n      ...d,\n      radius: radiusScale(Math.sqrt(d.m2)),\n      fillColor: colorScale(d.name, sliceId) }));\n\n  } else {\n    colorScale = getSequentialSchemeRegistry().\n    get(linearColorScheme).\n    createLinearScale(d3Extent(filteredData, (d) => d.m1));\n\n    processedData = filteredData.map((d) => ({\n      ...d,\n      radius: radiusScale(Math.sqrt(d.m2)),\n      fillColor: colorScale(d.m1) }));\n\n  }\n\n  const mapData = {};\n  processedData.forEach((d) => {\n    mapData[d.country] = d;\n  });\n\n  const getCrossFilterDataMask = (source) => {var _mapData$key, _mapData$key2;\n    const selected = Object.values(filterState.selectedValues || {});\n    const key = source.id || source.country;\n    const country =\n    countryFieldtype === 'name' ? (_mapData$key = mapData[key]) == null ? void 0 : _mapData$key.name : (_mapData$key2 = mapData[key]) == null ? void 0 : _mapData$key2.country;\n\n    if (!country) {\n      return undefined;\n    }\n\n    let values;\n    if (_includesInstanceProperty(selected).call(selected, key)) {\n      values = [];\n    } else {\n      values = [country];\n    }\n\n    return {\n      dataMask: {\n        extraFormData: {\n          filters: values.length ?\n          [\n          {\n            col: entity,\n            op: 'IN',\n            val: values }] :\n\n\n          [] },\n\n        filterState: {\n          value: values.length ? values : null,\n          selectedValues: values.length ? [key] : null } },\n\n\n      isCurrentValueSelected: _includesInstanceProperty(selected).call(selected, key) };\n\n  };\n\n  const handleClick = (source) => {var _getCrossFilterDataMa;\n    if (!emitCrossFilters) {\n      return;\n    }\n    const pointerEvent = d3.event;\n    pointerEvent.preventDefault();\n    getCrossFilterDataMask(source);\n\n    const dataMask = (_getCrossFilterDataMa = getCrossFilterDataMask(source)) == null ? void 0 : _getCrossFilterDataMa.dataMask;\n    if (dataMask) {\n      setDataMask(dataMask);\n    }\n  };\n\n  const handleContextMenu = (source) => {var _mapData$key3, _mapData$key4;\n    const pointerEvent = d3.event;\n    pointerEvent.preventDefault();\n    const key = source.id || source.country;\n    const val =\n    countryFieldtype === 'name' ? (_mapData$key3 = mapData[key]) == null ? void 0 : _mapData$key3.name : (_mapData$key4 = mapData[key]) == null ? void 0 : _mapData$key4.country;\n    let drillToDetailFilters;\n    let drillByFilters;\n    if (val) {\n      drillToDetailFilters = [\n      {\n        col: entity,\n        op: '==',\n        val,\n        formattedVal: val }];\n\n\n      drillByFilters = [\n      {\n        col: entity,\n        op: '==',\n        val }];\n\n\n    }\n    onContextMenu(pointerEvent.clientX, pointerEvent.clientY, {\n      drillToDetail: drillToDetailFilters,\n      crossFilter: getCrossFilterDataMask(source),\n      drillBy: { filters: drillByFilters, groupbyFieldName: 'entity' } });\n\n  };\n\n  const map = new Datamap({\n    element,\n    width,\n    height,\n    data: processedData,\n    fills: {\n      defaultFill: theme.colors.grayscale.light2 },\n\n    geographyConfig: {\n      popupOnHover: !inContextMenu,\n      highlightOnHover: !inContextMenu,\n      borderWidth: 1,\n      borderColor: theme.colors.grayscale.light5,\n      highlightBorderColor: theme.colors.grayscale.light5,\n      highlightFillColor: color,\n      highlightBorderWidth: 1,\n      popupTemplate: (geo, d) =>\n      `<div class=\"hoverinfo\"><strong>${d.name}</strong><br>${formatter(\n      d.m1)\n      }</div>` },\n\n    bubblesConfig: {\n      borderWidth: 1,\n      borderOpacity: 1,\n      borderColor: color,\n      popupOnHover: !inContextMenu,\n      radius: null,\n      popupTemplate: (geo, d) =>\n      `<div class=\"hoverinfo\"><strong>${d.name}</strong><br>${formatter(\n      d.m2)\n      }</div>`,\n      fillOpacity: 0.5,\n      animate: true,\n      highlightOnHover: !inContextMenu,\n      highlightFillColor: color,\n      highlightBorderColor: theme.colors.grayscale.dark2,\n      highlightBorderWidth: 2,\n      highlightBorderOpacity: 1,\n      highlightFillOpacity: 0.85,\n      exitDelay: 100,\n      key: JSON.stringify },\n\n    done: (datamap) => {\n      datamap.svg.\n      selectAll('.datamaps-subunit').\n      on('contextmenu', handleContextMenu).\n      on('click', handleClick);\n    } });\n\n\n  map.updateChoropleth(mapData);\n\n  if (showBubbles) {\n    map.bubbles(processedData);\n    div.\n    selectAll('circle.datamaps-bubble').\n    style('fill', color).\n    style('stroke', color).\n    on('contextmenu', handleContextMenu).\n    on('click', handleClick);\n  }\n\n  if (((_filterState$selected = filterState.selectedValues) == null ? void 0 : _filterState$selected.length) > 0) {\n    d3.selectAll('path.datamaps-subunit').\n    filter(\n    (countryFeature) => {var _context;return (\n        !_includesInstanceProperty(_context = filterState.selectedValues).call(_context, countryFeature.id));}).\n\n    style('fill-opacity', theme.opacity.mediumLight);\n\n    // hack to ensure that the clicked country's color is preserved\n    // sometimes the fill color would get default grey value after applying cross filter\n    filterState.selectedValues.forEach((value) => {var _mapData$value;\n      d3.select(`path.datamaps-subunit.${value}`).style(\n      'fill', (_mapData$value =\n      mapData[value]) == null ? void 0 : _mapData$value.fillColor);\n\n    });\n  }\n}\n\nWorldMap.displayName = 'WorldMap';\nWorldMap.propTypes = propTypes;\n\nexport default WorldMap;","map":{"version":3,"names":["d3","PropTypes","extent","d3Extent","getSequentialSchemeRegistry","CategoricalColorNamespace","Datamap","ColorBy","propTypes","data","arrayOf","shape","country","string","latitude","number","longitude","name","m1","m2","height","maxBubbleSize","showBubbles","bool","linearColorScheme","color","setDataMask","func","onContextMenu","emitCrossFilters","formatter","object","WorldMap","element","props","countryFieldtype","entity","width","colorBy","colorScheme","sliceId","theme","inContextMenu","filterState","div","select","classed","selectAll","remove","filteredData","filter","d","extRadius","Math","sqrt","radiusScale","scale","linear","domain","range","processedData","colorScale","getScale","map","radius","fillColor","get","createLinearScale","mapData","forEach","getCrossFilterDataMask","source","selected","Object","values","selectedValues","key","id","undefined","dataMask","extraFormData","filters","length","col","op","val","value","isCurrentValueSelected","handleClick","pointerEvent","event","preventDefault","handleContextMenu","drillToDetailFilters","drillByFilters","formattedVal","clientX","clientY","drillToDetail","crossFilter","drillBy","groupbyFieldName","fills","defaultFill","colors","grayscale","light2","geographyConfig","popupOnHover","highlightOnHover","borderWidth","borderColor","light5","highlightBorderColor","highlightFillColor","highlightBorderWidth","popupTemplate","geo","bubblesConfig","borderOpacity","fillOpacity","animate","dark2","highlightBorderOpacity","highlightFillOpacity","exitDelay","JSON","stringify","done","datamap","svg","on","updateChoropleth","bubbles","style","countryFeature","opacity","mediumLight","displayName"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/legacy-plugin-chart-world-map/src/WorldMap.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react/sort-prop-types */\nimport d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { extent as d3Extent } from 'd3-array';\nimport {\n  getSequentialSchemeRegistry,\n  CategoricalColorNamespace,\n} from '@superset-ui/core';\nimport Datamap from 'datamaps/dist/datamaps.world.min';\nimport { ColorBy } from './utils';\n\nconst propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      country: PropTypes.string,\n      latitude: PropTypes.number,\n      longitude: PropTypes.number,\n      name: PropTypes.string,\n      m1: PropTypes.number,\n      m2: PropTypes.number,\n    }),\n  ),\n  height: PropTypes.number,\n  maxBubbleSize: PropTypes.number,\n  showBubbles: PropTypes.bool,\n  linearColorScheme: PropTypes.string,\n  color: PropTypes.string,\n  setDataMask: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  emitCrossFilters: PropTypes.bool,\n  formatter: PropTypes.object,\n};\n\nfunction WorldMap(element, props) {\n  const {\n    countryFieldtype,\n    entity,\n    data,\n    width,\n    height,\n    maxBubbleSize,\n    showBubbles,\n    linearColorScheme,\n    color,\n    colorBy,\n    colorScheme,\n    sliceId,\n    theme,\n    onContextMenu,\n    setDataMask,\n    inContextMenu,\n    filterState,\n    emitCrossFilters,\n    formatter,\n  } = props;\n  const div = d3.select(element);\n  div.classed('superset-legacy-chart-world-map', true);\n  div.selectAll('*').remove();\n\n  // Ignore XXX's to get better normalization\n  const filteredData = data.filter(d => d.country && d.country !== 'XXX');\n\n  const extRadius = d3.extent(filteredData, d => Math.sqrt(d.m2));\n  const radiusScale = d3.scale\n    .linear()\n    .domain([extRadius[0], extRadius[1]])\n    .range([1, maxBubbleSize]);\n\n  let processedData;\n  let colorScale;\n  if (colorBy === ColorBy.country) {\n    colorScale = CategoricalColorNamespace.getScale(colorScheme);\n\n    processedData = filteredData.map(d => ({\n      ...d,\n      radius: radiusScale(Math.sqrt(d.m2)),\n      fillColor: colorScale(d.name, sliceId),\n    }));\n  } else {\n    colorScale = getSequentialSchemeRegistry()\n      .get(linearColorScheme)\n      .createLinearScale(d3Extent(filteredData, d => d.m1));\n\n    processedData = filteredData.map(d => ({\n      ...d,\n      radius: radiusScale(Math.sqrt(d.m2)),\n      fillColor: colorScale(d.m1),\n    }));\n  }\n\n  const mapData = {};\n  processedData.forEach(d => {\n    mapData[d.country] = d;\n  });\n\n  const getCrossFilterDataMask = source => {\n    const selected = Object.values(filterState.selectedValues || {});\n    const key = source.id || source.country;\n    const country =\n      countryFieldtype === 'name' ? mapData[key]?.name : mapData[key]?.country;\n\n    if (!country) {\n      return undefined;\n    }\n\n    let values;\n    if (selected.includes(key)) {\n      values = [];\n    } else {\n      values = [country];\n    }\n\n    return {\n      dataMask: {\n        extraFormData: {\n          filters: values.length\n            ? [\n                {\n                  col: entity,\n                  op: 'IN',\n                  val: values,\n                },\n              ]\n            : [],\n        },\n        filterState: {\n          value: values.length ? values : null,\n          selectedValues: values.length ? [key] : null,\n        },\n      },\n      isCurrentValueSelected: selected.includes(key),\n    };\n  };\n\n  const handleClick = source => {\n    if (!emitCrossFilters) {\n      return;\n    }\n    const pointerEvent = d3.event;\n    pointerEvent.preventDefault();\n    getCrossFilterDataMask(source);\n\n    const dataMask = getCrossFilterDataMask(source)?.dataMask;\n    if (dataMask) {\n      setDataMask(dataMask);\n    }\n  };\n\n  const handleContextMenu = source => {\n    const pointerEvent = d3.event;\n    pointerEvent.preventDefault();\n    const key = source.id || source.country;\n    const val =\n      countryFieldtype === 'name' ? mapData[key]?.name : mapData[key]?.country;\n    let drillToDetailFilters;\n    let drillByFilters;\n    if (val) {\n      drillToDetailFilters = [\n        {\n          col: entity,\n          op: '==',\n          val,\n          formattedVal: val,\n        },\n      ];\n      drillByFilters = [\n        {\n          col: entity,\n          op: '==',\n          val,\n        },\n      ];\n    }\n    onContextMenu(pointerEvent.clientX, pointerEvent.clientY, {\n      drillToDetail: drillToDetailFilters,\n      crossFilter: getCrossFilterDataMask(source),\n      drillBy: { filters: drillByFilters, groupbyFieldName: 'entity' },\n    });\n  };\n\n  const map = new Datamap({\n    element,\n    width,\n    height,\n    data: processedData,\n    fills: {\n      defaultFill: theme.colors.grayscale.light2,\n    },\n    geographyConfig: {\n      popupOnHover: !inContextMenu,\n      highlightOnHover: !inContextMenu,\n      borderWidth: 1,\n      borderColor: theme.colors.grayscale.light5,\n      highlightBorderColor: theme.colors.grayscale.light5,\n      highlightFillColor: color,\n      highlightBorderWidth: 1,\n      popupTemplate: (geo, d) =>\n        `<div class=\"hoverinfo\"><strong>${d.name}</strong><br>${formatter(\n          d.m1,\n        )}</div>`,\n    },\n    bubblesConfig: {\n      borderWidth: 1,\n      borderOpacity: 1,\n      borderColor: color,\n      popupOnHover: !inContextMenu,\n      radius: null,\n      popupTemplate: (geo, d) =>\n        `<div class=\"hoverinfo\"><strong>${d.name}</strong><br>${formatter(\n          d.m2,\n        )}</div>`,\n      fillOpacity: 0.5,\n      animate: true,\n      highlightOnHover: !inContextMenu,\n      highlightFillColor: color,\n      highlightBorderColor: theme.colors.grayscale.dark2,\n      highlightBorderWidth: 2,\n      highlightBorderOpacity: 1,\n      highlightFillOpacity: 0.85,\n      exitDelay: 100,\n      key: JSON.stringify,\n    },\n    done: datamap => {\n      datamap.svg\n        .selectAll('.datamaps-subunit')\n        .on('contextmenu', handleContextMenu)\n        .on('click', handleClick);\n    },\n  });\n\n  map.updateChoropleth(mapData);\n\n  if (showBubbles) {\n    map.bubbles(processedData);\n    div\n      .selectAll('circle.datamaps-bubble')\n      .style('fill', color)\n      .style('stroke', color)\n      .on('contextmenu', handleContextMenu)\n      .on('click', handleClick);\n  }\n\n  if (filterState.selectedValues?.length > 0) {\n    d3.selectAll('path.datamaps-subunit')\n      .filter(\n        countryFeature =>\n          !filterState.selectedValues.includes(countryFeature.id),\n      )\n      .style('fill-opacity', theme.opacity.mediumLight);\n\n    // hack to ensure that the clicked country's color is preserved\n    // sometimes the fill color would get default grey value after applying cross filter\n    filterState.selectedValues.forEach(value => {\n      d3.select(`path.datamaps-subunit.${value}`).style(\n        'fill',\n        mapData[value]?.fillColor,\n      );\n    });\n  }\n}\n\nWorldMap.displayName = 'WorldMap';\nWorldMap.propTypes = propTypes;\n\nexport default WorldMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}