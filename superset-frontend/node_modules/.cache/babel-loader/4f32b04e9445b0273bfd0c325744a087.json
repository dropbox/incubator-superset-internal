{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { OptionControlLabel } from 'src/explore/components/controls/OptionControls';\nimport { DndItemType } from 'src/explore/components/DndItemType';\nimport AdhocFilterPopoverTrigger from 'src/explore/components/controls/FilterControl/AdhocFilterPopoverTrigger';\nimport { useGetTimeRangeLabel } from '../utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function AdhocFilterOption(_ref) {let { adhocFilter, options, datasource, onFilterEdit, onRemoveFilter, partitionColumn, onMoveLabel, onDropLabel, index, sections, operators } = _ref;\n  const { actualTimeRange, title } = useGetTimeRangeLabel(adhocFilter);\n  return ___EmotionJSX(AdhocFilterPopoverTrigger, { sections: sections, operators: operators, adhocFilter: adhocFilter, options: options, datasource: datasource, onFilterEdit: onFilterEdit, partitionColumn: partitionColumn },\n  ___EmotionJSX(OptionControlLabel, { label: actualTimeRange != null ? actualTimeRange : adhocFilter.getDefaultLabel(), tooltipTitle: title != null ? title : adhocFilter.getTooltipTitle(), onRemove: onRemoveFilter, onMoveLabel: onMoveLabel, onDropLabel: onDropLabel, index: index, type: DndItemType.FilterOption, withCaret: true, isExtra: adhocFilter.isExtra }));\n\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,gDAAnC;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,OAAOC,yBAAP,MAAsC,yEAAtC;AAIA,SAASC,oBAAT,QAAqC,UAArC,C;AAgBA,eAAc,SAAUC,iBAAV,OAYW,KAZiB,EACxCC,WADwC,EAExCC,OAFwC,EAGxCC,UAHwC,EAIxCC,YAJwC,EAKxCC,cALwC,EAMxCC,eANwC,EAOxCC,WAPwC,EAQxCC,WARwC,EASxCC,KATwC,EAUxCC,QAVwC,EAWxCC,SAXwC,EAYjB;EACvB,MAAM,EAAEC,eAAF,EAAmBC,KAAnB,KAA6Bd,oBAAoB,CAACE,WAAD,CAAvD;EAEA,OACE,cAAC,yBAAD,IACE,QAAQ,EAAES,QADZ,EAEE,SAAS,EAAEC,SAFb,EAGE,WAAW,EAAEV,WAHf,EAIE,OAAO,EAAEC,OAJX,EAKE,UAAU,EAAEC,UALd,EAME,YAAY,EAAEC,YANhB,EAOE,eAAe,EAAEE,eAPnB;EASE,cAAC,kBAAD,IACE,KAAK,EAAEM,eAAF,WAAEA,eAAF,GAAqBX,WAAW,CAACa,eAAZ,EAD5B,EAEE,YAAY,EAAED,KAAF,WAAEA,KAAF,GAAWZ,WAAW,CAACc,eAAZ,EAFzB,EAGE,QAAQ,EAAEV,cAHZ,EAIE,WAAW,EAAEE,WAJf,EAKE,WAAW,EAAEC,WALf,EAME,KAAK,EAAEC,KANT,EAOE,IAAI,EAAEZ,WAAW,CAACmB,YAPpB,EAQE,SAAS,MARX,EASE,OAAO,EAAEf,WAAW,CAACgB,OATvB,GATF,CADF;;AAuBD","names":["React","OptionControlLabel","DndItemType","AdhocFilterPopoverTrigger","useGetTimeRangeLabel","AdhocFilterOption","adhocFilter","options","datasource","onFilterEdit","onRemoveFilter","partitionColumn","onMoveLabel","onDropLabel","index","sections","operators","actualTimeRange","title","getDefaultLabel","getTooltipTitle","FilterOption","isExtra"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilterOption/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { OptionControlLabel } from 'src/explore/components/controls/OptionControls';\nimport { DndItemType } from 'src/explore/components/DndItemType';\nimport AdhocFilterPopoverTrigger from 'src/explore/components/controls/FilterControl/AdhocFilterPopoverTrigger';\nimport AdhocFilter from 'src/explore/components/controls/FilterControl/AdhocFilter';\nimport { OptionSortType } from 'src/explore/types';\nimport { Operators } from 'src/explore/constants';\nimport { useGetTimeRangeLabel } from '../utils';\n\nexport interface AdhocFilterOptionProps {\n  adhocFilter: AdhocFilter;\n  onFilterEdit: () => void;\n  onRemoveFilter: () => void;\n  options: OptionSortType[];\n  sections: string[];\n  operators: Operators[];\n  datasource: Record<string, any>;\n  partitionColumn: string;\n  onMoveLabel: () => void;\n  onDropLabel: () => void;\n  index: number;\n}\n\nexport default function AdhocFilterOption({\n  adhocFilter,\n  options,\n  datasource,\n  onFilterEdit,\n  onRemoveFilter,\n  partitionColumn,\n  onMoveLabel,\n  onDropLabel,\n  index,\n  sections,\n  operators,\n}: AdhocFilterOptionProps) {\n  const { actualTimeRange, title } = useGetTimeRangeLabel(adhocFilter);\n\n  return (\n    <AdhocFilterPopoverTrigger\n      sections={sections}\n      operators={operators}\n      adhocFilter={adhocFilter}\n      options={options}\n      datasource={datasource}\n      onFilterEdit={onFilterEdit}\n      partitionColumn={partitionColumn}\n    >\n      <OptionControlLabel\n        label={actualTimeRange ?? adhocFilter.getDefaultLabel()}\n        tooltipTitle={title ?? adhocFilter.getTooltipTitle()}\n        onRemove={onRemoveFilter}\n        onMoveLabel={onMoveLabel}\n        onDropLabel={onDropLabel}\n        index={index}\n        type={DndItemType.FilterOption}\n        withCaret\n        isExtra={adhocFilter.isExtra}\n      />\n    </AdhocFilterPopoverTrigger>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}