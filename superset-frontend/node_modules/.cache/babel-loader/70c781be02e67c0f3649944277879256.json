{"ast":null,"code":"import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, t, useTheme } from '@superset-ui/core';\nimport { Form, FormItem } from 'src/components/Form';\nimport Select from 'src/components/Select/Select';\nimport { Col, Row } from 'src/components';\nimport { InputNumber } from 'src/components/Input';\nimport Button from 'src/components/Button';\nimport { COMPARATOR, MULTIPLE_VALUE_COMPARATORS } from './types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst FullWidthInputNumber = styled(InputNumber)`\n  width: 100%;\n`;\nconst JustifyEnd = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\nconst colorSchemeOptions = (theme) => [\n{ value: theme.colors.success.light1, label: t('success') },\n{ value: theme.colors.alert.light1, label: t('alert') },\n{ value: theme.colors.error.light1, label: t('error') },\n{ value: theme.colors.success.dark1, label: t('success dark') },\n{ value: theme.colors.alert.dark1, label: t('alert dark') },\n{ value: theme.colors.error.dark1, label: t('error dark') }];\n\nconst operatorOptions = [\n{ value: COMPARATOR.NONE, label: t('None') },\n{ value: COMPARATOR.GREATER_THAN, label: '>' },\n{ value: COMPARATOR.LESS_THAN, label: '<' },\n{ value: COMPARATOR.GREATER_OR_EQUAL, label: '≥' },\n{ value: COMPARATOR.LESS_OR_EQUAL, label: '≤' },\n{ value: COMPARATOR.EQUAL, label: '=' },\n{ value: COMPARATOR.NOT_EQUAL, label: '≠' },\n{ value: COMPARATOR.BETWEEN, label: '< x <' },\n{ value: COMPARATOR.BETWEEN_OR_EQUAL, label: '≤ x ≤' },\n{ value: COMPARATOR.BETWEEN_OR_LEFT_EQUAL, label: '≤ x <' },\n{ value: COMPARATOR.BETWEEN_OR_RIGHT_EQUAL, label: '< x ≤' }];\n\nconst targetValueValidator = (compare, rejectMessage) => (targetValue) => (_, compareValue) => {\n  if (!targetValue ||\n  !compareValue ||\n  compare(Number(targetValue), Number(compareValue))) {\n    return Promise.resolve();\n  }\n  return Promise.reject(new Error(rejectMessage));\n};\nconst targetValueLeftValidator = targetValueValidator((target, val) => target > val, t('This value should be smaller than the right target value'));\nconst targetValueRightValidator = targetValueValidator((target, val) => target < val, t('This value should be greater than the left target value'));\nconst isOperatorMultiValue = (operator) => operator && _includesInstanceProperty(MULTIPLE_VALUE_COMPARATORS).call(MULTIPLE_VALUE_COMPARATORS, operator);\nconst isOperatorNone = (operator) => !operator || operator === COMPARATOR.NONE;\nconst rulesRequired = [{ required: true, message: t('Required') }];\nconst rulesTargetValueLeft = [\n{ required: true, message: t('Required') },\n(_ref) => {let { getFieldValue } = _ref;return {\n    validator: targetValueLeftValidator(getFieldValue('targetValueRight')) };}];\n\n\nconst rulesTargetValueRight = [\n{ required: true, message: t('Required') },\n(_ref2) => {let { getFieldValue } = _ref2;return {\n    validator: targetValueRightValidator(getFieldValue('targetValueLeft')) };}];\n\n\nconst targetValueLeftDeps = ['targetValueRight'];\nconst targetValueRightDeps = ['targetValueLeft'];\nconst shouldFormItemUpdate = (prevValues, currentValues) => isOperatorNone(prevValues.operator) !==\nisOperatorNone(currentValues.operator) ||\nisOperatorMultiValue(prevValues.operator) !==\nisOperatorMultiValue(currentValues.operator);\nconst operatorField = ___EmotionJSX(FormItem, { name: \"operator\", label: t('Operator'), rules: rulesRequired, initialValue: operatorOptions[0].value },\n___EmotionJSX(Select, { ariaLabel: t('Operator'), options: operatorOptions }));\n\nconst renderOperatorFields = (_ref3) => {let { getFieldValue } = _ref3;return isOperatorNone(getFieldValue('operator')) ? ___EmotionJSX(Row, { gutter: 12 },\n  ___EmotionJSX(Col, { span: 6 }, operatorField)) :\n  isOperatorMultiValue(getFieldValue('operator')) ? ___EmotionJSX(Row, { gutter: 12 },\n  ___EmotionJSX(Col, { span: 9 },\n  ___EmotionJSX(FormItem, { name: \"targetValueLeft\", label: t('Left value'), rules: rulesTargetValueLeft, dependencies: targetValueLeftDeps, validateTrigger: \"onBlur\", trigger: \"onBlur\" },\n  ___EmotionJSX(FullWidthInputNumber, null))),\n\n\n  ___EmotionJSX(Col, { span: 6 }, operatorField),\n  ___EmotionJSX(Col, { span: 9 },\n  ___EmotionJSX(FormItem, { name: \"targetValueRight\", label: t('Right value'), rules: rulesTargetValueRight, dependencies: targetValueRightDeps, validateTrigger: \"onBlur\", trigger: \"onBlur\" },\n  ___EmotionJSX(FullWidthInputNumber, null)))) :\n\n\n  ___EmotionJSX(Row, { gutter: 12 },\n  ___EmotionJSX(Col, { span: 6 }, operatorField),\n  ___EmotionJSX(Col, { span: 18 },\n  ___EmotionJSX(FormItem, { name: \"targetValue\", label: t('Target value'), rules: rulesRequired },\n  ___EmotionJSX(FullWidthInputNumber, null))));};\n\n\n\nexport const FormattingPopoverContent = (_ref4) => {var _columns$;let { config, onChange, columns = [] } = _ref4;\n  const theme = useTheme();\n  const colorScheme = colorSchemeOptions(theme);\n  return ___EmotionJSX(Form, { onFinish: onChange, initialValues: config, requiredMark: \"optional\", layout: \"vertical\" },\n  ___EmotionJSX(Row, { gutter: 12 },\n  ___EmotionJSX(Col, { span: 12 },\n  ___EmotionJSX(FormItem, { name: \"column\", label: t('Column'), rules: rulesRequired, initialValue: (_columns$ = columns[0]) == null ? void 0 : _columns$.value },\n  ___EmotionJSX(Select, { ariaLabel: t('Select column'), options: columns }))),\n\n\n  ___EmotionJSX(Col, { span: 12 },\n  ___EmotionJSX(FormItem, { name: \"colorScheme\", label: t('Color scheme'), rules: rulesRequired, initialValue: colorScheme[0].value },\n  ___EmotionJSX(Select, { ariaLabel: t('Color scheme'), options: colorScheme })))),\n\n\n\n  ___EmotionJSX(FormItem, { noStyle: true, shouldUpdate: shouldFormItemUpdate },\n  renderOperatorFields),\n\n  ___EmotionJSX(FormItem, null,\n  ___EmotionJSX(JustifyEnd, null,\n  ___EmotionJSX(Button, { htmlType: \"submit\", buttonStyle: \"primary\" },\n  t('Apply')))));\n\n\n\n\n};","map":{"version":3,"mappings":"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","names":["React","styled","t","useTheme","Form","FormItem","Select","Col","Row","InputNumber","Button","COMPARATOR","MULTIPLE_VALUE_COMPARATORS","FullWidthInputNumber","JustifyEnd","div","colorSchemeOptions","theme","value","colors","success","light1","label","alert","error","dark1","operatorOptions","NONE","GREATER_THAN","LESS_THAN","GREATER_OR_EQUAL","LESS_OR_EQUAL","EQUAL","NOT_EQUAL","BETWEEN","BETWEEN_OR_EQUAL","BETWEEN_OR_LEFT_EQUAL","BETWEEN_OR_RIGHT_EQUAL","targetValueValidator","compare","rejectMessage","targetValue","_","compareValue","Number","Promise","resolve","reject","Error","targetValueLeftValidator","target","val","targetValueRightValidator","isOperatorMultiValue","operator","isOperatorNone","rulesRequired","required","message","rulesTargetValueLeft","getFieldValue","validator","rulesTargetValueRight","targetValueLeftDeps","targetValueRightDeps","shouldFormItemUpdate","prevValues","currentValues","operatorField","renderOperatorFields","FormattingPopoverContent","config","onChange","columns","colorScheme"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, SupersetTheme, t, useTheme } from '@superset-ui/core';\nimport { Form, FormItem, FormProps } from 'src/components/Form';\nimport Select from 'src/components/Select/Select';\nimport { Col, Row } from 'src/components';\nimport { InputNumber } from 'src/components/Input';\nimport Button from 'src/components/Button';\nimport {\n  COMPARATOR,\n  ConditionalFormattingConfig,\n  MULTIPLE_VALUE_COMPARATORS,\n} from './types';\n\nconst FullWidthInputNumber = styled(InputNumber)`\n  width: 100%;\n`;\n\nconst JustifyEnd = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst colorSchemeOptions = (theme: SupersetTheme) => [\n  { value: theme.colors.success.light1, label: t('success') },\n  { value: theme.colors.alert.light1, label: t('alert') },\n  { value: theme.colors.error.light1, label: t('error') },\n  { value: theme.colors.success.dark1, label: t('success dark') },\n  { value: theme.colors.alert.dark1, label: t('alert dark') },\n  { value: theme.colors.error.dark1, label: t('error dark') },\n];\n\nconst operatorOptions = [\n  { value: COMPARATOR.NONE, label: t('None') },\n  { value: COMPARATOR.GREATER_THAN, label: '>' },\n  { value: COMPARATOR.LESS_THAN, label: '<' },\n  { value: COMPARATOR.GREATER_OR_EQUAL, label: '≥' },\n  { value: COMPARATOR.LESS_OR_EQUAL, label: '≤' },\n  { value: COMPARATOR.EQUAL, label: '=' },\n  { value: COMPARATOR.NOT_EQUAL, label: '≠' },\n  { value: COMPARATOR.BETWEEN, label: '< x <' },\n  { value: COMPARATOR.BETWEEN_OR_EQUAL, label: '≤ x ≤' },\n  { value: COMPARATOR.BETWEEN_OR_LEFT_EQUAL, label: '≤ x <' },\n  { value: COMPARATOR.BETWEEN_OR_RIGHT_EQUAL, label: '< x ≤' },\n];\n\nconst targetValueValidator =\n  (\n    compare: (targetValue: number, compareValue: number) => boolean,\n    rejectMessage: string,\n  ) =>\n  (targetValue: number | string) =>\n  (_: any, compareValue: number | string) => {\n    if (\n      !targetValue ||\n      !compareValue ||\n      compare(Number(targetValue), Number(compareValue))\n    ) {\n      return Promise.resolve();\n    }\n    return Promise.reject(new Error(rejectMessage));\n  };\n\nconst targetValueLeftValidator = targetValueValidator(\n  (target: number, val: number) => target > val,\n  t('This value should be smaller than the right target value'),\n);\n\nconst targetValueRightValidator = targetValueValidator(\n  (target: number, val: number) => target < val,\n  t('This value should be greater than the left target value'),\n);\n\nconst isOperatorMultiValue = (operator?: COMPARATOR) =>\n  operator && MULTIPLE_VALUE_COMPARATORS.includes(operator);\n\nconst isOperatorNone = (operator?: COMPARATOR) =>\n  !operator || operator === COMPARATOR.NONE;\n\nconst rulesRequired = [{ required: true, message: t('Required') }];\n\ntype GetFieldValue = Pick<Required<FormProps>['form'], 'getFieldValue'>;\nconst rulesTargetValueLeft = [\n  { required: true, message: t('Required') },\n  ({ getFieldValue }: GetFieldValue) => ({\n    validator: targetValueLeftValidator(getFieldValue('targetValueRight')),\n  }),\n];\n\nconst rulesTargetValueRight = [\n  { required: true, message: t('Required') },\n  ({ getFieldValue }: GetFieldValue) => ({\n    validator: targetValueRightValidator(getFieldValue('targetValueLeft')),\n  }),\n];\n\nconst targetValueLeftDeps = ['targetValueRight'];\nconst targetValueRightDeps = ['targetValueLeft'];\n\nconst shouldFormItemUpdate = (\n  prevValues: ConditionalFormattingConfig,\n  currentValues: ConditionalFormattingConfig,\n) =>\n  isOperatorNone(prevValues.operator) !==\n    isOperatorNone(currentValues.operator) ||\n  isOperatorMultiValue(prevValues.operator) !==\n    isOperatorMultiValue(currentValues.operator);\n\nconst operatorField = (\n  <FormItem\n    name=\"operator\"\n    label={t('Operator')}\n    rules={rulesRequired}\n    initialValue={operatorOptions[0].value}\n  >\n    <Select ariaLabel={t('Operator')} options={operatorOptions} />\n  </FormItem>\n);\n\nconst renderOperatorFields = ({ getFieldValue }: GetFieldValue) =>\n  isOperatorNone(getFieldValue('operator')) ? (\n    <Row gutter={12}>\n      <Col span={6}>{operatorField}</Col>\n    </Row>\n  ) : isOperatorMultiValue(getFieldValue('operator')) ? (\n    <Row gutter={12}>\n      <Col span={9}>\n        <FormItem\n          name=\"targetValueLeft\"\n          label={t('Left value')}\n          rules={rulesTargetValueLeft}\n          dependencies={targetValueLeftDeps}\n          validateTrigger=\"onBlur\"\n          trigger=\"onBlur\"\n        >\n          <FullWidthInputNumber />\n        </FormItem>\n      </Col>\n      <Col span={6}>{operatorField}</Col>\n      <Col span={9}>\n        <FormItem\n          name=\"targetValueRight\"\n          label={t('Right value')}\n          rules={rulesTargetValueRight}\n          dependencies={targetValueRightDeps}\n          validateTrigger=\"onBlur\"\n          trigger=\"onBlur\"\n        >\n          <FullWidthInputNumber />\n        </FormItem>\n      </Col>\n    </Row>\n  ) : (\n    <Row gutter={12}>\n      <Col span={6}>{operatorField}</Col>\n      <Col span={18}>\n        <FormItem\n          name=\"targetValue\"\n          label={t('Target value')}\n          rules={rulesRequired}\n        >\n          <FullWidthInputNumber />\n        </FormItem>\n      </Col>\n    </Row>\n  );\n\nexport const FormattingPopoverContent = ({\n  config,\n  onChange,\n  columns = [],\n}: {\n  config?: ConditionalFormattingConfig;\n  onChange: (config: ConditionalFormattingConfig) => void;\n  columns: { label: string; value: string }[];\n}) => {\n  const theme = useTheme();\n  const colorScheme = colorSchemeOptions(theme);\n  return (\n    <Form\n      onFinish={onChange}\n      initialValues={config}\n      requiredMark=\"optional\"\n      layout=\"vertical\"\n    >\n      <Row gutter={12}>\n        <Col span={12}>\n          <FormItem\n            name=\"column\"\n            label={t('Column')}\n            rules={rulesRequired}\n            initialValue={columns[0]?.value}\n          >\n            <Select ariaLabel={t('Select column')} options={columns} />\n          </FormItem>\n        </Col>\n        <Col span={12}>\n          <FormItem\n            name=\"colorScheme\"\n            label={t('Color scheme')}\n            rules={rulesRequired}\n            initialValue={colorScheme[0].value}\n          >\n            <Select ariaLabel={t('Color scheme')} options={colorScheme} />\n          </FormItem>\n        </Col>\n      </Row>\n      <FormItem noStyle shouldUpdate={shouldFormItemUpdate}>\n        {renderOperatorFields}\n      </FormItem>\n      <FormItem>\n        <JustifyEnd>\n          <Button htmlType=\"submit\" buttonStyle=\"primary\">\n            {t('Apply')}\n          </Button>\n        </JustifyEnd>\n      </FormItem>\n    </Form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}