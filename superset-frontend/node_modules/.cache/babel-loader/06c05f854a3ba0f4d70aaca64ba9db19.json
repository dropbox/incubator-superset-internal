{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { Slider, InputNumber, Input } from 'antd';\nimport Checkbox from 'antd/lib/checkbox';\nimport Select from '../Select';\nimport RadioButtonControl from '../../shared-controls/components/RadioButtonControl';\nexport const ControlFormItemComponents = {\n  Slider,\n  InputNumber,\n  Input,\n  Select,\n  // Directly export Checkbox will result in \"using name from external module\" error\n  // ref: https://stackoverflow.com/questions/43900035/ts4023-exported-variable-x-has-or-is-using-name-y-from-external-module-but\n  Checkbox: Checkbox,\n  RadioButtonControl };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ControlFormItemComponents, \"ControlFormItemComponents\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/components/ControlForm/controls.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"uSAmBA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,KAA9B,QAA2C,MAA3C;AACA,OAAOC,QAAP,MAAwC,mBAAxC;AACA,OAAOC,MAAP,MAAqC,WAArC;AACA,OAAOC,kBAAP,MAEO,qDAFP;AAIA,OAAO,MAAMC,yBAAyB,GAAG;EACvCN,MADuC;EAEvCC,WAFuC;EAGvCC,KAHuC;EAIvCE,MAJuC;EAKvC;EACA;EACAD,QAAQ,EAAEA,QAP6B;EAUvCE,kBAVuC,EAAlC,C,iLAAMC,yB","names":["Slider","InputNumber","Input","Checkbox","Select","RadioButtonControl","ControlFormItemComponents"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/components/ControlForm/controls.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ReactNode } from 'react';\nimport { Slider, InputNumber, Input } from 'antd';\nimport Checkbox, { CheckboxProps } from 'antd/lib/checkbox';\nimport Select, { SelectOption } from '../Select';\nimport RadioButtonControl, {\n  RadioButtonOption,\n} from '../../shared-controls/components/RadioButtonControl';\n\nexport const ControlFormItemComponents = {\n  Slider,\n  InputNumber,\n  Input,\n  Select,\n  // Directly export Checkbox will result in \"using name from external module\" error\n  // ref: https://stackoverflow.com/questions/43900035/ts4023-exported-variable-x-has-or-is-using-name-y-from-external-module-but\n  Checkbox: Checkbox as React.ForwardRefExoticComponent<\n    CheckboxProps & React.RefAttributes<HTMLInputElement>\n  >,\n  RadioButtonControl,\n};\n\nexport type ControlType = keyof typeof ControlFormItemComponents;\n\nexport type ControlFormValueValidator<V> = (value: V) => string | false;\n\nexport type ControlFormItemSpec<T extends ControlType = ControlType> = {\n  controlType: T;\n  label: ReactNode;\n  description: ReactNode;\n  placeholder?: string;\n  required?: boolean;\n  validators?: ControlFormValueValidator<any>[];\n  width?: number | string;\n  /**\n   * Time to delay change propagation.\n   */\n  debounceDelay?: number;\n} & (T extends 'Select'\n  ? {\n      options: SelectOption<any>[];\n      value?: string;\n      defaultValue?: string;\n      creatable?: boolean;\n      minWidth?: number | string;\n      validators?: ControlFormValueValidator<string>[];\n    }\n  : T extends 'RadioButtonControl'\n  ? {\n      options: RadioButtonOption[];\n      value?: string;\n      defaultValue?: string;\n    }\n  : T extends 'Checkbox'\n  ? {\n      value?: boolean;\n      defaultValue?: boolean;\n    }\n  : T extends 'InputNumber' | 'Slider'\n  ? {\n      min?: number;\n      max?: number;\n      step?: number;\n      value?: number;\n      defaultValue?: number;\n      validators?: ControlFormValueValidator<number>[];\n    }\n  : T extends 'Input'\n  ? {\n      controlType: 'Input';\n      value?: string;\n      defaultValue?: string;\n      validators?: ControlFormValueValidator<string>[];\n    }\n  : {});\n"]},"metadata":{},"sourceType":"module"}