{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState } from 'react';\nimport { t, SupersetClient } from '@superset-ui/core';\nimport rison from 'rison';\nimport moment from 'moment';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createFetchRelated, createErrorHandler } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu from 'src/features/home/SubMenu';\nimport DeleteModal from 'src/components/DeleteModal';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport ActionsBar from 'src/components/ListView/ActionsBar';\nimport ListView, { FilterOperator } from 'src/components/ListView';\nimport CssTemplateModal from 'src/features/cssTemplates/CssTemplateModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst PAGE_SIZE = 25;\nfunction CssTemplatesList(_ref) {let { addDangerToast, addSuccessToast, user } = _ref;\n  const { state: { loading, resourceCount: templatesCount, resourceCollection: templates, bulkSelectEnabled }, hasPerm, fetchData, refreshData, toggleBulkSelect } = useListViewResource('css_template', t('CSS templates'), addDangerToast);\n  const [cssTemplateModalOpen, setCssTemplateModalOpen] = useState(false);\n  const [currentCssTemplate, setCurrentCssTemplate] = useState(null);\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const [templateCurrentlyDeleting, setTemplateCurrentlyDeleting] = useState(null);\n  const handleTemplateDelete = (_ref2) => {let { id, template_name } = _ref2;\n    SupersetClient.delete({\n      endpoint: `/api/v1/css_template/${id}` }).\n    then(() => {\n      refreshData();\n      setTemplateCurrentlyDeleting(null);\n      addSuccessToast(t('Deleted: %s', template_name));\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting %s: %s', template_name, errMsg))));\n  };\n  const handleBulkTemplateDelete = (templatesToDelete) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/css_template/?q=${rison.encode(templatesToDelete.map((_ref3) => {let { id } = _ref3;return id;}))}` }).\n    then((_ref4) => {let { json = {} } = _ref4;\n      refreshData();\n      addSuccessToast(json.message);\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting the selected templates: %s', errMsg))));\n  };\n  function handleCssTemplateEdit(cssTemplate) {\n    setCurrentCssTemplate(cssTemplate);\n    setCssTemplateModalOpen(true);\n  }\n  const initialSort = [{ id: 'template_name', desc: true }];\n  const columns = useMemo(() => [\n  {\n    accessor: 'template_name',\n    Header: t('Name') },\n\n  {\n    Cell: (_ref5) => {let { row: { original: { changed_on_delta_humanized: changedOn, changed_by: changedBy } } } = _ref5;\n      let name = 'null';\n      if (changedBy) {\n        name = `${changedBy.first_name} ${changedBy.last_name}`;\n      }\n      return ___EmotionJSX(Tooltip, { id: \"allow-run-async-header-tooltip\", title: t('Last modified by %s', name), placement: \"right\" },\n      ___EmotionJSX(\"span\", null, changedOn));\n\n    },\n    Header: t('Last modified'),\n    accessor: 'changed_on_delta_humanized',\n    size: 'xl',\n    disableSortBy: true },\n\n  {\n    Cell: (_ref6) => {let { row: { original: { created_on: createdOn } } } = _ref6;\n      const date = new Date(createdOn);\n      const utc = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n      return moment(utc).fromNow();\n    },\n    Header: t('Created on'),\n    accessor: 'created_on',\n    size: 'xl',\n    disableSortBy: true },\n\n  {\n    accessor: 'created_by',\n    disableSortBy: true,\n    Header: t('Created by'),\n    Cell: (_ref7) => {let { row: { original: { created_by: createdBy } } } = _ref7;return createdBy ? `${createdBy.first_name} ${createdBy.last_name}` : '';},\n    size: 'xl' },\n\n  {\n    Cell: (_ref8) => {let { row: { original } } = _ref8;\n      const handleEdit = () => handleCssTemplateEdit(original);\n      const handleDelete = () => setTemplateCurrentlyDeleting(original);\n      const actions = [\n      canEdit ?\n      {\n        label: 'edit-action',\n        tooltip: t('Edit template'),\n        placement: 'bottom',\n        icon: 'Edit',\n        onClick: handleEdit } :\n\n      null,\n      canDelete ?\n      {\n        label: 'delete-action',\n        tooltip: t('Delete template'),\n        placement: 'bottom',\n        icon: 'Trash',\n        onClick: handleDelete } :\n\n      null].\n      filter((item) => !!item);\n      return ___EmotionJSX(ActionsBar, { actions: actions });\n    },\n    Header: t('Actions'),\n    id: 'actions',\n    disableSortBy: true,\n    hidden: !canEdit && !canDelete,\n    size: 'xl' }],\n\n  [canDelete, canCreate]);\n  const menuData = {\n    name: t('CSS templates') };\n\n  const subMenuButtons = [];\n  if (canCreate) {\n    subMenuButtons.push({\n      name: ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }), \" \", t('CSS template')),\n\n      buttonStyle: 'primary',\n      onClick: () => {\n        setCurrentCssTemplate(null);\n        setCssTemplateModalOpen(true);\n      } });\n\n  }\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary' });\n\n  }\n  menuData.buttons = subMenuButtons;\n  const filters = useMemo(() => [\n  {\n    Header: t('Created by'),\n    key: 'created_by',\n    id: 'created_by',\n    input: 'select',\n    operator: FilterOperator.relationOneMany,\n    unfilteredLabel: t('All'),\n    fetchSelects: createFetchRelated('css_template', 'created_by', createErrorHandler((errMsg) => t('An error occurred while fetching dataset datasource values: %s', errMsg)), user),\n    paginate: true },\n\n  {\n    Header: t('Search'),\n    key: 'search',\n    id: 'template_name',\n    input: 'search',\n    operator: FilterOperator.contains }],\n\n  []);\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, menuData),\n  ___EmotionJSX(CssTemplateModal, { addDangerToast: addDangerToast, cssTemplate: currentCssTemplate, onCssTemplateAdd: () => refreshData(), onHide: () => setCssTemplateModalOpen(false), show: cssTemplateModalOpen }),\n  templateCurrentlyDeleting && ___EmotionJSX(DeleteModal, { description: t('This action will permanently delete the template.'), onConfirm: () => {\n      if (templateCurrentlyDeleting) {\n        handleTemplateDelete(templateCurrentlyDeleting);\n      }\n    }, onHide: () => setTemplateCurrentlyDeleting(null), open: true, title: t('Delete Template?') }),\n  ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: t('Are you sure you want to delete the selected templates?'), onConfirm: handleBulkTemplateDelete },\n  (confirmDelete) => {\n    const bulkActions = canDelete ?\n    [\n    {\n      key: 'delete',\n      name: t('Delete'),\n      onSelect: confirmDelete,\n      type: 'danger' }] :\n\n\n    [];\n    return ___EmotionJSX(ListView, { className: \"css-templates-list-view\", columns: columns, count: templatesCount, data: templates, fetchData: fetchData, filters: filters, initialSort: initialSort, loading: loading, pageSize: PAGE_SIZE, bulkActions: bulkActions, bulkSelectEnabled: bulkSelectEnabled, disableBulkSelect: toggleBulkSelect });\n  }));\n\n\n}\nexport default withToasts(CssTemplatesList);","map":{"version":3,"mappings":"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","names":["React","useMemo","useState","t","SupersetClient","rison","moment","useListViewResource","createFetchRelated","createErrorHandler","withToasts","SubMenu","DeleteModal","Tooltip","ConfirmStatusChange","ActionsBar","ListView","FilterOperator","CssTemplateModal","PAGE_SIZE","CssTemplatesList","addDangerToast","addSuccessToast","user","state","loading","resourceCount","templatesCount","resourceCollection","templates","bulkSelectEnabled","hasPerm","fetchData","refreshData","toggleBulkSelect","cssTemplateModalOpen","setCssTemplateModalOpen","currentCssTemplate","setCurrentCssTemplate","canCreate","canEdit","canDelete","templateCurrentlyDeleting","setTemplateCurrentlyDeleting","handleTemplateDelete","id","template_name","delete","endpoint","then","errMsg","handleBulkTemplateDelete","templatesToDelete","encode","map","json","message","handleCssTemplateEdit","cssTemplate","initialSort","desc","columns","accessor","Header","Cell","row","original","changed_on_delta_humanized","changedOn","changed_by","changedBy","name","first_name","last_name","size","disableSortBy","created_on","createdOn","date","Date","utc","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","fromNow","created_by","createdBy","handleEdit","handleDelete","actions","label","tooltip","placement","icon","onClick","filter","item","hidden","menuData","subMenuButtons","push","buttonStyle","buttons","filters","key","input","operator","relationOneMany","unfilteredLabel","fetchSelects","paginate","contains","bulkActions","onSelect","confirmDelete","type"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/pages/CssTemplateList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport { t, SupersetClient } from '@superset-ui/core';\n\nimport rison from 'rison';\nimport moment from 'moment';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createFetchRelated, createErrorHandler } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport DeleteModal from 'src/components/DeleteModal';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport CssTemplateModal from 'src/features/cssTemplates/CssTemplateModal';\nimport { TemplateObject } from 'src/features/cssTemplates/types';\n\nconst PAGE_SIZE = 25;\n\ninterface CssTemplatesListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nfunction CssTemplatesList({\n  addDangerToast,\n  addSuccessToast,\n  user,\n}: CssTemplatesListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: templatesCount,\n      resourceCollection: templates,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<TemplateObject>(\n    'css_template',\n    t('CSS templates'),\n    addDangerToast,\n  );\n  const [cssTemplateModalOpen, setCssTemplateModalOpen] =\n    useState<boolean>(false);\n  const [currentCssTemplate, setCurrentCssTemplate] =\n    useState<TemplateObject | null>(null);\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n\n  const [templateCurrentlyDeleting, setTemplateCurrentlyDeleting] =\n    useState<TemplateObject | null>(null);\n\n  const handleTemplateDelete = ({ id, template_name }: TemplateObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/css_template/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setTemplateCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', template_name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting %s: %s', template_name, errMsg),\n        ),\n      ),\n    );\n  };\n\n  const handleBulkTemplateDelete = (templatesToDelete: TemplateObject[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/css_template/?q=${rison.encode(\n        templatesToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected templates: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  function handleCssTemplateEdit(cssTemplate: TemplateObject) {\n    setCurrentCssTemplate(cssTemplate);\n    setCssTemplateModalOpen(true);\n  }\n\n  const initialSort = [{ id: 'template_name', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'template_name',\n        Header: t('Name'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_on_delta_humanized: changedOn,\n              changed_by: changedBy,\n            },\n          },\n        }: any) => {\n          let name = 'null';\n\n          if (changedBy) {\n            name = `${changedBy.first_name} ${changedBy.last_name}`;\n          }\n\n          return (\n            <Tooltip\n              id=\"allow-run-async-header-tooltip\"\n              title={t('Last modified by %s', name)}\n              placement=\"right\"\n            >\n              <span>{changedOn}</span>\n            </Tooltip>\n          );\n        },\n        Header: t('Last modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_on: createdOn },\n          },\n        }: any) => {\n          const date = new Date(createdOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).fromNow();\n        },\n        Header: t('Created on'),\n        accessor: 'created_on',\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        accessor: 'created_by',\n        disableSortBy: true,\n        Header: t('Created by'),\n        Cell: ({\n          row: {\n            original: { created_by: createdBy },\n          },\n        }: any) =>\n          createdBy ? `${createdBy.first_name} ${createdBy.last_name}` : '',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () => handleCssTemplateEdit(original);\n          const handleDelete = () => setTemplateCurrentlyDeleting(original);\n\n          const actions = [\n            canEdit\n              ? {\n                  label: 'edit-action',\n                  tooltip: t('Edit template'),\n                  placement: 'bottom',\n                  icon: 'Edit',\n                  onClick: handleEdit,\n                }\n              : null,\n            canDelete\n              ? {\n                  label: 'delete-action',\n                  tooltip: t('Delete template'),\n                  placement: 'bottom',\n                  icon: 'Trash',\n                  onClick: handleDelete,\n                }\n              : null,\n          ].filter(item => !!item);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        hidden: !canEdit && !canDelete,\n        size: 'xl',\n      },\n    ],\n    [canDelete, canCreate],\n  );\n\n  const menuData: SubMenuProps = {\n    name: t('CSS templates'),\n  };\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('CSS template')}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        setCurrentCssTemplate(null);\n        setCssTemplateModalOpen(true);\n      },\n    });\n  }\n\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  menuData.buttons = subMenuButtons;\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Created by'),\n        key: 'created_by',\n        id: 'created_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'css_template',\n          'created_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Search'),\n        key: 'search',\n        id: 'template_name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ],\n    [],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      <CssTemplateModal\n        addDangerToast={addDangerToast}\n        cssTemplate={currentCssTemplate}\n        onCssTemplateAdd={() => refreshData()}\n        onHide={() => setCssTemplateModalOpen(false)}\n        show={cssTemplateModalOpen}\n      />\n      {templateCurrentlyDeleting && (\n        <DeleteModal\n          description={t('This action will permanently delete the template.')}\n          onConfirm={() => {\n            if (templateCurrentlyDeleting) {\n              handleTemplateDelete(templateCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setTemplateCurrentlyDeleting(null)}\n          open\n          title={t('Delete Template?')}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected templates?',\n        )}\n        onConfirm={handleBulkTemplateDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = canDelete\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n\n          return (\n            <ListView<TemplateObject>\n              className=\"css-templates-list-view\"\n              columns={columns}\n              count={templatesCount}\n              data={templates}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(CssTemplatesList);\n"]},"metadata":{},"sourceType":"module"}