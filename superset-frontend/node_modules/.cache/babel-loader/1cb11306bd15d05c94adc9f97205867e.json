{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  onUndo: PropTypes.func.isRequired,\n  onRedo: PropTypes.func.isRequired };\n\n\nclass UndoRedoKeyListeners extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleKeydown = this.handleKeydown.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeydown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeydown);\n  }\n\n  handleKeydown(event) {\n    const controlOrCommand = event.ctrlKey || event.metaKey;\n    if (controlOrCommand) {\n      const isZChar = event.key === 'z' || event.keyCode === 90;\n      const isYChar = event.key === 'y' || event.keyCode === 89;\n      const isEditingMarkdown =\n      document && document.querySelector('.dashboard-markdown--editing');\n      const isEditingTitle =\n      document && document.querySelector('.editable-title--editing');\n\n      if (!isEditingMarkdown && !isEditingTitle && (isZChar || isYChar)) {\n        event.preventDefault();\n        const func = isZChar ? this.props.onUndo : this.props.onRedo;\n        func();\n      }\n    }\n  }\n\n  render() {\n    return null;\n  }}\n\n\nUndoRedoKeyListeners.propTypes = propTypes;\n\nexport default UndoRedoKeyListeners;","map":{"version":3,"names":["React","PropTypes","propTypes","onUndo","func","isRequired","onRedo","UndoRedoKeyListeners","PureComponent","constructor","props","handleKeydown","bind","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","event","controlOrCommand","ctrlKey","metaKey","isZChar","key","keyCode","isYChar","isEditingMarkdown","querySelector","isEditingTitle","preventDefault","render"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/UndoRedoKeyListeners/index.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  onUndo: PropTypes.func.isRequired,\n  onRedo: PropTypes.func.isRequired,\n};\n\nclass UndoRedoKeyListeners extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleKeydown = this.handleKeydown.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeydown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeydown);\n  }\n\n  handleKeydown(event) {\n    const controlOrCommand = event.ctrlKey || event.metaKey;\n    if (controlOrCommand) {\n      const isZChar = event.key === 'z' || event.keyCode === 90;\n      const isYChar = event.key === 'y' || event.keyCode === 89;\n      const isEditingMarkdown =\n        document && document.querySelector('.dashboard-markdown--editing');\n      const isEditingTitle =\n        document && document.querySelector('.editable-title--editing');\n\n      if (!isEditingMarkdown && !isEditingTitle && (isZChar || isYChar)) {\n        event.preventDefault();\n        const func = isZChar ? this.props.onUndo : this.props.onRedo;\n        func();\n      }\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nUndoRedoKeyListeners.propTypes = propTypes;\n\nexport default UndoRedoKeyListeners;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAS,GAAG;EAChBC,MAAM,EAAEF,SAAS,CAACG,IAAV,CAAeC,UADP;EAEhBC,MAAM,EAAEL,SAAS,CAACG,IAAV,CAAeC,UAFP,EAAlB;;;AAKA,MAAME,oBAAN,SAAmCP,KAAK,CAACQ,aAAzC,CAAuD;EACrDC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;EACD;;EAEDC,iBAAiB,GAAG;IAClBC,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,KAAKJ,aAA1C;EACD;;EAEDK,oBAAoB,GAAG;IACrBF,QAAQ,CAACG,mBAAT,CAA6B,SAA7B,EAAwC,KAAKN,aAA7C;EACD;;EAEDA,aAAa,CAACO,KAAD,EAAQ;IACnB,MAAMC,gBAAgB,GAAGD,KAAK,CAACE,OAAN,IAAiBF,KAAK,CAACG,OAAhD;IACA,IAAIF,gBAAJ,EAAsB;MACpB,MAAMG,OAAO,GAAGJ,KAAK,CAACK,GAAN,KAAc,GAAd,IAAqBL,KAAK,CAACM,OAAN,KAAkB,EAAvD;MACA,MAAMC,OAAO,GAAGP,KAAK,CAACK,GAAN,KAAc,GAAd,IAAqBL,KAAK,CAACM,OAAN,KAAkB,EAAvD;MACA,MAAME,iBAAiB;MACrBZ,QAAQ,IAAIA,QAAQ,CAACa,aAAT,CAAuB,8BAAvB,CADd;MAEA,MAAMC,cAAc;MAClBd,QAAQ,IAAIA,QAAQ,CAACa,aAAT,CAAuB,0BAAvB,CADd;;MAGA,IAAI,CAACD,iBAAD,IAAsB,CAACE,cAAvB,KAA0CN,OAAO,IAAIG,OAArD,CAAJ,EAAmE;QACjEP,KAAK,CAACW,cAAN;QACA,MAAMzB,IAAI,GAAGkB,OAAO,GAAG,KAAKZ,KAAL,CAAWP,MAAd,GAAuB,KAAKO,KAAL,CAAWJ,MAAtD;QACAF,IAAI;MACL;IACF;EACF;;EAED0B,MAAM,GAAG;IACP,OAAO,IAAP;EACD,CAlCoD;;;AAqCvDvB,oBAAoB,CAACL,SAArB,GAAiCA,SAAjC;;AAEA,eAAeK,oBAAf"},"metadata":{},"sourceType":"module"}