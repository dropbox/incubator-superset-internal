{"ast":null,"code":"/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { ensureIsArray, getColumnLabel, getXAxisLabel } from '@superset-ui/core';\nimport { getMetricOffsetsMap, isTimeComparison } from './utils';\nexport const timeComparePivotOperator = (formData, queryObject) => {\n  const metricOffsetMap = getMetricOffsetsMap(formData, queryObject);\n  const xAxisLabel = getXAxisLabel(formData);\n  const columns = queryObject.series_columns || queryObject.columns;\n  if (isTimeComparison(formData, queryObject) && xAxisLabel) {\n    const aggregates = Object.fromEntries([...metricOffsetMap.values(), ...metricOffsetMap.keys()].map((metric) => [\n    metric,\n    // use the 'mean' aggregates to avoid drop NaN\n    { operator: 'mean' }]));\n\n    return {\n      operation: 'pivot',\n      options: {\n        index: [xAxisLabel],\n        columns: ensureIsArray(columns).map(getColumnLabel),\n        drop_missing_columns: !(formData != null && formData.show_empty_columns),\n        aggregates } };\n\n\n  }\n  return undefined;\n};","map":{"version":3,"mappings":"AAAA;AACA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,aADF,EAEEC,cAFF,EAKEC,aALF,QAMO,mBANP;AAOA,SAASC,mBAAT,EAA8BC,gBAA9B,QAAsD,SAAtD;AAGA,OAAO,MAAMC,wBAAwB,GACnC,CAACC,QAAD,EAAWC,WAAX,KAA0B;EACxB,MAAMC,eAAe,GAAGL,mBAAmB,CAACG,QAAD,EAAWC,WAAX,CAA3C;EACA,MAAME,UAAU,GAAGP,aAAa,CAACI,QAAD,CAAhC;EACA,MAAMI,OAAO,GAAGH,WAAW,CAACI,cAAZ,IAA8BJ,WAAW,CAACG,OAA1D;EAEA,IAAIN,gBAAgB,CAACE,QAAD,EAAWC,WAAX,CAAhB,IAA2CE,UAA/C,EAA2D;IACzD,MAAMG,UAAU,GAAGC,MAAM,CAACC,WAAP,CACjB,CAAC,GAAGN,eAAe,CAACO,MAAhB,EAAJ,EAA8B,GAAGP,eAAe,CAACQ,IAAhB,EAAjC,EAAyDC,GAAzD,CAA6D,OAAM,KAAI;IACrEC,MADqE;IAErE;IACA,EAAEC,QAAQ,EAAE,MAAZ,EAHqE,CAAvE,CADiB,CAAnB;;IAQA,OAAO;MACLC,SAAS,EAAE,OADN;MAELC,OAAO,EAAE;QACPC,KAAK,EAAE,CAACb,UAAD,CADA;QAEPC,OAAO,EAAEV,aAAa,CAACU,OAAD,CAAb,CAAuBO,GAAvB,CAA2BhB,cAA3B,CAFF;QAGPsB,oBAAoB,EAAE,EAACjB,QAAD,YAACA,QAAQ,CAAEkB,kBAAX,CAHf;QAIPZ,UAJO,EAFJ,EAAP;;;EASD;EAED,OAAOa,SAAP;AACD,CA3BI","names":["ensureIsArray","getColumnLabel","getXAxisLabel","getMetricOffsetsMap","isTimeComparison","timeComparePivotOperator","formData","queryObject","metricOffsetMap","xAxisLabel","columns","series_columns","aggregates","Object","fromEntries","values","keys","map","metric","operator","operation","options","index","drop_missing_columns","show_empty_columns","undefined"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/packages/superset-ui-chart-controls/src/operators/timeComparePivotOperator.ts"],"sourcesContent":["/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  ensureIsArray,\n  getColumnLabel,\n  NumpyFunction,\n  PostProcessingPivot,\n  getXAxisLabel,\n} from '@superset-ui/core';\nimport { getMetricOffsetsMap, isTimeComparison } from './utils';\nimport { PostProcessingFactory } from './types';\n\nexport const timeComparePivotOperator: PostProcessingFactory<PostProcessingPivot> =\n  (formData, queryObject) => {\n    const metricOffsetMap = getMetricOffsetsMap(formData, queryObject);\n    const xAxisLabel = getXAxisLabel(formData);\n    const columns = queryObject.series_columns || queryObject.columns;\n\n    if (isTimeComparison(formData, queryObject) && xAxisLabel) {\n      const aggregates = Object.fromEntries(\n        [...metricOffsetMap.values(), ...metricOffsetMap.keys()].map(metric => [\n          metric,\n          // use the 'mean' aggregates to avoid drop NaN\n          { operator: 'mean' as NumpyFunction },\n        ]),\n      );\n\n      return {\n        operation: 'pivot',\n        options: {\n          index: [xAxisLabel],\n          columns: ensureIsArray(columns).map(getColumnLabel),\n          drop_missing_columns: !formData?.show_empty_columns,\n          aggregates,\n        },\n      };\n    }\n\n    return undefined;\n  };\n"]},"metadata":{},"sourceType":"module"}