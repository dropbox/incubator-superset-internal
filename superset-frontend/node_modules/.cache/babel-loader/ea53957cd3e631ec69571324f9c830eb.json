{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport rison from 'rison';\nimport {\nensureIsArray,\nFeatureFlag,\ngetSharedLabelColor,\nSupersetClient,\nt } from\n'@superset-ui/core';\nimport {\naddChart,\nremoveChart,\nrefreshChart } from\n'src/components/Chart/chartAction';\nimport { chart as initChart } from 'src/components/Chart/chartReducer';\nimport { applyDefaultFormData } from 'src/explore/store';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport {\nSAVE_TYPE_OVERWRITE,\nSAVE_TYPE_OVERWRITE_CONFIRMED } from\n'src/dashboard/util/constants';\nimport {\ngetCrossFiltersConfiguration,\nisCrossFiltersEnabled } from\n'src/dashboard/util/crossFilters';\nimport {\naddSuccessToast,\naddWarningToast,\naddDangerToast } from\n'src/components/MessageToasts/actions';\nimport serializeActiveFilterValues from 'src/dashboard/util/serializeActiveFilterValues';\nimport serializeFilterScopes from 'src/dashboard/util/serializeFilterScopes';\nimport { getActiveFilters } from 'src/dashboard/util/activeDashboardFilters';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport { logEvent } from 'src/logger/actions';\nimport { LOG_ACTIONS_CONFIRM_OVERWRITE_DASHBOARD_METADATA } from 'src/logger/LogUtils';\nimport { UPDATE_COMPONENTS_PARENTS_LIST } from './dashboardLayout';\nimport {\nsaveChartConfiguration,\ndashboardInfoChanged,\nSAVE_CHART_CONFIG_COMPLETE } from\n'./dashboardInfo';\nimport { fetchDatasourceMetadata } from './datasources';\nimport {\naddFilter,\nremoveFilter,\nupdateDirectPathToFilter } from\n'./dashboardFilters';\nimport { SET_FILTER_CONFIG_COMPLETE } from './nativeFilters';\nimport getOverwriteItems from '../util/getOverwriteItems';\n\nexport const SET_UNSAVED_CHANGES = 'SET_UNSAVED_CHANGES';\nexport function setUnsavedChanges(hasUnsavedChanges) {\n  return { type: SET_UNSAVED_CHANGES, payload: { hasUnsavedChanges } };\n}\n\nexport const ADD_SLICE = 'ADD_SLICE';\nexport function addSlice(slice) {\n  return { type: ADD_SLICE, slice };\n}\n\nexport const REMOVE_SLICE = 'REMOVE_SLICE';\nexport function removeSlice(sliceId) {\n  return { type: REMOVE_SLICE, sliceId };\n}\n\nexport const TOGGLE_FAVE_STAR = 'TOGGLE_FAVE_STAR';\nexport function toggleFaveStar(isStarred) {\n  return { type: TOGGLE_FAVE_STAR, isStarred };\n}\n\nexport function fetchFaveStar(id) {\n  return function fetchFaveStarThunk(dispatch) {\n    return SupersetClient.get({\n      endpoint: `/api/v1/dashboard/favorite_status/?q=${rison.encode([id])}` }).\n\n    then((_ref) => {var _json$result, _json$result$;let { json } = _ref;\n      dispatch(toggleFaveStar(!!(json != null && (_json$result = json.result) != null && (_json$result$ = _json$result[0]) != null && _json$result$.value)));\n    }).\n    catch(() =>\n    dispatch(\n    addDangerToast(\n    t(\n    'There was an issue fetching the favorite status of this dashboard.'))));\n\n\n\n\n  };\n}\n\nexport function saveFaveStar(id, isStarred) {\n  return function saveFaveStarThunk(dispatch) {\n    const endpoint = `/api/v1/dashboard/${id}/favorites/`;\n    const apiCall = isStarred ?\n    SupersetClient.delete({\n      endpoint }) :\n\n    SupersetClient.post({ endpoint });\n\n    return apiCall.\n    then(() => {\n      dispatch(toggleFaveStar(!isStarred));\n    }).\n    catch(() =>\n    dispatch(\n    addDangerToast(t('There was an issue favoriting this dashboard.'))));\n\n\n  };\n}\n\nexport const TOGGLE_PUBLISHED = 'TOGGLE_PUBLISHED';\nexport function togglePublished(isPublished) {\n  return { type: TOGGLE_PUBLISHED, isPublished };\n}\n\nexport function savePublished(id, isPublished) {\n  return function savePublishedThunk(dispatch) {\n    return SupersetClient.put({\n      endpoint: `/api/v1/dashboard/${id}`,\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        published: isPublished }) }).\n\n\n    then(() => {\n      dispatch(\n      addSuccessToast(\n      isPublished ?\n      t('This dashboard is now published') :\n      t('This dashboard is now hidden')));\n\n\n      dispatch(togglePublished(isPublished));\n    }).\n    catch(() => {\n      dispatch(\n      addDangerToast(\n      t('You do not have permissions to edit this dashboard.')));\n\n\n    });\n  };\n}\n\nexport const TOGGLE_EXPAND_SLICE = 'TOGGLE_EXPAND_SLICE';\nexport function toggleExpandSlice(sliceId) {\n  return { type: TOGGLE_EXPAND_SLICE, sliceId };\n}\n\nexport const UPDATE_CSS = 'UPDATE_CSS';\nexport function updateCss(css) {\n  return { type: UPDATE_CSS, css };\n}\n\nexport const SET_EDIT_MODE = 'SET_EDIT_MODE';\nexport function setEditMode(editMode) {\n  return { type: SET_EDIT_MODE, editMode };\n}\n\nexport const ON_CHANGE = 'ON_CHANGE';\nexport function onChange() {\n  return { type: ON_CHANGE };\n}\n\nexport const ON_SAVE = 'ON_SAVE';\nexport function onSave(lastModifiedTime) {\n  return { type: ON_SAVE, lastModifiedTime };\n}\n\nexport const SET_REFRESH_FREQUENCY = 'SET_REFRESH_FREQUENCY';\nexport function setRefreshFrequency(refreshFrequency, isPersistent) {if (isPersistent === void 0) {isPersistent = false;}\n  return { type: SET_REFRESH_FREQUENCY, refreshFrequency, isPersistent };\n}\n\nexport function saveDashboardRequestSuccess(lastModifiedTime) {\n  return (dispatch) => {\n    dispatch(onSave(lastModifiedTime));\n    // clear layout undo history\n    dispatch(UndoActionCreators.clearHistory());\n  };\n}\n\nexport const SET_OVERRIDE_CONFIRM = 'SET_OVERRIDE_CONFIRM';\nexport function setOverrideConfirm(overwriteConfirmMetadata) {\n  return {\n    type: SET_OVERRIDE_CONFIRM,\n    overwriteConfirmMetadata };\n\n}\n\nexport const SAVE_DASHBOARD_STARTED = 'SAVE_DASHBOARD_STARTED';\nexport function saveDashboardStarted() {\n  return { type: SAVE_DASHBOARD_STARTED };\n}\n\nexport const SAVE_DASHBOARD_FINISHED = 'SAVE_DASHBOARD_FINISHED';\nexport function saveDashboardFinished() {\n  return { type: SAVE_DASHBOARD_FINISHED };\n}\n\nexport function saveDashboardRequest(data, id, saveType) {\n  return (dispatch, getState) => {var _data$metadata, _data$metadata2, _data$metadata3, _data$metadata4, _data$metadata5, _data$metadata6, _data$metadata7, _data$metadata8, _data$metadata9, _context;\n    dispatch({ type: UPDATE_COMPONENTS_PARENTS_LIST });\n    dispatch(saveDashboardStarted());\n\n    const { dashboardFilters, dashboardLayout } = getState();\n    const layout = dashboardLayout.present;\n    Object.values(dashboardFilters).forEach((filter) => {var _layout$componentId;\n      const { chartId } = filter;\n      const componentId = filter.directPathToFilter.slice().pop();\n      const directPathToFilter = (((_layout$componentId = layout[componentId]) == null ? void 0 : _layout$componentId.parents) || []).slice();\n      directPathToFilter.push(componentId);\n      dispatch(updateDirectPathToFilter(chartId, directPathToFilter));\n    });\n    // serialize selected values for each filter field, grouped by filter id\n    const serializedFilters = serializeActiveFilterValues(getActiveFilters());\n    // serialize filter scope for each filter field, grouped by filter id\n    const serializedFilterScopes = serializeFilterScopes(dashboardFilters);\n    const {\n      certified_by,\n      certification_details,\n      css,\n      dashboard_title,\n      owners,\n      roles,\n      slug } =\n    data;\n\n    const hasId = (item) => item.id !== undefined;\n    const metadataCrossFiltersEnabled = (_data$metadata = data.metadata) == null ? void 0 : _data$metadata.cross_filters_enabled;\n    // making sure the data is what the backend expects\n    const cleanedData = {\n      ...data,\n      certified_by: certified_by || '',\n      certification_details:\n      certified_by && certification_details ? certification_details : '',\n      css: css || '',\n      dashboard_title: dashboard_title || t('[ untitled dashboard ]'),\n      owners: ensureIsArray(owners).map((o) => hasId(o) ? o.id : o),\n      roles: !isFeatureEnabled(FeatureFlag.DASHBOARD_RBAC) ?\n      undefined :\n      ensureIsArray(roles).map((r) => hasId(r) ? r.id : r),\n      slug: slug || null,\n      metadata: {\n        ...data.metadata,\n        color_namespace: ((_data$metadata2 = data.metadata) == null ? void 0 : _data$metadata2.color_namespace) || undefined,\n        color_scheme: ((_data$metadata3 = data.metadata) == null ? void 0 : _data$metadata3.color_scheme) || '',\n        color_scheme_domain: ((_data$metadata4 = data.metadata) == null ? void 0 : _data$metadata4.color_scheme_domain) || [],\n        expanded_slices: ((_data$metadata5 = data.metadata) == null ? void 0 : _data$metadata5.expanded_slices) || {},\n        label_colors: ((_data$metadata6 = data.metadata) == null ? void 0 : _data$metadata6.label_colors) || {},\n        shared_label_colors: ((_data$metadata7 = data.metadata) == null ? void 0 : _data$metadata7.shared_label_colors) || {},\n        refresh_frequency: ((_data$metadata8 = data.metadata) == null ? void 0 : _data$metadata8.refresh_frequency) || 0,\n        timed_refresh_immune_slices:\n        ((_data$metadata9 = data.metadata) == null ? void 0 : _data$metadata9.timed_refresh_immune_slices) || [],\n        // cross-filters should be enabled by default\n        cross_filters_enabled: isCrossFiltersEnabled(\n        metadataCrossFiltersEnabled) } };\n\n\n\n\n    const handleChartConfiguration = () => {\n      const {\n        dashboardLayout,\n        charts,\n        dashboardInfo: { metadata } } =\n      getState();\n      return getCrossFiltersConfiguration(\n      dashboardLayout.present,\n      metadata,\n      charts);\n\n    };\n\n    const onCopySuccess = (response) => {\n      const lastModifiedTime = response.json.result.last_modified_time;\n      if (lastModifiedTime) {\n        dispatch(saveDashboardRequestSuccess(lastModifiedTime));\n      }\n      if (isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS)) {\n        const { chartConfiguration, globalChartConfiguration } =\n        handleChartConfiguration();\n        dispatch(\n        saveChartConfiguration({\n          chartConfiguration,\n          globalChartConfiguration }));\n\n\n      }\n      dispatch(saveDashboardFinished());\n      dispatch(addSuccessToast(t('This dashboard was saved successfully.')));\n      return response;\n    };\n\n    const onUpdateSuccess = (response) => {\n      const updatedDashboard = response.json.result;\n      const lastModifiedTime = response.json.last_modified_time;\n      // syncing with the backend transformations of the metadata\n      if (updatedDashboard.json_metadata) {\n        const metadata = JSON.parse(updatedDashboard.json_metadata);\n        dispatch(\n        dashboardInfoChanged({\n          metadata }));\n\n\n        if (metadata.chart_configuration) {\n          dispatch({\n            type: SAVE_CHART_CONFIG_COMPLETE,\n            chartConfiguration: metadata.chart_configuration });\n\n        }\n        if (metadata.native_filter_configuration) {\n          dispatch({\n            type: SET_FILTER_CONFIG_COMPLETE,\n            filterConfig: metadata.native_filter_configuration });\n\n        }\n      }\n      if (lastModifiedTime) {\n        dispatch(saveDashboardRequestSuccess(lastModifiedTime));\n      }\n      dispatch(saveDashboardFinished());\n      // redirect to the new slug or id\n      window.history.pushState(\n      { event: 'dashboard_properties_changed' },\n      '',\n      `/superset/dashboard/${slug || id}/`);\n\n\n      dispatch(addSuccessToast(t('This dashboard was saved successfully.')));\n      dispatch(setOverrideConfirm(undefined));\n      return response;\n    };\n\n    const onError = async (response) => {\n      const { error, message } = await getClientErrorObject(response);\n      let errorText = t('Sorry, an unknown error occurred');\n\n      if (error) {\n        errorText = t(\n        'Sorry, there was an error saving this dashboard: %s',\n        error);\n\n      }\n      if (typeof message === 'string' && message === 'Forbidden') {\n        errorText = t('You do not have permission to edit this dashboard');\n      }\n      dispatch(saveDashboardFinished());\n      dispatch(addDangerToast(errorText));\n    };\n\n    if (\n    _includesInstanceProperty(_context = [SAVE_TYPE_OVERWRITE, SAVE_TYPE_OVERWRITE_CONFIRMED]).call(_context, saveType))\n    {\n      let chartConfiguration = {};\n      let globalChartConfiguration = {};\n      if (isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS)) {\n        ({ chartConfiguration, globalChartConfiguration } =\n        handleChartConfiguration());\n      }\n      const updatedDashboard =\n      saveType === SAVE_TYPE_OVERWRITE_CONFIRMED ?\n      data :\n      {\n        certified_by: cleanedData.certified_by,\n        certification_details: cleanedData.certification_details,\n        css: cleanedData.css,\n        dashboard_title: cleanedData.dashboard_title,\n        slug: cleanedData.slug,\n        owners: cleanedData.owners,\n        roles: cleanedData.roles,\n        json_metadata: safeStringify({\n          ...((cleanedData == null ? void 0 : cleanedData.metadata) || {}),\n          default_filters: safeStringify(serializedFilters),\n          filter_scopes: serializedFilterScopes,\n          chart_configuration: chartConfiguration,\n          global_chart_configuration: globalChartConfiguration }) };\n\n\n\n      const updateDashboard = () =>\n      SupersetClient.put({\n        endpoint: `/api/v1/dashboard/${id}`,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updatedDashboard) }).\n\n      then((response) => onUpdateSuccess(response)).\n      catch((response) => onError(response));\n      return new Promise((resolve, reject) => {\n        if (\n        !isFeatureEnabled(FeatureFlag.CONFIRM_DASHBOARD_DIFF) ||\n        saveType === SAVE_TYPE_OVERWRITE_CONFIRMED)\n        {\n          // skip overwrite precheck\n          resolve();\n          return;\n        }\n\n        // precheck for overwrite items\n        SupersetClient.get({\n          endpoint: `/api/v1/dashboard/${id}` }).\n        then((response) => {\n          const dashboard = response.json.result;\n          const overwriteConfirmItems = getOverwriteItems(\n          dashboard,\n          updatedDashboard);\n\n          if (overwriteConfirmItems.length > 0) {\n            dispatch(\n            setOverrideConfirm({\n              updatedAt: dashboard.changed_on,\n              updatedBy: dashboard.changed_by_name,\n              overwriteConfirmItems,\n              dashboardId: id,\n              data: updatedDashboard }));\n\n\n            return reject(overwriteConfirmItems);\n          }\n          return resolve();\n        });\n      }).\n      then(updateDashboard).\n      catch((overwriteConfirmItems) => {\n        const errorText = t('Please confirm the overwrite values.');\n        dispatch(\n        logEvent(LOG_ACTIONS_CONFIRM_OVERWRITE_DASHBOARD_METADATA, {\n          dashboard_id: id,\n          items: overwriteConfirmItems }));\n\n\n        dispatch(addDangerToast(errorText));\n      });\n    }\n    // changing the data as the endpoint requires\n    if ('positions' in cleanedData && !('positions' in cleanedData.metadata)) {\n      cleanedData.metadata.positions = cleanedData.positions;\n    }\n    cleanedData.metadata.default_filters = safeStringify(serializedFilters);\n    cleanedData.metadata.filter_scopes = serializedFilterScopes;\n    const copyPayload = {\n      dashboard_title: cleanedData.dashboard_title,\n      css: cleanedData.css,\n      duplicate_slices: cleanedData.duplicate_slices,\n      json_metadata: JSON.stringify(cleanedData.metadata) };\n\n\n    return SupersetClient.post({\n      endpoint: `/api/v1/dashboard/${id}/copy/`,\n      jsonPayload: copyPayload }).\n\n    then((response) => onCopySuccess(response)).\n    catch((response) => onError(response));\n  };\n}\n\nexport function fetchCharts(\nchartList,\nforce,\ninterval,\ndashboardId)\n{if (chartList === void 0) {chartList = [];}if (force === void 0) {force = false;}if (interval === void 0) {interval = 0;}\n  return (dispatch, getState) => {\n    if (!interval) {\n      chartList.forEach((chartKey) =>\n      dispatch(refreshChart(chartKey, force, dashboardId)));\n\n      return;\n    }\n\n    const { metadata: meta } = getState().dashboardInfo;\n    const refreshTime = Math.max(interval, meta.stagger_time || 5000); // default 5 seconds\n    if (typeof meta.stagger_refresh !== 'boolean') {\n      meta.stagger_refresh =\n      meta.stagger_refresh === undefined ?\n      true :\n      meta.stagger_refresh === 'true';\n    }\n    const delay = meta.stagger_refresh ?\n    refreshTime / (chartList.length - 1) :\n    0;\n    chartList.forEach((chartKey, i) => {\n      setTimeout(\n      () => dispatch(refreshChart(chartKey, force, dashboardId)),\n      delay * i);\n\n    });\n  };\n}\n\nconst refreshCharts = (chartList, force, interval, dashboardId, dispatch) =>\nnew Promise((resolve) => {\n  dispatch(fetchCharts(chartList, force, interval, dashboardId));\n  resolve();\n});\n\nexport const ON_FILTERS_REFRESH = 'ON_FILTERS_REFRESH';\nexport function onFiltersRefresh() {\n  return { type: ON_FILTERS_REFRESH };\n}\n\nexport const ON_FILTERS_REFRESH_SUCCESS = 'ON_FILTERS_REFRESH_SUCCESS';\nexport function onFiltersRefreshSuccess() {\n  return { type: ON_FILTERS_REFRESH_SUCCESS };\n}\n\nexport const ON_REFRESH_SUCCESS = 'ON_REFRESH_SUCCESS';\nexport function onRefreshSuccess() {\n  return { type: ON_REFRESH_SUCCESS };\n}\n\nexport const ON_REFRESH = 'ON_REFRESH';\nexport function onRefresh(\nchartList,\nforce,\ninterval,\ndashboardId)\n{if (chartList === void 0) {chartList = [];}if (force === void 0) {force = false;}if (interval === void 0) {interval = 0;}\n  return (dispatch) => {\n    dispatch({ type: ON_REFRESH });\n    refreshCharts(chartList, force, interval, dashboardId, dispatch).then(\n    () => {\n      dispatch(onRefreshSuccess());\n      dispatch(onFiltersRefresh());\n    });\n\n  };\n}\n\nexport const SHOW_BUILDER_PANE = 'SHOW_BUILDER_PANE';\nexport function showBuilderPane() {\n  return { type: SHOW_BUILDER_PANE };\n}\n\nexport function addSliceToDashboard(id, component) {\n  return (dispatch, getState) => {\n    const { sliceEntities } = getState();\n    const selectedSlice = sliceEntities.slices[id];\n    if (!selectedSlice) {\n      return dispatch(\n      addWarningToast(\n      'Sorry, there is no chart definition associated with the chart trying to be added.'));\n\n\n    }\n    const form_data = {\n      ...selectedSlice.form_data,\n      slice_id: selectedSlice.slice_id };\n\n    const newChart = {\n      ...initChart,\n      id,\n      form_data: applyDefaultFormData(form_data) };\n\n\n    return Promise.all([\n    dispatch(addChart(newChart, id)),\n    dispatch(fetchDatasourceMetadata(form_data.datasource))]).\n    then(() => {\n      dispatch(addSlice(selectedSlice));\n\n      if (selectedSlice && selectedSlice.viz_type === 'filter_box') {\n        dispatch(addFilter(id, component, selectedSlice.form_data));\n      }\n    });\n  };\n}\n\nexport function removeSliceFromDashboard(id) {\n  return (dispatch, getState) => {\n    const sliceEntity = getState().sliceEntities.slices[id];\n    if (sliceEntity && sliceEntity.viz_type === 'filter_box') {\n      dispatch(removeFilter(id));\n    }\n\n    dispatch(removeSlice(id));\n    dispatch(removeChart(id));\n    getSharedLabelColor().removeSlice(id);\n  };\n}\n\nexport const SET_COLOR_SCHEME = 'SET_COLOR_SCHEME';\nexport function setColorScheme(colorScheme) {\n  return { type: SET_COLOR_SCHEME, colorScheme };\n}\n\nexport const SET_DIRECT_PATH = 'SET_DIRECT_PATH';\nexport function setDirectPathToChild(path) {\n  return { type: SET_DIRECT_PATH, path };\n}\n\nexport const SET_ACTIVE_TABS = 'SET_ACTIVE_TABS';\nexport function setActiveTabs(tabId, prevTabId) {\n  return { type: SET_ACTIVE_TABS, tabId, prevTabId };\n}\n\nexport const SET_FOCUSED_FILTER_FIELD = 'SET_FOCUSED_FILTER_FIELD';\nexport function setFocusedFilterField(chartId, column) {\n  return { type: SET_FOCUSED_FILTER_FIELD, chartId, column };\n}\n\nexport const UNSET_FOCUSED_FILTER_FIELD = 'UNSET_FOCUSED_FILTER_FIELD';\nexport function unsetFocusedFilterField(chartId, column) {\n  return { type: UNSET_FOCUSED_FILTER_FIELD, chartId, column };\n}\n\nexport const SET_FULL_SIZE_CHART_ID = 'SET_FULL_SIZE_CHART_ID';\nexport function setFullSizeChartId(chartId) {\n  return { type: SET_FULL_SIZE_CHART_ID, chartId };\n}\n\n// Undo history ---------------------------------------------------------------\nexport const SET_MAX_UNDO_HISTORY_EXCEEDED = 'SET_MAX_UNDO_HISTORY_EXCEEDED';\nexport function setMaxUndoHistoryExceeded(maxUndoHistoryExceeded) {if (maxUndoHistoryExceeded === void 0) {maxUndoHistoryExceeded = true;}\n  return {\n    type: SET_MAX_UNDO_HISTORY_EXCEEDED,\n    payload: { maxUndoHistoryExceeded } };\n\n}\n\nexport function maxUndoHistoryToast() {\n  return (dispatch, getState) => {\n    const { dashboardLayout } = getState();\n    const historyLength = dashboardLayout.past.length;\n\n    return dispatch(\n    addWarningToast(\n    t(\n    'You have used all %(historyLength)s undo slots and will not be able to fully undo subsequent actions. You may save your current state to reset the history.',\n    { historyLength })));\n\n\n\n  };\n}\n\nexport const SET_DATASETS_STATUS = 'SET_DATASETS_STATUS';\nexport function setDatasetsStatus(status) {\n  return {\n    type: SET_DATASETS_STATUS,\n    status };\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SET_UNSAVED_CHANGES, \"SET_UNSAVED_CHANGES\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setUnsavedChanges, \"setUnsavedChanges\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ADD_SLICE, \"ADD_SLICE\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(addSlice, \"addSlice\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(REMOVE_SLICE, \"REMOVE_SLICE\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(removeSlice, \"removeSlice\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(TOGGLE_FAVE_STAR, \"TOGGLE_FAVE_STAR\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(toggleFaveStar, \"toggleFaveStar\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(fetchFaveStar, \"fetchFaveStar\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveFaveStar, \"saveFaveStar\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(TOGGLE_PUBLISHED, \"TOGGLE_PUBLISHED\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(togglePublished, \"togglePublished\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(savePublished, \"savePublished\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(TOGGLE_EXPAND_SLICE, \"TOGGLE_EXPAND_SLICE\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(toggleExpandSlice, \"toggleExpandSlice\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(UPDATE_CSS, \"UPDATE_CSS\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(updateCss, \"updateCss\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_EDIT_MODE, \"SET_EDIT_MODE\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setEditMode, \"setEditMode\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_CHANGE, \"ON_CHANGE\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onChange, \"onChange\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_SAVE, \"ON_SAVE\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onSave, \"onSave\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_REFRESH_FREQUENCY, \"SET_REFRESH_FREQUENCY\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setRefreshFrequency, \"setRefreshFrequency\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveDashboardRequestSuccess, \"saveDashboardRequestSuccess\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_OVERRIDE_CONFIRM, \"SET_OVERRIDE_CONFIRM\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setOverrideConfirm, \"setOverrideConfirm\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SAVE_DASHBOARD_STARTED, \"SAVE_DASHBOARD_STARTED\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveDashboardStarted, \"saveDashboardStarted\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SAVE_DASHBOARD_FINISHED, \"SAVE_DASHBOARD_FINISHED\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveDashboardFinished, \"saveDashboardFinished\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveDashboardRequest, \"saveDashboardRequest\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(fetchCharts, \"fetchCharts\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(refreshCharts, \"refreshCharts\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_FILTERS_REFRESH, \"ON_FILTERS_REFRESH\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onFiltersRefresh, \"onFiltersRefresh\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_FILTERS_REFRESH_SUCCESS, \"ON_FILTERS_REFRESH_SUCCESS\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onFiltersRefreshSuccess, \"onFiltersRefreshSuccess\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_REFRESH_SUCCESS, \"ON_REFRESH_SUCCESS\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onRefreshSuccess, \"onRefreshSuccess\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_REFRESH, \"ON_REFRESH\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onRefresh, \"onRefresh\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SHOW_BUILDER_PANE, \"SHOW_BUILDER_PANE\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(showBuilderPane, \"showBuilderPane\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(addSliceToDashboard, \"addSliceToDashboard\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(removeSliceFromDashboard, \"removeSliceFromDashboard\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_COLOR_SCHEME, \"SET_COLOR_SCHEME\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setColorScheme, \"setColorScheme\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_DIRECT_PATH, \"SET_DIRECT_PATH\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setDirectPathToChild, \"setDirectPathToChild\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_ACTIVE_TABS, \"SET_ACTIVE_TABS\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setActiveTabs, \"setActiveTabs\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_FOCUSED_FILTER_FIELD, \"SET_FOCUSED_FILTER_FIELD\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setFocusedFilterField, \"setFocusedFilterField\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(UNSET_FOCUSED_FILTER_FIELD, \"UNSET_FOCUSED_FILTER_FIELD\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(unsetFocusedFilterField, \"unsetFocusedFilterField\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_FULL_SIZE_CHART_ID, \"SET_FULL_SIZE_CHART_ID\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setFullSizeChartId, \"setFullSizeChartId\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_MAX_UNDO_HISTORY_EXCEEDED, \"SET_MAX_UNDO_HISTORY_EXCEEDED\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setMaxUndoHistoryExceeded, \"setMaxUndoHistoryExceeded\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(maxUndoHistoryToast, \"maxUndoHistoryToast\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_DATASETS_STATUS, \"SET_DATASETS_STATUS\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setDatasetsStatus, \"setDatasetsStatus\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ActionCreators","UndoActionCreators","rison","ensureIsArray","FeatureFlag","getSharedLabelColor","SupersetClient","t","addChart","removeChart","refreshChart","chart","initChart","applyDefaultFormData","getClientErrorObject","SAVE_TYPE_OVERWRITE","SAVE_TYPE_OVERWRITE_CONFIRMED","getCrossFiltersConfiguration","isCrossFiltersEnabled","addSuccessToast","addWarningToast","addDangerToast","serializeActiveFilterValues","serializeFilterScopes","getActiveFilters","safeStringify","isFeatureEnabled","logEvent","LOG_ACTIONS_CONFIRM_OVERWRITE_DASHBOARD_METADATA","UPDATE_COMPONENTS_PARENTS_LIST","saveChartConfiguration","dashboardInfoChanged","SAVE_CHART_CONFIG_COMPLETE","fetchDatasourceMetadata","addFilter","removeFilter","updateDirectPathToFilter","SET_FILTER_CONFIG_COMPLETE","getOverwriteItems","SET_UNSAVED_CHANGES","setUnsavedChanges","hasUnsavedChanges","type","payload","ADD_SLICE","addSlice","slice","REMOVE_SLICE","removeSlice","sliceId","TOGGLE_FAVE_STAR","toggleFaveStar","isStarred","fetchFaveStar","id","fetchFaveStarThunk","dispatch","get","endpoint","encode","then","json","result","value","catch","saveFaveStar","saveFaveStarThunk","apiCall","delete","post","TOGGLE_PUBLISHED","togglePublished","isPublished","savePublished","savePublishedThunk","put","headers","body","JSON","stringify","published","TOGGLE_EXPAND_SLICE","toggleExpandSlice","UPDATE_CSS","updateCss","css","SET_EDIT_MODE","setEditMode","editMode","ON_CHANGE","onChange","ON_SAVE","onSave","lastModifiedTime","SET_REFRESH_FREQUENCY","setRefreshFrequency","refreshFrequency","isPersistent","saveDashboardRequestSuccess","clearHistory","SET_OVERRIDE_CONFIRM","setOverrideConfirm","overwriteConfirmMetadata","SAVE_DASHBOARD_STARTED","saveDashboardStarted","SAVE_DASHBOARD_FINISHED","saveDashboardFinished","saveDashboardRequest","data","saveType","getState","dashboardFilters","dashboardLayout","layout","present","Object","values","forEach","filter","chartId","componentId","directPathToFilter","pop","parents","push","serializedFilters","serializedFilterScopes","certified_by","certification_details","dashboard_title","owners","roles","slug","hasId","item","undefined","metadataCrossFiltersEnabled","metadata","cross_filters_enabled","cleanedData","map","o","DASHBOARD_RBAC","r","color_namespace","color_scheme","color_scheme_domain","expanded_slices","label_colors","shared_label_colors","refresh_frequency","timed_refresh_immune_slices","handleChartConfiguration","charts","dashboardInfo","onCopySuccess","response","last_modified_time","DASHBOARD_CROSS_FILTERS","chartConfiguration","globalChartConfiguration","onUpdateSuccess","updatedDashboard","json_metadata","parse","chart_configuration","native_filter_configuration","filterConfig","window","history","pushState","event","onError","error","message","errorText","default_filters","filter_scopes","global_chart_configuration","updateDashboard","Promise","resolve","reject","CONFIRM_DASHBOARD_DIFF","dashboard","overwriteConfirmItems","length","updatedAt","changed_on","updatedBy","changed_by_name","dashboardId","dashboard_id","items","positions","copyPayload","duplicate_slices","jsonPayload","fetchCharts","chartList","force","interval","chartKey","meta","refreshTime","Math","max","stagger_time","stagger_refresh","delay","i","setTimeout","refreshCharts","ON_FILTERS_REFRESH","onFiltersRefresh","ON_FILTERS_REFRESH_SUCCESS","onFiltersRefreshSuccess","ON_REFRESH_SUCCESS","onRefreshSuccess","ON_REFRESH","onRefresh","SHOW_BUILDER_PANE","showBuilderPane","addSliceToDashboard","component","sliceEntities","selectedSlice","slices","form_data","slice_id","newChart","all","datasource","viz_type","removeSliceFromDashboard","sliceEntity","SET_COLOR_SCHEME","setColorScheme","colorScheme","SET_DIRECT_PATH","setDirectPathToChild","path","SET_ACTIVE_TABS","setActiveTabs","tabId","prevTabId","SET_FOCUSED_FILTER_FIELD","setFocusedFilterField","column","UNSET_FOCUSED_FILTER_FIELD","unsetFocusedFilterField","SET_FULL_SIZE_CHART_ID","setFullSizeChartId","SET_MAX_UNDO_HISTORY_EXCEEDED","setMaxUndoHistoryExceeded","maxUndoHistoryExceeded","maxUndoHistoryToast","historyLength","past","SET_DATASETS_STATUS","setDatasetsStatus","status"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardState.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport rison from 'rison';\nimport {\n  ensureIsArray,\n  FeatureFlag,\n  getSharedLabelColor,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\nimport {\n  addChart,\n  removeChart,\n  refreshChart,\n} from 'src/components/Chart/chartAction';\nimport { chart as initChart } from 'src/components/Chart/chartReducer';\nimport { applyDefaultFormData } from 'src/explore/store';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport {\n  SAVE_TYPE_OVERWRITE,\n  SAVE_TYPE_OVERWRITE_CONFIRMED,\n} from 'src/dashboard/util/constants';\nimport {\n  getCrossFiltersConfiguration,\n  isCrossFiltersEnabled,\n} from 'src/dashboard/util/crossFilters';\nimport {\n  addSuccessToast,\n  addWarningToast,\n  addDangerToast,\n} from 'src/components/MessageToasts/actions';\nimport serializeActiveFilterValues from 'src/dashboard/util/serializeActiveFilterValues';\nimport serializeFilterScopes from 'src/dashboard/util/serializeFilterScopes';\nimport { getActiveFilters } from 'src/dashboard/util/activeDashboardFilters';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport { logEvent } from 'src/logger/actions';\nimport { LOG_ACTIONS_CONFIRM_OVERWRITE_DASHBOARD_METADATA } from 'src/logger/LogUtils';\nimport { UPDATE_COMPONENTS_PARENTS_LIST } from './dashboardLayout';\nimport {\n  saveChartConfiguration,\n  dashboardInfoChanged,\n  SAVE_CHART_CONFIG_COMPLETE,\n} from './dashboardInfo';\nimport { fetchDatasourceMetadata } from './datasources';\nimport {\n  addFilter,\n  removeFilter,\n  updateDirectPathToFilter,\n} from './dashboardFilters';\nimport { SET_FILTER_CONFIG_COMPLETE } from './nativeFilters';\nimport getOverwriteItems from '../util/getOverwriteItems';\n\nexport const SET_UNSAVED_CHANGES = 'SET_UNSAVED_CHANGES';\nexport function setUnsavedChanges(hasUnsavedChanges) {\n  return { type: SET_UNSAVED_CHANGES, payload: { hasUnsavedChanges } };\n}\n\nexport const ADD_SLICE = 'ADD_SLICE';\nexport function addSlice(slice) {\n  return { type: ADD_SLICE, slice };\n}\n\nexport const REMOVE_SLICE = 'REMOVE_SLICE';\nexport function removeSlice(sliceId) {\n  return { type: REMOVE_SLICE, sliceId };\n}\n\nexport const TOGGLE_FAVE_STAR = 'TOGGLE_FAVE_STAR';\nexport function toggleFaveStar(isStarred) {\n  return { type: TOGGLE_FAVE_STAR, isStarred };\n}\n\nexport function fetchFaveStar(id) {\n  return function fetchFaveStarThunk(dispatch) {\n    return SupersetClient.get({\n      endpoint: `/api/v1/dashboard/favorite_status/?q=${rison.encode([id])}`,\n    })\n      .then(({ json }) => {\n        dispatch(toggleFaveStar(!!json?.result?.[0]?.value));\n      })\n      .catch(() =>\n        dispatch(\n          addDangerToast(\n            t(\n              'There was an issue fetching the favorite status of this dashboard.',\n            ),\n          ),\n        ),\n      );\n  };\n}\n\nexport function saveFaveStar(id, isStarred) {\n  return function saveFaveStarThunk(dispatch) {\n    const endpoint = `/api/v1/dashboard/${id}/favorites/`;\n    const apiCall = isStarred\n      ? SupersetClient.delete({\n          endpoint,\n        })\n      : SupersetClient.post({ endpoint });\n\n    return apiCall\n      .then(() => {\n        dispatch(toggleFaveStar(!isStarred));\n      })\n      .catch(() =>\n        dispatch(\n          addDangerToast(t('There was an issue favoriting this dashboard.')),\n        ),\n      );\n  };\n}\n\nexport const TOGGLE_PUBLISHED = 'TOGGLE_PUBLISHED';\nexport function togglePublished(isPublished) {\n  return { type: TOGGLE_PUBLISHED, isPublished };\n}\n\nexport function savePublished(id, isPublished) {\n  return function savePublishedThunk(dispatch) {\n    return SupersetClient.put({\n      endpoint: `/api/v1/dashboard/${id}`,\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        published: isPublished,\n      }),\n    })\n      .then(() => {\n        dispatch(\n          addSuccessToast(\n            isPublished\n              ? t('This dashboard is now published')\n              : t('This dashboard is now hidden'),\n          ),\n        );\n        dispatch(togglePublished(isPublished));\n      })\n      .catch(() => {\n        dispatch(\n          addDangerToast(\n            t('You do not have permissions to edit this dashboard.'),\n          ),\n        );\n      });\n  };\n}\n\nexport const TOGGLE_EXPAND_SLICE = 'TOGGLE_EXPAND_SLICE';\nexport function toggleExpandSlice(sliceId) {\n  return { type: TOGGLE_EXPAND_SLICE, sliceId };\n}\n\nexport const UPDATE_CSS = 'UPDATE_CSS';\nexport function updateCss(css) {\n  return { type: UPDATE_CSS, css };\n}\n\nexport const SET_EDIT_MODE = 'SET_EDIT_MODE';\nexport function setEditMode(editMode) {\n  return { type: SET_EDIT_MODE, editMode };\n}\n\nexport const ON_CHANGE = 'ON_CHANGE';\nexport function onChange() {\n  return { type: ON_CHANGE };\n}\n\nexport const ON_SAVE = 'ON_SAVE';\nexport function onSave(lastModifiedTime) {\n  return { type: ON_SAVE, lastModifiedTime };\n}\n\nexport const SET_REFRESH_FREQUENCY = 'SET_REFRESH_FREQUENCY';\nexport function setRefreshFrequency(refreshFrequency, isPersistent = false) {\n  return { type: SET_REFRESH_FREQUENCY, refreshFrequency, isPersistent };\n}\n\nexport function saveDashboardRequestSuccess(lastModifiedTime) {\n  return dispatch => {\n    dispatch(onSave(lastModifiedTime));\n    // clear layout undo history\n    dispatch(UndoActionCreators.clearHistory());\n  };\n}\n\nexport const SET_OVERRIDE_CONFIRM = 'SET_OVERRIDE_CONFIRM';\nexport function setOverrideConfirm(overwriteConfirmMetadata) {\n  return {\n    type: SET_OVERRIDE_CONFIRM,\n    overwriteConfirmMetadata,\n  };\n}\n\nexport const SAVE_DASHBOARD_STARTED = 'SAVE_DASHBOARD_STARTED';\nexport function saveDashboardStarted() {\n  return { type: SAVE_DASHBOARD_STARTED };\n}\n\nexport const SAVE_DASHBOARD_FINISHED = 'SAVE_DASHBOARD_FINISHED';\nexport function saveDashboardFinished() {\n  return { type: SAVE_DASHBOARD_FINISHED };\n}\n\nexport function saveDashboardRequest(data, id, saveType) {\n  return (dispatch, getState) => {\n    dispatch({ type: UPDATE_COMPONENTS_PARENTS_LIST });\n    dispatch(saveDashboardStarted());\n\n    const { dashboardFilters, dashboardLayout } = getState();\n    const layout = dashboardLayout.present;\n    Object.values(dashboardFilters).forEach(filter => {\n      const { chartId } = filter;\n      const componentId = filter.directPathToFilter.slice().pop();\n      const directPathToFilter = (layout[componentId]?.parents || []).slice();\n      directPathToFilter.push(componentId);\n      dispatch(updateDirectPathToFilter(chartId, directPathToFilter));\n    });\n    // serialize selected values for each filter field, grouped by filter id\n    const serializedFilters = serializeActiveFilterValues(getActiveFilters());\n    // serialize filter scope for each filter field, grouped by filter id\n    const serializedFilterScopes = serializeFilterScopes(dashboardFilters);\n    const {\n      certified_by,\n      certification_details,\n      css,\n      dashboard_title,\n      owners,\n      roles,\n      slug,\n    } = data;\n\n    const hasId = item => item.id !== undefined;\n    const metadataCrossFiltersEnabled = data.metadata?.cross_filters_enabled;\n    // making sure the data is what the backend expects\n    const cleanedData = {\n      ...data,\n      certified_by: certified_by || '',\n      certification_details:\n        certified_by && certification_details ? certification_details : '',\n      css: css || '',\n      dashboard_title: dashboard_title || t('[ untitled dashboard ]'),\n      owners: ensureIsArray(owners).map(o => (hasId(o) ? o.id : o)),\n      roles: !isFeatureEnabled(FeatureFlag.DASHBOARD_RBAC)\n        ? undefined\n        : ensureIsArray(roles).map(r => (hasId(r) ? r.id : r)),\n      slug: slug || null,\n      metadata: {\n        ...data.metadata,\n        color_namespace: data.metadata?.color_namespace || undefined,\n        color_scheme: data.metadata?.color_scheme || '',\n        color_scheme_domain: data.metadata?.color_scheme_domain || [],\n        expanded_slices: data.metadata?.expanded_slices || {},\n        label_colors: data.metadata?.label_colors || {},\n        shared_label_colors: data.metadata?.shared_label_colors || {},\n        refresh_frequency: data.metadata?.refresh_frequency || 0,\n        timed_refresh_immune_slices:\n          data.metadata?.timed_refresh_immune_slices || [],\n        // cross-filters should be enabled by default\n        cross_filters_enabled: isCrossFiltersEnabled(\n          metadataCrossFiltersEnabled,\n        ),\n      },\n    };\n\n    const handleChartConfiguration = () => {\n      const {\n        dashboardLayout,\n        charts,\n        dashboardInfo: { metadata },\n      } = getState();\n      return getCrossFiltersConfiguration(\n        dashboardLayout.present,\n        metadata,\n        charts,\n      );\n    };\n\n    const onCopySuccess = response => {\n      const lastModifiedTime = response.json.result.last_modified_time;\n      if (lastModifiedTime) {\n        dispatch(saveDashboardRequestSuccess(lastModifiedTime));\n      }\n      if (isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS)) {\n        const { chartConfiguration, globalChartConfiguration } =\n          handleChartConfiguration();\n        dispatch(\n          saveChartConfiguration({\n            chartConfiguration,\n            globalChartConfiguration,\n          }),\n        );\n      }\n      dispatch(saveDashboardFinished());\n      dispatch(addSuccessToast(t('This dashboard was saved successfully.')));\n      return response;\n    };\n\n    const onUpdateSuccess = response => {\n      const updatedDashboard = response.json.result;\n      const lastModifiedTime = response.json.last_modified_time;\n      // syncing with the backend transformations of the metadata\n      if (updatedDashboard.json_metadata) {\n        const metadata = JSON.parse(updatedDashboard.json_metadata);\n        dispatch(\n          dashboardInfoChanged({\n            metadata,\n          }),\n        );\n        if (metadata.chart_configuration) {\n          dispatch({\n            type: SAVE_CHART_CONFIG_COMPLETE,\n            chartConfiguration: metadata.chart_configuration,\n          });\n        }\n        if (metadata.native_filter_configuration) {\n          dispatch({\n            type: SET_FILTER_CONFIG_COMPLETE,\n            filterConfig: metadata.native_filter_configuration,\n          });\n        }\n      }\n      if (lastModifiedTime) {\n        dispatch(saveDashboardRequestSuccess(lastModifiedTime));\n      }\n      dispatch(saveDashboardFinished());\n      // redirect to the new slug or id\n      window.history.pushState(\n        { event: 'dashboard_properties_changed' },\n        '',\n        `/superset/dashboard/${slug || id}/`,\n      );\n\n      dispatch(addSuccessToast(t('This dashboard was saved successfully.')));\n      dispatch(setOverrideConfirm(undefined));\n      return response;\n    };\n\n    const onError = async response => {\n      const { error, message } = await getClientErrorObject(response);\n      let errorText = t('Sorry, an unknown error occurred');\n\n      if (error) {\n        errorText = t(\n          'Sorry, there was an error saving this dashboard: %s',\n          error,\n        );\n      }\n      if (typeof message === 'string' && message === 'Forbidden') {\n        errorText = t('You do not have permission to edit this dashboard');\n      }\n      dispatch(saveDashboardFinished());\n      dispatch(addDangerToast(errorText));\n    };\n\n    if (\n      [SAVE_TYPE_OVERWRITE, SAVE_TYPE_OVERWRITE_CONFIRMED].includes(saveType)\n    ) {\n      let chartConfiguration = {};\n      let globalChartConfiguration = {};\n      if (isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS)) {\n        ({ chartConfiguration, globalChartConfiguration } =\n          handleChartConfiguration());\n      }\n      const updatedDashboard =\n        saveType === SAVE_TYPE_OVERWRITE_CONFIRMED\n          ? data\n          : {\n              certified_by: cleanedData.certified_by,\n              certification_details: cleanedData.certification_details,\n              css: cleanedData.css,\n              dashboard_title: cleanedData.dashboard_title,\n              slug: cleanedData.slug,\n              owners: cleanedData.owners,\n              roles: cleanedData.roles,\n              json_metadata: safeStringify({\n                ...(cleanedData?.metadata || {}),\n                default_filters: safeStringify(serializedFilters),\n                filter_scopes: serializedFilterScopes,\n                chart_configuration: chartConfiguration,\n                global_chart_configuration: globalChartConfiguration,\n              }),\n            };\n\n      const updateDashboard = () =>\n        SupersetClient.put({\n          endpoint: `/api/v1/dashboard/${id}`,\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(updatedDashboard),\n        })\n          .then(response => onUpdateSuccess(response))\n          .catch(response => onError(response));\n      return new Promise((resolve, reject) => {\n        if (\n          !isFeatureEnabled(FeatureFlag.CONFIRM_DASHBOARD_DIFF) ||\n          saveType === SAVE_TYPE_OVERWRITE_CONFIRMED\n        ) {\n          // skip overwrite precheck\n          resolve();\n          return;\n        }\n\n        // precheck for overwrite items\n        SupersetClient.get({\n          endpoint: `/api/v1/dashboard/${id}`,\n        }).then(response => {\n          const dashboard = response.json.result;\n          const overwriteConfirmItems = getOverwriteItems(\n            dashboard,\n            updatedDashboard,\n          );\n          if (overwriteConfirmItems.length > 0) {\n            dispatch(\n              setOverrideConfirm({\n                updatedAt: dashboard.changed_on,\n                updatedBy: dashboard.changed_by_name,\n                overwriteConfirmItems,\n                dashboardId: id,\n                data: updatedDashboard,\n              }),\n            );\n            return reject(overwriteConfirmItems);\n          }\n          return resolve();\n        });\n      })\n        .then(updateDashboard)\n        .catch(overwriteConfirmItems => {\n          const errorText = t('Please confirm the overwrite values.');\n          dispatch(\n            logEvent(LOG_ACTIONS_CONFIRM_OVERWRITE_DASHBOARD_METADATA, {\n              dashboard_id: id,\n              items: overwriteConfirmItems,\n            }),\n          );\n          dispatch(addDangerToast(errorText));\n        });\n    }\n    // changing the data as the endpoint requires\n    if ('positions' in cleanedData && !('positions' in cleanedData.metadata)) {\n      cleanedData.metadata.positions = cleanedData.positions;\n    }\n    cleanedData.metadata.default_filters = safeStringify(serializedFilters);\n    cleanedData.metadata.filter_scopes = serializedFilterScopes;\n    const copyPayload = {\n      dashboard_title: cleanedData.dashboard_title,\n      css: cleanedData.css,\n      duplicate_slices: cleanedData.duplicate_slices,\n      json_metadata: JSON.stringify(cleanedData.metadata),\n    };\n\n    return SupersetClient.post({\n      endpoint: `/api/v1/dashboard/${id}/copy/`,\n      jsonPayload: copyPayload,\n    })\n      .then(response => onCopySuccess(response))\n      .catch(response => onError(response));\n  };\n}\n\nexport function fetchCharts(\n  chartList = [],\n  force = false,\n  interval = 0,\n  dashboardId,\n) {\n  return (dispatch, getState) => {\n    if (!interval) {\n      chartList.forEach(chartKey =>\n        dispatch(refreshChart(chartKey, force, dashboardId)),\n      );\n      return;\n    }\n\n    const { metadata: meta } = getState().dashboardInfo;\n    const refreshTime = Math.max(interval, meta.stagger_time || 5000); // default 5 seconds\n    if (typeof meta.stagger_refresh !== 'boolean') {\n      meta.stagger_refresh =\n        meta.stagger_refresh === undefined\n          ? true\n          : meta.stagger_refresh === 'true';\n    }\n    const delay = meta.stagger_refresh\n      ? refreshTime / (chartList.length - 1)\n      : 0;\n    chartList.forEach((chartKey, i) => {\n      setTimeout(\n        () => dispatch(refreshChart(chartKey, force, dashboardId)),\n        delay * i,\n      );\n    });\n  };\n}\n\nconst refreshCharts = (chartList, force, interval, dashboardId, dispatch) =>\n  new Promise(resolve => {\n    dispatch(fetchCharts(chartList, force, interval, dashboardId));\n    resolve();\n  });\n\nexport const ON_FILTERS_REFRESH = 'ON_FILTERS_REFRESH';\nexport function onFiltersRefresh() {\n  return { type: ON_FILTERS_REFRESH };\n}\n\nexport const ON_FILTERS_REFRESH_SUCCESS = 'ON_FILTERS_REFRESH_SUCCESS';\nexport function onFiltersRefreshSuccess() {\n  return { type: ON_FILTERS_REFRESH_SUCCESS };\n}\n\nexport const ON_REFRESH_SUCCESS = 'ON_REFRESH_SUCCESS';\nexport function onRefreshSuccess() {\n  return { type: ON_REFRESH_SUCCESS };\n}\n\nexport const ON_REFRESH = 'ON_REFRESH';\nexport function onRefresh(\n  chartList = [],\n  force = false,\n  interval = 0,\n  dashboardId,\n) {\n  return dispatch => {\n    dispatch({ type: ON_REFRESH });\n    refreshCharts(chartList, force, interval, dashboardId, dispatch).then(\n      () => {\n        dispatch(onRefreshSuccess());\n        dispatch(onFiltersRefresh());\n      },\n    );\n  };\n}\n\nexport const SHOW_BUILDER_PANE = 'SHOW_BUILDER_PANE';\nexport function showBuilderPane() {\n  return { type: SHOW_BUILDER_PANE };\n}\n\nexport function addSliceToDashboard(id, component) {\n  return (dispatch, getState) => {\n    const { sliceEntities } = getState();\n    const selectedSlice = sliceEntities.slices[id];\n    if (!selectedSlice) {\n      return dispatch(\n        addWarningToast(\n          'Sorry, there is no chart definition associated with the chart trying to be added.',\n        ),\n      );\n    }\n    const form_data = {\n      ...selectedSlice.form_data,\n      slice_id: selectedSlice.slice_id,\n    };\n    const newChart = {\n      ...initChart,\n      id,\n      form_data: applyDefaultFormData(form_data),\n    };\n\n    return Promise.all([\n      dispatch(addChart(newChart, id)),\n      dispatch(fetchDatasourceMetadata(form_data.datasource)),\n    ]).then(() => {\n      dispatch(addSlice(selectedSlice));\n\n      if (selectedSlice && selectedSlice.viz_type === 'filter_box') {\n        dispatch(addFilter(id, component, selectedSlice.form_data));\n      }\n    });\n  };\n}\n\nexport function removeSliceFromDashboard(id) {\n  return (dispatch, getState) => {\n    const sliceEntity = getState().sliceEntities.slices[id];\n    if (sliceEntity && sliceEntity.viz_type === 'filter_box') {\n      dispatch(removeFilter(id));\n    }\n\n    dispatch(removeSlice(id));\n    dispatch(removeChart(id));\n    getSharedLabelColor().removeSlice(id);\n  };\n}\n\nexport const SET_COLOR_SCHEME = 'SET_COLOR_SCHEME';\nexport function setColorScheme(colorScheme) {\n  return { type: SET_COLOR_SCHEME, colorScheme };\n}\n\nexport const SET_DIRECT_PATH = 'SET_DIRECT_PATH';\nexport function setDirectPathToChild(path) {\n  return { type: SET_DIRECT_PATH, path };\n}\n\nexport const SET_ACTIVE_TABS = 'SET_ACTIVE_TABS';\nexport function setActiveTabs(tabId, prevTabId) {\n  return { type: SET_ACTIVE_TABS, tabId, prevTabId };\n}\n\nexport const SET_FOCUSED_FILTER_FIELD = 'SET_FOCUSED_FILTER_FIELD';\nexport function setFocusedFilterField(chartId, column) {\n  return { type: SET_FOCUSED_FILTER_FIELD, chartId, column };\n}\n\nexport const UNSET_FOCUSED_FILTER_FIELD = 'UNSET_FOCUSED_FILTER_FIELD';\nexport function unsetFocusedFilterField(chartId, column) {\n  return { type: UNSET_FOCUSED_FILTER_FIELD, chartId, column };\n}\n\nexport const SET_FULL_SIZE_CHART_ID = 'SET_FULL_SIZE_CHART_ID';\nexport function setFullSizeChartId(chartId) {\n  return { type: SET_FULL_SIZE_CHART_ID, chartId };\n}\n\n// Undo history ---------------------------------------------------------------\nexport const SET_MAX_UNDO_HISTORY_EXCEEDED = 'SET_MAX_UNDO_HISTORY_EXCEEDED';\nexport function setMaxUndoHistoryExceeded(maxUndoHistoryExceeded = true) {\n  return {\n    type: SET_MAX_UNDO_HISTORY_EXCEEDED,\n    payload: { maxUndoHistoryExceeded },\n  };\n}\n\nexport function maxUndoHistoryToast() {\n  return (dispatch, getState) => {\n    const { dashboardLayout } = getState();\n    const historyLength = dashboardLayout.past.length;\n\n    return dispatch(\n      addWarningToast(\n        t(\n          'You have used all %(historyLength)s undo slots and will not be able to fully undo subsequent actions. You may save your current state to reset the history.',\n          { historyLength },\n        ),\n      ),\n    );\n  };\n}\n\nexport const SET_DATASETS_STATUS = 'SET_DATASETS_STATUS';\nexport function setDatasetsStatus(status) {\n  return {\n    type: SET_DATASETS_STATUS,\n    status,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}