{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport parseCookie from 'src/utils/parseCookie';\nimport rison from 'rison';\nimport shortid from 'shortid';\nexport default function handleResourceExport(resource, ids, done, interval) {if (interval === void 0) {interval = 200;}\n  const token = shortid.generate();\n  const url = `/api/v1/${resource}/export/?q=${rison.encode(ids)}&token=${token}`;\n  // create new iframe for export\n  const iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.src = url;\n  document.body.appendChild(iframe);\n  const timer = window.setInterval(() => {\n    const cookie = parseCookie();\n    if (cookie[token] === 'done') {\n      window.clearInterval(timer);\n      document.body.removeChild(iframe);\n      done();\n    }\n  }, interval);\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,WAAP,MAAwB,uBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,eAAc,SAAUC,oBAAV,CACZC,QADY,EAEZC,GAFY,EAGZC,IAHY,EAIZC,QAJY,EAIE,KAAdA,QAAc,cAAdA,QAAc,GAAH,GAAG;EAEd,MAAMC,KAAK,GAAGN,OAAO,CAACO,QAAR,EAAd;EACA,MAAMC,GAAG,GAAG,WAAWN,QAAQ,cAAcH,KAAK,CAACU,MAAN,CAC3CN,GAD2C,CAE5C,UAAUG,KAAK,EAFhB;EAIA;EACA,MAAMI,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;EACAF,MAAM,CAACG,KAAP,CAAaC,OAAb,GAAuB,MAAvB;EACAJ,MAAM,CAACK,GAAP,GAAaP,GAAb;EACAG,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BP,MAA1B;EAEA,MAAMQ,KAAK,GAAGC,MAAM,CAACC,WAAP,CAAmB,MAAK;IACpC,MAAMC,MAAM,GAAmCvB,WAAW,EAA1D;IACA,IAAIuB,MAAM,CAACf,KAAD,CAAN,KAAkB,MAAtB,EAA8B;MAC5Ba,MAAM,CAACG,aAAP,CAAqBJ,KAArB;MACAP,QAAQ,CAACK,IAAT,CAAcO,WAAd,CAA0Bb,MAA1B;MACAN,IAAI;IACL;EACF,CAPa,EAOXC,QAPW,CAAd;AAQD","names":["parseCookie","rison","shortid","handleResourceExport","resource","ids","done","interval","token","generate","url","encode","iframe","document","createElement","style","display","src","body","appendChild","timer","window","setInterval","cookie","clearInterval","removeChild"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/utils/export.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport parseCookie from 'src/utils/parseCookie';\nimport rison from 'rison';\nimport shortid from 'shortid';\n\nexport default function handleResourceExport(\n  resource: string,\n  ids: number[],\n  done: () => void,\n  interval = 200,\n): void {\n  const token = shortid.generate();\n  const url = `/api/v1/${resource}/export/?q=${rison.encode(\n    ids,\n  )}&token=${token}`;\n\n  // create new iframe for export\n  const iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.src = url;\n  document.body.appendChild(iframe);\n\n  const timer = window.setInterval(() => {\n    const cookie: { [cookieId: string]: string } = parseCookie();\n    if (cookie[token] === 'done') {\n      window.clearInterval(timer);\n      document.body.removeChild(iframe);\n      done();\n    }\n  }, interval);\n}\n"]},"metadata":{},"sourceType":"module"}