{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { css, ensureIsArray, styled, t } from '@superset-ui/core';\nimport Table, { TableSize } from 'src/components/Table';\nimport { EmptyStateBig } from 'src/components/EmptyState';\nimport ChartImage from 'src/assets/images/chart.svg';\nimport Icons from 'src/components/Icons';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { FilterOperator } from 'src/components/ListView';\nimport moment from 'moment';\nimport TruncatedList from 'src/components/TruncatedList';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DEFAULT_PAGE_SIZE = 25;\nconst getLinkProps = (dashboard) => ({\n  key: dashboard.id,\n  to: `/superset/dashboard/${dashboard.id}`,\n  target: '_blank',\n  rel: 'noreferer noopener',\n  children: dashboard.dashboard_title });\n\nconst tooltipItemCSS = (theme) => css`\n  color: ${theme.colors.grayscale.light5};\n  text-decoration: underline;\n  &:hover {\n    color: inherit;\n  }\n`;\nconst columns = [\n{\n  key: 'slice_name',\n  title: t('Chart'),\n  width: '320px',\n  sorter: true,\n  render: (value, record) => ___EmotionJSX(Link, { to: record.url }, record.slice_name) },\n\n{\n  key: 'owners',\n  title: t('Chart owners'),\n  width: '242px',\n  render: (value, record) => {var _record$owners$map, _record$owners;return ___EmotionJSX(TruncatedList, { items: (_record$owners$map = (_record$owners = record.owners) == null ? void 0 : _record$owners.map((owner) => `${owner.first_name} ${owner.last_name}`)) != null ? _record$owners$map : [] });} },\n\n{\n  key: 'last_saved_at',\n  title: t('Chart last modified'),\n  width: '209px',\n  sorter: true,\n  defaultSortOrder: 'descend',\n  render: (value, record) => record.last_saved_at ? moment.utc(record.last_saved_at).fromNow() : null },\n\n{\n  key: 'last_saved_by.first_name',\n  title: t('Chart last modified by'),\n  width: '216px',\n  sorter: true,\n  render: (value, record) => record.last_saved_by ?\n  `${record.last_saved_by.first_name} ${record.last_saved_by.last_name}` :\n  null },\n\n{\n  key: 'dashboards',\n  title: t('Dashboard usage'),\n  width: '420px',\n  render: (value, record) => ___EmotionJSX(TruncatedList, { items: record.dashboards, renderVisibleItem: (dashboard) => ___EmotionJSX(Link, getLinkProps(dashboard)), renderTooltipItem: (dashboard) => ___EmotionJSX(Link, _extends({}, getLinkProps(dashboard), { css: tooltipItemCSS })), getKey: (dashboard) => dashboard.id }) }];\n\n\nconst emptyStateTableCSS = (theme) => css`\n  && th.ant-table-cell {\n    color: ${theme.colors.grayscale.light1};\n  }\n\n  .ant-table-placeholder {\n    display: none;\n  }\n`;\nconst emptyStateButtonText = ___EmotionJSX(React.Fragment, null,\n___EmotionJSX(Icons.PlusOutlined, { iconSize: \"m\", css: css`\n        & > .anticon {\n          line-height: 0;\n        }\n      ` }),\nt('Create chart with dataset'));\n\nconst StyledEmptyStateBig = styled(EmptyStateBig)`\n  margin: ${(_ref) => {let { theme } = _ref;return 13 * theme.gridUnit;}}px 0;\n`;\n/**\n * Hook that uses the useListViewResource hook to retrieve records\n * based on pagination state.\n */\nconst useDatasetChartRecords = (datasetId) => {\n  const { addDangerToast } = useToasts();\n  // Always filters charts by dataset\n  const baseFilters = useMemo(() => [\n  {\n    id: 'datasource_id',\n    operator: FilterOperator.equals,\n    value: datasetId }],\n\n  [datasetId]);\n  // Returns request status/results and function for re-fetching\n  const { state: { loading, resourceCount, resourceCollection }, fetchData } = useListViewResource('chart', t('chart'), addDangerToast, true, [], baseFilters);\n  // Adds `key` field\n  const resourceCollectionWithKey = useMemo(() => resourceCollection.map((o) => ({ ...o, key: o.id })), [resourceCollection]);\n  // Called by table with updated table state to fetch new data\n  // @ts-ignore\n  const onChange = useCallback(\n  // @ts-ignore\n  (tablePagination, tableFilters, tableSorter) => {var _tablePagination$curr, _tablePagination$page;\n    const pageIndex = ((_tablePagination$curr = tablePagination.current) != null ? _tablePagination$curr : 1) - 1;\n    const pageSize = (_tablePagination$page = tablePagination.pageSize) != null ? _tablePagination$page : 0;\n    const sortBy = ensureIsArray(tableSorter).\n    filter((_ref2) => {let { columnKey } = _ref2;return typeof columnKey === 'string';}).\n    map((_ref3) => {let { columnKey, order } = _ref3;return {\n        id: columnKey,\n        desc: order === 'descend' };});\n\n    fetchData({ pageIndex, pageSize, sortBy, filters: [] });\n  }, [fetchData]);\n  // Initial data request\n  useEffect(() => {\n    fetchData({\n      pageIndex: 0,\n      pageSize: DEFAULT_PAGE_SIZE,\n      sortBy: [{ id: 'last_saved_at', desc: true }],\n      filters: [] });\n\n  }, [fetchData]);\n  return {\n    loading,\n    recordCount: resourceCount,\n    data: resourceCollectionWithKey,\n    onChange };\n\n};__signature__(useDatasetChartRecords, \"useToasts{{ addDangerToast }}\\nuseMemo{baseFilters}\\nuseListViewResource{{ state: { loading, resourceCount, resourceCollection }, fetchData, }}\\nuseMemo{resourceCollectionWithKey}\\nuseCallback{onChange}\\nuseEffect{}\", () => [useToasts, useListViewResource]);\nconst DatasetUsage = (_ref4) => {let { datasetId } = _ref4;\n  const { loading, recordCount, data, onChange } = useDatasetChartRecords(datasetId);\n  const emptyStateButtonAction = useCallback(() => window.open(`/explore/?dataset_type=table&dataset_id=${datasetId}`, '_blank'), [datasetId]);\n  return ___EmotionJSX(\"div\", { css: !data.length ? emptyStateTableCSS : null },\n  ___EmotionJSX(Table, { columns: columns, data: data, size: TableSize.MIDDLE, defaultPageSize: DEFAULT_PAGE_SIZE, recordCount: recordCount, loading: loading, onChange: onChange }),\n  !data.length && !loading ? ___EmotionJSX(StyledEmptyStateBig, { image: ___EmotionJSX(ChartImage, null), title: t('No charts'), description: t('This dataset is not used to power any charts.'), buttonText: emptyStateButtonText, buttonAction: emptyStateButtonAction }) : null);\n\n};__signature__(DatasetUsage, \"useDatasetChartRecords{{ loading, recordCount, data, onChange }}\\nuseCallback{emptyStateButtonAction}\", () => [useDatasetChartRecords]);const _default =\nDatasetUsage;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DEFAULT_PAGE_SIZE, \"DEFAULT_PAGE_SIZE\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/datasets/AddDataset/EditDataset/UsageTab/index.tsx\");reactHotLoader.register(getLinkProps, \"getLinkProps\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/datasets/AddDataset/EditDataset/UsageTab/index.tsx\");reactHotLoader.register(tooltipItemCSS, \"tooltipItemCSS\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/datasets/AddDataset/EditDataset/UsageTab/index.tsx\");reactHotLoader.register(columns, \"columns\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/datasets/AddDataset/EditDataset/UsageTab/index.tsx\");reactHotLoader.register(emptyStateTableCSS, \"emptyStateTableCSS\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/datasets/AddDataset/EditDataset/UsageTab/index.tsx\");reactHotLoader.register(emptyStateButtonText, \"emptyStateButtonText\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/datasets/AddDataset/EditDataset/UsageTab/index.tsx\");reactHotLoader.register(StyledEmptyStateBig, \"StyledEmptyStateBig\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/datasets/AddDataset/EditDataset/UsageTab/index.tsx\");reactHotLoader.register(useDatasetChartRecords, \"useDatasetChartRecords\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/datasets/AddDataset/EditDataset/UsageTab/index.tsx\");reactHotLoader.register(DatasetUsage, \"DatasetUsage\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/datasets/AddDataset/EditDataset/UsageTab/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/datasets/AddDataset/EditDataset/UsageTab/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useMemo","Link","css","ensureIsArray","styled","t","Table","TableSize","EmptyStateBig","ChartImage","Icons","useToasts","useListViewResource","FilterOperator","moment","TruncatedList","DEFAULT_PAGE_SIZE","getLinkProps","dashboard","key","id","to","target","rel","children","dashboard_title","tooltipItemCSS","theme","colors","grayscale","light5","columns","title","width","sorter","render","value","record","url","slice_name","owners","map","owner","first_name","last_name","defaultSortOrder","last_saved_at","utc","fromNow","last_saved_by","dashboards","emptyStateTableCSS","light1","emptyStateButtonText","StyledEmptyStateBig","gridUnit","useDatasetChartRecords","datasetId","addDangerToast","baseFilters","operator","equals","state","loading","resourceCount","resourceCollection","fetchData","resourceCollectionWithKey","o","onChange","tablePagination","tableFilters","tableSorter","pageIndex","current","pageSize","sortBy","filter","columnKey","order","desc","filters","recordCount","data","DatasetUsage","emptyStateButtonAction","window","open","length","MIDDLE"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/datasets/AddDataset/EditDataset/UsageTab/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  css,\n  ensureIsArray,\n  styled,\n  SupersetTheme,\n  t,\n} from '@superset-ui/core';\nimport Chart, { ChartLinkedDashboard } from 'src/types/Chart';\nimport Table, {\n  ColumnsType,\n  TableSize,\n  OnChangeFunction,\n} from 'src/components/Table';\nimport { EmptyStateBig } from 'src/components/EmptyState';\nimport ChartImage from 'src/assets/images/chart.svg';\nimport Icons from 'src/components/Icons';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { FilterOperator } from 'src/components/ListView';\nimport moment from 'moment';\nimport TruncatedList from 'src/components/TruncatedList';\n\ninterface DatasetUsageProps {\n  datasetId: string;\n}\n\nconst DEFAULT_PAGE_SIZE = 25;\n\nconst getLinkProps = (dashboard: ChartLinkedDashboard) => ({\n  key: dashboard.id,\n  to: `/superset/dashboard/${dashboard.id}`,\n  target: '_blank',\n  rel: 'noreferer noopener',\n  children: dashboard.dashboard_title,\n});\n\nconst tooltipItemCSS = (theme: SupersetTheme) => css`\n  color: ${theme.colors.grayscale.light5};\n  text-decoration: underline;\n  &:hover {\n    color: inherit;\n  }\n`;\n\nconst columns: ColumnsType<Chart> = [\n  {\n    key: 'slice_name',\n    title: t('Chart'),\n    width: '320px',\n    sorter: true,\n    render: (value, record) => <Link to={record.url}>{record.slice_name}</Link>,\n  },\n  {\n    key: 'owners',\n    title: t('Chart owners'),\n    width: '242px',\n    render: (value, record) => (\n      <TruncatedList\n        items={\n          record.owners?.map(\n            owner => `${owner.first_name} ${owner.last_name}`,\n          ) ?? []\n        }\n      />\n    ),\n  },\n  {\n    key: 'last_saved_at',\n    title: t('Chart last modified'),\n    width: '209px',\n    sorter: true,\n    defaultSortOrder: 'descend',\n    render: (value, record) =>\n      record.last_saved_at ? moment.utc(record.last_saved_at).fromNow() : null,\n  },\n  {\n    key: 'last_saved_by.first_name',\n    title: t('Chart last modified by'),\n    width: '216px',\n    sorter: true,\n    render: (value, record) =>\n      record.last_saved_by\n        ? `${record.last_saved_by.first_name} ${record.last_saved_by.last_name}`\n        : null,\n  },\n  {\n    key: 'dashboards',\n    title: t('Dashboard usage'),\n    width: '420px',\n    render: (value, record) => (\n      <TruncatedList<ChartLinkedDashboard>\n        items={record.dashboards}\n        renderVisibleItem={dashboard => <Link {...getLinkProps(dashboard)} />}\n        renderTooltipItem={dashboard => (\n          <Link {...getLinkProps(dashboard)} css={tooltipItemCSS} />\n        )}\n        getKey={dashboard => dashboard.id}\n      />\n    ),\n  },\n];\n\nconst emptyStateTableCSS = (theme: SupersetTheme) => css`\n  && th.ant-table-cell {\n    color: ${theme.colors.grayscale.light1};\n  }\n\n  .ant-table-placeholder {\n    display: none;\n  }\n`;\n\nconst emptyStateButtonText = (\n  <>\n    <Icons.PlusOutlined\n      iconSize=\"m\"\n      css={css`\n        & > .anticon {\n          line-height: 0;\n        }\n      `}\n    />\n    {t('Create chart with dataset')}\n  </>\n);\n\nconst StyledEmptyStateBig = styled(EmptyStateBig)`\n  margin: ${({ theme }) => 13 * theme.gridUnit}px 0;\n`;\n\n/**\n * Hook that uses the useListViewResource hook to retrieve records\n * based on pagination state.\n */\nconst useDatasetChartRecords = (datasetId: string) => {\n  const { addDangerToast } = useToasts();\n\n  // Always filters charts by dataset\n  const baseFilters = useMemo(\n    () => [\n      {\n        id: 'datasource_id',\n        operator: FilterOperator.equals,\n        value: datasetId,\n      },\n    ],\n    [datasetId],\n  );\n\n  // Returns request status/results and function for re-fetching\n  const {\n    state: { loading, resourceCount, resourceCollection },\n    fetchData,\n  } = useListViewResource<Chart>(\n    'chart',\n    t('chart'),\n    addDangerToast,\n    true,\n    [],\n    baseFilters,\n  );\n\n  // Adds `key` field\n  const resourceCollectionWithKey = useMemo(\n    () => resourceCollection.map(o => ({ ...o, key: o.id })),\n    [resourceCollection],\n  );\n\n  // Called by table with updated table state to fetch new data\n  // @ts-ignore\n  const onChange: OnChangeFunction = useCallback(\n    // @ts-ignore\n    (tablePagination, tableFilters, tableSorter) => {\n      const pageIndex = (tablePagination.current ?? 1) - 1;\n      const pageSize = tablePagination.pageSize ?? 0;\n      const sortBy = ensureIsArray(tableSorter)\n        .filter(({ columnKey }) => typeof columnKey === 'string')\n        .map(({ columnKey, order }) => ({\n          id: columnKey as string,\n          desc: order === 'descend',\n        }));\n      fetchData({ pageIndex, pageSize, sortBy, filters: [] });\n    },\n    [fetchData],\n  );\n\n  // Initial data request\n  useEffect(() => {\n    fetchData({\n      pageIndex: 0,\n      pageSize: DEFAULT_PAGE_SIZE,\n      sortBy: [{ id: 'last_saved_at', desc: true }],\n      filters: [],\n    });\n  }, [fetchData]);\n\n  return {\n    loading,\n    recordCount: resourceCount,\n    data: resourceCollectionWithKey,\n    onChange,\n  };\n};\n\nconst DatasetUsage = ({ datasetId }: DatasetUsageProps) => {\n  const { loading, recordCount, data, onChange } =\n    useDatasetChartRecords(datasetId);\n\n  const emptyStateButtonAction = useCallback(\n    () =>\n      window.open(\n        `/explore/?dataset_type=table&dataset_id=${datasetId}`,\n        '_blank',\n      ),\n    [datasetId],\n  );\n\n  return (\n    <div css={!data.length ? emptyStateTableCSS : null}>\n      <Table\n        columns={columns}\n        data={data}\n        size={TableSize.MIDDLE}\n        defaultPageSize={DEFAULT_PAGE_SIZE}\n        recordCount={recordCount}\n        loading={loading}\n        onChange={onChange}\n      />\n      {!data.length && !loading ? (\n        <StyledEmptyStateBig\n          image={<ChartImage />}\n          title={t('No charts')}\n          description={t('This dataset is not used to power any charts.')}\n          buttonText={emptyStateButtonText}\n          buttonAction={emptyStateButtonAction}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default DatasetUsage;\n"]},"metadata":{},"sourceType":"module"}