{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ChartMetadata, ChartPlugin, t } from '@superset-ui/core';\nimport thumbnail from '../images/thumbnail.png';\nimport example1 from '../images/example1.jpg';\nimport example2 from '../images/example2.jpg';\nimport buildQuery from './buildQuery';\nimport controlPanel from './controlPanel';\nimport transformProps from './transformProps';\nexport default class HandlebarsChartPlugin extends ChartPlugin {\n  /**\n   * The constructor is used to pass relevant metadata and callbacks that get\n   * registered in respective registries that are used throughout the library\n   * and application. A more thorough description of each property is given in\n   * the respective imported file.\n   *\n   * It is worth noting that `buildQuery` and is optional, and only needed for\n   * advanced visualizations that require either post processing operations\n   * (pivoting, rolling aggregations, sorting etc) or submitting multiple queries.\n   */\n  constructor() {\n    const metadata = new ChartMetadata({\n      description: t('Write a handlebars template to render the data'),\n      name: t('Handlebars'),\n      thumbnail,\n      exampleGallery: [{ url: example1 }, { url: example2 }] });\n\n    super({\n      buildQuery,\n      controlPanel,\n      loadChart: () => import('../Handlebars'),\n      metadata,\n      transformProps });\n\n  }}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,CAArC,QAA8C,mBAA9C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAc,MAAOC,qBAAP,SAAqCR,WAArC,CAAgD;EAC5D;;;;;;;;;;EAUAS;IACE,MAAMC,QAAQ,GAAG,IAAIX,aAAJ,CAAkB;MACjCY,WAAW,EAAEV,CAAC,CAAC,gDAAD,CADmB;MAEjCW,IAAI,EAAEX,CAAC,CAAC,YAAD,CAF0B;MAGjCC,SAHiC;MAIjCW,cAAc,EAAE,CAAC,EAAEC,GAAG,EAAEX,QAAP,EAAD,EAAoB,EAAEW,GAAG,EAAEV,QAAP,EAApB,CAJiB,EAAlB,CAAjB;;IAOA,MAAM;MACJC,UADI;MAEJC,YAFI;MAGJS,SAAS,EAAE,MAAM,OAAO,eAAP,CAHb;MAIJL,QAJI;MAKJH,cALI,EAAN;;EAOD,CA1B2D","names":["ChartMetadata","ChartPlugin","t","thumbnail","example1","example2","buildQuery","controlPanel","transformProps","HandlebarsChartPlugin","constructor","metadata","description","name","exampleGallery","url","loadChart"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/plugin-chart-handlebars/src/plugin/index.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ChartMetadata, ChartPlugin, t } from '@superset-ui/core';\nimport thumbnail from '../images/thumbnail.png';\nimport example1 from '../images/example1.jpg';\nimport example2 from '../images/example2.jpg';\nimport buildQuery from './buildQuery';\nimport controlPanel from './controlPanel';\nimport transformProps from './transformProps';\n\nexport default class HandlebarsChartPlugin extends ChartPlugin {\n  /**\n   * The constructor is used to pass relevant metadata and callbacks that get\n   * registered in respective registries that are used throughout the library\n   * and application. A more thorough description of each property is given in\n   * the respective imported file.\n   *\n   * It is worth noting that `buildQuery` and is optional, and only needed for\n   * advanced visualizations that require either post processing operations\n   * (pivoting, rolling aggregations, sorting etc) or submitting multiple queries.\n   */\n  constructor() {\n    const metadata = new ChartMetadata({\n      description: t('Write a handlebars template to render the data'),\n      name: t('Handlebars'),\n      thumbnail,\n      exampleGallery: [{ url: example1 }, { url: example2 }],\n    });\n\n    super({\n      buildQuery,\n      controlPanel,\n      loadChart: () => import('../Handlebars'),\n      metadata,\n      transformProps,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}