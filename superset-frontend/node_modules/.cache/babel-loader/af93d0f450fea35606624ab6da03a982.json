{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { getNumberFormatter } from '@superset-ui/core';\nimport { getFormattedUTCTime } from './utils';\n\nexport default function transformProps(chartProps) {\n  const { height, formData, queriesData, datasource } = chartProps;\n  const {\n    cellPadding,\n    cellRadius,\n    cellSize,\n    domainGranularity,\n    linearColorScheme,\n    showLegend,\n    showMetricName,\n    showValues,\n    steps,\n    subdomainGranularity,\n    xAxisTimeFormat,\n    yAxisFormat } =\n  formData;\n\n  const { verboseMap } = datasource;\n  const timeFormatter = (ts) => getFormattedUTCTime(ts, xAxisTimeFormat);\n  const valueFormatter = getNumberFormatter(yAxisFormat);\n\n  return {\n    height,\n    data: queriesData[0].data,\n    cellPadding,\n    cellRadius,\n    cellSize,\n    domainGranularity,\n    linearColorScheme,\n    showLegend,\n    showMetricName,\n    showValues,\n    steps,\n    subdomainGranularity,\n    timeFormatter,\n    valueFormatter,\n    verboseMap };\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(transformProps, \"transformProps\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-plugin-chart-calendar/src/transformProps.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getNumberFormatter","getFormattedUTCTime","transformProps","chartProps","height","formData","queriesData","datasource","cellPadding","cellRadius","cellSize","domainGranularity","linearColorScheme","showLegend","showMetricName","showValues","steps","subdomainGranularity","xAxisTimeFormat","yAxisFormat","verboseMap","timeFormatter","ts","valueFormatter","data"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-plugin-chart-calendar/src/transformProps.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { getNumberFormatter } from '@superset-ui/core';\nimport { getFormattedUTCTime } from './utils';\n\nexport default function transformProps(chartProps) {\n  const { height, formData, queriesData, datasource } = chartProps;\n  const {\n    cellPadding,\n    cellRadius,\n    cellSize,\n    domainGranularity,\n    linearColorScheme,\n    showLegend,\n    showMetricName,\n    showValues,\n    steps,\n    subdomainGranularity,\n    xAxisTimeFormat,\n    yAxisFormat,\n  } = formData;\n\n  const { verboseMap } = datasource;\n  const timeFormatter = ts => getFormattedUTCTime(ts, xAxisTimeFormat);\n  const valueFormatter = getNumberFormatter(yAxisFormat);\n\n  return {\n    height,\n    data: queriesData[0].data,\n    cellPadding,\n    cellRadius,\n    cellSize,\n    domainGranularity,\n    linearColorScheme,\n    showLegend,\n    showMetricName,\n    showValues,\n    steps,\n    subdomainGranularity,\n    timeFormatter,\n    valueFormatter,\n    verboseMap,\n  };\n}\n"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,kBAAT,QAAmC,mBAAnC;AACA,SAASC,mBAAT,QAAoC,SAApC;;AAEA,eAAe,SAASC,cAAT,CAAwBC,UAAxB,EAAoC;EACjD,MAAM,EAAEC,MAAF,EAAUC,QAAV,EAAoBC,WAApB,EAAiCC,UAAjC,KAAgDJ,UAAtD;EACA,MAAM;IACJK,WADI;IAEJC,UAFI;IAGJC,QAHI;IAIJC,iBAJI;IAKJC,iBALI;IAMJC,UANI;IAOJC,cAPI;IAQJC,UARI;IASJC,KATI;IAUJC,oBAVI;IAWJC,eAXI;IAYJC,WAZI;EAaFd,QAbJ;;EAeA,MAAM,EAAEe,UAAF,KAAiBb,UAAvB;EACA,MAAMc,aAAa,GAAG,CAAAC,EAAE,KAAIrB,mBAAmB,CAACqB,EAAD,EAAKJ,eAAL,CAA/C;EACA,MAAMK,cAAc,GAAGvB,kBAAkB,CAACmB,WAAD,CAAzC;;EAEA,OAAO;IACLf,MADK;IAELoB,IAAI,EAAElB,WAAW,CAAC,CAAD,CAAX,CAAekB,IAFhB;IAGLhB,WAHK;IAILC,UAJK;IAKLC,QALK;IAMLC,iBANK;IAOLC,iBAPK;IAQLC,UARK;IASLC,cATK;IAULC,UAVK;IAWLC,KAXK;IAYLC,oBAZK;IAaLI,aAbK;IAcLE,cAdK;IAeLH,UAfK,EAAP;;AAiBD,C,iLAtCuBlB,c"},"metadata":{},"sourceType":"module"}