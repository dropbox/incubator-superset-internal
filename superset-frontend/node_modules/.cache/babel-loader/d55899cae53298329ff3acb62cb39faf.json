{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, getColumnLabel, getNumberFormatter, NumberFormats, styled, t } from '@superset-ui/core';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { rgba } from 'emotion-rgba';\nimport { AntdSlider } from 'src/components';\nimport { FilterBarOrientation } from 'src/dashboard/types';\nimport { StatusMessage, StyledFormItem, FilterPluginStyle } from '../common';\nimport { getRangeExtraFormData } from '../../utils';\nimport { SingleValueType } from './SingleValueType';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst LIGHT_BLUE = '#99e7f0';\nconst DARK_BLUE = '#6dd3e3';\nconst LIGHT_GRAY = '#f5f5f5';\nconst DARK_GRAY = '#e1e1e1';\nconst StyledMinSlider = styled(AntdSlider)`\n  ${(_ref) => {var _theme$colors$validat, _theme$colors$validat2;let { theme, validateStatus } = _ref;return `\n  .ant-slider-rail {\n    background-color: ${validateStatus ? (_theme$colors$validat = theme.colors[validateStatus]) == null ? void 0 : _theme$colors$validat.light1 : LIGHT_BLUE};\n  }\n\n  .ant-slider-track {\n    background-color: ${LIGHT_GRAY};\n  }\n\n  &:hover {\n    .ant-slider-rail {\n      background-color: ${validateStatus ? (_theme$colors$validat2 = theme.colors[validateStatus]) == null ? void 0 : _theme$colors$validat2.base : DARK_BLUE};\n    }\n\n    .ant-slider-track {\n      background-color: ${DARK_GRAY};\n    }\n  }\n  `;}}\n`;\nconst Wrapper = styled.div`\n  ${(_ref2) => {var _theme$colors, _theme$colors2, _theme$colors$validat3, _theme$colors$validat4, _theme$colors3, _theme$colors$validat5, _theme$colors$validat6;let { theme, validateStatus, orientation, isOverflowing } = _ref2;return `\n    border: 1px solid transparent;\n    &:focus {\n      border: 1px solid\n        ${(_theme$colors = theme.colors[validateStatus || 'primary']) == null ? void 0 : _theme$colors.base};\n      outline: 0;\n      box-shadow: 0 0 0 3px\n        ${rgba((_theme$colors2 = theme.colors[validateStatus || 'primary']) == null ? void 0 : _theme$colors2.base, 0.2)};\n    }\n    & .ant-slider {\n      margin-top: ${orientation === FilterBarOrientation.HORIZONTAL ? 0 : theme.gridUnit}px;\n      margin-bottom: ${orientation === FilterBarOrientation.HORIZONTAL ? 0 : theme.gridUnit * 5}px;\n\n      ${orientation === FilterBarOrientation.HORIZONTAL &&\n  !isOverflowing &&\n  `line-height: 1.2;`}\n\n      & .ant-slider-track {\n        background-color: ${validateStatus && ((_theme$colors$validat3 = theme.colors[validateStatus]) == null ? void 0 : _theme$colors$validat3.light1)};\n      }\n      & .ant-slider-handle {\n        border: ${validateStatus && `2px solid ${(_theme$colors$validat4 = theme.colors[validateStatus]) == null ? void 0 : _theme$colors$validat4.light1}`};\n        &:focus {\n          box-shadow: 0 0 0 3px\n            ${rgba((_theme$colors3 = theme.colors[validateStatus || 'primary']) == null ? void 0 : _theme$colors3.base, 0.2)};\n        }\n      }\n      & .ant-slider-mark {\n        font-size: ${theme.typography.sizes.s}px;\n      }\n\n      &:hover {\n        & .ant-slider-track {\n          background-color: ${validateStatus && ((_theme$colors$validat5 = theme.colors[validateStatus]) == null ? void 0 : _theme$colors$validat5.base)};\n        }\n        & .ant-slider-handle {\n          border: ${validateStatus && `2px solid ${(_theme$colors$validat6 = theme.colors[validateStatus]) == null ? void 0 : _theme$colors$validat6.base}`};\n        }\n      }\n    }\n  `;}}\n`;\nconst numberFormatter = getNumberFormatter(NumberFormats.SMART_NUMBER);\nconst tipFormatter = (value) => numberFormatter(value);\nconst getLabel = (lower, upper) => {\n  if (lower !== null && upper !== null && lower === upper) {\n    return `x = ${numberFormatter(lower)}`;\n  }\n  if (lower !== null && upper !== null) {\n    return `${numberFormatter(lower)} ≤ x ≤ ${numberFormatter(upper)}`;\n  }\n  if (lower !== null) {\n    return `x ≥ ${numberFormatter(lower)}`;\n  }\n  if (upper !== null) {\n    return `x ≤ ${numberFormatter(upper)}`;\n  }\n  return '';\n};\nconst getMarks = (lower, upper) => {\n  const newMarks = {};\n  if (lower !== null) {\n    newMarks[lower] = numberFormatter(lower);\n  }\n  if (upper !== null) {\n    newMarks[upper] = numberFormatter(upper);\n  }\n  return newMarks;\n};\nexport default function RangeFilterPlugin(props) {\n  const { data, formData, height, width, setDataMask, setFocusedFilter, unsetFocusedFilter, setHoveredFilter, unsetHoveredFilter, setFilterActive, filterState, inputRef, filterBarOrientation, isOverflowingFilterBar } = props;\n  const [row] = data;\n  // @ts-ignore\n  const { min, max } = row;\n  const { groupby, defaultValue, enableSingleValue } = formData;\n  const enableSingleMinValue = enableSingleValue === SingleValueType.Minimum;\n  const enableSingleMaxValue = enableSingleValue === SingleValueType.Maximum;\n  const enableSingleExactValue = enableSingleValue === SingleValueType.Exact;\n  const rangeValue = enableSingleValue === undefined;\n  const [col = ''] = ensureIsArray(groupby).map(getColumnLabel);\n  const [value, setValue] = useState(defaultValue != null ? defaultValue : [min, enableSingleExactValue ? min : max]);\n  const [marks, setMarks] = useState({});\n  const minIndex = 0;\n  const maxIndex = 1;\n  const minMax = value != null ? value : [min, max];\n  const getBounds = useCallback((value) => {\n    const [lowerRaw, upperRaw] = value;\n    if (enableSingleExactValue) {\n      return { lower: lowerRaw, upper: upperRaw };\n    }\n    return {\n      lower: lowerRaw > min ? lowerRaw : null,\n      upper: upperRaw < max ? upperRaw : null };\n\n  }, [max, min, enableSingleExactValue]);\n  const handleAfterChange = useCallback((value) => {\n    setValue(value);\n    const { lower, upper } = getBounds(value);\n    setMarks(getMarks(lower, upper));\n    setDataMask({\n      extraFormData: getRangeExtraFormData(col, lower, upper),\n      filterState: {\n        value: lower !== null || upper !== null ? value : null,\n        label: getLabel(lower, upper) } });\n\n\n  }, [col, getBounds, setDataMask]);\n  const handleChange = useCallback((value) => {\n    setValue(value);\n  }, []);\n  useEffect(() => {var _filterState$value;\n    // when switch filter type and queriesData still not updated we need ignore this case (in FilterBar)\n    if ((row == null ? void 0 : row.min) === undefined && (row == null ? void 0 : row.max) === undefined) {\n      return;\n    }\n    let filterStateValue = (_filterState$value = filterState.value) != null ? _filterState$value : [min, max];\n    if (enableSingleMaxValue) {\n      const filterStateMax = filterStateValue[maxIndex] <= minMax[maxIndex] ?\n      filterStateValue[maxIndex] :\n      minMax[maxIndex];\n      filterStateValue = [min, filterStateMax];\n    } else\n    if (enableSingleMinValue) {\n      const filterStateMin = filterStateValue[minIndex] >= minMax[minIndex] ?\n      filterStateValue[minIndex] :\n      minMax[minIndex];\n      filterStateValue = [filterStateMin, max];\n    } else\n    if (enableSingleExactValue) {\n      filterStateValue = [minMax[minIndex], minMax[minIndex]];\n    }\n    handleAfterChange(filterStateValue);\n  }, [\n  enableSingleMaxValue,\n  enableSingleMinValue,\n  enableSingleExactValue,\n  JSON.stringify(filterState.value),\n  JSON.stringify(data)]);\n\n  const formItemExtra = useMemo(() => {\n    if (filterState.validateMessage) {\n      return ___EmotionJSX(StatusMessage, { status: filterState.validateStatus },\n      filterState.validateMessage);\n\n    }\n    return undefined;\n  }, [filterState.validateMessage, filterState.validateStatus]);\n  useEffect(() => {\n    if (enableSingleMaxValue) {\n      handleAfterChange([min, minMax[maxIndex]]);\n    }\n  }, [enableSingleMaxValue]);\n  useEffect(() => {\n    if (enableSingleMinValue) {\n      handleAfterChange([minMax[minIndex], max]);\n    }\n  }, [enableSingleMinValue]);\n  useEffect(() => {\n    if (enableSingleExactValue) {\n      handleAfterChange([minMax[minIndex], minMax[minIndex]]);\n    }\n  }, [enableSingleExactValue]);\n  return ___EmotionJSX(FilterPluginStyle, { height: height, width: width },\n  Number.isNaN(Number(min)) || Number.isNaN(Number(max)) ? ___EmotionJSX(\"h4\", null, t('Chosen non-numeric column')) : ___EmotionJSX(StyledFormItem, { extra: formItemExtra },\n  ___EmotionJSX(Wrapper, { tabIndex: -1, ref: inputRef, validateStatus: filterState.validateStatus, orientation: filterBarOrientation, isOverflowing: isOverflowingFilterBar, onFocus: setFocusedFilter, onBlur: unsetFocusedFilter, onMouseEnter: setHoveredFilter, onMouseLeave: unsetHoveredFilter, onMouseDown: () => setFilterActive(true), onMouseUp: () => setFilterActive(false) },\n  enableSingleMaxValue && ___EmotionJSX(AntdSlider, { min: min, max: max, value: minMax[maxIndex], tipFormatter: tipFormatter, marks: marks, onAfterChange: (value) => handleAfterChange([min, value]), onChange: (value) => handleChange([min, value]) }),\n  enableSingleMinValue && ___EmotionJSX(StyledMinSlider, { validateStatus: filterState.validateStatus, min: min, max: max, value: minMax[minIndex], tipFormatter: tipFormatter, marks: marks, onAfterChange: (value) => handleAfterChange([value, max]), onChange: (value) => handleChange([value, max]) }),\n  enableSingleExactValue && ___EmotionJSX(AntdSlider, { min: min, max: max, included: false, value: minMax[minIndex], tipFormatter: tipFormatter, marks: marks, onAfterChange: (value) => handleAfterChange([value, value]), onChange: (value) => handleChange([value, value]) }),\n  rangeValue && ___EmotionJSX(AntdSlider, { range: true, min: min, max: max, value: minMax, onAfterChange: handleAfterChange, onChange: handleChange, tipFormatter: tipFormatter, marks: marks }))));\n\n\n\n}","map":{"version":3,"mappings":"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","names":["ensureIsArray","getColumnLabel","getNumberFormatter","NumberFormats","styled","t","React","useCallback","useEffect","useMemo","useState","rgba","AntdSlider","FilterBarOrientation","StatusMessage","StyledFormItem","FilterPluginStyle","getRangeExtraFormData","SingleValueType","LIGHT_BLUE","DARK_BLUE","LIGHT_GRAY","DARK_GRAY","StyledMinSlider","theme","validateStatus","colors","light1","base","Wrapper","div","orientation","isOverflowing","HORIZONTAL","gridUnit","typography","sizes","s","numberFormatter","SMART_NUMBER","tipFormatter","value","getLabel","lower","upper","getMarks","newMarks","RangeFilterPlugin","props","data","formData","height","width","setDataMask","setFocusedFilter","unsetFocusedFilter","setHoveredFilter","unsetHoveredFilter","setFilterActive","filterState","inputRef","filterBarOrientation","isOverflowingFilterBar","row","min","max","groupby","defaultValue","enableSingleValue","enableSingleMinValue","Minimum","enableSingleMaxValue","Maximum","enableSingleExactValue","Exact","rangeValue","undefined","col","map","setValue","marks","setMarks","minIndex","maxIndex","minMax","getBounds","lowerRaw","upperRaw","handleAfterChange","extraFormData","label","handleChange","filterStateValue","filterStateMax","filterStateMin","JSON","stringify","formItemExtra","validateMessage","Number","isNaN"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/filters/components/Range/RangeFilterPlugin.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ensureIsArray,\n  getColumnLabel,\n  getNumberFormatter,\n  NumberFormats,\n  styled,\n  t,\n} from '@superset-ui/core';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { rgba } from 'emotion-rgba';\nimport { AntdSlider } from 'src/components';\nimport { FilterBarOrientation } from 'src/dashboard/types';\nimport { PluginFilterRangeProps } from './types';\nimport { StatusMessage, StyledFormItem, FilterPluginStyle } from '../common';\nimport { getRangeExtraFormData } from '../../utils';\nimport { SingleValueType } from './SingleValueType';\n\nconst LIGHT_BLUE = '#99e7f0';\nconst DARK_BLUE = '#6dd3e3';\nconst LIGHT_GRAY = '#f5f5f5';\nconst DARK_GRAY = '#e1e1e1';\n\nconst StyledMinSlider = styled(AntdSlider)<{\n  validateStatus?: 'error' | 'warning' | 'info';\n}>`\n  ${({ theme, validateStatus }) => `\n  .ant-slider-rail {\n    background-color: ${\n      validateStatus ? theme.colors[validateStatus]?.light1 : LIGHT_BLUE\n    };\n  }\n\n  .ant-slider-track {\n    background-color: ${LIGHT_GRAY};\n  }\n\n  &:hover {\n    .ant-slider-rail {\n      background-color: ${\n        validateStatus ? theme.colors[validateStatus]?.base : DARK_BLUE\n      };\n    }\n\n    .ant-slider-track {\n      background-color: ${DARK_GRAY};\n    }\n  }\n  `}\n`;\n\nconst Wrapper = styled.div<{\n  validateStatus?: 'error' | 'warning' | 'info';\n  orientation?: FilterBarOrientation;\n  isOverflowing?: boolean;\n}>`\n  ${({ theme, validateStatus, orientation, isOverflowing }) => `\n    border: 1px solid transparent;\n    &:focus {\n      border: 1px solid\n        ${theme.colors[validateStatus || 'primary']?.base};\n      outline: 0;\n      box-shadow: 0 0 0 3px\n        ${rgba(theme.colors[validateStatus || 'primary']?.base, 0.2)};\n    }\n    & .ant-slider {\n      margin-top: ${\n        orientation === FilterBarOrientation.HORIZONTAL ? 0 : theme.gridUnit\n      }px;\n      margin-bottom: ${\n        orientation === FilterBarOrientation.HORIZONTAL ? 0 : theme.gridUnit * 5\n      }px;\n\n      ${\n        orientation === FilterBarOrientation.HORIZONTAL &&\n        !isOverflowing &&\n        `line-height: 1.2;`\n      }\n\n      & .ant-slider-track {\n        background-color: ${\n          validateStatus && theme.colors[validateStatus]?.light1\n        };\n      }\n      & .ant-slider-handle {\n        border: ${\n          validateStatus && `2px solid ${theme.colors[validateStatus]?.light1}`\n        };\n        &:focus {\n          box-shadow: 0 0 0 3px\n            ${rgba(theme.colors[validateStatus || 'primary']?.base, 0.2)};\n        }\n      }\n      & .ant-slider-mark {\n        font-size: ${theme.typography.sizes.s}px;\n      }\n\n      &:hover {\n        & .ant-slider-track {\n          background-color: ${\n            validateStatus && theme.colors[validateStatus]?.base\n          };\n        }\n        & .ant-slider-handle {\n          border: ${\n            validateStatus && `2px solid ${theme.colors[validateStatus]?.base}`\n          };\n        }\n      }\n    }\n  `}\n`;\n\nconst numberFormatter = getNumberFormatter(NumberFormats.SMART_NUMBER);\n\nconst tipFormatter = (value: number) => numberFormatter(value);\n\nconst getLabel = (lower: number | null, upper: number | null): string => {\n  if (lower !== null && upper !== null && lower === upper) {\n    return `x = ${numberFormatter(lower)}`;\n  }\n  if (lower !== null && upper !== null) {\n    return `${numberFormatter(lower)} ≤ x ≤ ${numberFormatter(upper)}`;\n  }\n  if (lower !== null) {\n    return `x ≥ ${numberFormatter(lower)}`;\n  }\n  if (upper !== null) {\n    return `x ≤ ${numberFormatter(upper)}`;\n  }\n  return '';\n};\n\nconst getMarks = (\n  lower: number | null,\n  upper: number | null,\n): { [key: number]: string } => {\n  const newMarks: { [key: number]: string } = {};\n  if (lower !== null) {\n    newMarks[lower] = numberFormatter(lower);\n  }\n  if (upper !== null) {\n    newMarks[upper] = numberFormatter(upper);\n  }\n  return newMarks;\n};\n\nexport default function RangeFilterPlugin(props: PluginFilterRangeProps) {\n  const {\n    data,\n    formData,\n    height,\n    width,\n    setDataMask,\n    setFocusedFilter,\n    unsetFocusedFilter,\n    setHoveredFilter,\n    unsetHoveredFilter,\n    setFilterActive,\n    filterState,\n    inputRef,\n    filterBarOrientation,\n    isOverflowingFilterBar,\n  } = props;\n  const [row] = data;\n  // @ts-ignore\n  const { min, max }: { min: number; max: number } = row;\n  const { groupby, defaultValue, enableSingleValue } = formData;\n\n  const enableSingleMinValue = enableSingleValue === SingleValueType.Minimum;\n  const enableSingleMaxValue = enableSingleValue === SingleValueType.Maximum;\n  const enableSingleExactValue = enableSingleValue === SingleValueType.Exact;\n  const rangeValue = enableSingleValue === undefined;\n\n  const [col = ''] = ensureIsArray(groupby).map(getColumnLabel);\n  const [value, setValue] = useState<[number, number]>(\n    defaultValue ?? [min, enableSingleExactValue ? min : max],\n  );\n  const [marks, setMarks] = useState<{ [key: number]: string }>({});\n  const minIndex = 0;\n  const maxIndex = 1;\n  const minMax = value ?? [min, max];\n\n  const getBounds = useCallback(\n    (\n      value: [number, number],\n    ): { lower: number | null; upper: number | null } => {\n      const [lowerRaw, upperRaw] = value;\n\n      if (enableSingleExactValue) {\n        return { lower: lowerRaw, upper: upperRaw };\n      }\n\n      return {\n        lower: lowerRaw > min ? lowerRaw : null,\n        upper: upperRaw < max ? upperRaw : null,\n      };\n    },\n    [max, min, enableSingleExactValue],\n  );\n\n  const handleAfterChange = useCallback(\n    (value: [number, number]): void => {\n      setValue(value);\n      const { lower, upper } = getBounds(value);\n      setMarks(getMarks(lower, upper));\n\n      setDataMask({\n        extraFormData: getRangeExtraFormData(col, lower, upper),\n        filterState: {\n          value: lower !== null || upper !== null ? value : null,\n          label: getLabel(lower, upper),\n        },\n      });\n    },\n    [col, getBounds, setDataMask],\n  );\n\n  const handleChange = useCallback((value: [number, number]) => {\n    setValue(value);\n  }, []);\n\n  useEffect(() => {\n    // when switch filter type and queriesData still not updated we need ignore this case (in FilterBar)\n    if (row?.min === undefined && row?.max === undefined) {\n      return;\n    }\n\n    let filterStateValue = filterState.value ?? [min, max];\n    if (enableSingleMaxValue) {\n      const filterStateMax =\n        filterStateValue[maxIndex] <= minMax[maxIndex]\n          ? filterStateValue[maxIndex]\n          : minMax[maxIndex];\n\n      filterStateValue = [min, filterStateMax];\n    } else if (enableSingleMinValue) {\n      const filterStateMin =\n        filterStateValue[minIndex] >= minMax[minIndex]\n          ? filterStateValue[minIndex]\n          : minMax[minIndex];\n\n      filterStateValue = [filterStateMin, max];\n    } else if (enableSingleExactValue) {\n      filterStateValue = [minMax[minIndex], minMax[minIndex]];\n    }\n\n    handleAfterChange(filterStateValue);\n  }, [\n    enableSingleMaxValue,\n    enableSingleMinValue,\n    enableSingleExactValue,\n    JSON.stringify(filterState.value),\n    JSON.stringify(data),\n  ]);\n\n  const formItemExtra = useMemo(() => {\n    if (filterState.validateMessage) {\n      return (\n        <StatusMessage status={filterState.validateStatus}>\n          {filterState.validateMessage}\n        </StatusMessage>\n      );\n    }\n    return undefined;\n  }, [filterState.validateMessage, filterState.validateStatus]);\n\n  useEffect(() => {\n    if (enableSingleMaxValue) {\n      handleAfterChange([min, minMax[maxIndex]]);\n    }\n  }, [enableSingleMaxValue]);\n\n  useEffect(() => {\n    if (enableSingleMinValue) {\n      handleAfterChange([minMax[minIndex], max]);\n    }\n  }, [enableSingleMinValue]);\n\n  useEffect(() => {\n    if (enableSingleExactValue) {\n      handleAfterChange([minMax[minIndex], minMax[minIndex]]);\n    }\n  }, [enableSingleExactValue]);\n\n  return (\n    <FilterPluginStyle height={height} width={width}>\n      {Number.isNaN(Number(min)) || Number.isNaN(Number(max)) ? (\n        <h4>{t('Chosen non-numeric column')}</h4>\n      ) : (\n        <StyledFormItem extra={formItemExtra}>\n          <Wrapper\n            tabIndex={-1}\n            ref={inputRef}\n            validateStatus={filterState.validateStatus}\n            orientation={filterBarOrientation}\n            isOverflowing={isOverflowingFilterBar}\n            onFocus={setFocusedFilter}\n            onBlur={unsetFocusedFilter}\n            onMouseEnter={setHoveredFilter}\n            onMouseLeave={unsetHoveredFilter}\n            onMouseDown={() => setFilterActive(true)}\n            onMouseUp={() => setFilterActive(false)}\n          >\n            {enableSingleMaxValue && (\n              <AntdSlider\n                min={min}\n                max={max}\n                value={minMax[maxIndex]}\n                tipFormatter={tipFormatter}\n                marks={marks}\n                onAfterChange={value => handleAfterChange([min, value])}\n                onChange={value => handleChange([min, value])}\n              />\n            )}\n            {enableSingleMinValue && (\n              <StyledMinSlider\n                validateStatus={filterState.validateStatus}\n                min={min}\n                max={max}\n                value={minMax[minIndex]}\n                tipFormatter={tipFormatter}\n                marks={marks}\n                onAfterChange={value => handleAfterChange([value, max])}\n                onChange={value => handleChange([value, max])}\n              />\n            )}\n            {enableSingleExactValue && (\n              <AntdSlider\n                min={min}\n                max={max}\n                included={false}\n                value={minMax[minIndex]}\n                tipFormatter={tipFormatter}\n                marks={marks}\n                onAfterChange={value => handleAfterChange([value, value])}\n                onChange={value => handleChange([value, value])}\n              />\n            )}\n            {rangeValue && (\n              <AntdSlider\n                range\n                min={min}\n                max={max}\n                value={minMax}\n                onAfterChange={handleAfterChange}\n                onChange={handleChange}\n                tipFormatter={tipFormatter}\n                marks={marks}\n              />\n            )}\n          </Wrapper>\n        </StyledFormItem>\n      )}\n    </FilterPluginStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}