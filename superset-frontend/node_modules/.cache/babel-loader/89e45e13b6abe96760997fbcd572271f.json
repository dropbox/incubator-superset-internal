{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { isFeatureEnabled, FeatureFlag, t, useTheme } from '@superset-ui/core';\nimport { CardStyles } from 'src/views/CRUD/utils';\nimport { AntdDropdown } from 'src/components';\nimport { Menu } from 'src/components/Menu';\nimport ListViewCard from 'src/components/ListViewCard';\nimport Icons from 'src/components/Icons';\nimport Label from 'src/components/Label';\nimport FacePile from 'src/components/FacePile';\nimport FaveStar from 'src/components/FaveStar';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction DashboardCard(_ref) {let { dashboard, hasPerm, bulkSelectEnabled, userId, openDashboardEditModal, favoriteStatus, saveFavoriteStatus, showThumbnails, handleBulkDashboardExport, onDelete } = _ref;\n  const history = useHistory();\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport = hasPerm('can_export');\n  const theme = useTheme();\n  const menu = ___EmotionJSX(Menu, null,\n  canEdit && openDashboardEditModal && ___EmotionJSX(Menu.Item, null,\n  ___EmotionJSX(\"div\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: () => openDashboardEditModal == null ? void 0 : openDashboardEditModal(dashboard) },\n  ___EmotionJSX(Icons.EditAlt, { iconSize: \"l\" }), \" \", t('Edit'))),\n\n\n  canExport && ___EmotionJSX(Menu.Item, null,\n  ___EmotionJSX(\"div\", { role: \"button\", tabIndex: 0, onClick: () => handleBulkDashboardExport([dashboard]), className: \"action-button\" },\n  ___EmotionJSX(Icons.Share, { iconSize: \"l\" }), \" \", t('Export'))),\n\n\n  canDelete && ___EmotionJSX(Menu.Item, null,\n  ___EmotionJSX(\"div\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: () => onDelete(dashboard) },\n  ___EmotionJSX(Icons.Trash, { iconSize: \"l\" }), \" \", t('Delete'))));\n\n\n\n  return ___EmotionJSX(CardStyles, { onClick: () => {\n      if (!bulkSelectEnabled) {\n        history.push(dashboard.url);\n      }\n    } },\n  ___EmotionJSX(ListViewCard, { loading: dashboard.loading || false, title: dashboard.dashboard_title, certifiedBy: dashboard.certified_by, certificationDetails: dashboard.certification_details, titleRight: ___EmotionJSX(Label, null, dashboard.published ? t('published') : t('draft')), cover: !isFeatureEnabled(FeatureFlag.THUMBNAILS) || !showThumbnails ? ___EmotionJSX(React.Fragment, null) : null, url: bulkSelectEnabled ? undefined : dashboard.url, linkComponent: Link, imgURL: dashboard.thumbnail_url, imgFallbackURL: \"/static/assets/images/dashboard-card-fallback.svg\", description: t('Modified %s', dashboard.changed_on_delta_humanized), coverLeft: ___EmotionJSX(FacePile, { users: dashboard.owners || [] }), actions: ___EmotionJSX(ListViewCard.Actions, { onClick: (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n      } },\n    userId && ___EmotionJSX(FaveStar, { itemId: dashboard.id, saveFaveStar: saveFavoriteStatus, isStarred: favoriteStatus }),\n    ___EmotionJSX(AntdDropdown, { overlay: menu },\n    ___EmotionJSX(Icons.MoreVert, { iconColor: theme.colors.grayscale.base }))) }));\n\n\n\n}\nexport default DashboardCard;","map":{"version":3,"mappings":"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","names":["React","Link","useHistory","isFeatureEnabled","FeatureFlag","t","useTheme","CardStyles","AntdDropdown","Menu","ListViewCard","Icons","Label","FacePile","FaveStar","DashboardCard","dashboard","hasPerm","bulkSelectEnabled","userId","openDashboardEditModal","favoriteStatus","saveFavoriteStatus","showThumbnails","handleBulkDashboardExport","onDelete","history","canEdit","canDelete","canExport","theme","menu","push","url","loading","dashboard_title","certified_by","certification_details","published","THUMBNAILS","undefined","thumbnail_url","changed_on_delta_humanized","owners","e","stopPropagation","preventDefault","id","colors","grayscale","base"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/features/dashboards/DashboardCard.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { isFeatureEnabled, FeatureFlag, t, useTheme } from '@superset-ui/core';\nimport { CardStyles } from 'src/views/CRUD/utils';\nimport { AntdDropdown } from 'src/components';\nimport { Menu } from 'src/components/Menu';\nimport ListViewCard from 'src/components/ListViewCard';\nimport Icons from 'src/components/Icons';\nimport Label from 'src/components/Label';\nimport FacePile from 'src/components/FacePile';\nimport FaveStar from 'src/components/FaveStar';\nimport { Dashboard } from 'src/views/CRUD/types';\n\ninterface DashboardCardProps {\n  isChart?: boolean;\n  dashboard: Dashboard;\n  hasPerm: (name: string) => boolean;\n  bulkSelectEnabled: boolean;\n  loading: boolean;\n  openDashboardEditModal?: (d: Dashboard) => void;\n  saveFavoriteStatus: (id: number, isStarred: boolean) => void;\n  favoriteStatus: boolean;\n  userId?: string | number;\n  showThumbnails?: boolean;\n  handleBulkDashboardExport: (dashboardsToExport: Dashboard[]) => void;\n  onDelete: (dashboard: Dashboard) => void;\n}\n\nfunction DashboardCard({\n  dashboard,\n  hasPerm,\n  bulkSelectEnabled,\n  userId,\n  openDashboardEditModal,\n  favoriteStatus,\n  saveFavoriteStatus,\n  showThumbnails,\n  handleBulkDashboardExport,\n  onDelete,\n}: DashboardCardProps) {\n  const history = useHistory();\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport = hasPerm('can_export');\n\n  const theme = useTheme();\n  const menu = (\n    <Menu>\n      {canEdit && openDashboardEditModal && (\n        <Menu.Item>\n          <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={() => openDashboardEditModal?.(dashboard)}\n            data-test=\"dashboard-card-option-edit-button\"\n          >\n            <Icons.EditAlt iconSize=\"l\" data-test=\"edit-alt\" /> {t('Edit')}\n          </div>\n        </Menu.Item>\n      )}\n      {canExport && (\n        <Menu.Item>\n          <div\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => handleBulkDashboardExport([dashboard])}\n            className=\"action-button\"\n            data-test=\"dashboard-card-option-export-button\"\n          >\n            <Icons.Share iconSize=\"l\" /> {t('Export')}\n          </div>\n        </Menu.Item>\n      )}\n      {canDelete && (\n        <Menu.Item>\n          <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={() => onDelete(dashboard)}\n            data-test=\"dashboard-card-option-delete-button\"\n          >\n            <Icons.Trash iconSize=\"l\" /> {t('Delete')}\n          </div>\n        </Menu.Item>\n      )}\n    </Menu>\n  );\n  return (\n    <CardStyles\n      onClick={() => {\n        if (!bulkSelectEnabled) {\n          history.push(dashboard.url);\n        }\n      }}\n    >\n      <ListViewCard\n        loading={dashboard.loading || false}\n        title={dashboard.dashboard_title}\n        certifiedBy={dashboard.certified_by}\n        certificationDetails={dashboard.certification_details}\n        titleRight={\n          <Label>{dashboard.published ? t('published') : t('draft')}</Label>\n        }\n        cover={\n          !isFeatureEnabled(FeatureFlag.THUMBNAILS) || !showThumbnails ? (\n            <></>\n          ) : null\n        }\n        url={bulkSelectEnabled ? undefined : dashboard.url}\n        linkComponent={Link}\n        imgURL={dashboard.thumbnail_url}\n        imgFallbackURL=\"/static/assets/images/dashboard-card-fallback.svg\"\n        description={t('Modified %s', dashboard.changed_on_delta_humanized)}\n        coverLeft={<FacePile users={dashboard.owners || []} />}\n        actions={\n          <ListViewCard.Actions\n            onClick={e => {\n              e.stopPropagation();\n              e.preventDefault();\n            }}\n          >\n            {userId && (\n              <FaveStar\n                itemId={dashboard.id}\n                saveFaveStar={saveFavoriteStatus}\n                isStarred={favoriteStatus}\n              />\n            )}\n            <AntdDropdown overlay={menu}>\n              <Icons.MoreVert iconColor={theme.colors.grayscale.base} />\n            </AntdDropdown>\n          </ListViewCard.Actions>\n        }\n      />\n    </CardStyles>\n  );\n}\n\nexport default DashboardCard;\n"]},"metadata":{},"sourceType":"module"}