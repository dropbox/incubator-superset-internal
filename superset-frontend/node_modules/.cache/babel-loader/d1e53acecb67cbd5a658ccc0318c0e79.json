{"ast":null,"code":"import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { css, FeatureFlag, styled, t, useTheme } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { Menu } from 'src/components/Menu';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport Button from 'src/components/Button';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport { exportChart, getChartKey } from 'src/explore/exploreUtils';\nimport downloadAsImage from 'src/utils/downloadAsImage';\nimport { getChartPermalink } from 'src/utils/urlUtils';\nimport copyTextToClipboard from 'src/utils/copy';\nimport HeaderReportDropDown from 'src/components/ReportModal/HeaderReportDropdown';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport ViewQueryModal from '../controls/ViewQueryModal';\nimport EmbedCodeContent from '../EmbedCodeContent';\nimport DashboardsSubMenu from './DashboardsSubMenu';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst MENU_KEYS = {\n  EDIT_PROPERTIES: 'edit_properties',\n  DASHBOARDS_ADDED_TO: 'dashboards_added_to',\n  DOWNLOAD_SUBMENU: 'download_submenu',\n  EXPORT_TO_CSV: 'export_to_csv',\n  EXPORT_TO_CSV_PIVOTED: 'export_to_csv_pivoted',\n  EXPORT_TO_JSON: 'export_to_json',\n  EXPORT_TO_XLSX: 'export_to_xlsx',\n  DOWNLOAD_AS_IMAGE: 'download_as_image',\n  SHARE_SUBMENU: 'share_submenu',\n  COPY_PERMALINK: 'copy_permalink',\n  EMBED_CODE: 'embed_code',\n  SHARE_BY_EMAIL: 'share_by_email',\n  REPORT_SUBMENU: 'report_submenu',\n  SET_UP_REPORT: 'set_up_report',\n  SET_REPORT_ACTIVE: 'set_report_active',\n  EDIT_REPORT: 'edit_report',\n  DELETE_REPORT: 'delete_report',\n  VIEW_QUERY: 'view_query',\n  RUN_IN_SQL_LAB: 'run_in_sql_lab' };\n\n\nconst VIZ_TYPES_PIVOTABLE = ['pivot_table', 'pivot_table_v2'];\n\nexport const MenuItemWithCheckboxContainer = styled.div`\n  ${(_ref) => {let { theme } = _ref;return css`\n    display: flex;\n    align-items: center;\n\n    & svg {\n      width: ${theme.gridUnit * 3}px;\n      height: ${theme.gridUnit * 3}px;\n    }\n\n    & span[role='checkbox'] {\n      display: inline-flex;\n      margin-right: ${theme.gridUnit}px;\n    }\n  `;}}\n`;\n\nexport const MenuTrigger = styled(Button)`\n  ${(_ref2) => {let { theme } = _ref2;return css`\n    width: ${theme.gridUnit * 8}px;\n    height: ${theme.gridUnit * 8}px;\n    padding: 0;\n    border: 1px solid ${theme.colors.primary.dark2};\n\n    &.ant-btn > span.anticon {\n      line-height: 0;\n      transition: inherit;\n    }\n\n    &:hover:not(:focus) > span.anticon {\n      color: ${theme.colors.primary.light1};\n    }\n  `;}}\n`;\n\nconst iconReset = css`\n  .ant-dropdown-menu-item > & > .anticon:first-child {\n    margin-right: 0;\n    vertical-align: 0;\n  }\n`;\n\nexport const useExploreAdditionalActionsMenu = (\nlatestQueryFormData,\ncanDownloadCSV,\nslice,\nonOpenInEditor,\nonOpenPropertiesModal,\nownState,\ndashboards) =>\n{\n  const theme = useTheme();\n  const { addDangerToast, addSuccessToast } = useToasts();\n  const [showReportSubMenu, setShowReportSubMenu] = useState(null);\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n  const [openSubmenus, setOpenSubmenus] = useState([]);\n  const chart = useSelector(\n  (state) => {var _state$charts;return (_state$charts = state.charts) == null ? void 0 : _state$charts[getChartKey(state.explore)];});\n\n\n  const { datasource } = latestQueryFormData;\n\n  const shareByEmail = useCallback(async () => {\n    try {\n      const subject = t('Superset Chart');\n      const url = await getChartPermalink(latestQueryFormData);\n      const body = encodeURIComponent(t('%s%s', 'Check out this chart: ', url));\n      window.location.href = `mailto:?Subject=${subject}%20&Body=${body}`;\n    } catch (error) {\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }, [addDangerToast, latestQueryFormData]);\n\n  const exportCSV = useCallback(\n  () =>\n  canDownloadCSV ?\n  exportChart({\n    formData: latestQueryFormData,\n    ownState,\n    resultType: 'full',\n    resultFormat: 'csv' }) :\n\n  null,\n  [canDownloadCSV, latestQueryFormData]);\n\n\n  const exportCSVPivoted = useCallback(\n  () =>\n  canDownloadCSV ?\n  exportChart({\n    formData: latestQueryFormData,\n    resultType: 'post_processed',\n    resultFormat: 'csv' }) :\n\n  null,\n  [canDownloadCSV, latestQueryFormData]);\n\n\n  const exportJson = useCallback(\n  () =>\n  exportChart({\n    formData: latestQueryFormData,\n    resultType: 'results',\n    resultFormat: 'json' }),\n\n  [latestQueryFormData]);\n\n\n  const exportExcel = useCallback(\n  () =>\n  exportChart({\n    formData: latestQueryFormData,\n    resultType: 'results',\n    resultFormat: 'xlsx' }),\n\n  [latestQueryFormData]);\n\n\n  const copyLink = useCallback(async () => {\n    try {\n      if (!latestQueryFormData) {\n        throw new Error();\n      }\n      await copyTextToClipboard(() => getChartPermalink(latestQueryFormData));\n      addSuccessToast(t('Copied to clipboard!'));\n    } catch (error) {\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }, [addDangerToast, addSuccessToast, latestQueryFormData]);\n\n  const handleMenuClick = useCallback(\n  (_ref3) => {var _slice$slice_name;let { key, domEvent } = _ref3;\n    switch (key) {\n      case MENU_KEYS.EDIT_PROPERTIES:\n        onOpenPropertiesModal();\n        setIsDropdownVisible(false);\n        break;\n      case MENU_KEYS.EXPORT_TO_CSV:\n        exportCSV();\n        setIsDropdownVisible(false);\n        setOpenSubmenus([]);\n        break;\n      case MENU_KEYS.EXPORT_TO_CSV_PIVOTED:\n        exportCSVPivoted();\n        setIsDropdownVisible(false);\n        setOpenSubmenus([]);\n        break;\n      case MENU_KEYS.EXPORT_TO_JSON:\n        exportJson();\n        setIsDropdownVisible(false);\n        setOpenSubmenus([]);\n\n        break;\n      case MENU_KEYS.EXPORT_TO_XLSX:\n        exportExcel();\n        setIsDropdownVisible(false);\n        setOpenSubmenus([]);\n        break;\n      case MENU_KEYS.DOWNLOAD_AS_IMAGE:\n        downloadAsImage(\n        '.panel-body .chart-container',\n        // eslint-disable-next-line camelcase\n        (_slice$slice_name = slice == null ? void 0 : slice.slice_name) != null ? _slice$slice_name : t('New chart'),\n        true)(\n        domEvent);\n        setIsDropdownVisible(false);\n        setOpenSubmenus([]);\n        break;\n      case MENU_KEYS.COPY_PERMALINK:\n        copyLink();\n        setIsDropdownVisible(false);\n        setOpenSubmenus([]);\n        break;\n      case MENU_KEYS.EMBED_CODE:\n        setIsDropdownVisible(false);\n        setOpenSubmenus([]);\n        break;\n      case MENU_KEYS.SHARE_BY_EMAIL:\n        shareByEmail();\n        setIsDropdownVisible(false);\n        setOpenSubmenus([]);\n        break;\n      case MENU_KEYS.VIEW_QUERY:\n        setIsDropdownVisible(false);\n        break;\n      case MENU_KEYS.RUN_IN_SQL_LAB:\n        onOpenInEditor(latestQueryFormData);\n        setIsDropdownVisible(false);\n        break;\n      default:\n        break;}\n\n  },\n  [\n  copyLink,\n  exportCSV,\n  exportCSVPivoted,\n  exportJson,\n  latestQueryFormData,\n  onOpenInEditor,\n  onOpenPropertiesModal,\n  shareByEmail,\n  slice == null ? void 0 : slice.slice_name]);\n\n\n\n  const menu = useMemo(\n  () =>\n  ___EmotionJSX(Menu, {\n    onClick: handleMenuClick,\n    selectable: false,\n    openKeys: openSubmenus,\n    onOpenChange: setOpenSubmenus },\n\n  ___EmotionJSX(React.Fragment, null,\n  slice &&\n  ___EmotionJSX(Menu.Item, { key: MENU_KEYS.EDIT_PROPERTIES },\n  t('Edit chart properties')),\n\n\n  ___EmotionJSX(Menu.SubMenu, {\n    title: t('Dashboards added to'),\n    key: MENU_KEYS.DASHBOARDS_ADDED_TO },\n\n  ___EmotionJSX(DashboardsSubMenu, {\n    chartId: slice == null ? void 0 : slice.slice_id,\n    dashboards: dashboards })),\n\n\n  ___EmotionJSX(Menu.Divider, null)),\n\n  ___EmotionJSX(Menu.SubMenu, { title: t('Download'), key: MENU_KEYS.DOWNLOAD_SUBMENU },\n  _includesInstanceProperty(VIZ_TYPES_PIVOTABLE).call(VIZ_TYPES_PIVOTABLE, latestQueryFormData.viz_type) ?\n  ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Menu.Item, {\n    key: MENU_KEYS.EXPORT_TO_CSV,\n    icon: ___EmotionJSX(Icons.FileOutlined, { css: iconReset }),\n    disabled: !canDownloadCSV },\n\n  t('Export to original .CSV')),\n\n  ___EmotionJSX(Menu.Item, {\n    key: MENU_KEYS.EXPORT_TO_CSV_PIVOTED,\n    icon: ___EmotionJSX(Icons.FileOutlined, { css: iconReset }),\n    disabled: !canDownloadCSV },\n\n  t('Export to pivoted .CSV'))) :\n\n\n\n  ___EmotionJSX(Menu.Item, {\n    key: MENU_KEYS.EXPORT_TO_CSV,\n    icon: ___EmotionJSX(Icons.FileOutlined, { css: iconReset }),\n    disabled: !canDownloadCSV },\n\n  t('Export to .CSV')),\n\n\n  ___EmotionJSX(Menu.Item, {\n    key: MENU_KEYS.EXPORT_TO_JSON,\n    icon: ___EmotionJSX(Icons.FileOutlined, { css: iconReset }) },\n\n  t('Export to .JSON')),\n\n  ___EmotionJSX(Menu.Item, {\n    key: MENU_KEYS.DOWNLOAD_AS_IMAGE,\n    icon: ___EmotionJSX(Icons.FileImageOutlined, { css: iconReset }) },\n\n  t('Download as image')),\n\n  ___EmotionJSX(Menu.Item, {\n    key: MENU_KEYS.EXPORT_TO_XLSX,\n    icon: ___EmotionJSX(Icons.FileOutlined, { css: iconReset }) },\n\n  t('Export to Excel'))),\n\n\n  ___EmotionJSX(Menu.SubMenu, { title: t('Share'), key: MENU_KEYS.SHARE_SUBMENU },\n  ___EmotionJSX(Menu.Item, { key: MENU_KEYS.COPY_PERMALINK },\n  t('Copy permalink to clipboard')),\n\n  ___EmotionJSX(Menu.Item, { key: MENU_KEYS.SHARE_BY_EMAIL },\n  t('Share chart by email')),\n\n  isFeatureEnabled(FeatureFlag.EMBEDDABLE_CHARTS) ?\n  ___EmotionJSX(Menu.Item, { key: MENU_KEYS.EMBED_CODE },\n  ___EmotionJSX(ModalTrigger, {\n    triggerNode:\n    ___EmotionJSX(\"span\", null, t('Embed code')),\n\n    modalTitle: t('Embed code'),\n    modalBody:\n    ___EmotionJSX(EmbedCodeContent, {\n      formData: latestQueryFormData,\n      addDangerToast: addDangerToast }),\n\n\n    maxWidth: `${theme.gridUnit * 100}px`,\n    destroyOnClose: true,\n    responsive: true })) :\n\n\n  null),\n\n  ___EmotionJSX(Menu.Divider, null),\n  showReportSubMenu ?\n  ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Menu.SubMenu, { title: t('Manage email report') },\n  ___EmotionJSX(HeaderReportDropDown, {\n    chart: chart,\n    setShowReportSubMenu: setShowReportSubMenu,\n    showReportSubMenu: showReportSubMenu,\n    setIsDropdownVisible: setIsDropdownVisible,\n    isDropdownVisible: isDropdownVisible,\n    useTextMenu: true })),\n\n\n  ___EmotionJSX(Menu.Divider, null)) :\n\n\n  ___EmotionJSX(Menu, null,\n  ___EmotionJSX(HeaderReportDropDown, {\n    chart: chart,\n    setShowReportSubMenu: setShowReportSubMenu,\n    setIsDropdownVisible: setIsDropdownVisible,\n    isDropdownVisible: isDropdownVisible,\n    useTextMenu: true })),\n\n\n\n  ___EmotionJSX(Menu.Item, { key: MENU_KEYS.VIEW_QUERY },\n  ___EmotionJSX(ModalTrigger, {\n    triggerNode:\n    ___EmotionJSX(\"span\", null, t('View query')),\n\n    modalTitle: t('View query'),\n    modalBody:\n    ___EmotionJSX(ViewQueryModal, { latestQueryFormData: latestQueryFormData }),\n\n    draggable: true,\n    resizable: true,\n    responsive: true })),\n\n\n  datasource &&\n  ___EmotionJSX(Menu.Item, { key: MENU_KEYS.RUN_IN_SQL_LAB },\n  t('Run in SQL Lab'))),\n\n\n\n\n  [\n  addDangerToast,\n  canDownloadCSV,\n  chart,\n  dashboards,\n  handleMenuClick,\n  isDropdownVisible,\n  latestQueryFormData,\n  openSubmenus,\n  showReportSubMenu,\n  slice,\n  theme.gridUnit]);\n\n\n  return [menu, isDropdownVisible, setIsDropdownVisible];\n};","map":{"version":3,"names":["React","useCallback","useMemo","useState","useSelector","css","FeatureFlag","styled","t","useTheme","Icons","Menu","ModalTrigger","Button","useToasts","exportChart","getChartKey","downloadAsImage","getChartPermalink","copyTextToClipboard","HeaderReportDropDown","isFeatureEnabled","ViewQueryModal","EmbedCodeContent","DashboardsSubMenu","MENU_KEYS","EDIT_PROPERTIES","DASHBOARDS_ADDED_TO","DOWNLOAD_SUBMENU","EXPORT_TO_CSV","EXPORT_TO_CSV_PIVOTED","EXPORT_TO_JSON","EXPORT_TO_XLSX","DOWNLOAD_AS_IMAGE","SHARE_SUBMENU","COPY_PERMALINK","EMBED_CODE","SHARE_BY_EMAIL","REPORT_SUBMENU","SET_UP_REPORT","SET_REPORT_ACTIVE","EDIT_REPORT","DELETE_REPORT","VIEW_QUERY","RUN_IN_SQL_LAB","VIZ_TYPES_PIVOTABLE","MenuItemWithCheckboxContainer","div","theme","gridUnit","MenuTrigger","colors","primary","dark2","light1","iconReset","useExploreAdditionalActionsMenu","latestQueryFormData","canDownloadCSV","slice","onOpenInEditor","onOpenPropertiesModal","ownState","dashboards","addDangerToast","addSuccessToast","showReportSubMenu","setShowReportSubMenu","isDropdownVisible","setIsDropdownVisible","openSubmenus","setOpenSubmenus","chart","state","charts","explore","datasource","shareByEmail","subject","url","body","encodeURIComponent","window","location","href","error","exportCSV","formData","resultType","resultFormat","exportCSVPivoted","exportJson","exportExcel","copyLink","Error","handleMenuClick","key","domEvent","slice_name","menu","slice_id","viz_type","EMBEDDABLE_CHARTS"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/useExploreAdditionalActionsMenu/index.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { css, FeatureFlag, styled, t, useTheme } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { Menu } from 'src/components/Menu';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport Button from 'src/components/Button';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport { exportChart, getChartKey } from 'src/explore/exploreUtils';\nimport downloadAsImage from 'src/utils/downloadAsImage';\nimport { getChartPermalink } from 'src/utils/urlUtils';\nimport copyTextToClipboard from 'src/utils/copy';\nimport HeaderReportDropDown from 'src/components/ReportModal/HeaderReportDropdown';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport ViewQueryModal from '../controls/ViewQueryModal';\nimport EmbedCodeContent from '../EmbedCodeContent';\nimport DashboardsSubMenu from './DashboardsSubMenu';\n\nconst MENU_KEYS = {\n  EDIT_PROPERTIES: 'edit_properties',\n  DASHBOARDS_ADDED_TO: 'dashboards_added_to',\n  DOWNLOAD_SUBMENU: 'download_submenu',\n  EXPORT_TO_CSV: 'export_to_csv',\n  EXPORT_TO_CSV_PIVOTED: 'export_to_csv_pivoted',\n  EXPORT_TO_JSON: 'export_to_json',\n  EXPORT_TO_XLSX: 'export_to_xlsx',\n  DOWNLOAD_AS_IMAGE: 'download_as_image',\n  SHARE_SUBMENU: 'share_submenu',\n  COPY_PERMALINK: 'copy_permalink',\n  EMBED_CODE: 'embed_code',\n  SHARE_BY_EMAIL: 'share_by_email',\n  REPORT_SUBMENU: 'report_submenu',\n  SET_UP_REPORT: 'set_up_report',\n  SET_REPORT_ACTIVE: 'set_report_active',\n  EDIT_REPORT: 'edit_report',\n  DELETE_REPORT: 'delete_report',\n  VIEW_QUERY: 'view_query',\n  RUN_IN_SQL_LAB: 'run_in_sql_lab',\n};\n\nconst VIZ_TYPES_PIVOTABLE = ['pivot_table', 'pivot_table_v2'];\n\nexport const MenuItemWithCheckboxContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    align-items: center;\n\n    & svg {\n      width: ${theme.gridUnit * 3}px;\n      height: ${theme.gridUnit * 3}px;\n    }\n\n    & span[role='checkbox'] {\n      display: inline-flex;\n      margin-right: ${theme.gridUnit}px;\n    }\n  `}\n`;\n\nexport const MenuTrigger = styled(Button)`\n  ${({ theme }) => css`\n    width: ${theme.gridUnit * 8}px;\n    height: ${theme.gridUnit * 8}px;\n    padding: 0;\n    border: 1px solid ${theme.colors.primary.dark2};\n\n    &.ant-btn > span.anticon {\n      line-height: 0;\n      transition: inherit;\n    }\n\n    &:hover:not(:focus) > span.anticon {\n      color: ${theme.colors.primary.light1};\n    }\n  `}\n`;\n\nconst iconReset = css`\n  .ant-dropdown-menu-item > & > .anticon:first-child {\n    margin-right: 0;\n    vertical-align: 0;\n  }\n`;\n\nexport const useExploreAdditionalActionsMenu = (\n  latestQueryFormData,\n  canDownloadCSV,\n  slice,\n  onOpenInEditor,\n  onOpenPropertiesModal,\n  ownState,\n  dashboards,\n) => {\n  const theme = useTheme();\n  const { addDangerToast, addSuccessToast } = useToasts();\n  const [showReportSubMenu, setShowReportSubMenu] = useState(null);\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n  const [openSubmenus, setOpenSubmenus] = useState([]);\n  const chart = useSelector(\n    state => state.charts?.[getChartKey(state.explore)],\n  );\n\n  const { datasource } = latestQueryFormData;\n\n  const shareByEmail = useCallback(async () => {\n    try {\n      const subject = t('Superset Chart');\n      const url = await getChartPermalink(latestQueryFormData);\n      const body = encodeURIComponent(t('%s%s', 'Check out this chart: ', url));\n      window.location.href = `mailto:?Subject=${subject}%20&Body=${body}`;\n    } catch (error) {\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }, [addDangerToast, latestQueryFormData]);\n\n  const exportCSV = useCallback(\n    () =>\n      canDownloadCSV\n        ? exportChart({\n            formData: latestQueryFormData,\n            ownState,\n            resultType: 'full',\n            resultFormat: 'csv',\n          })\n        : null,\n    [canDownloadCSV, latestQueryFormData],\n  );\n\n  const exportCSVPivoted = useCallback(\n    () =>\n      canDownloadCSV\n        ? exportChart({\n            formData: latestQueryFormData,\n            resultType: 'post_processed',\n            resultFormat: 'csv',\n          })\n        : null,\n    [canDownloadCSV, latestQueryFormData],\n  );\n\n  const exportJson = useCallback(\n    () =>\n      exportChart({\n        formData: latestQueryFormData,\n        resultType: 'results',\n        resultFormat: 'json',\n      }),\n    [latestQueryFormData],\n  );\n\n  const exportExcel = useCallback(\n    () =>\n      exportChart({\n        formData: latestQueryFormData,\n        resultType: 'results',\n        resultFormat: 'xlsx',\n      }),\n    [latestQueryFormData],\n  );\n\n  const copyLink = useCallback(async () => {\n    try {\n      if (!latestQueryFormData) {\n        throw new Error();\n      }\n      await copyTextToClipboard(() => getChartPermalink(latestQueryFormData));\n      addSuccessToast(t('Copied to clipboard!'));\n    } catch (error) {\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }, [addDangerToast, addSuccessToast, latestQueryFormData]);\n\n  const handleMenuClick = useCallback(\n    ({ key, domEvent }) => {\n      switch (key) {\n        case MENU_KEYS.EDIT_PROPERTIES:\n          onOpenPropertiesModal();\n          setIsDropdownVisible(false);\n          break;\n        case MENU_KEYS.EXPORT_TO_CSV:\n          exportCSV();\n          setIsDropdownVisible(false);\n          setOpenSubmenus([]);\n          break;\n        case MENU_KEYS.EXPORT_TO_CSV_PIVOTED:\n          exportCSVPivoted();\n          setIsDropdownVisible(false);\n          setOpenSubmenus([]);\n          break;\n        case MENU_KEYS.EXPORT_TO_JSON:\n          exportJson();\n          setIsDropdownVisible(false);\n          setOpenSubmenus([]);\n\n          break;\n        case MENU_KEYS.EXPORT_TO_XLSX:\n          exportExcel();\n          setIsDropdownVisible(false);\n          setOpenSubmenus([]);\n          break;\n        case MENU_KEYS.DOWNLOAD_AS_IMAGE:\n          downloadAsImage(\n            '.panel-body .chart-container',\n            // eslint-disable-next-line camelcase\n            slice?.slice_name ?? t('New chart'),\n            true,\n          )(domEvent);\n          setIsDropdownVisible(false);\n          setOpenSubmenus([]);\n          break;\n        case MENU_KEYS.COPY_PERMALINK:\n          copyLink();\n          setIsDropdownVisible(false);\n          setOpenSubmenus([]);\n          break;\n        case MENU_KEYS.EMBED_CODE:\n          setIsDropdownVisible(false);\n          setOpenSubmenus([]);\n          break;\n        case MENU_KEYS.SHARE_BY_EMAIL:\n          shareByEmail();\n          setIsDropdownVisible(false);\n          setOpenSubmenus([]);\n          break;\n        case MENU_KEYS.VIEW_QUERY:\n          setIsDropdownVisible(false);\n          break;\n        case MENU_KEYS.RUN_IN_SQL_LAB:\n          onOpenInEditor(latestQueryFormData);\n          setIsDropdownVisible(false);\n          break;\n        default:\n          break;\n      }\n    },\n    [\n      copyLink,\n      exportCSV,\n      exportCSVPivoted,\n      exportJson,\n      latestQueryFormData,\n      onOpenInEditor,\n      onOpenPropertiesModal,\n      shareByEmail,\n      slice?.slice_name,\n    ],\n  );\n\n  const menu = useMemo(\n    () => (\n      <Menu\n        onClick={handleMenuClick}\n        selectable={false}\n        openKeys={openSubmenus}\n        onOpenChange={setOpenSubmenus}\n      >\n        <>\n          {slice && (\n            <Menu.Item key={MENU_KEYS.EDIT_PROPERTIES}>\n              {t('Edit chart properties')}\n            </Menu.Item>\n          )}\n          <Menu.SubMenu\n            title={t('Dashboards added to')}\n            key={MENU_KEYS.DASHBOARDS_ADDED_TO}\n          >\n            <DashboardsSubMenu\n              chartId={slice?.slice_id}\n              dashboards={dashboards}\n            />\n          </Menu.SubMenu>\n          <Menu.Divider />\n        </>\n        <Menu.SubMenu title={t('Download')} key={MENU_KEYS.DOWNLOAD_SUBMENU}>\n          {VIZ_TYPES_PIVOTABLE.includes(latestQueryFormData.viz_type) ? (\n            <>\n              <Menu.Item\n                key={MENU_KEYS.EXPORT_TO_CSV}\n                icon={<Icons.FileOutlined css={iconReset} />}\n                disabled={!canDownloadCSV}\n              >\n                {t('Export to original .CSV')}\n              </Menu.Item>\n              <Menu.Item\n                key={MENU_KEYS.EXPORT_TO_CSV_PIVOTED}\n                icon={<Icons.FileOutlined css={iconReset} />}\n                disabled={!canDownloadCSV}\n              >\n                {t('Export to pivoted .CSV')}\n              </Menu.Item>\n            </>\n          ) : (\n            <Menu.Item\n              key={MENU_KEYS.EXPORT_TO_CSV}\n              icon={<Icons.FileOutlined css={iconReset} />}\n              disabled={!canDownloadCSV}\n            >\n              {t('Export to .CSV')}\n            </Menu.Item>\n          )}\n          <Menu.Item\n            key={MENU_KEYS.EXPORT_TO_JSON}\n            icon={<Icons.FileOutlined css={iconReset} />}\n          >\n            {t('Export to .JSON')}\n          </Menu.Item>\n          <Menu.Item\n            key={MENU_KEYS.DOWNLOAD_AS_IMAGE}\n            icon={<Icons.FileImageOutlined css={iconReset} />}\n          >\n            {t('Download as image')}\n          </Menu.Item>\n          <Menu.Item\n            key={MENU_KEYS.EXPORT_TO_XLSX}\n            icon={<Icons.FileOutlined css={iconReset} />}\n          >\n            {t('Export to Excel')}\n          </Menu.Item>\n        </Menu.SubMenu>\n        <Menu.SubMenu title={t('Share')} key={MENU_KEYS.SHARE_SUBMENU}>\n          <Menu.Item key={MENU_KEYS.COPY_PERMALINK}>\n            {t('Copy permalink to clipboard')}\n          </Menu.Item>\n          <Menu.Item key={MENU_KEYS.SHARE_BY_EMAIL}>\n            {t('Share chart by email')}\n          </Menu.Item>\n          {isFeatureEnabled(FeatureFlag.EMBEDDABLE_CHARTS) ? (\n            <Menu.Item key={MENU_KEYS.EMBED_CODE}>\n              <ModalTrigger\n                triggerNode={\n                  <span data-test=\"embed-code-button\">{t('Embed code')}</span>\n                }\n                modalTitle={t('Embed code')}\n                modalBody={\n                  <EmbedCodeContent\n                    formData={latestQueryFormData}\n                    addDangerToast={addDangerToast}\n                  />\n                }\n                maxWidth={`${theme.gridUnit * 100}px`}\n                destroyOnClose\n                responsive\n              />\n            </Menu.Item>\n          ) : null}\n        </Menu.SubMenu>\n        <Menu.Divider />\n        {showReportSubMenu ? (\n          <>\n            <Menu.SubMenu title={t('Manage email report')}>\n              <HeaderReportDropDown\n                chart={chart}\n                setShowReportSubMenu={setShowReportSubMenu}\n                showReportSubMenu={showReportSubMenu}\n                setIsDropdownVisible={setIsDropdownVisible}\n                isDropdownVisible={isDropdownVisible}\n                useTextMenu\n              />\n            </Menu.SubMenu>\n            <Menu.Divider />\n          </>\n        ) : (\n          <Menu>\n            <HeaderReportDropDown\n              chart={chart}\n              setShowReportSubMenu={setShowReportSubMenu}\n              setIsDropdownVisible={setIsDropdownVisible}\n              isDropdownVisible={isDropdownVisible}\n              useTextMenu\n            />\n          </Menu>\n        )}\n        <Menu.Item key={MENU_KEYS.VIEW_QUERY}>\n          <ModalTrigger\n            triggerNode={\n              <span data-test=\"view-query-menu-item\">{t('View query')}</span>\n            }\n            modalTitle={t('View query')}\n            modalBody={\n              <ViewQueryModal latestQueryFormData={latestQueryFormData} />\n            }\n            draggable\n            resizable\n            responsive\n          />\n        </Menu.Item>\n        {datasource && (\n          <Menu.Item key={MENU_KEYS.RUN_IN_SQL_LAB}>\n            {t('Run in SQL Lab')}\n          </Menu.Item>\n        )}\n      </Menu>\n    ),\n    [\n      addDangerToast,\n      canDownloadCSV,\n      chart,\n      dashboards,\n      handleMenuClick,\n      isDropdownVisible,\n      latestQueryFormData,\n      openSubmenus,\n      showReportSubMenu,\n      slice,\n      theme.gridUnit,\n    ],\n  );\n  return [menu, isDropdownVisible, setIsDropdownVisible];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}