{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-param-reassign */\n// <- When we work with Immer, we need reassign, so disabling lint\nimport produce from 'immer';\nimport { FeatureFlag } from '@superset-ui/core';\nimport { NATIVE_FILTER_PREFIX } from 'src/dashboard/components/nativeFilters/FiltersConfigModal/utils';\nimport { HYDRATE_DASHBOARD } from 'src/dashboard/actions/hydrate';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport { CLEAR_DATA_MASK_STATE, SET_DATA_MASK_FOR_FILTER_CONFIG_COMPLETE, UPDATE_DATA_MASK } from './actions';\nimport { areObjectsEqual } from '../reduxUtils';\nexport function getInitialDataMask(id, moreProps) {if (moreProps === void 0) {moreProps = {};}\n  let otherProps = {};\n  if (id) {\n    otherProps = {\n      id };\n\n  }\n  return {\n    ...otherProps,\n    extraFormData: {},\n    filterState: {},\n    ownState: {},\n    ...moreProps };\n\n}\nfunction fillNativeFilters(filterConfig, mergedDataMask, draftDataMask, initialDataMask, currentFilters) {\n  filterConfig.forEach((filter) => {var _currentFilters$filte;\n    const dataMask = initialDataMask || {};\n    mergedDataMask[filter.id] = {\n      ...getInitialDataMask(filter.id),\n      ...filter.defaultDataMask,\n      ...dataMask[filter.id] };\n\n    if (currentFilters &&\n    !areObjectsEqual(filter.defaultDataMask, (_currentFilters$filte = currentFilters[filter.id]) == null ? void 0 : _currentFilters$filte.defaultDataMask, { ignoreUndefined: true })) {\n      mergedDataMask[filter.id] = {\n        ...mergedDataMask[filter.id],\n        ...filter.defaultDataMask };\n\n    }\n  });\n  // Get back all other non-native filters\n  Object.values(draftDataMask).forEach((filter) => {\n    if (!String(filter == null ? void 0 : filter.id).startsWith(NATIVE_FILTER_PREFIX)) {\n      mergedDataMask[filter == null ? void 0 : filter.id] = filter;\n    }\n  });\n}\nconst dataMaskReducer = produce((draft, action) => {var _action$data$dashboar3, _action$data$dashboar4, _action$data$dashboar5, _action$filterConfig;\n  const cleanState = {};\n  switch (action.type) {\n    case CLEAR_DATA_MASK_STATE:\n      return cleanState;\n    case UPDATE_DATA_MASK:\n      draft[action.filterId] = {\n        ...getInitialDataMask(action.filterId),\n        ...draft[action.filterId],\n        ...action.dataMask };\n\n      return draft;\n    // TODO: update hydrate to .ts\n    // @ts-ignore\n    case HYDRATE_DASHBOARD:\n      if (isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS)) {var _action$data$dashboar, _action$data$dashboar2;\n        Object.keys(\n        // @ts-ignore\n        (_action$data$dashboar = action.data.dashboardInfo) == null ? void 0 : (_action$data$dashboar2 = _action$data$dashboar.metadata) == null ? void 0 : _action$data$dashboar2.chart_configuration).forEach((id) => {\n          cleanState[id] = {\n            ...getInitialDataMask(id) // take initial data\n          };\n        });\n      }\n      fillNativeFilters(\n      // @ts-ignore\n      (_action$data$dashboar3 = (_action$data$dashboar4 = action.data.dashboardInfo) == null ? void 0 : (_action$data$dashboar5 = _action$data$dashboar4.metadata) == null ? void 0 : _action$data$dashboar5.native_filter_configuration) != null ? _action$data$dashboar3 :\n      [], cleanState, draft,\n      // @ts-ignore\n      action.data.dataMask);\n      return cleanState;\n    case SET_DATA_MASK_FOR_FILTER_CONFIG_COMPLETE:\n      fillNativeFilters((_action$filterConfig = action.filterConfig) != null ? _action$filterConfig : [], cleanState, draft, action.filters);\n      return cleanState;\n    default:\n      return draft;}\n\n}, {});const _default =\ndataMaskReducer;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getInitialDataMask, \"getInitialDataMask\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dataMask/reducer.ts\");reactHotLoader.register(fillNativeFilters, \"fillNativeFilters\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dataMask/reducer.ts\");reactHotLoader.register(dataMaskReducer, \"dataMaskReducer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dataMask/reducer.ts\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dataMask/reducer.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["produce","FeatureFlag","NATIVE_FILTER_PREFIX","HYDRATE_DASHBOARD","isFeatureEnabled","CLEAR_DATA_MASK_STATE","SET_DATA_MASK_FOR_FILTER_CONFIG_COMPLETE","UPDATE_DATA_MASK","areObjectsEqual","getInitialDataMask","id","moreProps","otherProps","extraFormData","filterState","ownState","fillNativeFilters","filterConfig","mergedDataMask","draftDataMask","initialDataMask","currentFilters","forEach","filter","dataMask","defaultDataMask","ignoreUndefined","Object","values","String","startsWith","dataMaskReducer","draft","action","cleanState","type","filterId","DASHBOARD_CROSS_FILTERS","keys","data","dashboardInfo","metadata","chart_configuration","native_filter_configuration","filters"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dataMask/reducer.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint-disable no-param-reassign */\n// <- When we work with Immer, we need reassign, so disabling lint\nimport produce from 'immer';\nimport {\n  DataMask,\n  DataMaskStateWithId,\n  DataMaskWithId,\n  FeatureFlag,\n  Filter,\n  FilterConfiguration,\n  Filters,\n} from '@superset-ui/core';\nimport { NATIVE_FILTER_PREFIX } from 'src/dashboard/components/nativeFilters/FiltersConfigModal/utils';\nimport { HYDRATE_DASHBOARD } from 'src/dashboard/actions/hydrate';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport {\n  AnyDataMaskAction,\n  CLEAR_DATA_MASK_STATE,\n  SET_DATA_MASK_FOR_FILTER_CONFIG_COMPLETE,\n  UPDATE_DATA_MASK,\n} from './actions';\nimport { areObjectsEqual } from '../reduxUtils';\n\nexport function getInitialDataMask(\n  id?: string | number,\n  moreProps?: DataMask,\n): DataMask;\nexport function getInitialDataMask(\n  id: string | number,\n  moreProps: DataMask = {},\n): DataMaskWithId {\n  let otherProps = {};\n  if (id) {\n    otherProps = {\n      id,\n    };\n  }\n  return {\n    ...otherProps,\n    extraFormData: {},\n    filterState: {},\n    ownState: {},\n    ...moreProps,\n  } as DataMaskWithId;\n}\n\nfunction fillNativeFilters(\n  filterConfig: FilterConfiguration,\n  mergedDataMask: DataMaskStateWithId,\n  draftDataMask: DataMaskStateWithId,\n  initialDataMask?: DataMaskStateWithId,\n  currentFilters?: Filters,\n) {\n  filterConfig.forEach((filter: Filter) => {\n    const dataMask = initialDataMask || {};\n    mergedDataMask[filter.id] = {\n      ...getInitialDataMask(filter.id), // take initial data\n      ...filter.defaultDataMask, // if something new came from BE - take it\n      ...dataMask[filter.id],\n    };\n    if (\n      currentFilters &&\n      !areObjectsEqual(\n        filter.defaultDataMask,\n        currentFilters[filter.id]?.defaultDataMask,\n        { ignoreUndefined: true },\n      )\n    ) {\n      mergedDataMask[filter.id] = {\n        ...mergedDataMask[filter.id],\n        ...filter.defaultDataMask,\n      };\n    }\n  });\n\n  // Get back all other non-native filters\n  Object.values(draftDataMask).forEach(filter => {\n    if (!String(filter?.id).startsWith(NATIVE_FILTER_PREFIX)) {\n      mergedDataMask[filter?.id] = filter;\n    }\n  });\n}\n\nconst dataMaskReducer = produce(\n  (draft: DataMaskStateWithId, action: AnyDataMaskAction) => {\n    const cleanState = {};\n    switch (action.type) {\n      case CLEAR_DATA_MASK_STATE:\n        return cleanState;\n      case UPDATE_DATA_MASK:\n        draft[action.filterId] = {\n          ...getInitialDataMask(action.filterId),\n          ...draft[action.filterId],\n          ...action.dataMask,\n        };\n        return draft;\n      // TODO: update hydrate to .ts\n      // @ts-ignore\n      case HYDRATE_DASHBOARD:\n        if (isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS)) {\n          Object.keys(\n            // @ts-ignore\n            action.data.dashboardInfo?.metadata?.chart_configuration,\n          ).forEach(id => {\n            cleanState[id] = {\n              ...getInitialDataMask(id), // take initial data\n            };\n          });\n        }\n        fillNativeFilters(\n          // @ts-ignore\n          action.data.dashboardInfo?.metadata?.native_filter_configuration ??\n            [],\n          cleanState,\n          draft,\n          // @ts-ignore\n          action.data.dataMask,\n        );\n        return cleanState;\n      case SET_DATA_MASK_FOR_FILTER_CONFIG_COMPLETE:\n        fillNativeFilters(\n          action.filterConfig ?? [],\n          cleanState,\n          draft,\n          action.filters,\n        );\n        return cleanState;\n\n      default:\n        return draft;\n    }\n  },\n  {},\n);\n\nexport default dataMaskReducer;\n"]},"metadata":{},"sourceType":"module"}