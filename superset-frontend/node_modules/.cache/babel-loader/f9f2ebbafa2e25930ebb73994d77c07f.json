{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Resizable } from 're-resizable';\nimport { styled } from '@superset-ui/core';\nimport useStoredSidebarWidth from './useStoredSidebarWidth';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst ResizableWrapper = styled.div`\n  position: absolute;\n  height: 100%;\n\n  :hover .sidebar-resizer::after {\n    background-color: ${(_ref) => {let { theme } = _ref;return theme.colors.primary.base;}};\n  }\n\n  .sidebar-resizer {\n    // @z-index-above-sticky-header (100) + 1 = 101\n    z-index: 101;\n  }\n\n  .sidebar-resizer::after {\n    display: block;\n    content: '';\n    width: 1px;\n    height: 100%;\n    margin: 0 auto;\n  }\n`;\nconst ResizableSidebar = (_ref2) => {let { id, initialWidth, minWidth, maxWidth, enable, children } = _ref2;\n  const [width, setWidth] = useStoredSidebarWidth(id, initialWidth);\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(ResizableWrapper, null,\n  ___EmotionJSX(Resizable, { enable: { right: enable }, handleClasses: { right: 'sidebar-resizer' }, size: { width, height: '100%' }, minWidth: minWidth, maxWidth: maxWidth, onResizeStop: (e, direction, ref, d) => setWidth(width + d.width) })),\n\n  children(width));\n\n};\nexport default ResizableSidebar;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC,C;AAEA,MAAMC,gBAAgB,GAAGF,MAAM,CAACG,GAAG;;;;;wBAKX,eAAC,EAAEC,KAAF,EAAD,eAAeA,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqBC,IAApC,EAAwC;;;;;;;;;;;;;;;CALhE;AA+BA,MAAMC,gBAAgB,GAAoB,WAOrC,KAPsC,EACzCC,EADyC,EAEzCC,YAFyC,EAGzCC,QAHyC,EAIzCC,QAJyC,EAKzCC,MALyC,EAMzCC,QANyC,EAOtC;EACH,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,qBAAqB,CAACQ,EAAD,EAAKC,YAAL,CAA/C;EAEA,OACE;EACE,cAAC,gBAAD;EACE,cAAC,SAAD,IACE,MAAM,EAAE,EAAEO,KAAK,EAAEJ,MAAT,EADV,EAEE,aAAa,EAAE,EAAEI,KAAK,EAAE,iBAAT,EAFjB,EAGE,IAAI,EAAE,EAAEF,KAAF,EAASG,MAAM,EAAE,MAAjB,EAHR,EAIE,QAAQ,EAAEP,QAJZ,EAKE,QAAQ,EAAEC,QALZ,EAME,YAAY,EAAE,CAACO,CAAD,EAAIC,SAAJ,EAAeC,GAAf,EAAoBC,CAApB,KAA0BN,QAAQ,CAACD,KAAK,GAAGO,CAAC,CAACP,KAAX,CANlD,GADF,CADF;;EAWGD,QAAQ,CAACC,KAAD,CAXX,CADF;;AAeD,CAzBD;AA2BA,eAAeP,gBAAf","names":["React","Resizable","styled","useStoredSidebarWidth","ResizableWrapper","div","theme","colors","primary","base","ResizableSidebar","id","initialWidth","minWidth","maxWidth","enable","children","width","setWidth","right","height","e","direction","ref","d"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/components/ResizableSidebar/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Resizable } from 're-resizable';\nimport { styled } from '@superset-ui/core';\nimport useStoredSidebarWidth from './useStoredSidebarWidth';\n\nconst ResizableWrapper = styled.div`\n  position: absolute;\n  height: 100%;\n\n  :hover .sidebar-resizer::after {\n    background-color: ${({ theme }) => theme.colors.primary.base};\n  }\n\n  .sidebar-resizer {\n    // @z-index-above-sticky-header (100) + 1 = 101\n    z-index: 101;\n  }\n\n  .sidebar-resizer::after {\n    display: block;\n    content: '';\n    width: 1px;\n    height: 100%;\n    margin: 0 auto;\n  }\n`;\n\ntype Props = {\n  id: string;\n  initialWidth: number;\n  enable: boolean;\n  minWidth?: number;\n  maxWidth?: number;\n  children: (width: number) => React.ReactNode;\n};\n\nconst ResizableSidebar: React.FC<Props> = ({\n  id,\n  initialWidth,\n  minWidth,\n  maxWidth,\n  enable,\n  children,\n}) => {\n  const [width, setWidth] = useStoredSidebarWidth(id, initialWidth);\n\n  return (\n    <>\n      <ResizableWrapper>\n        <Resizable\n          enable={{ right: enable }}\n          handleClasses={{ right: 'sidebar-resizer' }}\n          size={{ width, height: '100%' }}\n          minWidth={minWidth}\n          maxWidth={maxWidth}\n          onResizeStop={(e, direction, ref, d) => setWidth(width + d.width)}\n        />\n      </ResizableWrapper>\n      {children(width)}\n    </>\n  );\n};\n\nexport default ResizableSidebar;\n"]},"metadata":{},"sourceType":"module"}