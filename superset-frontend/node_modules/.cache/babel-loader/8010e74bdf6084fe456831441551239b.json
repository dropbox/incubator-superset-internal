{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport AceEditor from 'react-ace';\n// must go after AceEditor import\nimport 'ace-builds/src-min-noconflict/mode-handlebars';\nimport 'ace-builds/src-min-noconflict/mode-css';\nimport 'ace-builds/src-noconflict/theme-github';\nimport 'ace-builds/src-noconflict/theme-monokai';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const CodeEditor = (_ref) => {let { mode, theme, name, width, height, value, ...rest } = _ref;\n  const m_name = name || Math.random().toString(36).substring(7);\n  const m_theme = theme === 'light' ? 'github' : 'monokai';\n  const m_mode = mode || 'handlebars';\n  const m_height = height || '300px';\n  const m_width = width || '100%';\n  return ___EmotionJSX(\"div\", { className: \"code-editor\", style: { minHeight: height, width: m_width } },\n  ___EmotionJSX(AceEditor, _extends({ mode: m_mode, theme: m_theme, name: m_name, height: m_height, width: m_width, fontSize: 14, showPrintMargin: true, focus: true, editorProps: { $blockScrolling: true }, wrapEnabled: true, highlightActiveLine: true, value: value, setOptions: {\n      enableBasicAutocompletion: true,\n      enableLiveAutocompletion: true,\n      enableSnippets: true,\n      showLineNumbers: true,\n      tabSize: 2,\n      showGutter: true } },\n  rest)));\n\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CodeEditor, \"CodeEditor\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-handlebars/src/components/CodeEditor/CodeEditor.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"sWAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAOC,SAAP,MAA2C,WAA3C;AAEA;AACA,OAAO,+CAAP;AACA,OAAO,wCAAP;AACA,OAAO,wCAAP;AACA,OAAO,yCAAP,C;AAWA,OAAO,MAAMC,UAAU,GAAwB,UAQzB,KAR0B,EAC9CC,IAD8C,EAE9CC,KAF8C,EAG9CC,IAH8C,EAI9CC,KAJ8C,EAK9CC,MAL8C,EAM9CC,KAN8C,EAO9C,GAAGC,IAP2C,EAQ1B;EACpB,MAAMC,MAAM,GAAGL,IAAI,IAAIM,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,CAAvB;EACA,MAAMC,OAAO,GAAGX,KAAK,KAAK,OAAV,GAAoB,QAApB,GAA+B,SAA/C;EACA,MAAMY,MAAM,GAAGb,IAAI,IAAI,YAAvB;EACA,MAAMc,QAAQ,GAAGV,MAAM,IAAI,OAA3B;EACA,MAAMW,OAAO,GAAGZ,KAAK,IAAI,MAAzB;EAEA,OACE,uBAAK,SAAS,EAAC,aAAf,EAA6B,KAAK,EAAE,EAAEa,SAAS,EAAEZ,MAAb,EAAqBD,KAAK,EAAEY,OAA5B,EAApC;EACE,cAAC,SAAD,aACE,IAAI,EAAEF,MADR,EAEE,KAAK,EAAED,OAFT,EAGE,IAAI,EAAEL,MAHR,EAIE,MAAM,EAAEO,QAJV,EAKE,KAAK,EAAEC,OALT,EAME,QAAQ,EAAE,EANZ,EAOE,eAAe,MAPjB,EAQE,KAAK,MARP,EASE,WAAW,EAAE,EAAEE,eAAe,EAAE,IAAnB,EATf,EAUE,WAAW,MAVb,EAWE,mBAAmB,MAXrB,EAYE,KAAK,EAAEZ,KAZT,EAaE,UAAU,EAAE;MACVa,yBAAyB,EAAE,IADjB;MAEVC,wBAAwB,EAAE,IAFhB;MAGVC,cAAc,EAAE,IAHN;MAIVC,eAAe,EAAE,IAJP;MAKVC,OAAO,EAAE,CALC;MAMVC,UAAU,EAAE,IANF,EAbd;EAqBMjB,IArBN,EADF,CADF;;AA2BD,CA1CM,C,iLAAMP,U","names":["React","AceEditor","CodeEditor","mode","theme","name","width","height","value","rest","m_name","Math","random","toString","substring","m_theme","m_mode","m_height","m_width","minHeight","$blockScrolling","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","showGutter"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-handlebars/src/components/CodeEditor/CodeEditor.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FC } from 'react';\nimport AceEditor, { IAceEditorProps } from 'react-ace';\n\n// must go after AceEditor import\nimport 'ace-builds/src-min-noconflict/mode-handlebars';\nimport 'ace-builds/src-min-noconflict/mode-css';\nimport 'ace-builds/src-noconflict/theme-github';\nimport 'ace-builds/src-noconflict/theme-monokai';\n\nexport type CodeEditorMode = 'handlebars' | 'css';\nexport type CodeEditorTheme = 'light' | 'dark';\n\nexport interface CodeEditorProps extends IAceEditorProps {\n  mode?: CodeEditorMode;\n  theme?: CodeEditorTheme;\n  name?: string;\n}\n\nexport const CodeEditor: FC<CodeEditorProps> = ({\n  mode,\n  theme,\n  name,\n  width,\n  height,\n  value,\n  ...rest\n}: CodeEditorProps) => {\n  const m_name = name || Math.random().toString(36).substring(7);\n  const m_theme = theme === 'light' ? 'github' : 'monokai';\n  const m_mode = mode || 'handlebars';\n  const m_height = height || '300px';\n  const m_width = width || '100%';\n\n  return (\n    <div className=\"code-editor\" style={{ minHeight: height, width: m_width }}>\n      <AceEditor\n        mode={m_mode}\n        theme={m_theme}\n        name={m_name}\n        height={m_height}\n        width={m_width}\n        fontSize={14}\n        showPrintMargin\n        focus\n        editorProps={{ $blockScrolling: true }}\n        wrapEnabled\n        highlightActiveLine\n        value={value}\n        setOptions={{\n          enableBasicAutocompletion: true,\n          enableLiveAutocompletion: true,\n          enableSnippets: true,\n          showLineNumbers: true,\n          tabSize: 2,\n          showGutter: true,\n        }}\n        {...rest}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}