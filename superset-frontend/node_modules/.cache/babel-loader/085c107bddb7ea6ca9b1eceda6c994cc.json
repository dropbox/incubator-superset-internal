{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { styled, ensureIsArray, t } from '@superset-ui/core';\nimport Loading from 'src/components/Loading';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport { getChartDataRequest } from 'src/components/Chart/chartAction';\nimport ViewQuery from 'src/explore/components/controls/ViewQuery';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst ViewQueryModalContainer = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nconst ViewQueryModal = (props) => {\n  const [result, setResult] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const loadChartData = (resultType) => {\n    setIsLoading(true);\n    getChartDataRequest({\n      formData: props.latestQueryFormData,\n      resultFormat: 'json',\n      resultType }).\n\n    then((_ref) => {let { json } = _ref;\n      setResult(ensureIsArray(json.result));\n      setIsLoading(false);\n      setError(null);\n    }).\n    catch((response) => {\n      getClientErrorObject(response).then((_ref2) => {let { error, message } = _ref2;\n        setError(error ||\n        message ||\n        response.statusText ||\n        t('Sorry, An error occurred'));\n        setIsLoading(false);\n      });\n    });\n  };\n  useEffect(() => {\n    loadChartData('query');\n  }, [JSON.stringify(props.latestQueryFormData)]);\n  if (isLoading) {\n    return ___EmotionJSX(Loading, null);\n  }\n  if (error) {\n    return ___EmotionJSX(\"pre\", null, error);\n  }\n  return ___EmotionJSX(ViewQueryModalContainer, null,\n  result.map((item) => item.query ? ___EmotionJSX(ViewQuery, { sql: item.query, language: item.language || undefined }) : null));\n\n};\nexport default ViewQueryModal;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,aAAjB,EAAgCC,CAAhC,QAAyC,mBAAzC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,oBAAT,QAAqC,gCAArC;AACA,SAASC,mBAAT,QAAoC,kCAApC;AACA,OAAOC,SAAP,MAAsB,2CAAtB,C;AAWA,MAAMC,uBAAuB,GAAGP,MAAM,CAACQ,GAAG;;;;CAA1C;AAMA,MAAMC,cAAc,GAAoB,MAAK,KAAG;EAC9C,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAW,EAAX,CAApC;EACA,MAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAgB,IAAhB,CAAlC;EAEA,MAAMiB,aAAa,GAAG,CAACC,UAAD,KAAuB;IAC3CJ,YAAY,CAAC,IAAD,CAAZ;IACAR,mBAAmB,CAAC;MAClBa,QAAQ,EAAEC,KAAK,CAACC,mBADE;MAElBC,YAAY,EAAE,MAFI;MAGlBJ,UAHkB,EAAD,CAAnB;;IAKGK,IALH,CAKQ,UAAa,KAAZ,EAAEC,IAAF,EAAY;MACjBZ,SAAS,CAACV,aAAa,CAACsB,IAAI,CAACb,MAAN,CAAd,CAAT;MACAG,YAAY,CAAC,KAAD,CAAZ;MACAE,QAAQ,CAAC,IAAD,CAAR;IACD,CATH;IAUGS,KAVH,CAUS,SAAQ,KAAG;MAChBpB,oBAAoB,CAACqB,QAAD,CAApB,CAA+BH,IAA/B,CAAoC,WAAuB,KAAtB,EAAER,KAAF,EAASY,OAAT,EAAsB;QACzDX,QAAQ,CACND,KAAK;QACHY,OADF;QAEED,QAAQ,CAACE,UAFX;QAGEzB,CAAC,CAAC,0BAAD,CAJG,CAAR;QAMAW,YAAY,CAAC,KAAD,CAAZ;MACD,CARD;IASD,CApBH;EAqBD,CAvBD;EAwBAf,SAAS,CAAC,MAAK;IACbkB,aAAa,CAAC,OAAD,CAAb;EACD,CAFQ,EAEN,CAACY,IAAI,CAACC,SAAL,CAAeV,KAAK,CAACC,mBAArB,CAAD,CAFM,CAAT;EAIA,IAAIR,SAAJ,EAAe;IACb,OAAO,cAAC,OAAD,OAAP;EACD;EACD,IAAIE,KAAJ,EAAW;IACT,OAAO,2BAAMA,KAAN,CAAP;EACD;EAED,OACE,cAAC,uBAAD;EACGJ,MAAM,CAACoB,GAAP,CAAW,KAAI,KACdC,IAAI,CAACC,KAAL,GACE,cAAC,SAAD,IAAW,GAAG,EAAED,IAAI,CAACC,KAArB,EAA4B,QAAQ,EAAED,IAAI,CAACE,QAAL,IAAiBC,SAAvD,GADF,GAEI,IAHL,CADH,CADF;;AASD,CAjDD;AAmDA,eAAezB,cAAf","names":["React","useEffect","useState","styled","ensureIsArray","t","Loading","getClientErrorObject","getChartDataRequest","ViewQuery","ViewQueryModalContainer","div","ViewQueryModal","result","setResult","isLoading","setIsLoading","error","setError","loadChartData","resultType","formData","props","latestQueryFormData","resultFormat","then","json","catch","response","message","statusText","JSON","stringify","map","item","query","language","undefined"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/explore/components/controls/ViewQueryModal.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { styled, ensureIsArray, t } from '@superset-ui/core';\nimport Loading from 'src/components/Loading';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport { getChartDataRequest } from 'src/components/Chart/chartAction';\nimport ViewQuery from 'src/explore/components/controls/ViewQuery';\n\ninterface Props {\n  latestQueryFormData: object;\n}\n\ntype Result = {\n  query: string;\n  language: string;\n};\n\nconst ViewQueryModalContainer = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ViewQueryModal: React.FC<Props> = props => {\n  const [result, setResult] = useState<Result[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadChartData = (resultType: string) => {\n    setIsLoading(true);\n    getChartDataRequest({\n      formData: props.latestQueryFormData,\n      resultFormat: 'json',\n      resultType,\n    })\n      .then(({ json }) => {\n        setResult(ensureIsArray(json.result));\n        setIsLoading(false);\n        setError(null);\n      })\n      .catch(response => {\n        getClientErrorObject(response).then(({ error, message }) => {\n          setError(\n            error ||\n              message ||\n              response.statusText ||\n              t('Sorry, An error occurred'),\n          );\n          setIsLoading(false);\n        });\n      });\n  };\n  useEffect(() => {\n    loadChartData('query');\n  }, [JSON.stringify(props.latestQueryFormData)]);\n\n  if (isLoading) {\n    return <Loading />;\n  }\n  if (error) {\n    return <pre>{error}</pre>;\n  }\n\n  return (\n    <ViewQueryModalContainer>\n      {result.map(item =>\n        item.query ? (\n          <ViewQuery sql={item.query} language={item.language || undefined} />\n        ) : null,\n      )}\n    </ViewQueryModalContainer>\n  );\n};\n\nexport default ViewQueryModal;\n"]},"metadata":{},"sourceType":"module"}