{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport default function extractExtras(formData) {\n  const applied_time_extras = {};\n  const filters = [];\n  const extras = {};\n  const extract = {\n    filters,\n    extras,\n    applied_time_extras };\n\n  const reservedColumnsToQueryField = {\n    __time_range: 'time_range',\n    __time_col: 'granularity_sqla',\n    __time_grain: 'time_grain_sqla',\n    __granularity: 'granularity' };\n\n  (formData.extra_filters || []).forEach((filter) => {\n    if (filter.col in reservedColumnsToQueryField) {\n      const key = filter.col;\n      const queryField = reservedColumnsToQueryField[key];\n      extract[queryField] = filter.val;\n      applied_time_extras[key] = filter.val;\n    } else\n    {\n      filters.push(filter);\n    }\n  });\n  // SQL\n  extras.time_grain_sqla = extract.time_grain_sqla || formData.time_grain_sqla;\n  extract.granularity =\n  extract.granularity_sqla ||\n  formData.granularity ||\n  formData.granularity_sqla;\n  delete extract.granularity_sqla;\n  delete extract.time_grain_sqla;\n  return extract;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAyCA,eAAc,SAAUA,aAAV,CAAwBC,QAAxB,EAA+C;EAC3D,MAAMC,mBAAmB,GAAsB,EAA/C;EACA,MAAMC,OAAO,GAA8B,EAA3C;EACA,MAAMC,MAAM,GAAsB,EAAlC;EACA,MAAMC,OAAO,GAAmB;IAC9BF,OAD8B;IAE9BC,MAF8B;IAG9BF,mBAH8B,EAAhC;;EAMA,MAAMI,2BAA2B,GAG7B;IACFC,YAAY,EAAE,YADZ;IAEFC,UAAU,EAAE,kBAFV;IAGFC,YAAY,EAAE,iBAHZ;IAIFC,aAAa,EAAE,aAJb,EAHJ;;EAUA,CAACT,QAAQ,CAACU,aAAT,IAA0B,EAA3B,EAA+BC,OAA/B,CAAuC,OAAM,KAAG;IAC9C,IAAIC,MAAM,CAACC,GAAP,IAAcR,2BAAlB,EAA+C;MAC7C,MAAMS,GAAG,GAAGF,MAAM,CAACC,GAAnB;MACA,MAAME,UAAU,GAAGV,2BAA2B,CAACS,GAAD,CAA9C;MACAV,OAAO,CAACW,UAAD,CAAP,GAAsBH,MAAM,CAACI,GAA7B;MACAf,mBAAmB,CAACa,GAAD,CAAnB,GAA2BF,MAAM,CAACI,GAAlC;IACD,CALD;IAKO;MACLd,OAAO,CAACe,IAAR,CAAaL,MAAb;IACD;EACF,CATD;EAWA;EACAT,MAAM,CAACe,eAAP,GAAyBd,OAAO,CAACc,eAAR,IAA2BlB,QAAQ,CAACkB,eAA7D;EACAd,OAAO,CAACe,WAAR;EACEf,OAAO,CAACgB,gBAAR;EACApB,QAAQ,CAACmB,WADT;EAEAnB,QAAQ,CAACoB,gBAHX;EAIA,OAAOhB,OAAO,CAACgB,gBAAf;EACA,OAAOhB,OAAO,CAACc,eAAf;EAEA,OAAOd,OAAP;AACD","names":["extractExtras","formData","applied_time_extras","filters","extras","extract","reservedColumnsToQueryField","__time_range","__time_col","__time_grain","__granularity","extra_filters","forEach","filter","col","key","queryField","val","push","time_grain_sqla","granularity","granularity_sqla"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/packages/superset-ui-core/src/query/extractExtras.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint-disable camelcase */\nimport { TimeGranularity, QueryFormData } from '@superset-ui/core';\nimport {\n  AppliedTimeExtras,\n  QueryObjectExtras,\n  QueryObjectFilterClause,\n  TimeColumnConfigKey,\n} from './types';\n\ntype ExtraFilterQueryField = {\n  time_range?: string;\n  granularity_sqla?: string;\n  time_grain_sqla?: TimeGranularity;\n  granularity?: string;\n};\n\ntype ExtractedExtra = ExtraFilterQueryField & {\n  filters: QueryObjectFilterClause[];\n  extras: QueryObjectExtras;\n  applied_time_extras: AppliedTimeExtras;\n};\n\nexport default function extractExtras(formData: QueryFormData): ExtractedExtra {\n  const applied_time_extras: AppliedTimeExtras = {};\n  const filters: QueryObjectFilterClause[] = [];\n  const extras: QueryObjectExtras = {};\n  const extract: ExtractedExtra = {\n    filters,\n    extras,\n    applied_time_extras,\n  };\n\n  const reservedColumnsToQueryField: Record<\n    TimeColumnConfigKey,\n    keyof ExtraFilterQueryField\n  > = {\n    __time_range: 'time_range',\n    __time_col: 'granularity_sqla',\n    __time_grain: 'time_grain_sqla',\n    __granularity: 'granularity',\n  };\n\n  (formData.extra_filters || []).forEach(filter => {\n    if (filter.col in reservedColumnsToQueryField) {\n      const key = filter.col as TimeColumnConfigKey;\n      const queryField = reservedColumnsToQueryField[key];\n      extract[queryField] = filter.val as TimeGranularity;\n      applied_time_extras[key] = filter.val as string;\n    } else {\n      filters.push(filter);\n    }\n  });\n\n  // SQL\n  extras.time_grain_sqla = extract.time_grain_sqla || formData.time_grain_sqla;\n  extract.granularity =\n    extract.granularity_sqla ||\n    formData.granularity ||\n    formData.granularity_sqla;\n  delete extract.granularity_sqla;\n  delete extract.time_grain_sqla;\n\n  return extract;\n}\n"]},"metadata":{},"sourceType":"module"}