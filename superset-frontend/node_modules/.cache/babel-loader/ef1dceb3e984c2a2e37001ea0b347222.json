{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { AntdDropdown, AntdTooltip } from 'src/components';\nimport { styled } from '@superset-ui/core';\nimport kebabCase from 'lodash/kebabCase';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledDropdownButton = styled.div`\n  .ant-btn-group {\n    button.ant-btn {\n      background-color: ${(_ref) => {let { theme } = _ref;return theme.colors.primary.dark1;}};\n      border-color: transparent;\n      color: ${(_ref2) => {let { theme } = _ref2;return theme.colors.grayscale.light5;}};\n      font-size: 12px;\n      line-height: 13px;\n      outline: none;\n      text-transform: uppercase;\n      &:first-of-type {\n        border-radius: ${(_ref3) => {let { theme } = _ref3;return `${theme.gridUnit}px 0 0 ${theme.gridUnit}px`;}};\n        margin: 0;\n        width: 120px;\n      }\n\n      &:disabled {\n        background-color: ${(_ref4) => {let { theme } = _ref4;return theme.colors.grayscale.light2;}};\n        color: ${(_ref5) => {let { theme } = _ref5;return theme.colors.grayscale.base;}};\n      }\n      &:nth-child(2) {\n        margin: 0;\n        border-radius: ${(_ref6) => {let { theme } = _ref6;return `0 ${theme.gridUnit}px ${theme.gridUnit}px 0`;}};\n        width: ${(_ref7) => {let { theme } = _ref7;return theme.gridUnit * 9;}}px;\n        &:before,\n        &:hover:before {\n          border-left: 1px solid ${(_ref8) => {let { theme } = _ref8;return theme.colors.grayscale.light5;}};\n          content: '';\n          display: block;\n          height: ${(_ref9) => {let { theme } = _ref9;return theme.gridUnit * 8;}}px;\n          margin: 0;\n          position: absolute;\n          width: ${(_ref10) => {let { theme } = _ref10;return theme.gridUnit * 0.25;}}px;\n        }\n\n        &:disabled:before {\n          border-left: 1px solid ${(_ref11) => {let { theme } = _ref11;return theme.colors.grayscale.base;}};\n        }\n      }\n    }\n  }\n`;\nexport const DropdownButton = (_ref12) => {let { overlay, tooltip, placement, ...rest } = _ref12;\n  const buildButton = function (props) {if (props === void 0) {props = {};}return ___EmotionJSX(StyledDropdownButton, null,\n    ___EmotionJSX(AntdDropdown.Button, _extends({ overlay: overlay }, rest, props)));};\n\n  if (tooltip) {\n    return buildButton({\n      buttonsRender: (_ref13) => {let [leftButton, rightButton] = _ref13;return [\n        ___EmotionJSX(AntdTooltip, { placement: placement, id: `${kebabCase(tooltip)}-tooltip`, title: tooltip },\n        leftButton),\n\n        rightButton];} });\n\n\n  }\n  return buildButton();\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledDropdownButton, \"StyledDropdownButton\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/DropdownButton/index.tsx\");reactHotLoader.register(DropdownButton, \"DropdownButton\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/DropdownButton/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"sWAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,gBAA1C;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,SAAP,MAAsB,kBAAtB,C;AAEA,MAAMC,oBAAoB,GAAGF,MAAM,CAACG,GAAG;;;0BAGb,eAAC,EAAEC,KAAF,EAAD,eAAeA,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqBC,KAApC,EAAyC;;eAEpD,gBAAC,EAAEH,KAAF,EAAD,gBAAeA,KAAK,CAACC,MAAN,CAAaG,SAAb,CAAuBC,MAAtC,EAA4C;;;;;;yBAMlC,gBAAC,EAAEL,KAAF,EAAD,gBACf,GAAGA,KAAK,CAACM,QAAQ,UAAUN,KAAK,CAACM,QAAQ,IAD1B,EAC8B;;;;;;4BAM3B,gBAAC,EAAEN,KAAF,EAAD,gBAAeA,KAAK,CAACC,MAAN,CAAaG,SAAb,CAAuBG,MAAtC,EAA4C;iBACvD,gBAAC,EAAEP,KAAF,EAAD,gBAAeA,KAAK,CAACC,MAAN,CAAaG,SAAb,CAAuBI,IAAtC,EAA0C;;;;yBAIlC,gBAAC,EAAER,KAAF,EAAD,gBACf,KAAKA,KAAK,CAACM,QAAQ,MAAMN,KAAK,CAACM,QAAQ,MADxB,EAC8B;iBACtC,gBAAC,EAAEN,KAAF,EAAD,gBAAeA,KAAK,CAACM,QAAN,GAAiB,CAAhC,EAAiC;;;mCAGf,gBAAC,EAAEN,KAAF,EAAD,gBAAeA,KAAK,CAACC,MAAN,CAAaG,SAAb,CAAuBC,MAAtC,EAA4C;;;oBAG3D,gBAAC,EAAEL,KAAF,EAAD,gBAAeA,KAAK,CAACM,QAAN,GAAiB,CAAhC,EAAiC;;;mBAGlC,iBAAC,EAAEN,KAAF,EAAD,iBAAeA,KAAK,CAACM,QAAN,GAAiB,IAAhC,EAAoC;;;;mCAIpB,iBAAC,EAAEN,KAAF,EAAD,iBAAeA,KAAK,CAACC,MAAN,CAAaG,SAAb,CAAuBI,IAAtC,EAA0C;;;;;CAtC7E;AAoDA,OAAO,MAAMC,cAAc,GAAG,YAKJ,KALK,EAC7BC,OAD6B,EAE7BC,OAF6B,EAG7BC,SAH6B,EAI7B,GAAGC,IAJ0B,EAKL;EACxB,MAAMC,WAAW,GAAG,UAClBC,KADkB,OAClBA,KADkB,cAClBA,KADkB,GAGd,EAHc,SAKlB,cAAC,oBAAD;IACE,cAAC,YAAD,CAAc,MAAd,aAAqB,OAAO,EAAEL,OAA9B,IAA2CG,IAA3C,EAAqDE,KAArD,EADF,CALkB,EAApB;;EASA,IAAIJ,OAAJ,EAAa;IACX,OAAOG,WAAW,CAAC;MACjBE,aAAa,EAAE,iBAAC,CAACC,UAAD,EAAaC,WAAb,CAAD,iBAA+B;QAC5C,cAAC,WAAD,IACE,SAAS,EAAEN,SADb,EAEE,EAAE,EAAE,GAAGf,SAAS,CAACc,OAAD,CAAS,UAF3B,EAGE,KAAK,EAAEA,OAHT;QAKGM,UALH,CAD4C;;QAQ5CC,WAR4C,CAA/B,EADE,EAAD,CAAlB;;;EAYD;EACD,OAAOJ,WAAW,EAAlB;AACD,CA9BM,C,iLApDDhB,oB,8JAoDOW,c","names":["React","AntdDropdown","AntdTooltip","styled","kebabCase","StyledDropdownButton","div","theme","colors","primary","dark1","grayscale","light5","gridUnit","light2","base","DropdownButton","overlay","tooltip","placement","rest","buildButton","props","buttonsRender","leftButton","rightButton"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/DropdownButton/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ReactNode } from 'react';\nimport { AntdDropdown, AntdTooltip } from 'src/components';\nimport { styled } from '@superset-ui/core';\nimport kebabCase from 'lodash/kebabCase';\n\nconst StyledDropdownButton = styled.div`\n  .ant-btn-group {\n    button.ant-btn {\n      background-color: ${({ theme }) => theme.colors.primary.dark1};\n      border-color: transparent;\n      color: ${({ theme }) => theme.colors.grayscale.light5};\n      font-size: 12px;\n      line-height: 13px;\n      outline: none;\n      text-transform: uppercase;\n      &:first-of-type {\n        border-radius: ${({ theme }) =>\n          `${theme.gridUnit}px 0 0 ${theme.gridUnit}px`};\n        margin: 0;\n        width: 120px;\n      }\n\n      &:disabled {\n        background-color: ${({ theme }) => theme.colors.grayscale.light2};\n        color: ${({ theme }) => theme.colors.grayscale.base};\n      }\n      &:nth-child(2) {\n        margin: 0;\n        border-radius: ${({ theme }) =>\n          `0 ${theme.gridUnit}px ${theme.gridUnit}px 0`};\n        width: ${({ theme }) => theme.gridUnit * 9}px;\n        &:before,\n        &:hover:before {\n          border-left: 1px solid ${({ theme }) => theme.colors.grayscale.light5};\n          content: '';\n          display: block;\n          height: ${({ theme }) => theme.gridUnit * 8}px;\n          margin: 0;\n          position: absolute;\n          width: ${({ theme }) => theme.gridUnit * 0.25}px;\n        }\n\n        &:disabled:before {\n          border-left: 1px solid ${({ theme }) => theme.colors.grayscale.base};\n        }\n      }\n    }\n  }\n`;\n\nexport interface DropdownButtonProps {\n  overlay: React.ReactElement;\n  tooltip?: string;\n  placement?: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n  buttonsRender?: ((buttons: ReactNode[]) => ReactNode[]) | undefined;\n}\n\nexport const DropdownButton = ({\n  overlay,\n  tooltip,\n  placement,\n  ...rest\n}: DropdownButtonProps) => {\n  const buildButton = (\n    props: {\n      buttonsRender?: DropdownButtonProps['buttonsRender'];\n    } = {},\n  ) => (\n    <StyledDropdownButton>\n      <AntdDropdown.Button overlay={overlay} {...rest} {...props} />\n    </StyledDropdownButton>\n  );\n  if (tooltip) {\n    return buildButton({\n      buttonsRender: ([leftButton, rightButton]) => [\n        <AntdTooltip\n          placement={placement}\n          id={`${kebabCase(tooltip)}-tooltip`}\n          title={tooltip}\n        >\n          {leftButton}\n        </AntdTooltip>,\n        rightButton,\n      ],\n    });\n  }\n  return buildButton();\n};\n"]},"metadata":{},"sourceType":"module"}