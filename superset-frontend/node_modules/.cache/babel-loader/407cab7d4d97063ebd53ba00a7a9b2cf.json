{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport updateTextNode from './svg/updateTextNode';\nimport getBBoxCeil from './svg/getBBoxCeil';\nimport { hiddenSvgFactory, textFactory } from './svg/factories';\nexport default function getTextDimension(input, defaultDimension) {\n  const { text, className, style, container } = input;\n  // Empty string\n  if (text.length === 0) {\n    return { height: 0, width: 0 };\n  }\n  const svgNode = hiddenSvgFactory.createInContainer(container);\n  const textNode = textFactory.createInContainer(svgNode);\n  updateTextNode(textNode, { className, style, text });\n  const dimension = getBBoxCeil(textNode, defaultDimension);\n  // The nodes are added to the DOM briefly only to make getBBox works.\n  // (If not added to DOM getBBox will always return 0x0.)\n  // After that the svg nodes are not needed.\n  // We delay its removal in case there are subsequent calls to this function\n  // that can reuse the svg nodes.\n  // Experiments have shown that reusing existing nodes\n  // instead of deleting and adding new ones can save lot of time.\n  setTimeout(() => {\n    textFactory.removeFromContainer(svgNode);\n    hiddenSvgFactory.removeFromContainer(container);\n  }, 500);\n  return dimension;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAoBA,OAAOA,cAAP,MAA2B,sBAA3B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,iBAA9C;AASA,eAAc,SAAUC,gBAAV,CACZC,KADY,EAEZC,gBAFY,EAEgB;EAE5B,MAAM,EAAEC,IAAF,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,SAA1B,KAAwCL,KAA9C;EAEA;EACA,IAAIE,IAAI,CAACI,MAAL,KAAgB,CAApB,EAAuB;IACrB,OAAO,EAAEC,MAAM,EAAE,CAAV,EAAaC,KAAK,EAAE,CAApB,EAAP;EACD;EAED,MAAMC,OAAO,GAAGZ,gBAAgB,CAACa,iBAAjB,CAAmCL,SAAnC,CAAhB;EACA,MAAMM,QAAQ,GAAGb,WAAW,CAACY,iBAAZ,CAA8BD,OAA9B,CAAjB;EACAd,cAAc,CAACgB,QAAD,EAAW,EAAER,SAAF,EAAaC,KAAb,EAAoBF,IAApB,EAAX,CAAd;EACA,MAAMU,SAAS,GAAGhB,WAAW,CAACe,QAAD,EAAWV,gBAAX,CAA7B;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACAY,UAAU,CAAC,MAAK;IACdf,WAAW,CAACgB,mBAAZ,CAAgCL,OAAhC;IACAZ,gBAAgB,CAACiB,mBAAjB,CAAqCT,SAArC;EACD,CAHS,EAGP,GAHO,CAAV;EAKA,OAAOO,SAAP;AACD","names":["updateTextNode","getBBoxCeil","hiddenSvgFactory","textFactory","getTextDimension","input","defaultDimension","text","className","style","container","length","height","width","svgNode","createInContainer","textNode","dimension","setTimeout","removeFromContainer"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/packages/superset-ui-core/src/dimension/getTextDimension.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { TextStyle, Dimension } from './types';\nimport updateTextNode from './svg/updateTextNode';\nimport getBBoxCeil from './svg/getBBoxCeil';\nimport { hiddenSvgFactory, textFactory } from './svg/factories';\n\nexport interface GetTextDimensionInput {\n  className?: string;\n  container?: HTMLElement;\n  style?: TextStyle;\n  text: string;\n}\n\nexport default function getTextDimension(\n  input: GetTextDimensionInput,\n  defaultDimension?: Dimension,\n): Dimension {\n  const { text, className, style, container } = input;\n\n  // Empty string\n  if (text.length === 0) {\n    return { height: 0, width: 0 };\n  }\n\n  const svgNode = hiddenSvgFactory.createInContainer(container);\n  const textNode = textFactory.createInContainer(svgNode);\n  updateTextNode(textNode, { className, style, text });\n  const dimension = getBBoxCeil(textNode, defaultDimension);\n\n  // The nodes are added to the DOM briefly only to make getBBox works.\n  // (If not added to DOM getBBox will always return 0x0.)\n  // After that the svg nodes are not needed.\n  // We delay its removal in case there are subsequent calls to this function\n  // that can reuse the svg nodes.\n  // Experiments have shown that reusing existing nodes\n  // instead of deleting and adding new ones can save lot of time.\n  setTimeout(() => {\n    textFactory.removeFromContainer(svgNode);\n    hiddenSvgFactory.removeFromContainer(container);\n  }, 500);\n\n  return dimension;\n}\n"]},"metadata":{},"sourceType":"module"}