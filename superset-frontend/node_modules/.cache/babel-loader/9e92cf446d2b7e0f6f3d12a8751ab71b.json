{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\nimport Icons from 'src/components/Icons';\nimport { StyledIcon } from 'src/views/CRUD/utils';\nimport Modal from 'src/components/Modal';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { CssEditor } from 'src/components/AsyncAceEditor';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledCssTemplateTitle = styled.div`\n  margin: ${(_ref) => {let { theme } = _ref;return theme.gridUnit * 2;}}px auto\n    ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit * 4;}}px auto;\n`;\nconst StyledCssEditor = styled(CssEditor)`\n  border-radius: ${(_ref3) => {let { theme } = _ref3;return theme.borderRadius;}}px;\n  border: 1px solid ${(_ref4) => {let { theme } = _ref4;return theme.colors.secondary.light2;}};\n`;\nconst TemplateContainer = styled.div`\n  margin-bottom: ${(_ref5) => {let { theme } = _ref5;return theme.gridUnit * 10;}}px;\n\n  .control-label {\n    margin-bottom: ${(_ref6) => {let { theme } = _ref6;return theme.gridUnit * 2;}}px;\n  }\n\n  .required {\n    margin-left: ${(_ref7) => {let { theme } = _ref7;return theme.gridUnit / 2;}}px;\n    color: ${(_ref8) => {let { theme } = _ref8;return theme.colors.error.base;}};\n  }\n\n  input[type='text'] {\n    padding: ${(_ref9) => {let { theme } = _ref9;return theme.gridUnit * 1.5;}}px\n      ${(_ref10) => {let { theme } = _ref10;return theme.gridUnit * 2;}}px;\n    border: 1px solid ${(_ref11) => {let { theme } = _ref11;return theme.colors.grayscale.light2;}};\n    border-radius: ${(_ref12) => {let { theme } = _ref12;return theme.gridUnit;}}px;\n    width: 50%;\n  }\n`;\nconst CssTemplateModal = (_ref13) => {let { addDangerToast, onCssTemplateAdd, onHide, show, cssTemplate = null } = _ref13;\n  const [disableSave, setDisableSave] = useState(true);\n  const [currentCssTemplate, setCurrentCssTemplate] = useState(null);\n  const [isHidden, setIsHidden] = useState(true);\n  const isEditMode = cssTemplate !== null;\n  // cssTemplate fetch logic\n  const { state: { loading, resource }, fetchResource, createResource, updateResource } = useSingleViewResource('css_template', t('css_template'), addDangerToast);\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    onHide();\n  };\n  const onSave = () => {\n    if (isEditMode) {\n      // Edit\n      if (currentCssTemplate != null && currentCssTemplate.id) {\n        const update_id = currentCssTemplate.id;\n        delete currentCssTemplate.id;\n        delete currentCssTemplate.created_by;\n        updateResource(update_id, currentCssTemplate).then((response) => {\n          if (!response) {\n            return;\n          }\n          if (onCssTemplateAdd) {\n            onCssTemplateAdd();\n          }\n          hide();\n        });\n      }\n    } else\n    if (currentCssTemplate) {\n      // Create\n      createResource(currentCssTemplate).then((response) => {\n        if (!response) {\n          return;\n        }\n        if (onCssTemplateAdd) {\n          onCssTemplateAdd();\n        }\n        hide();\n      });\n    }\n  };\n  const onTemplateNameChange = (event) => {\n    const { target } = event;\n    const data = {\n      ...currentCssTemplate,\n      template_name: currentCssTemplate ? currentCssTemplate.template_name : '',\n      css: currentCssTemplate ? currentCssTemplate.css : '' };\n\n    data[target.name] = target.value;\n    setCurrentCssTemplate(data);\n  };\n  const onCssChange = (css) => {\n    const data = {\n      ...currentCssTemplate,\n      template_name: currentCssTemplate ? currentCssTemplate.template_name : '',\n      css };\n\n    setCurrentCssTemplate(data);\n  };\n  const validate = () => {var _currentCssTemplate$c;\n    if (currentCssTemplate != null && currentCssTemplate.template_name.length &&\n    currentCssTemplate != null && (_currentCssTemplate$c = currentCssTemplate.css) != null && _currentCssTemplate$c.length) {\n      setDisableSave(false);\n    } else\n    {\n      setDisableSave(true);\n    }\n  };\n  // Initialize\n  useEffect(() => {\n    if (isEditMode && (\n    !currentCssTemplate ||\n    !currentCssTemplate.id ||\n    cssTemplate && (cssTemplate == null ? void 0 : cssTemplate.id) !== currentCssTemplate.id ||\n    isHidden && show)) {\n      if ((cssTemplate == null ? void 0 : cssTemplate.id) !== null && !loading) {\n        const id = cssTemplate.id || 0;\n        fetchResource(id);\n      }\n    } else\n    if (!isEditMode && (\n    !currentCssTemplate || currentCssTemplate.id || isHidden && show)) {\n      setCurrentCssTemplate({\n        template_name: '',\n        css: '' });\n\n    }\n  }, [cssTemplate]);\n  useEffect(() => {\n    if (resource) {\n      setCurrentCssTemplate(resource);\n    }\n  }, [resource]);\n  // Validation\n  useEffect(() => {\n    validate();\n  }, [\n  currentCssTemplate ? currentCssTemplate.template_name : '',\n  currentCssTemplate ? currentCssTemplate.css : '']);\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n  return ___EmotionJSX(Modal, { disablePrimaryButton: disableSave, onHandledPrimaryAction: onSave, onHide: hide, primaryButtonName: isEditMode ? t('Save') : t('Add'), show: show, width: \"55%\", title: ___EmotionJSX(\"h4\", null,\n    isEditMode ? ___EmotionJSX(Icons.EditAlt, { css: StyledIcon }) : ___EmotionJSX(Icons.PlusLarge, { css: StyledIcon }),\n    isEditMode ?\n    t('Edit CSS template properties') :\n    t('Add CSS template')) },\n\n  ___EmotionJSX(StyledCssTemplateTitle, null,\n  ___EmotionJSX(\"h4\", null, t('Basic information'))),\n\n  ___EmotionJSX(TemplateContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" },\n  t('CSS template name'),\n  ___EmotionJSX(\"span\", { className: \"required\" }, \"*\")),\n\n  ___EmotionJSX(\"input\", { name: \"template_name\", onChange: onTemplateNameChange, type: \"text\", value: currentCssTemplate == null ? void 0 : currentCssTemplate.template_name })),\n\n  ___EmotionJSX(TemplateContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" },\n  t('css'),\n  ___EmotionJSX(\"span\", { className: \"required\" }, \"*\")),\n\n  ___EmotionJSX(StyledCssEditor, { onChange: onCssChange, value: currentCssTemplate == null ? void 0 : currentCssTemplate.css, width: \"100%\" })));\n\n\n};\nexport default withToasts(CssTemplateModal);","map":{"version":3,"mappings":"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","names":["React","useState","useEffect","styled","t","useSingleViewResource","Icons","StyledIcon","Modal","withToasts","CssEditor","StyledCssTemplateTitle","div","theme","gridUnit","StyledCssEditor","borderRadius","colors","secondary","light2","TemplateContainer","error","base","grayscale","CssTemplateModal","addDangerToast","onCssTemplateAdd","onHide","show","cssTemplate","disableSave","setDisableSave","currentCssTemplate","setCurrentCssTemplate","isHidden","setIsHidden","isEditMode","state","loading","resource","fetchResource","createResource","updateResource","hide","onSave","id","update_id","created_by","then","response","onTemplateNameChange","event","target","data","template_name","css","name","value","onCssChange","validate","length"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/cssTemplates/CssTemplateModal.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\n\nimport Icons from 'src/components/Icons';\nimport { StyledIcon } from 'src/views/CRUD/utils';\nimport Modal from 'src/components/Modal';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { CssEditor } from 'src/components/AsyncAceEditor';\n\nimport { TemplateObject } from './types';\n\ninterface CssTemplateModalProps {\n  addDangerToast: (msg: string) => void;\n  cssTemplate?: TemplateObject | null;\n  onCssTemplateAdd?: (cssTemplate?: TemplateObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst StyledCssTemplateTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 2}px auto\n    ${({ theme }) => theme.gridUnit * 4}px auto;\n`;\n\nconst StyledCssEditor = styled(CssEditor)`\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  border: 1px solid ${({ theme }) => theme.colors.secondary.light2};\n`;\n\nconst TemplateContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 10}px;\n\n  .control-label {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit / 2}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n\n  input[type='text'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n    width: 50%;\n  }\n`;\n\nconst CssTemplateModal: FunctionComponent<CssTemplateModalProps> = ({\n  addDangerToast,\n  onCssTemplateAdd,\n  onHide,\n  show,\n  cssTemplate = null,\n}) => {\n  const [disableSave, setDisableSave] = useState<boolean>(true);\n  const [currentCssTemplate, setCurrentCssTemplate] =\n    useState<TemplateObject | null>(null);\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const isEditMode = cssTemplate !== null;\n\n  // cssTemplate fetch logic\n  const {\n    state: { loading, resource },\n    fetchResource,\n    createResource,\n    updateResource,\n  } = useSingleViewResource<TemplateObject>(\n    'css_template',\n    t('css_template'),\n    addDangerToast,\n  );\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    onHide();\n  };\n\n  const onSave = () => {\n    if (isEditMode) {\n      // Edit\n      if (currentCssTemplate?.id) {\n        const update_id = currentCssTemplate.id;\n        delete currentCssTemplate.id;\n        delete currentCssTemplate.created_by;\n        updateResource(update_id, currentCssTemplate).then(response => {\n          if (!response) {\n            return;\n          }\n\n          if (onCssTemplateAdd) {\n            onCssTemplateAdd();\n          }\n\n          hide();\n        });\n      }\n    } else if (currentCssTemplate) {\n      // Create\n      createResource(currentCssTemplate).then(response => {\n        if (!response) {\n          return;\n        }\n\n        if (onCssTemplateAdd) {\n          onCssTemplateAdd();\n        }\n\n        hide();\n      });\n    }\n  };\n\n  const onTemplateNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    const data = {\n      ...currentCssTemplate,\n      template_name: currentCssTemplate ? currentCssTemplate.template_name : '',\n      css: currentCssTemplate ? currentCssTemplate.css : '',\n    };\n\n    data[target.name] = target.value;\n    setCurrentCssTemplate(data);\n  };\n\n  const onCssChange = (css: string) => {\n    const data = {\n      ...currentCssTemplate,\n      template_name: currentCssTemplate ? currentCssTemplate.template_name : '',\n      css,\n    };\n    setCurrentCssTemplate(data);\n  };\n\n  const validate = () => {\n    if (\n      currentCssTemplate?.template_name.length &&\n      currentCssTemplate?.css?.length\n    ) {\n      setDisableSave(false);\n    } else {\n      setDisableSave(true);\n    }\n  };\n\n  // Initialize\n  useEffect(() => {\n    if (\n      isEditMode &&\n      (!currentCssTemplate ||\n        !currentCssTemplate.id ||\n        (cssTemplate && cssTemplate?.id !== currentCssTemplate.id) ||\n        (isHidden && show))\n    ) {\n      if (cssTemplate?.id !== null && !loading) {\n        const id = cssTemplate.id || 0;\n\n        fetchResource(id);\n      }\n    } else if (\n      !isEditMode &&\n      (!currentCssTemplate || currentCssTemplate.id || (isHidden && show))\n    ) {\n      setCurrentCssTemplate({\n        template_name: '',\n        css: '',\n      });\n    }\n  }, [cssTemplate]);\n\n  useEffect(() => {\n    if (resource) {\n      setCurrentCssTemplate(resource);\n    }\n  }, [resource]);\n\n  // Validation\n  useEffect(() => {\n    validate();\n  }, [\n    currentCssTemplate ? currentCssTemplate.template_name : '',\n    currentCssTemplate ? currentCssTemplate.css : '',\n  ]);\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={hide}\n      primaryButtonName={isEditMode ? t('Save') : t('Add')}\n      show={show}\n      width=\"55%\"\n      title={\n        <h4 data-test=\"css-template-modal-title\">\n          {isEditMode ? (\n            <Icons.EditAlt css={StyledIcon} />\n          ) : (\n            <Icons.PlusLarge css={StyledIcon} />\n          )}\n          {isEditMode\n            ? t('Edit CSS template properties')\n            : t('Add CSS template')}\n        </h4>\n      }\n    >\n      <StyledCssTemplateTitle>\n        <h4>{t('Basic information')}</h4>\n      </StyledCssTemplateTitle>\n      <TemplateContainer>\n        <div className=\"control-label\">\n          {t('CSS template name')}\n          <span className=\"required\">*</span>\n        </div>\n        <input\n          name=\"template_name\"\n          onChange={onTemplateNameChange}\n          type=\"text\"\n          value={currentCssTemplate?.template_name}\n        />\n      </TemplateContainer>\n      <TemplateContainer>\n        <div className=\"control-label\">\n          {t('css')}\n          <span className=\"required\">*</span>\n        </div>\n        <StyledCssEditor\n          onChange={onCssChange}\n          value={currentCssTemplate?.css}\n          width=\"100%\"\n        />\n      </TemplateContainer>\n    </Modal>\n  );\n};\n\nexport default withToasts(CssTemplateModal);\n"]},"metadata":{},"sourceType":"module"}