{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { LegendOrientation, LegendType } from '../types';\nimport { DEFAULT_LEGEND_FORM_DATA } from '../constants';\nexport var EchartsFunnelLabelTypeType;\n(function (EchartsFunnelLabelTypeType) {\n  EchartsFunnelLabelTypeType[EchartsFunnelLabelTypeType[\"Key\"] = 0] = \"Key\";\n  EchartsFunnelLabelTypeType[EchartsFunnelLabelTypeType[\"Value\"] = 1] = \"Value\";\n  EchartsFunnelLabelTypeType[EchartsFunnelLabelTypeType[\"Percent\"] = 2] = \"Percent\";\n  EchartsFunnelLabelTypeType[EchartsFunnelLabelTypeType[\"KeyValue\"] = 3] = \"KeyValue\";\n  EchartsFunnelLabelTypeType[EchartsFunnelLabelTypeType[\"KeyPercent\"] = 4] = \"KeyPercent\";\n  EchartsFunnelLabelTypeType[EchartsFunnelLabelTypeType[\"KeyValuePercent\"] = 5] = \"KeyValuePercent\";\n})(EchartsFunnelLabelTypeType || (EchartsFunnelLabelTypeType = {}));\n// @ts-ignore\nexport const DEFAULT_FORM_DATA = {\n  ...DEFAULT_LEGEND_FORM_DATA,\n  groupby: [],\n  labelLine: false,\n  labelType: EchartsFunnelLabelTypeType.Key,\n  legendOrientation: LegendOrientation.Top,\n  legendType: LegendType.Scroll,\n  numberFormat: 'SMART_NUMBER',\n  showLabels: true,\n  sort: 'descending',\n  orient: 'vertical',\n  gap: 0 };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(EchartsFunnelLabelTypeType, \"EchartsFunnelLabelTypeType\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Funnel/types.ts\");reactHotLoader.register(DEFAULT_FORM_DATA, \"DEFAULT_FORM_DATA\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Funnel/types.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"uSAmBA,SAMEA,iBANF,EAOEC,UAPF,QAQO,UARP;AASA,SAASC,wBAAT,QAAyC,cAAzC;AAgBA,WAAYC,0BAAZ;AAAA,WAAYA,0BAAZ,EAAsC;EACpCA;EACAA;EACAA;EACAA;EACAA;EACAA;AACD,CAPD,EAAYA,0BAA0B,KAA1BA,0BAA0B,MAAtC;AAcA;AACA,OAAO,MAAMC,iBAAiB,GAA0B;EACtD,GAAGF,wBADmD;EAEtDG,OAAO,EAAE,EAF6C;EAGtDC,SAAS,EAAE,KAH2C;EAItDC,SAAS,EAAEJ,0BAA0B,CAACK,GAJgB;EAKtDC,iBAAiB,EAAET,iBAAiB,CAACU,GALiB;EAMtDC,UAAU,EAAEV,UAAU,CAACW,MAN+B;EAOtDC,YAAY,EAAE,cAPwC;EAQtDC,UAAU,EAAE,IAR0C;EAStDC,IAAI,EAAE,YATgD;EAUtDC,MAAM,EAAE,UAV8C;EAWtDC,GAAG,EAAE,CAXiD,EAAjD,C,iLAfKd,0B,6KAeCC,iB","names":["LegendOrientation","LegendType","DEFAULT_LEGEND_FORM_DATA","EchartsFunnelLabelTypeType","DEFAULT_FORM_DATA","groupby","labelLine","labelType","Key","legendOrientation","Top","legendType","Scroll","numberFormat","showLabels","sort","orient","gap"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Funnel/types.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { QueryFormData } from '@superset-ui/core';\nimport {\n  BaseChartProps,\n  BaseTransformedProps,\n  ContextMenuTransformedProps,\n  CrossFilterTransformedProps,\n  LegendFormData,\n  LegendOrientation,\n  LegendType,\n} from '../types';\nimport { DEFAULT_LEGEND_FORM_DATA } from '../constants';\n\nexport type EchartsFunnelFormData = QueryFormData &\n  LegendFormData & {\n    colorScheme?: string;\n    groupby: QueryFormData[];\n    labelLine: boolean;\n    labelType: EchartsFunnelLabelTypeType;\n    metric?: string;\n    showLabels: boolean;\n    numberFormat: string;\n    gap: number;\n    sort: 'descending' | 'ascending' | 'none' | undefined;\n    orient: 'vertical' | 'horizontal' | undefined;\n  };\n\nexport enum EchartsFunnelLabelTypeType {\n  Key,\n  Value,\n  Percent,\n  KeyValue,\n  KeyPercent,\n  KeyValuePercent,\n}\n\nexport interface EchartsFunnelChartProps\n  extends BaseChartProps<EchartsFunnelFormData> {\n  formData: EchartsFunnelFormData;\n}\n\n// @ts-ignore\nexport const DEFAULT_FORM_DATA: EchartsFunnelFormData = {\n  ...DEFAULT_LEGEND_FORM_DATA,\n  groupby: [],\n  labelLine: false,\n  labelType: EchartsFunnelLabelTypeType.Key,\n  legendOrientation: LegendOrientation.Top,\n  legendType: LegendType.Scroll,\n  numberFormat: 'SMART_NUMBER',\n  showLabels: true,\n  sort: 'descending',\n  orient: 'vertical',\n  gap: 0,\n};\n\nexport type FunnelChartTransformedProps =\n  BaseTransformedProps<EchartsFunnelFormData> &\n    CrossFilterTransformedProps &\n    ContextMenuTransformedProps;\n"]},"metadata":{},"sourceType":"module"}