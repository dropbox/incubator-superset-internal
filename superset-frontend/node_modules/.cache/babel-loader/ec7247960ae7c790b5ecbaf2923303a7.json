{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { GenericDataType } from '@superset-ui/core';\nimport { FALSE_STRING, NULL_STRING, TRUE_STRING } from 'src/utils/common';\nimport { CLAUSES, EXPRESSION_TYPES } from '../explore/components/controls/FilterControl/types';\nexport const getSelectExtraFormData = function (col, value, emptyFilter, inverseSelection) {if (emptyFilter === void 0) {emptyFilter = false;}if (inverseSelection === void 0) {inverseSelection = false;}\n  const extra = {};\n  if (emptyFilter) {\n    extra.adhoc_filters = [\n    {\n      expressionType: EXPRESSION_TYPES.SQL,\n      clause: CLAUSES.WHERE,\n      sqlExpression: '1 = 0' }];\n\n\n  } else\n  if (value !== undefined && value !== null && value.length !== 0) {\n    extra.filters = [\n    {\n      col,\n      op: inverseSelection ? 'NOT IN' : 'IN',\n      // @ts-ignore\n      val: value }];\n\n\n  }\n  return extra;\n};\nexport const getRangeExtraFormData = (col, lower, upper) => {\n  const filters = [];\n  if (lower !== undefined && lower !== null && lower !== upper) {\n    filters.push({ col, op: '>=', val: lower });\n  }\n  if (upper !== undefined && upper !== null && upper !== lower) {\n    filters.push({ col, op: '<=', val: upper });\n  }\n  if (upper !== undefined &&\n  upper !== null &&\n  lower !== undefined &&\n  lower !== null &&\n  upper === lower) {\n    filters.push({ col, op: '==', val: upper });\n  }\n  return filters.length ?\n  {\n    filters } :\n\n  {};\n};\nexport function getDataRecordFormatter(_temp) {let { timeFormatter, numberFormatter } = _temp === void 0 ? {} : _temp;\n  return (value, dtype) => {\n    if (value === null || value === undefined) {\n      return NULL_STRING;\n    }\n    if (typeof value === 'boolean') {\n      return value ? TRUE_STRING : FALSE_STRING;\n    }\n    if (dtype === GenericDataType.BOOLEAN) {\n      try {\n        return JSON.parse(String(value).toLowerCase()) ?\n        TRUE_STRING :\n        FALSE_STRING;\n      }\n      catch {\n        return FALSE_STRING;\n      }\n    }\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (timeFormatter && dtype === GenericDataType.TEMPORAL) {\n      return timeFormatter(value);\n    }\n    if (numberFormatter &&\n    typeof value === 'number' &&\n    dtype === GenericDataType.NUMERIC) {\n      return numberFormatter(value);\n    }\n    return String(value);\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getSelectExtraFormData, \"getSelectExtraFormData\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/filters/utils.ts\");reactHotLoader.register(getRangeExtraFormData, \"getRangeExtraFormData\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/filters/utils.ts\");reactHotLoader.register(getDataRecordFormatter, \"getDataRecordFormatter\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/filters/utils.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["GenericDataType","FALSE_STRING","NULL_STRING","TRUE_STRING","CLAUSES","EXPRESSION_TYPES","getSelectExtraFormData","col","value","emptyFilter","inverseSelection","extra","adhoc_filters","expressionType","SQL","clause","WHERE","sqlExpression","undefined","length","filters","op","val","getRangeExtraFormData","lower","upper","push","getDataRecordFormatter","timeFormatter","numberFormatter","dtype","BOOLEAN","JSON","parse","String","toLowerCase","TEMPORAL","NUMERIC"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/filters/utils.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  DataRecordValue,\n  GenericDataType,\n  NumberFormatter,\n  QueryObjectFilterClause,\n  TimeFormatter,\n  ExtraFormData,\n} from '@superset-ui/core';\nimport { FALSE_STRING, NULL_STRING, TRUE_STRING } from 'src/utils/common';\nimport {\n  CLAUSES,\n  EXPRESSION_TYPES,\n} from '../explore/components/controls/FilterControl/types';\n\nexport const getSelectExtraFormData = (\n  col: string,\n  value?: null | (string | number | boolean | null)[],\n  emptyFilter = false,\n  inverseSelection = false,\n): ExtraFormData => {\n  const extra: ExtraFormData = {};\n  if (emptyFilter) {\n    extra.adhoc_filters = [\n      {\n        expressionType: EXPRESSION_TYPES.SQL,\n        clause: CLAUSES.WHERE,\n        sqlExpression: '1 = 0',\n      },\n    ];\n  } else if (value !== undefined && value !== null && value.length !== 0) {\n    extra.filters = [\n      {\n        col,\n        op: inverseSelection ? ('NOT IN' as const) : ('IN' as const),\n        // @ts-ignore\n        val: value,\n      },\n    ];\n  }\n  return extra;\n};\n\nexport const getRangeExtraFormData = (\n  col: string,\n  lower?: number | null,\n  upper?: number | null,\n) => {\n  const filters: QueryObjectFilterClause[] = [];\n  if (lower !== undefined && lower !== null && lower !== upper) {\n    filters.push({ col, op: '>=', val: lower });\n  }\n  if (upper !== undefined && upper !== null && upper !== lower) {\n    filters.push({ col, op: '<=', val: upper });\n  }\n  if (\n    upper !== undefined &&\n    upper !== null &&\n    lower !== undefined &&\n    lower !== null &&\n    upper === lower\n  ) {\n    filters.push({ col, op: '==', val: upper });\n  }\n\n  return filters.length\n    ? {\n        filters,\n      }\n    : {};\n};\n\nexport interface DataRecordValueFormatter {\n  (value: DataRecordValue, dtype: GenericDataType): string;\n}\n\nexport function getDataRecordFormatter({\n  timeFormatter,\n  numberFormatter,\n}: {\n  timeFormatter?: TimeFormatter;\n  numberFormatter?: NumberFormatter;\n} = {}): DataRecordValueFormatter {\n  return (value, dtype) => {\n    if (value === null || value === undefined) {\n      return NULL_STRING;\n    }\n    if (typeof value === 'boolean') {\n      return value ? TRUE_STRING : FALSE_STRING;\n    }\n    if (dtype === GenericDataType.BOOLEAN) {\n      try {\n        return JSON.parse(String(value).toLowerCase())\n          ? TRUE_STRING\n          : FALSE_STRING;\n      } catch {\n        return FALSE_STRING;\n      }\n    }\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (timeFormatter && dtype === GenericDataType.TEMPORAL) {\n      return timeFormatter(value);\n    }\n    if (\n      numberFormatter &&\n      typeof value === 'number' &&\n      dtype === GenericDataType.NUMERIC\n    ) {\n      return numberFormatter(value);\n    }\n    return String(value);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}