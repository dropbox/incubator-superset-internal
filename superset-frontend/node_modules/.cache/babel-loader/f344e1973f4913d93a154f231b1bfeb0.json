{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/** Turns an array of string/number options into options for a select input */\nexport function formatSelectOptions(options) {\n  return options.map((opt) => Array.isArray(opt) ? opt : [opt, opt.toString()]);\n}\n/**\n * Outputs array of arrays\n *   >> formatSelectOptionsForRange(1, 5)\n *   >> [[1,'1'], [2,'2'], [3,'3'], [4,'4'], [5,'5']]\n */\nexport function formatSelectOptionsForRange(start, end) {\n  const options = [];\n  for (let i = start; i <= end; i += 1) {\n    options.push([i, i.toString()]);\n  }\n  return options;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAyBA;AACA,OAAM,SAAUA,mBAAV,CACJC,OADI,EACwB;EAE5B,OAAOA,OAAO,CAACC,GAAR,CAAY,IAAG,KAAKC,KAAK,CAACC,OAAN,CAAcC,GAAd,IAAqBA,GAArB,GAA2B,CAACA,GAAD,EAAMA,GAAG,CAACC,QAAJ,EAAN,CAA/C,CAAP;AACD;AAED;;;;;AAKA,OAAM,SAAUC,2BAAV,CAAsCC,KAAtC,EAAqDC,GAArD,EAAgE;EACpE,MAAMR,OAAO,GAAgB,EAA7B;EACA,KAAK,IAAIS,CAAC,GAAGF,KAAb,EAAoBE,CAAC,IAAID,GAAzB,EAA8BC,CAAC,IAAI,CAAnC,EAAsC;IACpCT,OAAO,CAACU,IAAR,CAAa,CAACD,CAAD,EAAIA,CAAC,CAACJ,QAAF,EAAJ,CAAb;EACD;EACD,OAAOL,OAAP;AACD","names":["formatSelectOptions","options","map","Array","isArray","opt","toString","formatSelectOptionsForRange","start","end","i","push"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/utils/selectOptions.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// helper functions for select controls\n\nexport type Formattable = string | number;\n\nexport type Formatted = [Formattable, string];\n\n/** Turns an array of string/number options into options for a select input */\nexport function formatSelectOptions<T extends Formattable>(\n  options: (T | [T, string])[],\n): [T, string][] {\n  return options.map(opt => (Array.isArray(opt) ? opt : [opt, opt.toString()]));\n}\n\n/**\n * Outputs array of arrays\n *   >> formatSelectOptionsForRange(1, 5)\n *   >> [[1,'1'], [2,'2'], [3,'3'], [4,'4'], [5,'5']]\n */\nexport function formatSelectOptionsForRange(start: number, end: number) {\n  const options: Formatted[] = [];\n  for (let i = start; i <= end; i += 1) {\n    options.push([i, i.toString()]);\n  }\n  return options;\n}\n"]},"metadata":{},"sourceType":"module"}