{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useTheme, t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { ClassNames } from '@emotion/react';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst TIME_PICKER_HELPER = ___EmotionJSX(React.Fragment, null,\n___EmotionJSX(\"div\", null,\n___EmotionJSX(\"h3\", null, \"DATETIME\"),\n___EmotionJSX(\"p\", null, t('Return to specific datetime.')),\n___EmotionJSX(\"h4\", null, t('Syntax')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, \"datetime([string])\")),\n\n___EmotionJSX(\"h4\", null, t('Example')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, `datetime(\"2020-03-01 12:00:00\")\ndatetime(\"now\")\ndatetime(\"last year\")`))),\n\n\n___EmotionJSX(\"div\", null,\n___EmotionJSX(\"h3\", null, \"DATEADD\"),\n___EmotionJSX(\"p\", null, t('Moves the given set of dates by a specified interval.')),\n___EmotionJSX(\"h4\", null, t('Syntax')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, `dateadd([datetime], [integer], [dateunit])\ndateunit = (year | quarter | month | week | day | hour | minute | second)`)),\n\n___EmotionJSX(\"h4\", null, t('Example')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, `dateadd(datetime(\"today\"), -13, day)\ndateadd(datetime(\"2020-03-01\"), 2, day)`))),\n\n\n___EmotionJSX(\"div\", null,\n___EmotionJSX(\"h3\", null, \"DATETRUNC\"),\n___EmotionJSX(\"p\", null,\nt('Truncates the specified date to the accuracy specified by the date unit.')),\n\n___EmotionJSX(\"h4\", null, t('Syntax')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, `datetrunc([datetime], [dateunit])\ndateunit = (year | quarter | month | week)`)),\n\n___EmotionJSX(\"h4\", null, t('Example')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, `datetrunc(datetime(\"2020-03-01\"), week)\ndatetrunc(datetime(\"2020-03-01\"), month)`))),\n\n\n___EmotionJSX(\"div\", null,\n___EmotionJSX(\"h3\", null, \"LASTDAY\"),\n___EmotionJSX(\"p\", null, t('Get the last date by the date unit.')),\n___EmotionJSX(\"h4\", null, t('Syntax')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, `lastday([datetime], [dateunit])\ndateunit = (year | month | week)`)),\n\n___EmotionJSX(\"h4\", null, t('Example')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, \"lastday(datetime(\\\"today\\\"), month)\"))),\n\n\n___EmotionJSX(\"div\", null,\n___EmotionJSX(\"h3\", null, \"HOLIDAY\"),\n___EmotionJSX(\"p\", null, t('Get the specify date for the holiday')),\n___EmotionJSX(\"h4\", null, t('Syntax')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, `holiday([string])\nholiday([holiday string], [datetime])\nholiday([holiday string], [datetime], [country name])`)),\n\n___EmotionJSX(\"h4\", null, t('Example')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, `holiday(\"new year\")\nholiday(\"christmas\", datetime(\"2019\"))\nholiday(\"christmas\", dateadd(datetime(\"2019\"), 1, year))\nholiday(\"christmas\", datetime(\"2 years ago\"))\nholiday(\"Easter Monday\", datetime(\"2019\"), \"UK\")`))));\n\n\n\nconst StyledTooltip = (props) => {\n  const theme = useTheme();\n  return ___EmotionJSX(ClassNames, null,\n  (_ref) => {let { css } = _ref;return ___EmotionJSX(Tooltip, _extends({ overlayClassName: css`\n            .ant-tooltip-content {\n              min-width: ${theme.gridUnit * 125}px;\n              max-height: 410px;\n              overflow-y: scroll;\n\n              .ant-tooltip-inner {\n                max-width: ${theme.gridUnit * 125}px;\n                h3 {\n                  font-size: ${theme.typography.sizes.m}px;\n                  font-weight: ${theme.typography.weights.bold};\n                }\n                h4 {\n                  font-size: ${theme.typography.sizes.m}px;\n                  font-weight: ${theme.typography.weights.bold};\n                }\n                pre {\n                  border: none;\n                  text-align: left;\n                  word-break: break-word;\n                  font-size: ${theme.typography.sizes.s}px;\n                }\n              }\n            }\n          ` }, props));});\n\n};\nexport default function DateFunctionTooltip(props) {\n  return ___EmotionJSX(StyledTooltip, _extends({ title: TIME_PICKER_HELPER }, props));\n}","map":{"version":3,"mappings":"+DAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,CAAnB,QAA4B,mBAA5B;AAEA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,gBAA3B,C;AAEA,MAAMC,kBAAkB,GACtB;AACE;AACE,qCADF;AAEE,yBAAIH,CAAC,CAAC,8BAAD,CAAL,CAFF;AAGE,0BAAKA,CAAC,CAAC,QAAD,CAAN,CAHF;AAIE;AACE,iDADF,CAJF;;AAOE,0BAAKA,CAAC,CAAC,SAAD,CAAN,CAPF;AAQE;AACE,4BAAO;;sBAAP,CADF,CARF,CADF;;;AAeE;AACE,oCADF;AAEE,yBAAIA,CAAC,CAAC,uDAAD,CAAL,CAFF;AAGE,0BAAKA,CAAC,CAAC,QAAD,CAAN,CAHF;AAIE;AACE,4BAAO;0EAAP,CADF,CAJF;;AAQE,0BAAKA,CAAC,CAAC,SAAD,CAAN,CARF;AASE;AACE,4BAAO;wCAAP,CADF,CATF,CAfF;;;AA6BE;AACE,sCADF;AAEE;AACGA,CAAC,CACA,0EADA,CADJ,CAFF;;AAOE,0BAAKA,CAAC,CAAC,QAAD,CAAN,CAPF;AAQE;AACE,4BAAO;2CAAP,CADF,CARF;;AAYE,0BAAKA,CAAC,CAAC,SAAD,CAAN,CAZF;AAaE;AACE,4BAAO;yCAAP,CADF,CAbF,CA7BF;;;AA+CE;AACE,oCADF;AAEE,yBAAIA,CAAC,CAAC,qCAAD,CAAL,CAFF;AAGE,0BAAKA,CAAC,CAAC,QAAD,CAAN,CAHF;AAIE;AACE,4BAAO;iCAAP,CADF,CAJF;;AAQE,0BAAKA,CAAC,CAAC,SAAD,CAAN,CARF;AASE;AACE,kEADF,CATF,CA/CF;;;AA4DE;AACE,oCADF;AAEE,yBAAIA,CAAC,CAAC,sCAAD,CAAL,CAFF;AAGE,0BAAKA,CAAC,CAAC,QAAD,CAAN,CAHF;AAIE;AACE,4BAAO;;sDAAP,CADF,CAJF;;AASE,0BAAKA,CAAC,CAAC,SAAD,CAAN,CATF;AAUE;AACE,4BAAO;;;;iDAAP,CADF,CAVF,CA5DF,CADF;;;;AAkFA,MAAMI,aAAa,GAAG,CAACC,KAAD,KAAe;EACnC,MAAMC,KAAK,GAAGP,QAAQ,EAAtB;EACA,OACE,cAAC,UAAD;EACG,eAAC,EAAEQ,GAAF,EAAD,eACC,cAAC,OAAD,aACE,gBAAgB,EAAEA,GAAG;;2BAEJD,KAAK,CAACE,QAAN,GAAiB,GAAG;;;;;6BAKlBF,KAAK,CAACE,QAAN,GAAiB,GAAG;;+BAElBF,KAAK,CAACG,UAAN,CAAiBC,KAAjB,CAAuBC,CAAC;iCACtBL,KAAK,CAACG,UAAN,CAAiBG,OAAjB,CAAyBC,IAAI;;;+BAG/BP,KAAK,CAACG,UAAN,CAAiBC,KAAjB,CAAuBC,CAAC;iCACtBL,KAAK,CAACG,UAAN,CAAiBG,OAAjB,CAAyBC,IAAI;;;;;;+BAM/BP,KAAK,CAACG,UAAN,CAAiBC,KAAjB,CAAuBI,CAAC;;;;WArB/C,IA0BMT,KA1BN,EADD,EADH,CADF;;AAkCD,CApCD;AAsCA,eAAc,SAAUU,mBAAV,CAA8BV,KAA9B,EAAwC;EACpD,OAAO,cAAC,aAAD,aAAe,KAAK,EAAEF,kBAAtB,IAA8CE,KAA9C,EAAP;AACD","names":["React","useTheme","t","Tooltip","ClassNames","TIME_PICKER_HELPER","StyledTooltip","props","theme","css","gridUnit","typography","sizes","m","weights","bold","s","DateFunctionTooltip"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/explore/components/controls/DateFilterControl/components/DateFunctionTooltip.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useTheme, t } from '@superset-ui/core';\n\nimport { Tooltip } from 'src/components/Tooltip';\nimport { ClassNames } from '@emotion/react';\n\nconst TIME_PICKER_HELPER = (\n  <>\n    <div>\n      <h3>DATETIME</h3>\n      <p>{t('Return to specific datetime.')}</p>\n      <h4>{t('Syntax')}</h4>\n      <pre>\n        <code>datetime([string])</code>\n      </pre>\n      <h4>{t('Example')}</h4>\n      <pre>\n        <code>{`datetime(\"2020-03-01 12:00:00\")\ndatetime(\"now\")\ndatetime(\"last year\")`}</code>\n      </pre>\n    </div>\n    <div>\n      <h3>DATEADD</h3>\n      <p>{t('Moves the given set of dates by a specified interval.')}</p>\n      <h4>{t('Syntax')}</h4>\n      <pre>\n        <code>{`dateadd([datetime], [integer], [dateunit])\ndateunit = (year | quarter | month | week | day | hour | minute | second)`}</code>\n      </pre>\n      <h4>{t('Example')}</h4>\n      <pre>\n        <code>{`dateadd(datetime(\"today\"), -13, day)\ndateadd(datetime(\"2020-03-01\"), 2, day)`}</code>\n      </pre>\n    </div>\n    <div>\n      <h3>DATETRUNC</h3>\n      <p>\n        {t(\n          'Truncates the specified date to the accuracy specified by the date unit.',\n        )}\n      </p>\n      <h4>{t('Syntax')}</h4>\n      <pre>\n        <code>{`datetrunc([datetime], [dateunit])\ndateunit = (year | quarter | month | week)`}</code>\n      </pre>\n      <h4>{t('Example')}</h4>\n      <pre>\n        <code>{`datetrunc(datetime(\"2020-03-01\"), week)\ndatetrunc(datetime(\"2020-03-01\"), month)`}</code>\n      </pre>\n    </div>\n    <div>\n      <h3>LASTDAY</h3>\n      <p>{t('Get the last date by the date unit.')}</p>\n      <h4>{t('Syntax')}</h4>\n      <pre>\n        <code>{`lastday([datetime], [dateunit])\ndateunit = (year | month | week)`}</code>\n      </pre>\n      <h4>{t('Example')}</h4>\n      <pre>\n        <code>lastday(datetime(\"today\"), month)</code>\n      </pre>\n    </div>\n    <div>\n      <h3>HOLIDAY</h3>\n      <p>{t('Get the specify date for the holiday')}</p>\n      <h4>{t('Syntax')}</h4>\n      <pre>\n        <code>{`holiday([string])\nholiday([holiday string], [datetime])\nholiday([holiday string], [datetime], [country name])`}</code>\n      </pre>\n      <h4>{t('Example')}</h4>\n      <pre>\n        <code>{`holiday(\"new year\")\nholiday(\"christmas\", datetime(\"2019\"))\nholiday(\"christmas\", dateadd(datetime(\"2019\"), 1, year))\nholiday(\"christmas\", datetime(\"2 years ago\"))\nholiday(\"Easter Monday\", datetime(\"2019\"), \"UK\")`}</code>\n      </pre>\n    </div>\n  </>\n);\n\nconst StyledTooltip = (props: any) => {\n  const theme = useTheme();\n  return (\n    <ClassNames>\n      {({ css }) => (\n        <Tooltip\n          overlayClassName={css`\n            .ant-tooltip-content {\n              min-width: ${theme.gridUnit * 125}px;\n              max-height: 410px;\n              overflow-y: scroll;\n\n              .ant-tooltip-inner {\n                max-width: ${theme.gridUnit * 125}px;\n                h3 {\n                  font-size: ${theme.typography.sizes.m}px;\n                  font-weight: ${theme.typography.weights.bold};\n                }\n                h4 {\n                  font-size: ${theme.typography.sizes.m}px;\n                  font-weight: ${theme.typography.weights.bold};\n                }\n                pre {\n                  border: none;\n                  text-align: left;\n                  word-break: break-word;\n                  font-size: ${theme.typography.sizes.s}px;\n                }\n              }\n            }\n          `}\n          {...props}\n        />\n      )}\n    </ClassNames>\n  );\n};\n\nexport default function DateFunctionTooltip(props: any) {\n  return <StyledTooltip title={TIME_PICKER_HELPER} {...props} />;\n}\n"]},"metadata":{},"sourceType":"module"}