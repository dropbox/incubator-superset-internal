{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport findParentId from './findParentId';\nimport { GRID_MIN_COLUMN_COUNT, GRID_COLUMN_COUNT } from './constants';\nimport {\nROW_TYPE,\nCOLUMN_TYPE,\nMARKDOWN_TYPE,\nCHART_TYPE,\nDYNAMIC_TYPE } from\n'./componentTypes';\n\nfunction getTotalChildWidth(_ref) {let { id, components } = _ref;\n  const component = components[id];\n  if (!component) return 0;\n\n  let width = 0;\n\n  (component.children || []).forEach((childId) => {\n    const child = components[childId] || {};\n    width += (child.meta || {}).width || 0;\n  });\n\n  return width;\n}\n\nexport default function getDetailedComponentWidth(_ref2)\n\n\n\n\n{let { // pass either an id, or a component\n    id, component: passedComponent, components = {} } = _ref2;const result = {\n    width: undefined,\n    occupiedWidth: undefined,\n    minimumWidth: undefined };\n\n\n  const component = passedComponent || components[id];\n  if (!component) return result;\n\n  // note these remain as undefined if the component has no defined width\n  result.width = (component.meta || {}).width;\n  result.occupiedWidth = result.width;\n\n  if (component.type === ROW_TYPE) {\n    // not all rows have width 12, e\n    result.width =\n    getDetailedComponentWidth({\n      id: findParentId({\n        childId: component.id,\n        layout: components }),\n\n      components }).\n    width || GRID_COLUMN_COUNT;\n    result.occupiedWidth = getTotalChildWidth({ id: component.id, components });\n    result.minimumWidth = result.occupiedWidth || GRID_MIN_COLUMN_COUNT;\n  } else if (component.type === COLUMN_TYPE) {\n    // find the width of the largest child, only rows count\n    result.minimumWidth = GRID_MIN_COLUMN_COUNT;\n    result.occupiedWidth = 0;\n    (component.children || []).forEach((childId) => {\n      // rows don't have widths, so find the width of its children\n      if (components[childId].type === ROW_TYPE) {\n        result.minimumWidth = Math.max(\n        result.minimumWidth,\n        getTotalChildWidth({ id: childId, components }));\n\n      }\n    });\n  } else if (\n  component.type === DYNAMIC_TYPE ||\n  component.type === MARKDOWN_TYPE ||\n  component.type === CHART_TYPE)\n  {\n    result.minimumWidth = GRID_MIN_COLUMN_COUNT;\n  }\n\n  return result;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getTotalChildWidth, \"getTotalChildWidth\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/util/getDetailedComponentWidth.js\");reactHotLoader.register(getDetailedComponentWidth, \"getDetailedComponentWidth\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/util/getDetailedComponentWidth.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["findParentId","GRID_MIN_COLUMN_COUNT","GRID_COLUMN_COUNT","ROW_TYPE","COLUMN_TYPE","MARKDOWN_TYPE","CHART_TYPE","DYNAMIC_TYPE","getTotalChildWidth","id","components","component","width","children","forEach","childId","child","meta","getDetailedComponentWidth","passedComponent","result","undefined","occupiedWidth","minimumWidth","type","layout","Math","max"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/util/getDetailedComponentWidth.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport findParentId from './findParentId';\nimport { GRID_MIN_COLUMN_COUNT, GRID_COLUMN_COUNT } from './constants';\nimport {\n  ROW_TYPE,\n  COLUMN_TYPE,\n  MARKDOWN_TYPE,\n  CHART_TYPE,\n  DYNAMIC_TYPE,\n} from './componentTypes';\n\nfunction getTotalChildWidth({ id, components }) {\n  const component = components[id];\n  if (!component) return 0;\n\n  let width = 0;\n\n  (component.children || []).forEach(childId => {\n    const child = components[childId] || {};\n    width += (child.meta || {}).width || 0;\n  });\n\n  return width;\n}\n\nexport default function getDetailedComponentWidth({\n  // pass either an id, or a component\n  id,\n  component: passedComponent,\n  components = {},\n}) {\n  const result = {\n    width: undefined,\n    occupiedWidth: undefined,\n    minimumWidth: undefined,\n  };\n\n  const component = passedComponent || components[id];\n  if (!component) return result;\n\n  // note these remain as undefined if the component has no defined width\n  result.width = (component.meta || {}).width;\n  result.occupiedWidth = result.width;\n\n  if (component.type === ROW_TYPE) {\n    // not all rows have width 12, e\n    result.width =\n      getDetailedComponentWidth({\n        id: findParentId({\n          childId: component.id,\n          layout: components,\n        }),\n        components,\n      }).width || GRID_COLUMN_COUNT;\n    result.occupiedWidth = getTotalChildWidth({ id: component.id, components });\n    result.minimumWidth = result.occupiedWidth || GRID_MIN_COLUMN_COUNT;\n  } else if (component.type === COLUMN_TYPE) {\n    // find the width of the largest child, only rows count\n    result.minimumWidth = GRID_MIN_COLUMN_COUNT;\n    result.occupiedWidth = 0;\n    (component.children || []).forEach(childId => {\n      // rows don't have widths, so find the width of its children\n      if (components[childId].type === ROW_TYPE) {\n        result.minimumWidth = Math.max(\n          result.minimumWidth,\n          getTotalChildWidth({ id: childId, components }),\n        );\n      }\n    });\n  } else if (\n    component.type === DYNAMIC_TYPE ||\n    component.type === MARKDOWN_TYPE ||\n    component.type === CHART_TYPE\n  ) {\n    result.minimumWidth = GRID_MIN_COLUMN_COUNT;\n  }\n\n  return result;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}