{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/** setTimeout that returns a promise */\nexport default function promiseTimeout(\n/** A function to be executed after the timer expires. */\nfunc,\n/** The time, in milliseconds (thousandths of a second), the timer should wait before the specified function or code is executed. If this parameter is omitted, a value of 0 is used, meaning execute \"immediately\", or more accurately, as soon as possible.  */\ndelay) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(func());\n    }, delay);\n  });\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAmBA;AACA,eAAc,SAAUA,cAAV;AACZ;AACAC,IAFY;AAGZ;AACAC,KAJY,EAIE;EAEd,OAAO,IAAIC,OAAJ,CAAe,QAAO,KAAG;IAC9BC,UAAU,CAAC,MAAK;MACdC,OAAO,CAACJ,IAAI,EAAL,CAAP;IACD,CAFS,EAEPC,KAFO,CAAV;EAGD,CAJM,CAAP;AAKD","names":["promiseTimeout","func","delay","Promise","setTimeout","resolve"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/utils/promiseTimeout.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/** setTimeout that returns a promise */\nexport default function promiseTimeout<T>(\n  /** A function to be executed after the timer expires. */\n  func: (...args: unknown[]) => T,\n  /** The time, in milliseconds (thousandths of a second), the timer should wait before the specified function or code is executed. If this parameter is omitted, a value of 0 is used, meaning execute \"immediately\", or more accurately, as soon as possible.  */\n  delay?: number,\n) {\n  return new Promise<T>(resolve => {\n    setTimeout(() => {\n      resolve(func());\n    }, delay);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}