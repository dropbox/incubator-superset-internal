{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect } from 'react';\nimport { t } from '@superset-ui/core';\nimport { Radio } from 'src/components/Radio';\nimport { CALENDAR_RANGE_OPTIONS, CALENDAR_RANGE_SET } from 'src/explore/components/controls/DateFilterControl/utils';\nimport { PreviousCalendarWeek } from '../types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport function CalendarFrame(_ref) {let { onChange, value } = _ref;\n  useEffect(() => {\n    if (!CALENDAR_RANGE_SET.has(value)) {\n      onChange(PreviousCalendarWeek);\n    }\n  }, [onChange, value]);\n  if (!CALENDAR_RANGE_SET.has(value)) {\n    return null;\n  }\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"div\", { className: \"section-title\" },\n  t('Configure Time Range: Previous...')),\n\n  ___EmotionJSX(Radio.Group, { value: value, onChange: (e) => onChange(e.target.value) },\n  CALENDAR_RANGE_OPTIONS.map((_ref2) => {let { value, label } = _ref2;return ___EmotionJSX(Radio, { key: value, value: value, className: \"vertical-radio\" },\n    label);})));\n\n\n\n}__signature__(CalendarFrame, \"useEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CalendarFrame, \"CalendarFrame\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/DateFilterControl/components/CalendarFrame.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,CAAT,QAAkB,mBAAlB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SACEC,sBADF,EAEEC,kBAFF,QAGO,yDAHP;AAIA,SAEEC,oBAFF,QAIO,UAJP,C;AAMA,OAAM,SAAUC,aAAV,OAAgE,KAAxC,EAAEC,QAAF,EAAYC,KAAZ,EAAwC;EACpER,SAAS,CAAC,MAAK;IACb,IAAI,CAACI,kBAAkB,CAACK,GAAnB,CAAuBD,KAAvB,CAAL,EAAyD;MACvDD,QAAQ,CAACF,oBAAD,CAAR;IACD;EACF,CAJQ,EAIN,CAACE,QAAD,EAAWC,KAAX,CAJM,CAAT;EAMA,IAAI,CAACJ,kBAAkB,CAACK,GAAnB,CAAuBD,KAAvB,CAAL,EAAyD;IACvD,OAAO,IAAP;EACD;EAED,OACE;EACE,uBAAK,SAAS,EAAC,eAAf;EACGP,CAAC,CAAC,mCAAD,CADJ,CADF;;EAIE,cAAC,KAAD,CAAO,KAAP,IACE,KAAK,EAAEO,KADT,EAEE,QAAQ,EAAE,CAACE,CAAD,KAAYH,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASH,KAAV,CAFhC;EAIGL,sBAAsB,CAACS,GAAvB,CAA2B,gBAAC,EAAEJ,KAAF,EAASK,KAAT,EAAD,gBAC1B,cAAC,KAAD,IAAO,GAAG,EAAEL,KAAZ,EAAmB,KAAK,EAAEA,KAA1B,EAAiC,SAAS,EAAC,gBAA3C;IACGK,KADH,CAD0B,EAA3B,CAJH,CAJF,CADF;;;;AAiBD,C,cA5BeP,a,kMAAAA,a","names":["React","useEffect","t","Radio","CALENDAR_RANGE_OPTIONS","CALENDAR_RANGE_SET","PreviousCalendarWeek","CalendarFrame","onChange","value","has","e","target","map","label"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/DateFilterControl/components/CalendarFrame.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect } from 'react';\nimport { t } from '@superset-ui/core';\nimport { Radio } from 'src/components/Radio';\nimport {\n  CALENDAR_RANGE_OPTIONS,\n  CALENDAR_RANGE_SET,\n} from 'src/explore/components/controls/DateFilterControl/utils';\nimport {\n  CalendarRangeType,\n  PreviousCalendarWeek,\n  FrameComponentProps,\n} from '../types';\n\nexport function CalendarFrame({ onChange, value }: FrameComponentProps) {\n  useEffect(() => {\n    if (!CALENDAR_RANGE_SET.has(value as CalendarRangeType)) {\n      onChange(PreviousCalendarWeek);\n    }\n  }, [onChange, value]);\n\n  if (!CALENDAR_RANGE_SET.has(value as CalendarRangeType)) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"section-title\">\n        {t('Configure Time Range: Previous...')}\n      </div>\n      <Radio.Group\n        value={value}\n        onChange={(e: any) => onChange(e.target.value)}\n      >\n        {CALENDAR_RANGE_OPTIONS.map(({ value, label }) => (\n          <Radio key={value} value={value} className=\"vertical-radio\">\n            {label}\n          </Radio>\n        ))}\n      </Radio.Group>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}