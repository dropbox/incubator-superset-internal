{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { getChartMetadataRegistry, t } from '@superset-ui/core';\nimport { Row, RowLabel, RowValue } from './Styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const TypeRow = (_ref) => {let { filter } = _ref;\n  const metadata = useMemo(() => getChartMetadataRegistry().get(filter.filterType), [filter.filterType]);\n  return ___EmotionJSX(Row, null,\n  ___EmotionJSX(RowLabel, null, t('Filter type')),\n  ___EmotionJSX(RowValue, null, metadata == null ? void 0 : metadata.name));\n\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,wBAAT,EAAmCC,CAAnC,QAA4C,mBAA5C;AACA,SAASC,GAAT,EAAcC,QAAd,EAAwBC,QAAxB,QAAwC,UAAxC,C;AAGA,OAAO,MAAMC,OAAO,GAAG,UAAmC,KAAlC,EAAEC,MAAF,EAAkC;EACxD,MAAMC,QAAQ,GAAGR,OAAO,CACtB,MAAMC,wBAAwB,GAAGQ,GAA3B,CAA+BF,MAAM,CAACG,UAAtC,CADgB,EAEtB,CAACH,MAAM,CAACG,UAAR,CAFsB,CAAxB;EAIA,OACE,cAAC,GAAD;EACE,cAAC,QAAD,QAAWR,CAAC,CAAC,aAAD,CAAZ,CADF;EAEE,cAAC,QAAD,QAAWM,QAAX,oBAAWA,QAAQ,CAAEG,IAArB,CAFF,CADF;;AAMD,CAXM","names":["React","useMemo","getChartMetadataRegistry","t","Row","RowLabel","RowValue","TypeRow","filter","metadata","get","filterType","name"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/TypeRow.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { getChartMetadataRegistry, t } from '@superset-ui/core';\nimport { Row, RowLabel, RowValue } from './Styles';\nimport { FilterCardRowProps } from './types';\n\nexport const TypeRow = ({ filter }: FilterCardRowProps) => {\n  const metadata = useMemo(\n    () => getChartMetadataRegistry().get(filter.filterType),\n    [filter.filterType],\n  );\n  return (\n    <Row>\n      <RowLabel>{t('Filter type')}</RowLabel>\n      <RowValue>{metadata?.name}</RowValue>\n    </Row>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}