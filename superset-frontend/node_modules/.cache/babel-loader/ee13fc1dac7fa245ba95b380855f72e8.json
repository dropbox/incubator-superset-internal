{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isDefined, SupersetClient } from '@superset-ui/core';\nimport rison from 'rison';\n\nimport { RESERVED_CHART_URL_PARAMS, RESERVED_DASHBOARD_URL_PARAMS, URL_PARAMS } from '../constants';\nimport { getActiveFilters } from '../dashboard/util/activeDashboardFilters';\nimport serializeActiveFilterValues from '../dashboard/util/serializeActiveFilterValues';\nexport function getUrlParam(_ref) {let { name, type } = _ref;\n  const urlParam = new URLSearchParams(window.location.search).get(name);\n  switch (type) {\n    case 'number':\n      if (!urlParam) {\n        return null;\n      }\n      if (urlParam.toLowerCase() === 'true') {\n        return 1;\n      }\n      if (urlParam.toLowerCase() === 'false') {\n        return 0;\n      }\n      if (!Number.isNaN(Number(urlParam))) {\n        return Number(urlParam);\n      }\n      return null;\n    case 'object':\n      if (!urlParam) {\n        return null;\n      }\n      return JSON.parse(urlParam);\n    case 'boolean':\n      if (!urlParam) {\n        return null;\n      }\n      return urlParam.toLowerCase() !== 'false' && urlParam !== '0';\n    case 'rison':\n      if (!urlParam) {\n        return null;\n      }\n      try {\n        return rison.decode(urlParam);\n      }\n      catch {\n        return urlParam;\n      }\n    default:\n      return urlParam;}\n\n}\nfunction getUrlParams(excludedParams) {\n  const urlParams = new URLSearchParams();\n  const currentParams = new URLSearchParams(window.location.search);\n  currentParams.forEach((value, key) => {\n    if (!_includesInstanceProperty(excludedParams).call(excludedParams, key))\n    urlParams.append(key, value);\n  });\n  return urlParams;\n}\nfunction getUrlParamEntries(urlParams) {\n  const urlEntries = [];\n  urlParams.forEach((value, key) => urlEntries.push([key, value]));\n  return urlEntries;\n}\nfunction getChartUrlParams(excludedUrlParams) {\n  const excludedParams = excludedUrlParams || RESERVED_CHART_URL_PARAMS;\n  const urlParams = getUrlParams(excludedParams);\n  const filterBoxFilters = getActiveFilters();\n  if (!_isEmpty(filterBoxFilters) &&\n  !_includesInstanceProperty(excludedParams).call(excludedParams, URL_PARAMS.preselectFilters.name))\n  urlParams.append(URL_PARAMS.preselectFilters.name, JSON.stringify(serializeActiveFilterValues(getActiveFilters())));\n  return getUrlParamEntries(urlParams);\n}\nfunction getDashboardUrlParams() {\n  const urlParams = getUrlParams(RESERVED_DASHBOARD_URL_PARAMS);\n  const filterBoxFilters = getActiveFilters();\n  if (!_isEmpty(filterBoxFilters))\n  urlParams.append(URL_PARAMS.preselectFilters.name, JSON.stringify(serializeActiveFilterValues(getActiveFilters())));\n  return getUrlParamEntries(urlParams);\n}\nfunction getPermalink(endpoint, jsonPayload) {\n  return SupersetClient.post({\n    endpoint,\n    jsonPayload }).\n  then((result) => result.json.url);\n}\nexport function getChartPermalink(formData, excludedUrlParams) {\n  return getPermalink('/api/v1/explore/permalink', {\n    formData,\n    urlParams: getChartUrlParams(excludedUrlParams) });\n\n}\nexport function getDashboardPermalink(_ref2)\n{let { dashboardId, dataMask, activeTabs, anchor // the anchor part of the link which corresponds to the tab/chart id\n  } = _ref2; // only encode filter box state if non-empty\n  return getPermalink(`/api/v1/dashboard/${dashboardId}/permalink`, {\n    urlParams: getDashboardUrlParams(),\n    dataMask,\n    activeTabs,\n    anchor });\n\n}\nconst externalUrlRegex = /^([^:/?#]+:)?(?:(\\/\\/)?([^/?#]*))?([^?#]+)?(\\?[^#]*)?(#.*)?/;\n// group 1 matches protocol\n// group 2 matches '//'\n// group 3 matches hostname\nexport function isUrlExternal(url) {\n  const match = url.match(externalUrlRegex) || [];\n  return typeof match[1] === 'string' && match[1].length > 0 ||\n  match[2] === '//' ||\n  typeof match[3] === 'string' && match[3].length > 0;\n}\nexport function parseUrl(url) {\n  const match = url.match(externalUrlRegex) || [];\n  // if url is external but start with protocol or '//',\n  // it can't be used correctly with <a> element\n  // in such case, add '//' prefix\n  if (isUrlExternal(url) && !isDefined(match[1]) && !url.startsWith('//')) {\n    return `//${url}`;\n  }\n  return url;\n}","map":{"version":3,"mappings":"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","names":["isDefined","SupersetClient","rison","RESERVED_CHART_URL_PARAMS","RESERVED_DASHBOARD_URL_PARAMS","URL_PARAMS","getActiveFilters","serializeActiveFilterValues","getUrlParam","name","type","urlParam","URLSearchParams","window","location","search","get","toLowerCase","Number","isNaN","JSON","parse","decode","getUrlParams","excludedParams","urlParams","currentParams","forEach","value","key","append","getUrlParamEntries","urlEntries","push","getChartUrlParams","excludedUrlParams","filterBoxFilters","preselectFilters","stringify","getDashboardUrlParams","getPermalink","endpoint","jsonPayload","post","then","result","json","url","getChartPermalink","formData","getDashboardPermalink","dashboardId","dataMask","activeTabs","anchor","externalUrlRegex","isUrlExternal","match","length","parseUrl","startsWith"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/utils/urlUtils.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  isDefined,\n  JsonObject,\n  QueryFormData,\n  SupersetClient,\n} from '@superset-ui/core';\nimport rison from 'rison';\nimport { isEmpty } from 'lodash';\nimport {\n  RESERVED_CHART_URL_PARAMS,\n  RESERVED_DASHBOARD_URL_PARAMS,\n  URL_PARAMS,\n} from '../constants';\nimport { getActiveFilters } from '../dashboard/util/activeDashboardFilters';\nimport serializeActiveFilterValues from '../dashboard/util/serializeActiveFilterValues';\n\nexport type UrlParamType = 'string' | 'number' | 'boolean' | 'object' | 'rison';\nexport type UrlParam = typeof URL_PARAMS[keyof typeof URL_PARAMS];\nexport function getUrlParam(\n  param: UrlParam & { type: 'string' },\n): string | null;\nexport function getUrlParam(\n  param: UrlParam & { type: 'number' },\n): number | null;\nexport function getUrlParam(\n  param: UrlParam & { type: 'boolean' },\n): boolean | null;\nexport function getUrlParam(\n  param: UrlParam & { type: 'object' },\n): object | null;\nexport function getUrlParam(param: UrlParam & { type: 'rison' }): object | null;\nexport function getUrlParam(\n  param: UrlParam & { type: 'rison | string' },\n): string | object | null;\nexport function getUrlParam({ name, type }: UrlParam): unknown {\n  const urlParam = new URLSearchParams(window.location.search).get(name);\n  switch (type) {\n    case 'number':\n      if (!urlParam) {\n        return null;\n      }\n      if (urlParam.toLowerCase() === 'true') {\n        return 1;\n      }\n      if (urlParam.toLowerCase() === 'false') {\n        return 0;\n      }\n      if (!Number.isNaN(Number(urlParam))) {\n        return Number(urlParam);\n      }\n      return null;\n    case 'object':\n      if (!urlParam) {\n        return null;\n      }\n      return JSON.parse(urlParam);\n    case 'boolean':\n      if (!urlParam) {\n        return null;\n      }\n      return urlParam.toLowerCase() !== 'false' && urlParam !== '0';\n    case 'rison':\n      if (!urlParam) {\n        return null;\n      }\n      try {\n        return rison.decode(urlParam);\n      } catch {\n        return urlParam;\n      }\n    default:\n      return urlParam;\n  }\n}\n\nfunction getUrlParams(excludedParams: string[]): URLSearchParams {\n  const urlParams = new URLSearchParams();\n  const currentParams = new URLSearchParams(window.location.search);\n  currentParams.forEach((value, key) => {\n    if (!excludedParams.includes(key)) urlParams.append(key, value);\n  });\n  return urlParams;\n}\n\nexport type UrlParamEntries = [string, string][];\n\nfunction getUrlParamEntries(urlParams: URLSearchParams): UrlParamEntries {\n  const urlEntries: [string, string][] = [];\n  urlParams.forEach((value, key) => urlEntries.push([key, value]));\n  return urlEntries;\n}\n\nfunction getChartUrlParams(excludedUrlParams?: string[]): UrlParamEntries {\n  const excludedParams = excludedUrlParams || RESERVED_CHART_URL_PARAMS;\n  const urlParams = getUrlParams(excludedParams);\n  const filterBoxFilters = getActiveFilters();\n  if (\n    !isEmpty(filterBoxFilters) &&\n    !excludedParams.includes(URL_PARAMS.preselectFilters.name)\n  )\n    urlParams.append(\n      URL_PARAMS.preselectFilters.name,\n      JSON.stringify(serializeActiveFilterValues(getActiveFilters())),\n    );\n  return getUrlParamEntries(urlParams);\n}\n\nfunction getDashboardUrlParams(): UrlParamEntries {\n  const urlParams = getUrlParams(RESERVED_DASHBOARD_URL_PARAMS);\n  const filterBoxFilters = getActiveFilters();\n  if (!isEmpty(filterBoxFilters))\n    urlParams.append(\n      URL_PARAMS.preselectFilters.name,\n      JSON.stringify(serializeActiveFilterValues(getActiveFilters())),\n    );\n  return getUrlParamEntries(urlParams);\n}\n\nfunction getPermalink(endpoint: string, jsonPayload: JsonObject) {\n  return SupersetClient.post({\n    endpoint,\n    jsonPayload,\n  }).then(result => result.json.url as string);\n}\n\nexport function getChartPermalink(\n  formData: Pick<QueryFormData, 'datasource'>,\n  excludedUrlParams?: string[],\n) {\n  return getPermalink('/api/v1/explore/permalink', {\n    formData,\n    urlParams: getChartUrlParams(excludedUrlParams),\n  });\n}\n\nexport function getDashboardPermalink({\n  dashboardId,\n  dataMask,\n  activeTabs,\n  anchor, // the anchor part of the link which corresponds to the tab/chart id\n}: {\n  dashboardId: string | number;\n  /**\n   * Current applied data masks (for native filters).\n   */\n  dataMask: JsonObject;\n  /**\n   * Current active tabs in the dashboard.\n   */\n  activeTabs: string[];\n  /**\n   * The \"anchor\" component for the permalink. It will be scrolled into view\n   * and highlighted upon page load.\n   */\n  anchor?: string;\n}) {\n  // only encode filter box state if non-empty\n  return getPermalink(`/api/v1/dashboard/${dashboardId}/permalink`, {\n    urlParams: getDashboardUrlParams(),\n    dataMask,\n    activeTabs,\n    anchor,\n  });\n}\n\nconst externalUrlRegex =\n  /^([^:/?#]+:)?(?:(\\/\\/)?([^/?#]*))?([^?#]+)?(\\?[^#]*)?(#.*)?/;\n\n// group 1 matches protocol\n// group 2 matches '//'\n// group 3 matches hostname\nexport function isUrlExternal(url: string) {\n  const match = url.match(externalUrlRegex) || [];\n  return (\n    (typeof match[1] === 'string' && match[1].length > 0) ||\n    match[2] === '//' ||\n    (typeof match[3] === 'string' && match[3].length > 0)\n  );\n}\n\nexport function parseUrl(url: string) {\n  const match = url.match(externalUrlRegex) || [];\n  // if url is external but start with protocol or '//',\n  // it can't be used correctly with <a> element\n  // in such case, add '//' prefix\n  if (isUrlExternal(url) && !isDefined(match[1]) && !url.startsWith('//')) {\n    return `//${url}`;\n  }\n  return url;\n}\n"]},"metadata":{},"sourceType":"module"}