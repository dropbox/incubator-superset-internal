{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react/sort-prop-types */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Histogram, BarSeries, XAxis, YAxis } from '@data-ui/histogram';\nimport { chartTheme } from '@data-ui/theme';\nimport { LegendOrdinal } from '@vx/legend';\nimport { scaleOrdinal } from '@vx/scale';\nimport { CategoricalColorNamespace, styled, t } from '@superset-ui/core';\nimport WithLegend from './WithLegend';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.arrayOf(\n  PropTypes.shape({\n    key: PropTypes.string,\n    values: PropTypes.arrayOf(PropTypes.number) })).\n\n  isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  colorScheme: PropTypes.string,\n  normalized: PropTypes.bool,\n  cumulative: PropTypes.bool,\n  binCount: PropTypes.number,\n  opacity: PropTypes.number,\n  xAxisLabel: PropTypes.string,\n  yAxisLabel: PropTypes.string,\n  showLegend: PropTypes.bool };\n\nconst defaultProps = {\n  binCount: 15,\n  className: '',\n  colorScheme: '',\n  normalized: false,\n  cumulative: false,\n  opacity: 1,\n  xAxisLabel: '',\n  yAxisLabel: '' };\n\n\nclass CustomHistogram extends React.PureComponent {\n  render() {\n    const {\n      className,\n      data,\n      width,\n      height,\n      binCount,\n      colorScheme,\n      normalized,\n      cumulative,\n      opacity,\n      xAxisLabel,\n      yAxisLabel,\n      showLegend,\n      sliceId } =\n    this.props;\n\n    const colorFn = CategoricalColorNamespace.getScale(colorScheme);\n    const keys = data.map((d) => d.key);\n    const colorScale = scaleOrdinal({\n      domain: keys,\n      range: keys.map((x) => colorFn(x, sliceId)) });\n\n\n    return (\n      ___EmotionJSX(WithLegend, {\n        className: `superset-legacy-chart-histogram ${className}`,\n        width: width,\n        height: height,\n        position: \"top\",\n        renderLegend: (_ref) => {let { direction, style } = _ref;return (\n            showLegend &&\n            ___EmotionJSX(LegendOrdinal, {\n              style: style,\n              scale: colorScale,\n              direction: direction,\n              shape: \"rect\",\n              labelMargin: \"0 15px 0 0\" }));},\n\n\n\n        renderChart: (parent) =>\n        ___EmotionJSX(Histogram, {\n          width: parent.width,\n          height: parent.height,\n          ariaLabel: \"Histogram\",\n          normalized: normalized,\n          cumulative: cumulative,\n          binCount: binCount,\n          binType: \"numeric\",\n          margin: { top: 20, right: 20 },\n          renderTooltip: (_ref2) => {let { datum, color } = _ref2;return (\n              ___EmotionJSX(\"div\", null,\n              ___EmotionJSX(\"strong\", { style: { color } },\n              datum.bin0, \" \", t('to'), \" \", datum.bin1),\n\n              ___EmotionJSX(\"div\", null,\n              ___EmotionJSX(\"strong\", null, t('count'), \" \"),\n              datum.count),\n\n              ___EmotionJSX(\"div\", null,\n              ___EmotionJSX(\"strong\", null, t('cumulative'), \" \"),\n              datum.cumulative),\n\n              ___EmotionJSX(\"div\", null,\n              ___EmotionJSX(\"strong\", null, t('percentile (exclusive)'), \" \"),\n              `${(\n              (datum.cumulativeDensity - datum.density) *\n              100).\n              toPrecision(4)}th`)));},\n\n\n\n          valueAccessor: (datum) => datum,\n          theme: chartTheme },\n\n        data.map((series) =>\n        ___EmotionJSX(BarSeries, {\n          key: series.key,\n          animated: true,\n          rawData: series.values,\n          fill: colorScale(series.key),\n          fillOpacity: opacity })),\n\n\n        ___EmotionJSX(XAxis, { label: xAxisLabel }),\n        ___EmotionJSX(YAxis, { label: yAxisLabel })) }));\n\n\n\n\n  }}\n\n\nCustomHistogram.propTypes = propTypes;\nCustomHistogram.defaultProps = defaultProps;\n\nexport default styled(CustomHistogram)`\n  .superset-legacy-chart-histogram {\n    overflow: hidden;\n  }\n`;","map":{"version":3,"names":["PropTypes","React","Histogram","BarSeries","XAxis","YAxis","chartTheme","LegendOrdinal","scaleOrdinal","CategoricalColorNamespace","styled","t","WithLegend","propTypes","className","string","data","arrayOf","shape","key","values","number","isRequired","width","height","colorScheme","normalized","bool","cumulative","binCount","opacity","xAxisLabel","yAxisLabel","showLegend","defaultProps","CustomHistogram","PureComponent","render","sliceId","props","colorFn","getScale","keys","map","d","colorScale","domain","range","x","direction","style","parent","top","right","datum","color","bin0","bin1","count","cumulativeDensity","density","toPrecision","series"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/legacy-plugin-chart-histogram/src/Histogram.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react/sort-prop-types */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Histogram, BarSeries, XAxis, YAxis } from '@data-ui/histogram';\nimport { chartTheme } from '@data-ui/theme';\nimport { LegendOrdinal } from '@vx/legend';\nimport { scaleOrdinal } from '@vx/scale';\nimport { CategoricalColorNamespace, styled, t } from '@superset-ui/core';\nimport WithLegend from './WithLegend';\n\nconst propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string,\n      values: PropTypes.arrayOf(PropTypes.number),\n    }),\n  ).isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  colorScheme: PropTypes.string,\n  normalized: PropTypes.bool,\n  cumulative: PropTypes.bool,\n  binCount: PropTypes.number,\n  opacity: PropTypes.number,\n  xAxisLabel: PropTypes.string,\n  yAxisLabel: PropTypes.string,\n  showLegend: PropTypes.bool,\n};\nconst defaultProps = {\n  binCount: 15,\n  className: '',\n  colorScheme: '',\n  normalized: false,\n  cumulative: false,\n  opacity: 1,\n  xAxisLabel: '',\n  yAxisLabel: '',\n};\n\nclass CustomHistogram extends React.PureComponent {\n  render() {\n    const {\n      className,\n      data,\n      width,\n      height,\n      binCount,\n      colorScheme,\n      normalized,\n      cumulative,\n      opacity,\n      xAxisLabel,\n      yAxisLabel,\n      showLegend,\n      sliceId,\n    } = this.props;\n\n    const colorFn = CategoricalColorNamespace.getScale(colorScheme);\n    const keys = data.map(d => d.key);\n    const colorScale = scaleOrdinal({\n      domain: keys,\n      range: keys.map(x => colorFn(x, sliceId)),\n    });\n\n    return (\n      <WithLegend\n        className={`superset-legacy-chart-histogram ${className}`}\n        width={width}\n        height={height}\n        position=\"top\"\n        renderLegend={({ direction, style }) =>\n          showLegend && (\n            <LegendOrdinal\n              style={style}\n              scale={colorScale}\n              direction={direction}\n              shape=\"rect\"\n              labelMargin=\"0 15px 0 0\"\n            />\n          )\n        }\n        renderChart={parent => (\n          <Histogram\n            width={parent.width}\n            height={parent.height}\n            ariaLabel=\"Histogram\"\n            normalized={normalized}\n            cumulative={cumulative}\n            binCount={binCount}\n            binType=\"numeric\"\n            margin={{ top: 20, right: 20 }}\n            renderTooltip={({ datum, color }) => (\n              <div>\n                <strong style={{ color }}>\n                  {datum.bin0} {t('to')} {datum.bin1}\n                </strong>\n                <div>\n                  <strong>{t('count')} </strong>\n                  {datum.count}\n                </div>\n                <div>\n                  <strong>{t('cumulative')} </strong>\n                  {datum.cumulative}\n                </div>\n                <div>\n                  <strong>{t('percentile (exclusive)')} </strong>\n                  {`${(\n                    (datum.cumulativeDensity - datum.density) *\n                    100\n                  ).toPrecision(4)}th`}\n                </div>\n              </div>\n            )}\n            valueAccessor={datum => datum}\n            theme={chartTheme}\n          >\n            {data.map(series => (\n              <BarSeries\n                key={series.key}\n                animated\n                rawData={series.values}\n                fill={colorScale(series.key)}\n                fillOpacity={opacity}\n              />\n            ))}\n            <XAxis label={xAxisLabel} />\n            <YAxis label={yAxisLabel} />\n          </Histogram>\n        )}\n      />\n    );\n  }\n}\n\nCustomHistogram.propTypes = propTypes;\nCustomHistogram.defaultProps = defaultProps;\n\nexport default styled(CustomHistogram)`\n  .superset-legacy-chart-histogram {\n    overflow: hidden;\n  }\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}