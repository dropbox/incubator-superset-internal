{"ast":null,"code":"import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, t } from '@superset-ui/core';\nimport { connect } from 'react-redux';\nimport { LineEditableTabs } from 'src/components/Tabs';\nimport { LOG_ACTIONS_SELECT_DASHBOARD_TAB } from 'src/logger/LogUtils';\nimport { AntdModal } from 'src/components';\nimport DragDroppable from '../dnd/DragDroppable';\nimport DragHandle from '../dnd/DragHandle';\nimport DashboardComponent from '../../containers/DashboardComponent';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport HoverMenu from '../menu/HoverMenu';\nimport findTabIndexByComponentId from '../../util/findTabIndexByComponentId';\nimport getDirectPathToTabIndex from '../../util/getDirectPathToTabIndex';\nimport getLeafComponentIdFromPath from '../../util/getLeafComponentIdFromPath';\nimport { componentShape } from '../../util/propShapes';\nimport { NEW_TAB_ID, DASHBOARD_ROOT_ID } from '../../util/constants';\nimport { RENDER_TAB, RENDER_TAB_CONTENT } from './Tab';\nimport { TABS_TYPE, TAB_TYPE } from '../../util/componentTypes';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  renderTabContent: PropTypes.bool, // whether to render tabs + content or just tabs\n  editMode: PropTypes.bool.isRequired,\n  renderHoverMenu: PropTypes.bool,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  activeTabs: PropTypes.arrayOf(PropTypes.string),\n\n  // actions (from DashboardComponent.jsx)\n  logEvent: PropTypes.func.isRequired,\n  setActiveTabs: PropTypes.func,\n\n  // grid related\n  availableColumnCount: PropTypes.number,\n  columnWidth: PropTypes.number,\n  onResizeStart: PropTypes.func,\n  onResize: PropTypes.func,\n  onResizeStop: PropTypes.func,\n\n  // dnd\n  createComponent: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  onChangeTab: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired };\n\n\nconst defaultProps = {\n  renderTabContent: true,\n  renderHoverMenu: true,\n  availableColumnCount: 0,\n  columnWidth: 0,\n  activeTabs: [],\n  directPathToChild: [],\n  setActiveTabs() {},\n  onResizeStart() {},\n  onResize() {},\n  onResizeStop() {} };\n\n\nconst StyledTabsContainer = styled.div`\n  width: 100%;\n  background-color: ${(_ref) => {let { theme } = _ref;return theme.colors.grayscale.light5;}};\n\n  .dashboard-component-tabs-content {\n    min-height: ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit * 12;}}px;\n    margin-top: ${(_ref3) => {let { theme } = _ref3;return theme.gridUnit / 4;}}px;\n    position: relative;\n  }\n\n  .ant-tabs {\n    overflow: visible;\n\n    .ant-tabs-nav-wrap {\n      min-height: ${(_ref4) => {let { theme } = _ref4;return theme.gridUnit * 12.5;}}px;\n    }\n\n    .ant-tabs-content-holder {\n      overflow: visible;\n    }\n  }\n\n  div .ant-tabs-tab-btn {\n    text-transform: none;\n  }\n`;\n\nexport class Tabs extends React.PureComponent {\n  constructor(_props) {\n    super(_props);this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    getTabInfo = (props) => {var _props$activeTabs;\n      let tabIndex = Math.max(\n      0,\n      findTabIndexByComponentId({\n        currentComponent: props.component,\n        directPathToChild: props.directPathToChild }));\n\n\n      if (tabIndex === 0 && (_props$activeTabs = props.activeTabs) != null && _props$activeTabs.length) {\n        props.component.children.forEach((tabId, index) => {var _context;\n          if (tabIndex === 0 && _includesInstanceProperty(_context = props.activeTabs).call(_context, tabId)) {\n            tabIndex = index;\n          }\n        });\n      }\n      const { children: tabIds } = props.component;\n      const activeKey = tabIds[tabIndex];\n\n      return {\n        tabIndex,\n        activeKey };\n\n    };this.\n\n    showDeleteConfirmModal = (key) => {\n      const { component, deleteComponent } = this.props;\n      AntdModal.confirm({\n        title: t('Delete dashboard tab?'),\n        content:\n        ___EmotionJSX(\"span\", null,\n        t(\n        'Deleting a tab will remove all content within it. You may still ' +\n        'reverse this action with the'),\n        ' ',\n        ___EmotionJSX(\"b\", null, t('undo')), ' ',\n        t('button (cmd + z) until you save your changes.')),\n\n\n        onOk: () => {\n          deleteComponent(key, component.id);\n          const tabIndex = component.children.indexOf(key);\n          this.handleDeleteTab(tabIndex);\n        },\n        okType: 'danger',\n        okText: t('DELETE'),\n        cancelText: t('CANCEL'),\n        icon: null });\n\n    };this.\n\n    handleEdit = (event, action) => {\n      const { component, createComponent } = this.props;\n      if (action === 'add') {\n        // Prevent the tab container to be selected\n        event == null ? void 0 : event.stopPropagation == null ? void 0 : event.stopPropagation();\n\n        createComponent({\n          destination: {\n            id: component.id,\n            type: component.type,\n            index: component.children.length },\n\n          dragging: {\n            id: NEW_TAB_ID,\n            type: TAB_TYPE } });\n\n\n      } else if (action === 'remove') {\n        this.showDeleteConfirmModal(event);\n      }\n    };const { tabIndex: _tabIndex, activeKey: _activeKey } = this.getTabInfo(_props);this.state = { tabIndex: _tabIndex, activeKey: _activeKey };this.handleClickTab = this.handleClickTab.bind(this);this.handleDeleteComponent = this.handleDeleteComponent.bind(this);this.handleDeleteTab = this.handleDeleteTab.bind(this);this.handleDropOnTab = this.handleDropOnTab.bind(this);this.handleDrop = this.handleDrop.bind(this);}componentDidMount() {this.props.setActiveTabs(this.state.activeKey);}componentDidUpdate(prevProps, prevState) {if (prevState.activeKey !== this.state.activeKey) {this.props.setActiveTabs(this.state.activeKey, prevState.activeKey);}}UNSAFE_componentWillReceiveProps(nextProps) {const maxIndex = Math.max(0, nextProps.component.children.length - 1);const currTabsIds = this.props.component.children;const nextTabsIds = nextProps.component.children;if (this.state.tabIndex > maxIndex) {this.setState(() => ({ tabIndex: maxIndex }));} // reset tab index if dashboard was changed\n    if (nextProps.dashboardId !== this.props.dashboardId) {const { tabIndex, activeKey } = this.getTabInfo(nextProps);this.setState(() => ({ tabIndex, activeKey }));}if (nextProps.isComponentVisible) {const nextFocusComponent = getLeafComponentIdFromPath(nextProps.directPathToChild);const currentFocusComponent = getLeafComponentIdFromPath(this.props.directPathToChild); // If the currently selected component is different than the new one,\n      // or the tab length/order changed, calculate the new tab index and\n      // replace it if it's different than the current one\n      if (nextFocusComponent !== currentFocusComponent || nextFocusComponent === currentFocusComponent && currTabsIds !== nextTabsIds) {const nextTabIndex = findTabIndexByComponentId({ currentComponent: nextProps.component, directPathToChild: nextProps.directPathToChild }); // make sure nextFocusComponent is under this tabs component\n        if (nextTabIndex > -1 && nextTabIndex !== this.state.tabIndex) {this.setState(() => ({ tabIndex: nextTabIndex, activeKey: nextTabsIds[nextTabIndex] }));}}}}handleClickTab(tabIndex) {const { component } = this.props;const { children: tabIds } = component;\n    if (tabIndex !== this.state.tabIndex) {\n      const pathToTabIndex = getDirectPathToTabIndex(component, tabIndex);\n      const targetTabId = pathToTabIndex[pathToTabIndex.length - 1];\n      this.props.logEvent(LOG_ACTIONS_SELECT_DASHBOARD_TAB, {\n        target_id: targetTabId,\n        index: tabIndex });\n\n\n      this.props.onChangeTab({ pathToTabIndex });\n    }\n    this.setState(() => ({ activeKey: tabIds[tabIndex] }));\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleDeleteTab(tabIndex) {\n    // If we're removing the currently selected tab,\n    // select the previous one (if any)\n    if (this.state.tabIndex === tabIndex) {\n      this.handleClickTab(Math.max(0, tabIndex - 1));\n    }\n  }\n\n  handleDropOnTab(dropResult) {\n    const { component } = this.props;\n\n    // Ensure dropped tab is visible\n    const { destination } = dropResult;\n    if (destination) {\n      const dropTabIndex =\n      destination.id === component.id ?\n      destination.index // dropped ON tabs\n      : component.children.indexOf(destination.id); // dropped IN tab\n\n      if (dropTabIndex > -1) {\n        setTimeout(() => {\n          this.handleClickTab(dropTabIndex);\n        }, 30);\n      }\n    }\n  }\n\n  handleDrop(dropResult) {\n    if (dropResult.dragging.type !== TABS_TYPE) {\n      this.props.handleComponentDrop(dropResult);\n    }\n  }\n\n  render() {\n    const {\n      depth,\n      component: tabsComponent,\n      parentComponent,\n      index,\n      availableColumnCount,\n      columnWidth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      renderTabContent,\n      renderHoverMenu,\n      isComponentVisible: isCurrentTabVisible,\n      editMode,\n      nativeFilters } =\n    this.props;\n\n    const { children: tabIds } = tabsComponent;\n    const { tabIndex: selectedTabIndex, activeKey } = this.state;\n\n    let tabsToHighlight;\n    const highlightedFilterId =\n    (nativeFilters == null ? void 0 : nativeFilters.focusedFilterId) || (nativeFilters == null ? void 0 : nativeFilters.hoveredFilterId);\n    if (highlightedFilterId) {var _nativeFilters$filter;\n      tabsToHighlight = (_nativeFilters$filter = nativeFilters.filters[highlightedFilterId]) == null ? void 0 : _nativeFilters$filter.tabsInScope;\n    }\n    return (\n      ___EmotionJSX(DragDroppable, {\n        component: tabsComponent,\n        parentComponent: parentComponent,\n        orientation: \"row\",\n        index: index,\n        depth: depth,\n        onDrop: this.handleDrop,\n        editMode: editMode },\n\n      (_ref5) => {let {\n          dropIndicatorProps: tabsDropIndicatorProps,\n          dragSourceRef: tabsDragSourceRef } = _ref5;return (\n\n          ___EmotionJSX(StyledTabsContainer, {\n            className: \"dashboard-component dashboard-component-tabs\" },\n\n\n          editMode && renderHoverMenu &&\n          ___EmotionJSX(HoverMenu, { innerRef: tabsDragSourceRef, position: \"left\" },\n          ___EmotionJSX(DragHandle, { position: \"left\" }),\n          ___EmotionJSX(DeleteComponentButton, { onDelete: this.handleDeleteComponent })),\n\n\n\n          ___EmotionJSX(LineEditableTabs, {\n            id: tabsComponent.id,\n            activeKey: activeKey,\n            onChange: (key) => {\n              this.handleClickTab(tabIds.indexOf(key));\n            },\n            onEdit: this.handleEdit,\n\n            type: editMode ? 'editable-card' : 'card' },\n\n          tabIds.map((tabId, tabIndex) => {var _tabsToHighlight;return (\n              ___EmotionJSX(LineEditableTabs.TabPane, {\n                key: tabId,\n                tab:\n                ___EmotionJSX(DashboardComponent, {\n                  id: tabId,\n                  parentId: tabsComponent.id,\n                  depth: depth,\n                  index: tabIndex,\n                  renderType: RENDER_TAB,\n                  availableColumnCount: availableColumnCount,\n                  columnWidth: columnWidth,\n                  onDropOnTab: this.handleDropOnTab,\n                  onHoverTab: () => this.handleClickTab(tabIndex),\n                  isFocused: activeKey === tabId,\n                  isHighlighted:\n                  activeKey !== tabId && ((_tabsToHighlight = tabsToHighlight) == null ? void 0 : _includesInstanceProperty(_tabsToHighlight).call(_tabsToHighlight, tabId)) }) },\n\n\n\n\n              renderTabContent &&\n              ___EmotionJSX(DashboardComponent, {\n                id: tabId,\n                parentId: tabsComponent.id,\n                depth: depth // see isValidChild.js for why tabs don't increment child depth\n                , index: tabIndex,\n                renderType: RENDER_TAB_CONTENT,\n                availableColumnCount: availableColumnCount,\n                columnWidth: columnWidth,\n                onResizeStart: onResizeStart,\n                onResize: onResize,\n                onResizeStop: onResizeStop,\n                onDropOnTab: this.handleDropOnTab,\n                isComponentVisible:\n                selectedTabIndex === tabIndex && isCurrentTabVisible })));})),\n\n\n\n\n\n\n\n\n          tabsDropIndicatorProps &&\n          parentComponent.id !== DASHBOARD_ROOT_ID &&\n          ___EmotionJSX(\"div\", tabsDropIndicatorProps)));}));\n\n\n\n\n\n  }}\n\n\nTabs.propTypes = propTypes;\nTabs.defaultProps = defaultProps;\n\nfunction mapStateToProps(state) {\n  return {\n    nativeFilters: state.nativeFilters,\n    activeTabs: state.dashboardState.activeTabs,\n    directPathToChild: state.dashboardState.directPathToChild };\n\n}\nexport default connect(mapStateToProps)(Tabs);","map":{"version":3,"names":["React","PropTypes","styled","t","connect","LineEditableTabs","LOG_ACTIONS_SELECT_DASHBOARD_TAB","AntdModal","DragDroppable","DragHandle","DashboardComponent","DeleteComponentButton","HoverMenu","findTabIndexByComponentId","getDirectPathToTabIndex","getLeafComponentIdFromPath","componentShape","NEW_TAB_ID","DASHBOARD_ROOT_ID","RENDER_TAB","RENDER_TAB_CONTENT","TABS_TYPE","TAB_TYPE","propTypes","id","string","isRequired","parentId","component","parentComponent","index","number","depth","renderTabContent","bool","editMode","renderHoverMenu","directPathToChild","arrayOf","activeTabs","logEvent","func","setActiveTabs","availableColumnCount","columnWidth","onResizeStart","onResize","onResizeStop","createComponent","handleComponentDrop","onChangeTab","deleteComponent","updateComponents","defaultProps","StyledTabsContainer","div","theme","colors","grayscale","light5","gridUnit","Tabs","PureComponent","constructor","props","getTabInfo","tabIndex","Math","max","currentComponent","length","children","forEach","tabId","tabIds","activeKey","showDeleteConfirmModal","key","confirm","title","content","onOk","indexOf","handleDeleteTab","okType","okText","cancelText","icon","handleEdit","event","action","stopPropagation","destination","type","dragging","state","handleClickTab","bind","handleDeleteComponent","handleDropOnTab","handleDrop","componentDidMount","componentDidUpdate","prevProps","prevState","UNSAFE_componentWillReceiveProps","nextProps","maxIndex","currTabsIds","nextTabsIds","setState","dashboardId","isComponentVisible","nextFocusComponent","currentFocusComponent","nextTabIndex","pathToTabIndex","targetTabId","target_id","dropResult","dropTabIndex","setTimeout","render","tabsComponent","isCurrentTabVisible","nativeFilters","selectedTabIndex","tabsToHighlight","highlightedFilterId","focusedFilterId","hoveredFilterId","filters","tabsInScope","dropIndicatorProps","tabsDropIndicatorProps","dragSourceRef","tabsDragSourceRef","map","mapStateToProps","dashboardState"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, t } from '@superset-ui/core';\nimport { connect } from 'react-redux';\nimport { LineEditableTabs } from 'src/components/Tabs';\nimport { LOG_ACTIONS_SELECT_DASHBOARD_TAB } from 'src/logger/LogUtils';\nimport { AntdModal } from 'src/components';\nimport DragDroppable from '../dnd/DragDroppable';\nimport DragHandle from '../dnd/DragHandle';\nimport DashboardComponent from '../../containers/DashboardComponent';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport HoverMenu from '../menu/HoverMenu';\nimport findTabIndexByComponentId from '../../util/findTabIndexByComponentId';\nimport getDirectPathToTabIndex from '../../util/getDirectPathToTabIndex';\nimport getLeafComponentIdFromPath from '../../util/getLeafComponentIdFromPath';\nimport { componentShape } from '../../util/propShapes';\nimport { NEW_TAB_ID, DASHBOARD_ROOT_ID } from '../../util/constants';\nimport { RENDER_TAB, RENDER_TAB_CONTENT } from './Tab';\nimport { TABS_TYPE, TAB_TYPE } from '../../util/componentTypes';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  renderTabContent: PropTypes.bool, // whether to render tabs + content or just tabs\n  editMode: PropTypes.bool.isRequired,\n  renderHoverMenu: PropTypes.bool,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  activeTabs: PropTypes.arrayOf(PropTypes.string),\n\n  // actions (from DashboardComponent.jsx)\n  logEvent: PropTypes.func.isRequired,\n  setActiveTabs: PropTypes.func,\n\n  // grid related\n  availableColumnCount: PropTypes.number,\n  columnWidth: PropTypes.number,\n  onResizeStart: PropTypes.func,\n  onResize: PropTypes.func,\n  onResizeStop: PropTypes.func,\n\n  // dnd\n  createComponent: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  onChangeTab: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  renderTabContent: true,\n  renderHoverMenu: true,\n  availableColumnCount: 0,\n  columnWidth: 0,\n  activeTabs: [],\n  directPathToChild: [],\n  setActiveTabs() {},\n  onResizeStart() {},\n  onResize() {},\n  onResizeStop() {},\n};\n\nconst StyledTabsContainer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n\n  .dashboard-component-tabs-content {\n    min-height: ${({ theme }) => theme.gridUnit * 12}px;\n    margin-top: ${({ theme }) => theme.gridUnit / 4}px;\n    position: relative;\n  }\n\n  .ant-tabs {\n    overflow: visible;\n\n    .ant-tabs-nav-wrap {\n      min-height: ${({ theme }) => theme.gridUnit * 12.5}px;\n    }\n\n    .ant-tabs-content-holder {\n      overflow: visible;\n    }\n  }\n\n  div .ant-tabs-tab-btn {\n    text-transform: none;\n  }\n`;\n\nexport class Tabs extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const { tabIndex, activeKey } = this.getTabInfo(props);\n\n    this.state = {\n      tabIndex,\n      activeKey,\n    };\n    this.handleClickTab = this.handleClickTab.bind(this);\n    this.handleDeleteComponent = this.handleDeleteComponent.bind(this);\n    this.handleDeleteTab = this.handleDeleteTab.bind(this);\n    this.handleDropOnTab = this.handleDropOnTab.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.setActiveTabs(this.state.activeKey);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.activeKey !== this.state.activeKey) {\n      this.props.setActiveTabs(this.state.activeKey, prevState.activeKey);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const maxIndex = Math.max(0, nextProps.component.children.length - 1);\n    const currTabsIds = this.props.component.children;\n    const nextTabsIds = nextProps.component.children;\n\n    if (this.state.tabIndex > maxIndex) {\n      this.setState(() => ({ tabIndex: maxIndex }));\n    }\n\n    // reset tab index if dashboard was changed\n    if (nextProps.dashboardId !== this.props.dashboardId) {\n      const { tabIndex, activeKey } = this.getTabInfo(nextProps);\n      this.setState(() => ({\n        tabIndex,\n        activeKey,\n      }));\n    }\n\n    if (nextProps.isComponentVisible) {\n      const nextFocusComponent = getLeafComponentIdFromPath(\n        nextProps.directPathToChild,\n      );\n      const currentFocusComponent = getLeafComponentIdFromPath(\n        this.props.directPathToChild,\n      );\n\n      // If the currently selected component is different than the new one,\n      // or the tab length/order changed, calculate the new tab index and\n      // replace it if it's different than the current one\n      if (\n        nextFocusComponent !== currentFocusComponent ||\n        (nextFocusComponent === currentFocusComponent &&\n          currTabsIds !== nextTabsIds)\n      ) {\n        const nextTabIndex = findTabIndexByComponentId({\n          currentComponent: nextProps.component,\n          directPathToChild: nextProps.directPathToChild,\n        });\n\n        // make sure nextFocusComponent is under this tabs component\n        if (nextTabIndex > -1 && nextTabIndex !== this.state.tabIndex) {\n          this.setState(() => ({\n            tabIndex: nextTabIndex,\n            activeKey: nextTabsIds[nextTabIndex],\n          }));\n        }\n      }\n    }\n  }\n\n  getTabInfo = props => {\n    let tabIndex = Math.max(\n      0,\n      findTabIndexByComponentId({\n        currentComponent: props.component,\n        directPathToChild: props.directPathToChild,\n      }),\n    );\n    if (tabIndex === 0 && props.activeTabs?.length) {\n      props.component.children.forEach((tabId, index) => {\n        if (tabIndex === 0 && props.activeTabs.includes(tabId)) {\n          tabIndex = index;\n        }\n      });\n    }\n    const { children: tabIds } = props.component;\n    const activeKey = tabIds[tabIndex];\n\n    return {\n      tabIndex,\n      activeKey,\n    };\n  };\n\n  showDeleteConfirmModal = key => {\n    const { component, deleteComponent } = this.props;\n    AntdModal.confirm({\n      title: t('Delete dashboard tab?'),\n      content: (\n        <span>\n          {t(\n            'Deleting a tab will remove all content within it. You may still ' +\n              'reverse this action with the',\n          )}{' '}\n          <b>{t('undo')}</b>{' '}\n          {t('button (cmd + z) until you save your changes.')}\n        </span>\n      ),\n      onOk: () => {\n        deleteComponent(key, component.id);\n        const tabIndex = component.children.indexOf(key);\n        this.handleDeleteTab(tabIndex);\n      },\n      okType: 'danger',\n      okText: t('DELETE'),\n      cancelText: t('CANCEL'),\n      icon: null,\n    });\n  };\n\n  handleEdit = (event, action) => {\n    const { component, createComponent } = this.props;\n    if (action === 'add') {\n      // Prevent the tab container to be selected\n      event?.stopPropagation?.();\n\n      createComponent({\n        destination: {\n          id: component.id,\n          type: component.type,\n          index: component.children.length,\n        },\n        dragging: {\n          id: NEW_TAB_ID,\n          type: TAB_TYPE,\n        },\n      });\n    } else if (action === 'remove') {\n      this.showDeleteConfirmModal(event);\n    }\n  };\n\n  handleClickTab(tabIndex) {\n    const { component } = this.props;\n    const { children: tabIds } = component;\n\n    if (tabIndex !== this.state.tabIndex) {\n      const pathToTabIndex = getDirectPathToTabIndex(component, tabIndex);\n      const targetTabId = pathToTabIndex[pathToTabIndex.length - 1];\n      this.props.logEvent(LOG_ACTIONS_SELECT_DASHBOARD_TAB, {\n        target_id: targetTabId,\n        index: tabIndex,\n      });\n\n      this.props.onChangeTab({ pathToTabIndex });\n    }\n    this.setState(() => ({ activeKey: tabIds[tabIndex] }));\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleDeleteTab(tabIndex) {\n    // If we're removing the currently selected tab,\n    // select the previous one (if any)\n    if (this.state.tabIndex === tabIndex) {\n      this.handleClickTab(Math.max(0, tabIndex - 1));\n    }\n  }\n\n  handleDropOnTab(dropResult) {\n    const { component } = this.props;\n\n    // Ensure dropped tab is visible\n    const { destination } = dropResult;\n    if (destination) {\n      const dropTabIndex =\n        destination.id === component.id\n          ? destination.index // dropped ON tabs\n          : component.children.indexOf(destination.id); // dropped IN tab\n\n      if (dropTabIndex > -1) {\n        setTimeout(() => {\n          this.handleClickTab(dropTabIndex);\n        }, 30);\n      }\n    }\n  }\n\n  handleDrop(dropResult) {\n    if (dropResult.dragging.type !== TABS_TYPE) {\n      this.props.handleComponentDrop(dropResult);\n    }\n  }\n\n  render() {\n    const {\n      depth,\n      component: tabsComponent,\n      parentComponent,\n      index,\n      availableColumnCount,\n      columnWidth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      renderTabContent,\n      renderHoverMenu,\n      isComponentVisible: isCurrentTabVisible,\n      editMode,\n      nativeFilters,\n    } = this.props;\n\n    const { children: tabIds } = tabsComponent;\n    const { tabIndex: selectedTabIndex, activeKey } = this.state;\n\n    let tabsToHighlight;\n    const highlightedFilterId =\n      nativeFilters?.focusedFilterId || nativeFilters?.hoveredFilterId;\n    if (highlightedFilterId) {\n      tabsToHighlight = nativeFilters.filters[highlightedFilterId]?.tabsInScope;\n    }\n    return (\n      <DragDroppable\n        component={tabsComponent}\n        parentComponent={parentComponent}\n        orientation=\"row\"\n        index={index}\n        depth={depth}\n        onDrop={this.handleDrop}\n        editMode={editMode}\n      >\n        {({\n          dropIndicatorProps: tabsDropIndicatorProps,\n          dragSourceRef: tabsDragSourceRef,\n        }) => (\n          <StyledTabsContainer\n            className=\"dashboard-component dashboard-component-tabs\"\n            data-test=\"dashboard-component-tabs\"\n          >\n            {editMode && renderHoverMenu && (\n              <HoverMenu innerRef={tabsDragSourceRef} position=\"left\">\n                <DragHandle position=\"left\" />\n                <DeleteComponentButton onDelete={this.handleDeleteComponent} />\n              </HoverMenu>\n            )}\n\n            <LineEditableTabs\n              id={tabsComponent.id}\n              activeKey={activeKey}\n              onChange={key => {\n                this.handleClickTab(tabIds.indexOf(key));\n              }}\n              onEdit={this.handleEdit}\n              data-test=\"nav-list\"\n              type={editMode ? 'editable-card' : 'card'}\n            >\n              {tabIds.map((tabId, tabIndex) => (\n                <LineEditableTabs.TabPane\n                  key={tabId}\n                  tab={\n                    <DashboardComponent\n                      id={tabId}\n                      parentId={tabsComponent.id}\n                      depth={depth}\n                      index={tabIndex}\n                      renderType={RENDER_TAB}\n                      availableColumnCount={availableColumnCount}\n                      columnWidth={columnWidth}\n                      onDropOnTab={this.handleDropOnTab}\n                      onHoverTab={() => this.handleClickTab(tabIndex)}\n                      isFocused={activeKey === tabId}\n                      isHighlighted={\n                        activeKey !== tabId && tabsToHighlight?.includes(tabId)\n                      }\n                    />\n                  }\n                >\n                  {renderTabContent && (\n                    <DashboardComponent\n                      id={tabId}\n                      parentId={tabsComponent.id}\n                      depth={depth} // see isValidChild.js for why tabs don't increment child depth\n                      index={tabIndex}\n                      renderType={RENDER_TAB_CONTENT}\n                      availableColumnCount={availableColumnCount}\n                      columnWidth={columnWidth}\n                      onResizeStart={onResizeStart}\n                      onResize={onResize}\n                      onResizeStop={onResizeStop}\n                      onDropOnTab={this.handleDropOnTab}\n                      isComponentVisible={\n                        selectedTabIndex === tabIndex && isCurrentTabVisible\n                      }\n                    />\n                  )}\n                </LineEditableTabs.TabPane>\n              ))}\n            </LineEditableTabs>\n\n            {/* don't indicate that a drop on root is allowed when tabs already exist */}\n            {tabsDropIndicatorProps &&\n              parentComponent.id !== DASHBOARD_ROOT_ID && (\n                <div {...tabsDropIndicatorProps} />\n              )}\n          </StyledTabsContainer>\n        )}\n      </DragDroppable>\n    );\n  }\n}\n\nTabs.propTypes = propTypes;\nTabs.defaultProps = defaultProps;\n\nfunction mapStateToProps(state) {\n  return {\n    nativeFilters: state.nativeFilters,\n    activeTabs: state.dashboardState.activeTabs,\n    directPathToChild: state.dashboardState.directPathToChild,\n  };\n}\nexport default connect(mapStateToProps)(Tabs);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}