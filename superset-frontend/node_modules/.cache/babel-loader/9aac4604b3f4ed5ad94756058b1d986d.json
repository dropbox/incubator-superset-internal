{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ColumnOption } from '@superset-ui/chart-controls';\nimport { ensureIsArray, FeatureFlag, isFeatureEnabled, t } from '@superset-ui/core';\nimport React from 'react';\nimport { getQueryMode, isRawMode } from './shared';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst allColumns = {\n  type: 'SelectControl',\n  label: t('Columns'),\n  description: t('Columns to display'),\n  multi: true,\n  freeForm: true,\n  allowAll: true,\n  commaChoosesOption: false,\n  default: [],\n  optionRenderer: (c) => ___EmotionJSX(ColumnOption, { showType: true, column: c }),\n  valueRenderer: (c) => ___EmotionJSX(ColumnOption, { column: c }),\n  valueKey: 'column_name',\n  mapStateToProps: (_ref, controlState) => {let { datasource, controls } = _ref;return {\n      options: (datasource == null ? void 0 : datasource.columns) || [],\n      queryMode: getQueryMode(controls),\n      externalValidationErrors: isRawMode({ controls }) && ensureIsArray(controlState == null ? void 0 : controlState.value).length === 0 ?\n      [t('must have a value')] :\n      [] };},\n\n  visibility: isRawMode,\n  resetOnHide: false };\n\nconst dndAllColumns = {\n  type: 'DndColumnSelect',\n  label: t('Columns'),\n  description: t('Columns to display'),\n  default: [],\n  mapStateToProps(_ref2, controlState) {let { datasource, controls } = _ref2;\n    const newState = {};\n    if (datasource) {var _datasource$columns$;\n      if (datasource != null && (_datasource$columns$ = datasource.columns[0]) != null && _datasource$columns$.hasOwnProperty('filterable')) {var _datasource$columns;\n        newState.options = datasource == null ? void 0 : (_datasource$columns = datasource.columns) == null ? void 0 : _datasource$columns.filter((c) => c.filterable);\n      } else\n\n      newState.options = datasource.columns;\n    }\n    newState.queryMode = getQueryMode(controls);\n    newState.externalValidationErrors =\n    isRawMode({ controls }) && ensureIsArray(controlState == null ? void 0 : controlState.value).length === 0 ?\n    [t('must have a value')] :\n    [];\n    return newState;\n  },\n  visibility: isRawMode,\n  resetOnHide: false };\n\nexport const allColumnsControlSetItem = {\n  name: 'all_columns',\n  config: isFeatureEnabled(FeatureFlag.ENABLE_EXPLORE_DRAG_AND_DROP) ?\n  dndAllColumns :\n  allColumns };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(allColumns, \"allColumns\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-handlebars/src/plugin/controls/columns.tsx\");reactHotLoader.register(dndAllColumns, \"dndAllColumns\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-handlebars/src/plugin/controls/columns.tsx\");reactHotLoader.register(allColumnsControlSetItem, \"allColumnsControlSetItem\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-handlebars/src/plugin/controls/columns.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["ColumnOption","ensureIsArray","FeatureFlag","isFeatureEnabled","t","React","getQueryMode","isRawMode","allColumns","type","label","description","multi","freeForm","allowAll","commaChoosesOption","default","optionRenderer","c","valueRenderer","valueKey","mapStateToProps","controlState","datasource","controls","options","columns","queryMode","externalValidationErrors","value","length","visibility","resetOnHide","dndAllColumns","newState","hasOwnProperty","filter","filterable","allColumnsControlSetItem","name","config","ENABLE_EXPLORE_DRAG_AND_DROP"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-handlebars/src/plugin/controls/columns.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ColumnOption,\n  ControlSetItem,\n  ExtraControlProps,\n  sharedControls,\n  Dataset,\n  ColumnMeta,\n} from '@superset-ui/chart-controls';\nimport {\n  ensureIsArray,\n  FeatureFlag,\n  isFeatureEnabled,\n  t,\n} from '@superset-ui/core';\nimport React from 'react';\nimport { getQueryMode, isRawMode } from './shared';\n\nconst allColumns: typeof sharedControls.groupby = {\n  type: 'SelectControl',\n  label: t('Columns'),\n  description: t('Columns to display'),\n  multi: true,\n  freeForm: true,\n  allowAll: true,\n  commaChoosesOption: false,\n  default: [],\n  optionRenderer: c => <ColumnOption showType column={c} />,\n  valueRenderer: c => <ColumnOption column={c} />,\n  valueKey: 'column_name',\n  mapStateToProps: ({ datasource, controls }, controlState) => ({\n    options: datasource?.columns || [],\n    queryMode: getQueryMode(controls),\n    externalValidationErrors:\n      isRawMode({ controls }) && ensureIsArray(controlState?.value).length === 0\n        ? [t('must have a value')]\n        : [],\n  }),\n  visibility: isRawMode,\n  resetOnHide: false,\n};\n\nconst dndAllColumns: typeof sharedControls.groupby = {\n  type: 'DndColumnSelect',\n  label: t('Columns'),\n  description: t('Columns to display'),\n  default: [],\n  mapStateToProps({ datasource, controls }, controlState) {\n    const newState: ExtraControlProps = {};\n    if (datasource) {\n      if (datasource?.columns[0]?.hasOwnProperty('filterable')) {\n        newState.options = (datasource as Dataset)?.columns?.filter(\n          (c: ColumnMeta) => c.filterable,\n        );\n      } else newState.options = datasource.columns;\n    }\n    newState.queryMode = getQueryMode(controls);\n    newState.externalValidationErrors =\n      isRawMode({ controls }) && ensureIsArray(controlState?.value).length === 0\n        ? [t('must have a value')]\n        : [];\n    return newState;\n  },\n  visibility: isRawMode,\n  resetOnHide: false,\n};\n\nexport const allColumnsControlSetItem: ControlSetItem = {\n  name: 'all_columns',\n  config: isFeatureEnabled(FeatureFlag.ENABLE_EXPLORE_DRAG_AND_DROP)\n    ? dndAllColumns\n    : allColumns,\n};\n"]},"metadata":{},"sourceType":"module"}