{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useTheme, css } from '@superset-ui/core';\nimport { Tooltip as BaseTooltip } from 'antd';\nimport { Global } from '@emotion/react';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const Tooltip = (_ref) => {let { overlayStyle, color, ...props } = _ref;\n  const theme = useTheme();\n  const defaultColor = `${theme.colors.grayscale.dark2}e6`;\n  return ___EmotionJSX(React.Fragment, null,\n\n  ___EmotionJSX(Global, { styles: css`\n          .ant-tooltip-open {\n            display: inline-block;\n            &::after {\n              content: '';\n              display: block;\n            }\n          }\n        ` }),\n  ___EmotionJSX(BaseTooltip, _extends({ overlayStyle: {\n      fontSize: theme.typography.sizes.s,\n      lineHeight: '1.6',\n      maxWidth: theme.gridUnit * 62,\n      minWidth: theme.gridUnit * 30,\n      ...overlayStyle }\n\n    // make the tooltip display closer to the label\n    , align: { offset: [0, 1] }, color: defaultColor || color, trigger: \"hover\", placement: \"bottom\"\n    // don't allow hovering over the tooltip\n    , mouseLeaveDelay: 0 }, props)));\n\n};__signature__(Tooltip, \"useTheme{theme}\", () => [useTheme]);const _default =\nTooltip;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Tooltip, \"Tooltip\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/components/Tooltip.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/components/Tooltip.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"sWAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,mBAA9B;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,MAAvC;AAEA,SAASC,MAAT,QAAuB,gBAAvB,C;AAIA,OAAO,MAAMF,OAAO,GAAG,UAAoD,KAAnD,EAAEG,YAAF,EAAgBC,KAAhB,EAAuB,GAAGC,KAA1B,EAAmD;EACzE,MAAMC,KAAK,GAAGR,QAAQ,EAAtB;EACA,MAAMS,YAAY,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBC,KAAK,IAApD;EACA,OACE;;EAEE,cAAC,MAAD,IACE,MAAM,EAAEX,GAAG;;;;;;;;SADb,GAFF;EAaE,cAAC,WAAD,aACE,YAAY,EAAE;MACZY,QAAQ,EAAEL,KAAK,CAACM,UAAN,CAAiBC,KAAjB,CAAuBC,CADrB;MAEZC,UAAU,EAAE,KAFA;MAGZC,QAAQ,EAAEV,KAAK,CAACW,QAAN,GAAiB,EAHf;MAIZC,QAAQ,EAAEZ,KAAK,CAACW,QAAN,GAAiB,EAJf;MAKZ,GAAGd,YALS;;IAOd;IARF,EASE,KAAK,EAAE,EAAEgB,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAV,EATT,EAUE,KAAK,EAAEZ,YAAY,IAAIH,KAVzB,EAWE,OAAO,EAAC,OAXV,EAYE,SAAS,EAAC;IACV;IAbF,EAcE,eAAe,EAAE,CAdnB,IAeMC,KAfN,EAbF,CADF;;AAiCD,CApCM,C,cAAML,O,4BACGF,Q;AAqCDE,O,CAAf,wB,iLAtCaA,O","names":["React","useTheme","css","Tooltip","BaseTooltip","Global","overlayStyle","color","props","theme","defaultColor","colors","grayscale","dark2","fontSize","typography","sizes","s","lineHeight","maxWidth","gridUnit","minWidth","offset"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/components/Tooltip.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { useTheme, css } from '@superset-ui/core';\nimport { Tooltip as BaseTooltip } from 'antd';\nimport type { TooltipProps } from 'antd/lib/tooltip';\nimport { Global } from '@emotion/react';\n\nexport type { TooltipProps } from 'antd/lib/tooltip';\n\nexport const Tooltip = ({ overlayStyle, color, ...props }: TooltipProps) => {\n  const theme = useTheme();\n  const defaultColor = `${theme.colors.grayscale.dark2}e6`;\n  return (\n    <>\n      {/* Safari hack to hide browser default tooltips */}\n      <Global\n        styles={css`\n          .ant-tooltip-open {\n            display: inline-block;\n            &::after {\n              content: '';\n              display: block;\n            }\n          }\n        `}\n      />\n      <BaseTooltip\n        overlayStyle={{\n          fontSize: theme.typography.sizes.s,\n          lineHeight: '1.6',\n          maxWidth: theme.gridUnit * 62,\n          minWidth: theme.gridUnit * 30,\n          ...overlayStyle,\n        }}\n        // make the tooltip display closer to the label\n        align={{ offset: [0, 1] }}\n        color={defaultColor || color}\n        trigger=\"hover\"\n        placement=\"bottom\"\n        // don't allow hovering over the tooltip\n        mouseLeaveDelay={0}\n        {...props}\n      />\n    </>\n  );\n};\n\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"module"}