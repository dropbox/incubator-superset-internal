{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { AnnotationType, Behavior, ChartMetadata, ChartPlugin, hasGenericChartAxes, t } from '@superset-ui/core';\nimport { EchartsTimeseriesSeriesType } from '../../types';\nimport buildQuery from '../../buildQuery';\nimport controlPanel from './controlPanel';\nimport transformProps from '../../transformProps';\nimport thumbnail from './images/thumbnail.png';\nimport example1 from './images/Bar1.png';\nimport example2 from './images/Bar2.png';\nimport example3 from './images/Bar3.png';\nconst barTransformProps = (chartProps) => transformProps({\n  ...chartProps,\n  formData: {\n    ...chartProps.formData,\n    seriesType: EchartsTimeseriesSeriesType.Bar } });\n\n\nexport default class EchartsTimeseriesBarChartPlugin extends ChartPlugin {\n  constructor() {\n    super({\n      buildQuery,\n      controlPanel,\n      loadChart: () => import('../../EchartsTimeseries'),\n      metadata: new ChartMetadata({\n        behaviors: [\n        Behavior.INTERACTIVE_CHART,\n        Behavior.DRILL_TO_DETAIL,\n        Behavior.DRILL_BY],\n\n        category: t('Evolution'),\n        credits: ['https://echarts.apache.org'],\n        description: hasGenericChartAxes ?\n        t('Bar Charts are used to show metrics as a series of bars.') :\n        t('Time-series Bar Charts are used to show the changes in a metric over time as a series of bars.'),\n        exampleGallery: [\n        { url: example1 },\n        { url: example2 },\n        { url: example3 }],\n\n        supportedAnnotationTypes: [\n        AnnotationType.Event,\n        AnnotationType.Formula,\n        AnnotationType.Interval,\n        AnnotationType.Timeseries],\n\n        name: hasGenericChartAxes ? t('Bar Chart') : t('Time-series Bar Chart'),\n        tags: [\n        t('ECharts'),\n        t('Predictive'),\n        t('Advanced-Analytics'),\n        t('Aesthetic'),\n        t('Time'),\n        t('Transformable'),\n        t('Stacked'),\n        t('Vertical'),\n        t('Bar'),\n        t('Popular')],\n\n        thumbnail }),\n\n      transformProps: barTransformProps });\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(barTransformProps, \"barTransformProps\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Timeseries/Regular/Bar/index.ts\");reactHotLoader.register(EchartsTimeseriesBarChartPlugin, \"EchartsTimeseriesBarChartPlugin\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Timeseries/Regular/Bar/index.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,cADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,mBALF,EAMEC,CANF,QAOO,mBAPP;AAQA,SAGEC,2BAHF,QAIO,aAJP;AAKA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,MAAMC,iBAAiB,GAAG,CAACC,UAAD,KACxBN,cAAc,CAAC;EACb,GAAGM,UADU;EAEbC,QAAQ,EAAE;IACR,GAAGD,UAAU,CAACC,QADN;IAERC,UAAU,EAAEX,2BAA2B,CAACY,GAFhC,EAFG,EAAD,CADhB;;;AASA,eAAc,MAAOC,+BAAP,SAA+ChB,WAA/C,CAGb;EACCiB;IACE,MAAM;MACJb,UADI;MAEJC,YAFI;MAGJa,SAAS,EAAE,MAAM,OAAO,yBAAP,CAHb;MAIJC,QAAQ,EAAE,IAAIpB,aAAJ,CAAkB;QAC1BqB,SAAS,EAAE;QACTtB,QAAQ,CAACuB,iBADA;QAETvB,QAAQ,CAACwB,eAFA;QAGTxB,QAAQ,CAACyB,QAHA,CADe;;QAM1BC,QAAQ,EAAEtB,CAAC,CAAC,WAAD,CANe;QAO1BuB,OAAO,EAAE,CAAC,4BAAD,CAPiB;QAQ1BC,WAAW,EAAEzB,mBAAmB;QAC5BC,CAAC,CAAC,0DAAD,CAD2B;QAE5BA,CAAC,CACC,gGADD,CAVqB;QAa1ByB,cAAc,EAAE;QACd,EAAEC,GAAG,EAAEpB,QAAP,EADc;QAEd,EAAEoB,GAAG,EAAEnB,QAAP,EAFc;QAGd,EAAEmB,GAAG,EAAElB,QAAP,EAHc,CAbU;;QAkB1BmB,wBAAwB,EAAE;QACxBhC,cAAc,CAACiC,KADS;QAExBjC,cAAc,CAACkC,OAFS;QAGxBlC,cAAc,CAACmC,QAHS;QAIxBnC,cAAc,CAACoC,UAJS,CAlBA;;QAwB1BC,IAAI,EAAEjC,mBAAmB,GAAGC,CAAC,CAAC,WAAD,CAAJ,GAAoBA,CAAC,CAAC,uBAAD,CAxBpB;QAyB1BiC,IAAI,EAAE;QACJjC,CAAC,CAAC,SAAD,CADG;QAEJA,CAAC,CAAC,YAAD,CAFG;QAGJA,CAAC,CAAC,oBAAD,CAHG;QAIJA,CAAC,CAAC,WAAD,CAJG;QAKJA,CAAC,CAAC,MAAD,CALG;QAMJA,CAAC,CAAC,eAAD,CANG;QAOJA,CAAC,CAAC,SAAD,CAPG;QAQJA,CAAC,CAAC,UAAD,CARG;QASJA,CAAC,CAAC,KAAD,CATG;QAUJA,CAAC,CAAC,SAAD,CAVG,CAzBoB;;QAqC1BK,SArC0B,EAAlB,CAJN;;MA2CJD,cAAc,EAAEK,iBA3CZ,EAAN;;EA6CD,CA/CF;EAAA;IAAA,yB,iLAZKA,iB,oLASeK,+B","names":["AnnotationType","Behavior","ChartMetadata","ChartPlugin","hasGenericChartAxes","t","EchartsTimeseriesSeriesType","buildQuery","controlPanel","transformProps","thumbnail","example1","example2","example3","barTransformProps","chartProps","formData","seriesType","Bar","EchartsTimeseriesBarChartPlugin","constructor","loadChart","metadata","behaviors","INTERACTIVE_CHART","DRILL_TO_DETAIL","DRILL_BY","category","credits","description","exampleGallery","url","supportedAnnotationTypes","Event","Formula","Interval","Timeseries","name","tags"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Timeseries/Regular/Bar/index.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  AnnotationType,\n  Behavior,\n  ChartMetadata,\n  ChartPlugin,\n  hasGenericChartAxes,\n  t,\n} from '@superset-ui/core';\nimport {\n  EchartsTimeseriesChartProps,\n  EchartsTimeseriesFormData,\n  EchartsTimeseriesSeriesType,\n} from '../../types';\nimport buildQuery from '../../buildQuery';\nimport controlPanel from './controlPanel';\nimport transformProps from '../../transformProps';\nimport thumbnail from './images/thumbnail.png';\nimport example1 from './images/Bar1.png';\nimport example2 from './images/Bar2.png';\nimport example3 from './images/Bar3.png';\n\nconst barTransformProps = (chartProps: EchartsTimeseriesChartProps) =>\n  transformProps({\n    ...chartProps,\n    formData: {\n      ...chartProps.formData,\n      seriesType: EchartsTimeseriesSeriesType.Bar,\n    },\n  });\n\nexport default class EchartsTimeseriesBarChartPlugin extends ChartPlugin<\n  EchartsTimeseriesFormData,\n  EchartsTimeseriesChartProps\n> {\n  constructor() {\n    super({\n      buildQuery,\n      controlPanel,\n      loadChart: () => import('../../EchartsTimeseries'),\n      metadata: new ChartMetadata({\n        behaviors: [\n          Behavior.INTERACTIVE_CHART,\n          Behavior.DRILL_TO_DETAIL,\n          Behavior.DRILL_BY,\n        ],\n        category: t('Evolution'),\n        credits: ['https://echarts.apache.org'],\n        description: hasGenericChartAxes\n          ? t('Bar Charts are used to show metrics as a series of bars.')\n          : t(\n              'Time-series Bar Charts are used to show the changes in a metric over time as a series of bars.',\n            ),\n        exampleGallery: [\n          { url: example1 },\n          { url: example2 },\n          { url: example3 },\n        ],\n        supportedAnnotationTypes: [\n          AnnotationType.Event,\n          AnnotationType.Formula,\n          AnnotationType.Interval,\n          AnnotationType.Timeseries,\n        ],\n        name: hasGenericChartAxes ? t('Bar Chart') : t('Time-series Bar Chart'),\n        tags: [\n          t('ECharts'),\n          t('Predictive'),\n          t('Advanced-Analytics'),\n          t('Aesthetic'),\n          t('Time'),\n          t('Transformable'),\n          t('Stacked'),\n          t('Vertical'),\n          t('Bar'),\n          t('Popular'),\n        ],\n        thumbnail,\n      }),\n      transformProps: barTransformProps,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}