{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { forwardRef, useRef, useEffect } from 'react';\nimport { styled } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst CheckboxLabel = styled.label`\n  cursor: pointer;\n  display: inline-block;\n  margin-bottom: 0;\n`;\nconst CheckboxHalf = styled(Icons.CheckboxHalf)`\n  color: ${(_ref) => {let { theme } = _ref;return theme.colors.primary.base;}};\n  cursor: pointer;\n`;\nconst CheckboxOff = styled(Icons.CheckboxOff)`\n  color: ${(_ref2) => {let { theme } = _ref2;return theme.colors.grayscale.base;}};\n  cursor: pointer;\n`;\nconst CheckboxOn = styled(Icons.CheckboxOn)`\n  color: ${(_ref3) => {let { theme } = _ref3;return theme.colors.primary.base;}};\n  cursor: pointer;\n`;\nconst HiddenInput = styled.input`\n  &[type='checkbox'] {\n    cursor: pointer;\n    opacity: 0;\n    position: absolute;\n    left: 3px;\n    margin: 0;\n    top: 4px;\n  }\n`;\nconst InputContainer = styled.div`\n  cursor: pointer;\n  display: inline-block;\n  position: relative;\n`;\nconst IndeterminateCheckbox = /*#__PURE__*/forwardRef((_ref4, ref) => {let { indeterminate, id, checked, onChange, title = '', labelText = '' } = _ref4;\n  const defaultRef = useRef();\n  const resolvedRef = ref || defaultRef;\n  useEffect(() => {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(InputContainer, null,\n  indeterminate && ___EmotionJSX(CheckboxHalf, null),\n  !indeterminate && checked && ___EmotionJSX(CheckboxOn, null),\n  !indeterminate && !checked && ___EmotionJSX(CheckboxOff, null),\n  ___EmotionJSX(HiddenInput, { name: id, id: id, type: \"checkbox\", ref: resolvedRef, checked: checked, onChange: onChange })),\n\n  ___EmotionJSX(CheckboxLabel, { title: title, htmlFor: id },\n  labelText));\n\n\n});\nexport default IndeterminateCheckbox;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,sBAAlB,C;AAWA,MAAMC,aAAa,GAAGF,MAAM,CAACG,KAAK;;;;CAAlC;AAMA,MAAMC,YAAY,GAAGJ,MAAM,CAACC,KAAK,CAACG,YAAP,CAAoB;WACpC,eAAC,EAAEC,KAAF,EAAD,eAAeA,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqBC,IAApC,EAAwC;;CADnD;AAKA,MAAMC,WAAW,GAAGT,MAAM,CAACC,KAAK,CAACQ,WAAP,CAAmB;WAClC,gBAAC,EAAEJ,KAAF,EAAD,gBAAeA,KAAK,CAACC,MAAN,CAAaI,SAAb,CAAuBF,IAAtC,EAA0C;;CADrD;AAKA,MAAMG,UAAU,GAAGX,MAAM,CAACC,KAAK,CAACU,UAAP,CAAkB;WAChC,gBAAC,EAAEN,KAAF,EAAD,gBAAeA,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqBC,IAApC,EAAwC;;CADnD;AAKA,MAAMI,WAAW,GAAGZ,MAAM,CAACa,KAAK;;;;;;;;;CAAhC;AAWA,MAAMC,cAAc,GAAGd,MAAM,CAACe,GAAG;;;;CAAjC;AAMA,MAAMC,qBAAqB,gBAAGnB,UAAU,CACtC,QASEoB,GATF,KAUI,KATF,EACEC,aADF,EAEEC,EAFF,EAGEC,OAHF,EAIEC,QAJF,EAKEC,KAAK,GAAG,EALV,EAMEC,SAAS,GAAG,EANd,EASE;EACF,MAAMC,UAAU,GAAG1B,MAAM,EAAzB;EACA,MAAM2B,WAAW,GAAGR,GAAG,IAAIO,UAA3B;EAEAzB,SAAS,CAAC,MAAK;IACb0B,WAAW,CAACC,OAAZ,CAAoBR,aAApB,GAAoCA,aAApC;EACD,CAFQ,EAEN,CAACO,WAAD,EAAcP,aAAd,CAFM,CAAT;EAIA,OACE;EACE,cAAC,cAAD;EACGA,aAAa,IAAI,cAAC,YAAD,OADpB;EAEG,CAACA,aAAD,IAAkBE,OAAlB,IAA6B,cAAC,UAAD,OAFhC;EAGG,CAACF,aAAD,IAAkB,CAACE,OAAnB,IAA8B,cAAC,WAAD,OAHjC;EAIE,cAAC,WAAD,IACE,IAAI,EAAED,EADR,EAEE,EAAE,EAAEA,EAFN,EAGE,IAAI,EAAC,UAHP,EAIE,GAAG,EAAEM,WAJP,EAKE,OAAO,EAAEL,OALX,EAME,QAAQ,EAAEC,QANZ,GAJF,CADF;;EAcE,cAAC,aAAD,IAAe,KAAK,EAAEC,KAAtB,EAA6B,OAAO,EAAEH,EAAtC;EACGI,SADH,CAdF,CADF;;;AAoBD,CAvCqC,CAAxC;AA0CA,eAAeP,qBAAf","names":["React","forwardRef","useRef","useEffect","styled","Icons","CheckboxLabel","label","CheckboxHalf","theme","colors","primary","base","CheckboxOff","grayscale","CheckboxOn","HiddenInput","input","InputContainer","div","IndeterminateCheckbox","ref","indeterminate","id","checked","onChange","title","labelText","defaultRef","resolvedRef","current"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/components/IndeterminateCheckbox/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { forwardRef, useRef, useEffect } from 'react';\nimport { styled } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\n\nexport interface IndeterminateCheckboxProps {\n  indeterminate: boolean;\n  id: string;\n  checked: boolean;\n  onChange: React.EventHandler<React.SyntheticEvent<HTMLInputElement>>;\n  title?: string;\n  labelText?: string;\n}\n\nconst CheckboxLabel = styled.label`\n  cursor: pointer;\n  display: inline-block;\n  margin-bottom: 0;\n`;\n\nconst CheckboxHalf = styled(Icons.CheckboxHalf)`\n  color: ${({ theme }) => theme.colors.primary.base};\n  cursor: pointer;\n`;\n\nconst CheckboxOff = styled(Icons.CheckboxOff)`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  cursor: pointer;\n`;\n\nconst CheckboxOn = styled(Icons.CheckboxOn)`\n  color: ${({ theme }) => theme.colors.primary.base};\n  cursor: pointer;\n`;\n\nconst HiddenInput = styled.input`\n  &[type='checkbox'] {\n    cursor: pointer;\n    opacity: 0;\n    position: absolute;\n    left: 3px;\n    margin: 0;\n    top: 4px;\n  }\n`;\n\nconst InputContainer = styled.div`\n  cursor: pointer;\n  display: inline-block;\n  position: relative;\n`;\n\nconst IndeterminateCheckbox = forwardRef(\n  (\n    {\n      indeterminate,\n      id,\n      checked,\n      onChange,\n      title = '',\n      labelText = '',\n    }: IndeterminateCheckboxProps,\n    ref: React.MutableRefObject<any>,\n  ) => {\n    const defaultRef = useRef<HTMLInputElement>();\n    const resolvedRef = ref || defaultRef;\n\n    useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <>\n        <InputContainer>\n          {indeterminate && <CheckboxHalf />}\n          {!indeterminate && checked && <CheckboxOn />}\n          {!indeterminate && !checked && <CheckboxOff />}\n          <HiddenInput\n            name={id}\n            id={id}\n            type=\"checkbox\"\n            ref={resolvedRef}\n            checked={checked}\n            onChange={onChange}\n          />\n        </InputContainer>\n        <CheckboxLabel title={title} htmlFor={id}>\n          {labelText}\n        </CheckboxLabel>\n      </>\n    );\n  },\n);\n\nexport default IndeterminateCheckbox;\n"]},"metadata":{},"sourceType":"module"}