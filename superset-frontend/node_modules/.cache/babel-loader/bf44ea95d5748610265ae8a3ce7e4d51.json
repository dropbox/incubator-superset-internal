{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport Label from 'src/components/Label';\nimport { now, fDuration } from 'src/utils/dates';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst TimerLabel = styled(Label)`\n  text-align: left;\n  font-family: ${(_ref) => {let { theme } = _ref;return theme.typography.families.monospace;}};\n`;\nexport default function Timer(_ref2) {let { endTime, isRunning, startTime, status = 'success' } = _ref2;\n  const [clockStr, setClockStr] = useState('00:00:00.00');\n  const timer = useRef();\n  useEffect(() => {\n    const stopTimer = () => {\n      if (timer.current) {\n        clearInterval(timer.current);\n        timer.current = undefined;\n      }\n    };\n    if (isRunning) {\n      timer.current = setInterval(() => {\n        if (startTime) {\n          const endDttm = endTime || now();\n          if (startTime < endDttm) {\n            setClockStr(fDuration(startTime, endDttm));\n          }\n          if (!isRunning) {\n            stopTimer();\n          }\n        }\n      }, 30);\n    }\n    return stopTimer;\n  }, [endTime, isRunning, startTime]);\n  return ___EmotionJSX(TimerLabel, { type: status, role: \"timer\" },\n  clockStr);\n\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,MAA4B,sBAA5B;AAEA,SAASC,GAAT,EAAcC,SAAd,QAA+B,iBAA/B,C;AASA,MAAMC,UAAU,GAAGJ,MAAM,CAACC,KAAD,CAAO;;iBAEf,eAAC,EAAEI,KAAF,EAAD,eAAeA,KAAK,CAACC,UAAN,CAAiBC,QAAjB,CAA0BC,SAAzC,EAAkD;CAFnE;AAKA,eAAc,SAAUC,KAAV,QAKD,KALiB,EAC5BC,OAD4B,EAE5BC,SAF4B,EAG5BC,SAH4B,EAI5BC,MAAM,GAAG,SAJmB,EAKjB;EACX,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,aAAD,CAAxC;EACA,MAAMiB,KAAK,GAAGlB,MAAM,EAApB;EAEAD,SAAS,CAAC,MAAK;IACb,MAAMoB,SAAS,GAAG,MAAK;MACrB,IAAID,KAAK,CAACE,OAAV,EAAmB;QACjBC,aAAa,CAACH,KAAK,CAACE,OAAP,CAAb;QACAF,KAAK,CAACE,OAAN,GAAgBE,SAAhB;MACD;IACF,CALD;IAOA,IAAIT,SAAJ,EAAe;MACbK,KAAK,CAACE,OAAN,GAAgBG,WAAW,CAAC,MAAK;QAC/B,IAAIT,SAAJ,EAAe;UACb,MAAMU,OAAO,GAAGZ,OAAO,IAAIR,GAAG,EAA9B;UACA,IAAIU,SAAS,GAAGU,OAAhB,EAAyB;YACvBP,WAAW,CAACZ,SAAS,CAACS,SAAD,EAAYU,OAAZ,CAAV,CAAX;UACD;UACD,IAAI,CAACX,SAAL,EAAgB;YACdM,SAAS;UACV;QACF;MACF,CAV0B,EAUxB,EAVwB,CAA3B;IAWD;IACD,OAAOA,SAAP;EACD,CAtBQ,EAsBN,CAACP,OAAD,EAAUC,SAAV,EAAqBC,SAArB,CAtBM,CAAT;EAwBA,OACE,cAAC,UAAD,IAAY,IAAI,EAAEC,MAAlB,EAA0B,IAAI,EAAC,OAA/B;EACGC,QADH,CADF;;AAKD","names":["React","useEffect","useRef","useState","styled","Label","now","fDuration","TimerLabel","theme","typography","families","monospace","Timer","endTime","isRunning","startTime","status","clockStr","setClockStr","timer","stopTimer","current","clearInterval","undefined","setInterval","endDttm"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/components/Timer/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport Label, { Type } from 'src/components/Label';\n\nimport { now, fDuration } from 'src/utils/dates';\n\nexport interface TimerProps {\n  endTime?: number;\n  isRunning: boolean;\n  startTime?: number;\n  status?: Type;\n}\n\nconst TimerLabel = styled(Label)`\n  text-align: left;\n  font-family: ${({ theme }) => theme.typography.families.monospace};\n`;\n\nexport default function Timer({\n  endTime,\n  isRunning,\n  startTime,\n  status = 'success',\n}: TimerProps) {\n  const [clockStr, setClockStr] = useState('00:00:00.00');\n  const timer = useRef<ReturnType<typeof setInterval>>();\n\n  useEffect(() => {\n    const stopTimer = () => {\n      if (timer.current) {\n        clearInterval(timer.current);\n        timer.current = undefined;\n      }\n    };\n\n    if (isRunning) {\n      timer.current = setInterval(() => {\n        if (startTime) {\n          const endDttm = endTime || now();\n          if (startTime < endDttm) {\n            setClockStr(fDuration(startTime, endDttm));\n          }\n          if (!isRunning) {\n            stopTimer();\n          }\n        }\n      }, 30);\n    }\n    return stopTimer;\n  }, [endTime, isRunning, startTime]);\n\n  return (\n    <TimerLabel type={status} role=\"timer\">\n      {clockStr}\n    </TimerLabel>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}