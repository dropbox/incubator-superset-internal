{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { t, styled, logging } from '@superset-ui/core';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport Loading from 'src/components/Loading';\nimport { fetchObjects } from '../tags/tags';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst AllEntitiesTableContainer = styled.div`\n  text-align: left;\n  border-radius: ${(_ref) => {let { theme } = _ref;return theme.gridUnit * 1;}}px 0;\n  margin: 0 ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit * 4;}}px;\n  .table {\n    table-layout: fixed;\n  }\n  .td {\n    width: 33%;\n  }\n`;\nexport default function AllEntitiesTable(_ref3) {let { search = '' } = _ref3;\n  const [objects, setObjects] = useState({\n    dashboard: [],\n    chart: [],\n    query: [] });\n\n  useEffect(() => {\n    fetchObjects({ tags: search, types: null }, (data) => {\n      const objects = { dashboard: [], chart: [], query: [] };\n      data.forEach(function (object) {\n        const object_type = object.type;\n        objects[object_type].push(object);\n      });\n      setObjects(objects);\n    }, (error) => {\n      addDangerToast('Error Fetching Tagged Objects');\n      logging.log(error.text);\n    });\n  }, [search]);\n  const renderTable = (type) => {\n    const data = objects[type].map((o) => ({\n      [type]: ___EmotionJSX(\"a\", { href: o.url }, o.name),\n      modified: moment.utc(o.changed_on).fromNow() }));\n\n    return ___EmotionJSX(TableView, { className: \"table-condensed\", emptyWrapperType: EmptyWrapperType.Small, data: data, pageSize: 50, columns: [\n      {\n        accessor: type,\n        Header: type.charAt(0).toUpperCase() + type.slice(1) },\n\n      { accessor: 'modified', Header: 'Modified' }] });\n\n  };\n  if (objects) {\n    return ___EmotionJSX(AllEntitiesTableContainer, null,\n    ___EmotionJSX(\"h3\", null, t('Dashboards')),\n    renderTable('dashboard'),\n    ___EmotionJSX(\"hr\", null),\n    ___EmotionJSX(\"h3\", null, t('Charts')),\n    renderTable('chart'),\n    ___EmotionJSX(\"hr\", null),\n    ___EmotionJSX(\"h3\", null, t('Queries')),\n    renderTable('query'));\n\n  }\n  return ___EmotionJSX(Loading, null);\n}__signature__(AllEntitiesTable, \"useState{[objects, setObjects]({\\n        dashboard: [],\\n        chart: [],\\n        query: [],\\n    })}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(AllEntitiesTableContainer, \"AllEntitiesTableContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/allEntities/AllEntitiesTable.tsx\");reactHotLoader.register(AllEntitiesTable, \"AllEntitiesTable\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/allEntities/AllEntitiesTable.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useState","useEffect","moment","t","styled","logging","TableView","EmptyWrapperType","addDangerToast","Loading","fetchObjects","AllEntitiesTableContainer","div","theme","gridUnit","AllEntitiesTable","search","objects","setObjects","dashboard","chart","query","tags","types","data","forEach","object","object_type","type","push","error","log","text","renderTable","map","o","url","name","modified","utc","changed_on","fromNow","Small","accessor","Header","charAt","toUpperCase","slice"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/allEntities/AllEntitiesTable.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { t, styled, logging } from '@superset-ui/core';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport Loading from 'src/components/Loading';\nimport { fetchObjects } from '../tags/tags';\n\nconst AllEntitiesTableContainer = styled.div`\n  text-align: left;\n  border-radius: ${({ theme }) => theme.gridUnit * 1}px 0;\n  margin: 0 ${({ theme }) => theme.gridUnit * 4}px;\n  .table {\n    table-layout: fixed;\n  }\n  .td {\n    width: 33%;\n  }\n`;\n\ninterface TaggedObject {\n  id: number;\n  type: string;\n  name: string;\n  url: string;\n  changed_on: moment.MomentInput;\n  created_by: number | undefined;\n  creator: string;\n}\n\ninterface TaggedObjects {\n  dashboard: TaggedObject[];\n  chart: TaggedObject[];\n  query: TaggedObject[];\n}\n\ninterface AllEntitiesTableProps {\n  search?: string;\n}\n\nexport default function AllEntitiesTable({\n  search = '',\n}: AllEntitiesTableProps) {\n  type objectType = 'dashboard' | 'chart' | 'query';\n\n  const [objects, setObjects] = useState<TaggedObjects>({\n    dashboard: [],\n    chart: [],\n    query: [],\n  });\n\n  useEffect(() => {\n    fetchObjects(\n      { tags: search, types: null },\n      (data: TaggedObject[]) => {\n        const objects = { dashboard: [], chart: [], query: [] };\n        data.forEach(function (object) {\n          const object_type = object.type;\n          objects[object_type].push(object);\n        });\n        setObjects(objects);\n      },\n      (error: Response) => {\n        addDangerToast('Error Fetching Tagged Objects');\n        logging.log(error.text);\n      },\n    );\n  }, [search]);\n\n  const renderTable = (type: objectType) => {\n    const data = objects[type].map((o: TaggedObject) => ({\n      [type]: <a href={o.url}>{o.name}</a>,\n      modified: moment.utc(o.changed_on).fromNow(),\n    }));\n    return (\n      <TableView\n        className=\"table-condensed\"\n        emptyWrapperType={EmptyWrapperType.Small}\n        data={data}\n        pageSize={50}\n        columns={[\n          {\n            accessor: type,\n            Header: type.charAt(0).toUpperCase() + type.slice(1),\n          },\n          { accessor: 'modified', Header: 'Modified' },\n        ]}\n      />\n    );\n  };\n\n  if (objects) {\n    return (\n      <AllEntitiesTableContainer>\n        <h3>{t('Dashboards')}</h3>\n        {renderTable('dashboard')}\n        <hr />\n        <h3>{t('Charts')}</h3>\n        {renderTable('chart')}\n        <hr />\n        <h3>{t('Queries')}</h3>\n        {renderTable('query')}\n      </AllEntitiesTableContainer>\n    );\n  }\n  return <Loading />;\n}\n"]},"metadata":{},"sourceType":"module"}