{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { css, t } from '@superset-ui/core';\nimport ValidatedInput from 'src/components/Form/LabeledErrorBoundInput';\nimport FormLabel from 'src/components/Form/FormLabel';\nimport Icons from 'src/components/Icons';\nimport { StyledFooterButton, StyledCatalogTable } from '../styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const TableCatalog = (_ref) => {let { required, changeMethods, getValidation, validationErrors, db } = _ref;\n  const tableCatalog = (db == null ? void 0 : db.catalog) || [];\n  const catalogError = validationErrors || {};\n  return ___EmotionJSX(StyledCatalogTable, null,\n  ___EmotionJSX(\"h4\", { className: \"gsheet-title\" },\n  t('Connect Google Sheets as tables to this database')),\n\n  ___EmotionJSX(\"div\", null,\n  tableCatalog == null ? void 0 : tableCatalog.map((sheet, idx) => {var _catalogError$idx, _catalogError$idx2;return ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(FormLabel, { className: \"catalog-label\", required: true },\n    t('Google Sheet Name and URL')),\n\n    ___EmotionJSX(\"div\", { className: \"catalog-name\" },\n    ___EmotionJSX(ValidatedInput, { className: \"catalog-name-input\", required: required, validationMethods: { onBlur: getValidation }, errorMessage: (_catalogError$idx = catalogError[idx]) == null ? void 0 : _catalogError$idx.name, placeholder: t('Enter a name for this sheet'), onChange: (e) => {\n        changeMethods.onParametersChange({\n          target: {\n            type: `catalog-${idx}`,\n            name: 'name',\n            value: e.target.value } });\n\n\n      }, value: sheet.name }),\n    (tableCatalog == null ? void 0 : tableCatalog.length) > 1 && ___EmotionJSX(Icons.CloseOutlined, { css: (theme) => css`\n                    align-self: center;\n                    background: ${theme.colors.grayscale.light4};\n                    margin: 5px 5px 8px 5px;\n\n                    &.anticon > * {\n                      line-height: 0;\n                    }\n                  `, iconSize: \"m\", onClick: () => changeMethods.onRemoveTableCatalog(idx) })),\n\n    ___EmotionJSX(ValidatedInput, { className: \"catalog-name-url\", required: required, validationMethods: { onBlur: getValidation }, errorMessage: (_catalogError$idx2 = catalogError[idx]) == null ? void 0 : _catalogError$idx2.url, placeholder: t('Paste the shareable Google Sheet URL here'), onChange: (e) => changeMethods.onParametersChange({\n        target: {\n          type: `catalog-${idx}`,\n          name: 'value',\n          value: e.target.value } }),\n\n      value: sheet.value }));}),\n\n  ___EmotionJSX(StyledFooterButton, { className: \"catalog-add-btn\", onClick: () => {\n      changeMethods.onAddTableCatalog();\n    } }, \"+ \",\n  t('Add sheet'))));\n\n\n\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAA6BC,CAA7B,QAAsC,mBAAtC;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AAEA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,WAAvD,C;AAGA,OAAO,MAAMC,YAAY,GAAG,UAMP,KANQ,EAC3BC,QAD2B,EAE3BC,aAF2B,EAG3BC,aAH2B,EAI3BC,gBAJ2B,EAK3BC,EAL2B,EAMR;EACnB,MAAMC,YAAY,GAAG,GAAE,QAAF,cAAE,CAAEC,OAAJ,KAAe,EAApC;EACA,MAAMC,YAAY,GAAGJ,gBAAgB,IAAI,EAAzC;EACA,OACE,cAAC,kBAAD;EACE,sBAAI,SAAS,EAAC,cAAd;EACGV,CAAC,CAAC,kDAAD,CADJ,CADF;;EAIE;EACGY,YADH,oBACGA,YAAY,CAAEG,GAAd,CAAkB,CAACC,KAAD,EAAuBC,GAAvB,uDACjB;IACE,cAAC,SAAD,IAAW,SAAS,EAAC,eAArB,EAAqC,QAAQ,MAA7C;IACGjB,CAAC,CAAC,2BAAD,CADJ,CADF;;IAIE,uBAAK,SAAS,EAAC,cAAf;IACE,cAAC,cAAD,IACE,SAAS,EAAC,oBADZ,EAEE,QAAQ,EAAEO,QAFZ,EAGE,iBAAiB,EAAE,EAAEW,MAAM,EAAET,aAAV,EAHrB,EAIE,YAAY,uBAAEK,YAAY,CAACG,GAAD,CAAd,qBAAE,kBAAmBE,IAJnC,EAKE,WAAW,EAAEnB,CAAC,CAAC,6BAAD,CALhB,EAME,QAAQ,EAAE,CAACoB,CAAD,KAAkC;QAC1CZ,aAAa,CAACa,kBAAd,CAAiC;UAC/BC,MAAM,EAAE;YACNC,IAAI,EAAE,WAAWN,GAAG,EADd;YAENE,IAAI,EAAE,MAFA;YAGNK,KAAK,EAAEJ,CAAC,CAACE,MAAF,CAASE,KAHV,EADuB,EAAjC;;;MAOD,CAdH,EAeE,KAAK,EAAER,KAAK,CAACG,IAff,GADF;IAkBG,aAAY,QAAZ,wBAAY,CAAEM,MAAd,IAAuB,CAAvB,IACC,cAAC,KAAD,CAAO,aAAP,IACE,GAAG,EAAE,CAACC,KAAD,KAA0B3B,GAAG;;kCAElB2B,KAAK,CAACC,MAAN,CAAaC,SAAb,CAAuBC,MAAM;;;;;;mBAH/C,EAUE,QAAQ,EAAC,GAVX,EAWE,OAAO,EAAE,MAAMrB,aAAa,CAACsB,oBAAd,CAAmCb,GAAnC,CAXjB,GAnBJ,CAJF;;IAsCE,cAAC,cAAD,IACE,SAAS,EAAC,kBADZ,EAEE,QAAQ,EAAEV,QAFZ,EAGE,iBAAiB,EAAE,EAAEW,MAAM,EAAET,aAAV,EAHrB,EAIE,YAAY,wBAAEK,YAAY,CAACG,GAAD,CAAd,qBAAE,mBAAmBc,GAJnC,EAKE,WAAW,EAAE/B,CAAC,CAAC,2CAAD,CALhB,EAME,QAAQ,EAAE,CAACoB,CAAD,KACRZ,aAAa,CAACa,kBAAd,CAAiC;QAC/BC,MAAM,EAAE;UACNC,IAAI,EAAE,WAAWN,GAAG,EADd;UAENE,IAAI,EAAE,OAFA;UAGNK,KAAK,EAAEJ,CAAC,CAACE,MAAF,CAASE,KAHV,EADuB,EAAjC,CAPJ;;MAeE,KAAK,EAAER,KAAK,CAACQ,KAff,GAtCF,CADiB,EAAlB,CADH;;EA2DE,cAAC,kBAAD,IACE,SAAS,EAAC,iBADZ,EAEE,OAAO,EAAE,MAAK;MACZhB,aAAa,CAACwB,iBAAd;IACD,CAJH;EAMKhC,CAAC,CAAC,WAAD,CANN,CA3DF,CAJF,CADF;;;;AA2ED,CApFM","names":["React","css","t","ValidatedInput","FormLabel","Icons","StyledFooterButton","StyledCatalogTable","TableCatalog","required","changeMethods","getValidation","validationErrors","db","tableCatalog","catalog","catalogError","map","sheet","idx","onBlur","name","e","onParametersChange","target","type","value","length","theme","colors","grayscale","light4","onRemoveTableCatalog","url","onAddTableCatalog"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/features/databases/DatabaseModal/DatabaseConnectionForm/TableCatalog.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { css, SupersetTheme, t } from '@superset-ui/core';\nimport ValidatedInput from 'src/components/Form/LabeledErrorBoundInput';\nimport FormLabel from 'src/components/Form/FormLabel';\nimport Icons from 'src/components/Icons';\nimport { FieldPropTypes } from '.';\nimport { StyledFooterButton, StyledCatalogTable } from '../styles';\nimport { CatalogObject } from '../../types';\n\nexport const TableCatalog = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => {\n  const tableCatalog = db?.catalog || [];\n  const catalogError = validationErrors || {};\n  return (\n    <StyledCatalogTable>\n      <h4 className=\"gsheet-title\">\n        {t('Connect Google Sheets as tables to this database')}\n      </h4>\n      <div>\n        {tableCatalog?.map((sheet: CatalogObject, idx: number) => (\n          <>\n            <FormLabel className=\"catalog-label\" required>\n              {t('Google Sheet Name and URL')}\n            </FormLabel>\n            <div className=\"catalog-name\">\n              <ValidatedInput\n                className=\"catalog-name-input\"\n                required={required}\n                validationMethods={{ onBlur: getValidation }}\n                errorMessage={catalogError[idx]?.name}\n                placeholder={t('Enter a name for this sheet')}\n                onChange={(e: { target: { value: any } }) => {\n                  changeMethods.onParametersChange({\n                    target: {\n                      type: `catalog-${idx}`,\n                      name: 'name',\n                      value: e.target.value,\n                    },\n                  });\n                }}\n                value={sheet.name}\n              />\n              {tableCatalog?.length > 1 && (\n                <Icons.CloseOutlined\n                  css={(theme: SupersetTheme) => css`\n                    align-self: center;\n                    background: ${theme.colors.grayscale.light4};\n                    margin: 5px 5px 8px 5px;\n\n                    &.anticon > * {\n                      line-height: 0;\n                    }\n                  `}\n                  iconSize=\"m\"\n                  onClick={() => changeMethods.onRemoveTableCatalog(idx)}\n                />\n              )}\n            </div>\n            <ValidatedInput\n              className=\"catalog-name-url\"\n              required={required}\n              validationMethods={{ onBlur: getValidation }}\n              errorMessage={catalogError[idx]?.url}\n              placeholder={t('Paste the shareable Google Sheet URL here')}\n              onChange={(e: { target: { value: any } }) =>\n                changeMethods.onParametersChange({\n                  target: {\n                    type: `catalog-${idx}`,\n                    name: 'value',\n                    value: e.target.value,\n                  },\n                })\n              }\n              value={sheet.value}\n            />\n          </>\n        ))}\n        <StyledFooterButton\n          className=\"catalog-add-btn\"\n          onClick={() => {\n            changeMethods.onAddTableCatalog();\n          }}\n        >\n          + {t('Add sheet')}\n        </StyledFooterButton>\n      </div>\n    </StyledCatalogTable>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}