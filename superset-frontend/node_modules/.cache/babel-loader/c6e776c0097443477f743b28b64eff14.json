{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { legacyValidateInteger, legacyValidateNumber, t } from '@superset-ui/core';\nexport const FORECAST_DEFAULT_DATA = {\n  forecastEnabled: false,\n  forecastInterval: 0.8,\n  forecastPeriods: 10,\n  forecastSeasonalityDaily: null,\n  forecastSeasonalityWeekly: null,\n  forecastSeasonalityYearly: null };\n\nexport const forecastIntervalControls = {\n  label: t('Predictive Analytics'),\n  expanded: false,\n  controlSetRows: [\n  [\n  {\n    name: 'forecastEnabled',\n    config: {\n      type: 'CheckboxControl',\n      label: t('Enable forecast'),\n      renderTrigger: false,\n      default: FORECAST_DEFAULT_DATA.forecastEnabled,\n      description: t('Enable forecasting') } }],\n\n\n\n  [\n  {\n    name: 'forecastPeriods',\n    config: {\n      type: 'TextControl',\n      label: t('Forecast periods'),\n      validators: [legacyValidateInteger],\n      default: FORECAST_DEFAULT_DATA.forecastPeriods,\n      description: t('How many periods into the future do we want to predict') } }],\n\n\n\n  [\n  {\n    name: 'forecastInterval',\n    config: {\n      type: 'TextControl',\n      label: t('Confidence interval'),\n      validators: [legacyValidateNumber],\n      default: FORECAST_DEFAULT_DATA.forecastInterval,\n      description: t('Width of the confidence interval. Should be between 0 and 1') } }],\n\n\n\n  [\n  {\n    name: 'forecastSeasonalityYearly',\n    config: {\n      type: 'SelectControl',\n      freeForm: true,\n      label: t('Yearly seasonality'),\n      choices: [\n      [null, t('default')],\n      [true, t('Yes')],\n      [false, t('No')]],\n\n      default: FORECAST_DEFAULT_DATA.forecastSeasonalityYearly,\n      description: t('Should yearly seasonality be applied. An integer value will specify Fourier order of seasonality.') } }],\n\n\n\n  [\n  {\n    name: 'forecastSeasonalityWeekly',\n    config: {\n      type: 'SelectControl',\n      freeForm: true,\n      label: t('Weekly seasonality'),\n      choices: [\n      [null, t('default')],\n      [true, t('Yes')],\n      [false, t('No')]],\n\n      default: FORECAST_DEFAULT_DATA.forecastSeasonalityWeekly,\n      description: t('Should weekly seasonality be applied. An integer value will specify Fourier order of seasonality.') } }],\n\n\n\n  [\n  {\n    name: 'forecastSeasonalityDaily',\n    config: {\n      type: 'SelectControl',\n      freeForm: true,\n      label: t('Daily seasonality'),\n      choices: [\n      [null, t('default')],\n      [true, t('Yes')],\n      [false, t('No')]],\n\n      default: FORECAST_DEFAULT_DATA.forecastSeasonalityDaily,\n      description: t('Should daily seasonality be applied. An integer value will specify Fourier order of seasonality.') } }]] };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(FORECAST_DEFAULT_DATA, \"FORECAST_DEFAULT_DATA\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/sections/forecastInterval.tsx\");reactHotLoader.register(forecastIntervalControls, \"forecastIntervalControls\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/sections/forecastInterval.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["legacyValidateInteger","legacyValidateNumber","t","FORECAST_DEFAULT_DATA","forecastEnabled","forecastInterval","forecastPeriods","forecastSeasonalityDaily","forecastSeasonalityWeekly","forecastSeasonalityYearly","forecastIntervalControls","label","expanded","controlSetRows","name","config","type","renderTrigger","default","description","validators","freeForm","choices"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/sections/forecastInterval.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  legacyValidateInteger,\n  legacyValidateNumber,\n  t,\n} from '@superset-ui/core';\nimport { ControlPanelSectionConfig } from '../types';\n\nexport const FORECAST_DEFAULT_DATA = {\n  forecastEnabled: false,\n  forecastInterval: 0.8,\n  forecastPeriods: 10,\n  forecastSeasonalityDaily: null,\n  forecastSeasonalityWeekly: null,\n  forecastSeasonalityYearly: null,\n};\n\nexport const forecastIntervalControls: ControlPanelSectionConfig = {\n  label: t('Predictive Analytics'),\n  expanded: false,\n  controlSetRows: [\n    [\n      {\n        name: 'forecastEnabled',\n        config: {\n          type: 'CheckboxControl',\n          label: t('Enable forecast'),\n          renderTrigger: false,\n          default: FORECAST_DEFAULT_DATA.forecastEnabled,\n          description: t('Enable forecasting'),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastPeriods',\n        config: {\n          type: 'TextControl',\n          label: t('Forecast periods'),\n          validators: [legacyValidateInteger],\n          default: FORECAST_DEFAULT_DATA.forecastPeriods,\n          description: t(\n            'How many periods into the future do we want to predict',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastInterval',\n        config: {\n          type: 'TextControl',\n          label: t('Confidence interval'),\n          validators: [legacyValidateNumber],\n          default: FORECAST_DEFAULT_DATA.forecastInterval,\n          description: t(\n            'Width of the confidence interval. Should be between 0 and 1',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastSeasonalityYearly',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: t('Yearly seasonality'),\n          choices: [\n            [null, t('default')],\n            [true, t('Yes')],\n            [false, t('No')],\n          ],\n          default: FORECAST_DEFAULT_DATA.forecastSeasonalityYearly,\n          description: t(\n            'Should yearly seasonality be applied. An integer value will specify Fourier order of seasonality.',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastSeasonalityWeekly',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: t('Weekly seasonality'),\n          choices: [\n            [null, t('default')],\n            [true, t('Yes')],\n            [false, t('No')],\n          ],\n          default: FORECAST_DEFAULT_DATA.forecastSeasonalityWeekly,\n          description: t(\n            'Should weekly seasonality be applied. An integer value will specify Fourier order of seasonality.',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastSeasonalityDaily',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: t('Daily seasonality'),\n          choices: [\n            [null, t('default')],\n            [true, t('Yes')],\n            [false, t('No')],\n          ],\n          default: FORECAST_DEFAULT_DATA.forecastSeasonalityDaily,\n          description: t(\n            'Should daily seasonality be applied. An integer value will specify Fourier order of seasonality.',\n          ),\n        },\n      },\n    ],\n  ],\n};\n"]},"metadata":{},"sourceType":"module"}