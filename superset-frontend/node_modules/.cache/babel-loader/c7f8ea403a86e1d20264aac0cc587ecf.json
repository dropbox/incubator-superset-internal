{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport default function transformProps(chartProps) {\n  const { width, height, formData, queriesData } = chartProps;\n  const { colorScheme, treemapRatio, sliceId } = formData;\n  let { numberFormat } = formData;\n\n  if (!numberFormat && chartProps.datasource && chartProps.datasource.metrics) {\n    chartProps.datasource.metrics.forEach((metric) => {\n      if (\n      metric.metric_name === chartProps.formData.metrics[0] &&\n      metric.d3format)\n      {\n        numberFormat = metric.d3format;\n      }\n    });\n  }\n\n  return {\n    width,\n    height,\n    data: queriesData[0].data,\n    colorScheme,\n    numberFormat,\n    treemapRatio,\n    sliceId };\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(transformProps, \"transformProps\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-plugin-chart-treemap/src/transformProps.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["transformProps","chartProps","width","height","formData","queriesData","colorScheme","treemapRatio","sliceId","numberFormat","datasource","metrics","forEach","metric","metric_name","d3format","data"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-plugin-chart-treemap/src/transformProps.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport default function transformProps(chartProps) {\n  const { width, height, formData, queriesData } = chartProps;\n  const { colorScheme, treemapRatio, sliceId } = formData;\n  let { numberFormat } = formData;\n\n  if (!numberFormat && chartProps.datasource && chartProps.datasource.metrics) {\n    chartProps.datasource.metrics.forEach(metric => {\n      if (\n        metric.metric_name === chartProps.formData.metrics[0] &&\n        metric.d3format\n      ) {\n        numberFormat = metric.d3format;\n      }\n    });\n  }\n\n  return {\n    width,\n    height,\n    data: queriesData[0].data,\n    colorScheme,\n    numberFormat,\n    treemapRatio,\n    sliceId,\n  };\n}\n"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,cAAT,CAAwBC,UAAxB,EAAoC;EACjD,MAAM,EAAEC,KAAF,EAASC,MAAT,EAAiBC,QAAjB,EAA2BC,WAA3B,KAA2CJ,UAAjD;EACA,MAAM,EAAEK,WAAF,EAAeC,YAAf,EAA6BC,OAA7B,KAAyCJ,QAA/C;EACA,IAAI,EAAEK,YAAF,KAAmBL,QAAvB;;EAEA,IAAI,CAACK,YAAD,IAAiBR,UAAU,CAACS,UAA5B,IAA0CT,UAAU,CAACS,UAAX,CAAsBC,OAApE,EAA6E;IAC3EV,UAAU,CAACS,UAAX,CAAsBC,OAAtB,CAA8BC,OAA9B,CAAsC,CAAAC,MAAM,KAAI;MAC9C;MACEA,MAAM,CAACC,WAAP,KAAuBb,UAAU,CAACG,QAAX,CAAoBO,OAApB,CAA4B,CAA5B,CAAvB;MACAE,MAAM,CAACE,QAFT;MAGE;QACAN,YAAY,GAAGI,MAAM,CAACE,QAAtB;MACD;IACF,CAPD;EAQD;;EAED,OAAO;IACLb,KADK;IAELC,MAFK;IAGLa,IAAI,EAAEX,WAAW,CAAC,CAAD,CAAX,CAAeW,IAHhB;IAILV,WAJK;IAKLG,YALK;IAMLF,YANK;IAOLC,OAPK,EAAP;;AASD,C,iLAzBuBR,c"},"metadata":{},"sourceType":"module"}