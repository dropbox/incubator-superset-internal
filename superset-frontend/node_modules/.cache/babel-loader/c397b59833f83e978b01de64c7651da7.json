{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { PureComponent } from 'react';\nimport { ParentSize } from '@vx/responsive';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst defaultProps = {\n  className: '',\n  height: 'auto',\n  position: 'top',\n  width: 'auto' };\n\nconst LEGEND_STYLE_BASE = {\n  display: 'flex',\n  flexGrow: 0,\n  flexShrink: 0,\n  order: -1 };\n\nconst CHART_STYLE_BASE = {\n  flexBasis: 'auto',\n  flexGrow: 1,\n  flexShrink: 1,\n  position: 'relative' };\n\nclass WithLegend extends PureComponent {\n\n  getContainerDirection() {\n    const { position } = this.props;\n    if (position === 'left') {\n      return 'row';\n    }\n    if (position === 'right') {\n      return 'row-reverse';\n    }\n    if (position === 'bottom') {\n      return 'column-reverse';\n    }\n    return 'column';\n  }\n  getLegendJustifyContent() {\n    const { legendJustifyContent, position } = this.props;\n    if (legendJustifyContent) {\n      return legendJustifyContent;\n    }\n    if (position === 'left' || position === 'right') {\n      return 'flex-start';\n    }\n    return 'flex-end';\n  }\n  render() {\n    const { className, debounceTime, width, height, position, renderChart, renderLegend } = this.props;\n    const isHorizontal = position === 'left' || position === 'right';\n    const style = {\n      display: 'flex',\n      flexDirection: this.getContainerDirection(),\n      height,\n      width };\n\n    const chartStyle = { ...CHART_STYLE_BASE };\n    if (isHorizontal) {\n      chartStyle.width = 0;\n    } else\n    {\n      chartStyle.height = 0;\n    }\n    const legendDirection = isHorizontal ? 'column' : 'row';\n    const legendStyle = {\n      ...LEGEND_STYLE_BASE,\n      flexDirection: legendDirection,\n      justifyContent: this.getLegendJustifyContent() };\n\n    return ___EmotionJSX(\"div\", { className: `with-legend ${className}`, style: style },\n    renderLegend && ___EmotionJSX(\"div\", { className: \"legend-container\", style: legendStyle },\n    renderLegend({\n      // Pass flexDirection for @vx/legend to arrange legend items\n      direction: legendDirection })),\n\n\n    ___EmotionJSX(\"div\", { className: \"main-container\", style: chartStyle },\n    ___EmotionJSX(ParentSize, { debounceTime: debounceTime },\n    (parent) => parent.width > 0 && parent.height > 0 ?\n    // Only render when necessary\n    renderChart(parent) :\n    null)));\n\n\n\n  }}WithLegend.defaultProps = defaultProps;\n\nexport default WithLegend;","map":{"version":3,"mappings":"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","names":["React","PureComponent","ParentSize","defaultProps","className","height","position","width","LEGEND_STYLE_BASE","display","flexGrow","flexShrink","order","CHART_STYLE_BASE","flexBasis","WithLegend","getContainerDirection","props","getLegendJustifyContent","legendJustifyContent","render","debounceTime","renderChart","renderLegend","isHorizontal","style","flexDirection","chartStyle","legendDirection","legendStyle","justifyContent","direction","parent"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/packages/superset-ui-core/src/chart-composition/legend/WithLegend.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { CSSProperties, ReactNode, PureComponent } from 'react';\nimport { ParentSize } from '@vx/responsive';\n\nconst defaultProps = {\n  className: '',\n  height: 'auto' as number | string,\n  position: 'top',\n  width: 'auto' as number | string,\n};\n\ntype Props = {\n  className: string;\n  debounceTime?: number;\n  width: number | string;\n  height: number | string;\n  legendJustifyContent?: 'center' | 'flex-start' | 'flex-end';\n  position: 'top' | 'left' | 'bottom' | 'right';\n  renderChart: (dim: { width: number; height: number }) => ReactNode;\n  renderLegend?: (params: { direction: string }) => ReactNode;\n} & Readonly<typeof defaultProps>;\n\nconst LEGEND_STYLE_BASE: CSSProperties = {\n  display: 'flex',\n  flexGrow: 0,\n  flexShrink: 0,\n  order: -1,\n};\n\nconst CHART_STYLE_BASE: CSSProperties = {\n  flexBasis: 'auto',\n  flexGrow: 1,\n  flexShrink: 1,\n  position: 'relative',\n};\n\nclass WithLegend extends PureComponent<Props, {}> {\n  static defaultProps = defaultProps;\n\n  getContainerDirection(): CSSProperties['flexDirection'] {\n    const { position } = this.props;\n\n    if (position === 'left') {\n      return 'row';\n    }\n    if (position === 'right') {\n      return 'row-reverse';\n    }\n    if (position === 'bottom') {\n      return 'column-reverse';\n    }\n\n    return 'column';\n  }\n\n  getLegendJustifyContent() {\n    const { legendJustifyContent, position } = this.props;\n    if (legendJustifyContent) {\n      return legendJustifyContent;\n    }\n\n    if (position === 'left' || position === 'right') {\n      return 'flex-start';\n    }\n\n    return 'flex-end';\n  }\n\n  render() {\n    const {\n      className,\n      debounceTime,\n      width,\n      height,\n      position,\n      renderChart,\n      renderLegend,\n    } = this.props;\n\n    const isHorizontal = position === 'left' || position === 'right';\n\n    const style: CSSProperties = {\n      display: 'flex',\n      flexDirection: this.getContainerDirection(),\n      height,\n      width,\n    };\n\n    const chartStyle: CSSProperties = { ...CHART_STYLE_BASE };\n    if (isHorizontal) {\n      chartStyle.width = 0;\n    } else {\n      chartStyle.height = 0;\n    }\n\n    const legendDirection = isHorizontal ? 'column' : 'row';\n    const legendStyle: CSSProperties = {\n      ...LEGEND_STYLE_BASE,\n      flexDirection: legendDirection,\n      justifyContent: this.getLegendJustifyContent(),\n    };\n\n    return (\n      <div className={`with-legend ${className}`} style={style}>\n        {renderLegend && (\n          <div className=\"legend-container\" style={legendStyle}>\n            {renderLegend({\n              // Pass flexDirection for @vx/legend to arrange legend items\n              direction: legendDirection,\n            })}\n          </div>\n        )}\n        <div className=\"main-container\" style={chartStyle}>\n          <ParentSize debounceTime={debounceTime}>\n            {(parent: { width: number; height: number }) =>\n              parent.width > 0 && parent.height > 0\n                ? // Only render when necessary\n                  renderChart(parent)\n                : null\n            }\n          </ParentSize>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WithLegend;\n"]},"metadata":{},"sourceType":"module"}