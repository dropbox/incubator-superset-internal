{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport handleHover from './handleHover';\nimport handleDrop from './handleDrop';\n\n// note: the 'type' hook is not useful for us as dropping is contingent on other properties\nconst TYPE = 'DRAG_DROPPABLE';\n\nexport const dragConfig = [\nTYPE,\n{\n  canDrag(props) {\n    return !props.disableDragDrop;\n  },\n\n  // this defines the dragging item object returned by monitor.getItem()\n  beginDrag(props /* , monitor, component */) {\n    const { component, index, parentComponent = {} } = props;\n    return {\n      type: component.type,\n      id: component.id,\n      meta: component.meta,\n      index,\n      parentId: parentComponent.id,\n      parentType: parentComponent.type };\n\n  } },\n\nfunction dragStateToProps(connect, monitor) {\n  return {\n    dragSourceRef: connect.dragSource(),\n    dragPreviewRef: connect.dragPreview(),\n    isDragging: monitor.isDragging() };\n\n}];\n\n\nexport const dropConfig = [\nTYPE,\n{\n  canDrop(props) {\n    return !props.disableDragDrop;\n  },\n  hover(props, monitor, component) {\n    if (component && component.mounted) {\n      handleHover(props, monitor, component);\n    }\n  },\n  // note:\n  //  the react-dnd api requires that the drop() method return a result or undefined\n  //  monitor.didDrop() cannot be used because it returns true only for the most-nested target\n  drop(props, monitor, component) {\n    const dropResult = monitor.getDropResult();\n    if ((!dropResult || !dropResult.destination) && component.mounted) {\n      return handleDrop(props, monitor, component);\n    }\n    return undefined;\n  } },\n\nfunction dropStateToProps(connect, monitor) {\n  return {\n    droppableRef: connect.dropTarget(),\n    isDraggingOver: monitor.isOver(),\n    isDraggingOverShallow: monitor.isOver({ shallow: true }) };\n\n}];;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TYPE, \"TYPE\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/dnd/dragDroppableConfig.js\");reactHotLoader.register(dragConfig, \"dragConfig\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/dnd/dragDroppableConfig.js\");reactHotLoader.register(dropConfig, \"dropConfig\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/dnd/dragDroppableConfig.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["handleHover","handleDrop","TYPE","dragConfig","canDrag","props","disableDragDrop","beginDrag","component","index","parentComponent","type","id","meta","parentId","parentType","dragStateToProps","connect","monitor","dragSourceRef","dragSource","dragPreviewRef","dragPreview","isDragging","dropConfig","canDrop","hover","mounted","drop","dropResult","getDropResult","destination","undefined","dropStateToProps","droppableRef","dropTarget","isDraggingOver","isOver","isDraggingOverShallow","shallow"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/dnd/dragDroppableConfig.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport handleHover from './handleHover';\nimport handleDrop from './handleDrop';\n\n// note: the 'type' hook is not useful for us as dropping is contingent on other properties\nconst TYPE = 'DRAG_DROPPABLE';\n\nexport const dragConfig = [\n  TYPE,\n  {\n    canDrag(props) {\n      return !props.disableDragDrop;\n    },\n\n    // this defines the dragging item object returned by monitor.getItem()\n    beginDrag(props /* , monitor, component */) {\n      const { component, index, parentComponent = {} } = props;\n      return {\n        type: component.type,\n        id: component.id,\n        meta: component.meta,\n        index,\n        parentId: parentComponent.id,\n        parentType: parentComponent.type,\n      };\n    },\n  },\n  function dragStateToProps(connect, monitor) {\n    return {\n      dragSourceRef: connect.dragSource(),\n      dragPreviewRef: connect.dragPreview(),\n      isDragging: monitor.isDragging(),\n    };\n  },\n];\n\nexport const dropConfig = [\n  TYPE,\n  {\n    canDrop(props) {\n      return !props.disableDragDrop;\n    },\n    hover(props, monitor, component) {\n      if (component && component.mounted) {\n        handleHover(props, monitor, component);\n      }\n    },\n    // note:\n    //  the react-dnd api requires that the drop() method return a result or undefined\n    //  monitor.didDrop() cannot be used because it returns true only for the most-nested target\n    drop(props, monitor, component) {\n      const dropResult = monitor.getDropResult();\n      if ((!dropResult || !dropResult.destination) && component.mounted) {\n        return handleDrop(props, monitor, component);\n      }\n      return undefined;\n    },\n  },\n  function dropStateToProps(connect, monitor) {\n    return {\n      droppableRef: connect.dropTarget(),\n      isDraggingOver: monitor.isOver(),\n      isDraggingOverShallow: monitor.isOver({ shallow: true }),\n    };\n  },\n];\n"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA;AACA,MAAMC,IAAI,GAAG,gBAAb;;AAEA,OAAO,MAAMC,UAAU,GAAG;AACxBD,IADwB;AAExB;EACEE,OAAO,CAACC,KAAD,EAAQ;IACb,OAAO,CAACA,KAAK,CAACC,eAAd;EACD,CAHH;;EAKE;EACAC,SAAS,CAACF,KAAD,CAAO,0BAAP,EAAmC;IAC1C,MAAM,EAAEG,SAAF,EAAaC,KAAb,EAAoBC,eAAe,GAAG,EAAtC,KAA6CL,KAAnD;IACA,OAAO;MACLM,IAAI,EAAEH,SAAS,CAACG,IADX;MAELC,EAAE,EAAEJ,SAAS,CAACI,EAFT;MAGLC,IAAI,EAAEL,SAAS,CAACK,IAHX;MAILJ,KAJK;MAKLK,QAAQ,EAAEJ,eAAe,CAACE,EALrB;MAMLG,UAAU,EAAEL,eAAe,CAACC,IANvB,EAAP;;EAQD,CAhBH,EAFwB;;AAoBxB,SAASK,gBAAT,CAA0BC,OAA1B,EAAmCC,OAAnC,EAA4C;EAC1C,OAAO;IACLC,aAAa,EAAEF,OAAO,CAACG,UAAR,EADV;IAELC,cAAc,EAAEJ,OAAO,CAACK,WAAR,EAFX;IAGLC,UAAU,EAAEL,OAAO,CAACK,UAAR,EAHP,EAAP;;AAKD,CA1BuB,CAAnB;;;AA6BP,OAAO,MAAMC,UAAU,GAAG;AACxBtB,IADwB;AAExB;EACEuB,OAAO,CAACpB,KAAD,EAAQ;IACb,OAAO,CAACA,KAAK,CAACC,eAAd;EACD,CAHH;EAIEoB,KAAK,CAACrB,KAAD,EAAQa,OAAR,EAAiBV,SAAjB,EAA4B;IAC/B,IAAIA,SAAS,IAAIA,SAAS,CAACmB,OAA3B,EAAoC;MAClC3B,WAAW,CAACK,KAAD,EAAQa,OAAR,EAAiBV,SAAjB,CAAX;IACD;EACF,CARH;EASE;EACA;EACA;EACAoB,IAAI,CAACvB,KAAD,EAAQa,OAAR,EAAiBV,SAAjB,EAA4B;IAC9B,MAAMqB,UAAU,GAAGX,OAAO,CAACY,aAAR,EAAnB;IACA,IAAI,CAAC,CAACD,UAAD,IAAe,CAACA,UAAU,CAACE,WAA5B,KAA4CvB,SAAS,CAACmB,OAA1D,EAAmE;MACjE,OAAO1B,UAAU,CAACI,KAAD,EAAQa,OAAR,EAAiBV,SAAjB,CAAjB;IACD;IACD,OAAOwB,SAAP;EACD,CAlBH,EAFwB;;AAsBxB,SAASC,gBAAT,CAA0BhB,OAA1B,EAAmCC,OAAnC,EAA4C;EAC1C,OAAO;IACLgB,YAAY,EAAEjB,OAAO,CAACkB,UAAR,EADT;IAELC,cAAc,EAAElB,OAAO,CAACmB,MAAR,EAFX;IAGLC,qBAAqB,EAAEpB,OAAO,CAACmB,MAAR,CAAe,EAAEE,OAAO,EAAE,IAAX,EAAf,CAHlB,EAAP;;AAKD,CA5BuB,CAAnB,C,iLA/BDrC,I,0JAEOC,U,gKA6BAqB,U"},"metadata":{},"sourceType":"module"}