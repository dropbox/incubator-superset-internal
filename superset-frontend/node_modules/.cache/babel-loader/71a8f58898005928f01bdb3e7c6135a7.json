{"ast":null,"code":"export var OrientationType;\n(function (OrientationType) {\n  OrientationType[\"vertical\"] = \"vertical\";\n  OrientationType[\"horizontal\"] = \"horizontal\";\n})(OrientationType || (OrientationType = {}));\nexport var EchartsTimeseriesSeriesType;\n(function (EchartsTimeseriesSeriesType) {\n  EchartsTimeseriesSeriesType[\"Line\"] = \"line\";\n  EchartsTimeseriesSeriesType[\"Scatter\"] = \"scatter\";\n  EchartsTimeseriesSeriesType[\"Smooth\"] = \"smooth\";\n  EchartsTimeseriesSeriesType[\"Bar\"] = \"bar\";\n  EchartsTimeseriesSeriesType[\"Start\"] = \"start\";\n  EchartsTimeseriesSeriesType[\"Middle\"] = \"middle\";\n  EchartsTimeseriesSeriesType[\"End\"] = \"end\";\n})(EchartsTimeseriesSeriesType || (EchartsTimeseriesSeriesType = {}));","map":{"version":3,"mappings":"AAuCA,WAAYA,eAAZ;AAAA,WAAYA,eAAZ,EAA2B;EACzBA;EACAA;AACD,CAHD,EAAYA,eAAe,KAAfA,eAAe,MAA3B;AAKA,WAAYC,2BAAZ;AAAA,WAAYA,2BAAZ,EAAuC;EACrCA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;AACD,CARD,EAAYA,2BAA2B,KAA3BA,2BAA2B,MAAvC","names":["OrientationType","EchartsTimeseriesSeriesType"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/plugin-chart-echarts/src/Timeseries/types.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { OptionName } from 'echarts/types/src/util/types';\nimport {\n  AnnotationLayer,\n  AxisType,\n  ContributionType,\n  QueryFormColumn,\n  QueryFormData,\n  QueryFormMetric,\n  TimeFormatter,\n  TimeGranularity,\n} from '@superset-ui/core';\nimport {\n  BaseChartProps,\n  BaseTransformedProps,\n  ContextMenuTransformedProps,\n  CrossFilterTransformedProps,\n  LegendFormData,\n  StackType,\n  TitleFormData,\n} from '../types';\n\nexport enum OrientationType {\n  vertical = 'vertical',\n  horizontal = 'horizontal',\n}\n\nexport enum EchartsTimeseriesSeriesType {\n  Line = 'line',\n  Scatter = 'scatter',\n  Smooth = 'smooth',\n  Bar = 'bar',\n  Start = 'start',\n  Middle = 'middle',\n  End = 'end',\n}\n\nexport type EchartsTimeseriesFormData = QueryFormData & {\n  annotationLayers: AnnotationLayer[];\n  area: boolean;\n  colorScheme?: string;\n  contributionMode?: ContributionType;\n  forecastEnabled: boolean;\n  forecastPeriods: number;\n  forecastInterval: number;\n  forecastSeasonalityDaily: null;\n  forecastSeasonalityWeekly: null;\n  forecastSeasonalityYearly: null;\n  logAxis: boolean;\n  markerEnabled: boolean;\n  markerSize: number;\n  metrics: QueryFormMetric[];\n  minorSplitLine: boolean;\n  opacity: number;\n  orderDesc: boolean;\n  rowLimit: number;\n  seriesType: EchartsTimeseriesSeriesType;\n  stack: StackType;\n  timeCompare?: string[];\n  tooltipTimeFormat?: string;\n  truncateYAxis: boolean;\n  yAxisFormat?: string;\n  xAxisTimeFormat?: string;\n  timeGrainSqla?: TimeGranularity;\n  yAxisBounds: [number | undefined | null, number | undefined | null];\n  zoomable: boolean;\n  richTooltip: boolean;\n  xAxisLabelRotation: number;\n  groupby: QueryFormColumn[];\n  showValue: boolean;\n  onlyTotal: boolean;\n  showExtraControls: boolean;\n  percentageThreshold: number;\n  orientation?: OrientationType;\n} & LegendFormData &\n  TitleFormData;\n\nexport interface EchartsTimeseriesChartProps\n  extends BaseChartProps<EchartsTimeseriesFormData> {\n  formData: EchartsTimeseriesFormData;\n}\n\nexport type TimeseriesChartTransformedProps =\n  BaseTransformedProps<EchartsTimeseriesFormData> &\n    ContextMenuTransformedProps &\n    CrossFilterTransformedProps & {\n      legendData?: OptionName[];\n      xValueFormatter: TimeFormatter | StringConstructor;\n      xAxis: {\n        label: string;\n        type: AxisType;\n      };\n      onFocusedSeries: (series: string | null) => void;\n    };\n"]},"metadata":{},"sourceType":"module"}