{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";import _uniqWith from \"lodash/uniqWith\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-param-reassign */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { AppSection, ensureIsArray, getColumnLabel, smartDateDetailedFormatter, t, tn } from '@superset-ui/core';\nimport debounce from 'lodash/debounce';\nimport { useImmerReducer } from 'use-immer';\nimport { Select } from 'src/components';\nimport { SLOW_DEBOUNCE } from 'src/constants';\nimport { hasOption, propertyComparator } from 'src/components/Select/utils';\nimport { FilterBarOrientation } from 'src/dashboard/types';\n\nimport { FilterPluginStyle, StatusMessage, StyledFormItem } from '../common';\nimport { getDataRecordFormatter, getSelectExtraFormData } from '../../utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction reducer(draft, action) {\n  switch (action.type) {\n    case 'ownState':\n      draft.ownState = {\n        ...draft.ownState,\n        ...action.ownState };\n\n      return draft;\n    case 'filterState':\n      draft.extraFormData = action.extraFormData;\n      // eslint-disable-next-line no-underscore-dangle\n      draft.__cache = action.__cache;\n      draft.filterState = { ...draft.filterState, ...action.filterState };\n      return draft;\n    default:\n      return draft;}\n\n}\nexport default function PluginFilterSelect(props) {\n  const { coltypeMap, data, filterState, formData, height, isRefreshing, width, setDataMask, setHoveredFilter, unsetHoveredFilter, setFocusedFilter, unsetFocusedFilter, setFilterActive, appSection, showOverflow, parentRef, inputRef, filterBarOrientation } = props;\n  const { enableEmptyFilter, multiSelect, showSearch, inverseSelection, defaultToFirstItem, searchAllOptions } = formData;\n  const groupby = useMemo(() => ensureIsArray(formData.groupby).map(getColumnLabel), [formData.groupby]);\n  const [col] = groupby;\n  const [initialColtypeMap] = useState(coltypeMap);\n  const [search, setSearch] = useState('');\n  const [dataMask, dispatchDataMask] = useImmerReducer(reducer, {\n    extraFormData: {},\n    filterState });\n\n  const datatype = coltypeMap[col];\n  const labelFormatter = useMemo(() => getDataRecordFormatter({\n    timeFormatter: smartDateDetailedFormatter }),\n  []);\n  const updateDataMask = useCallback((values) => {\n    const emptyFilter = enableEmptyFilter && !inverseSelection && !(values != null && values.length);\n    const suffix = inverseSelection && values != null && values.length ? t(' (excluded)') : '';\n    dispatchDataMask({\n      type: 'filterState',\n      __cache: filterState,\n      extraFormData: getSelectExtraFormData(col, values, emptyFilter, inverseSelection),\n      filterState: {\n        ...filterState,\n        label: values != null && values.length ?\n        `${(values || []).\n        map((value) => labelFormatter(value, datatype)).\n        join(', ')}${suffix}` :\n        undefined,\n        value: appSection === AppSection.FILTER_CONFIG_MODAL && defaultToFirstItem ?\n        undefined :\n        values } });\n\n\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [\n  appSection,\n  col,\n  datatype,\n  defaultToFirstItem,\n  dispatchDataMask,\n  enableEmptyFilter,\n  inverseSelection,\n  JSON.stringify(filterState),\n  labelFormatter]);\n\n  const isDisabled = appSection === AppSection.FILTER_CONFIG_MODAL && defaultToFirstItem;\n  const onSearch = useMemo(() => debounce((search) => {\n    setSearch(search);\n    if (searchAllOptions) {\n      dispatchDataMask({\n        type: 'ownState',\n        ownState: {\n          coltypeMap: initialColtypeMap,\n          search } });\n\n\n    }\n  }, SLOW_DEBOUNCE), [dispatchDataMask, initialColtypeMap, searchAllOptions]);\n  const handleBlur = useCallback(() => {\n    unsetFocusedFilter();\n  }, [unsetFocusedFilter]);\n  const handleChange = useCallback((value) => {\n    const values = value === null ? [null] : ensureIsArray(value);\n    if (values.length === 0) {\n      updateDataMask(null);\n    } else\n    {\n      updateDataMask(values);\n    }\n  }, [updateDataMask]);\n  const placeholderText = data.length === 0 ?\n  t('No data') :\n  tn('%s option', '%s options', data.length, data.length);\n  const formItemExtra = useMemo(() => {\n    if (filterState.validateMessage) {\n      return ___EmotionJSX(StatusMessage, { status: filterState.validateStatus },\n      filterState.validateMessage);\n\n    }\n    return undefined;\n  }, [filterState.validateMessage, filterState.validateStatus]);\n  const uniqueOptions = useMemo(() => {\n    const allOptions = [...data];\n    return _uniqWith(allOptions, _isEqual).map((row) => {\n      const [value] = groupby.map((col) => row[col]);\n      return {\n        label: labelFormatter(value, datatype),\n        value,\n        isNewOption: false };\n\n    });\n  }, [data, datatype, groupby, labelFormatter]);\n  const options = useMemo(() => {\n    if (search && !multiSelect && !hasOption(search, uniqueOptions, true)) {\n      uniqueOptions.unshift({\n        label: search,\n        value: search,\n        isNewOption: true });\n\n    }\n    return uniqueOptions;\n  }, [multiSelect, search, uniqueOptions]);\n  const sortComparator = useCallback((a, b) => {\n    const labelComparator = propertyComparator('label');\n    if (formData.sortAscending) {\n      return labelComparator(a, b);\n    }\n    return labelComparator(b, a);\n  }, [formData.sortAscending]);\n  useEffect(() => {\n    if (defaultToFirstItem && filterState.value === undefined) {\n      // initialize to first value if set to default to first item\n      const firstItem = data[0] ?\n      groupby.map((col) => data[0][col]) :\n      null;\n      // firstItem[0] !== undefined for a case when groupby changed but new data still not fetched\n      // TODO: still need repopulate default value in config modal when column changed\n      if ((firstItem == null ? void 0 : firstItem[0]) !== undefined) {\n        updateDataMask(firstItem);\n      }\n    } else\n    if (isDisabled) {\n      // empty selection if filter is disabled\n      updateDataMask(null);\n    } else\n    {\n      // reset data mask based on filter state\n      updateDataMask(filterState.value);\n    }\n  }, [\n  col,\n  isDisabled,\n  defaultToFirstItem,\n  enableEmptyFilter,\n  inverseSelection,\n  updateDataMask,\n  data,\n  groupby,\n  JSON.stringify(filterState.value)]);\n\n  useEffect(() => {\n    setDataMask(dataMask);\n  }, [JSON.stringify(dataMask)]);\n  return ___EmotionJSX(FilterPluginStyle, { height: height, width: width },\n  ___EmotionJSX(StyledFormItem, { validateStatus: filterState.validateStatus, extra: formItemExtra },\n  ___EmotionJSX(Select, { allowClear: true, allowNewOptions: true, allowSelectAll: !searchAllOptions\n    // @ts-ignore\n    , value: filterState.value || [], disabled: isDisabled, getPopupContainer: showOverflow ?\n    () => (parentRef == null ? void 0 : parentRef.current) || document.body :\n    (trigger) => (trigger == null ? void 0 : trigger.parentNode) || document.body, showSearch: showSearch, mode: multiSelect ? 'multiple' : 'single', placeholder: placeholderText, onSearch: onSearch, onBlur: handleBlur, onFocus: setFocusedFilter, onMouseEnter: setHoveredFilter, onMouseLeave: unsetHoveredFilter\n    // @ts-ignore\n    , onChange: handleChange, ref: inputRef, loading: isRefreshing, oneLine: filterBarOrientation === FilterBarOrientation.HORIZONTAL, invertSelection: inverseSelection, options: options, sortComparator: sortComparator, onDropdownVisibleChange: setFilterActive })));\n\n\n}","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useMemo","useState","AppSection","ensureIsArray","getColumnLabel","smartDateDetailedFormatter","t","tn","debounce","useImmerReducer","Select","SLOW_DEBOUNCE","hasOption","propertyComparator","FilterBarOrientation","FilterPluginStyle","StatusMessage","StyledFormItem","getDataRecordFormatter","getSelectExtraFormData","reducer","draft","action","type","ownState","extraFormData","__cache","filterState","PluginFilterSelect","props","coltypeMap","data","formData","height","isRefreshing","width","setDataMask","setHoveredFilter","unsetHoveredFilter","setFocusedFilter","unsetFocusedFilter","setFilterActive","appSection","showOverflow","parentRef","inputRef","filterBarOrientation","enableEmptyFilter","multiSelect","showSearch","inverseSelection","defaultToFirstItem","searchAllOptions","groupby","map","col","initialColtypeMap","search","setSearch","dataMask","dispatchDataMask","datatype","labelFormatter","timeFormatter","updateDataMask","values","emptyFilter","length","suffix","label","value","join","undefined","FILTER_CONFIG_MODAL","JSON","stringify","isDisabled","onSearch","handleBlur","handleChange","placeholderText","formItemExtra","validateMessage","validateStatus","uniqueOptions","allOptions","row","isNewOption","options","unshift","sortComparator","a","b","labelComparator","sortAscending","firstItem","current","document","body","trigger","parentNode","HORIZONTAL"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/filters/components/Select/SelectFilterPlugin.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-param-reassign */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport {\n  AppSection,\n  DataMask,\n  ensureIsArray,\n  ExtraFormData,\n  GenericDataType,\n  getColumnLabel,\n  JsonObject,\n  smartDateDetailedFormatter,\n  t,\n  tn,\n} from '@superset-ui/core';\nimport { LabeledValue as AntdLabeledValue } from 'antd/lib/select';\nimport debounce from 'lodash/debounce';\nimport { useImmerReducer } from 'use-immer';\nimport { Select } from 'src/components';\nimport { SLOW_DEBOUNCE } from 'src/constants';\nimport { hasOption, propertyComparator } from 'src/components/Select/utils';\nimport { FilterBarOrientation } from 'src/dashboard/types';\nimport { uniqWith, isEqual } from 'lodash';\nimport { PluginFilterSelectProps, SelectValue } from './types';\nimport { FilterPluginStyle, StatusMessage, StyledFormItem } from '../common';\nimport { getDataRecordFormatter, getSelectExtraFormData } from '../../utils';\n\ntype DataMaskAction =\n  | { type: 'ownState'; ownState: JsonObject }\n  | {\n      type: 'filterState';\n      __cache: JsonObject;\n      extraFormData: ExtraFormData;\n      filterState: { value: SelectValue; label?: string };\n    };\n\nfunction reducer(\n  draft: DataMask & { __cache?: JsonObject },\n  action: DataMaskAction,\n) {\n  switch (action.type) {\n    case 'ownState':\n      draft.ownState = {\n        ...draft.ownState,\n        ...action.ownState,\n      };\n      return draft;\n    case 'filterState':\n      draft.extraFormData = action.extraFormData;\n      // eslint-disable-next-line no-underscore-dangle\n      draft.__cache = action.__cache;\n      draft.filterState = { ...draft.filterState, ...action.filterState };\n      return draft;\n    default:\n      return draft;\n  }\n}\n\nexport default function PluginFilterSelect(props: PluginFilterSelectProps) {\n  const {\n    coltypeMap,\n    data,\n    filterState,\n    formData,\n    height,\n    isRefreshing,\n    width,\n    setDataMask,\n    setHoveredFilter,\n    unsetHoveredFilter,\n    setFocusedFilter,\n    unsetFocusedFilter,\n    setFilterActive,\n    appSection,\n    showOverflow,\n    parentRef,\n    inputRef,\n    filterBarOrientation,\n  } = props;\n  const {\n    enableEmptyFilter,\n    multiSelect,\n    showSearch,\n    inverseSelection,\n    defaultToFirstItem,\n    searchAllOptions,\n  } = formData;\n  const groupby = useMemo(\n    () => ensureIsArray(formData.groupby).map(getColumnLabel),\n    [formData.groupby],\n  );\n  const [col] = groupby;\n  const [initialColtypeMap] = useState(coltypeMap);\n  const [search, setSearch] = useState('');\n  const [dataMask, dispatchDataMask] = useImmerReducer(reducer, {\n    extraFormData: {},\n    filterState,\n  });\n  const datatype: GenericDataType = coltypeMap[col];\n  const labelFormatter = useMemo(\n    () =>\n      getDataRecordFormatter({\n        timeFormatter: smartDateDetailedFormatter,\n      }),\n    [],\n  );\n\n  const updateDataMask = useCallback(\n    (values: SelectValue) => {\n      const emptyFilter =\n        enableEmptyFilter && !inverseSelection && !values?.length;\n\n      const suffix = inverseSelection && values?.length ? t(' (excluded)') : '';\n      dispatchDataMask({\n        type: 'filterState',\n        __cache: filterState,\n        extraFormData: getSelectExtraFormData(\n          col,\n          values,\n          emptyFilter,\n          inverseSelection,\n        ),\n        filterState: {\n          ...filterState,\n          label: values?.length\n            ? `${(values || [])\n                .map(value => labelFormatter(value, datatype))\n                .join(', ')}${suffix}`\n            : undefined,\n          value:\n            appSection === AppSection.FILTER_CONFIG_MODAL && defaultToFirstItem\n              ? undefined\n              : values,\n        },\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      appSection,\n      col,\n      datatype,\n      defaultToFirstItem,\n      dispatchDataMask,\n      enableEmptyFilter,\n      inverseSelection,\n      JSON.stringify(filterState),\n      labelFormatter,\n    ],\n  );\n\n  const isDisabled =\n    appSection === AppSection.FILTER_CONFIG_MODAL && defaultToFirstItem;\n\n  const onSearch = useMemo(\n    () =>\n      debounce((search: string) => {\n        setSearch(search);\n        if (searchAllOptions) {\n          dispatchDataMask({\n            type: 'ownState',\n            ownState: {\n              coltypeMap: initialColtypeMap,\n              search,\n            },\n          });\n        }\n      }, SLOW_DEBOUNCE),\n    [dispatchDataMask, initialColtypeMap, searchAllOptions],\n  );\n\n  const handleBlur = useCallback(() => {\n    unsetFocusedFilter();\n  }, [unsetFocusedFilter]);\n\n  const handleChange = useCallback(\n    (value?: SelectValue | number | string) => {\n      const values = value === null ? [null] : ensureIsArray(value);\n\n      if (values.length === 0) {\n        updateDataMask(null);\n      } else {\n        updateDataMask(values);\n      }\n    },\n    [updateDataMask],\n  );\n\n  const placeholderText =\n    data.length === 0\n      ? t('No data')\n      : tn('%s option', '%s options', data.length, data.length);\n\n  const formItemExtra = useMemo(() => {\n    if (filterState.validateMessage) {\n      return (\n        <StatusMessage status={filterState.validateStatus}>\n          {filterState.validateMessage}\n        </StatusMessage>\n      );\n    }\n    return undefined;\n  }, [filterState.validateMessage, filterState.validateStatus]);\n\n  const uniqueOptions = useMemo(() => {\n    const allOptions = [...data];\n    return uniqWith(allOptions, isEqual).map(row => {\n      const [value] = groupby.map(col => row[col]);\n      return {\n        label: labelFormatter(value, datatype),\n        value,\n        isNewOption: false,\n      };\n    });\n  }, [data, datatype, groupby, labelFormatter]);\n\n  const options = useMemo(() => {\n    if (search && !multiSelect && !hasOption(search, uniqueOptions, true)) {\n      uniqueOptions.unshift({\n        label: search,\n        value: search,\n        isNewOption: true,\n      });\n    }\n    return uniqueOptions;\n  }, [multiSelect, search, uniqueOptions]);\n\n  const sortComparator = useCallback(\n    (a: AntdLabeledValue, b: AntdLabeledValue) => {\n      const labelComparator = propertyComparator('label');\n      if (formData.sortAscending) {\n        return labelComparator(a, b);\n      }\n      return labelComparator(b, a);\n    },\n    [formData.sortAscending],\n  );\n\n  useEffect(() => {\n    if (defaultToFirstItem && filterState.value === undefined) {\n      // initialize to first value if set to default to first item\n      const firstItem: SelectValue = data[0]\n        ? (groupby.map(col => data[0][col]) as string[])\n        : null;\n      // firstItem[0] !== undefined for a case when groupby changed but new data still not fetched\n      // TODO: still need repopulate default value in config modal when column changed\n      if (firstItem?.[0] !== undefined) {\n        updateDataMask(firstItem);\n      }\n    } else if (isDisabled) {\n      // empty selection if filter is disabled\n      updateDataMask(null);\n    } else {\n      // reset data mask based on filter state\n      updateDataMask(filterState.value);\n    }\n  }, [\n    col,\n    isDisabled,\n    defaultToFirstItem,\n    enableEmptyFilter,\n    inverseSelection,\n    updateDataMask,\n    data,\n    groupby,\n    JSON.stringify(filterState.value),\n  ]);\n\n  useEffect(() => {\n    setDataMask(dataMask);\n  }, [JSON.stringify(dataMask)]);\n\n  return (\n    <FilterPluginStyle height={height} width={width}>\n      <StyledFormItem\n        validateStatus={filterState.validateStatus}\n        extra={formItemExtra}\n      >\n        <Select\n          allowClear\n          allowNewOptions\n          allowSelectAll={!searchAllOptions}\n          // @ts-ignore\n          value={filterState.value || []}\n          disabled={isDisabled}\n          getPopupContainer={\n            showOverflow\n              ? () => (parentRef?.current as HTMLElement) || document.body\n              : (trigger: HTMLElement) =>\n                  (trigger?.parentNode as HTMLElement) || document.body\n          }\n          showSearch={showSearch}\n          mode={multiSelect ? 'multiple' : 'single'}\n          placeholder={placeholderText}\n          onSearch={onSearch}\n          onBlur={handleBlur}\n          onFocus={setFocusedFilter}\n          onMouseEnter={setHoveredFilter}\n          onMouseLeave={unsetHoveredFilter}\n          // @ts-ignore\n          onChange={handleChange}\n          ref={inputRef}\n          loading={isRefreshing}\n          oneLine={filterBarOrientation === FilterBarOrientation.HORIZONTAL}\n          invertSelection={inverseSelection}\n          options={options}\n          sortComparator={sortComparator}\n          onDropdownVisibleChange={setFilterActive}\n        />\n      </StyledFormItem>\n    </FilterPluginStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}