{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport const COLOR_SATURATION = [0.7, 0.4];\nexport const LABEL_FONTSIZE = 11;\nexport const BORDER_WIDTH = 2;\nexport const GAP_WIDTH = 2;\nexport const BORDER_COLOR = '#fff';\nexport const extractTreePathInfo = (treePathInfo) => {\n  const treePath = (treePathInfo != null ? treePathInfo : []).\n  map((pathInfo) => (pathInfo == null ? void 0 : pathInfo.name) || '').\n  filter((path) => path !== '');\n  // the 1st tree path is metric label\n  const metricLabel = treePath.shift() || '';\n  return { metricLabel, treePath };\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(COLOR_SATURATION, \"COLOR_SATURATION\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/constants.ts\");reactHotLoader.register(LABEL_FONTSIZE, \"LABEL_FONTSIZE\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/constants.ts\");reactHotLoader.register(BORDER_WIDTH, \"BORDER_WIDTH\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/constants.ts\");reactHotLoader.register(GAP_WIDTH, \"GAP_WIDTH\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/constants.ts\");reactHotLoader.register(BORDER_COLOR, \"BORDER_COLOR\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/constants.ts\");reactHotLoader.register(extractTreePathInfo, \"extractTreePathInfo\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/constants.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAqBA,OAAO,MAAMA,gBAAgB,GAAG,CAAC,GAAD,EAAM,GAAN,CAAzB;AACP,OAAO,MAAMC,cAAc,GAAG,EAAvB;AACP,OAAO,MAAMC,YAAY,GAAG,CAArB;AACP,OAAO,MAAMC,SAAS,GAAG,CAAlB;AACP,OAAO,MAAMC,YAAY,GAAG,MAArB;AAEP,OAAO,MAAMC,mBAAmB,GAAG,CACjCC,YADiC,KAE/B;EACF,MAAMC,QAAQ,GAAG,CAACD,YAAD,WAACA,YAAD,GAAiB,EAAjB;EACdE,GADc,CACV,SAAQ,KAAI,SAAQ,QAAR,oBAAQ,CAAEC,IAAV,KAAkB,EADpB;EAEdC,MAFc,CAEP,KAAI,KAAIC,IAAI,KAAK,EAFV,CAAjB;EAIA;EACA,MAAMC,WAAW,GAAGL,QAAQ,CAACM,KAAT,MAAoB,EAAxC;EACA,OAAO,EAAED,WAAF,EAAeL,QAAf,EAAP;AACD,CAVM,C,iLANMP,gB,wKACAC,c,sKACAC,Y,oKACAC,S,iKACAC,Y,oKAEAC,mB","names":["COLOR_SATURATION","LABEL_FONTSIZE","BORDER_WIDTH","GAP_WIDTH","BORDER_COLOR","extractTreePathInfo","treePathInfo","treePath","map","name","filter","path","metricLabel","shift"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/constants.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { TreePathInfo } from '../types';\n\nexport const COLOR_SATURATION = [0.7, 0.4];\nexport const LABEL_FONTSIZE = 11;\nexport const BORDER_WIDTH = 2;\nexport const GAP_WIDTH = 2;\nexport const BORDER_COLOR = '#fff';\n\nexport const extractTreePathInfo = (\n  treePathInfo: TreePathInfo[] | undefined,\n) => {\n  const treePath = (treePathInfo ?? [])\n    .map(pathInfo => pathInfo?.name || '')\n    .filter(path => path !== '');\n\n  // the 1st tree path is metric label\n  const metricLabel = treePath.shift() || '';\n  return { metricLabel, treePath };\n};\n"]},"metadata":{},"sourceType":"module"}