{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport { useFilteredTableData, useTableColumns } from 'src/explore/components/DataTableControl';\nimport { TableControls } from './DataTableControls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const SingleQueryResultPane = (_ref) => {let { data, colnames, coltypes, datasourceId, dataSize = 50, isVisible } = _ref;\n  const [filterText, setFilterText] = useState('');\n  // this is to preserve the order of the columns, even if there are integer values,\n  // while also only grabbing the first column's keys\n  const columns = useTableColumns(colnames, coltypes, data, datasourceId, isVisible, {}, // moreConfig\n  true);\n  const filteredData = useFilteredTableData(filterText, data);\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(TableControls, { data: filteredData, columnNames: colnames, columnTypes: coltypes, datasourceId: datasourceId, onInputChange: (input) => setFilterText(input), isLoading: false }),\n  ___EmotionJSX(TableView, { columns: columns, data: filteredData, pageSize: dataSize, noDataText: t('No results'), emptyWrapperType: EmptyWrapperType.Small, className: \"table-condensed\", isPaginationSticky: true, showRowCount: false, small: true }));\n\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,CAAT,QAAkB,mBAAlB;AACA,OAAOC,SAAP,IAAoBC,gBAApB,QAA4C,0BAA5C;AACA,SACEC,oBADF,EAEEC,eAFF,QAGO,yCAHP;AAIA,SAASC,aAAT,QAA8B,qBAA9B,C;AAGA,OAAO,MAAMC,qBAAqB,GAAG,UAOL,KAPM,EACpCC,IADoC,EAEpCC,QAFoC,EAGpCC,QAHoC,EAIpCC,YAJoC,EAKpCC,QAAQ,GAAG,EALyB,EAMpCC,SANoC,EAON;EAC9B,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;EAEA;EACA;EACA,MAAMgB,OAAO,GAAGX,eAAe,CAC7BI,QAD6B,EAE7BC,QAF6B,EAG7BF,IAH6B,EAI7BG,YAJ6B,EAK7BE,SAL6B,EAM7B,EAN6B,EAMzB;EACJ,IAP6B,CAA/B;EASA,MAAMI,YAAY,GAAGb,oBAAoB,CAACU,UAAD,EAAaN,IAAb,CAAzC;EAEA,OACE;EACE,cAAC,aAAD,IACE,IAAI,EAAES,YADR,EAEE,WAAW,EAAER,QAFf,EAGE,WAAW,EAAEC,QAHf,EAIE,YAAY,EAAEC,YAJhB,EAKE,aAAa,EAAE,MAAK,KAAII,aAAa,CAACG,KAAD,CALvC,EAME,SAAS,EAAE,KANb,GADF;EASE,cAAC,SAAD,IACE,OAAO,EAAEF,OADX,EAEE,IAAI,EAAEC,YAFR,EAGE,QAAQ,EAAEL,QAHZ,EAIE,UAAU,EAAEX,CAAC,CAAC,YAAD,CAJf,EAKE,gBAAgB,EAAEE,gBAAgB,CAACgB,KALrC,EAME,SAAS,EAAC,iBANZ,EAOE,kBAAkB,MAPpB,EAQE,YAAY,EAAE,KARhB,EASE,KAAK,MATP,GATF,CADF;;AAuBD,CA9CM","names":["React","useState","t","TableView","EmptyWrapperType","useFilteredTableData","useTableColumns","TableControls","SingleQueryResultPane","data","colnames","coltypes","datasourceId","dataSize","isVisible","filterText","setFilterText","columns","filteredData","input","Small"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/explore/components/DataTablesPane/components/SingleQueryResultPane.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport {\n  useFilteredTableData,\n  useTableColumns,\n} from 'src/explore/components/DataTableControl';\nimport { TableControls } from './DataTableControls';\nimport { SingleQueryResultPaneProp } from '../types';\n\nexport const SingleQueryResultPane = ({\n  data,\n  colnames,\n  coltypes,\n  datasourceId,\n  dataSize = 50,\n  isVisible,\n}: SingleQueryResultPaneProp) => {\n  const [filterText, setFilterText] = useState('');\n\n  // this is to preserve the order of the columns, even if there are integer values,\n  // while also only grabbing the first column's keys\n  const columns = useTableColumns(\n    colnames,\n    coltypes,\n    data,\n    datasourceId,\n    isVisible,\n    {}, // moreConfig\n    true, // allowHTML\n  );\n  const filteredData = useFilteredTableData(filterText, data);\n\n  return (\n    <>\n      <TableControls\n        data={filteredData}\n        columnNames={colnames}\n        columnTypes={coltypes}\n        datasourceId={datasourceId}\n        onInputChange={input => setFilterText(input)}\n        isLoading={false}\n      />\n      <TableView\n        columns={columns}\n        data={filteredData}\n        pageSize={dataSize}\n        noDataText={t('No results')}\n        emptyWrapperType={EmptyWrapperType.Small}\n        className=\"table-condensed\"\n        isPaginationSticky\n        showRowCount={false}\n        small\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}