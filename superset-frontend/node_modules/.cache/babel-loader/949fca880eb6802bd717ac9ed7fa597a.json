{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { FeatureFlag, t } from '@superset-ui/core';\nimport React, { useMemo, useCallback } from 'react';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport { createFetchRelated, createErrorHandler, Actions } from 'src/views/CRUD/utils';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport SubMenu from 'src/features/home/SubMenu';\nimport ListView, { FilterOperator } from 'src/components/ListView';\nimport { dangerouslyGetItemDoNotUse } from 'src/utils/localStorageHelpers';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport Icons from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\nimport FacePile from 'src/components/FacePile';\nimport { Link } from 'react-router-dom';\nimport { deleteTags } from 'src/features/tags/tags';\nimport { Tag as AntdTag } from 'antd';\nimport TagCard from 'src/features/tags/TagCard';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst PAGE_SIZE = 25;\nfunction TagList(props) {\n  const { addDangerToast, addSuccessToast, user: { userId } } = props;\n  const { state: { loading, resourceCount: tagCount, resourceCollection: tags, bulkSelectEnabled }, hasPerm, fetchData, toggleBulkSelect, refreshData } = useListViewResource('tag', t('tag'), addDangerToast);\n  // TODO: Fix usage of localStorage keying on the user id\n  const userKey = dangerouslyGetItemDoNotUse(userId == null ? void 0 : userId.toString(), null);\n  const canDelete = hasPerm('can_write');\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n  function handleTagsDelete(tags, callback, error) {\n    // TODO what permissions need to be checked here?\n    deleteTags(tags, callback, error);\n    refreshData();\n  }\n  const columns = useMemo(() => [\n  {\n    Cell: (_ref) => {let { row: { original: { name: tagName } } } = _ref;return ___EmotionJSX(AntdTag, null,\n      ___EmotionJSX(Link, { to: `/superset/all_entities/?tags=${tagName}` },\n      tagName));},\n\n\n    Header: t('Name'),\n    accessor: 'name' },\n\n  {\n    Cell: (_ref2) => {let { row: { original: { changed_on_delta_humanized: changedOn } } } = _ref2;return ___EmotionJSX(\"span\", { className: \"no-wrap\" }, changedOn);},\n    Header: t('Modified'),\n    accessor: 'changed_on_delta_humanized',\n    size: 'xl' },\n\n  {\n    Cell: (_ref3) => {let { row: { original: { created_by: createdBy } } } = _ref3;return createdBy ? ___EmotionJSX(FacePile, { users: [createdBy] }) : '';},\n    Header: t('Created by'),\n    accessor: 'created_by',\n    disableSortBy: true,\n    size: 'xl' },\n\n  {\n    Cell: (_ref4) => {let { row: { original } } = _ref4;\n      const handleDelete = () => handleTagsDelete([original], addSuccessToast, addDangerToast);\n      return ___EmotionJSX(Actions, { className: \"actions\" },\n      canDelete && ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: ___EmotionJSX(React.Fragment, null,\n        t('Are you sure you want to delete'), ' ',\n        ___EmotionJSX(\"b\", null, original.dashboard_title), \"?\"),\n        onConfirm: handleDelete },\n      (confirmDelete) => ___EmotionJSX(Tooltip, { id: \"delete-action-tooltip\", title: t('Delete'), placement: \"bottom\" },\n      ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: confirmDelete },\n      ___EmotionJSX(Icons.Trash, { \"data-test\": \"dashboard-list-trash-icon\" })))));\n\n\n\n\n    },\n    Header: t('Actions'),\n    id: 'actions',\n    hidden: !canDelete,\n    disableSortBy: true }],\n\n  [userId, canDelete, refreshData, addSuccessToast, addDangerToast]);\n  const filters = useMemo(() => {\n    const filters_list = [\n    {\n      Header: t('Created by'),\n      id: 'created_by',\n      input: 'select',\n      operator: FilterOperator.relationOneMany,\n      unfilteredLabel: t('All'),\n      fetchSelects: createFetchRelated('tag', 'created_by', createErrorHandler((errMsg) => addDangerToast(t('An error occurred while fetching tag created by values: %s', errMsg))), props.user),\n      paginate: true },\n\n    {\n      Header: t('Search'),\n      id: 'name',\n      input: 'search',\n      operator: FilterOperator.contains }];\n\n\n    return filters_list;\n  }, [addDangerToast, props.user]);\n  const sortTypes = [\n  {\n    desc: false,\n    id: 'name',\n    label: t('Alphabetical'),\n    value: 'alphabetical' },\n\n  {\n    desc: true,\n    id: 'changed_on_delta_humanized',\n    label: t('Recently modified'),\n    value: 'recently_modified' },\n\n  {\n    desc: false,\n    id: 'changed_on_delta_humanized',\n    label: t('Least recently modified'),\n    value: 'least_recently_modified' }];\n\n\n  const renderCard = useCallback((tag) => ___EmotionJSX(TagCard, { tag: tag, hasPerm: hasPerm, bulkSelectEnabled: bulkSelectEnabled, refreshData: refreshData, showThumbnails: userKey ?\n    userKey.thumbnails :\n    isFeatureEnabled(FeatureFlag.THUMBNAILS), userId: userId, loading: loading, addDangerToast: addDangerToast, addSuccessToast: addSuccessToast }), [\n  addDangerToast,\n  addSuccessToast,\n  bulkSelectEnabled,\n  hasPerm,\n  loading,\n  userId,\n  refreshData,\n  userKey]);\n\n  const subMenuButtons = [];\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select',\n      onClick: toggleBulkSelect });\n\n  }\n  const handleBulkDelete = (tagsToDelete) => handleTagsDelete(tagsToDelete, addSuccessToast, addDangerToast);\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, { name: t('Tags'), buttons: subMenuButtons }),\n  ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: t('Are you sure you want to delete the selected tags?'), onConfirm: handleBulkDelete },\n  (confirmDelete) => {\n    const bulkActions = [];\n    if (canDelete) {\n      bulkActions.push({\n        key: 'delete',\n        name: t('Delete'),\n        type: 'danger',\n        onSelect: confirmDelete });\n\n    }\n    return ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(ListView, { bulkActions: bulkActions, bulkSelectEnabled: bulkSelectEnabled, cardSortSelectOptions: sortTypes, className: \"dashboard-list-view\", columns: columns, count: tagCount, data: tags.filter((tag) => {var _context;return !_includesInstanceProperty(_context = tag.name).call(_context, ':');}), disableBulkSelect: toggleBulkSelect, fetchData: fetchData, filters: filters, initialSort: initialSort, loading: loading, pageSize: PAGE_SIZE, showThumbnails: userKey ?\n      userKey.thumbnails :\n      isFeatureEnabled(FeatureFlag.THUMBNAILS), renderCard: renderCard, defaultViewMode: isFeatureEnabled(FeatureFlag.LISTVIEWS_DEFAULT_CARD_VIEW) ?\n      'card' :\n      'table' }));\n\n  }));\n\n\n}__signature__(TagList, \"useListViewResource{{ state: { loading, resourceCount: tagCount, resourceCollection: tags, bulkSelectEnabled, }, hasPerm, fetchData, toggleBulkSelect, refreshData, }}\\nuseMemo{columns}\\nuseMemo{filters}\\nuseCallback{renderCard}\", () => [useListViewResource]);const _default =\nwithToasts(TagList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/Tags/index.tsx\");reactHotLoader.register(TagList, \"TagList\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/Tags/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/Tags/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wYAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,WAAT,EAAsBC,CAAtB,QAA+B,mBAA/B;AACA,OAAOC,KAAP,IAAgBC,OAAhB,EAAyBC,WAAzB,QAA4C,OAA5C;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,OAHF,QAIO,sBAJP;AAKA,SAASC,mBAAT,QAAoC,sBAApC;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAOC,OAAP,MAAsC,2BAAtC;AACA,OAAOC,QAAP,IAGEC,cAHF,QAIO,yBAJP;AAKA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,GAAG,IAAIC,OAAhB,QAA+B,MAA/B;AAEA,OAAOC,OAAP,MAAoB,2BAApB,C;AAEA,MAAMC,SAAS,GAAG,EAAlB;AAYA,SAASC,OAAT,CAAiBC,KAAjB,EAAoC;EAClC,MAAM,EACJC,cADI,EAEJC,eAFI,EAGJC,IAAI,EAAE,EAAEC,MAAF,EAHF,KAIFJ,KAJJ;EAMA,MAAM,EACJK,KAAK,EAAE,EACLC,OADK,EAELC,aAAa,EAAEC,QAFV,EAGLC,kBAAkB,EAAEC,IAHf,EAILC,iBAJK,EADH,EAOJC,OAPI,EAQJC,SARI,EASJC,gBATI,EAUJC,WAVI,KAWFhC,mBAAmB,CAAM,KAAN,EAAaR,CAAC,CAAC,KAAD,CAAd,EAAuB0B,cAAvB,CAXvB;EAaA;EACA,MAAMe,OAAO,GAAG5B,0BAA0B,CAACgB,MAAD,oBAACA,MAAM,CAAEa,QAAR,EAAD,EAAqB,IAArB,CAA1C;EAEA,MAAMC,SAAS,GAAGN,OAAO,CAAC,WAAD,CAAzB;EAEA,MAAMO,WAAW,GAAG,CAAC,EAAEC,EAAE,EAAE,4BAAN,EAAoCC,IAAI,EAAE,IAA1C,EAAD,CAApB;EAEA,SAASC,gBAAT,CACEZ,IADF,EAEEa,QAFF,EAGEC,KAHF,EAG+B;IAE7B;IACA9B,UAAU,CAACgB,IAAD,EAAOa,QAAP,EAAiBC,KAAjB,CAAV;IACAT,WAAW;EACZ;EAED,MAAMU,OAAO,GAAGhD,OAAO,CACrB,MAAM;EACJ;IACEiD,IAAI,EAAE,eAAC,EACLC,GAAG,EAAE,EACHC,QAAQ,EAAE,EAAEC,IAAI,EAAEC,OAAR,EADP,EADA,EAAD,eAKJ,cAAC,OAAD;MACE,cAAC,IAAD,IAAM,EAAE,EAAE,gCAAgCA,OAAO,EAAjD;MACGA,OADH,CADF,CALI,EADR;;;IAYEC,MAAM,EAAExD,CAAC,CAAC,MAAD,CAZX;IAaEyD,QAAQ,EAAE,MAbZ,EADI;;EAgBJ;IACEN,IAAI,EAAE,gBAAC,EACLC,GAAG,EAAE,EACHC,QAAQ,EAAE,EAAEK,0BAA0B,EAAEC,SAA9B,EADP,EADA,EAAD,gBAIK,wBAAM,SAAS,EAAC,SAAhB,IAA2BA,SAA3B,CAJL,EADR;IAMEH,MAAM,EAAExD,CAAC,CAAC,UAAD,CANX;IAOEyD,QAAQ,EAAE,4BAPZ;IAQEG,IAAI,EAAE,IARR,EAhBI;;EA0BJ;IACET,IAAI,EAAE,gBAAC,EACLC,GAAG,EAAE,EACHC,QAAQ,EAAE,EAAEQ,UAAU,EAAEC,SAAd,EADP,EADA,EAAD,gBAIMA,SAAS,GAAG,cAAC,QAAD,IAAU,KAAK,EAAE,CAACA,SAAD,CAAjB,GAAH,GAAsC,EAJrD,EADR;IAMEN,MAAM,EAAExD,CAAC,CAAC,YAAD,CANX;IAOEyD,QAAQ,EAAE,YAPZ;IAQEM,aAAa,EAAE,IARjB;IASEH,IAAI,EAAE,IATR,EA1BI;;EAqCJ;IACET,IAAI,EAAE,WAA+B,KAA9B,EAAEC,GAAG,EAAE,EAAEC,QAAF,EAAP,EAA8B;MACnC,MAAMW,YAAY,GAAG,MACnBjB,gBAAgB,CAAC,CAACM,QAAD,CAAD,EAAa1B,eAAb,EAA8BD,cAA9B,CADlB;MAEA,OACE,cAAC,OAAD,IAAS,SAAS,EAAC,SAAnB;MACGiB,SAAS,IACR,cAAC,mBAAD,IACE,KAAK,EAAE3C,CAAC,CAAC,gBAAD,CADV,EAEE,WAAW,EACT;QACGA,CAAC,CAAC,iCAAD,CADJ,EACyC,GADzC;QAEE,yBAAIqD,QAAQ,CAACY,eAAb,CAFF,MAHJ;QAQE,SAAS,EAAED,YARb;MAUG,cAAa,KACZ,cAAC,OAAD,IACE,EAAE,EAAC,uBADL,EAEE,KAAK,EAAEhE,CAAC,CAAC,QAAD,CAFV,EAGE,SAAS,EAAC,QAHZ;MAKE,wBACE,IAAI,EAAC,QADP,EAEE,QAAQ,EAAE,CAFZ,EAGE,SAAS,EAAC,eAHZ,EAIE,OAAO,EAAEkE,aAJX;MAME,cAAC,KAAD,CAAO,KAAP,IAAa,aAAU,2BAAvB,GANF,CALF,CAXJ,CAFJ,CADF;;;;;IAiCD,CArCH;IAsCEV,MAAM,EAAExD,CAAC,CAAC,SAAD,CAtCX;IAuCE6C,EAAE,EAAE,SAvCN;IAwCEsB,MAAM,EAAE,CAACxB,SAxCX;IAyCEoB,aAAa,EAAE,IAzCjB,EArCI,CADe;;EAkFrB,CAAClC,MAAD,EAASc,SAAT,EAAoBH,WAApB,EAAiCb,eAAjC,EAAkDD,cAAlD,CAlFqB,CAAvB;EAqFA,MAAM0C,OAAO,GAAYlE,OAAO,CAAC,MAAK;IACpC,MAAMmE,YAAY,GAAG;IACnB;MACEb,MAAM,EAAExD,CAAC,CAAC,YAAD,CADX;MAEE6C,EAAE,EAAE,YAFN;MAGEyB,KAAK,EAAE,QAHT;MAIEC,QAAQ,EAAE3D,cAAc,CAAC4D,eAJ3B;MAKEC,eAAe,EAAEzE,CAAC,CAAC,KAAD,CALpB;MAME0E,YAAY,EAAErE,kBAAkB,CAC9B,KAD8B,EAE9B,YAF8B,EAG9BC,kBAAkB,CAAC,OAAM,KACvBoB,cAAc,CACZ1B,CAAC,CACC,4DADD,EAEC2E,MAFD,CADW,CADE,CAHY,EAW9BlD,KAAK,CAACG,IAXwB,CANlC;MAmBEgD,QAAQ,EAAE,IAnBZ,EADmB;;IAsBnB;MACEpB,MAAM,EAAExD,CAAC,CAAC,QAAD,CADX;MAEE6C,EAAE,EAAE,MAFN;MAGEyB,KAAK,EAAE,QAHT;MAIEC,QAAQ,EAAE3D,cAAc,CAACiE,QAJ3B,EAtBmB,CAArB;;;IA6BA,OAAOR,YAAP;EACD,CA/B+B,EA+B7B,CAAC3C,cAAD,EAAiBD,KAAK,CAACG,IAAvB,CA/B6B,CAAhC;EAiCA,MAAMkD,SAAS,GAAG;EAChB;IACEhC,IAAI,EAAE,KADR;IAEED,EAAE,EAAE,MAFN;IAGEkC,KAAK,EAAE/E,CAAC,CAAC,cAAD,CAHV;IAIEgF,KAAK,EAAE,cAJT,EADgB;;EAOhB;IACElC,IAAI,EAAE,IADR;IAEED,EAAE,EAAE,4BAFN;IAGEkC,KAAK,EAAE/E,CAAC,CAAC,mBAAD,CAHV;IAIEgF,KAAK,EAAE,mBAJT,EAPgB;;EAahB;IACElC,IAAI,EAAE,KADR;IAEED,EAAE,EAAE,4BAFN;IAGEkC,KAAK,EAAE/E,CAAC,CAAC,yBAAD,CAHV;IAIEgF,KAAK,EAAE,yBAJT,EAbgB,CAAlB;;;EAqBA,MAAMC,UAAU,GAAG9E,WAAW,CAC5B,CAAC+E,GAAD,KACE,cAAC,OAAD,IACE,GAAG,EAAEA,GADP,EAEE,OAAO,EAAE7C,OAFX,EAGE,iBAAiB,EAAED,iBAHrB,EAIE,WAAW,EAAEI,WAJf,EAKE,cAAc,EACZC,OAAO;IACHA,OAAO,CAAC0C,UADL;IAEH/E,gBAAgB,CAACL,WAAW,CAACqF,UAAb,CARxB,EAUE,MAAM,EAAEvD,MAVV,EAWE,OAAO,EAAEE,OAXX,EAYE,cAAc,EAAEL,cAZlB,EAaE,eAAe,EAAEC,eAbnB,GAF0B,EAkB5B;EACED,cADF;EAEEC,eAFF;EAGES,iBAHF;EAIEC,OAJF;EAKEN,OALF;EAMEF,MANF;EAOEW,WAPF;EAQEC,OARF,CAlB4B,CAA9B;;EA8BA,MAAM4C,cAAc,GAA4B,EAAhD;EACA,IAAI1C,SAAJ,EAAe;IACb0C,cAAc,CAACC,IAAf,CAAoB;MAClBhC,IAAI,EAAEtD,CAAC,CAAC,aAAD,CADW;MAElBuF,WAAW,EAAE,WAFK;MAGlB,aAAa,aAHK;MAIlBC,OAAO,EAAEjD,gBAJS,EAApB;;EAMD;EAED,MAAMkD,gBAAgB,GAAG,CAACC,YAAD,KACvB3C,gBAAgB,CAAC2C,YAAD,EAAe/D,eAAf,EAAgCD,cAAhC,CADlB;EAGA,OACE;EACE,cAAC,OAAD,IAAS,IAAI,EAAE1B,CAAC,CAAC,MAAD,CAAhB,EAA0B,OAAO,EAAEqF,cAAnC,GADF;EAEE,cAAC,mBAAD,IACE,KAAK,EAAErF,CAAC,CAAC,gBAAD,CADV,EAEE,WAAW,EAAEA,CAAC,CAAC,oDAAD,CAFhB,EAGE,SAAS,EAAEyF,gBAHb;EAKG,cAAa,KAAG;IACf,MAAME,WAAW,GAAiC,EAAlD;IACA,IAAIhD,SAAJ,EAAe;MACbgD,WAAW,CAACL,IAAZ,CAAiB;QACfM,GAAG,EAAE,QADU;QAEftC,IAAI,EAAEtD,CAAC,CAAC,QAAD,CAFQ;QAGf6F,IAAI,EAAE,QAHS;QAIfC,QAAQ,EAAE5B,aAJK,EAAjB;;IAMD;IACD,OACE;IACE,cAAC,QAAD,IACE,WAAW,EAAEyB,WADf,EAEE,iBAAiB,EAAEvD,iBAFrB,EAGE,qBAAqB,EAAE0C,SAHzB,EAIE,SAAS,EAAC,qBAJZ,EAKE,OAAO,EAAE5B,OALX,EAME,KAAK,EAAEjB,QANT,EAOE,IAAI,EAAEE,IAAI,CAAC4D,MAAL,CAAY,IAAG,0BAAI,CAAC,wCAAG,CAACzC,IAAJ,iBAAkB,GAAlB,CAAL,EAAf,CAPR,EAQE,iBAAiB,EAAEf,gBARrB,EASE,SAAS,EAAED,SATb,EAUE,OAAO,EAAE8B,OAVX,EAWE,WAAW,EAAExB,WAXf,EAYE,OAAO,EAAEb,OAZX,EAaE,QAAQ,EAAER,SAbZ,EAcE,cAAc,EACZkB,OAAO;MACHA,OAAO,CAAC0C,UADL;MAEH/E,gBAAgB,CAACL,WAAW,CAACqF,UAAb,CAjBxB,EAmBE,UAAU,EAAEH,UAnBd,EAoBE,eAAe,EACb7E,gBAAgB,CAACL,WAAW,CAACiG,2BAAb,CAAhB;MACI,MADJ;MAEI,OAvBR,GADF,CADF;;EA8BD,CA7CH,CAFF,CADF;;;AAoDD,C,cA/QQxE,O,gPAkBHhB,mB;AA+PSM,UAAU,CAACU,OAAD,C,CAAzB,wB,iLA7RMD,S,oIAYGC,O","names":["FeatureFlag","t","React","useMemo","useCallback","isFeatureEnabled","createFetchRelated","createErrorHandler","Actions","useListViewResource","ConfirmStatusChange","SubMenu","ListView","FilterOperator","dangerouslyGetItemDoNotUse","withToasts","Icons","Tooltip","FacePile","Link","deleteTags","Tag","AntdTag","TagCard","PAGE_SIZE","TagList","props","addDangerToast","addSuccessToast","user","userId","state","loading","resourceCount","tagCount","resourceCollection","tags","bulkSelectEnabled","hasPerm","fetchData","toggleBulkSelect","refreshData","userKey","toString","canDelete","initialSort","id","desc","handleTagsDelete","callback","error","columns","Cell","row","original","name","tagName","Header","accessor","changed_on_delta_humanized","changedOn","size","created_by","createdBy","disableSortBy","handleDelete","dashboard_title","confirmDelete","hidden","filters","filters_list","input","operator","relationOneMany","unfilteredLabel","fetchSelects","errMsg","paginate","contains","sortTypes","label","value","renderCard","tag","thumbnails","THUMBNAILS","subMenuButtons","push","buttonStyle","onClick","handleBulkDelete","tagsToDelete","bulkActions","key","type","onSelect","filter","LISTVIEWS_DEFAULT_CARD_VIEW"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/Tags/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { FeatureFlag, t } from '@superset-ui/core';\nimport React, { useMemo, useCallback } from 'react';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport {\n  createFetchRelated,\n  createErrorHandler,\n  Actions,\n} from 'src/views/CRUD/utils';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport { dangerouslyGetItemDoNotUse } from 'src/utils/localStorageHelpers';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport Icons from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\nimport FacePile from 'src/components/FacePile';\nimport { Link } from 'react-router-dom';\nimport { deleteTags } from 'src/features/tags/tags';\nimport { Tag as AntdTag } from 'antd';\nimport { Tag } from 'src/views/CRUD/types';\nimport TagCard from 'src/features/tags/TagCard';\n\nconst PAGE_SIZE = 25;\n\ninterface TagListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nfunction TagList(props: TagListProps) {\n  const {\n    addDangerToast,\n    addSuccessToast,\n    user: { userId },\n  } = props;\n\n  const {\n    state: {\n      loading,\n      resourceCount: tagCount,\n      resourceCollection: tags,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    toggleBulkSelect,\n    refreshData,\n  } = useListViewResource<Tag>('tag', t('tag'), addDangerToast);\n\n  // TODO: Fix usage of localStorage keying on the user id\n  const userKey = dangerouslyGetItemDoNotUse(userId?.toString(), null);\n\n  const canDelete = hasPerm('can_write');\n\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n\n  function handleTagsDelete(\n    tags: Tag[],\n    callback: (text: string) => void,\n    error: (text: string) => void,\n  ) {\n    // TODO what permissions need to be checked here?\n    deleteTags(tags, callback, error);\n    refreshData();\n  }\n\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { name: tagName },\n          },\n        }: any) => (\n          <AntdTag>\n            <Link to={`/superset/all_entities/?tags=${tagName}`}>\n              {tagName}\n            </Link>\n          </AntdTag>\n        ),\n        Header: t('Name'),\n        accessor: 'name',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { changed_on_delta_humanized: changedOn },\n          },\n        }: any) => <span className=\"no-wrap\">{changedOn}</span>,\n        Header: t('Modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_by: createdBy },\n          },\n        }: any) => (createdBy ? <FacePile users={[createdBy]} /> : ''),\n        Header: t('Created by'),\n        accessor: 'created_by',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleDelete = () =>\n            handleTagsDelete([original], addSuccessToast, addDangerToast);\n          return (\n            <Actions className=\"actions\">\n              {canDelete && (\n                <ConfirmStatusChange\n                  title={t('Please confirm')}\n                  description={\n                    <>\n                      {t('Are you sure you want to delete')}{' '}\n                      <b>{original.dashboard_title}</b>?\n                    </>\n                  }\n                  onConfirm={handleDelete}\n                >\n                  {confirmDelete => (\n                    <Tooltip\n                      id=\"delete-action-tooltip\"\n                      title={t('Delete')}\n                      placement=\"bottom\"\n                    >\n                      <span\n                        role=\"button\"\n                        tabIndex={0}\n                        className=\"action-button\"\n                        onClick={confirmDelete}\n                      >\n                        <Icons.Trash data-test=\"dashboard-list-trash-icon\" />\n                      </span>\n                    </Tooltip>\n                  )}\n                </ConfirmStatusChange>\n              )}\n            </Actions>\n          );\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        hidden: !canDelete,\n        disableSortBy: true,\n      },\n    ],\n    [userId, canDelete, refreshData, addSuccessToast, addDangerToast],\n  );\n\n  const filters: Filters = useMemo(() => {\n    const filters_list = [\n      {\n        Header: t('Created by'),\n        id: 'created_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'tag',\n          'created_by',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t(\n                'An error occurred while fetching tag created by values: %s',\n                errMsg,\n              ),\n            ),\n          ),\n          props.user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Search'),\n        id: 'name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ] as Filters;\n    return filters_list;\n  }, [addDangerToast, props.user]);\n\n  const sortTypes = [\n    {\n      desc: false,\n      id: 'name',\n      label: t('Alphabetical'),\n      value: 'alphabetical',\n    },\n    {\n      desc: true,\n      id: 'changed_on_delta_humanized',\n      label: t('Recently modified'),\n      value: 'recently_modified',\n    },\n    {\n      desc: false,\n      id: 'changed_on_delta_humanized',\n      label: t('Least recently modified'),\n      value: 'least_recently_modified',\n    },\n  ];\n\n  const renderCard = useCallback(\n    (tag: Tag) => (\n      <TagCard\n        tag={tag}\n        hasPerm={hasPerm}\n        bulkSelectEnabled={bulkSelectEnabled}\n        refreshData={refreshData}\n        showThumbnails={\n          userKey\n            ? userKey.thumbnails\n            : isFeatureEnabled(FeatureFlag.THUMBNAILS)\n        }\n        userId={userId}\n        loading={loading}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n      />\n    ),\n    [\n      addDangerToast,\n      addSuccessToast,\n      bulkSelectEnabled,\n      hasPerm,\n      loading,\n      userId,\n      refreshData,\n      userKey,\n    ],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select',\n      onClick: toggleBulkSelect,\n    });\n  }\n\n  const handleBulkDelete = (tagsToDelete: Tag[]) =>\n    handleTagsDelete(tagsToDelete, addSuccessToast, addDangerToast);\n\n  return (\n    <>\n      <SubMenu name={t('Tags')} buttons={subMenuButtons} />\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected tags?')}\n        onConfirm={handleBulkDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [];\n          if (canDelete) {\n            bulkActions.push({\n              key: 'delete',\n              name: t('Delete'),\n              type: 'danger',\n              onSelect: confirmDelete,\n            });\n          }\n          return (\n            <>\n              <ListView<Tag>\n                bulkActions={bulkActions}\n                bulkSelectEnabled={bulkSelectEnabled}\n                cardSortSelectOptions={sortTypes}\n                className=\"dashboard-list-view\"\n                columns={columns}\n                count={tagCount}\n                data={tags.filter(tag => !tag.name.includes(':'))}\n                disableBulkSelect={toggleBulkSelect}\n                fetchData={fetchData}\n                filters={filters}\n                initialSort={initialSort}\n                loading={loading}\n                pageSize={PAGE_SIZE}\n                showThumbnails={\n                  userKey\n                    ? userKey.thumbnails\n                    : isFeatureEnabled(FeatureFlag.THUMBNAILS)\n                }\n                renderCard={renderCard}\n                defaultViewMode={\n                  isFeatureEnabled(FeatureFlag.LISTVIEWS_DEFAULT_CARD_VIEW)\n                    ? 'card'\n                    : 'table'\n                }\n              />\n            </>\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(TagList);\n"]},"metadata":{},"sourceType":"module"}