{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { css, styled, t, useTheme, NO_TIME_RANGE, useCSSTextTruncation } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport Modal from 'src/components/Modal';\nimport { Divider } from 'src/components';\nimport Icons from 'src/components/Icons';\nimport Select from 'src/components/Select/Select';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { useDebouncedEffect } from 'src/explore/exploreUtils';\nimport { SLOW_DEBOUNCE } from 'src/constants';\nimport { noOp } from 'src/utils/common';\nimport ControlPopover from '../ControlPopover/ControlPopover';\nimport { DATE_FILTER_TEST_KEY, fetchTimeRange, FRAME_OPTIONS, guessFrame, useDefaultTimeFilter } from './utils';\nimport { CommonFrame, CalendarFrame, CustomFrame, AdvancedFrame, DateLabel } from './components';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledRangeType = styled(Select)`\n  width: 272px;\n`;\nconst ContentStyleWrapper = styled.div`\n  ${(_ref) => {let { theme } = _ref;return css`\n    .ant-row {\n      margin-top: 8px;\n    }\n\n    .ant-input-number {\n      width: 100%;\n    }\n\n    .ant-picker {\n      padding: 4px 17px 4px;\n      border-radius: 4px;\n      width: 100%;\n    }\n\n    .ant-divider-horizontal {\n      margin: 16px 0;\n    }\n\n    .control-label {\n      font-size: 11px;\n      font-weight: ${theme.typography.weights.medium};\n      color: ${theme.colors.grayscale.light2};\n      line-height: 16px;\n      text-transform: uppercase;\n      margin: 8px 0;\n    }\n\n    .vertical-radio {\n      display: block;\n      height: 40px;\n      line-height: 40px;\n    }\n\n    .section-title {\n      font-style: normal;\n      font-weight: ${theme.typography.weights.bold};\n      font-size: 15px;\n      line-height: 24px;\n      margin-bottom: 8px;\n    }\n\n    .control-anchor-to {\n      margin-top: 16px;\n    }\n\n    .control-anchor-to-datetime {\n      width: 217px;\n    }\n\n    .footer {\n      text-align: right;\n    }\n  `;}}\n`;\nconst IconWrapper = styled.span`\n  span {\n    margin-right: ${(_ref2) => {let { theme } = _ref2;return 2 * theme.gridUnit;}}px;\n    vertical-align: middle;\n  }\n  .text {\n    vertical-align: middle;\n  }\n  .error {\n    color: ${(_ref3) => {let { theme } = _ref3;return theme.colors.error.base;}};\n  }\n`;\nconst getTooltipTitle = (isLabelTruncated, label, range) => isLabelTruncated ? ___EmotionJSX(\"div\", null,\nlabel && ___EmotionJSX(\"strong\", null, label),\nrange && ___EmotionJSX(\"div\", { css: (theme) => css`\n            margin-top: ${theme.gridUnit}px;\n          ` },\nrange)) :\n\nrange || null;\nexport default function DateFilterLabel(props) {var _props$value;\n  const { onChange, onOpenPopover = noOp, onClosePopover = noOp, overlayStyle = 'Popover', isOverflowingFilterBar = false } = props;\n  const defaultTimeFilter = useDefaultTimeFilter();\n  const value = (_props$value = props.value) != null ? _props$value : defaultTimeFilter;\n  const [actualTimeRange, setActualTimeRange] = useState(value);\n  const [show, setShow] = useState(false);\n  const guessedFrame = useMemo(() => guessFrame(value), [value]);\n  const [frame, setFrame] = useState(guessedFrame);\n  const [lastFetchedTimeRange, setLastFetchedTimeRange] = useState(value);\n  const [timeRangeValue, setTimeRangeValue] = useState(value);\n  const [validTimeRange, setValidTimeRange] = useState(false);\n  const [evalResponse, setEvalResponse] = useState(value);\n  const [tooltipTitle, setTooltipTitle] = useState(value);\n  const theme = useTheme();\n  const [labelRef, labelIsTruncated] = useCSSTextTruncation();\n  useEffect(() => {\n    if (value === NO_TIME_RANGE) {\n      setActualTimeRange(NO_TIME_RANGE);\n      setTooltipTitle(null);\n      setValidTimeRange(true);\n      return;\n    }\n    fetchTimeRange(value).then((_ref4) => {let { value: actualRange, error } = _ref4;\n      if (error) {\n        setEvalResponse(error || '');\n        setValidTimeRange(false);\n        setTooltipTitle(value || null);\n      } else\n      {\n        /*\n          HRT == human readable text\n          ADR == actual datetime range\n          +--------------+------+----------+--------+----------+-----------+\n          |              | Last | Previous | Custom | Advanced | No Filter |\n          +--------------+------+----------+--------+----------+-----------+\n          | control pill | HRT  | HRT      | ADR    | ADR      |   HRT     |\n          +--------------+------+----------+--------+----------+-----------+\n          | tooltip      | ADR  | ADR      | HRT    | HRT      |   ADR     |\n          +--------------+------+----------+--------+----------+-----------+\n        */\n        if (guessedFrame === 'Common' ||\n        guessedFrame === 'Calendar' ||\n        guessedFrame === 'No filter') {\n          setActualTimeRange(value);\n          setTooltipTitle(getTooltipTitle(labelIsTruncated, value, actualRange));\n        } else\n        {\n          setActualTimeRange(actualRange || '');\n          setTooltipTitle(getTooltipTitle(labelIsTruncated, actualRange, value));\n        }\n        setValidTimeRange(true);\n      }\n      setLastFetchedTimeRange(value);\n      setEvalResponse(actualRange || value);\n    });\n  }, [guessedFrame, labelIsTruncated, labelRef, value]);\n  useDebouncedEffect(() => {\n    if (timeRangeValue === NO_TIME_RANGE) {\n      setEvalResponse(NO_TIME_RANGE);\n      setLastFetchedTimeRange(NO_TIME_RANGE);\n      setValidTimeRange(true);\n      return;\n    }\n    if (lastFetchedTimeRange !== timeRangeValue) {\n      fetchTimeRange(timeRangeValue).then((_ref5) => {let { value: actualRange, error } = _ref5;\n        if (error) {\n          setEvalResponse(error || '');\n          setValidTimeRange(false);\n        } else\n        {\n          setEvalResponse(actualRange || '');\n          setValidTimeRange(true);\n        }\n        setLastFetchedTimeRange(timeRangeValue);\n      });\n    }\n  }, SLOW_DEBOUNCE, [timeRangeValue]);\n  function onSave() {\n    onChange(timeRangeValue);\n    setShow(false);\n    onClosePopover();\n  }\n  function onOpen() {\n    setTimeRangeValue(value);\n    setFrame(guessedFrame);\n    setShow(true);\n    onOpenPopover();\n  }\n  function onHide() {\n    setTimeRangeValue(value);\n    setFrame(guessedFrame);\n    setShow(false);\n    onClosePopover();\n  }\n  const toggleOverlay = () => {\n    if (show) {\n      onHide();\n    } else\n    {\n      onOpen();\n    }\n  };\n  function onChangeFrame(value) {\n    if (value === NO_TIME_RANGE) {\n      setTimeRangeValue(NO_TIME_RANGE);\n    }\n    setFrame(value);\n  }\n  const overlayContent = ___EmotionJSX(ContentStyleWrapper, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('RANGE TYPE')),\n  ___EmotionJSX(StyledRangeType, { ariaLabel: t('RANGE TYPE'), options: FRAME_OPTIONS, value: frame, onChange: onChangeFrame }),\n  frame !== 'No filter' && ___EmotionJSX(Divider, null),\n  frame === 'Common' && ___EmotionJSX(CommonFrame, { value: timeRangeValue, onChange: setTimeRangeValue }),\n  frame === 'Calendar' && ___EmotionJSX(CalendarFrame, { value: timeRangeValue, onChange: setTimeRangeValue }),\n  frame === 'Advanced' && ___EmotionJSX(AdvancedFrame, { value: timeRangeValue, onChange: setTimeRangeValue }),\n  frame === 'Custom' && ___EmotionJSX(CustomFrame, { value: timeRangeValue, onChange: setTimeRangeValue }),\n  frame === 'No filter' && ___EmotionJSX(\"div\", { \"data-test\": DATE_FILTER_TEST_KEY.noFilter }),\n  ___EmotionJSX(Divider, null),\n  ___EmotionJSX(\"div\", null,\n  ___EmotionJSX(\"div\", { className: \"section-title\" }, t('Actual time range')),\n  validTimeRange && ___EmotionJSX(\"div\", null, evalResponse),\n  !validTimeRange && ___EmotionJSX(IconWrapper, { className: \"warning\" },\n  ___EmotionJSX(Icons.ErrorSolidSmall, { iconColor: theme.colors.error.base }),\n  ___EmotionJSX(\"span\", { className: \"text error\" }, evalResponse))),\n\n\n  ___EmotionJSX(Divider, null),\n  ___EmotionJSX(\"div\", { className: \"footer\" },\n  ___EmotionJSX(Button, { buttonStyle: \"secondary\", cta: true, key: \"cancel\", onClick: onHide, \"data-test\": DATE_FILTER_TEST_KEY.cancelButton },\n  t('CANCEL')),\n\n  ___EmotionJSX(Button, { buttonStyle: \"primary\", cta: true, disabled: !validTimeRange, key: \"apply\", onClick: onSave, \"data-test\": DATE_FILTER_TEST_KEY.applyButton },\n  t('APPLY'))));\n\n\n\n  const title = ___EmotionJSX(IconWrapper, null,\n  ___EmotionJSX(Icons.EditAlt, { iconColor: theme.colors.grayscale.base }),\n  ___EmotionJSX(\"span\", { className: \"text\" }, t('Edit time range')));\n\n  const popoverContent = ___EmotionJSX(ControlPopover, { placement: \"right\", trigger: \"click\", content: overlayContent, title: title, defaultVisible: show, visible: show, onVisibleChange: toggleOverlay, overlayStyle: { width: '600px' }, getPopupContainer: (triggerNode) => isOverflowingFilterBar ?\n    triggerNode.parentNode :\n    document.body, destroyTooltipOnHide: true },\n  ___EmotionJSX(Tooltip, { placement: \"top\", title: tooltipTitle },\n  ___EmotionJSX(DateLabel, { label: actualTimeRange, isActive: show, isPlaceholder: actualTimeRange === NO_TIME_RANGE, \"data-test\": DATE_FILTER_TEST_KEY.popoverOverlay, ref: labelRef })));\n\n\n  const modalContent = ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Tooltip, { placement: \"top\", title: tooltipTitle },\n  ___EmotionJSX(DateLabel, { onClick: toggleOverlay, label: actualTimeRange, isActive: show, isPlaceholder: actualTimeRange === NO_TIME_RANGE, \"data-test\": DATE_FILTER_TEST_KEY.modalOverlay, ref: labelRef })),\n\n\n  ___EmotionJSX(Modal, { title: title, show: show, onHide: toggleOverlay, width: \"600px\", hideFooter: true, zIndex: 1030 },\n  overlayContent));\n\n\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(ControlHeader, props),\n  overlayStyle === 'Modal' ? modalContent : popoverContent);\n\n}__signature__(DateFilterLabel, \"useDefaultTimeFilter{defaultTimeFilter}\\nuseState{[actualTimeRange, setActualTimeRange](value)}\\nuseState{[show, setShow](false)}\\nuseMemo{guessedFrame}\\nuseState{[frame, setFrame](guessedFrame)}\\nuseState{[lastFetchedTimeRange, setLastFetchedTimeRange](value)}\\nuseState{[timeRangeValue, setTimeRangeValue](value)}\\nuseState{[validTimeRange, setValidTimeRange](false)}\\nuseState{[evalResponse, setEvalResponse](value)}\\nuseState{[tooltipTitle, setTooltipTitle](value)}\\nuseTheme{theme}\\nuseCSSTextTruncation{[labelRef, labelIsTruncated]}\\nuseEffect{}\\nuseDebouncedEffect{}\", () => [useDefaultTimeFilter, useTheme, useCSSTextTruncation, useDebouncedEffect]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledRangeType, \"StyledRangeType\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/DateFilterControl/DateFilterLabel.tsx\");reactHotLoader.register(ContentStyleWrapper, \"ContentStyleWrapper\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/DateFilterControl/DateFilterLabel.tsx\");reactHotLoader.register(IconWrapper, \"IconWrapper\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/DateFilterControl/DateFilterLabel.tsx\");reactHotLoader.register(getTooltipTitle, \"getTooltipTitle\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/DateFilterControl/DateFilterLabel.tsx\");reactHotLoader.register(DateFilterLabel, \"DateFilterLabel\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/DateFilterControl/DateFilterLabel.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useState","useEffect","useMemo","css","styled","t","useTheme","NO_TIME_RANGE","useCSSTextTruncation","Button","ControlHeader","Modal","Divider","Icons","Select","Tooltip","useDebouncedEffect","SLOW_DEBOUNCE","noOp","ControlPopover","DATE_FILTER_TEST_KEY","fetchTimeRange","FRAME_OPTIONS","guessFrame","useDefaultTimeFilter","CommonFrame","CalendarFrame","CustomFrame","AdvancedFrame","DateLabel","StyledRangeType","ContentStyleWrapper","div","theme","typography","weights","medium","colors","grayscale","light2","bold","IconWrapper","span","gridUnit","error","base","getTooltipTitle","isLabelTruncated","label","range","DateFilterLabel","props","onChange","onOpenPopover","onClosePopover","overlayStyle","isOverflowingFilterBar","defaultTimeFilter","value","actualTimeRange","setActualTimeRange","show","setShow","guessedFrame","frame","setFrame","lastFetchedTimeRange","setLastFetchedTimeRange","timeRangeValue","setTimeRangeValue","validTimeRange","setValidTimeRange","evalResponse","setEvalResponse","tooltipTitle","setTooltipTitle","labelRef","labelIsTruncated","then","actualRange","onSave","onOpen","onHide","toggleOverlay","onChangeFrame","overlayContent","noFilter","cancelButton","applyButton","title","popoverContent","width","triggerNode","parentNode","document","body","popoverOverlay","modalContent","modalOverlay"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/DateFilterControl/DateFilterLabel.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ReactNode, useState, useEffect, useMemo } from 'react';\nimport {\n  css,\n  styled,\n  t,\n  useTheme,\n  NO_TIME_RANGE,\n  SupersetTheme,\n  useCSSTextTruncation,\n} from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport Modal from 'src/components/Modal';\nimport { Divider } from 'src/components';\nimport Icons from 'src/components/Icons';\nimport Select from 'src/components/Select/Select';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { useDebouncedEffect } from 'src/explore/exploreUtils';\nimport { SLOW_DEBOUNCE } from 'src/constants';\nimport { noOp } from 'src/utils/common';\nimport ControlPopover from '../ControlPopover/ControlPopover';\n\nimport { DateFilterControlProps, FrameType } from './types';\nimport {\n  DATE_FILTER_TEST_KEY,\n  fetchTimeRange,\n  FRAME_OPTIONS,\n  guessFrame,\n  useDefaultTimeFilter,\n} from './utils';\nimport {\n  CommonFrame,\n  CalendarFrame,\n  CustomFrame,\n  AdvancedFrame,\n  DateLabel,\n} from './components';\n\nconst StyledRangeType = styled(Select)`\n  width: 272px;\n`;\n\nconst ContentStyleWrapper = styled.div`\n  ${({ theme }) => css`\n    .ant-row {\n      margin-top: 8px;\n    }\n\n    .ant-input-number {\n      width: 100%;\n    }\n\n    .ant-picker {\n      padding: 4px 17px 4px;\n      border-radius: 4px;\n      width: 100%;\n    }\n\n    .ant-divider-horizontal {\n      margin: 16px 0;\n    }\n\n    .control-label {\n      font-size: 11px;\n      font-weight: ${theme.typography.weights.medium};\n      color: ${theme.colors.grayscale.light2};\n      line-height: 16px;\n      text-transform: uppercase;\n      margin: 8px 0;\n    }\n\n    .vertical-radio {\n      display: block;\n      height: 40px;\n      line-height: 40px;\n    }\n\n    .section-title {\n      font-style: normal;\n      font-weight: ${theme.typography.weights.bold};\n      font-size: 15px;\n      line-height: 24px;\n      margin-bottom: 8px;\n    }\n\n    .control-anchor-to {\n      margin-top: 16px;\n    }\n\n    .control-anchor-to-datetime {\n      width: 217px;\n    }\n\n    .footer {\n      text-align: right;\n    }\n  `}\n`;\n\nconst IconWrapper = styled.span`\n  span {\n    margin-right: ${({ theme }) => 2 * theme.gridUnit}px;\n    vertical-align: middle;\n  }\n  .text {\n    vertical-align: middle;\n  }\n  .error {\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n`;\n\nconst getTooltipTitle = (\n  isLabelTruncated: boolean,\n  label: string | undefined,\n  range: string | undefined,\n) =>\n  isLabelTruncated ? (\n    <div>\n      {label && <strong>{label}</strong>}\n      {range && (\n        <div\n          css={(theme: SupersetTheme) => css`\n            margin-top: ${theme.gridUnit}px;\n          `}\n        >\n          {range}\n        </div>\n      )}\n    </div>\n  ) : (\n    range || null\n  );\n\nexport default function DateFilterLabel(props: DateFilterControlProps) {\n  const {\n    onChange,\n    onOpenPopover = noOp,\n    onClosePopover = noOp,\n    overlayStyle = 'Popover',\n    isOverflowingFilterBar = false,\n  } = props;\n  const defaultTimeFilter = useDefaultTimeFilter();\n\n  const value = props.value ?? defaultTimeFilter;\n  const [actualTimeRange, setActualTimeRange] = useState<string>(value);\n\n  const [show, setShow] = useState<boolean>(false);\n  const guessedFrame = useMemo(() => guessFrame(value), [value]);\n  const [frame, setFrame] = useState<FrameType>(guessedFrame);\n  const [lastFetchedTimeRange, setLastFetchedTimeRange] = useState(value);\n  const [timeRangeValue, setTimeRangeValue] = useState(value);\n  const [validTimeRange, setValidTimeRange] = useState<boolean>(false);\n  const [evalResponse, setEvalResponse] = useState<string>(value);\n  const [tooltipTitle, setTooltipTitle] = useState<ReactNode | null>(value);\n  const theme = useTheme();\n  const [labelRef, labelIsTruncated] = useCSSTextTruncation<HTMLSpanElement>();\n\n  useEffect(() => {\n    if (value === NO_TIME_RANGE) {\n      setActualTimeRange(NO_TIME_RANGE);\n      setTooltipTitle(null);\n      setValidTimeRange(true);\n      return;\n    }\n    fetchTimeRange(value).then(({ value: actualRange, error }) => {\n      if (error) {\n        setEvalResponse(error || '');\n        setValidTimeRange(false);\n        setTooltipTitle(value || null);\n      } else {\n        /*\n          HRT == human readable text\n          ADR == actual datetime range\n          +--------------+------+----------+--------+----------+-----------+\n          |              | Last | Previous | Custom | Advanced | No Filter |\n          +--------------+------+----------+--------+----------+-----------+\n          | control pill | HRT  | HRT      | ADR    | ADR      |   HRT     |\n          +--------------+------+----------+--------+----------+-----------+\n          | tooltip      | ADR  | ADR      | HRT    | HRT      |   ADR     |\n          +--------------+------+----------+--------+----------+-----------+\n        */\n        if (\n          guessedFrame === 'Common' ||\n          guessedFrame === 'Calendar' ||\n          guessedFrame === 'No filter'\n        ) {\n          setActualTimeRange(value);\n          setTooltipTitle(\n            getTooltipTitle(labelIsTruncated, value, actualRange),\n          );\n        } else {\n          setActualTimeRange(actualRange || '');\n          setTooltipTitle(\n            getTooltipTitle(labelIsTruncated, actualRange, value),\n          );\n        }\n        setValidTimeRange(true);\n      }\n      setLastFetchedTimeRange(value);\n      setEvalResponse(actualRange || value);\n    });\n  }, [guessedFrame, labelIsTruncated, labelRef, value]);\n\n  useDebouncedEffect(\n    () => {\n      if (timeRangeValue === NO_TIME_RANGE) {\n        setEvalResponse(NO_TIME_RANGE);\n        setLastFetchedTimeRange(NO_TIME_RANGE);\n        setValidTimeRange(true);\n        return;\n      }\n      if (lastFetchedTimeRange !== timeRangeValue) {\n        fetchTimeRange(timeRangeValue).then(({ value: actualRange, error }) => {\n          if (error) {\n            setEvalResponse(error || '');\n            setValidTimeRange(false);\n          } else {\n            setEvalResponse(actualRange || '');\n            setValidTimeRange(true);\n          }\n          setLastFetchedTimeRange(timeRangeValue);\n        });\n      }\n    },\n    SLOW_DEBOUNCE,\n    [timeRangeValue],\n  );\n\n  function onSave() {\n    onChange(timeRangeValue);\n    setShow(false);\n    onClosePopover();\n  }\n\n  function onOpen() {\n    setTimeRangeValue(value);\n    setFrame(guessedFrame);\n    setShow(true);\n    onOpenPopover();\n  }\n\n  function onHide() {\n    setTimeRangeValue(value);\n    setFrame(guessedFrame);\n    setShow(false);\n    onClosePopover();\n  }\n\n  const toggleOverlay = () => {\n    if (show) {\n      onHide();\n    } else {\n      onOpen();\n    }\n  };\n\n  function onChangeFrame(value: FrameType) {\n    if (value === NO_TIME_RANGE) {\n      setTimeRangeValue(NO_TIME_RANGE);\n    }\n    setFrame(value);\n  }\n\n  const overlayContent = (\n    <ContentStyleWrapper>\n      <div className=\"control-label\">{t('RANGE TYPE')}</div>\n      <StyledRangeType\n        ariaLabel={t('RANGE TYPE')}\n        options={FRAME_OPTIONS}\n        value={frame}\n        onChange={onChangeFrame}\n      />\n      {frame !== 'No filter' && <Divider />}\n      {frame === 'Common' && (\n        <CommonFrame value={timeRangeValue} onChange={setTimeRangeValue} />\n      )}\n      {frame === 'Calendar' && (\n        <CalendarFrame value={timeRangeValue} onChange={setTimeRangeValue} />\n      )}\n      {frame === 'Advanced' && (\n        <AdvancedFrame value={timeRangeValue} onChange={setTimeRangeValue} />\n      )}\n      {frame === 'Custom' && (\n        <CustomFrame value={timeRangeValue} onChange={setTimeRangeValue} />\n      )}\n      {frame === 'No filter' && (\n        <div data-test={DATE_FILTER_TEST_KEY.noFilter} />\n      )}\n      <Divider />\n      <div>\n        <div className=\"section-title\">{t('Actual time range')}</div>\n        {validTimeRange && <div>{evalResponse}</div>}\n        {!validTimeRange && (\n          <IconWrapper className=\"warning\">\n            <Icons.ErrorSolidSmall iconColor={theme.colors.error.base} />\n            <span className=\"text error\">{evalResponse}</span>\n          </IconWrapper>\n        )}\n      </div>\n      <Divider />\n      <div className=\"footer\">\n        <Button\n          buttonStyle=\"secondary\"\n          cta\n          key=\"cancel\"\n          onClick={onHide}\n          data-test={DATE_FILTER_TEST_KEY.cancelButton}\n        >\n          {t('CANCEL')}\n        </Button>\n        <Button\n          buttonStyle=\"primary\"\n          cta\n          disabled={!validTimeRange}\n          key=\"apply\"\n          onClick={onSave}\n          data-test={DATE_FILTER_TEST_KEY.applyButton}\n        >\n          {t('APPLY')}\n        </Button>\n      </div>\n    </ContentStyleWrapper>\n  );\n\n  const title = (\n    <IconWrapper>\n      <Icons.EditAlt iconColor={theme.colors.grayscale.base} />\n      <span className=\"text\">{t('Edit time range')}</span>\n    </IconWrapper>\n  );\n\n  const popoverContent = (\n    <ControlPopover\n      placement=\"right\"\n      trigger=\"click\"\n      content={overlayContent}\n      title={title}\n      defaultVisible={show}\n      visible={show}\n      onVisibleChange={toggleOverlay}\n      overlayStyle={{ width: '600px' }}\n      getPopupContainer={triggerNode =>\n        isOverflowingFilterBar\n          ? (triggerNode.parentNode as HTMLElement)\n          : document.body\n      }\n      destroyTooltipOnHide\n    >\n      <Tooltip placement=\"top\" title={tooltipTitle}>\n        <DateLabel\n          label={actualTimeRange}\n          isActive={show}\n          isPlaceholder={actualTimeRange === NO_TIME_RANGE}\n          data-test={DATE_FILTER_TEST_KEY.popoverOverlay}\n          ref={labelRef}\n        />\n      </Tooltip>\n    </ControlPopover>\n  );\n\n  const modalContent = (\n    <>\n      <Tooltip placement=\"top\" title={tooltipTitle}>\n        <DateLabel\n          onClick={toggleOverlay}\n          label={actualTimeRange}\n          isActive={show}\n          isPlaceholder={actualTimeRange === NO_TIME_RANGE}\n          data-test={DATE_FILTER_TEST_KEY.modalOverlay}\n          ref={labelRef}\n        />\n      </Tooltip>\n      {/* the zIndex value is from trying so that the Modal doesn't overlay the AdhocFilter when GENERIC_CHART_AXES is enabled */}\n      <Modal\n        title={title}\n        show={show}\n        onHide={toggleOverlay}\n        width=\"600px\"\n        hideFooter\n        zIndex={1030}\n      >\n        {overlayContent}\n      </Modal>\n    </>\n  );\n\n  return (\n    <>\n      <ControlHeader {...props} />\n      {overlayStyle === 'Modal' ? modalContent : popoverContent}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}