{"ast":null,"code":"import _omit from \"lodash/omit\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\nSET_REPORT,\nADD_REPORT,\nEDIT_REPORT,\nDELETE_REPORT } from\n'../actions/reports';\n\nexport default function reportsReducer(state, action) {if (state === void 0) {state = {};}\n  const actionHandlers = {\n    [SET_REPORT]() {var _report$result, _state, _state$creationMethod;\n      const { report, resourceId, creationMethod, filterField } = action;\n      // For now report count should only be one, but we are checking in case\n      // functionality changes.\n      const reportObject = (_report$result = report.result) == null ? void 0 : _report$result.find(\n      (report) => report[filterField] === resourceId);\n\n\n      if (reportObject) {\n        return {\n          ...state,\n          [creationMethod]: {\n            ...state[creationMethod],\n            [resourceId]: reportObject } };\n\n\n      }\n      if ((_state = state) != null && (_state$creationMethod = _state[creationMethod]) != null && _state$creationMethod[resourceId]) {\n        // remove the empty report from state\n        const newState = { ...state };\n        delete newState[creationMethod][resourceId];\n        return newState;\n      }\n      return { ...state };\n    },\n\n    [ADD_REPORT]() {\n      const { result, id } = action.json;\n      const report = { ...result, id };\n      const reportTypeId = report.dashboard || report.chart;\n      // this is the id of either the chart or the dashboard associated with the report.\n\n      return {\n        ...state,\n        [report.creation_method]: {\n          ...state[report.creation_method],\n          [reportTypeId]: report } };\n\n\n    },\n\n    [EDIT_REPORT]() {\n      const report = {\n        ...action.json.result,\n        id: action.json.id };\n\n      const reportTypeId = report.dashboard || report.chart;\n\n      return {\n        ...state,\n        [report.creation_method]: {\n          ...state[report.creation_method],\n          [reportTypeId]: report } };\n\n\n    },\n\n    [DELETE_REPORT]() {\n      const { report } = action;\n      const reportTypeId = report.dashboard || report.chart;\n      return {\n        ...state,\n        [report.creation_method]: {\n          ..._omit(state[report.creation_method], reportTypeId) } };\n\n\n    } };\n\n\n  if (action.type in actionHandlers) {\n    return actionHandlers[action.type]();\n  }\n  return state;\n}","map":{"version":3,"names":["SET_REPORT","ADD_REPORT","EDIT_REPORT","DELETE_REPORT","reportsReducer","state","action","actionHandlers","report","resourceId","creationMethod","filterField","reportObject","result","find","newState","id","json","reportTypeId","dashboard","chart","creation_method","type"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/reports/reducers/reports.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { omit } from 'lodash';\nimport {\n  SET_REPORT,\n  ADD_REPORT,\n  EDIT_REPORT,\n  DELETE_REPORT,\n} from '../actions/reports';\n\nexport default function reportsReducer(state = {}, action) {\n  const actionHandlers = {\n    [SET_REPORT]() {\n      const { report, resourceId, creationMethod, filterField } = action;\n      // For now report count should only be one, but we are checking in case\n      // functionality changes.\n      const reportObject = report.result?.find(\n        report => report[filterField] === resourceId,\n      );\n\n      if (reportObject) {\n        return {\n          ...state,\n          [creationMethod]: {\n            ...state[creationMethod],\n            [resourceId]: reportObject,\n          },\n        };\n      }\n      if (state?.[creationMethod]?.[resourceId]) {\n        // remove the empty report from state\n        const newState = { ...state };\n        delete newState[creationMethod][resourceId];\n        return newState;\n      }\n      return { ...state };\n    },\n\n    [ADD_REPORT]() {\n      const { result, id } = action.json;\n      const report = { ...result, id };\n      const reportTypeId = report.dashboard || report.chart;\n      // this is the id of either the chart or the dashboard associated with the report.\n\n      return {\n        ...state,\n        [report.creation_method]: {\n          ...state[report.creation_method],\n          [reportTypeId]: report,\n        },\n      };\n    },\n\n    [EDIT_REPORT]() {\n      const report = {\n        ...action.json.result,\n        id: action.json.id,\n      };\n      const reportTypeId = report.dashboard || report.chart;\n\n      return {\n        ...state,\n        [report.creation_method]: {\n          ...state[report.creation_method],\n          [reportTypeId]: report,\n        },\n      };\n    },\n\n    [DELETE_REPORT]() {\n      const { report } = action;\n      const reportTypeId = report.dashboard || report.chart;\n      return {\n        ...state,\n        [report.creation_method]: {\n          ...omit(state[report.creation_method], reportTypeId),\n        },\n      };\n    },\n  };\n\n  if (action.type in actionHandlers) {\n    return actionHandlers[action.type]();\n  }\n  return state;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACEA,UADF;AAEEC,UAFF;AAGEC,WAHF;AAIEC,aAJF;AAKO,oBALP;;AAOA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAAoCC,MAApC,EAA4C,KAApBD,KAAoB,cAApBA,KAAoB,GAAZ,EAAY;EACzD,MAAME,cAAc,GAAG;IACrB,CAACP,UAAD,IAAe;MACb,MAAM,EAAEQ,MAAF,EAAUC,UAAV,EAAsBC,cAAtB,EAAsCC,WAAtC,KAAsDL,MAA5D;MACA;MACA;MACA,MAAMM,YAAY,qBAAGJ,MAAM,CAACK,MAAV,qBAAG,eAAeC,IAAf;MACnB,CAAAN,MAAM,KAAIA,MAAM,CAACG,WAAD,CAAN,KAAwBF,UADf,CAArB;;;MAIA,IAAIG,YAAJ,EAAkB;QAChB,OAAO;UACL,GAAGP,KADE;UAEL,CAACK,cAAD,GAAkB;YAChB,GAAGL,KAAK,CAACK,cAAD,CADQ;YAEhB,CAACD,UAAD,GAAcG,YAFE,EAFb,EAAP;;;MAOD;MACD,cAAIP,KAAJ,sCAAI,OAAQK,cAAR,CAAJ,aAAI,sBAA0BD,UAA1B,CAAJ,EAA2C;QACzC;QACA,MAAMM,QAAQ,GAAG,EAAE,GAAGV,KAAL,EAAjB;QACA,OAAOU,QAAQ,CAACL,cAAD,CAAR,CAAyBD,UAAzB,CAAP;QACA,OAAOM,QAAP;MACD;MACD,OAAO,EAAE,GAAGV,KAAL,EAAP;IACD,CAzBoB;;IA2BrB,CAACJ,UAAD,IAAe;MACb,MAAM,EAAEY,MAAF,EAAUG,EAAV,KAAiBV,MAAM,CAACW,IAA9B;MACA,MAAMT,MAAM,GAAG,EAAE,GAAGK,MAAL,EAAaG,EAAb,EAAf;MACA,MAAME,YAAY,GAAGV,MAAM,CAACW,SAAP,IAAoBX,MAAM,CAACY,KAAhD;MACA;;MAEA,OAAO;QACL,GAAGf,KADE;QAEL,CAACG,MAAM,CAACa,eAAR,GAA0B;UACxB,GAAGhB,KAAK,CAACG,MAAM,CAACa,eAAR,CADgB;UAExB,CAACH,YAAD,GAAgBV,MAFQ,EAFrB,EAAP;;;IAOD,CAxCoB;;IA0CrB,CAACN,WAAD,IAAgB;MACd,MAAMM,MAAM,GAAG;QACb,GAAGF,MAAM,CAACW,IAAP,CAAYJ,MADF;QAEbG,EAAE,EAAEV,MAAM,CAACW,IAAP,CAAYD,EAFH,EAAf;;MAIA,MAAME,YAAY,GAAGV,MAAM,CAACW,SAAP,IAAoBX,MAAM,CAACY,KAAhD;;MAEA,OAAO;QACL,GAAGf,KADE;QAEL,CAACG,MAAM,CAACa,eAAR,GAA0B;UACxB,GAAGhB,KAAK,CAACG,MAAM,CAACa,eAAR,CADgB;UAExB,CAACH,YAAD,GAAgBV,MAFQ,EAFrB,EAAP;;;IAOD,CAxDoB;;IA0DrB,CAACL,aAAD,IAAkB;MAChB,MAAM,EAAEK,MAAF,KAAaF,MAAnB;MACA,MAAMY,YAAY,GAAGV,MAAM,CAACW,SAAP,IAAoBX,MAAM,CAACY,KAAhD;MACA,OAAO;QACL,GAAGf,KADE;QAEL,CAACG,MAAM,CAACa,eAAR,GAA0B;UACxB,GAAG,MAAKhB,KAAK,CAACG,MAAM,CAACa,eAAR,CAAV,EAAoCH,YAApC,CADqB,EAFrB,EAAP;;;IAMD,CAnEoB,EAAvB;;;EAsEA,IAAIZ,MAAM,CAACgB,IAAP,IAAef,cAAnB,EAAmC;IACjC,OAAOA,cAAc,CAACD,MAAM,CAACgB,IAAR,CAAd,EAAP;EACD;EACD,OAAOjB,KAAP;AACD"},"metadata":{},"sourceType":"module"}