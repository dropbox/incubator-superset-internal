{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport default class Plugin {\n\n  constructor() {this.config = void 0;\n    this.config = {};\n  }\n  resetConfig() {\n    // The child class can set default config\n    // by overriding this function.\n    this.config = {};\n    return this;\n  }\n  configure(config, replace) {if (replace === void 0) {replace = false;}\n    this.config = replace ? config : { ...this.config, ...config };\n    return this;\n  }\n  register() {\n    return this;\n  }\n  unregister() {\n    return this;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Plugin, \"Plugin\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/models/Plugin.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAwBA,eAAc,MAAOA,MAAP,CAAa;;EAGzBC,oBAFAC,MAEA;IACE,KAAKA,MAAL,GAAc,EAAd;EACD;EAEDC,WAAW;IACT;IACA;IACA,KAAKD,MAAL,GAAc,EAAd;IAEA,OAAO,IAAP;EACD;EAEDE,SAAS,CAACF,MAAD,EAAsBG,OAAtB,EAAqC,KAAfA,OAAe,cAAfA,OAAe,GAAL,KAAK;IAC5C,KAAKH,MAAL,GAAcG,OAAO,GAAGH,MAAH,GAAY,EAAE,GAAG,KAAKA,MAAV,EAAkB,GAAGA,MAArB,EAAjC;IAEA,OAAO,IAAP;EACD;EAEDI,QAAQ;IACN,OAAO,IAAP;EACD;EAEDC,UAAU;IACR,OAAO,IAAP;EACD,CA3BwB;EAAA;IAAA,yB,iLAANP,M","names":["Plugin","constructor","config","resetConfig","configure","replace","register","unregister"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/models/Plugin.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\ninterface PlainObject {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n}\n\nexport default class Plugin {\n  config: PlainObject;\n\n  constructor() {\n    this.config = {};\n  }\n\n  resetConfig() {\n    // The child class can set default config\n    // by overriding this function.\n    this.config = {};\n\n    return this;\n  }\n\n  configure(config: PlainObject, replace = false) {\n    this.config = replace ? config : { ...this.config, ...config };\n\n    return this;\n  }\n\n  register() {\n    return this;\n  }\n\n  unregister() {\n    return this;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}