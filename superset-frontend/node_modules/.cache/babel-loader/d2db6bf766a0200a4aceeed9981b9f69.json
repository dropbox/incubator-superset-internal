{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { css, styled } from '@superset-ui/core';\nimport AntdTabs from 'antd/lib/tabs';\nimport Icons from 'src/components/Icons';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledTabs = (_ref) => {let { animated = false, fullWidth = true, allowOverflow = true, ...props } = _ref;return ___EmotionJSX(AntdTabs, _extends({ animated: animated }, props, { css: (theme) => css`\n      overflow: ${allowOverflow ? 'visible' : 'hidden'};\n\n      .ant-tabs-content-holder {\n        overflow: ${allowOverflow ? 'visible' : 'auto'};\n      }\n      .ant-tabs-tab {\n        flex: 1 1 auto;\n        &.ant-tabs-tab-active .ant-tabs-tab-btn {\n          color: inherit;\n        }\n        &:hover {\n          .anchor-link-container {\n            cursor: pointer;\n            .fa.fa-link {\n              visibility: visible;\n            }\n          }\n        }\n        .short-link-trigger.btn {\n          padding: 0 ${theme.gridUnit}px;\n          & > .fa.fa-link {\n            top: 0;\n          }\n        }\n      }\n      ${fullWidth &&\n    css`\n        .ant-tabs-nav-list {\n          width: 100%;\n        }\n      `};\n\n      .ant-tabs-tab-btn {\n        display: flex;\n        flex: 1 1 auto;\n        align-items: center;\n        justify-content: center;\n        font-size: ${theme.typography.sizes.s}px;\n        text-align: center;\n        text-transform: uppercase;\n        user-select: none;\n        .required {\n          margin-left: ${theme.gridUnit / 2}px;\n          color: ${theme.colors.error.base};\n        }\n      }\n      .ant-tabs-ink-bar {\n        background: ${theme.colors.secondary.base};\n      }\n    ` }));};\nconst StyledTabPane = styled(AntdTabs.TabPane)``;\nconst Tabs = Object.assign(StyledTabs, {\n  TabPane: StyledTabPane });\n\nconst StyledEditableTabs = styled(StyledTabs)`\n  ${(_ref2) => {let { theme, fullWidth } = _ref2;return `\n    .ant-tabs-content-holder {\n      background: ${theme.colors.grayscale.light5};\n    }\n\n    & > .ant-tabs-nav {\n      margin-bottom: 0;\n    }\n\n    .ant-tabs-tab-remove {\n      padding-top: 0;\n      padding-bottom: 0;\n      height: ${theme.gridUnit * 6}px;\n    }\n\n    ${fullWidth ?\n  css`\n            .ant-tabs-nav-list {\n              width: 100%;\n            }\n          ` :\n  ''}\n  `;}}\n`;\nconst StyledCancelXIcon = styled(Icons.CancelX)`\n  color: ${(_ref3) => {let { theme } = _ref3;return theme.colors.grayscale.base;}};\n`;\nexport const EditableTabs = Object.assign(StyledEditableTabs, {\n  TabPane: StyledTabPane });\n\nEditableTabs.defaultProps = {\n  type: 'editable-card',\n  fullWidth: false,\n  animated: { inkBar: true, tabPane: false } };\n\nEditableTabs.TabPane.defaultProps = {\n  closeIcon: ___EmotionJSX(StyledCancelXIcon, { role: \"button\", tabIndex: 0 }) };\n\nexport const StyledLineEditableTabs = styled(EditableTabs)`\n  &.ant-tabs-card > .ant-tabs-nav .ant-tabs-tab {\n    margin: 0 ${(_ref4) => {let { theme } = _ref4;return theme.gridUnit * 4;}}px;\n    padding: ${(_ref5) => {let { theme } = _ref5;return `${theme.gridUnit * 3}px ${theme.gridUnit}px`;}};\n    background: transparent;\n    border: none;\n  }\n\n  &.ant-tabs-card > .ant-tabs-nav .ant-tabs-ink-bar {\n    visibility: visible;\n  }\n\n  .ant-tabs-tab-btn {\n    font-size: ${(_ref6) => {let { theme } = _ref6;return theme.typography.sizes.m;}}px;\n  }\n\n  .ant-tabs-tab-remove {\n    margin-left: 0;\n    padding-right: 0;\n  }\n\n  .ant-tabs-nav-add {\n    min-width: unset !important;\n    background: transparent !important;\n    border: none !important;\n  }\n`;\nexport const LineEditableTabs = Object.assign(StyledLineEditableTabs, {\n  TabPane: StyledTabPane });\n\nexport default Tabs;","map":{"version":3,"mappings":"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","names":["React","css","styled","AntdTabs","Icons","StyledTabs","animated","fullWidth","allowOverflow","props","theme","gridUnit","typography","sizes","s","colors","error","base","secondary","StyledTabPane","TabPane","Tabs","Object","assign","StyledEditableTabs","grayscale","light5","StyledCancelXIcon","CancelX","EditableTabs","defaultProps","type","inkBar","tabPane","closeIcon","StyledLineEditableTabs","m","LineEditableTabs"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Tabs/Tabs.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { css, styled } from '@superset-ui/core';\nimport AntdTabs, { TabsProps as AntdTabsProps } from 'antd/lib/tabs';\nimport Icons from 'src/components/Icons';\n\nexport interface TabsProps extends AntdTabsProps {\n  fullWidth?: boolean;\n  allowOverflow?: boolean;\n}\n\nconst StyledTabs = ({\n  animated = false,\n  fullWidth = true,\n  allowOverflow = true,\n  ...props\n}: TabsProps) => (\n  <AntdTabs\n    animated={animated}\n    {...props}\n    css={theme => css`\n      overflow: ${allowOverflow ? 'visible' : 'hidden'};\n\n      .ant-tabs-content-holder {\n        overflow: ${allowOverflow ? 'visible' : 'auto'};\n      }\n      .ant-tabs-tab {\n        flex: 1 1 auto;\n        &.ant-tabs-tab-active .ant-tabs-tab-btn {\n          color: inherit;\n        }\n        &:hover {\n          .anchor-link-container {\n            cursor: pointer;\n            .fa.fa-link {\n              visibility: visible;\n            }\n          }\n        }\n        .short-link-trigger.btn {\n          padding: 0 ${theme.gridUnit}px;\n          & > .fa.fa-link {\n            top: 0;\n          }\n        }\n      }\n      ${fullWidth &&\n      css`\n        .ant-tabs-nav-list {\n          width: 100%;\n        }\n      `};\n\n      .ant-tabs-tab-btn {\n        display: flex;\n        flex: 1 1 auto;\n        align-items: center;\n        justify-content: center;\n        font-size: ${theme.typography.sizes.s}px;\n        text-align: center;\n        text-transform: uppercase;\n        user-select: none;\n        .required {\n          margin-left: ${theme.gridUnit / 2}px;\n          color: ${theme.colors.error.base};\n        }\n      }\n      .ant-tabs-ink-bar {\n        background: ${theme.colors.secondary.base};\n      }\n    `}\n  />\n);\n\nconst StyledTabPane = styled(AntdTabs.TabPane)``;\n\nconst Tabs = Object.assign(StyledTabs, {\n  TabPane: StyledTabPane,\n});\n\nconst StyledEditableTabs = styled(StyledTabs)`\n  ${({ theme, fullWidth }) => `\n    .ant-tabs-content-holder {\n      background: ${theme.colors.grayscale.light5};\n    }\n\n    & > .ant-tabs-nav {\n      margin-bottom: 0;\n    }\n\n    .ant-tabs-tab-remove {\n      padding-top: 0;\n      padding-bottom: 0;\n      height: ${theme.gridUnit * 6}px;\n    }\n\n    ${\n      fullWidth\n        ? css`\n            .ant-tabs-nav-list {\n              width: 100%;\n            }\n          `\n        : ''\n    }\n  `}\n`;\n\nconst StyledCancelXIcon = styled(Icons.CancelX)`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\nexport const EditableTabs = Object.assign(StyledEditableTabs, {\n  TabPane: StyledTabPane,\n});\n\nEditableTabs.defaultProps = {\n  type: 'editable-card',\n  fullWidth: false,\n  animated: { inkBar: true, tabPane: false },\n};\n\nEditableTabs.TabPane.defaultProps = {\n  closeIcon: <StyledCancelXIcon role=\"button\" tabIndex={0} />,\n};\n\nexport const StyledLineEditableTabs = styled(EditableTabs)`\n  &.ant-tabs-card > .ant-tabs-nav .ant-tabs-tab {\n    margin: 0 ${({ theme }) => theme.gridUnit * 4}px;\n    padding: ${({ theme }) => `${theme.gridUnit * 3}px ${theme.gridUnit}px`};\n    background: transparent;\n    border: none;\n  }\n\n  &.ant-tabs-card > .ant-tabs-nav .ant-tabs-ink-bar {\n    visibility: visible;\n  }\n\n  .ant-tabs-tab-btn {\n    font-size: ${({ theme }) => theme.typography.sizes.m}px;\n  }\n\n  .ant-tabs-tab-remove {\n    margin-left: 0;\n    padding-right: 0;\n  }\n\n  .ant-tabs-nav-add {\n    min-width: unset !important;\n    background: transparent !important;\n    border: none !important;\n  }\n`;\n\nexport const LineEditableTabs = Object.assign(StyledLineEditableTabs, {\n  TabPane: StyledTabPane,\n});\n\nexport default Tabs;\n"]},"metadata":{},"sourceType":"module"}