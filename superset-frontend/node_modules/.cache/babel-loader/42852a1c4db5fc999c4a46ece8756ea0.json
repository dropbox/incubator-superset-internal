{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { ScopeRow } from './ScopeRow';\nimport { DependenciesRow } from './DependenciesRow';\nimport { NameRow } from './NameRow';\nimport { TypeRow } from './TypeRow';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const FilterCardContent = (_ref) => {let { filter, hidePopover } = _ref;return ___EmotionJSX(\"div\", null,\n  ___EmotionJSX(NameRow, { filter: filter, hidePopover: hidePopover }),\n  ___EmotionJSX(TypeRow, { filter: filter }),\n  ___EmotionJSX(ScopeRow, { filter: filter }),\n  ___EmotionJSX(DependenciesRow, { filter: filter }));};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(FilterCardContent, \"FilterCardContent\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/FilterCardContent.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB,C;AAOA,OAAO,MAAMC,iBAAiB,GAAG,eAAC,EAChCC,MADgC,EAEhCC,WAFgC,EAAD,eAI/B;EACE,cAAC,OAAD,IAAS,MAAM,EAAED,MAAjB,EAAyB,WAAW,EAAEC,WAAtC,GADF;EAEE,cAAC,OAAD,IAAS,MAAM,EAAED,MAAjB,GAFF;EAGE,cAAC,QAAD,IAAU,MAAM,EAAEA,MAAlB,GAHF;EAIE,cAAC,eAAD,IAAiB,MAAM,EAAEA,MAAzB,GAJF,CAJ+B,EAA1B,C,iLAAMD,iB","names":["React","ScopeRow","DependenciesRow","NameRow","TypeRow","FilterCardContent","filter","hidePopover"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/FilterCardContent.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Filter } from '@superset-ui/core';\nimport { ScopeRow } from './ScopeRow';\nimport { DependenciesRow } from './DependenciesRow';\nimport { NameRow } from './NameRow';\nimport { TypeRow } from './TypeRow';\n\ninterface FilterCardContentProps {\n  filter: Filter;\n  hidePopover: () => void;\n}\n\nexport const FilterCardContent = ({\n  filter,\n  hidePopover,\n}: FilterCardContentProps) => (\n  <div>\n    <NameRow filter={filter} hidePopover={hidePopover} />\n    <TypeRow filter={filter} />\n    <ScopeRow filter={filter} />\n    <DependenciesRow filter={filter} />\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}