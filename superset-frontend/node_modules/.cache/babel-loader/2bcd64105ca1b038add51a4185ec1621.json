{"ast":null,"code":"/* eslint-disable react/sort-prop-types */\n/* eslint-disable react/jsx-handler-names */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ScreenGridLayer } from 'deck.gl';\nimport { t } from '@superset-ui/core';\nimport AnimatableDeckGLContainer from '../../AnimatableDeckGLContainer';\nimport { getPlaySliderParams } from '../../utils/time';\nimport sandboxedEval from '../../utils/sandbox';\nimport { commonLayerProps } from '../common';\nimport TooltipRow from '../../TooltipRow';\n// eslint-disable-next-line import/extensions\nimport fitViewport from '../../utils/fitViewport';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nfunction getPoints(data) {\n  return data.map((d) => d.position);\n}\n\nfunction setTooltipContent(o) {\n  return (\n    ___EmotionJSX(\"div\", { className: \"deckgl-tooltip\" },\n    ___EmotionJSX(TooltipRow\n    // eslint-disable-next-line prefer-template\n    , { label: t('Longitude and Latitude') + ': ',\n      value: `${o.coordinate[0]}, ${o.coordinate[1]}` }),\n\n    ___EmotionJSX(TooltipRow\n    // eslint-disable-next-line prefer-template\n    , { label: t('Weight') + ': ',\n      value: `${o.object.cellWeight}` })));\n\n\n\n}\n\nexport function getLayer(\nformData,\npayload,\nonAddFilter,\nsetTooltip,\nselected,\nonSelect,\nfilters)\n{\n  const fd = formData;\n  const c = fd.color_picker;\n  let data = payload.data.features.map((d) => ({\n    ...d,\n    color: [c.r, c.g, c.b, 255 * c.a] }));\n\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n\n  if (filters != null) {\n    filters.forEach((f) => {\n      data = data.filter((x) => f(x));\n    });\n  }\n\n  // Passing a layer creator function instead of a layer since the\n  // layer needs to be regenerated at each render\n  return new ScreenGridLayer({\n    id: `screengrid-layer-${fd.slice_id}`,\n    data,\n    pickable: true,\n    cellSizePixels: fd.grid_size,\n    minColor: [c.r, c.g, c.b, 0],\n    maxColor: [c.r, c.g, c.b, 255 * c.a],\n    outline: false,\n    getWeight: (d) => d.weight || 0,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent) });\n\n}\n\nconst propTypes = {\n  formData: PropTypes.object.isRequired,\n  payload: PropTypes.object.isRequired,\n  setControlValue: PropTypes.func.isRequired,\n  viewport: PropTypes.object.isRequired,\n  onAddFilter: PropTypes.func,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired };\n\nconst defaultProps = {\n  onAddFilter() {} };\n\n\nclass DeckGLScreenGrid extends React.PureComponent {\n\n\n  constructor(props) {\n    super(props);this.containerRef = /*#__PURE__*/React.createRef();this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    setTooltip = (tooltip) => {\n      const { current } = this.containerRef;\n      if (current) {\n        current.setTooltip(tooltip);\n      }\n    };this.state = DeckGLScreenGrid.getDerivedStateFromProps(props);this.getLayers = this.getLayers.bind(this);this.onValuesChange = this.onValuesChange.bind(this);}static getDerivedStateFromProps(props, state) {// the state is computed only from the payload; if it hasn't changed, do\n    // not recompute state since this would reset selections and/or the play\n    // slider position due to changes in form controls\n    if (state && props.payload.form_data === state.formData) {return null;}const features = props.payload.data.features || [];const timestamps = features.map((f) => f.__timestamp); // the granularity has to be read from the payload form_data, not the\n    // props formData which comes from the instantaneous controls state\n    const granularity = props.payload.form_data.time_grain_sqla || props.payload.form_data.granularity || 'P1D';const { start, end, getStep, values, disabled } = getPlaySliderParams(timestamps, granularity);const { width, height, formData } = props;let { viewport } = props;if (formData.autozoom) {viewport = fitViewport(viewport, { width, height, points: getPoints(features) });}return { start, end, getStep, values, disabled, viewport, selected: [], lastClick: 0, formData: props.payload.form_data };}onValuesChange(values) {this.setState({ values: Array.isArray(values) ? values : // eslint-disable-next-line react/no-access-state-in-setstate\n      [values, values + this.state.getStep(values)] });}getLayers(values) {const filters = []; // time filter\n    if (values[0] === values[1] || values[1] === this.end) {filters.push((d) => d.__timestamp >= values[0] && d.__timestamp <= values[1]);} else {filters.push((d) => d.__timestamp >= values[0] && d.__timestamp < values[1]);}const layer = getLayer(this.props.formData, this.props.payload, this.props.onAddFilter, this.setTooltip, filters);return [layer];}render() {const { formData, payload, setControlValue } = this.props;return ___EmotionJSX(\"div\", null, ___EmotionJSX(AnimatableDeckGLContainer, {\n      ref: this.containerRef,\n      aggregation: true,\n      getLayers: this.getLayers,\n      start: this.state.start,\n      end: this.state.end,\n      getStep: this.state.getStep,\n      values: this.state.values,\n      disabled: this.state.disabled,\n      viewport: this.state.viewport,\n      width: this.props.width,\n      height: this.props.height,\n      mapboxApiAccessToken: payload.data.mapboxApiKey,\n      mapStyle: formData.mapbox_style,\n      setControlValue: setControlValue,\n      onValuesChange: this.onValuesChange,\n      onViewportChange: this.onViewportChange }));\n\n\n\n  }}\n\n\nDeckGLScreenGrid.propTypes = propTypes;\nDeckGLScreenGrid.defaultProps = defaultProps;\n\nexport default DeckGLScreenGrid;","map":{"version":3,"names":["React","PropTypes","ScreenGridLayer","t","AnimatableDeckGLContainer","getPlaySliderParams","sandboxedEval","commonLayerProps","TooltipRow","fitViewport","getPoints","data","map","d","position","setTooltipContent","o","coordinate","object","cellWeight","getLayer","formData","payload","onAddFilter","setTooltip","selected","onSelect","filters","fd","c","color_picker","features","color","r","g","b","a","js_data_mutator","jsFnMutator","forEach","f","filter","x","id","slice_id","pickable","cellSizePixels","grid_size","minColor","maxColor","outline","getWeight","weight","propTypes","isRequired","setControlValue","func","viewport","width","number","height","defaultProps","DeckGLScreenGrid","PureComponent","constructor","props","containerRef","createRef","tooltip","current","state","getDerivedStateFromProps","getLayers","bind","onValuesChange","form_data","timestamps","__timestamp","granularity","time_grain_sqla","start","end","getStep","values","disabled","autozoom","points","lastClick","setState","Array","isArray","push","layer","render","mapboxApiKey","mapbox_style","onViewportChange"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Screengrid/Screengrid.jsx"],"sourcesContent":["/* eslint-disable react/sort-prop-types */\n/* eslint-disable react/jsx-handler-names */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ScreenGridLayer } from 'deck.gl';\nimport { t } from '@superset-ui/core';\nimport AnimatableDeckGLContainer from '../../AnimatableDeckGLContainer';\nimport { getPlaySliderParams } from '../../utils/time';\nimport sandboxedEval from '../../utils/sandbox';\nimport { commonLayerProps } from '../common';\nimport TooltipRow from '../../TooltipRow';\n// eslint-disable-next-line import/extensions\nimport fitViewport from '../../utils/fitViewport';\n\nfunction getPoints(data) {\n  return data.map(d => d.position);\n}\n\nfunction setTooltipContent(o) {\n  return (\n    <div className=\"deckgl-tooltip\">\n      <TooltipRow\n        // eslint-disable-next-line prefer-template\n        label={t('Longitude and Latitude') + ': '}\n        value={`${o.coordinate[0]}, ${o.coordinate[1]}`}\n      />\n      <TooltipRow\n        // eslint-disable-next-line prefer-template\n        label={t('Weight') + ': '}\n        value={`${o.object.cellWeight}`}\n      />\n    </div>\n  );\n}\n\nexport function getLayer(\n  formData,\n  payload,\n  onAddFilter,\n  setTooltip,\n  selected,\n  onSelect,\n  filters,\n) {\n  const fd = formData;\n  const c = fd.color_picker;\n  let data = payload.data.features.map(d => ({\n    ...d,\n    color: [c.r, c.g, c.b, 255 * c.a],\n  }));\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n\n  if (filters != null) {\n    filters.forEach(f => {\n      data = data.filter(x => f(x));\n    });\n  }\n\n  // Passing a layer creator function instead of a layer since the\n  // layer needs to be regenerated at each render\n  return new ScreenGridLayer({\n    id: `screengrid-layer-${fd.slice_id}`,\n    data,\n    pickable: true,\n    cellSizePixels: fd.grid_size,\n    minColor: [c.r, c.g, c.b, 0],\n    maxColor: [c.r, c.g, c.b, 255 * c.a],\n    outline: false,\n    getWeight: d => d.weight || 0,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent),\n  });\n}\n\nconst propTypes = {\n  formData: PropTypes.object.isRequired,\n  payload: PropTypes.object.isRequired,\n  setControlValue: PropTypes.func.isRequired,\n  viewport: PropTypes.object.isRequired,\n  onAddFilter: PropTypes.func,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n};\nconst defaultProps = {\n  onAddFilter() {},\n};\n\nclass DeckGLScreenGrid extends React.PureComponent {\n  containerRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = DeckGLScreenGrid.getDerivedStateFromProps(props);\n\n    this.getLayers = this.getLayers.bind(this);\n    this.onValuesChange = this.onValuesChange.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // the state is computed only from the payload; if it hasn't changed, do\n    // not recompute state since this would reset selections and/or the play\n    // slider position due to changes in form controls\n    if (state && props.payload.form_data === state.formData) {\n      return null;\n    }\n\n    const features = props.payload.data.features || [];\n    const timestamps = features.map(f => f.__timestamp);\n\n    // the granularity has to be read from the payload form_data, not the\n    // props formData which comes from the instantaneous controls state\n    const granularity =\n      props.payload.form_data.time_grain_sqla ||\n      props.payload.form_data.granularity ||\n      'P1D';\n\n    const { start, end, getStep, values, disabled } = getPlaySliderParams(\n      timestamps,\n      granularity,\n    );\n    const { width, height, formData } = props;\n\n    let { viewport } = props;\n    if (formData.autozoom) {\n      viewport = fitViewport(viewport, {\n        width,\n        height,\n        points: getPoints(features),\n      });\n    }\n\n    return {\n      start,\n      end,\n      getStep,\n      values,\n      disabled,\n      viewport,\n      selected: [],\n      lastClick: 0,\n      formData: props.payload.form_data,\n    };\n  }\n\n  onValuesChange(values) {\n    this.setState({\n      values: Array.isArray(values)\n        ? values\n        : // eslint-disable-next-line react/no-access-state-in-setstate\n          [values, values + this.state.getStep(values)],\n    });\n  }\n\n  getLayers(values) {\n    const filters = [];\n\n    // time filter\n    if (values[0] === values[1] || values[1] === this.end) {\n      filters.push(\n        d => d.__timestamp >= values[0] && d.__timestamp <= values[1],\n      );\n    } else {\n      filters.push(\n        d => d.__timestamp >= values[0] && d.__timestamp < values[1],\n      );\n    }\n\n    const layer = getLayer(\n      this.props.formData,\n      this.props.payload,\n      this.props.onAddFilter,\n      this.setTooltip,\n      filters,\n    );\n\n    return [layer];\n  }\n\n  setTooltip = tooltip => {\n    const { current } = this.containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  };\n\n  render() {\n    const { formData, payload, setControlValue } = this.props;\n\n    return (\n      <div>\n        <AnimatableDeckGLContainer\n          ref={this.containerRef}\n          aggregation\n          getLayers={this.getLayers}\n          start={this.state.start}\n          end={this.state.end}\n          getStep={this.state.getStep}\n          values={this.state.values}\n          disabled={this.state.disabled}\n          viewport={this.state.viewport}\n          width={this.props.width}\n          height={this.props.height}\n          mapboxApiAccessToken={payload.data.mapboxApiKey}\n          mapStyle={formData.mapbox_style}\n          setControlValue={setControlValue}\n          onValuesChange={this.onValuesChange}\n          onViewportChange={this.onViewportChange}\n        />\n      </div>\n    );\n  }\n}\n\nDeckGLScreenGrid.propTypes = propTypes;\nDeckGLScreenGrid.defaultProps = defaultProps;\n\nexport default DeckGLScreenGrid;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}