{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { css, truncationCSS, useCSSTextTruncation } from '@superset-ui/core';\nimport { Menu } from 'src/components/Menu';\nimport { Tooltip } from 'src/components/Tooltip';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const MenuItemWithTruncation = (_ref) => {let { tooltipText, children, ...props } = _ref;\n  const [itemRef, itemIsTruncated] = useCSSTextTruncation();\n  return ___EmotionJSX(Menu.Item, _extends({ css: css`\n        display: flex;\n      ` }, props),\n  ___EmotionJSX(Tooltip, { title: itemIsTruncated ? tooltipText : null },\n  ___EmotionJSX(\"div\", { ref: itemRef, css: css`\n            max-width: 100%;\n            ${truncationCSS};\n          ` },\n  children)));\n\n\n\n};","map":{"version":3,"mappings":"+DAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,aAAd,EAA6BC,oBAA7B,QAAyD,mBAAzD;AACA,SAASC,IAAT,QAAqB,qBAArB;AACA,SAASC,OAAT,QAAwB,wBAAxB,C;AASA,OAAO,MAAMC,sBAAsB,GAAG,UAIJ,KAJK,EACrCC,WADqC,EAErCC,QAFqC,EAGrC,GAAGC,KAHkC,EAIL;EAChC,MAAM,CAACC,OAAD,EAAUC,eAAV,IAA6BR,oBAAoB,EAAvD;EAEA,OACE,cAAC,IAAD,CAAM,IAAN,aACE,GAAG,EAAEF,GAAG;;OADV,IAIMQ,KAJN;EAME,cAAC,OAAD,IAAS,KAAK,EAAEE,eAAe,GAAGJ,WAAH,GAAiB,IAAhD;EACE,uBACE,GAAG,EAAEG,OADP,EAEE,GAAG,EAAET,GAAG;;cAEJC,aAAa;WAJnB;EAOGM,QAPH,CADF,CANF,CADF;;;;AAoBD,CA3BM","names":["React","css","truncationCSS","useCSSTextTruncation","Menu","Tooltip","MenuItemWithTruncation","tooltipText","children","props","itemRef","itemIsTruncated"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/components/Chart/MenuItemWithTruncation.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { ReactNode } from 'react';\nimport { css, truncationCSS, useCSSTextTruncation } from '@superset-ui/core';\nimport { Menu } from 'src/components/Menu';\nimport { Tooltip } from 'src/components/Tooltip';\nimport type { MenuProps } from 'antd/lib/menu';\n\nexport type MenuItemWithTruncationProps = {\n  tooltipText: ReactNode;\n  children: ReactNode;\n  onClick?: MenuProps['onClick'];\n};\n\nexport const MenuItemWithTruncation = ({\n  tooltipText,\n  children,\n  ...props\n}: MenuItemWithTruncationProps) => {\n  const [itemRef, itemIsTruncated] = useCSSTextTruncation<HTMLDivElement>();\n\n  return (\n    <Menu.Item\n      css={css`\n        display: flex;\n      `}\n      {...props}\n    >\n      <Tooltip title={itemIsTruncated ? tooltipText : null}>\n        <div\n          ref={itemRef}\n          css={css`\n            max-width: 100%;\n            ${truncationCSS};\n          `}\n        >\n          {children}\n        </div>\n      </Tooltip>\n    </Menu.Item>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}