{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { fitBounds } from '@math.gl/web-mercator';\nimport computeBoundsFromPoints from './computeBoundsFromPoints';\nexport default function fitViewport(originalViewPort, _ref) {let { points, width, height, minExtent, maxZoom, offset, padding = 20 } = _ref;\n  const { bearing, pitch } = originalViewPort;\n  const bounds = computeBoundsFromPoints(points);\n  try {\n    return {\n      ...fitBounds({\n        bounds,\n        width,\n        height,\n        minExtent,\n        maxZoom,\n        offset,\n        padding }),\n\n      bearing,\n      pitch };\n\n  }\n  catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Could not fit viewport', error);\n  }\n  return originalViewPort;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,SAAT,QAA0B,uBAA1B;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AAqBA,eAAc,SAAUC,WAAV,CACZC,gBADY,QAUS,KARrB,EACEC,MADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,SAJF,EAKEC,OALF,EAMEC,MANF,EAOEC,OAAO,GAAG,EAPZ,EAQqB;EAErB,MAAM,EAAEC,OAAF,EAAWC,KAAX,KAAqBT,gBAA3B;EACA,MAAMU,MAAM,GAAGZ,uBAAuB,CAACG,MAAD,CAAtC;EAEA,IAAI;IACF,OAAO;MACL,GAAGJ,SAAS,CAAC;QACXa,MADW;QAEXR,KAFW;QAGXC,MAHW;QAIXC,SAJW;QAKXC,OALW;QAMXC,MANW;QAOXC,OAPW,EAAD,CADP;;MAULC,OAVK;MAWLC,KAXK,EAAP;;EAaD;EAAC,OAAOE,KAAP,EAAc;IACd;IACAC,OAAO,CAACD,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;EACD;EAED,OAAOX,gBAAP;AACD","names":["fitBounds","computeBoundsFromPoints","fitViewport","originalViewPort","points","width","height","minExtent","maxZoom","offset","padding","bearing","pitch","bounds","error","console"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utils/fitViewport.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { fitBounds } from '@math.gl/web-mercator';\nimport computeBoundsFromPoints from './computeBoundsFromPoints';\nimport { Point } from '../types';\n\nexport type Viewport = {\n  longitude: number;\n  latitude: number;\n  zoom: number;\n  bearing?: number;\n  pitch?: number;\n};\n\nexport type FitViewportOptions = {\n  points: Point[];\n  width: number;\n  height: number;\n  minExtent?: number;\n  maxZoom?: number;\n  offset?: [number, number];\n  padding?: number;\n};\n\nexport default function fitViewport(\n  originalViewPort: Viewport,\n  {\n    points,\n    width,\n    height,\n    minExtent,\n    maxZoom,\n    offset,\n    padding = 20,\n  }: FitViewportOptions,\n) {\n  const { bearing, pitch } = originalViewPort;\n  const bounds = computeBoundsFromPoints(points);\n\n  try {\n    return {\n      ...fitBounds({\n        bounds,\n        width,\n        height,\n        minExtent,\n        maxZoom,\n        offset,\n        padding,\n      }),\n      bearing,\n      pitch,\n    };\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Could not fit viewport', error);\n  }\n\n  return originalViewPort;\n}\n"]},"metadata":{},"sourceType":"module"}