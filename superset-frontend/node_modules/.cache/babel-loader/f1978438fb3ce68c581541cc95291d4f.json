{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Row, Col } from 'src/components';\nimport { Input, TextArea } from 'src/components/Input';\nimport { t, styled } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport { Menu } from 'src/components/Menu';\nimport { Form, FormItem } from 'src/components/Form';\nimport Modal from 'src/components/Modal';\nimport SaveDatasetActionButton from 'src/SqlLab/components/SaveDatasetActionButton';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport useQueryEditor from 'src/SqlLab/hooks/useQueryEditor';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Styles = styled.span`\n  span[role='img'] {\n    display: flex;\n    margin: 0;\n    color: ${(_ref) => {let { theme } = _ref;return theme.colors.grayscale.base;}};\n    svg {\n      vertical-align: -${(_ref2) => {let { theme } = _ref2;return theme.gridUnit * 1.25;}}px;\n      margin: 0;\n    }\n  }\n`;\nconst SaveQuery = (_ref3) => {let { queryEditorId, onSave = () => {}, onUpdate, saveQueryWarning = null, database, columns } = _ref3;\n  const queryEditor = useQueryEditor(queryEditorId, [\n  'autorun',\n  'name',\n  'description',\n  'remoteId',\n  'dbId',\n  'latestQueryId',\n  'queryLimit',\n  'schema',\n  'selectedText',\n  'sql',\n  'templateParams']);\n\n  const query = useMemo(() => ({\n    ...queryEditor,\n    columns }),\n  [queryEditor, columns]);\n  const defaultLabel = query.name || query.description || t('Undefined');\n  const [description, setDescription] = useState(query.description || '');\n  const [label, setLabel] = useState(defaultLabel);\n  const [showSave, setShowSave] = useState(false);\n  const [showSaveDatasetModal, setShowSaveDatasetModal] = useState(false);\n  const isSaved = !!query.remoteId;\n  const canExploreDatabase = !!(database != null && database.allows_virtual_table_explore);\n  const overlayMenu = ___EmotionJSX(Menu, null,\n  ___EmotionJSX(Menu.Item, { onClick: () => setShowSaveDatasetModal(true) },\n  t('Save dataset')));\n\n\n  const queryPayload = () => {var _query$dbId;return {\n      name: label,\n      description,\n      dbId: (_query$dbId = query.dbId) != null ? _query$dbId : 0,\n      sql: query.sql,\n      schema: query.schema,\n      templateParams: query.templateParams,\n      remoteId: (query == null ? void 0 : query.remoteId) || undefined };};\n\n  useEffect(() => {\n    if (!isSaved)\n    setLabel(defaultLabel);\n  }, [defaultLabel]);\n  const close = () => setShowSave(false);\n  const onSaveWrapper = () => {\n    onSave(queryPayload(), query.id);\n    close();\n  };\n  const onUpdateWrapper = () => {\n    onUpdate(queryPayload(), query.id);\n    close();\n  };\n  const onLabelChange = (e) => {\n    setLabel(e.target.value);\n  };\n  const onDescriptionChange = (e) => {\n    setDescription(e.target.value);\n  };\n  const renderModalBody = () => ___EmotionJSX(Form, { layout: \"vertical\" },\n  ___EmotionJSX(Row, null,\n  ___EmotionJSX(Col, { xs: 24 },\n  ___EmotionJSX(FormItem, { label: t('Name') },\n  ___EmotionJSX(Input, { type: \"text\", value: label, onChange: onLabelChange })))),\n\n\n\n  ___EmotionJSX(\"br\", null),\n  ___EmotionJSX(Row, null,\n  ___EmotionJSX(Col, { xs: 24 },\n  ___EmotionJSX(FormItem, { label: t('Description') },\n  ___EmotionJSX(TextArea, { rows: 4, value: description, onChange: onDescriptionChange })))),\n\n\n\n  saveQueryWarning && ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"br\", null),\n  ___EmotionJSX(\"div\", null,\n  ___EmotionJSX(Row, null,\n  ___EmotionJSX(Col, { xs: 24 },\n  ___EmotionJSX(\"small\", null, saveQueryWarning))),\n\n\n  ___EmotionJSX(\"br\", null))));\n\n\n\n  return ___EmotionJSX(Styles, { className: \"SaveQuery\" },\n  ___EmotionJSX(SaveDatasetActionButton, { setShowSave: setShowSave, overlayMenu: canExploreDatabase ? overlayMenu : null }),\n  ___EmotionJSX(SaveDatasetModal, { visible: showSaveDatasetModal, onHide: () => setShowSaveDatasetModal(false), buttonTextOnSave: t('Save & Explore'), buttonTextOnOverwrite: t('Overwrite & Explore'), datasource: getDatasourceAsSaveableDataset(query) }),\n  ___EmotionJSX(Modal, { className: \"save-query-modal\", onHandledPrimaryAction: onSaveWrapper, onHide: close, primaryButtonName: isSaved ? t('Save') : t('Save as'), width: \"620px\", show: showSave, title: ___EmotionJSX(\"h4\", null, t('Save query')), footer: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(Button, { onClick: close, cta: true },\n    t('Cancel')),\n\n    ___EmotionJSX(Button, { buttonStyle: isSaved ? undefined : 'primary', onClick: onSaveWrapper, className: \"m-r-3\", cta: true },\n    isSaved ? t('Save as new') : t('Save')),\n\n    isSaved && ___EmotionJSX(Button, { buttonStyle: \"primary\", onClick: onUpdateWrapper, className: \"m-r-3\", cta: true },\n    t('Update'))) },\n\n\n  renderModalBody()));\n\n\n};\nexport default SaveQuery;","map":{"version":3,"mappings":"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","names":["React","useState","useEffect","useMemo","Row","Col","Input","TextArea","t","styled","Button","Menu","Form","FormItem","Modal","SaveDatasetActionButton","SaveDatasetModal","getDatasourceAsSaveableDataset","useQueryEditor","Styles","span","theme","colors","grayscale","base","gridUnit","SaveQuery","queryEditorId","onSave","onUpdate","saveQueryWarning","database","columns","queryEditor","query","defaultLabel","name","description","setDescription","label","setLabel","showSave","setShowSave","showSaveDatasetModal","setShowSaveDatasetModal","isSaved","remoteId","canExploreDatabase","allows_virtual_table_explore","overlayMenu","queryPayload","dbId","sql","schema","templateParams","undefined","close","onSaveWrapper","id","onUpdateWrapper","onLabelChange","e","target","value","onDescriptionChange","renderModalBody"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/SaveQuery/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Row, Col } from 'src/components';\nimport { Input, TextArea } from 'src/components/Input';\nimport { t, styled } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport { Menu } from 'src/components/Menu';\nimport { Form, FormItem } from 'src/components/Form';\nimport Modal from 'src/components/Modal';\nimport SaveDatasetActionButton from 'src/SqlLab/components/SaveDatasetActionButton';\nimport {\n  SaveDatasetModal,\n  ISaveableDatasource,\n} from 'src/SqlLab/components/SaveDatasetModal';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport useQueryEditor from 'src/SqlLab/hooks/useQueryEditor';\nimport { QueryEditor } from 'src/SqlLab/types';\n\ninterface SaveQueryProps {\n  queryEditorId: string;\n  columns: ISaveableDatasource['columns'];\n  onSave: (arg0: QueryPayload, id: string) => void;\n  onUpdate: (arg0: QueryPayload, id: string) => void;\n  saveQueryWarning: string | null;\n  database: Record<string, any>;\n}\n\ntype QueryPayload = {\n  name: string;\n  description?: string;\n  id?: string;\n  remoteId?: number;\n} & Pick<QueryEditor, 'dbId' | 'schema' | 'sql'>;\n\nconst Styles = styled.span`\n  span[role='img'] {\n    display: flex;\n    margin: 0;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n    svg {\n      vertical-align: -${({ theme }) => theme.gridUnit * 1.25}px;\n      margin: 0;\n    }\n  }\n`;\n\nconst SaveQuery = ({\n  queryEditorId,\n  onSave = () => {},\n  onUpdate,\n  saveQueryWarning = null,\n  database,\n  columns,\n}: SaveQueryProps) => {\n  const queryEditor = useQueryEditor(queryEditorId, [\n    'autorun',\n    'name',\n    'description',\n    'remoteId',\n    'dbId',\n    'latestQueryId',\n    'queryLimit',\n    'schema',\n    'selectedText',\n    'sql',\n    'templateParams',\n  ]);\n  const query = useMemo(\n    () => ({\n      ...queryEditor,\n      columns,\n    }),\n    [queryEditor, columns],\n  );\n  const defaultLabel = query.name || query.description || t('Undefined');\n  const [description, setDescription] = useState<string>(\n    query.description || '',\n  );\n  const [label, setLabel] = useState<string>(defaultLabel);\n  const [showSave, setShowSave] = useState<boolean>(false);\n  const [showSaveDatasetModal, setShowSaveDatasetModal] = useState(false);\n  const isSaved = !!query.remoteId;\n  const canExploreDatabase = !!database?.allows_virtual_table_explore;\n\n  const overlayMenu = (\n    <Menu>\n      <Menu.Item onClick={() => setShowSaveDatasetModal(true)}>\n        {t('Save dataset')}\n      </Menu.Item>\n    </Menu>\n  );\n\n  const queryPayload = () => ({\n    name: label,\n    description,\n    dbId: query.dbId ?? 0,\n    sql: query.sql,\n    schema: query.schema,\n    templateParams: query.templateParams,\n    remoteId: query?.remoteId || undefined,\n  });\n\n  useEffect(() => {\n    if (!isSaved) setLabel(defaultLabel);\n  }, [defaultLabel]);\n\n  const close = () => setShowSave(false);\n\n  const onSaveWrapper = () => {\n    onSave(queryPayload(), query.id);\n    close();\n  };\n\n  const onUpdateWrapper = () => {\n    onUpdate(queryPayload(), query.id);\n    close();\n  };\n\n  const onLabelChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setLabel(e.target.value);\n  };\n\n  const onDescriptionChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setDescription(e.target.value);\n  };\n\n  const renderModalBody = () => (\n    <Form layout=\"vertical\">\n      <Row>\n        <Col xs={24}>\n          <FormItem label={t('Name')}>\n            <Input type=\"text\" value={label} onChange={onLabelChange} />\n          </FormItem>\n        </Col>\n      </Row>\n      <br />\n      <Row>\n        <Col xs={24}>\n          <FormItem label={t('Description')}>\n            <TextArea\n              rows={4}\n              value={description}\n              onChange={onDescriptionChange}\n            />\n          </FormItem>\n        </Col>\n      </Row>\n      {saveQueryWarning && (\n        <>\n          <br />\n          <div>\n            <Row>\n              <Col xs={24}>\n                <small>{saveQueryWarning}</small>\n              </Col>\n            </Row>\n            <br />\n          </div>\n        </>\n      )}\n    </Form>\n  );\n\n  return (\n    <Styles className=\"SaveQuery\">\n      <SaveDatasetActionButton\n        setShowSave={setShowSave}\n        overlayMenu={canExploreDatabase ? overlayMenu : null}\n      />\n      <SaveDatasetModal\n        visible={showSaveDatasetModal}\n        onHide={() => setShowSaveDatasetModal(false)}\n        buttonTextOnSave={t('Save & Explore')}\n        buttonTextOnOverwrite={t('Overwrite & Explore')}\n        datasource={getDatasourceAsSaveableDataset(query)}\n      />\n      <Modal\n        className=\"save-query-modal\"\n        onHandledPrimaryAction={onSaveWrapper}\n        onHide={close}\n        primaryButtonName={isSaved ? t('Save') : t('Save as')}\n        width=\"620px\"\n        show={showSave}\n        title={<h4>{t('Save query')}</h4>}\n        footer={\n          <>\n            <Button onClick={close} data-test=\"cancel-query\" cta>\n              {t('Cancel')}\n            </Button>\n            <Button\n              buttonStyle={isSaved ? undefined : 'primary'}\n              onClick={onSaveWrapper}\n              className=\"m-r-3\"\n              cta\n            >\n              {isSaved ? t('Save as new') : t('Save')}\n            </Button>\n            {isSaved && (\n              <Button\n                buttonStyle=\"primary\"\n                onClick={onUpdateWrapper}\n                className=\"m-r-3\"\n                cta\n              >\n                {t('Update')}\n              </Button>\n            )}\n          </>\n        }\n      >\n        {renderModalBody()}\n      </Modal>\n    </Styles>\n  );\n};\n\nexport default SaveQuery;\n"]},"metadata":{},"sourceType":"module"}