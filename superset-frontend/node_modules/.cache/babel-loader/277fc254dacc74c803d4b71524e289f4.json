{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { buildQueryContext, ensureIsArray } from '@superset-ui/core';\nexport default function buildQuery(formData) {\n  const { series_limit_metric } = formData;\n  const sortByMetric = ensureIsArray(series_limit_metric)[0];\n  return buildQueryContext(formData, (baseQueryObject) => {var _metrics;\n    let { metrics, orderby = [] } = baseQueryObject;\n    metrics = metrics || [];\n    // override orderby with timeseries metric\n    if (sortByMetric) {\n      orderby = [[sortByMetric, false]];\n    } else\n    if (((_metrics = metrics) == null ? void 0 : _metrics.length) > 0) {\n      // default to ordering by first metric in descending order\n      // when no \"sort by\" metric is set (regardless if \"SORT DESC\" is set to true)\n      orderby = [[metrics[0], false]];\n    }\n    return [\n    {\n      ...baseQueryObject,\n      orderby }];\n\n\n  });\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,iBADF,EAGEC,aAHF,QAIO,mBAJP;AAMA,eAAc,SAAUC,UAAV,CAAqBC,QAArB,EAA4C;EACxD,MAAM,EAAEC,mBAAF,KAA0BD,QAAhC;EACA,MAAME,YAAY,GAAGJ,aAAa,CAACG,mBAAD,CAAb,CAAmC,CAAnC,CAArB;EAEA,OAAOJ,iBAAiB,CAACG,QAAD,EAAW,gBAAe,KAAG;IACnD,IAAI,EAAEG,OAAF,EAAWC,OAAO,GAAG,EAArB,KAA4BC,eAAhC;IACAF,OAAO,GAAGA,OAAO,IAAI,EAArB;IACA;IACA,IAAID,YAAJ,EAAkB;MAChBE,OAAO,GAAG,CAAC,CAACF,YAAD,EAAe,KAAf,CAAD,CAAV;IACD,CAFD;IAEO,IAAI,oBAAO,SAAP,qBAASI,MAAT,IAAkB,CAAtB,EAAyB;MAC9B;MACA;MACAF,OAAO,GAAG,CAAC,CAACD,OAAO,CAAC,CAAD,CAAR,EAAa,KAAb,CAAD,CAAV;IACD;IACD,OAAO;IACL;MACE,GAAGE,eADL;MAEED,OAFF,EADK,CAAP;;;EAMD,CAjBuB,CAAxB;AAkBD","names":["buildQueryContext","ensureIsArray","buildQuery","formData","series_limit_metric","sortByMetric","metrics","orderby","baseQueryObject","length"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/plugin-chart-echarts/src/Radar/buildQuery.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  buildQueryContext,\n  QueryFormData,\n  ensureIsArray,\n} from '@superset-ui/core';\n\nexport default function buildQuery(formData: QueryFormData) {\n  const { series_limit_metric } = formData;\n  const sortByMetric = ensureIsArray(series_limit_metric)[0];\n\n  return buildQueryContext(formData, baseQueryObject => {\n    let { metrics, orderby = [] } = baseQueryObject;\n    metrics = metrics || [];\n    // override orderby with timeseries metric\n    if (sortByMetric) {\n      orderby = [[sortByMetric, false]];\n    } else if (metrics?.length > 0) {\n      // default to ordering by first metric in descending order\n      // when no \"sort by\" metric is set (regardless if \"SORT DESC\" is set to true)\n      orderby = [[metrics[0], false]];\n    }\n    return [\n      {\n        ...baseQueryObject,\n        orderby,\n      },\n    ];\n  });\n}\n"]},"metadata":{},"sourceType":"module"}