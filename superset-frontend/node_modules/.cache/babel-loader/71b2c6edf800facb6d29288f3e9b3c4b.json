{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { css, styled, useTheme } from '@superset-ui/core';\nimport { ScopingTreePanel } from './ScopingTreePanel';\nimport { ChartsScopingListPanel } from './ChartsScopingListPanel';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst ModalContentContainer = styled.div`\n  ${(_ref) => {let { theme } = _ref;return css`\n    display: flex;\n    height: 100%;\n    & > div {\n      padding: ${theme.gridUnit * 4}px;\n    }\n  `;}}\n`;\nexport const ScopingModalContent = (_ref2) => {let { chartId, currentScope, onScopeUpdate, onSelectChange, chartConfigs, setCurrentChartId, removeCustomScope, addNewCustomScope } = _ref2;\n  const theme = useTheme();\n  return ___EmotionJSX(ModalContentContainer, null,\n  ___EmotionJSX(\"div\", { css: css`\n          width: 35%;\n          border-right: 1px solid ${theme.colors.grayscale.light2};\n        ` },\n  ___EmotionJSX(ChartsScopingListPanel, { setCurrentChartId: setCurrentChartId, activeChartId: chartId, chartConfigs: chartConfigs, removeCustomScope: removeCustomScope, addNewCustomScope: addNewCustomScope })),\n\n  ___EmotionJSX(ScopingTreePanel, { chartId: chartId, currentScope: currentScope, onScopeUpdate: onScopeUpdate, onSelectChange: onSelectChange, chartConfigs: chartConfigs }));\n\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAiCC,MAAjC,EAAyCC,QAAzC,QAAyD,mBAAzD;AAEA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,sBAAT,QAAuC,0BAAvC,C;AAaA,MAAMC,qBAAqB,GAAGJ,MAAM,CAACK,GAAG;IACpC,eAAC,EAAEC,KAAF,EAAD,eAAeP,GAAG;;;;iBAILO,KAAK,CAACC,QAAN,GAAiB,CAAC;;GAJ/B,EAMD;CAPH;AAUA,OAAO,MAAMC,mBAAmB,GAAG,WASJ,KATK,EAClCC,OADkC,EAElCC,YAFkC,EAGlCC,aAHkC,EAIlCC,cAJkC,EAKlCC,YALkC,EAMlCC,iBANkC,EAOlCC,iBAPkC,EAQlCC,iBARkC,EASL;EAC7B,MAAMV,KAAK,GAAGL,QAAQ,EAAtB;EACA,OACE,cAAC,qBAAD;EACE,uBACE,GAAG,EAAEF,GAAG;;oCAEoBO,KAAK,CAACW,MAAN,CAAaC,SAAb,CAAuBC,MAAM;SAH3D;EAOE,cAAC,sBAAD,IACE,iBAAiB,EAAEL,iBADrB,EAEE,aAAa,EAAEL,OAFjB,EAGE,YAAY,EAAEI,YAHhB,EAIE,iBAAiB,EAAEE,iBAJrB,EAKE,iBAAiB,EAAEC,iBALrB,GAPF,CADF;;EAgBE,cAAC,gBAAD,IACE,OAAO,EAAEP,OADX,EAEE,YAAY,EAAEC,YAFhB,EAGE,aAAa,EAAEC,aAHjB,EAIE,cAAc,EAAEC,cAJlB,EAKE,YAAY,EAAEC,YALhB,GAhBF,CADF;;AA0BD,CArCM","names":["React","css","styled","useTheme","ScopingTreePanel","ChartsScopingListPanel","ModalContentContainer","div","theme","gridUnit","ScopingModalContent","chartId","currentScope","onScopeUpdate","onSelectChange","chartConfigs","setCurrentChartId","removeCustomScope","addNewCustomScope","colors","grayscale","light2"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/CrossFilters/ScopingModal/ScopingModalContent.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { css, NativeFilterScope, styled, useTheme } from '@superset-ui/core';\nimport { ChartConfiguration } from 'src/dashboard/types';\nimport { ScopingTreePanel } from './ScopingTreePanel';\nimport { ChartsScopingListPanel } from './ChartsScopingListPanel';\n\nexport interface ScopingModalContentProps {\n  chartId: number | undefined;\n  currentScope: NativeFilterScope;\n  onScopeUpdate: ({ scope }: { scope: NativeFilterScope }) => void;\n  onSelectChange: (chartId: number) => void;\n  chartConfigs: ChartConfiguration;\n  setCurrentChartId: (chartId: number | undefined) => void;\n  removeCustomScope: (chartId: number) => void;\n  addNewCustomScope: () => void;\n}\n\nconst ModalContentContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    height: 100%;\n    & > div {\n      padding: ${theme.gridUnit * 4}px;\n    }\n  `}\n`;\n\nexport const ScopingModalContent = ({\n  chartId,\n  currentScope,\n  onScopeUpdate,\n  onSelectChange,\n  chartConfigs,\n  setCurrentChartId,\n  removeCustomScope,\n  addNewCustomScope,\n}: ScopingModalContentProps) => {\n  const theme = useTheme();\n  return (\n    <ModalContentContainer>\n      <div\n        css={css`\n          width: 35%;\n          border-right: 1px solid ${theme.colors.grayscale.light2};\n        `}\n        data-test=\"scoping-list-panel\"\n      >\n        <ChartsScopingListPanel\n          setCurrentChartId={setCurrentChartId}\n          activeChartId={chartId}\n          chartConfigs={chartConfigs}\n          removeCustomScope={removeCustomScope}\n          addNewCustomScope={addNewCustomScope}\n        />\n      </div>\n      <ScopingTreePanel\n        chartId={chartId}\n        currentScope={currentScope}\n        onScopeUpdate={onScopeUpdate}\n        onSelectChange={onSelectChange}\n        chartConfigs={chartConfigs}\n      />\n    </ModalContentContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}