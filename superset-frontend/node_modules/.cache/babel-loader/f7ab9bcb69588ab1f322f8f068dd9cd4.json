{"ast":null,"code":"import { css as _css } from \"@emotion/react\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ButtonGroup from 'src/components/ButtonGroup';\nimport Alert from 'src/components/Alert';\nimport Button from 'src/components/Button';\nimport shortid from 'shortid';\nimport { QueryState, styled, t, useTheme, usePrevious } from '@superset-ui/core';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { EXPLORE_CHART_DEFAULT } from 'src/SqlLab/types';\nimport { mountExploreUrl } from 'src/explore/exploreUtils';\nimport { postFormData } from 'src/explore/exploreUtils/formData';\nimport ProgressBar from 'src/components/ProgressBar';\nimport Loading from 'src/components/Loading';\nimport FilterableTable from 'src/components/FilterableTable';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { prepareCopyToClipboardTabularData } from 'src/utils/common';\nimport { addQueryEditor, clearQueryResults, CtasEnum, fetchQueryResults, reFetchQueryResults, reRunQuery } from 'src/SqlLab/actions/sqlLab';\nimport { URL_PARAMS } from 'src/constants';\nimport ExploreCtasResultsButton from '../ExploreCtasResultsButton';\nimport ExploreResultsButton from '../ExploreResultsButton';\nimport HighlightedSql from '../HighlightedSql';\nimport QueryStateLabel from '../QueryStateLabel';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nvar LIMITING_FACTOR;\n(function (LIMITING_FACTOR) {\n  LIMITING_FACTOR[\"QUERY\"] = \"QUERY\";\n  LIMITING_FACTOR[\"QUERY_AND_DROPDOWN\"] = \"QUERY_AND_DROPDOWN\";\n  LIMITING_FACTOR[\"DROPDOWN\"] = \"DROPDOWN\";\n  LIMITING_FACTOR[\"NOT_LIMITED\"] = \"NOT_LIMITED\";\n})(LIMITING_FACTOR || (LIMITING_FACTOR = {}));\nconst ResultContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: ${(_ref) => {let { theme } = _ref;return theme.gridUnit * 2;}}px;\n`;\nconst ResultlessStyles = styled.div`\n  position: relative;\n  min-height: ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit * 25;}}px;\n  [role='alert'] {\n    margin-top: ${(_ref3) => {let { theme } = _ref3;return theme.gridUnit * 2;}}px;\n  }\n  .sql-result-track-job {\n    margin-top: ${(_ref4) => {let { theme } = _ref4;return theme.gridUnit * 2;}}px;\n  }\n`;\n// Making text render line breaks/tabs as is as monospace,\n// but wrapping text too so text doesn't overflow\nconst MonospaceDiv = styled.div`\n  font-family: ${(_ref5) => {let { theme } = _ref5;return theme.typography.families.monospace;}};\n  white-space: pre;\n  word-break: break-word;\n  overflow-x: auto;\n  white-space: pre-wrap;\n`;\nconst ReturnedRows = styled.div`\n  font-size: ${(_ref6) => {let { theme } = _ref6;return theme.typography.sizes.s;}}px;\n  line-height: ${(_ref7) => {let { theme } = _ref7;return theme.gridUnit * 6;}}px;\n`;\nconst ResultSetControls = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst ResultSetButtons = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  padding-right: ${(_ref8) => {let { theme } = _ref8;return 2 * theme.gridUnit;}}px;\n`;\nconst LimitMessage = styled.span`\n  color: ${(_ref9) => {let { theme } = _ref9;return theme.colors.secondary.light1;}};\n  margin-left: ${(_ref10) => {let { theme } = _ref10;return theme.gridUnit * 2;}}px;\n`;\nconst ResultSet = (_ref11) => {var _query$results2, _query$extra$progress, _query$extra;let { cache = false, csv = true, database = {}, displayLimit, height, query, search = true, showSql = false, visualize = true, user, defaultQueryLimit } = _ref11;\n  const theme = useTheme();\n  const [searchText, setSearchText] = useState('');\n  const [cachedData, setCachedData] = useState([]);\n  const [showSaveDatasetModal, setShowSaveDatasetModal] = useState(false);\n  const [alertIsOpen, setAlertIsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const reRunQueryIfSessionTimeoutErrorOnMount = useCallback(() => {\n    if (query.errorMessage &&\n    query.errorMessage.indexOf('session timed out') > 0) {\n      dispatch(reRunQuery(query));\n    }\n  }, []);\n  useEffect(() => {\n    // only do this the first time the component is rendered/mounted\n    reRunQueryIfSessionTimeoutErrorOnMount();\n  }, [reRunQueryIfSessionTimeoutErrorOnMount]);\n  const fetchResults = (query) => {\n    dispatch(fetchQueryResults(query, displayLimit));\n  };\n  const prevQuery = usePrevious(query);\n  useEffect(() => {var _query$results, _query$results$data;\n    if (cache && query.cached && (query == null ? void 0 : (_query$results = query.results) == null ? void 0 : (_query$results$data = _query$results.data) == null ? void 0 : _query$results$data.length) > 0) {\n      setCachedData(query.results.data);\n      dispatch(clearQueryResults(query));\n    }\n    if (query.resultsKey && query.resultsKey !== (prevQuery == null ? void 0 : prevQuery.resultsKey)) {\n      fetchResults(query);\n    }\n  }, [query, cache]);\n  const calculateAlertRefHeight = (alertElement) => {\n    if (alertElement) {\n      setAlertIsOpen(true);\n    } else\n    {\n      setAlertIsOpen(false);\n    }\n  };\n  const popSelectStar = (tempSchema, tempTable) => {\n    const qe = {\n      id: shortid.generate(),\n      name: tempTable,\n      autorun: false,\n      dbId: query.dbId,\n      sql: `SELECT * FROM ${tempSchema ? `${tempSchema}.` : ''}${tempTable}` };\n\n    dispatch(addQueryEditor(qe));\n  };\n  const changeSearch = (event) => {\n    setSearchText(event.target.value);\n  };\n  const createExploreResultsOnClick = async () => {\n    const { results } = query;\n    if (results != null && results.query_id) {\n      const key = await postFormData(results.query_id, 'query', {\n        ...EXPLORE_CHART_DEFAULT,\n        datasource: `${results.query_id}__query`,\n        ...{\n          all_columns: results.columns.map((column) => column.column_name) } });\n\n\n      const url = mountExploreUrl(null, {\n        [URL_PARAMS.formDataKey.name]: key });\n\n      window.open(url, '_blank', 'noreferrer');\n    } else\n    {\n      addDangerToast(t('Unable to create chart without a query id.'));\n    }\n  };\n  const getExportCsvUrl = (clientId) => `/api/v1/sqllab/export/${clientId}/`;\n  const renderControls = () => {\n    if (search || visualize || csv) {\n      let { data } = query.results;\n      if (cache && query.cached) {\n        data = cachedData;\n      }\n      const { columns } = query.results;\n      // Added compute logic to stop user from being able to Save & Explore\n      const datasource = {\n        columns: query.results.columns,\n        name: (query == null ? void 0 : query.tab) || 'Untitled',\n        dbId: query == null ? void 0 : query.dbId,\n        sql: query == null ? void 0 : query.sql,\n        templateParams: query == null ? void 0 : query.templateParams,\n        schema: query == null ? void 0 : query.schema };\n\n      return ___EmotionJSX(ResultSetControls, null,\n      ___EmotionJSX(SaveDatasetModal, { visible: showSaveDatasetModal, onHide: () => setShowSaveDatasetModal(false), buttonTextOnSave: t('Save & Explore'), buttonTextOnOverwrite: t('Overwrite & Explore'), modalDescription: t('Save this query as a virtual dataset to continue exploring'), datasource: datasource }),\n      ___EmotionJSX(ResultSetButtons, null,\n      visualize && (database == null ? void 0 : database.allows_virtual_table_explore) && ___EmotionJSX(ExploreResultsButton, { database: database, onClick: createExploreResultsOnClick }),\n      csv && ___EmotionJSX(Button, { buttonSize: \"small\", href: getExportCsvUrl(query.id) },\n      ___EmotionJSX(\"i\", { className: \"fa fa-file-text-o\" }), \" \", t('Download to CSV')),\n\n\n      ___EmotionJSX(CopyToClipboard, { text: prepareCopyToClipboardTabularData(data, columns), wrapped: false, copyNode: ___EmotionJSX(Button, { buttonSize: \"small\" },\n        ___EmotionJSX(\"i\", { className: \"fa fa-clipboard\" }), \" \", t('Copy to Clipboard')),\n        hideTooltip: true })),\n\n      search && ___EmotionJSX(\"input\", { type: \"text\", onChange: changeSearch, value: searchText, className: \"form-control input-sm\", placeholder: t('Filter results') }));\n\n    }\n    return ___EmotionJSX(\"div\", null);\n  };\n  const renderRowsReturned = () => {var _user$roles, _results$data;\n    const { results, rows, queryLimit, limitingFactor } = query;\n    let limitMessage;\n    const limitReached = results == null ? void 0 : results.displayLimitReached;\n    const limit = queryLimit || results.query.limit;\n    const isAdmin = !!(user != null && (_user$roles = user.roles) != null && _user$roles.Admin);\n    const rowsCount = Math.min(rows || 0, (results == null ? void 0 : (_results$data = results.data) == null ? void 0 : _results$data.length) || 0);\n    const displayMaxRowsReachedMessage = {\n      withAdmin: t('The number of results displayed is limited to %(rows)d by the configuration DISPLAY_MAX_ROW. ' +\n      'Please add additional limits/filters or download to csv to see more rows up to ' +\n      'the %(limit)d limit.', { rows: rowsCount, limit }),\n      withoutAdmin: t('The number of results displayed is limited to %(rows)d. ' +\n      'Please add additional limits/filters, download to csv, or contact an admin ' +\n      'to see more rows up to the %(limit)d limit.', { rows: rowsCount, limit }) };\n\n    const shouldUseDefaultDropdownAlert = limit === defaultQueryLimit &&\n    limitingFactor === LIMITING_FACTOR.DROPDOWN;\n    if (limitingFactor === LIMITING_FACTOR.QUERY && csv) {\n      limitMessage = t('The number of rows displayed is limited to %(rows)d by the query', { rows });\n    } else\n    if (limitingFactor === LIMITING_FACTOR.DROPDOWN &&\n    !shouldUseDefaultDropdownAlert) {\n      limitMessage = t('The number of rows displayed is limited to %(rows)d by the limit dropdown.', { rows });\n    } else\n    if (limitingFactor === LIMITING_FACTOR.QUERY_AND_DROPDOWN) {\n      limitMessage = t('The number of rows displayed is limited to %(rows)d by the query and limit dropdown.', { rows });\n    }\n    const rowsReturnedMessage = t('%(rows)d rows returned', {\n      rows });\n\n    const tooltipText = `${rowsReturnedMessage}. ${limitMessage}`;\n    return ___EmotionJSX(ReturnedRows, null,\n    !limitReached && !shouldUseDefaultDropdownAlert && ___EmotionJSX(\"span\", { title: tooltipText },\n    rowsReturnedMessage,\n    ___EmotionJSX(LimitMessage, null, limitMessage)),\n\n    !limitReached && shouldUseDefaultDropdownAlert && ___EmotionJSX(\"div\", { ref: calculateAlertRefHeight },\n    ___EmotionJSX(Alert, { type: \"warning\", message: t('%(rows)d rows returned', { rows }), onClose: () => setAlertIsOpen(false), description: t('The number of rows displayed is limited to %(rows)d by the dropdown.', { rows }) })),\n\n    limitReached && ___EmotionJSX(\"div\", { ref: calculateAlertRefHeight },\n    ___EmotionJSX(Alert, { type: \"warning\", onClose: () => setAlertIsOpen(false), message: t('%(rows)d rows returned', { rows: rowsCount }), description: isAdmin ?\n      displayMaxRowsReachedMessage.withAdmin :\n      displayMaxRowsReachedMessage.withoutAdmin })));\n\n\n  };\n  const limitReached = query == null ? void 0 : (_query$results2 = query.results) == null ? void 0 : _query$results2.displayLimitReached;\n  let sql;\n  let exploreDBId = query.dbId;\n  if (database != null && database.explore_database_id) {\n    exploreDBId = database.explore_database_id;\n  }\n  let trackingUrl;\n  if (query.trackingUrl &&\n  query.state !== QueryState.SUCCESS &&\n  query.state !== QueryState.FETCHING) {\n    trackingUrl = ___EmotionJSX(Button, { className: \"sql-result-track-job\", buttonSize: \"small\", href: query.trackingUrl, target: \"_blank\" },\n    query.state === QueryState.RUNNING ?\n    t('Track job') :\n    t('See query details'));\n\n  }\n  if (showSql) {\n    sql = ___EmotionJSX(HighlightedSql, { sql: query.sql });\n  }\n  if (query.state === QueryState.STOPPED) {\n    return ___EmotionJSX(Alert, { type: \"warning\", message: t('Query was stopped') });\n  }\n  if (query.state === QueryState.FAILED) {var _query$errors;\n    return ___EmotionJSX(ResultlessStyles, null,\n    ___EmotionJSX(ErrorMessageWithStackTrace, { title: t('Database error'), error: query == null ? void 0 : (_query$errors = query.errors) == null ? void 0 : _query$errors[0], subtitle: ___EmotionJSX(MonospaceDiv, null, query.errorMessage), copyText: query.errorMessage || undefined, link: query.link, source: \"sqllab\" }),\n    trackingUrl);\n\n  }\n  if (query.state === QueryState.SUCCESS && query.ctas) {\n    const { tempSchema, tempTable } = query;\n    let object = 'Table';\n    if (query.ctas_method === CtasEnum.VIEW) {\n      object = 'View';\n    }\n    return ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(Alert, { type: \"info\", message: ___EmotionJSX(React.Fragment, null,\n      t(object), \" [\",\n      ___EmotionJSX(\"strong\", null,\n      tempSchema ? `${tempSchema}.` : '',\n      tempTable), \"] \",\n\n      t('was created'), \" \\xA0\",\n      ___EmotionJSX(ButtonGroup, null,\n      ___EmotionJSX(Button, { buttonSize: \"small\", css: /*#__PURE__*/_css({ marginRight: theme.gridUnit }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:ResultSet;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), onClick: () => popSelectStar(tempSchema, tempTable) },\n      t('Query in a new tab')),\n\n      ___EmotionJSX(ExploreCtasResultsButton, { table: tempTable, schema: tempSchema, dbId: exploreDBId }))) }));\n\n\n\n  }\n  if (query.state === QueryState.SUCCESS && query.results) {\n    const { results } = query;\n    // Accounts for offset needed for height of ResultSetRowsReturned component if !limitReached\n    const rowMessageHeight = !limitReached ? 32 : 0;\n    // Accounts for offset needed for height of Alert if this.state.alertIsOpen\n    const alertContainerHeight = 70;\n    // We need to calculate the height of this.renderRowsReturned()\n    // if we want results panel to be proper height because the\n    // FilterTable component needs an explicit height to render\n    // the Table component\n    const rowsHeight = alertIsOpen ?\n    height - alertContainerHeight :\n    height - rowMessageHeight;\n    let data;\n    if (cache && query.cached) {\n      data = cachedData;\n    } else\n    if (results != null && results.data) {\n      ({ data } = results);\n    }\n    if (data && data.length > 0) {\n      const expandedColumns = results.expanded_columns ?\n      results.expanded_columns.map((col) => col.column_name) :\n      [];\n      return ___EmotionJSX(ResultContainer, null,\n      renderControls(),\n      renderRowsReturned(),\n      sql,\n      ___EmotionJSX(FilterableTable, { data: data, orderedColumnKeys: results.columns.map((col) => col.column_name), height: rowsHeight, filterText: searchText, expandedColumns: expandedColumns }));\n\n    }\n    if (data && data.length === 0) {\n      return ___EmotionJSX(Alert, { type: \"warning\", message: t('The query returned no data') });\n    }\n  }\n  if (query.cached || query.state === QueryState.SUCCESS && !query.results) {\n    if (query.isDataPreview) {\n      return ___EmotionJSX(Button, { buttonSize: \"small\", buttonStyle: \"primary\", onClick: () => dispatch(reFetchQueryResults({\n          ...query,\n          isDataPreview: true })) },\n\n      t('Fetch data preview'));\n\n    }\n    if (query.resultsKey) {\n      return ___EmotionJSX(Button, { buttonSize: \"small\", buttonStyle: \"primary\", onClick: () => fetchResults(query) },\n      t('Refetch results'));\n\n    }\n  }\n  let progressBar;\n  if (query.progress > 0) {\n    progressBar = ___EmotionJSX(ProgressBar, { percent: parseInt(query.progress.toFixed(0), 10), striped: true });\n  }\n  const progressMsg = (_query$extra$progress = query == null ? void 0 : (_query$extra = query.extra) == null ? void 0 : _query$extra.progress) != null ? _query$extra$progress : null;\n  return ___EmotionJSX(ResultlessStyles, null,\n  ___EmotionJSX(\"div\", null, !progressBar && ___EmotionJSX(Loading, { position: \"normal\" })),\n\n  ___EmotionJSX(\"div\", null, query.progress === 100 && ___EmotionJSX(Loading, { position: \"normal\" })),\n  ___EmotionJSX(QueryStateLabel, { query: query }),\n  ___EmotionJSX(\"div\", null, progressMsg && ___EmotionJSX(Alert, { type: \"success\", message: progressMsg })),\n  ___EmotionJSX(\"div\", null, query.progress !== 100 && progressBar),\n  trackingUrl && ___EmotionJSX(\"div\", null, trackingUrl));\n\n};\nexport default ResultSet;","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useState","useDispatch","ButtonGroup","Alert","Button","shortid","QueryState","styled","t","useTheme","usePrevious","ErrorMessageWithStackTrace","SaveDatasetModal","EXPLORE_CHART_DEFAULT","mountExploreUrl","postFormData","ProgressBar","Loading","FilterableTable","CopyToClipboard","addDangerToast","prepareCopyToClipboardTabularData","addQueryEditor","clearQueryResults","CtasEnum","fetchQueryResults","reFetchQueryResults","reRunQuery","URL_PARAMS","ExploreCtasResultsButton","ExploreResultsButton","HighlightedSql","QueryStateLabel","LIMITING_FACTOR","ResultContainer","div","theme","gridUnit","ResultlessStyles","MonospaceDiv","typography","families","monospace","ReturnedRows","sizes","s","ResultSetControls","ResultSetButtons","LimitMessage","span","colors","secondary","light1","ResultSet","cache","csv","database","displayLimit","height","query","search","showSql","visualize","user","defaultQueryLimit","searchText","setSearchText","cachedData","setCachedData","showSaveDatasetModal","setShowSaveDatasetModal","alertIsOpen","setAlertIsOpen","dispatch","reRunQueryIfSessionTimeoutErrorOnMount","errorMessage","indexOf","fetchResults","prevQuery","cached","results","data","length","resultsKey","calculateAlertRefHeight","alertElement","popSelectStar","tempSchema","tempTable","qe","id","generate","name","autorun","dbId","sql","changeSearch","event","target","value","createExploreResultsOnClick","query_id","key","datasource","all_columns","columns","map","column","column_name","url","formDataKey","window","open","getExportCsvUrl","clientId","renderControls","tab","templateParams","schema","allows_virtual_table_explore","renderRowsReturned","rows","queryLimit","limitingFactor","limitMessage","limitReached","displayLimitReached","limit","isAdmin","roles","Admin","rowsCount","Math","min","displayMaxRowsReachedMessage","withAdmin","withoutAdmin","shouldUseDefaultDropdownAlert","DROPDOWN","QUERY","QUERY_AND_DROPDOWN","rowsReturnedMessage","tooltipText","exploreDBId","explore_database_id","trackingUrl","state","SUCCESS","FETCHING","RUNNING","STOPPED","FAILED","errors","undefined","link","ctas","object","ctas_method","VIEW","marginRight","rowMessageHeight","alertContainerHeight","rowsHeight","expandedColumns","expanded_columns","col","isDataPreview","progressBar","progress","parseInt","toFixed","progressMsg","extra"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/SqlLab/components/ResultSet/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ButtonGroup from 'src/components/ButtonGroup';\nimport Alert from 'src/components/Alert';\nimport Button from 'src/components/Button';\nimport shortid from 'shortid';\nimport {\n  QueryResponse,\n  QueryState,\n  styled,\n  t,\n  useTheme,\n  usePrevious,\n} from '@superset-ui/core';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\nimport {\n  ISaveableDatasource,\n  ISimpleColumn,\n  SaveDatasetModal,\n} from 'src/SqlLab/components/SaveDatasetModal';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport { EXPLORE_CHART_DEFAULT } from 'src/SqlLab/types';\nimport { mountExploreUrl } from 'src/explore/exploreUtils';\nimport { postFormData } from 'src/explore/exploreUtils/formData';\nimport ProgressBar from 'src/components/ProgressBar';\nimport Loading from 'src/components/Loading';\nimport FilterableTable from 'src/components/FilterableTable';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { prepareCopyToClipboardTabularData } from 'src/utils/common';\nimport {\n  addQueryEditor,\n  clearQueryResults,\n  CtasEnum,\n  fetchQueryResults,\n  reFetchQueryResults,\n  reRunQuery,\n} from 'src/SqlLab/actions/sqlLab';\nimport { URL_PARAMS } from 'src/constants';\nimport ExploreCtasResultsButton from '../ExploreCtasResultsButton';\nimport ExploreResultsButton from '../ExploreResultsButton';\nimport HighlightedSql from '../HighlightedSql';\nimport QueryStateLabel from '../QueryStateLabel';\n\nenum LIMITING_FACTOR {\n  QUERY = 'QUERY',\n  QUERY_AND_DROPDOWN = 'QUERY_AND_DROPDOWN',\n  DROPDOWN = 'DROPDOWN',\n  NOT_LIMITED = 'NOT_LIMITED',\n}\n\nexport interface ResultSetProps {\n  cache?: boolean;\n  csv?: boolean;\n  database?: Record<string, any>;\n  displayLimit: number;\n  height: number;\n  query: QueryResponse;\n  search?: boolean;\n  showSql?: boolean;\n  visualize?: boolean;\n  user: UserWithPermissionsAndRoles;\n  defaultQueryLimit: number;\n}\n\nconst ResultContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: ${({ theme }) => theme.gridUnit * 2}px;\n`;\n\nconst ResultlessStyles = styled.div`\n  position: relative;\n  min-height: ${({ theme }) => theme.gridUnit * 25}px;\n  [role='alert'] {\n    margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n  .sql-result-track-job {\n    margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n`;\n\n// Making text render line breaks/tabs as is as monospace,\n// but wrapping text too so text doesn't overflow\nconst MonospaceDiv = styled.div`\n  font-family: ${({ theme }) => theme.typography.families.monospace};\n  white-space: pre;\n  word-break: break-word;\n  overflow-x: auto;\n  white-space: pre-wrap;\n`;\n\nconst ReturnedRows = styled.div`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  line-height: ${({ theme }) => theme.gridUnit * 6}px;\n`;\n\nconst ResultSetControls = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ResultSetButtons = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  padding-right: ${({ theme }) => 2 * theme.gridUnit}px;\n`;\n\nconst LimitMessage = styled.span`\n  color: ${({ theme }) => theme.colors.secondary.light1};\n  margin-left: ${({ theme }) => theme.gridUnit * 2}px;\n`;\n\nconst ResultSet = ({\n  cache = false,\n  csv = true,\n  database = {},\n  displayLimit,\n  height,\n  query,\n  search = true,\n  showSql = false,\n  visualize = true,\n  user,\n  defaultQueryLimit,\n}: ResultSetProps) => {\n  const theme = useTheme();\n  const [searchText, setSearchText] = useState('');\n  const [cachedData, setCachedData] = useState<Record<string, unknown>[]>([]);\n  const [showSaveDatasetModal, setShowSaveDatasetModal] = useState(false);\n  const [alertIsOpen, setAlertIsOpen] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const reRunQueryIfSessionTimeoutErrorOnMount = useCallback(() => {\n    if (\n      query.errorMessage &&\n      query.errorMessage.indexOf('session timed out') > 0\n    ) {\n      dispatch(reRunQuery(query));\n    }\n  }, []);\n\n  useEffect(() => {\n    // only do this the first time the component is rendered/mounted\n    reRunQueryIfSessionTimeoutErrorOnMount();\n  }, [reRunQueryIfSessionTimeoutErrorOnMount]);\n\n  const fetchResults = (query: QueryResponse) => {\n    dispatch(fetchQueryResults(query, displayLimit));\n  };\n\n  const prevQuery = usePrevious(query);\n  useEffect(() => {\n    if (cache && query.cached && query?.results?.data?.length > 0) {\n      setCachedData(query.results.data);\n      dispatch(clearQueryResults(query));\n    }\n    if (query.resultsKey && query.resultsKey !== prevQuery?.resultsKey) {\n      fetchResults(query);\n    }\n  }, [query, cache]);\n\n  const calculateAlertRefHeight = (alertElement: HTMLElement | null) => {\n    if (alertElement) {\n      setAlertIsOpen(true);\n    } else {\n      setAlertIsOpen(false);\n    }\n  };\n\n  const popSelectStar = (tempSchema: string | null, tempTable: string) => {\n    const qe = {\n      id: shortid.generate(),\n      name: tempTable,\n      autorun: false,\n      dbId: query.dbId,\n      sql: `SELECT * FROM ${tempSchema ? `${tempSchema}.` : ''}${tempTable}`,\n    };\n    dispatch(addQueryEditor(qe));\n  };\n\n  const changeSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(event.target.value);\n  };\n\n  const createExploreResultsOnClick = async () => {\n    const { results } = query;\n\n    if (results?.query_id) {\n      const key = await postFormData(results.query_id, 'query', {\n        ...EXPLORE_CHART_DEFAULT,\n        datasource: `${results.query_id}__query`,\n        ...{\n          all_columns: results.columns.map(column => column.column_name),\n        },\n      });\n      const url = mountExploreUrl(null, {\n        [URL_PARAMS.formDataKey.name]: key,\n      });\n      window.open(url, '_blank', 'noreferrer');\n    } else {\n      addDangerToast(t('Unable to create chart without a query id.'));\n    }\n  };\n\n  const getExportCsvUrl = (clientId: string) =>\n    `/api/v1/sqllab/export/${clientId}/`;\n\n  const renderControls = () => {\n    if (search || visualize || csv) {\n      let { data } = query.results;\n      if (cache && query.cached) {\n        data = cachedData;\n      }\n      const { columns } = query.results;\n      // Added compute logic to stop user from being able to Save & Explore\n\n      const datasource: ISaveableDatasource = {\n        columns: query.results.columns as ISimpleColumn[],\n        name: query?.tab || 'Untitled',\n        dbId: query?.dbId,\n        sql: query?.sql,\n        templateParams: query?.templateParams,\n        schema: query?.schema,\n      };\n\n      return (\n        <ResultSetControls>\n          <SaveDatasetModal\n            visible={showSaveDatasetModal}\n            onHide={() => setShowSaveDatasetModal(false)}\n            buttonTextOnSave={t('Save & Explore')}\n            buttonTextOnOverwrite={t('Overwrite & Explore')}\n            modalDescription={t(\n              'Save this query as a virtual dataset to continue exploring',\n            )}\n            datasource={datasource}\n          />\n          <ResultSetButtons>\n            {visualize && database?.allows_virtual_table_explore && (\n              <ExploreResultsButton\n                database={database}\n                onClick={createExploreResultsOnClick}\n              />\n            )}\n            {csv && (\n              <Button buttonSize=\"small\" href={getExportCsvUrl(query.id)}>\n                <i className=\"fa fa-file-text-o\" /> {t('Download to CSV')}\n              </Button>\n            )}\n\n            <CopyToClipboard\n              text={prepareCopyToClipboardTabularData(data, columns)}\n              wrapped={false}\n              copyNode={\n                <Button buttonSize=\"small\">\n                  <i className=\"fa fa-clipboard\" /> {t('Copy to Clipboard')}\n                </Button>\n              }\n              hideTooltip\n            />\n          </ResultSetButtons>\n          {search && (\n            <input\n              type=\"text\"\n              onChange={changeSearch}\n              value={searchText}\n              className=\"form-control input-sm\"\n              placeholder={t('Filter results')}\n            />\n          )}\n        </ResultSetControls>\n      );\n    }\n    return <div />;\n  };\n\n  const renderRowsReturned = () => {\n    const { results, rows, queryLimit, limitingFactor } = query;\n    let limitMessage;\n    const limitReached = results?.displayLimitReached;\n    const limit = queryLimit || results.query.limit;\n    const isAdmin = !!user?.roles?.Admin;\n    const rowsCount = Math.min(rows || 0, results?.data?.length || 0);\n\n    const displayMaxRowsReachedMessage = {\n      withAdmin: t(\n        'The number of results displayed is limited to %(rows)d by the configuration DISPLAY_MAX_ROW. ' +\n          'Please add additional limits/filters or download to csv to see more rows up to ' +\n          'the %(limit)d limit.',\n        { rows: rowsCount, limit },\n      ),\n      withoutAdmin: t(\n        'The number of results displayed is limited to %(rows)d. ' +\n          'Please add additional limits/filters, download to csv, or contact an admin ' +\n          'to see more rows up to the %(limit)d limit.',\n        { rows: rowsCount, limit },\n      ),\n    };\n    const shouldUseDefaultDropdownAlert =\n      limit === defaultQueryLimit &&\n      limitingFactor === LIMITING_FACTOR.DROPDOWN;\n\n    if (limitingFactor === LIMITING_FACTOR.QUERY && csv) {\n      limitMessage = t(\n        'The number of rows displayed is limited to %(rows)d by the query',\n        { rows },\n      );\n    } else if (\n      limitingFactor === LIMITING_FACTOR.DROPDOWN &&\n      !shouldUseDefaultDropdownAlert\n    ) {\n      limitMessage = t(\n        'The number of rows displayed is limited to %(rows)d by the limit dropdown.',\n        { rows },\n      );\n    } else if (limitingFactor === LIMITING_FACTOR.QUERY_AND_DROPDOWN) {\n      limitMessage = t(\n        'The number of rows displayed is limited to %(rows)d by the query and limit dropdown.',\n        { rows },\n      );\n    }\n\n    const rowsReturnedMessage = t('%(rows)d rows returned', {\n      rows,\n    });\n\n    const tooltipText = `${rowsReturnedMessage}. ${limitMessage}`;\n\n    return (\n      <ReturnedRows>\n        {!limitReached && !shouldUseDefaultDropdownAlert && (\n          <span title={tooltipText}>\n            {rowsReturnedMessage}\n            <LimitMessage>{limitMessage}</LimitMessage>\n          </span>\n        )}\n        {!limitReached && shouldUseDefaultDropdownAlert && (\n          <div ref={calculateAlertRefHeight}>\n            <Alert\n              type=\"warning\"\n              message={t('%(rows)d rows returned', { rows })}\n              onClose={() => setAlertIsOpen(false)}\n              description={t(\n                'The number of rows displayed is limited to %(rows)d by the dropdown.',\n                { rows },\n              )}\n            />\n          </div>\n        )}\n        {limitReached && (\n          <div ref={calculateAlertRefHeight}>\n            <Alert\n              type=\"warning\"\n              onClose={() => setAlertIsOpen(false)}\n              message={t('%(rows)d rows returned', { rows: rowsCount })}\n              description={\n                isAdmin\n                  ? displayMaxRowsReachedMessage.withAdmin\n                  : displayMaxRowsReachedMessage.withoutAdmin\n              }\n            />\n          </div>\n        )}\n      </ReturnedRows>\n    );\n  };\n\n  const limitReached = query?.results?.displayLimitReached;\n  let sql;\n  let exploreDBId = query.dbId;\n  if (database?.explore_database_id) {\n    exploreDBId = database.explore_database_id;\n  }\n\n  let trackingUrl;\n  if (\n    query.trackingUrl &&\n    query.state !== QueryState.SUCCESS &&\n    query.state !== QueryState.FETCHING\n  ) {\n    trackingUrl = (\n      <Button\n        className=\"sql-result-track-job\"\n        buttonSize=\"small\"\n        href={query.trackingUrl}\n        target=\"_blank\"\n      >\n        {query.state === QueryState.RUNNING\n          ? t('Track job')\n          : t('See query details')}\n      </Button>\n    );\n  }\n\n  if (showSql) {\n    sql = <HighlightedSql sql={query.sql} />;\n  }\n\n  if (query.state === QueryState.STOPPED) {\n    return <Alert type=\"warning\" message={t('Query was stopped')} />;\n  }\n\n  if (query.state === QueryState.FAILED) {\n    return (\n      <ResultlessStyles>\n        <ErrorMessageWithStackTrace\n          title={t('Database error')}\n          error={query?.errors?.[0]}\n          subtitle={<MonospaceDiv>{query.errorMessage}</MonospaceDiv>}\n          copyText={query.errorMessage || undefined}\n          link={query.link}\n          source=\"sqllab\"\n        />\n        {trackingUrl}\n      </ResultlessStyles>\n    );\n  }\n\n  if (query.state === QueryState.SUCCESS && query.ctas) {\n    const { tempSchema, tempTable } = query;\n    let object = 'Table';\n    if (query.ctas_method === CtasEnum.VIEW) {\n      object = 'View';\n    }\n    return (\n      <div>\n        <Alert\n          type=\"info\"\n          message={\n            <>\n              {t(object)} [\n              <strong>\n                {tempSchema ? `${tempSchema}.` : ''}\n                {tempTable}\n              </strong>\n              ] {t('was created')} &nbsp;\n              <ButtonGroup>\n                <Button\n                  buttonSize=\"small\"\n                  css={{ marginRight: theme.gridUnit }}\n                  onClick={() => popSelectStar(tempSchema, tempTable)}\n                >\n                  {t('Query in a new tab')}\n                </Button>\n                <ExploreCtasResultsButton\n                  table={tempTable}\n                  schema={tempSchema}\n                  dbId={exploreDBId}\n                />\n              </ButtonGroup>\n            </>\n          }\n        />\n      </div>\n    );\n  }\n\n  if (query.state === QueryState.SUCCESS && query.results) {\n    const { results } = query;\n    // Accounts for offset needed for height of ResultSetRowsReturned component if !limitReached\n    const rowMessageHeight = !limitReached ? 32 : 0;\n    // Accounts for offset needed for height of Alert if this.state.alertIsOpen\n    const alertContainerHeight = 70;\n    // We need to calculate the height of this.renderRowsReturned()\n    // if we want results panel to be proper height because the\n    // FilterTable component needs an explicit height to render\n    // the Table component\n    const rowsHeight = alertIsOpen\n      ? height - alertContainerHeight\n      : height - rowMessageHeight;\n    let data;\n    if (cache && query.cached) {\n      data = cachedData;\n    } else if (results?.data) {\n      ({ data } = results);\n    }\n    if (data && data.length > 0) {\n      const expandedColumns = results.expanded_columns\n        ? results.expanded_columns.map(col => col.column_name)\n        : [];\n      return (\n        <ResultContainer>\n          {renderControls()}\n          {renderRowsReturned()}\n          {sql}\n          <FilterableTable\n            data={data}\n            orderedColumnKeys={results.columns.map(col => col.column_name)}\n            height={rowsHeight}\n            filterText={searchText}\n            expandedColumns={expandedColumns}\n          />\n        </ResultContainer>\n      );\n    }\n    if (data && data.length === 0) {\n      return <Alert type=\"warning\" message={t('The query returned no data')} />;\n    }\n  }\n\n  if (query.cached || (query.state === QueryState.SUCCESS && !query.results)) {\n    if (query.isDataPreview) {\n      return (\n        <Button\n          buttonSize=\"small\"\n          buttonStyle=\"primary\"\n          onClick={() =>\n            dispatch(\n              reFetchQueryResults({\n                ...query,\n                isDataPreview: true,\n              }),\n            )\n          }\n        >\n          {t('Fetch data preview')}\n        </Button>\n      );\n    }\n    if (query.resultsKey) {\n      return (\n        <Button\n          buttonSize=\"small\"\n          buttonStyle=\"primary\"\n          onClick={() => fetchResults(query)}\n        >\n          {t('Refetch results')}\n        </Button>\n      );\n    }\n  }\n\n  let progressBar;\n  if (query.progress > 0) {\n    progressBar = (\n      <ProgressBar percent={parseInt(query.progress.toFixed(0), 10)} striped />\n    );\n  }\n\n  const progressMsg = query?.extra?.progress ?? null;\n\n  return (\n    <ResultlessStyles>\n      <div>{!progressBar && <Loading position=\"normal\" />}</div>\n      {/* show loading bar whenever progress bar is completed but needs time to render */}\n      <div>{query.progress === 100 && <Loading position=\"normal\" />}</div>\n      <QueryStateLabel query={query} />\n      <div>{progressMsg && <Alert type=\"success\" message={progressMsg} />}</div>\n      <div>{query.progress !== 100 && progressBar}</div>\n      {trackingUrl && <div>{trackingUrl}</div>}\n    </ResultlessStyles>\n  );\n};\n\nexport default ResultSet;\n"]},"metadata":{},"sourceType":"module"}