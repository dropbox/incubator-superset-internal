{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport cx from 'classnames';\nimport { css, styled, t } from '@superset-ui/core';\nimport backgroundStyleOptions from 'src/dashboard/util/backgroundStyleOptions';\nimport PopoverDropdown from 'src/components/PopoverDropdown';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst BackgroundStyleOption = styled.div`\n  ${(_ref) => {let { theme } = _ref;return css`\n    display: inline-block;\n\n    &:before {\n      content: '';\n      width: 1em;\n      height: 1em;\n      margin-right: ${theme.gridUnit * 2}px;\n      display: inline-block;\n      vertical-align: middle;\n    }\n\n    &.background--white {\n      padding-left: 0;\n      background: transparent;\n\n      &:before {\n        background: ${theme.colors.grayscale.light5};\n        border: 1px solid ${theme.colors.grayscale.light2};\n      }\n    }\n\n    /* Create the transparent rect icon */\n    &.background--transparent:before {\n      background-image: linear-gradient(\n          45deg,\n          ${theme.colors.text.label} 25%,\n          transparent 25%\n        ),\n        linear-gradient(-45deg, ${theme.colors.text.label} 25%, transparent 25%),\n        linear-gradient(45deg, transparent 75%, ${theme.colors.text.label} 75%),\n        linear-gradient(-45deg, transparent 75%, ${theme.colors.text.label} 75%);\n      background-size: ${theme.gridUnit * 2}px ${theme.gridUnit * 2}px;\n      background-position: 0 0, 0 ${theme.gridUnit}px,\n        ${theme.gridUnit}px ${-theme.gridUnit}px, ${-theme.gridUnit}px 0px;\n    }\n  `;}}\n`;\nfunction renderButton(option) {\n  const BACKGROUND_TEXT = t('background');\n  return ___EmotionJSX(BackgroundStyleOption, { className: cx('background-style-option', option.className) },\n  `${option.label} ${BACKGROUND_TEXT}`);\n\n}\nfunction renderOption(option) {\n  return ___EmotionJSX(BackgroundStyleOption, { className: cx('background-style-option', option.className) },\n  option.label);\n\n}\nexport default class BackgroundStyleDropdown extends React.PureComponent {\n  render() {\n    const { id, value, onChange } = this.props;\n    return ___EmotionJSX(PopoverDropdown, { id: id, options: backgroundStyleOptions, value: value, onChange: onChange, renderButton: renderButton, renderOption: renderOption });\n  }}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,CAAtB,QAA+B,mBAA/B;AAEA,OAAOC,sBAAP,MAAmC,2CAAnC;AACA,OAAOC,eAAP,MAGO,gCAHP,C;AAWA,MAAMC,qBAAqB,GAAGJ,MAAM,CAACK,GAAG;IACpC,eAAC,EAAEC,KAAF,EAAD,eAAeP,GAAG;;;;;;;sBAOAO,KAAK,CAACC,QAAN,GAAiB,CAAC;;;;;;;;;;sBAUlBD,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBC,MAAM;4BACvBJ,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBE,MAAM;;;;;;;;YAQ7CL,KAAK,CAACE,MAAN,CAAaI,IAAb,CAAkBC,KAAK;;;kCAGDP,KAAK,CAACE,MAAN,CAAaI,IAAb,CAAkBC,KAAK;kDACPP,KAAK,CAACE,MAAN,CAAaI,IAAb,CAAkBC,KAAK;mDACtBP,KAAK,CAACE,MAAN,CAAaI,IAAb,CAAkBC,KAAK;yBACjDP,KAAK,CAACC,QAAN,GAAiB,CAAC,MAAMD,KAAK,CAACC,QAAN,GAAiB,CAAC;oCAC/BD,KAAK,CAACC,QAAQ;UACxCD,KAAK,CAACC,QAAQ,MAAM,CAACD,KAAK,CAACC,QAAQ,OAAO,CAACD,KAAK,CAACC,QAAQ;;GAlC/D,EAoCD;CArCH;AAwCA,SAASO,YAAT,CAAsBC,MAAtB,EAAyC;EACvC,MAAMC,eAAe,GAAGf,CAAC,CAAC,YAAD,CAAzB;EACA,OACE,cAAC,qBAAD,IACE,SAAS,EAAEH,EAAE,CAAC,yBAAD,EAA4BiB,MAAM,CAACE,SAAnC,CADf;EAGG,GAAGF,MAAM,CAACF,KAAK,IAAIG,eAAe,EAHrC,CADF;;AAOD;AAED,SAASE,YAAT,CAAsBH,MAAtB,EAAyC;EACvC,OACE,cAAC,qBAAD,IACE,SAAS,EAAEjB,EAAE,CAAC,yBAAD,EAA4BiB,MAAM,CAACE,SAAnC,CADf;EAGGF,MAAM,CAACF,KAHV,CADF;;AAOD;AAED,eAAc,MAAOM,uBAAP,SAAuCtB,KAAK,CAACuB,aAA7C,CAAwF;EACpGC,MAAM;IACJ,MAAM,EAAEC,EAAF,EAAMC,KAAN,EAAaC,QAAb,KAA0B,KAAKC,KAArC;IACA,OACE,cAAC,eAAD,IACE,EAAE,EAAEH,EADN,EAEE,OAAO,EAAEpB,sBAFX,EAGE,KAAK,EAAEqB,KAHT,EAIE,QAAQ,EAAEC,QAJZ,EAKE,YAAY,EAAEV,YALhB,EAME,YAAY,EAAEI,YANhB,GADF;EAUD,CAbmG","names":["React","cx","css","styled","t","backgroundStyleOptions","PopoverDropdown","BackgroundStyleOption","div","theme","gridUnit","colors","grayscale","light5","light2","text","label","renderButton","option","BACKGROUND_TEXT","className","renderOption","BackgroundStyleDropdown","PureComponent","render","id","value","onChange","props"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/menu/BackgroundStyleDropdown.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport cx from 'classnames';\nimport { css, styled, t } from '@superset-ui/core';\n\nimport backgroundStyleOptions from 'src/dashboard/util/backgroundStyleOptions';\nimport PopoverDropdown, {\n  OptionProps,\n  OnChangeHandler,\n} from 'src/components/PopoverDropdown';\n\ninterface BackgroundStyleDropdownProps {\n  id: string;\n  value: string;\n  onChange: OnChangeHandler;\n}\n\nconst BackgroundStyleOption = styled.div`\n  ${({ theme }) => css`\n    display: inline-block;\n\n    &:before {\n      content: '';\n      width: 1em;\n      height: 1em;\n      margin-right: ${theme.gridUnit * 2}px;\n      display: inline-block;\n      vertical-align: middle;\n    }\n\n    &.background--white {\n      padding-left: 0;\n      background: transparent;\n\n      &:before {\n        background: ${theme.colors.grayscale.light5};\n        border: 1px solid ${theme.colors.grayscale.light2};\n      }\n    }\n\n    /* Create the transparent rect icon */\n    &.background--transparent:before {\n      background-image: linear-gradient(\n          45deg,\n          ${theme.colors.text.label} 25%,\n          transparent 25%\n        ),\n        linear-gradient(-45deg, ${theme.colors.text.label} 25%, transparent 25%),\n        linear-gradient(45deg, transparent 75%, ${theme.colors.text.label} 75%),\n        linear-gradient(-45deg, transparent 75%, ${theme.colors.text.label} 75%);\n      background-size: ${theme.gridUnit * 2}px ${theme.gridUnit * 2}px;\n      background-position: 0 0, 0 ${theme.gridUnit}px,\n        ${theme.gridUnit}px ${-theme.gridUnit}px, ${-theme.gridUnit}px 0px;\n    }\n  `}\n`;\n\nfunction renderButton(option: OptionProps) {\n  const BACKGROUND_TEXT = t('background');\n  return (\n    <BackgroundStyleOption\n      className={cx('background-style-option', option.className)}\n    >\n      {`${option.label} ${BACKGROUND_TEXT}`}\n    </BackgroundStyleOption>\n  );\n}\n\nfunction renderOption(option: OptionProps) {\n  return (\n    <BackgroundStyleOption\n      className={cx('background-style-option', option.className)}\n    >\n      {option.label}\n    </BackgroundStyleOption>\n  );\n}\n\nexport default class BackgroundStyleDropdown extends React.PureComponent<BackgroundStyleDropdownProps> {\n  render() {\n    const { id, value, onChange } = this.props;\n    return (\n      <PopoverDropdown\n        id={id}\n        options={backgroundStyleOptions}\n        value={value}\n        onChange={onChange}\n        renderButton={renderButton}\n        renderOption={renderOption}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}