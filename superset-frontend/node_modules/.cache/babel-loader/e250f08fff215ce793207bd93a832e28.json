{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport { t } from '@superset-ui/core';\nimport { addWarningToast } from 'src/components/MessageToasts/actions';\nimport { TABS_TYPE, ROW_TYPE } from 'src/dashboard/util/componentTypes';\nimport {\nDASHBOARD_ROOT_ID,\nNEW_COMPONENTS_SOURCE_ID,\nDASHBOARD_HEADER_ID } from\n'src/dashboard/util/constants';\nimport dropOverflowsParent from 'src/dashboard/util/dropOverflowsParent';\nimport findParentId from 'src/dashboard/util/findParentId';\nimport isInDifferentFilterScopes from 'src/dashboard/util/isInDifferentFilterScopes';\nimport { updateLayoutComponents } from './dashboardFilters';\nimport { setUnsavedChanges } from './dashboardState';\n\n// Component CRUD -------------------------------------------------------------\nexport const UPDATE_COMPONENTS = 'UPDATE_COMPONENTS';\n\n// this is a helper that takes an action as input and dispatches\n// an additional setUnsavedChanges(true) action after the dispatch in the case\n// that dashboardState.hasUnsavedChanges is false.\nfunction setUnsavedChangesAfterAction(action) {\n  return function () {for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}return (\n      (dispatch, getState) => {\n        const result = action(...args);\n        if (typeof result === 'function') {\n          dispatch(result(dispatch, getState));\n        } else {\n          dispatch(result);\n        }\n\n        const { dashboardLayout, dashboardState } = getState();\n\n        const isComponentLevelEvent =\n        result.type === UPDATE_COMPONENTS &&\n        result.payload &&\n        result.payload.nextComponents;\n        // trigger dashboardFilters state update if dashboard layout is changed.\n        if (!isComponentLevelEvent) {\n          const components = dashboardLayout.present;\n          dispatch(updateLayoutComponents(components));\n        }\n\n        if (!dashboardState.hasUnsavedChanges) {\n          dispatch(setUnsavedChanges(true));\n        }\n      });};\n}\n\nexport const updateComponents = setUnsavedChangesAfterAction(\n(nextComponents) => ({\n  type: UPDATE_COMPONENTS,\n  payload: {\n    nextComponents } }));\n\n\n\n\nexport function updateDashboardTitle(text) {\n  return (dispatch, getState) => {\n    const { dashboardLayout } = getState();\n    dispatch(\n    updateComponents({\n      [DASHBOARD_HEADER_ID]: {\n        ...dashboardLayout.present[DASHBOARD_HEADER_ID],\n        meta: {\n          text } } }));\n\n\n\n\n  };\n}\n\nexport const DASHBOARD_TITLE_CHANGED = 'DASHBOARD_TITLE_CHANGED';\n\n// call this one when it's not an undo-able action\nexport function dashboardTitleChanged(text) {\n  return {\n    type: DASHBOARD_TITLE_CHANGED,\n    text };\n\n}\n\nexport const DELETE_COMPONENT = 'DELETE_COMPONENT';\nexport const deleteComponent = setUnsavedChangesAfterAction((id, parentId) => ({\n  type: DELETE_COMPONENT,\n  payload: {\n    id,\n    parentId } }));\n\n\n\nexport const CREATE_COMPONENT = 'CREATE_COMPONENT';\nexport const createComponent = setUnsavedChangesAfterAction((dropResult) => ({\n  type: CREATE_COMPONENT,\n  payload: {\n    dropResult } }));\n\n\n\n// Tabs -----------------------------------------------------------------------\nexport const CREATE_TOP_LEVEL_TABS = 'CREATE_TOP_LEVEL_TABS';\nexport const createTopLevelTabs = setUnsavedChangesAfterAction((dropResult) => ({\n  type: CREATE_TOP_LEVEL_TABS,\n  payload: {\n    dropResult } }));\n\n\n\nexport const DELETE_TOP_LEVEL_TABS = 'DELETE_TOP_LEVEL_TABS';\nexport const deleteTopLevelTabs = setUnsavedChangesAfterAction(() => ({\n  type: DELETE_TOP_LEVEL_TABS,\n  payload: {} }));\n\n\n// Resize ---------------------------------------------------------------------\nexport const RESIZE_COMPONENT = 'RESIZE_COMPONENT';\nexport function resizeComponent(_ref) {let { id, width, height } = _ref;\n  return (dispatch, getState) => {\n    const { dashboardLayout: undoableLayout } = getState();\n    const { present: dashboard } = undoableLayout;\n    const component = dashboard[id];\n    const widthChanged = width && component.meta.width !== width;\n    const heightChanged = height && component.meta.height !== height;\n    if (component && (widthChanged || heightChanged)) {\n      // update the size of this component\n      const updatedComponents = {\n        [id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            width: width || component.meta.width,\n            height: height || component.meta.height } } };\n\n\n\n\n      dispatch(updateComponents(updatedComponents));\n    }\n  };\n}\n\n// Drag and drop --------------------------------------------------------------\nexport const MOVE_COMPONENT = 'MOVE_COMPONENT';\nconst moveComponent = setUnsavedChangesAfterAction((dropResult) => ({\n  type: MOVE_COMPONENT,\n  payload: {\n    dropResult } }));\n\n\n\nexport const HANDLE_COMPONENT_DROP = 'HANDLE_COMPONENT_DROP';\nexport function handleComponentDrop(dropResult) {\n  return (dispatch, getState) => {\n    const overflowsParent = dropOverflowsParent(\n    dropResult,\n    getState().dashboardLayout.present);\n\n\n    if (overflowsParent) {\n      return dispatch(\n      addWarningToast(\n      t(\n      `There is not enough space for this component. Try decreasing its width, or increasing the destination width.`)));\n\n\n\n    }\n\n    const { source, destination } = dropResult;\n    const droppedOnRoot = destination && destination.id === DASHBOARD_ROOT_ID;\n    const isNewComponent = source.id === NEW_COMPONENTS_SOURCE_ID;\n    const dashboardRoot = getState().dashboardLayout.present[DASHBOARD_ROOT_ID];\n    const rootChildId =\n    dashboardRoot && dashboardRoot.children ? dashboardRoot.children[0] : '';\n\n    if (droppedOnRoot) {\n      dispatch(createTopLevelTabs(dropResult));\n    } else if (destination && isNewComponent) {\n      dispatch(createComponent(dropResult));\n    } else if (\n    // Add additional allow-to-drop logic for tag/tags source.\n    // We only allow\n    // - top-level tab => top-level tab: rearrange top-level tab order\n    // - nested tab => top-level tab: allow row tab become top-level tab\n    // Dashboard does not allow top-level tab become nested tab, to avoid\n    // nested tab inside nested tab.\n    source.type === TABS_TYPE &&\n    destination.type === TABS_TYPE &&\n    source.id === rootChildId &&\n    destination.id !== rootChildId)\n    {\n      return dispatch(\n      addWarningToast(t('Can not move top level tab into nested tabs')));\n\n    } else if (\n    destination &&\n    source &&\n    !(\n    // ensure it has moved\n    destination.id === source.id && destination.index === source.index))\n\n    {\n      dispatch(moveComponent(dropResult));\n    }\n\n    // call getState() again down here in case redux state is stale after\n    // previous dispatch(es)\n    const { dashboardFilters, dashboardLayout: undoableLayout } = getState();\n\n    // if we moved a child from a Tab or Row parent and it was the only child, delete the parent.\n    if (!isNewComponent) {\n      const { present: layout } = undoableLayout;\n      const sourceComponent = layout[source.id] || {};\n      const destinationComponent = layout[destination.id] || {};\n      if (\n      (sourceComponent.type === TABS_TYPE ||\n      sourceComponent.type === ROW_TYPE) &&\n      sourceComponent.children &&\n      sourceComponent.children.length === 0)\n      {\n        const parentId = findParentId({\n          childId: source.id,\n          layout });\n\n        dispatch(deleteComponent(source.id, parentId));\n      }\n\n      // show warning if item has been moved between different scope\n      if (\n      isInDifferentFilterScopes({\n        dashboardFilters,\n        source: (sourceComponent.parents || []).concat(source.id),\n        destination: (destinationComponent.parents || []).concat(\n        destination.id) }))\n\n\n      {\n        dispatch(\n        addWarningToast(\n        t('This chart has been moved to a different filter scope.')));\n\n\n      }\n    }\n\n    return null;\n  };\n}\n\n// Undo redo ------------------------------------------------------------------\nexport function undoLayoutAction() {\n  return (dispatch, getState) => {\n    dispatch(UndoActionCreators.undo());\n\n    const { dashboardLayout, dashboardState } = getState();\n\n    if (\n    dashboardLayout.past.length === 0 &&\n    !dashboardState.maxUndoHistoryExceeded &&\n    !dashboardState.updatedColorScheme)\n    {\n      dispatch(setUnsavedChanges(false));\n    }\n  };\n}\n\nexport const redoLayoutAction = setUnsavedChangesAfterAction(\nUndoActionCreators.redo);\n\n\n// Update component parents list ----------------------------------------------\nexport const UPDATE_COMPONENTS_PARENTS_LIST = 'UPDATE_COMPONENTS_PARENTS_LIST';","map":{"version":3,"names":["ActionCreators","UndoActionCreators","t","addWarningToast","TABS_TYPE","ROW_TYPE","DASHBOARD_ROOT_ID","NEW_COMPONENTS_SOURCE_ID","DASHBOARD_HEADER_ID","dropOverflowsParent","findParentId","isInDifferentFilterScopes","updateLayoutComponents","setUnsavedChanges","UPDATE_COMPONENTS","setUnsavedChangesAfterAction","action","args","dispatch","getState","result","dashboardLayout","dashboardState","isComponentLevelEvent","type","payload","nextComponents","components","present","hasUnsavedChanges","updateComponents","updateDashboardTitle","text","meta","DASHBOARD_TITLE_CHANGED","dashboardTitleChanged","DELETE_COMPONENT","deleteComponent","id","parentId","CREATE_COMPONENT","createComponent","dropResult","CREATE_TOP_LEVEL_TABS","createTopLevelTabs","DELETE_TOP_LEVEL_TABS","deleteTopLevelTabs","RESIZE_COMPONENT","resizeComponent","width","height","undoableLayout","dashboard","component","widthChanged","heightChanged","updatedComponents","MOVE_COMPONENT","moveComponent","HANDLE_COMPONENT_DROP","handleComponentDrop","overflowsParent","source","destination","droppedOnRoot","isNewComponent","dashboardRoot","rootChildId","children","index","dashboardFilters","layout","sourceComponent","destinationComponent","length","childId","parents","concat","undoLayoutAction","undo","past","maxUndoHistoryExceeded","updatedColorScheme","redoLayoutAction","redo","UPDATE_COMPONENTS_PARENTS_LIST"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport { t } from '@superset-ui/core';\nimport { addWarningToast } from 'src/components/MessageToasts/actions';\nimport { TABS_TYPE, ROW_TYPE } from 'src/dashboard/util/componentTypes';\nimport {\n  DASHBOARD_ROOT_ID,\n  NEW_COMPONENTS_SOURCE_ID,\n  DASHBOARD_HEADER_ID,\n} from 'src/dashboard/util/constants';\nimport dropOverflowsParent from 'src/dashboard/util/dropOverflowsParent';\nimport findParentId from 'src/dashboard/util/findParentId';\nimport isInDifferentFilterScopes from 'src/dashboard/util/isInDifferentFilterScopes';\nimport { updateLayoutComponents } from './dashboardFilters';\nimport { setUnsavedChanges } from './dashboardState';\n\n// Component CRUD -------------------------------------------------------------\nexport const UPDATE_COMPONENTS = 'UPDATE_COMPONENTS';\n\n// this is a helper that takes an action as input and dispatches\n// an additional setUnsavedChanges(true) action after the dispatch in the case\n// that dashboardState.hasUnsavedChanges is false.\nfunction setUnsavedChangesAfterAction(action) {\n  return (...args) =>\n    (dispatch, getState) => {\n      const result = action(...args);\n      if (typeof result === 'function') {\n        dispatch(result(dispatch, getState));\n      } else {\n        dispatch(result);\n      }\n\n      const { dashboardLayout, dashboardState } = getState();\n\n      const isComponentLevelEvent =\n        result.type === UPDATE_COMPONENTS &&\n        result.payload &&\n        result.payload.nextComponents;\n      // trigger dashboardFilters state update if dashboard layout is changed.\n      if (!isComponentLevelEvent) {\n        const components = dashboardLayout.present;\n        dispatch(updateLayoutComponents(components));\n      }\n\n      if (!dashboardState.hasUnsavedChanges) {\n        dispatch(setUnsavedChanges(true));\n      }\n    };\n}\n\nexport const updateComponents = setUnsavedChangesAfterAction(\n  nextComponents => ({\n    type: UPDATE_COMPONENTS,\n    payload: {\n      nextComponents,\n    },\n  }),\n);\n\nexport function updateDashboardTitle(text) {\n  return (dispatch, getState) => {\n    const { dashboardLayout } = getState();\n    dispatch(\n      updateComponents({\n        [DASHBOARD_HEADER_ID]: {\n          ...dashboardLayout.present[DASHBOARD_HEADER_ID],\n          meta: {\n            text,\n          },\n        },\n      }),\n    );\n  };\n}\n\nexport const DASHBOARD_TITLE_CHANGED = 'DASHBOARD_TITLE_CHANGED';\n\n// call this one when it's not an undo-able action\nexport function dashboardTitleChanged(text) {\n  return {\n    type: DASHBOARD_TITLE_CHANGED,\n    text,\n  };\n}\n\nexport const DELETE_COMPONENT = 'DELETE_COMPONENT';\nexport const deleteComponent = setUnsavedChangesAfterAction((id, parentId) => ({\n  type: DELETE_COMPONENT,\n  payload: {\n    id,\n    parentId,\n  },\n}));\n\nexport const CREATE_COMPONENT = 'CREATE_COMPONENT';\nexport const createComponent = setUnsavedChangesAfterAction(dropResult => ({\n  type: CREATE_COMPONENT,\n  payload: {\n    dropResult,\n  },\n}));\n\n// Tabs -----------------------------------------------------------------------\nexport const CREATE_TOP_LEVEL_TABS = 'CREATE_TOP_LEVEL_TABS';\nexport const createTopLevelTabs = setUnsavedChangesAfterAction(dropResult => ({\n  type: CREATE_TOP_LEVEL_TABS,\n  payload: {\n    dropResult,\n  },\n}));\n\nexport const DELETE_TOP_LEVEL_TABS = 'DELETE_TOP_LEVEL_TABS';\nexport const deleteTopLevelTabs = setUnsavedChangesAfterAction(() => ({\n  type: DELETE_TOP_LEVEL_TABS,\n  payload: {},\n}));\n\n// Resize ---------------------------------------------------------------------\nexport const RESIZE_COMPONENT = 'RESIZE_COMPONENT';\nexport function resizeComponent({ id, width, height }) {\n  return (dispatch, getState) => {\n    const { dashboardLayout: undoableLayout } = getState();\n    const { present: dashboard } = undoableLayout;\n    const component = dashboard[id];\n    const widthChanged = width && component.meta.width !== width;\n    const heightChanged = height && component.meta.height !== height;\n    if (component && (widthChanged || heightChanged)) {\n      // update the size of this component\n      const updatedComponents = {\n        [id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            width: width || component.meta.width,\n            height: height || component.meta.height,\n          },\n        },\n      };\n\n      dispatch(updateComponents(updatedComponents));\n    }\n  };\n}\n\n// Drag and drop --------------------------------------------------------------\nexport const MOVE_COMPONENT = 'MOVE_COMPONENT';\nconst moveComponent = setUnsavedChangesAfterAction(dropResult => ({\n  type: MOVE_COMPONENT,\n  payload: {\n    dropResult,\n  },\n}));\n\nexport const HANDLE_COMPONENT_DROP = 'HANDLE_COMPONENT_DROP';\nexport function handleComponentDrop(dropResult) {\n  return (dispatch, getState) => {\n    const overflowsParent = dropOverflowsParent(\n      dropResult,\n      getState().dashboardLayout.present,\n    );\n\n    if (overflowsParent) {\n      return dispatch(\n        addWarningToast(\n          t(\n            `There is not enough space for this component. Try decreasing its width, or increasing the destination width.`,\n          ),\n        ),\n      );\n    }\n\n    const { source, destination } = dropResult;\n    const droppedOnRoot = destination && destination.id === DASHBOARD_ROOT_ID;\n    const isNewComponent = source.id === NEW_COMPONENTS_SOURCE_ID;\n    const dashboardRoot = getState().dashboardLayout.present[DASHBOARD_ROOT_ID];\n    const rootChildId =\n      dashboardRoot && dashboardRoot.children ? dashboardRoot.children[0] : '';\n\n    if (droppedOnRoot) {\n      dispatch(createTopLevelTabs(dropResult));\n    } else if (destination && isNewComponent) {\n      dispatch(createComponent(dropResult));\n    } else if (\n      // Add additional allow-to-drop logic for tag/tags source.\n      // We only allow\n      // - top-level tab => top-level tab: rearrange top-level tab order\n      // - nested tab => top-level tab: allow row tab become top-level tab\n      // Dashboard does not allow top-level tab become nested tab, to avoid\n      // nested tab inside nested tab.\n      source.type === TABS_TYPE &&\n      destination.type === TABS_TYPE &&\n      source.id === rootChildId &&\n      destination.id !== rootChildId\n    ) {\n      return dispatch(\n        addWarningToast(t('Can not move top level tab into nested tabs')),\n      );\n    } else if (\n      destination &&\n      source &&\n      !(\n        // ensure it has moved\n        (destination.id === source.id && destination.index === source.index)\n      )\n    ) {\n      dispatch(moveComponent(dropResult));\n    }\n\n    // call getState() again down here in case redux state is stale after\n    // previous dispatch(es)\n    const { dashboardFilters, dashboardLayout: undoableLayout } = getState();\n\n    // if we moved a child from a Tab or Row parent and it was the only child, delete the parent.\n    if (!isNewComponent) {\n      const { present: layout } = undoableLayout;\n      const sourceComponent = layout[source.id] || {};\n      const destinationComponent = layout[destination.id] || {};\n      if (\n        (sourceComponent.type === TABS_TYPE ||\n          sourceComponent.type === ROW_TYPE) &&\n        sourceComponent.children &&\n        sourceComponent.children.length === 0\n      ) {\n        const parentId = findParentId({\n          childId: source.id,\n          layout,\n        });\n        dispatch(deleteComponent(source.id, parentId));\n      }\n\n      // show warning if item has been moved between different scope\n      if (\n        isInDifferentFilterScopes({\n          dashboardFilters,\n          source: (sourceComponent.parents || []).concat(source.id),\n          destination: (destinationComponent.parents || []).concat(\n            destination.id,\n          ),\n        })\n      ) {\n        dispatch(\n          addWarningToast(\n            t('This chart has been moved to a different filter scope.'),\n          ),\n        );\n      }\n    }\n\n    return null;\n  };\n}\n\n// Undo redo ------------------------------------------------------------------\nexport function undoLayoutAction() {\n  return (dispatch, getState) => {\n    dispatch(UndoActionCreators.undo());\n\n    const { dashboardLayout, dashboardState } = getState();\n\n    if (\n      dashboardLayout.past.length === 0 &&\n      !dashboardState.maxUndoHistoryExceeded &&\n      !dashboardState.updatedColorScheme\n    ) {\n      dispatch(setUnsavedChanges(false));\n    }\n  };\n}\n\nexport const redoLayoutAction = setUnsavedChangesAfterAction(\n  UndoActionCreators.redo,\n);\n\n// Update component parents list ----------------------------------------------\nexport const UPDATE_COMPONENTS_PARENTS_LIST = 'UPDATE_COMPONENTS_PARENTS_LIST';\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}