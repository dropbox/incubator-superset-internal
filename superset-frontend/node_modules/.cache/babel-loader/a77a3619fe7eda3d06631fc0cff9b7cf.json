{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, t, tn } from '@superset-ui/core';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Select } from 'src/components';\nimport { FilterPluginStyle, StyledFormItem, StatusMessage } from '../common';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function PluginFilterTimegrain(props) {\n  const { data, formData, height, width, setDataMask, setHoveredFilter, unsetHoveredFilter, setFocusedFilter, unsetFocusedFilter, setFilterActive, filterState, inputRef } = props;\n  const { defaultValue } = formData;\n  const [value, setValue] = useState(defaultValue != null ? defaultValue : []);\n  const durationMap = useMemo(() => data.reduce((agg, _ref) => {let { duration, name } = _ref;return {\n      ...agg,\n      [duration]: name };},\n  {}), [JSON.stringify(data)]);\n  const handleChange = (values) => {\n    const resultValue = ensureIsArray(values);\n    const [timeGrain] = resultValue;\n    const label = timeGrain ? durationMap[timeGrain] : undefined;\n    const extraFormData = {};\n    if (timeGrain) {\n      extraFormData.time_grain_sqla = timeGrain;\n    }\n    setValue(resultValue);\n    setDataMask({\n      extraFormData,\n      filterState: {\n        label,\n        value: resultValue.length ? resultValue : null } });\n\n\n  };\n  useEffect(() => {\n    handleChange(defaultValue != null ? defaultValue : []);\n    // I think after Config Modal update some filter it re-creates default value for all other filters\n    // so we can process it like this `JSON.stringify` or start to use `Immer`\n  }, [JSON.stringify(defaultValue)]);\n  useEffect(() => {var _filterState$value;\n    handleChange((_filterState$value = filterState.value) != null ? _filterState$value : []);\n  }, [JSON.stringify(filterState.value)]);\n  const placeholderText = (data || []).length === 0 ?\n  t('No data') :\n  tn('%s option', '%s options', data.length, data.length);\n  const formItemData = {};\n  if (filterState.validateMessage) {\n    formItemData.extra = ___EmotionJSX(StatusMessage, { status: filterState.validateStatus },\n    filterState.validateMessage);\n\n  }\n  const options = (data || []).map((row) => {\n    const { name, duration } = row;\n    return {\n      label: name,\n      value: duration };\n\n  });\n  return ___EmotionJSX(FilterPluginStyle, { height: height, width: width },\n  ___EmotionJSX(StyledFormItem, _extends({ validateStatus: filterState.validateStatus }, formItemData),\n  ___EmotionJSX(Select, { allowClear: true, value: value, placeholder: placeholderText\n    // @ts-ignore\n    , onChange: handleChange, onBlur: unsetFocusedFilter, onFocus: setFocusedFilter, onMouseEnter: setHoveredFilter, onMouseLeave: unsetHoveredFilter, ref: inputRef, options: options, onDropdownVisibleChange: setFilterActive })));\n\n\n}","map":{"version":3,"mappings":"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","names":["ensureIsArray","t","tn","React","useEffect","useMemo","useState","Select","FilterPluginStyle","StyledFormItem","StatusMessage","PluginFilterTimegrain","props","data","formData","height","width","setDataMask","setHoveredFilter","unsetHoveredFilter","setFocusedFilter","unsetFocusedFilter","setFilterActive","filterState","inputRef","defaultValue","value","setValue","durationMap","reduce","agg","duration","name","JSON","stringify","handleChange","values","resultValue","timeGrain","label","undefined","extraFormData","time_grain_sqla","length","placeholderText","formItemData","validateMessage","extra","validateStatus","options","map","row"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/filters/components/TimeGrain/TimeGrainFilterPlugin.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ensureIsArray,\n  ExtraFormData,\n  t,\n  TimeGranularity,\n  tn,\n} from '@superset-ui/core';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Select } from 'src/components';\nimport { FormItemProps } from 'antd/lib/form';\nimport { FilterPluginStyle, StyledFormItem, StatusMessage } from '../common';\nimport { PluginFilterTimeGrainProps } from './types';\n\nexport default function PluginFilterTimegrain(\n  props: PluginFilterTimeGrainProps,\n) {\n  const {\n    data,\n    formData,\n    height,\n    width,\n    setDataMask,\n    setHoveredFilter,\n    unsetHoveredFilter,\n    setFocusedFilter,\n    unsetFocusedFilter,\n    setFilterActive,\n    filterState,\n    inputRef,\n  } = props;\n  const { defaultValue } = formData;\n\n  const [value, setValue] = useState<string[]>(defaultValue ?? []);\n  const durationMap = useMemo(\n    () =>\n      data.reduce(\n        (agg, { duration, name }: { duration: string; name: string }) => ({\n          ...agg,\n          [duration]: name,\n        }),\n        {} as { [key in string]: string },\n      ),\n    [JSON.stringify(data)],\n  );\n\n  const handleChange = (values: string[] | string | undefined | null) => {\n    const resultValue: string[] = ensureIsArray<string>(values);\n    const [timeGrain] = resultValue;\n    const label = timeGrain ? durationMap[timeGrain] : undefined;\n\n    const extraFormData: ExtraFormData = {};\n    if (timeGrain) {\n      extraFormData.time_grain_sqla = timeGrain as TimeGranularity;\n    }\n    setValue(resultValue);\n    setDataMask({\n      extraFormData,\n      filterState: {\n        label,\n        value: resultValue.length ? resultValue : null,\n      },\n    });\n  };\n\n  useEffect(() => {\n    handleChange(defaultValue ?? []);\n    // I think after Config Modal update some filter it re-creates default value for all other filters\n    // so we can process it like this `JSON.stringify` or start to use `Immer`\n  }, [JSON.stringify(defaultValue)]);\n\n  useEffect(() => {\n    handleChange(filterState.value ?? []);\n  }, [JSON.stringify(filterState.value)]);\n\n  const placeholderText =\n    (data || []).length === 0\n      ? t('No data')\n      : tn('%s option', '%s options', data.length, data.length);\n\n  const formItemData: FormItemProps = {};\n  if (filterState.validateMessage) {\n    formItemData.extra = (\n      <StatusMessage status={filterState.validateStatus}>\n        {filterState.validateMessage}\n      </StatusMessage>\n    );\n  }\n\n  const options = (data || []).map(\n    (row: { name: string; duration: string }) => {\n      const { name, duration } = row;\n      return {\n        label: name,\n        value: duration,\n      };\n    },\n  );\n\n  return (\n    <FilterPluginStyle height={height} width={width}>\n      <StyledFormItem\n        validateStatus={filterState.validateStatus}\n        {...formItemData}\n      >\n        <Select\n          allowClear\n          value={value}\n          placeholder={placeholderText}\n          // @ts-ignore\n          onChange={handleChange}\n          onBlur={unsetFocusedFilter}\n          onFocus={setFocusedFilter}\n          onMouseEnter={setHoveredFilter}\n          onMouseLeave={unsetHoveredFilter}\n          ref={inputRef}\n          options={options}\n          onDropdownVisibleChange={setFilterActive}\n        />\n      </StyledFormItem>\n    </FilterPluginStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}