{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { styled, t } from '@superset-ui/core';\n\nimport { EmptyStateMedium } from 'src/components/EmptyState';\nimport EditableTitle from 'src/components/EditableTitle';\nimport { setEditMode } from 'src/dashboard/actions/dashboardState';\nimport DashboardComponent from 'src/dashboard/containers/DashboardComponent';\nimport AnchorLink from 'src/dashboard/components/AnchorLink';\nimport DragDroppable from 'src/dashboard/components/dnd/DragDroppable';\nimport { componentShape } from 'src/dashboard/util/propShapes';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nexport const RENDER_TAB = 'RENDER_TAB';\nexport const RENDER_TAB_CONTENT = 'RENDER_TAB_CONTENT';\n\nconst propTypes = {\n  dashboardId: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  renderType: PropTypes.oneOf([RENDER_TAB, RENDER_TAB_CONTENT]).isRequired,\n  onDropOnTab: PropTypes.func,\n  onHoverTab: PropTypes.func,\n  editMode: PropTypes.bool.isRequired,\n  canEdit: PropTypes.bool.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number,\n  columnWidth: PropTypes.number,\n  onResizeStart: PropTypes.func,\n  onResize: PropTypes.func,\n  onResizeStop: PropTypes.func,\n\n  // redux\n  handleComponentDrop: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n  setDirectPathToChild: PropTypes.func.isRequired,\n  setEditMode: PropTypes.func.isRequired };\n\n\nconst defaultProps = {\n  availableColumnCount: 0,\n  columnWidth: 0,\n  onDropOnTab() {},\n  onHoverTab() {},\n  onResizeStart() {},\n  onResize() {},\n  onResizeStop() {} };\n\n\nconst TabTitleContainer = styled.div`\n  ${(_ref) => {let { isHighlighted, theme: { gridUnit, colors } } = _ref;return `\n    padding: ${gridUnit}px ${gridUnit * 2}px;\n    margin: ${-gridUnit}px ${gridUnit * -2}px;\n    transition: box-shadow 0.2s ease-in-out;\n    ${\n  isHighlighted && `box-shadow: 0 0 ${gridUnit}px ${colors.primary.light1};`\n  }\n  `;}}\n`;\n\nconst renderDraggableContentBottom = (dropProps) =>\ndropProps.dropIndicatorProps &&\n___EmotionJSX(\"div\", { className: \"drop-indicator drop-indicator--bottom\" });\n\n\nconst renderDraggableContentTop = (dropProps) =>\ndropProps.dropIndicatorProps &&\n___EmotionJSX(\"div\", { className: \"drop-indicator drop-indicator--top\" });\n\n\nclass Tab extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleChangeText = this.handleChangeText.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n    this.handleOnHover = this.handleOnHover.bind(this);\n    this.handleTopDropTargetDrop = this.handleTopDropTargetDrop.bind(this);\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n  }\n\n  handleChangeTab(_ref2) {let { pathToTabIndex } = _ref2;\n    this.props.setDirectPathToChild(pathToTabIndex);\n  }\n\n  handleChangeText(nextTabText) {\n    const { updateComponents, component } = this.props;\n    if (nextTabText && nextTabText !== component.meta.text) {\n      updateComponents({\n        [component.id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            text: nextTabText } } });\n\n\n\n    }\n  }\n\n  handleDrop(dropResult) {\n    this.props.handleComponentDrop(dropResult);\n    this.props.onDropOnTab(dropResult);\n  }\n\n  handleOnHover() {\n    this.props.onHoverTab();\n  }\n\n  handleTopDropTargetDrop(dropResult) {\n    if (dropResult) {\n      this.props.handleComponentDrop({\n        ...dropResult,\n        destination: {\n          ...dropResult.destination,\n          // force appending as the first child if top drop target\n          index: 0 } });\n\n\n    }\n  }\n\n  renderTabContent() {\n    const {\n      component: tabComponent,\n      parentComponent: tabParentComponent,\n      depth,\n      availableColumnCount,\n      columnWidth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      editMode,\n      isComponentVisible,\n      canEdit,\n      setEditMode,\n      dashboardId } =\n    this.props;\n\n    const shouldDisplayEmptyState = tabComponent.children.length === 0;\n    return (\n      ___EmotionJSX(\"div\", { className: \"dashboard-component-tabs-content\" },\n\n      editMode &&\n      ___EmotionJSX(DragDroppable, {\n        component: tabComponent,\n        parentComponent: tabParentComponent,\n        orientation: \"column\",\n        index: 0,\n        depth: depth,\n        onDrop: this.handleTopDropTargetDrop,\n        editMode: true,\n        className: \"empty-droptarget\" },\n\n      renderDraggableContentTop),\n\n\n      shouldDisplayEmptyState &&\n      ___EmotionJSX(EmptyStateMedium, {\n        title:\n        editMode ?\n        t('Drag and drop components to this tab') :\n        t('There are no components added to this tab'),\n\n        description:\n        canEdit && (\n        editMode ?\n        ___EmotionJSX(\"span\", null,\n        t('You can'), ' ',\n        ___EmotionJSX(\"a\", {\n          href: `/chart/add?dashboard_id=${dashboardId}`,\n          rel: \"noopener noreferrer\",\n          target: \"_blank\" },\n\n        t('create a new chart')),\n        ' ',\n        t('or use existing ones from the panel on the right')) :\n\n\n        ___EmotionJSX(\"span\", null,\n        t('You can add the components in the'), ' ',\n        ___EmotionJSX(\"span\", {\n          role: \"button\",\n          tabIndex: 0,\n          onClick: () => setEditMode(true) },\n\n        t('edit mode')))),\n\n\n\n\n        image: \"chart.svg\" }),\n\n\n      tabComponent.children.map((componentId, componentIndex) =>\n      ___EmotionJSX(DashboardComponent, {\n        key: componentId,\n        id: componentId,\n        parentId: tabComponent.id,\n        depth: depth // see isValidChild.js for why tabs don't increment child depth\n        , index: componentIndex,\n        onDrop: this.handleDrop,\n        onHover: this.handleOnHover,\n        availableColumnCount: availableColumnCount,\n        columnWidth: columnWidth,\n        onResizeStart: onResizeStart,\n        onResize: onResize,\n        onResizeStop: onResizeStop,\n        isComponentVisible: isComponentVisible,\n        onChangeTab: this.handleChangeTab })),\n\n\n\n      editMode &&\n      ___EmotionJSX(DragDroppable, {\n        component: tabComponent,\n        parentComponent: tabParentComponent,\n        orientation: \"column\",\n        index: tabComponent.children.length,\n        depth: depth,\n        onDrop: this.handleDrop,\n        onHover: this.handleOnHover,\n        editMode: true,\n        className: \"empty-droptarget\" },\n\n      renderDraggableContentBottom)));\n\n\n\n\n  }\n\n  renderTab() {\n    const {\n      component,\n      parentComponent,\n      index,\n      depth,\n      editMode,\n      isFocused,\n      isHighlighted } =\n    this.props;\n\n    return (\n      ___EmotionJSX(DragDroppable, {\n        component: component,\n        parentComponent: parentComponent,\n        orientation: \"column\",\n        index: index,\n        depth: depth,\n        onDrop: this.handleDrop,\n        onHover: this.handleOnHover,\n        editMode: editMode },\n\n      (_ref3) => {let { dropIndicatorProps, dragSourceRef } = _ref3;return (\n          ___EmotionJSX(TabTitleContainer, {\n            isHighlighted: isHighlighted,\n            className: \"dragdroppable-tab\",\n            ref: dragSourceRef },\n\n          ___EmotionJSX(EditableTitle, {\n            title: component.meta.text,\n            defaultTitle: component.meta.defaultText,\n            placeholder: component.meta.placeholder,\n            canEdit: editMode && isFocused,\n            onSaveTitle: this.handleChangeText,\n            showTooltip: false,\n            editing: editMode && isFocused }),\n\n          !editMode &&\n          ___EmotionJSX(AnchorLink, {\n            id: component.id,\n            dashboardId: this.props.dashboardId,\n            placement: index >= 5 ? 'left' : 'right' }),\n\n\n\n          dropIndicatorProps && ___EmotionJSX(\"div\", dropIndicatorProps)));}));\n\n\n\n\n  }\n\n  render() {\n    const { renderType } = this.props;\n    return renderType === RENDER_TAB ?\n    this.renderTab() :\n    this.renderTabContent();\n  }}\n\n\nTab.propTypes = propTypes;\nTab.defaultProps = defaultProps;\n\nfunction mapStateToProps(state) {\n  return {\n    canEdit: state.dashboardInfo.dash_edit_perm };\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n  {\n    setEditMode },\n\n  dispatch);\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tab);","map":{"version":3,"names":["React","PropTypes","bindActionCreators","connect","styled","t","EmptyStateMedium","EditableTitle","setEditMode","DashboardComponent","AnchorLink","DragDroppable","componentShape","RENDER_TAB","RENDER_TAB_CONTENT","propTypes","dashboardId","number","isRequired","id","string","parentId","component","parentComponent","index","depth","renderType","oneOf","onDropOnTab","func","onHoverTab","editMode","bool","canEdit","availableColumnCount","columnWidth","onResizeStart","onResize","onResizeStop","handleComponentDrop","updateComponents","setDirectPathToChild","defaultProps","TabTitleContainer","div","isHighlighted","theme","gridUnit","colors","primary","light1","renderDraggableContentBottom","dropProps","dropIndicatorProps","renderDraggableContentTop","Tab","PureComponent","constructor","props","handleChangeText","bind","handleDrop","handleOnHover","handleTopDropTargetDrop","handleChangeTab","pathToTabIndex","nextTabText","meta","text","dropResult","destination","renderTabContent","tabComponent","tabParentComponent","isComponentVisible","shouldDisplayEmptyState","children","length","map","componentId","componentIndex","renderTab","isFocused","dragSourceRef","defaultText","placeholder","render","mapStateToProps","state","dashboardInfo","dash_edit_perm","mapDispatchToProps","dispatch"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/gridComponents/Tab.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { styled, t } from '@superset-ui/core';\n\nimport { EmptyStateMedium } from 'src/components/EmptyState';\nimport EditableTitle from 'src/components/EditableTitle';\nimport { setEditMode } from 'src/dashboard/actions/dashboardState';\nimport DashboardComponent from 'src/dashboard/containers/DashboardComponent';\nimport AnchorLink from 'src/dashboard/components/AnchorLink';\nimport DragDroppable from 'src/dashboard/components/dnd/DragDroppable';\nimport { componentShape } from 'src/dashboard/util/propShapes';\n\nexport const RENDER_TAB = 'RENDER_TAB';\nexport const RENDER_TAB_CONTENT = 'RENDER_TAB_CONTENT';\n\nconst propTypes = {\n  dashboardId: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  renderType: PropTypes.oneOf([RENDER_TAB, RENDER_TAB_CONTENT]).isRequired,\n  onDropOnTab: PropTypes.func,\n  onHoverTab: PropTypes.func,\n  editMode: PropTypes.bool.isRequired,\n  canEdit: PropTypes.bool.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number,\n  columnWidth: PropTypes.number,\n  onResizeStart: PropTypes.func,\n  onResize: PropTypes.func,\n  onResizeStop: PropTypes.func,\n\n  // redux\n  handleComponentDrop: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n  setDirectPathToChild: PropTypes.func.isRequired,\n  setEditMode: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  availableColumnCount: 0,\n  columnWidth: 0,\n  onDropOnTab() {},\n  onHoverTab() {},\n  onResizeStart() {},\n  onResize() {},\n  onResizeStop() {},\n};\n\nconst TabTitleContainer = styled.div`\n  ${({ isHighlighted, theme: { gridUnit, colors } }) => `\n    padding: ${gridUnit}px ${gridUnit * 2}px;\n    margin: ${-gridUnit}px ${gridUnit * -2}px;\n    transition: box-shadow 0.2s ease-in-out;\n    ${\n      isHighlighted && `box-shadow: 0 0 ${gridUnit}px ${colors.primary.light1};`\n    }\n  `}\n`;\n\nconst renderDraggableContentBottom = dropProps =>\n  dropProps.dropIndicatorProps && (\n    <div className=\"drop-indicator drop-indicator--bottom\" />\n  );\n\nconst renderDraggableContentTop = dropProps =>\n  dropProps.dropIndicatorProps && (\n    <div className=\"drop-indicator drop-indicator--top\" />\n  );\n\nclass Tab extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleChangeText = this.handleChangeText.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n    this.handleOnHover = this.handleOnHover.bind(this);\n    this.handleTopDropTargetDrop = this.handleTopDropTargetDrop.bind(this);\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n  }\n\n  handleChangeTab({ pathToTabIndex }) {\n    this.props.setDirectPathToChild(pathToTabIndex);\n  }\n\n  handleChangeText(nextTabText) {\n    const { updateComponents, component } = this.props;\n    if (nextTabText && nextTabText !== component.meta.text) {\n      updateComponents({\n        [component.id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            text: nextTabText,\n          },\n        },\n      });\n    }\n  }\n\n  handleDrop(dropResult) {\n    this.props.handleComponentDrop(dropResult);\n    this.props.onDropOnTab(dropResult);\n  }\n\n  handleOnHover() {\n    this.props.onHoverTab();\n  }\n\n  handleTopDropTargetDrop(dropResult) {\n    if (dropResult) {\n      this.props.handleComponentDrop({\n        ...dropResult,\n        destination: {\n          ...dropResult.destination,\n          // force appending as the first child if top drop target\n          index: 0,\n        },\n      });\n    }\n  }\n\n  renderTabContent() {\n    const {\n      component: tabComponent,\n      parentComponent: tabParentComponent,\n      depth,\n      availableColumnCount,\n      columnWidth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      editMode,\n      isComponentVisible,\n      canEdit,\n      setEditMode,\n      dashboardId,\n    } = this.props;\n\n    const shouldDisplayEmptyState = tabComponent.children.length === 0;\n    return (\n      <div className=\"dashboard-component-tabs-content\">\n        {/* Make top of tab droppable */}\n        {editMode && (\n          <DragDroppable\n            component={tabComponent}\n            parentComponent={tabParentComponent}\n            orientation=\"column\"\n            index={0}\n            depth={depth}\n            onDrop={this.handleTopDropTargetDrop}\n            editMode\n            className=\"empty-droptarget\"\n          >\n            {renderDraggableContentTop}\n          </DragDroppable>\n        )}\n        {shouldDisplayEmptyState && (\n          <EmptyStateMedium\n            title={\n              editMode\n                ? t('Drag and drop components to this tab')\n                : t('There are no components added to this tab')\n            }\n            description={\n              canEdit &&\n              (editMode ? (\n                <span>\n                  {t('You can')}{' '}\n                  <a\n                    href={`/chart/add?dashboard_id=${dashboardId}`}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                  >\n                    {t('create a new chart')}\n                  </a>{' '}\n                  {t('or use existing ones from the panel on the right')}\n                </span>\n              ) : (\n                <span>\n                  {t('You can add the components in the')}{' '}\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    onClick={() => setEditMode(true)}\n                  >\n                    {t('edit mode')}\n                  </span>\n                </span>\n              ))\n            }\n            image=\"chart.svg\"\n          />\n        )}\n        {tabComponent.children.map((componentId, componentIndex) => (\n          <DashboardComponent\n            key={componentId}\n            id={componentId}\n            parentId={tabComponent.id}\n            depth={depth} // see isValidChild.js for why tabs don't increment child depth\n            index={componentIndex}\n            onDrop={this.handleDrop}\n            onHover={this.handleOnHover}\n            availableColumnCount={availableColumnCount}\n            columnWidth={columnWidth}\n            onResizeStart={onResizeStart}\n            onResize={onResize}\n            onResizeStop={onResizeStop}\n            isComponentVisible={isComponentVisible}\n            onChangeTab={this.handleChangeTab}\n          />\n        ))}\n        {/* Make bottom of tab droppable */}\n        {editMode && (\n          <DragDroppable\n            component={tabComponent}\n            parentComponent={tabParentComponent}\n            orientation=\"column\"\n            index={tabComponent.children.length}\n            depth={depth}\n            onDrop={this.handleDrop}\n            onHover={this.handleOnHover}\n            editMode\n            className=\"empty-droptarget\"\n          >\n            {renderDraggableContentBottom}\n          </DragDroppable>\n        )}\n      </div>\n    );\n  }\n\n  renderTab() {\n    const {\n      component,\n      parentComponent,\n      index,\n      depth,\n      editMode,\n      isFocused,\n      isHighlighted,\n    } = this.props;\n\n    return (\n      <DragDroppable\n        component={component}\n        parentComponent={parentComponent}\n        orientation=\"column\"\n        index={index}\n        depth={depth}\n        onDrop={this.handleDrop}\n        onHover={this.handleOnHover}\n        editMode={editMode}\n      >\n        {({ dropIndicatorProps, dragSourceRef }) => (\n          <TabTitleContainer\n            isHighlighted={isHighlighted}\n            className=\"dragdroppable-tab\"\n            ref={dragSourceRef}\n          >\n            <EditableTitle\n              title={component.meta.text}\n              defaultTitle={component.meta.defaultText}\n              placeholder={component.meta.placeholder}\n              canEdit={editMode && isFocused}\n              onSaveTitle={this.handleChangeText}\n              showTooltip={false}\n              editing={editMode && isFocused}\n            />\n            {!editMode && (\n              <AnchorLink\n                id={component.id}\n                dashboardId={this.props.dashboardId}\n                placement={index >= 5 ? 'left' : 'right'}\n              />\n            )}\n\n            {dropIndicatorProps && <div {...dropIndicatorProps} />}\n          </TabTitleContainer>\n        )}\n      </DragDroppable>\n    );\n  }\n\n  render() {\n    const { renderType } = this.props;\n    return renderType === RENDER_TAB\n      ? this.renderTab()\n      : this.renderTabContent();\n  }\n}\n\nTab.propTypes = propTypes;\nTab.defaultProps = defaultProps;\n\nfunction mapStateToProps(state) {\n  return {\n    canEdit: state.dashboardInfo.dash_edit_perm,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      setEditMode,\n    },\n    dispatch,\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tab);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}