{"ast":null,"code":"import { useEffect } from 'react';\nimport { NativeFilterType, usePrevious } from '@superset-ui/core';\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport const useRemoveCurrentFilter = (removedFilters, currentFilterId, orderedFilters, setCurrentFilterId) => {\n  useEffect(() => {\n    // if the currently viewed filter is fully removed, change to another tab\n    const currentFilterRemoved = removedFilters[currentFilterId];\n    if (currentFilterRemoved && !currentFilterRemoved.isPending) {\n      const nextFilterId = orderedFilters.\n      flat().\n      find((filterId) => !removedFilters[filterId] && filterId !== currentFilterId);\n      if (nextFilterId)\n      setCurrentFilterId(nextFilterId);\n    }\n  }, [currentFilterId, removedFilters, orderedFilters, setCurrentFilterId]);\n};\nexport const useOpenModal = (isOpen, addFilter, createNewOnOpen) => {\n  const wasOpen = usePrevious(isOpen);\n  // if this is a \"create\" modal rather than an \"edit\" modal,\n  // add a filter on modal open\n  useEffect(() => {\n    if (createNewOnOpen && isOpen && !wasOpen) {\n      addFilter(NativeFilterType.NATIVE_FILTER);\n    }\n  }, [createNewOnOpen, isOpen, wasOpen, addFilter]);\n};","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,mBAA9C;AAGA;;;;;;;;;;;;;;;;;;AAmBA,OAAO,MAAMC,sBAAsB,GAAG,CACpCC,cADoC,EAEpCC,eAFoC,EAGpCC,cAHoC,EAIpCC,kBAJoC,KAKlC;EACFP,SAAS,CAAC,MAAK;IACb;IACA,MAAMQ,oBAAoB,GAAGJ,cAAc,CAACC,eAAD,CAA3C;IACA,IAAIG,oBAAoB,IAAI,CAACA,oBAAoB,CAACC,SAAlD,EAA6D;MAC3D,MAAMC,YAAY,GAAGJ,cAAc;MAChCK,IADkB;MAElBC,IAFkB,CAGjB,SAAQ,KAAI,CAACR,cAAc,CAACS,QAAD,CAAf,IAA6BA,QAAQ,KAAKR,eAHrC,CAArB;MAMA,IAAIK,YAAJ;MAAkBH,kBAAkB,CAACG,YAAD,CAAlB;IACnB;EACF,CAZQ,EAYN,CAACL,eAAD,EAAkBD,cAAlB,EAAkCE,cAAlC,EAAkDC,kBAAlD,CAZM,CAAT;AAaD,CAnBM;AAqBP,OAAO,MAAMO,YAAY,GAAG,CAC1BC,MAD0B,EAE1BC,SAF0B,EAG1BC,eAH0B,KAIxB;EACF,MAAMC,OAAO,GAAGhB,WAAW,CAACa,MAAD,CAA3B;EACA;EACA;EACAf,SAAS,CAAC,MAAK;IACb,IAAIiB,eAAe,IAAIF,MAAnB,IAA6B,CAACG,OAAlC,EAA2C;MACzCF,SAAS,CAACf,gBAAgB,CAACkB,aAAlB,CAAT;IACD;EACF,CAJQ,EAIN,CAACF,eAAD,EAAkBF,MAAlB,EAA0BG,OAA1B,EAAmCF,SAAnC,CAJM,CAAT;AAKD,CAbM","names":["useEffect","NativeFilterType","usePrevious","useRemoveCurrentFilter","removedFilters","currentFilterId","orderedFilters","setCurrentFilterId","currentFilterRemoved","isPending","nextFilterId","flat","find","filterId","useOpenModal","isOpen","addFilter","createNewOnOpen","wasOpen","NATIVE_FILTER"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/state.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport { NativeFilterType, usePrevious } from '@superset-ui/core';\nimport { FilterRemoval } from './types';\n\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport const useRemoveCurrentFilter = (\n  removedFilters: Record<string, FilterRemoval>,\n  currentFilterId: string,\n  orderedFilters: string[],\n  setCurrentFilterId: Function,\n) => {\n  useEffect(() => {\n    // if the currently viewed filter is fully removed, change to another tab\n    const currentFilterRemoved = removedFilters[currentFilterId];\n    if (currentFilterRemoved && !currentFilterRemoved.isPending) {\n      const nextFilterId = orderedFilters\n        .flat()\n        .find(\n          filterId => !removedFilters[filterId] && filterId !== currentFilterId,\n        );\n\n      if (nextFilterId) setCurrentFilterId(nextFilterId);\n    }\n  }, [currentFilterId, removedFilters, orderedFilters, setCurrentFilterId]);\n};\n\nexport const useOpenModal = (\n  isOpen: boolean,\n  addFilter: Function,\n  createNewOnOpen?: boolean,\n) => {\n  const wasOpen = usePrevious(isOpen);\n  // if this is a \"create\" modal rather than an \"edit\" modal,\n  // add a filter on modal open\n  useEffect(() => {\n    if (createNewOnOpen && isOpen && !wasOpen) {\n      addFilter(NativeFilterType.NATIVE_FILTER);\n    }\n  }, [createNewOnOpen, isOpen, wasOpen, addFilter]);\n};\n"]},"metadata":{},"sourceType":"module"}