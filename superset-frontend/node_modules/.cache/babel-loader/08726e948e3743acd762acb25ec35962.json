{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport getFilterScopeNodesTree from './getFilterScopeNodesTree';\nimport getFilterScopeParentNodes from './getFilterScopeParentNodes';\nimport getKeyForFilterScopeTree from './getKeyForFilterScopeTree';\nimport getSelectedChartIdForFilterScopeTree from './getSelectedChartIdForFilterScopeTree';\n\nexport default function buildFilterScopeTreeEntry(_ref)\n\n\n\n\n{let { checkedFilterFields = [], activeFilterField, filterScopeMap = {}, layout = {} } = _ref;\n  const key = getKeyForFilterScopeTree({\n    checkedFilterFields,\n    activeFilterField });\n\n  const editingList = activeFilterField ?\n  [activeFilterField] :\n  checkedFilterFields;\n  const selectedChartId = getSelectedChartIdForFilterScopeTree({\n    checkedFilterFields,\n    activeFilterField });\n\n  const nodes = getFilterScopeNodesTree({\n    components: layout,\n    filterFields: editingList,\n    selectedChartId });\n\n  const checkedChartIdSet = new Set();\n  editingList.forEach((filterField) => {\n    (filterScopeMap[filterField].checked || []).forEach((chartId) => {\n      checkedChartIdSet.add(`${chartId}:${filterField}`);\n    });\n  });\n  const checked = [...checkedChartIdSet];\n  const expanded = filterScopeMap[key] ?\n  filterScopeMap[key].expanded :\n  getFilterScopeParentNodes(nodes, 1);\n\n  return {\n    [key]: {\n      nodes,\n      nodesFiltered: [...nodes],\n      checked,\n      expanded } };\n\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(buildFilterScopeTreeEntry, \"buildFilterScopeTreeEntry\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/util/buildFilterScopeTreeEntry.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getFilterScopeNodesTree","getFilterScopeParentNodes","getKeyForFilterScopeTree","getSelectedChartIdForFilterScopeTree","buildFilterScopeTreeEntry","checkedFilterFields","activeFilterField","filterScopeMap","layout","key","editingList","selectedChartId","nodes","components","filterFields","checkedChartIdSet","Set","forEach","filterField","checked","chartId","add","expanded","nodesFiltered"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/util/buildFilterScopeTreeEntry.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport getFilterScopeNodesTree from './getFilterScopeNodesTree';\nimport getFilterScopeParentNodes from './getFilterScopeParentNodes';\nimport getKeyForFilterScopeTree from './getKeyForFilterScopeTree';\nimport getSelectedChartIdForFilterScopeTree from './getSelectedChartIdForFilterScopeTree';\n\nexport default function buildFilterScopeTreeEntry({\n  checkedFilterFields = [],\n  activeFilterField,\n  filterScopeMap = {},\n  layout = {},\n}) {\n  const key = getKeyForFilterScopeTree({\n    checkedFilterFields,\n    activeFilterField,\n  });\n  const editingList = activeFilterField\n    ? [activeFilterField]\n    : checkedFilterFields;\n  const selectedChartId = getSelectedChartIdForFilterScopeTree({\n    checkedFilterFields,\n    activeFilterField,\n  });\n  const nodes = getFilterScopeNodesTree({\n    components: layout,\n    filterFields: editingList,\n    selectedChartId,\n  });\n  const checkedChartIdSet = new Set();\n  editingList.forEach(filterField => {\n    (filterScopeMap[filterField].checked || []).forEach(chartId => {\n      checkedChartIdSet.add(`${chartId}:${filterField}`);\n    });\n  });\n  const checked = [...checkedChartIdSet];\n  const expanded = filterScopeMap[key]\n    ? filterScopeMap[key].expanded\n    : getFilterScopeParentNodes(nodes, 1);\n\n  return {\n    [key]: {\n      nodes,\n      nodesFiltered: [...nodes],\n      checked,\n      expanded,\n    },\n  };\n}\n"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,uBAAP,MAAoC,2BAApC;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,oCAAP,MAAiD,wCAAjD;;AAEA,eAAe,SAASC,yBAAT;;;;;AAKZ,KAL+C,EAChDC,mBAAmB,GAAG,EAD0B,EAEhDC,iBAFgD,EAGhDC,cAAc,GAAG,EAH+B,EAIhDC,MAAM,GAAG,EAJuC,EAK/C;EACD,MAAMC,GAAG,GAAGP,wBAAwB,CAAC;IACnCG,mBADmC;IAEnCC,iBAFmC,EAAD,CAApC;;EAIA,MAAMI,WAAW,GAAGJ,iBAAiB;EACjC,CAACA,iBAAD,CADiC;EAEjCD,mBAFJ;EAGA,MAAMM,eAAe,GAAGR,oCAAoC,CAAC;IAC3DE,mBAD2D;IAE3DC,iBAF2D,EAAD,CAA5D;;EAIA,MAAMM,KAAK,GAAGZ,uBAAuB,CAAC;IACpCa,UAAU,EAAEL,MADwB;IAEpCM,YAAY,EAAEJ,WAFsB;IAGpCC,eAHoC,EAAD,CAArC;;EAKA,MAAMI,iBAAiB,GAAG,IAAIC,GAAJ,EAA1B;EACAN,WAAW,CAACO,OAAZ,CAAoB,CAAAC,WAAW,KAAI;IACjC,CAACX,cAAc,CAACW,WAAD,CAAd,CAA4BC,OAA5B,IAAuC,EAAxC,EAA4CF,OAA5C,CAAoD,CAAAG,OAAO,KAAI;MAC7DL,iBAAiB,CAACM,GAAlB,CAAuB,GAAED,OAAQ,IAAGF,WAAY,EAAhD;IACD,CAFD;EAGD,CAJD;EAKA,MAAMC,OAAO,GAAG,CAAC,GAAGJ,iBAAJ,CAAhB;EACA,MAAMO,QAAQ,GAAGf,cAAc,CAACE,GAAD,CAAd;EACbF,cAAc,CAACE,GAAD,CAAd,CAAoBa,QADP;EAEbrB,yBAAyB,CAACW,KAAD,EAAQ,CAAR,CAF7B;;EAIA,OAAO;IACL,CAACH,GAAD,GAAO;MACLG,KADK;MAELW,aAAa,EAAE,CAAC,GAAGX,KAAJ,CAFV;MAGLO,OAHK;MAILG,QAJK,EADF,EAAP;;;AAQD,C,iLAzCuBlB,yB"},"metadata":{},"sourceType":"module"}