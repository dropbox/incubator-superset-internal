{"ast":null,"code":"import _omit from \"lodash/omit\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { SupersetClient } from '@superset-ui/core';\nconst TEMPORARY_CONTROLS = ['url_params'];\nexport const sanitizeFormData = (formData) => _omit(formData, TEMPORARY_CONTROLS);\nconst assembleEndpoint = (key, tabId) => {\n  let endpoint = 'api/v1/explore/form_data';\n  if (key) {\n    endpoint = endpoint.concat(`/${key}`);\n  }\n  if (tabId) {\n    endpoint = endpoint.concat(`?tab_id=${tabId}`);\n  }\n  return endpoint;\n};\nconst assemblePayload = (datasourceId, datasourceType, formData, chartId) => {\n  const payload = {\n    datasource_id: datasourceId,\n    datasource_type: datasourceType,\n    form_data: JSON.stringify(sanitizeFormData(formData)) };\n\n  if (chartId) {\n    payload.chart_id = chartId;\n  }\n  return payload;\n};\nexport const postFormData = (datasourceId, datasourceType, formData, chartId, tabId) => SupersetClient.post({\n  endpoint: assembleEndpoint(undefined, tabId),\n  jsonPayload: assemblePayload(datasourceId, datasourceType, formData, chartId) }).\nthen((r) => r.json.key);\nexport const putFormData = (datasourceId, datasourceType, key, formData, chartId, tabId) => SupersetClient.put({\n  endpoint: assembleEndpoint(key, tabId),\n  jsonPayload: assemblePayload(datasourceId, datasourceType, formData, chartId) }).\nthen((r) => r.json.message);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAASA,cAAT,QAA2C,mBAA3C;AASA,MAAMC,kBAAkB,GAAG,CAAC,YAAD,CAA3B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,QAAD,KAC9B,MAAKA,QAAL,EAAeF,kBAAf,CADK;AAGP,MAAMG,gBAAgB,GAAG,CAACC,GAAD,EAAeC,KAAf,KAAiC;EACxD,IAAIC,QAAQ,GAAG,0BAAf;EACA,IAAIF,GAAJ,EAAS;IACPE,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAgB,IAAIH,GAAG,EAAvB,CAAX;EACD;EACD,IAAIC,KAAJ,EAAW;IACTC,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAgB,WAAWF,KAAK,EAAhC,CAAX;EACD;EACD,OAAOC,QAAP;AACD,CATD;AAWA,MAAME,eAAe,GAAG,CACtBC,YADsB,EAEtBC,cAFsB,EAGtBR,QAHsB,EAItBS,OAJsB,KAKpB;EACF,MAAMC,OAAO,GAAY;IACvBC,aAAa,EAAEJ,YADQ;IAEvBK,eAAe,EAAEJ,cAFM;IAGvBK,SAAS,EAAEC,IAAI,CAACC,SAAL,CAAehB,gBAAgB,CAACC,QAAD,CAA/B,CAHY,EAAzB;;EAKA,IAAIS,OAAJ,EAAa;IACXC,OAAO,CAACM,QAAR,GAAmBP,OAAnB;EACD;EACD,OAAOC,OAAP;AACD,CAfD;AAiBA,OAAO,MAAMO,YAAY,GAAG,CAC1BV,YAD0B,EAE1BC,cAF0B,EAG1BR,QAH0B,EAI1BS,OAJ0B,EAK1BN,KAL0B,KAO1BN,cAAc,CAACqB,IAAf,CAAoB;EAClBd,QAAQ,EAAEH,gBAAgB,CAACkB,SAAD,EAAYhB,KAAZ,CADR;EAElBiB,WAAW,EAAEd,eAAe,CAC1BC,YAD0B,EAE1BC,cAF0B,EAG1BR,QAH0B,EAI1BS,OAJ0B,CAFV,EAApB;AAQGY,IARH,CAQQ,EAAC,KAAIC,CAAC,CAACC,IAAF,CAAOrB,GARpB,CAPK;AAiBP,OAAO,MAAMsB,WAAW,GAAG,CACzBjB,YADyB,EAEzBC,cAFyB,EAGzBN,GAHyB,EAIzBF,QAJyB,EAKzBS,OALyB,EAMzBN,KANyB,KAQzBN,cAAc,CAAC4B,GAAf,CAAmB;EACjBrB,QAAQ,EAAEH,gBAAgB,CAACC,GAAD,EAAMC,KAAN,CADT;EAEjBiB,WAAW,EAAEd,eAAe,CAC1BC,YAD0B,EAE1BC,cAF0B,EAG1BR,QAH0B,EAI1BS,OAJ0B,CAFX,EAAnB;AAQGY,IARH,CAQQ,EAAC,KAAIC,CAAC,CAACC,IAAF,CAAOG,OARpB,CARK","names":["SupersetClient","TEMPORARY_CONTROLS","sanitizeFormData","formData","assembleEndpoint","key","tabId","endpoint","concat","assemblePayload","datasourceId","datasourceType","chartId","payload","datasource_id","datasource_type","form_data","JSON","stringify","chart_id","postFormData","post","undefined","jsonPayload","then","r","json","putFormData","put","message"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/explore/exploreUtils/formData.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { omit } from 'lodash';\nimport { SupersetClient, JsonObject } from '@superset-ui/core';\n\ntype Payload = {\n  datasource_id: number;\n  datasource_type: string;\n  form_data: string;\n  chart_id?: number;\n};\n\nconst TEMPORARY_CONTROLS = ['url_params'];\n\nexport const sanitizeFormData = (formData: JsonObject): JsonObject =>\n  omit(formData, TEMPORARY_CONTROLS);\n\nconst assembleEndpoint = (key?: string, tabId?: string) => {\n  let endpoint = 'api/v1/explore/form_data';\n  if (key) {\n    endpoint = endpoint.concat(`/${key}`);\n  }\n  if (tabId) {\n    endpoint = endpoint.concat(`?tab_id=${tabId}`);\n  }\n  return endpoint;\n};\n\nconst assemblePayload = (\n  datasourceId: number,\n  datasourceType: string,\n  formData: JsonObject,\n  chartId?: number,\n) => {\n  const payload: Payload = {\n    datasource_id: datasourceId,\n    datasource_type: datasourceType,\n    form_data: JSON.stringify(sanitizeFormData(formData)),\n  };\n  if (chartId) {\n    payload.chart_id = chartId;\n  }\n  return payload;\n};\n\nexport const postFormData = (\n  datasourceId: number,\n  datasourceType: string,\n  formData: JsonObject,\n  chartId?: number,\n  tabId?: string,\n): Promise<string> =>\n  SupersetClient.post({\n    endpoint: assembleEndpoint(undefined, tabId),\n    jsonPayload: assemblePayload(\n      datasourceId,\n      datasourceType,\n      formData,\n      chartId,\n    ),\n  }).then(r => r.json.key);\n\nexport const putFormData = (\n  datasourceId: number,\n  datasourceType: string,\n  key: string,\n  formData: JsonObject,\n  chartId?: number,\n  tabId?: string,\n): Promise<string> =>\n  SupersetClient.put({\n    endpoint: assembleEndpoint(key, tabId),\n    jsonPayload: assemblePayload(\n      datasourceId,\n      datasourceType,\n      formData,\n      chartId,\n    ),\n  }).then(r => r.json.message);\n"]},"metadata":{},"sourceType":"module"}