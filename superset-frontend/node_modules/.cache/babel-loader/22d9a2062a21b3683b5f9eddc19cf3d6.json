{"ast":null,"code":"import { scaleDiverging } from 'd3-scale';\nimport ContinuousSchemeWrapper from './ContinuousSchemeWrapper';\nexport default class DivergingSchemeWrapper extends ContinuousSchemeWrapper {\n  getColors(numColors, extent) {if (numColors === void 0) {numColors = 3;}if (extent === void 0) {extent = [0, 1];}\n    return super.getColors(numColors, extent);\n  }\n\n  createScaleLinear() {\n    return scaleDiverging(this.interpolator);\n  }}","map":{"version":3,"names":["scaleDiverging","ContinuousSchemeWrapper","DivergingSchemeWrapper","getColors","numColors","extent","createScaleLinear","interpolator"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/wrappers/DivergingSchemeWrapper.js"],"sourcesContent":["import { scaleDiverging } from 'd3-scale';\nimport ContinuousSchemeWrapper from './ContinuousSchemeWrapper';\nexport default class DivergingSchemeWrapper extends ContinuousSchemeWrapper {\n  getColors(numColors = 3, extent = [0, 1]) {\n    return super.getColors(numColors, extent);\n  }\n\n  createScaleLinear() {\n    return scaleDiverging(this.interpolator);\n  }\n\n}"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,eAAe,MAAMC,sBAAN,SAAqCD,uBAArC,CAA6D;EAC1EE,SAAS,CAACC,SAAD,EAAgBC,MAAhB,EAAiC,KAAhCD,SAAgC,cAAhCA,SAAgC,GAApB,CAAoB,MAAjBC,MAAiB,cAAjBA,MAAiB,GAAR,CAAC,CAAD,EAAI,CAAJ,CAAQ;IACxC,OAAO,MAAMF,SAAN,CAAgBC,SAAhB,EAA2BC,MAA3B,CAAP;EACD;;EAEDC,iBAAiB,GAAG;IAClB,OAAON,cAAc,CAAC,KAAKO,YAAN,CAArB;EACD,CAPyE"},"metadata":{},"sourceType":"module"}