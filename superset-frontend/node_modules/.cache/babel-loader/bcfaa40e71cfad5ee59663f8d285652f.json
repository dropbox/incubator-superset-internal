{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { utcFormat, timeFormat, timeFormatLocale } from 'd3-time-format';\nimport { isRequired } from '../../utils';\nimport TimeFormatter from '../TimeFormatter';\nimport { LOCAL_PREFIX } from '../TimeFormats';\nexport default function createD3TimeFormatter(config) {\n  const { description, formatString = isRequired('formatString'), label, locale, useLocalTime = false } = config;\n  const id = useLocalTime ? `${LOCAL_PREFIX}${formatString}` : formatString;\n  let formatFunc;\n  if (typeof locale === 'undefined') {\n    const format = useLocalTime ? timeFormat : utcFormat;\n    formatFunc = format(formatString);\n  } else\n  {\n    const localeObject = timeFormatLocale(locale);\n    formatFunc = useLocalTime ?\n    localeObject.format(formatString) :\n    localeObject.utcFormat(formatString);\n  }\n  return new TimeFormatter({\n    description,\n    formatFunc,\n    id,\n    label,\n    useLocalTime });\n\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,SADF,EAEEC,UAFF,EAGEC,gBAHF,QAKO,gBALP;AAMA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,eAAc,SAAUC,qBAAV,CAAgCC,MAAhC,EAMb;EACC,MAAM,EACJC,WADI,EAEJC,YAAY,GAAGN,UAAU,CAAC,cAAD,CAFrB,EAGJO,KAHI,EAIJC,MAJI,EAKJC,YAAY,GAAG,KALX,KAMFL,MANJ;EAQA,MAAMM,EAAE,GAAGD,YAAY,GAAG,GAAGP,YAAY,GAAGI,YAAY,EAAjC,GAAsCA,YAA7D;EACA,IAAIK,UAAJ;EAEA,IAAI,OAAOH,MAAP,KAAkB,WAAtB,EAAmC;IACjC,MAAMI,MAAM,GAAGH,YAAY,GAAGX,UAAH,GAAgBD,SAA3C;IACAc,UAAU,GAAGC,MAAM,CAACN,YAAD,CAAnB;EACD,CAHD;EAGO;IACL,MAAMO,YAAY,GAAGd,gBAAgB,CAACS,MAAD,CAArC;IACAG,UAAU,GAAGF,YAAY;IACrBI,YAAY,CAACD,MAAb,CAAoBN,YAApB,CADqB;IAErBO,YAAY,CAAChB,SAAb,CAAuBS,YAAvB,CAFJ;EAGD;EAED,OAAO,IAAIL,aAAJ,CAAkB;IACvBI,WADuB;IAEvBM,UAFuB;IAGvBD,EAHuB;IAIvBH,KAJuB;IAKvBE,YALuB,EAAlB,CAAP;;AAOD","names":["utcFormat","timeFormat","timeFormatLocale","isRequired","TimeFormatter","LOCAL_PREFIX","createD3TimeFormatter","config","description","formatString","label","locale","useLocalTime","id","formatFunc","format","localeObject"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/packages/superset-ui-core/src/time-format/factories/createD3TimeFormatter.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  utcFormat,\n  timeFormat,\n  timeFormatLocale,\n  TimeLocaleDefinition,\n} from 'd3-time-format';\nimport { isRequired } from '../../utils';\nimport TimeFormatter from '../TimeFormatter';\nimport { LOCAL_PREFIX } from '../TimeFormats';\n\nexport default function createD3TimeFormatter(config: {\n  description?: string;\n  formatString: string;\n  label?: string;\n  locale?: TimeLocaleDefinition;\n  useLocalTime?: boolean;\n}) {\n  const {\n    description,\n    formatString = isRequired('formatString'),\n    label,\n    locale,\n    useLocalTime = false,\n  } = config;\n\n  const id = useLocalTime ? `${LOCAL_PREFIX}${formatString}` : formatString;\n  let formatFunc;\n\n  if (typeof locale === 'undefined') {\n    const format = useLocalTime ? timeFormat : utcFormat;\n    formatFunc = format(formatString);\n  } else {\n    const localeObject = timeFormatLocale(locale);\n    formatFunc = useLocalTime\n      ? localeObject.format(formatString)\n      : localeObject.utcFormat(formatString);\n  }\n\n  return new TimeFormatter({\n    description,\n    formatFunc,\n    id,\n    label,\n    useLocalTime,\n  });\n}\n"]},"metadata":{},"sourceType":"module"}