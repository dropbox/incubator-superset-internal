{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport cx from 'classnames';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst CardContainer = styled.div`\n  ${(_ref) => {let { theme, showThumbnails } = _ref;return `\n    display: grid;\n    grid-gap: ${theme.gridUnit * 12}px ${theme.gridUnit * 4}px;\n    grid-template-columns: repeat(auto-fit, 300px);\n    margin-top: ${theme.gridUnit * -6}px;\n    padding: ${showThumbnails ?\n  `${theme.gridUnit * 8 + 3}px ${theme.gridUnit * 9}px` :\n  `${theme.gridUnit * 8 + 1}px ${theme.gridUnit * 9}px`};\n  `;}}\n`;\nconst CardWrapper = styled.div`\n  border: 2px solid transparent;\n  &.card-selected {\n    border: 2px solid ${(_ref2) => {let { theme } = _ref2;return theme.colors.primary.base;}};\n  }\n  &.bulk-select {\n    cursor: pointer;\n  }\n`;\nexport default function CardCollection(_ref3) {let { bulkSelectEnabled, loading, prepareRow, renderCard, rows, showThumbnails } = _ref3;\n  function handleClick(event, toggleRowSelected) {\n    if (bulkSelectEnabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      toggleRowSelected();\n    }\n  }\n  if (!renderCard)\n  return null;\n  return ___EmotionJSX(CardContainer, { showThumbnails: showThumbnails },\n  loading &&\n  rows.length === 0 &&\n  [...new Array(25)].map((e, i) => ___EmotionJSX(\"div\", { key: i }, renderCard({ loading }))),\n  rows.length > 0 &&\n  rows.map((row) => {\n    if (!renderCard)\n    return null;\n    prepareRow(row);\n    return ___EmotionJSX(CardWrapper, { className: cx({\n        'card-selected': bulkSelectEnabled && row.isSelected,\n        'bulk-select': bulkSelectEnabled }),\n      key: row.id, onClick: (e) => handleClick(e, row.toggleRowSelected), role: \"none\" },\n    renderCard({ ...row.original, loading }));\n\n  }));\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CardContainer, \"CardContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ListView/CardCollection.tsx\");reactHotLoader.register(CardWrapper, \"CardWrapper\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ListView/CardCollection.tsx\");reactHotLoader.register(CardCollection, \"CardCollection\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ListView/CardCollection.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,EAAP,MAAe,YAAf,C;AAWA,MAAMC,aAAa,GAAGF,MAAM,CAACG,GAAiC;IAC1D,eAAC,EAAEC,KAAF,EAASC,cAAT,EAAD,eAA+B;;gBAEnBD,KAAK,CAACE,QAAN,GAAiB,EAAE,MAAMF,KAAK,CAACE,QAAN,GAAiB,CAAC;;kBAEzCF,KAAK,CAACE,QAAN,GAAiB,CAAC,CAAC;eAE/BD,cAAc;EACV,GAAGD,KAAK,CAACE,QAAN,GAAiB,CAAjB,GAAqB,CAAC,MAAMF,KAAK,CAACE,QAAN,GAAiB,CAAC,IADvC;EAEV,GAAGF,KAAK,CAACE,QAAN,GAAiB,CAAjB,GAAqB,CAAC,MAAMF,KAAK,CAACE,QAAN,GAAiB,CAAC,IACvD;GATA,EAUD;CAXH;AAcA,MAAMC,WAAW,GAAGP,MAAM,CAACG,GAAG;;;wBAGN,gBAAC,EAAEC,KAAF,EAAD,gBAAeA,KAAK,CAACI,MAAN,CAAaC,OAAb,CAAqBC,IAApC,EAAwC;;;;;CAHhE;AAUA,eAAc,SAAUC,cAAV,QAOQ,KAPiB,EACrCC,iBADqC,EAErCC,OAFqC,EAGrCC,UAHqC,EAIrCC,UAJqC,EAKrCC,IALqC,EAMrCX,cANqC,EAOjB;EACpB,SAASY,WAAT,CACEC,KADF,EAEEC,iBAFF,EAE6C;IAE3C,IAAIP,iBAAJ,EAAuB;MACrBM,KAAK,CAACE,cAAN;MACAF,KAAK,CAACG,eAAN;MACAF,iBAAiB;IAClB;EACF;EAED,IAAI,CAACJ,UAAL;EAAiB,OAAO,IAAP;EACjB,OACE,cAAC,aAAD,IAAe,cAAc,EAAEV,cAA/B;EACGQ,OAAO;EACNG,IAAI,CAACM,MAAL,KAAgB,CADjB;EAEC,CAAC,GAAG,IAAIC,KAAJ,CAAU,EAAV,CAAJ,EAAmBC,GAAnB,CAAuB,CAACC,CAAD,EAAIC,CAAJ,KACrB,uBAAK,GAAG,EAAEA,CAAV,IAAcX,UAAU,CAAC,EAAEF,OAAF,EAAD,CAAxB,CADF,CAHJ;EAMGG,IAAI,CAACM,MAAL,GAAc,CAAd;EACCN,IAAI,CAACQ,GAAL,CAAS,IAAG,KAAG;IACb,IAAI,CAACT,UAAL;IAAiB,OAAO,IAAP;IACjBD,UAAU,CAACa,GAAD,CAAV;IACA,OACE,cAAC,WAAD,IACE,SAAS,EAAE1B,EAAE,CAAC;QACZ,iBAAiBW,iBAAiB,IAAIe,GAAG,CAACC,UAD9B;QAEZ,eAAehB,iBAFH,EAAD,CADf;MAKE,GAAG,EAAEe,GAAG,CAACE,EALX,EAME,OAAO,EAAE,EAAC,KAAIZ,WAAW,CAACQ,CAAD,EAAIE,GAAG,CAACR,iBAAR,CAN3B,EAOE,IAAI,EAAC,MAPP;IASGJ,UAAU,CAAC,EAAE,GAAGY,GAAG,CAACG,QAAT,EAAmBjB,OAAnB,EAAD,CATb,CADF;;EAaD,CAhBD,CAPJ,CADF;;AA2BD,C,iLAvEKX,a,0JAcAK,W,wJAUkBI,c","names":["React","styled","cx","CardContainer","div","theme","showThumbnails","gridUnit","CardWrapper","colors","primary","base","CardCollection","bulkSelectEnabled","loading","prepareRow","renderCard","rows","handleClick","event","toggleRowSelected","preventDefault","stopPropagation","length","Array","map","e","i","row","isSelected","id","original"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ListView/CardCollection.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { TableInstance, Row } from 'react-table';\nimport { styled } from '@superset-ui/core';\nimport cx from 'classnames';\n\ninterface CardCollectionProps {\n  bulkSelectEnabled?: boolean;\n  loading: boolean;\n  prepareRow: TableInstance['prepareRow'];\n  renderCard?: (row: any) => React.ReactNode;\n  rows: TableInstance['rows'];\n  showThumbnails?: boolean;\n}\n\nconst CardContainer = styled.div<{ showThumbnails?: boolean }>`\n  ${({ theme, showThumbnails }) => `\n    display: grid;\n    grid-gap: ${theme.gridUnit * 12}px ${theme.gridUnit * 4}px;\n    grid-template-columns: repeat(auto-fit, 300px);\n    margin-top: ${theme.gridUnit * -6}px;\n    padding: ${\n      showThumbnails\n        ? `${theme.gridUnit * 8 + 3}px ${theme.gridUnit * 9}px`\n        : `${theme.gridUnit * 8 + 1}px ${theme.gridUnit * 9}px`\n    };\n  `}\n`;\n\nconst CardWrapper = styled.div`\n  border: 2px solid transparent;\n  &.card-selected {\n    border: 2px solid ${({ theme }) => theme.colors.primary.base};\n  }\n  &.bulk-select {\n    cursor: pointer;\n  }\n`;\n\nexport default function CardCollection({\n  bulkSelectEnabled,\n  loading,\n  prepareRow,\n  renderCard,\n  rows,\n  showThumbnails,\n}: CardCollectionProps) {\n  function handleClick(\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    toggleRowSelected: Row['toggleRowSelected'],\n  ) {\n    if (bulkSelectEnabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      toggleRowSelected();\n    }\n  }\n\n  if (!renderCard) return null;\n  return (\n    <CardContainer showThumbnails={showThumbnails}>\n      {loading &&\n        rows.length === 0 &&\n        [...new Array(25)].map((e, i) => (\n          <div key={i}>{renderCard({ loading })}</div>\n        ))}\n      {rows.length > 0 &&\n        rows.map(row => {\n          if (!renderCard) return null;\n          prepareRow(row);\n          return (\n            <CardWrapper\n              className={cx({\n                'card-selected': bulkSelectEnabled && row.isSelected,\n                'bulk-select': bulkSelectEnabled,\n              })}\n              key={row.id}\n              onClick={e => handleClick(e, row.toggleRowSelected)}\n              role=\"none\"\n            >\n              {renderCard({ ...row.original, loading })}\n            </CardWrapper>\n          );\n        })}\n    </CardContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}