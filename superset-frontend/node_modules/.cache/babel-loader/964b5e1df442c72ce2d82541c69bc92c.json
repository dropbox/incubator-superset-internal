{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nconst STYLE_FIELDS = [\n'font',\n'fontWeight',\n'fontStyle',\n'fontSize',\n'fontFamily',\n'letterSpacing'];\n\nexport default function updateTextNode(node, _temp) {let { className, style = {}, text } = _temp === void 0 ? {} : _temp;\n  const textNode = node;\n  if (textNode.textContent !== text) {\n    textNode.textContent = typeof text === 'undefined' ? null : text;\n  }\n  if (textNode.getAttribute('class') !== className) {\n    textNode.setAttribute('class', className != null ? className : '');\n  }\n  // Clear style\n  // Note: multi-word property names are hyphenated and not camel-cased.\n  textNode.style.removeProperty('font');\n  textNode.style.removeProperty('font-weight');\n  textNode.style.removeProperty('font-style');\n  textNode.style.removeProperty('font-size');\n  textNode.style.removeProperty('font-family');\n  textNode.style.removeProperty('letter-spacing');\n  // Apply new style\n  // Note: the font field will auto-populate other font fields when applicable.\n  STYLE_FIELDS.filter((field) => typeof style[field] !== 'undefined' && style[field] !== null).forEach((field) => {\n    textNode.style[field] = `${style[field]}`;\n  });\n  return textNode;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAqBA,MAAMA,YAAY,GAAwB;AACxC,MADwC;AAExC,YAFwC;AAGxC,WAHwC;AAIxC,UAJwC;AAKxC,YALwC;AAMxC,eANwC,CAA1C;;AASA,eAAc,SAAUC,cAAV,CACZC,IADY,SAUN,KARN,EACEC,SADF,EAEEC,KAAK,GAAG,EAFV,EAGEC,IAHF,EAQM,sBAAF,EAAE;EAEN,MAAMC,QAAQ,GAAGJ,IAAjB;EAEA,IAAII,QAAQ,CAACC,WAAT,KAAyBF,IAA7B,EAAmC;IACjCC,QAAQ,CAACC,WAAT,GAAuB,OAAOF,IAAP,KAAgB,WAAhB,GAA8B,IAA9B,GAAqCA,IAA5D;EACD;EACD,IAAIC,QAAQ,CAACE,YAAT,CAAsB,OAAtB,MAAmCL,SAAvC,EAAkD;IAChDG,QAAQ,CAACG,YAAT,CAAsB,OAAtB,EAA+BN,SAA/B,WAA+BA,SAA/B,GAA4C,EAA5C;EACD;EAED;EACA;EACAG,QAAQ,CAACF,KAAT,CAAeM,cAAf,CAA8B,MAA9B;EACAJ,QAAQ,CAACF,KAAT,CAAeM,cAAf,CAA8B,aAA9B;EACAJ,QAAQ,CAACF,KAAT,CAAeM,cAAf,CAA8B,YAA9B;EACAJ,QAAQ,CAACF,KAAT,CAAeM,cAAf,CAA8B,WAA9B;EACAJ,QAAQ,CAACF,KAAT,CAAeM,cAAf,CAA8B,aAA9B;EACAJ,QAAQ,CAACF,KAAT,CAAeM,cAAf,CAA8B,gBAA9B;EAEA;EACA;EACAV,YAAY,CAACW,MAAb,CACE,CAACC,KAAD,KACE,OAAOR,KAAK,CAACQ,KAAD,CAAZ,KAAwB,WAAxB,IAAuCR,KAAK,CAACQ,KAAD,CAAL,KAAiB,IAF5D,EAGEC,OAHF,CAGU,CAACD,KAAD,KAA2B;IACnCN,QAAQ,CAACF,KAAT,CAAeQ,KAAf,IAAwB,GAAGR,KAAK,CAACQ,KAAD,CAAO,EAAvC;EACD,CALD;EAOA,OAAON,QAAP;AACD","names":["STYLE_FIELDS","updateTextNode","node","className","style","text","textNode","textContent","getAttribute","setAttribute","removeProperty","filter","field","forEach"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/packages/superset-ui-core/src/dimension/svg/updateTextNode.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { TextStyle } from '../types';\n\nconst STYLE_FIELDS: (keyof TextStyle)[] = [\n  'font',\n  'fontWeight',\n  'fontStyle',\n  'fontSize',\n  'fontFamily',\n  'letterSpacing',\n];\n\nexport default function updateTextNode(\n  node: SVGTextElement,\n  {\n    className,\n    style = {},\n    text,\n  }: {\n    className?: string;\n    style?: TextStyle;\n    text?: string;\n  } = {},\n) {\n  const textNode = node;\n\n  if (textNode.textContent !== text) {\n    textNode.textContent = typeof text === 'undefined' ? null : text;\n  }\n  if (textNode.getAttribute('class') !== className) {\n    textNode.setAttribute('class', className ?? '');\n  }\n\n  // Clear style\n  // Note: multi-word property names are hyphenated and not camel-cased.\n  textNode.style.removeProperty('font');\n  textNode.style.removeProperty('font-weight');\n  textNode.style.removeProperty('font-style');\n  textNode.style.removeProperty('font-size');\n  textNode.style.removeProperty('font-family');\n  textNode.style.removeProperty('letter-spacing');\n\n  // Apply new style\n  // Note: the font field will auto-populate other font fields when applicable.\n  STYLE_FIELDS.filter(\n    (field: keyof TextStyle) =>\n      typeof style[field] !== 'undefined' && style[field] !== null,\n  ).forEach((field: keyof TextStyle) => {\n    textNode.style[field] = `${style[field]}`;\n  });\n\n  return textNode;\n}\n"]},"metadata":{},"sourceType":"module"}