{"ast":null,"code":"import _uniqWith from \"lodash/uniqWith\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport cx from 'classnames';\nimport { styled, usePrevious } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { setDirectPathToChild } from 'src/dashboard/actions/dashboardState';\nimport Badge from 'src/components/Badge';\nimport DetailsPanelPopover from './DetailsPanel';\nimport { IndicatorStatus, selectIndicatorsForChart, selectNativeIndicatorsForChart } from '../nativeFilters/selectors';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledFilterCount = styled.div`\n  ${(_ref) => {let { theme } = _ref;return `\n    display: flex;\n    justify-items: center;\n    align-items: center;\n    cursor: pointer;\n    margin-right: ${theme.gridUnit}px;\n    padding-left: ${theme.gridUnit * 2}px;\n    padding-right: ${theme.gridUnit * 2}px;\n    background: ${theme.colors.grayscale.light4};\n    border-radius: 4px;\n    height: 100%;\n    .anticon {\n      vertical-align: middle;\n      color: ${theme.colors.grayscale.base};\n      &:hover {\n        color: ${theme.colors.grayscale.light1}\n      }\n    }\n\n    .incompatible-count {\n      font-size: ${theme.typography.sizes.s}px;\n    }\n  `;}}\n`;\nconst StyledBadge = styled(Badge)`\n  ${(_ref2) => {let { theme } = _ref2;return `\n    vertical-align: middle;\n    margin-left: ${theme.gridUnit * 2}px;\n    &>sup {\n      padding: 0 ${theme.gridUnit}px;\n      min-width: ${theme.gridUnit * 4}px;\n      height: ${theme.gridUnit * 4}px;\n      line-height: 1.5;\n      font-weight: ${theme.typography.weights.medium};\n      font-size: ${theme.typography.sizes.s - 1}px;\n      box-shadow: none;\n    }\n  `;}}\n`;\nconst sortByStatus = (indicators) => {\n  const statuses = [\n  IndicatorStatus.Applied,\n  IndicatorStatus.Unset,\n  IndicatorStatus.Incompatible];\n\n  return indicators.sort((a, b) => statuses.indexOf(a.status) -\n  statuses.indexOf(b.status));\n};\nconst indicatorsInitialState = [];\nexport const FiltersBadge = (_ref3) => {var _context;let { chartId } = _ref3;\n  const dispatch = useDispatch();\n  const datasources = useSelector((state) => state.datasources);\n  const dashboardFilters = useSelector((state) => state.dashboardFilters);\n  const nativeFilters = useSelector((state) => {var _state$nativeFilters;return (_state$nativeFilters = state.nativeFilters) == null ? void 0 : _state$nativeFilters.filters;});\n  const chartConfiguration = useSelector((state) => {var _state$dashboardInfo$;return (_state$dashboardInfo$ = state.dashboardInfo.metadata) == null ? void 0 : _state$dashboardInfo$.chart_configuration;});\n  const chart = useSelector((state) => state.charts[chartId]);\n  const present = useSelector((state) => state.dashboardLayout.present);\n  const dataMask = useSelector((state) => state.dataMask);\n  const [nativeIndicators, setNativeIndicators] = useState(indicatorsInitialState);\n  const [dashboardIndicators, setDashboardIndicators] = useState(indicatorsInitialState);\n  const onHighlightFilterSource = useCallback((path) => {\n    dispatch(setDirectPathToChild(path));\n  }, [dispatch]);\n  const prevChart = usePrevious(chart);\n  const prevChartStatus = prevChart == null ? void 0 : prevChart.chartStatus;\n  const prevDashboardFilters = usePrevious(dashboardFilters);\n  const prevDatasources = usePrevious(datasources);\n  const showIndicators = (chart == null ? void 0 : chart.chartStatus) && _includesInstanceProperty(_context = ['rendered', 'success']).call(_context, chart.chartStatus);\n  useEffect(() => {\n    if (!showIndicators && dashboardIndicators.length > 0) {\n      setDashboardIndicators(indicatorsInitialState);\n    } else\n    if (prevChartStatus !== 'success') {var _chart$queriesRespons, _chart$queriesRespons2, _prevChart$queriesRes, _prevChart$queriesRes2, _chart$queriesRespons3, _chart$queriesRespons4, _prevChart$queriesRes3, _prevChart$queriesRes4;\n      if ((chart == null ? void 0 : (_chart$queriesRespons = chart.queriesResponse) == null ? void 0 : (_chart$queriesRespons2 = _chart$queriesRespons[0]) == null ? void 0 : _chart$queriesRespons2.rejected_filters) !== (\n      prevChart == null ? void 0 : (_prevChart$queriesRes = prevChart.queriesResponse) == null ? void 0 : (_prevChart$queriesRes2 = _prevChart$queriesRes[0]) == null ? void 0 : _prevChart$queriesRes2.rejected_filters) ||\n      (chart == null ? void 0 : (_chart$queriesRespons3 = chart.queriesResponse) == null ? void 0 : (_chart$queriesRespons4 = _chart$queriesRespons3[0]) == null ? void 0 : _chart$queriesRespons4.applied_filters) !== (\n      prevChart == null ? void 0 : (_prevChart$queriesRes3 = prevChart.queriesResponse) == null ? void 0 : (_prevChart$queriesRes4 = _prevChart$queriesRes3[0]) == null ? void 0 : _prevChart$queriesRes4.applied_filters) ||\n      dashboardFilters !== prevDashboardFilters ||\n      datasources !== prevDatasources) {\n        setDashboardIndicators(selectIndicatorsForChart(chartId, dashboardFilters, datasources, chart));\n      }\n    }\n  }, [\n  chart,\n  chartId,\n  dashboardFilters,\n  dashboardIndicators.length,\n  datasources,\n  prevChart == null ? void 0 : prevChart.queriesResponse,\n  prevChartStatus,\n  prevDashboardFilters,\n  prevDatasources,\n  showIndicators]);\n\n  const prevNativeFilters = usePrevious(nativeFilters);\n  const prevDashboardLayout = usePrevious(present);\n  const prevDataMask = usePrevious(dataMask);\n  const prevChartConfig = usePrevious(chartConfiguration);\n  useEffect(() => {\n    if (!showIndicators && nativeIndicators.length > 0) {\n      setNativeIndicators(indicatorsInitialState);\n    } else\n    if (prevChartStatus !== 'success') {var _chart$queriesRespons5, _chart$queriesRespons6, _prevChart$queriesRes5, _prevChart$queriesRes6, _chart$queriesRespons7, _chart$queriesRespons8, _prevChart$queriesRes7, _prevChart$queriesRes8;\n      if ((chart == null ? void 0 : (_chart$queriesRespons5 = chart.queriesResponse) == null ? void 0 : (_chart$queriesRespons6 = _chart$queriesRespons5[0]) == null ? void 0 : _chart$queriesRespons6.rejected_filters) !== (\n      prevChart == null ? void 0 : (_prevChart$queriesRes5 = prevChart.queriesResponse) == null ? void 0 : (_prevChart$queriesRes6 = _prevChart$queriesRes5[0]) == null ? void 0 : _prevChart$queriesRes6.rejected_filters) ||\n      (chart == null ? void 0 : (_chart$queriesRespons7 = chart.queriesResponse) == null ? void 0 : (_chart$queriesRespons8 = _chart$queriesRespons7[0]) == null ? void 0 : _chart$queriesRespons8.applied_filters) !== (\n      prevChart == null ? void 0 : (_prevChart$queriesRes7 = prevChart.queriesResponse) == null ? void 0 : (_prevChart$queriesRes8 = _prevChart$queriesRes7[0]) == null ? void 0 : _prevChart$queriesRes8.applied_filters) ||\n      nativeFilters !== prevNativeFilters ||\n      present !== prevDashboardLayout ||\n      dataMask !== prevDataMask ||\n      prevChartConfig !== chartConfiguration) {\n        setNativeIndicators(selectNativeIndicatorsForChart(nativeFilters, dataMask, chartId, chart, present, chartConfiguration));\n      }\n    }\n  }, [\n  chart,\n  chartId,\n  chartConfiguration,\n  dataMask,\n  nativeFilters,\n  nativeIndicators.length,\n  present,\n  prevChart == null ? void 0 : prevChart.queriesResponse,\n  prevChartConfig,\n  prevChartStatus,\n  prevDashboardLayout,\n  prevDataMask,\n  prevNativeFilters,\n  showIndicators]);\n\n  const indicators = useMemo(() => _uniqWith(sortByStatus([...dashboardIndicators, ...nativeIndicators]), (ind1, ind2) => ind1.column === ind2.column &&\n  ind1.name === ind2.name && (\n  ind1.status !== IndicatorStatus.Applied ||\n  ind2.status !== IndicatorStatus.Applied)), [dashboardIndicators, nativeIndicators]);\n  const appliedCrossFilterIndicators = useMemo(() => indicators.filter((indicator) => indicator.status === IndicatorStatus.CrossFilterApplied), [indicators]);\n  const appliedIndicators = useMemo(() => indicators.filter((indicator) => indicator.status === IndicatorStatus.Applied), [indicators]);\n  if (!appliedCrossFilterIndicators.length && !appliedIndicators.length) {\n    return null;\n  }\n  return ___EmotionJSX(DetailsPanelPopover, { appliedCrossFilterIndicators: appliedCrossFilterIndicators, appliedIndicators: appliedIndicators, onHighlightFilterSource: onHighlightFilterSource },\n  ___EmotionJSX(StyledFilterCount, { className: cx('filter-counts', !!appliedCrossFilterIndicators.length && 'has-cross-filters') },\n  ___EmotionJSX(Icons.Filter, { iconSize: \"m\" }),\n  ___EmotionJSX(StyledBadge, { \"data-test\": \"applied-filter-count\", className: \"applied-count\", count: appliedIndicators.length + appliedCrossFilterIndicators.length, showZero: true })));\n\n\n};__signature__(FiltersBadge, \"useDispatch{dispatch}\\nuseSelector{datasources}\\nuseSelector{dashboardFilters}\\nuseSelector{nativeFilters}\\nuseSelector{chartConfiguration}\\nuseSelector{chart}\\nuseSelector{present}\\nuseSelector{dataMask}\\nuseState{[nativeIndicators, setNativeIndicators](indicatorsInitialState)}\\nuseState{[dashboardIndicators, setDashboardIndicators](indicatorsInitialState)}\\nuseCallback{onHighlightFilterSource}\\nusePrevious{prevChart}\\nusePrevious{prevDashboardFilters}\\nusePrevious{prevDatasources}\\nuseEffect{}\\nusePrevious{prevNativeFilters}\\nusePrevious{prevDashboardLayout}\\nusePrevious{prevDataMask}\\nusePrevious{prevChartConfig}\\nuseEffect{}\\nuseMemo{indicators}\\nuseMemo{appliedCrossFilterIndicators}\\nuseMemo{appliedIndicators}\", () => [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, usePrevious, usePrevious, usePrevious, usePrevious, usePrevious, usePrevious, usePrevious]);const _default = /*#__PURE__*/\nReact.memo(FiltersBadge);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledFilterCount, \"StyledFilterCount\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/FiltersBadge/index.tsx\");reactHotLoader.register(StyledBadge, \"StyledBadge\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/FiltersBadge/index.tsx\");reactHotLoader.register(sortByStatus, \"sortByStatus\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/FiltersBadge/index.tsx\");reactHotLoader.register(indicatorsInitialState, \"indicatorsInitialState\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/FiltersBadge/index.tsx\");reactHotLoader.register(FiltersBadge, \"FiltersBadge\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/FiltersBadge/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/FiltersBadge/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"gbAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,OAAxC,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,OAAOC,EAAP,MAAe,YAAf;AACA,SAIEC,MAJF,EAKEC,WALF,QAMO,mBANP;AAOA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,oBAAT,QAAqC,sCAArC;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,mBAAP,MAAgC,gBAAhC;AACA,SAEEC,eAFF,EAGEC,wBAHF,EAIEC,8BAJF,QAKO,4BALP,C;AAYA,MAAMC,iBAAiB,GAAGT,MAAM,CAACU,GAAG;IAChC,eAAC,EAAEC,KAAF,EAAD,eAAe;;;;;oBAKCA,KAAK,CAACC,QAAQ;oBACdD,KAAK,CAACC,QAAN,GAAiB,CAAC;qBACjBD,KAAK,CAACC,QAAN,GAAiB,CAAC;kBACrBD,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBC,MAAM;;;;;eAKhCJ,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBE,IAAI;;iBAEzBL,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBG,MAAM;;;;;mBAK3BN,KAAK,CAACO,UAAN,CAAiBC,KAAjB,CAAuBC,CAAC;;GApBvC,EAsBD;CAvBH;AA0BA,MAAMC,WAAW,GAAGrB,MAAM,CAACI,KAAD,CAAO;IAC7B,gBAAC,EAAEO,KAAF,EAAD,gBAAe;;mBAEAA,KAAK,CAACC,QAAN,GAAiB,CAAC;;mBAElBD,KAAK,CAACC,QAAQ;mBACdD,KAAK,CAACC,QAAN,GAAiB,CAAC;gBACrBD,KAAK,CAACC,QAAN,GAAiB,CAAC;;qBAEbD,KAAK,CAACO,UAAN,CAAiBI,OAAjB,CAAyBC,MAAM;mBACjCZ,KAAK,CAACO,UAAN,CAAiBC,KAAjB,CAAuBC,CAAvB,GAA2B,CAAC;;;GAT3C,EAYD;CAbH;AAgBA,MAAMI,YAAY,GAAG,CAACC,UAAD,KAAyC;EAC5D,MAAMC,QAAQ,GAAG;EACfpB,eAAe,CAACqB,OADD;EAEfrB,eAAe,CAACsB,KAFD;EAGftB,eAAe,CAACuB,YAHD,CAAjB;;EAKA,OAAOJ,UAAU,CAACK,IAAX,CACL,CAACC,CAAD,EAAIC,CAAJ,KACEN,QAAQ,CAACO,OAAT,CAAiBF,CAAC,CAACG,MAAnB;EACAR,QAAQ,CAACO,OAAT,CAAiBD,CAAC,CAACE,MAAnB,CAHG,CAAP;AAKD,CAXD;AAaA,MAAMC,sBAAsB,GAAgB,EAA5C;AAEA,OAAO,MAAMC,YAAY,GAAG,WAAmC,kBAAlC,EAAEC,OAAF,EAAkC;EAC7D,MAAMC,QAAQ,GAAGzC,WAAW,EAA5B;EACA,MAAM0C,WAAW,GAAGzC,WAAW,CAAiB,MAAK,KAAI0C,KAAK,CAACD,WAAhC,CAA/B;EACA,MAAME,gBAAgB,GAAG3C,WAAW,CAClC,MAAK,KAAI0C,KAAK,CAACC,gBADmB,CAApC;EAGA,MAAMC,aAAa,GAAG5C,WAAW,CAC/B,MAAK,8DAAI0C,KAAK,CAACE,aAAV,qBAAI,qBAAqBC,OAAzB,EAD0B,CAAjC;EAGA,MAAMC,kBAAkB,GAAG9C,WAAW,CACpC,MAAK,gEAAI0C,KAAK,CAACK,aAAN,CAAoBC,QAAxB,qBAAI,sBAA8BC,mBAAlC,EAD+B,CAAtC;EAGA,MAAMC,KAAK,GAAGlD,WAAW,CAAmB,MAAK,KAAI0C,KAAK,CAACS,MAAN,CAAaZ,OAAb,CAA5B,CAAzB;EACA,MAAMa,OAAO,GAAGpD,WAAW,CACzB,MAAK,KAAI0C,KAAK,CAACW,eAAN,CAAsBD,OADN,CAA3B;EAGA,MAAME,QAAQ,GAAGtD,WAAW,CAC1B,MAAK,KAAI0C,KAAK,CAACY,QADW,CAA5B;EAIA,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0C1D,QAAQ,CACtDuC,sBADsD,CAAxD;EAGA,MAAM,CAACoB,mBAAD,EAAsBC,sBAAtB,IAAgD5D,QAAQ,CAC5DuC,sBAD4D,CAA9D;EAIA,MAAMsB,uBAAuB,GAAGhE,WAAW,CACzC,CAACiE,IAAD,KAAmB;IACjBpB,QAAQ,CAACnC,oBAAoB,CAACuD,IAAD,CAArB,CAAR;EACD,CAHwC,EAIzC,CAACpB,QAAD,CAJyC,CAA3C;EAOA,MAAMqB,SAAS,GAAG1D,WAAW,CAAC+C,KAAD,CAA7B;EACA,MAAMY,eAAe,GAAGD,SAAH,oBAAGA,SAAS,CAAEE,WAAnC;EACA,MAAMC,oBAAoB,GAAG7D,WAAW,CAACwC,gBAAD,CAAxC;EACA,MAAMsB,eAAe,GAAG9D,WAAW,CAACsC,WAAD,CAAnC;EACA,MAAMyB,cAAc,GAClB,MAAK,QAAL,iBAAK,CAAEH,WAAP,KAAsB,sCAAC,UAAD,EAAa,SAAb,kBAAiCb,KAAK,CAACa,WAAvC,CADxB;EAGAnE,SAAS,CAAC,MAAK;IACb,IAAI,CAACsE,cAAD,IAAmBT,mBAAmB,CAACU,MAApB,GAA6B,CAApD,EAAuD;MACrDT,sBAAsB,CAACrB,sBAAD,CAAtB;IACD,CAFD;IAEO,IAAIyB,eAAe,KAAK,SAAxB,EAAmC;MACxC,IACE,MAAK,QAAL,0CAAK,CAAEM,eAAP,qEAAyB,CAAzB,6CAA6BC,gBAA7B;MACER,SADF,6CACEA,SAAS,CAAEO,eADb,+CACE,sBAA6B,CAA7B,CADF,qBACE,uBAAiCC,gBADnC;MAEA,MAAK,QAAL,2CAAK,CAAED,eAAP,sEAAyB,CAAzB,6CAA6BE,eAA7B;MACET,SADF,8CACEA,SAAS,CAAEO,eADb,+CACE,uBAA6B,CAA7B,CADF,qBACE,uBAAiCE,eADnC,CAFA;MAIA3B,gBAAgB,KAAKqB,oBAJrB;MAKAvB,WAAW,KAAKwB,eANlB,EAOE;QACAP,sBAAsB,CACpBjD,wBAAwB,CACtB8B,OADsB,EAEtBI,gBAFsB,EAGtBF,WAHsB,EAItBS,KAJsB,CADJ,CAAtB;MAQD;IACF;EACF,CAtBQ,EAsBN;EACDA,KADC;EAEDX,OAFC;EAGDI,gBAHC;EAIDc,mBAAmB,CAACU,MAJnB;EAKD1B,WALC;EAMDoB,SANC,oBAMDA,SAAS,CAAEO,eANV;EAODN,eAPC;EAQDE,oBARC;EASDC,eATC;EAUDC,cAVC,CAtBM,CAAT;;EAmCA,MAAMK,iBAAiB,GAAGpE,WAAW,CAACyC,aAAD,CAArC;EACA,MAAM4B,mBAAmB,GAAGrE,WAAW,CAACiD,OAAD,CAAvC;EACA,MAAMqB,YAAY,GAAGtE,WAAW,CAACmD,QAAD,CAAhC;EACA,MAAMoB,eAAe,GAAGvE,WAAW,CAAC2C,kBAAD,CAAnC;EACAlD,SAAS,CAAC,MAAK;IACb,IAAI,CAACsE,cAAD,IAAmBX,gBAAgB,CAACY,MAAjB,GAA0B,CAAjD,EAAoD;MAClDX,mBAAmB,CAACnB,sBAAD,CAAnB;IACD,CAFD;IAEO,IAAIyB,eAAe,KAAK,SAAxB,EAAmC;MACxC,IACE,MAAK,QAAL,2CAAK,CAAEM,eAAP,sEAAyB,CAAzB,6CAA6BC,gBAA7B;MACER,SADF,8CACEA,SAAS,CAAEO,eADb,+CACE,uBAA6B,CAA7B,CADF,qBACE,uBAAiCC,gBADnC;MAEA,MAAK,QAAL,2CAAK,CAAED,eAAP,sEAAyB,CAAzB,6CAA6BE,eAA7B;MACET,SADF,8CACEA,SAAS,CAAEO,eADb,+CACE,uBAA6B,CAA7B,CADF,qBACE,uBAAiCE,eADnC,CAFA;MAIA1B,aAAa,KAAK2B,iBAJlB;MAKAnB,OAAO,KAAKoB,mBALZ;MAMAlB,QAAQ,KAAKmB,YANb;MAOAC,eAAe,KAAK5B,kBARtB,EASE;QACAU,mBAAmB,CACjB9C,8BAA8B,CAC5BkC,aAD4B,EAE5BU,QAF4B,EAG5Bf,OAH4B,EAI5BW,KAJ4B,EAK5BE,OAL4B,EAM5BN,kBAN4B,CADb,CAAnB;MAUD;IACF;EACF,CA1BQ,EA0BN;EACDI,KADC;EAEDX,OAFC;EAGDO,kBAHC;EAIDQ,QAJC;EAKDV,aALC;EAMDW,gBAAgB,CAACY,MANhB;EAODf,OAPC;EAQDS,SARC,oBAQDA,SAAS,CAAEO,eARV;EASDM,eATC;EAUDZ,eAVC;EAWDU,mBAXC;EAYDC,YAZC;EAaDF,iBAbC;EAcDL,cAdC,CA1BM,CAAT;;EA2CA,MAAMvC,UAAU,GAAG9B,OAAO,CACxB,MACE,UACE6B,YAAY,CAAC,CAAC,GAAG+B,mBAAJ,EAAyB,GAAGF,gBAA5B,CAAD,CADd,EAEE,CAACoB,IAAD,EAAOC,IAAP,KACED,IAAI,CAACE,MAAL,KAAgBD,IAAI,CAACC,MAArB;EACAF,IAAI,CAACG,IAAL,KAAcF,IAAI,CAACE,IADnB;EAECH,IAAI,CAACvC,MAAL,KAAgB5B,eAAe,CAACqB,OAAhC;EACC+C,IAAI,CAACxC,MAAL,KAAgB5B,eAAe,CAACqB,OAHlC,CAHJ,CAFsB,EAUxB,CAAC4B,mBAAD,EAAsBF,gBAAtB,CAVwB,CAA1B;EAaA,MAAMwB,4BAA4B,GAAGlF,OAAO,CAC1C,MACE8B,UAAU,CAACqD,MAAX,CACE,UAAS,KAAIC,SAAS,CAAC7C,MAAV,KAAqB5B,eAAe,CAAC0E,kBADpD,CAFwC,EAK1C,CAACvD,UAAD,CAL0C,CAA5C;EAOA,MAAMwD,iBAAiB,GAAGtF,OAAO,CAC/B,MACE8B,UAAU,CAACqD,MAAX,CACE,UAAS,KAAIC,SAAS,CAAC7C,MAAV,KAAqB5B,eAAe,CAACqB,OADpD,CAF6B,EAK/B,CAACF,UAAD,CAL+B,CAAjC;EAQA,IAAI,CAACoD,4BAA4B,CAACZ,MAA9B,IAAwC,CAACgB,iBAAiB,CAAChB,MAA/D,EAAuE;IACrE,OAAO,IAAP;EACD;EAED,OACE,cAAC,mBAAD,IACE,4BAA4B,EAAEY,4BADhC,EAEE,iBAAiB,EAAEI,iBAFrB,EAGE,uBAAuB,EAAExB,uBAH3B;EAKE,cAAC,iBAAD,IACE,SAAS,EAAE1D,EAAE,CACX,eADW,EAEX,CAAC,CAAC8E,4BAA4B,CAACZ,MAA/B,IAAyC,mBAF9B,CADf;EAME,cAAC,KAAD,CAAO,MAAP,IAAc,QAAQ,EAAC,GAAvB,GANF;EAOE,cAAC,WAAD,IACE,aAAU,sBADZ,EAEE,SAAS,EAAC,eAFZ,EAGE,KAAK,EAAEgB,iBAAiB,CAAChB,MAAlB,GAA2BY,4BAA4B,CAACZ,MAHjE,EAIE,QAAQ,MAJV,GAPF,CALF,CADF;;;AAsBD,CAjLM,C,cAAM7B,Y,iuBACMvC,W,EACGC,W,EACKA,W,EAGHA,W,EAGKA,W,EAGbA,W,EACEA,W,EAGCA,W,EAkBCG,W,EAEWA,W,EACLA,W,EAuCEA,W,EACEA,W,EACPA,W,EACGA,W;AAoGXT,KAAK,CAAC0F,IAAN,CAAW9C,YAAX,C,CAAf,wB,iLA5OM3B,iB,mKA0BAY,W,6JAgBAG,Y,8JAaAW,sB,wKAEOC,Y","names":["React","useCallback","useEffect","useMemo","useState","useDispatch","useSelector","cx","styled","usePrevious","Icons","setDirectPathToChild","Badge","DetailsPanelPopover","IndicatorStatus","selectIndicatorsForChart","selectNativeIndicatorsForChart","StyledFilterCount","div","theme","gridUnit","colors","grayscale","light4","base","light1","typography","sizes","s","StyledBadge","weights","medium","sortByStatus","indicators","statuses","Applied","Unset","Incompatible","sort","a","b","indexOf","status","indicatorsInitialState","FiltersBadge","chartId","dispatch","datasources","state","dashboardFilters","nativeFilters","filters","chartConfiguration","dashboardInfo","metadata","chart_configuration","chart","charts","present","dashboardLayout","dataMask","nativeIndicators","setNativeIndicators","dashboardIndicators","setDashboardIndicators","onHighlightFilterSource","path","prevChart","prevChartStatus","chartStatus","prevDashboardFilters","prevDatasources","showIndicators","length","queriesResponse","rejected_filters","applied_filters","prevNativeFilters","prevDashboardLayout","prevDataMask","prevChartConfig","ind1","ind2","column","name","appliedCrossFilterIndicators","filter","indicator","CrossFilterApplied","appliedIndicators","memo"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/FiltersBadge/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uniqWith } from 'lodash';\nimport cx from 'classnames';\nimport {\n  DataMaskStateWithId,\n  Filters,\n  JsonObject,\n  styled,\n  usePrevious,\n} from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { setDirectPathToChild } from 'src/dashboard/actions/dashboardState';\nimport Badge from 'src/components/Badge';\nimport DetailsPanelPopover from './DetailsPanel';\nimport {\n  Indicator,\n  IndicatorStatus,\n  selectIndicatorsForChart,\n  selectNativeIndicatorsForChart,\n} from '../nativeFilters/selectors';\nimport { Chart, DashboardLayout, RootState } from '../../types';\n\nexport interface FiltersBadgeProps {\n  chartId: number;\n}\n\nconst StyledFilterCount = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    justify-items: center;\n    align-items: center;\n    cursor: pointer;\n    margin-right: ${theme.gridUnit}px;\n    padding-left: ${theme.gridUnit * 2}px;\n    padding-right: ${theme.gridUnit * 2}px;\n    background: ${theme.colors.grayscale.light4};\n    border-radius: 4px;\n    height: 100%;\n    .anticon {\n      vertical-align: middle;\n      color: ${theme.colors.grayscale.base};\n      &:hover {\n        color: ${theme.colors.grayscale.light1}\n      }\n    }\n\n    .incompatible-count {\n      font-size: ${theme.typography.sizes.s}px;\n    }\n  `}\n`;\n\nconst StyledBadge = styled(Badge)`\n  ${({ theme }) => `\n    vertical-align: middle;\n    margin-left: ${theme.gridUnit * 2}px;\n    &>sup {\n      padding: 0 ${theme.gridUnit}px;\n      min-width: ${theme.gridUnit * 4}px;\n      height: ${theme.gridUnit * 4}px;\n      line-height: 1.5;\n      font-weight: ${theme.typography.weights.medium};\n      font-size: ${theme.typography.sizes.s - 1}px;\n      box-shadow: none;\n    }\n  `}\n`;\n\nconst sortByStatus = (indicators: Indicator[]): Indicator[] => {\n  const statuses = [\n    IndicatorStatus.Applied,\n    IndicatorStatus.Unset,\n    IndicatorStatus.Incompatible,\n  ];\n  return indicators.sort(\n    (a, b) =>\n      statuses.indexOf(a.status as IndicatorStatus) -\n      statuses.indexOf(b.status as IndicatorStatus),\n  );\n};\n\nconst indicatorsInitialState: Indicator[] = [];\n\nexport const FiltersBadge = ({ chartId }: FiltersBadgeProps) => {\n  const dispatch = useDispatch();\n  const datasources = useSelector<RootState, any>(state => state.datasources);\n  const dashboardFilters = useSelector<RootState, any>(\n    state => state.dashboardFilters,\n  );\n  const nativeFilters = useSelector<RootState, Filters>(\n    state => state.nativeFilters?.filters,\n  );\n  const chartConfiguration = useSelector<RootState, JsonObject>(\n    state => state.dashboardInfo.metadata?.chart_configuration,\n  );\n  const chart = useSelector<RootState, Chart>(state => state.charts[chartId]);\n  const present = useSelector<RootState, DashboardLayout>(\n    state => state.dashboardLayout.present,\n  );\n  const dataMask = useSelector<RootState, DataMaskStateWithId>(\n    state => state.dataMask,\n  );\n\n  const [nativeIndicators, setNativeIndicators] = useState<Indicator[]>(\n    indicatorsInitialState,\n  );\n  const [dashboardIndicators, setDashboardIndicators] = useState<Indicator[]>(\n    indicatorsInitialState,\n  );\n\n  const onHighlightFilterSource = useCallback(\n    (path: string[]) => {\n      dispatch(setDirectPathToChild(path));\n    },\n    [dispatch],\n  );\n\n  const prevChart = usePrevious(chart);\n  const prevChartStatus = prevChart?.chartStatus;\n  const prevDashboardFilters = usePrevious(dashboardFilters);\n  const prevDatasources = usePrevious(datasources);\n  const showIndicators =\n    chart?.chartStatus && ['rendered', 'success'].includes(chart.chartStatus);\n\n  useEffect(() => {\n    if (!showIndicators && dashboardIndicators.length > 0) {\n      setDashboardIndicators(indicatorsInitialState);\n    } else if (prevChartStatus !== 'success') {\n      if (\n        chart?.queriesResponse?.[0]?.rejected_filters !==\n          prevChart?.queriesResponse?.[0]?.rejected_filters ||\n        chart?.queriesResponse?.[0]?.applied_filters !==\n          prevChart?.queriesResponse?.[0]?.applied_filters ||\n        dashboardFilters !== prevDashboardFilters ||\n        datasources !== prevDatasources\n      ) {\n        setDashboardIndicators(\n          selectIndicatorsForChart(\n            chartId,\n            dashboardFilters,\n            datasources,\n            chart,\n          ),\n        );\n      }\n    }\n  }, [\n    chart,\n    chartId,\n    dashboardFilters,\n    dashboardIndicators.length,\n    datasources,\n    prevChart?.queriesResponse,\n    prevChartStatus,\n    prevDashboardFilters,\n    prevDatasources,\n    showIndicators,\n  ]);\n\n  const prevNativeFilters = usePrevious(nativeFilters);\n  const prevDashboardLayout = usePrevious(present);\n  const prevDataMask = usePrevious(dataMask);\n  const prevChartConfig = usePrevious(chartConfiguration);\n  useEffect(() => {\n    if (!showIndicators && nativeIndicators.length > 0) {\n      setNativeIndicators(indicatorsInitialState);\n    } else if (prevChartStatus !== 'success') {\n      if (\n        chart?.queriesResponse?.[0]?.rejected_filters !==\n          prevChart?.queriesResponse?.[0]?.rejected_filters ||\n        chart?.queriesResponse?.[0]?.applied_filters !==\n          prevChart?.queriesResponse?.[0]?.applied_filters ||\n        nativeFilters !== prevNativeFilters ||\n        present !== prevDashboardLayout ||\n        dataMask !== prevDataMask ||\n        prevChartConfig !== chartConfiguration\n      ) {\n        setNativeIndicators(\n          selectNativeIndicatorsForChart(\n            nativeFilters,\n            dataMask,\n            chartId,\n            chart,\n            present,\n            chartConfiguration,\n          ),\n        );\n      }\n    }\n  }, [\n    chart,\n    chartId,\n    chartConfiguration,\n    dataMask,\n    nativeFilters,\n    nativeIndicators.length,\n    present,\n    prevChart?.queriesResponse,\n    prevChartConfig,\n    prevChartStatus,\n    prevDashboardLayout,\n    prevDataMask,\n    prevNativeFilters,\n    showIndicators,\n  ]);\n\n  const indicators = useMemo(\n    () =>\n      uniqWith(\n        sortByStatus([...dashboardIndicators, ...nativeIndicators]),\n        (ind1, ind2) =>\n          ind1.column === ind2.column &&\n          ind1.name === ind2.name &&\n          (ind1.status !== IndicatorStatus.Applied ||\n            ind2.status !== IndicatorStatus.Applied),\n      ),\n    [dashboardIndicators, nativeIndicators],\n  );\n\n  const appliedCrossFilterIndicators = useMemo(\n    () =>\n      indicators.filter(\n        indicator => indicator.status === IndicatorStatus.CrossFilterApplied,\n      ),\n    [indicators],\n  );\n  const appliedIndicators = useMemo(\n    () =>\n      indicators.filter(\n        indicator => indicator.status === IndicatorStatus.Applied,\n      ),\n    [indicators],\n  );\n\n  if (!appliedCrossFilterIndicators.length && !appliedIndicators.length) {\n    return null;\n  }\n\n  return (\n    <DetailsPanelPopover\n      appliedCrossFilterIndicators={appliedCrossFilterIndicators}\n      appliedIndicators={appliedIndicators}\n      onHighlightFilterSource={onHighlightFilterSource}\n    >\n      <StyledFilterCount\n        className={cx(\n          'filter-counts',\n          !!appliedCrossFilterIndicators.length && 'has-cross-filters',\n        )}\n      >\n        <Icons.Filter iconSize=\"m\" />\n        <StyledBadge\n          data-test=\"applied-filter-count\"\n          className=\"applied-count\"\n          count={appliedIndicators.length + appliedCrossFilterIndicators.length}\n          showZero\n        />\n      </StyledFilterCount>\n    </DetailsPanelPopover>\n  );\n};\n\nexport default React.memo(FiltersBadge);\n"]},"metadata":{},"sourceType":"module"}