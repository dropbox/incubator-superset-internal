{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Mustache from 'mustache';\nimport { scaleLinear } from 'd3-scale';\nimport TableView from 'src/components/TableView';\nimport { styled, t } from '@superset-ui/core';\nimport {\nInfoTooltipWithTrigger,\nMetricOption } from\n'@superset-ui/chart-controls';\nimport sortNumericValues from 'src/utils/sortNumericValues';\n\nimport FormattedNumber from './FormattedNumber';\nimport SparklineCell from './SparklineCell';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst ACCESSIBLE_COLOR_BOUNDS = ['#ca0020', '#0571b0'];\n\nconst sortNumberWithMixedTypes = (rowA, rowB, columnId, descending) =>\nsortNumericValues(\nrowA.values[columnId].props['data-value'],\nrowB.values[columnId].props['data-value'],\n{ descending, nanTreatment: 'asSmallest' }) * (\n\n// react-table sort function always expects -1 for smaller number\ndescending ? -1 : 1);\n\nfunction colorFromBounds(value, bounds, colorBounds) {if (colorBounds === void 0) {colorBounds = ACCESSIBLE_COLOR_BOUNDS;}\n  if (bounds) {\n    const [min, max] = bounds;\n    const [minColor, maxColor] = colorBounds;\n    if (min !== null && max !== null) {\n      const colorScale = scaleLinear().\n      domain([min, (max + min) / 2, max]).\n      range([minColor, 'grey', maxColor]);\n      return colorScale(value);\n    }\n    if (min !== null) {\n      return value >= min ? maxColor : minColor;\n    }\n    if (max !== null) {\n      return value < max ? maxColor : minColor;\n    }\n  }\n  return null;\n}\n\nconst propTypes = {\n  className: PropTypes.string,\n  height: PropTypes.number,\n  // Example\n  // {'2018-04-14 00:00:00': { 'SUM(metric_value)': 80031779.40047 }}\n  data: PropTypes.objectOf(PropTypes.objectOf(PropTypes.number)).isRequired,\n  columnConfigs: PropTypes.arrayOf(\n  PropTypes.shape({\n    colType: PropTypes.string,\n    comparisonType: PropTypes.string,\n    d3format: PropTypes.string,\n    key: PropTypes.string,\n    label: PropTypes.string,\n    timeLag: PropTypes.number })).\n\n  isRequired,\n  rows: PropTypes.arrayOf(\n  PropTypes.oneOfType([\n  PropTypes.shape({\n    label: PropTypes.string }),\n\n  PropTypes.shape({\n    metric_name: PropTypes.string })])).\n\n\n  isRequired,\n  rowType: PropTypes.oneOf(['column', 'metric']).isRequired,\n  url: PropTypes.string };\n\nconst defaultProps = {\n  className: '',\n  height: undefined,\n  url: '' };\n\n\n// @z-index-above-dashboard-charts + 1 = 11\nconst TimeTableStyles = styled.div`\n  height: ${(props) => props.height}px;\n  overflow: auto;\n\n  th {\n    z-index: 11 !important; // to cover sparkline\n  }\n`;\n\nconst TimeTable = (_ref) =>\n\n\n\n\n\n\n\n{let { className, height, data, columnConfigs, rowType, rows, url } = _ref;\n  const memoizedColumns = useMemo(\n  () => [\n  { accessor: 'metric', Header: t('Metric') },\n  ...columnConfigs.map((columnConfig, i) => ({\n    accessor: columnConfig.key,\n    cellProps: columnConfig.colType === 'spark' && {\n      style: { width: '1%' } },\n\n    Header: () =>\n    ___EmotionJSX(React.Fragment, null,\n    columnConfig.label, ' ',\n    columnConfig.tooltip &&\n    ___EmotionJSX(InfoTooltipWithTrigger, {\n      tooltip: columnConfig.tooltip,\n      label: `tt-col-${i}`,\n      placement: \"top\" })),\n\n\n\n\n    sortType: sortNumberWithMixedTypes }))],\n\n\n  [columnConfigs]);\n\n\n  const memoizedRows = useMemo(() => {\n    const renderSparklineCell = (valueField, column, entries) => {\n      let sparkData;\n      if (column.timeRatio) {\n        // Period ratio sparkline\n        sparkData = [];\n        for (let i = column.timeRatio; i < entries.length; i += 1) {\n          const prevData = entries[i - column.timeRatio][valueField];\n          if (prevData && prevData !== 0) {\n            sparkData.push(entries[i][valueField] / prevData);\n          } else {\n            sparkData.push(null);\n          }\n        }\n      } else {\n        sparkData = entries.map((d) => d[valueField]);\n      }\n\n      return (\n        ___EmotionJSX(SparklineCell, {\n          ariaLabel: `spark-${valueField}`,\n          width: parseInt(column.width, 10) || 300,\n          height: parseInt(column.height, 10) || 50,\n          data: sparkData,\n          dataKey: `spark-${valueField}`,\n          dateFormat: column.dateFormat,\n          numberFormat: column.d3format,\n          yAxisBounds: column.yAxisBounds,\n          showYAxis: column.showYAxis,\n          entries: entries }));\n\n\n    };\n\n    const renderValueCell = (valueField, column, reversedEntries) => {\n      const recent = reversedEntries[0][valueField];\n      let v;\n      let errorMsg;\n      if (column.colType === 'time') {\n        // Time lag ratio\n        const timeLag = column.timeLag || 0;\n        const totalLag = Object.keys(reversedEntries).length;\n        if (timeLag >= totalLag) {\n          errorMsg = `The time lag set at ${timeLag} is too large for the length of data at ${reversedEntries.length}. No data available.`;\n        } else {\n          v = reversedEntries[timeLag][valueField];\n        }\n        if (typeof v === 'number' && typeof recent === 'number') {\n          if (column.comparisonType === 'diff') {\n            v = recent - v;\n          } else if (column.comparisonType === 'perc') {\n            v = recent / v;\n          } else if (column.comparisonType === 'perc_change') {\n            v = recent / v - 1;\n          }\n        } else {\n          v = null;\n        }\n      } else if (column.colType === 'contrib') {\n        // contribution to column total\n        v =\n        recent /\n        Object.keys(reversedEntries[0]).\n        map((k) => k !== 'time' ? reversedEntries[0][k] : null).\n        reduce((a, b) => a + b);\n      } else if (column.colType === 'avg') {\n        // Average over the last {timeLag}\n        v = null;\n        if (reversedEntries.length > 0) {\n          const stats = reversedEntries.slice(undefined, column.timeLag).reduce(\n          function (_ref2, entry) {let { count, sum } = _ref2;\n            return entry[valueField] !== undefined &&\n            entry[valueField] !== null ?\n            { count: count + 1, sum: sum + entry[valueField] } :\n            { count, sum };\n          },\n          { count: 0, sum: 0 });\n\n          if (stats.count > 0) {\n            v = stats.sum / stats.count;\n          }\n        }\n      }\n\n      const color = colorFromBounds(v, column.bounds);\n\n      return (\n        ___EmotionJSX(\"span\", {\n          key: column.key,\n          \"data-value\": v,\n          css: (theme) =>\n          color && {\n            boxShadow: `inset 0px -2.5px 0px 0px ${color}`,\n            borderRight: `2px solid ${theme.colors.grayscale.light5}` } },\n\n\n\n        errorMsg ||\n        ___EmotionJSX(\"span\", { style: { color } },\n        ___EmotionJSX(FormattedNumber, { num: v, format: column.d3format }))));\n\n\n\n\n    };\n\n    const renderLeftCell = (row) => {\n      const context = { metric: row };\n      const fullUrl = url ? Mustache.render(url, context) : null;\n\n      if (rowType === 'column') {\n        const column = row;\n        if (fullUrl) {\n          return (\n            ___EmotionJSX(\"a\", { href: fullUrl, rel: \"noopener noreferrer\", target: \"_blank\" },\n            column.label));\n\n\n        }\n        return column.label;\n      }\n\n      return (\n        ___EmotionJSX(MetricOption, {\n          metric: row,\n          url: fullUrl,\n          showFormula: false,\n          openInNewWindow: true }));\n\n\n    };\n\n    const entries = Object.keys(data).\n    sort().\n    map((time) => ({ ...data[time], time }));\n    const reversedEntries = entries.concat().reverse();\n\n    return rows.map((row) => {\n      const valueField = row.label || row.metric_name;\n      const cellValues = columnConfigs.reduce((acc, columnConfig) => {\n        if (columnConfig.colType === 'spark') {\n          return {\n            ...acc,\n            [columnConfig.key]: renderSparklineCell(\n            valueField,\n            columnConfig,\n            entries) };\n\n\n        }\n        return {\n          ...acc,\n          [columnConfig.key]: renderValueCell(\n          valueField,\n          columnConfig,\n          reversedEntries) };\n\n\n      }, {});\n      return { ...row, ...cellValues, metric: renderLeftCell(row) };\n    });\n  }, [columnConfigs, data, rowType, rows, url]);\n\n  const defaultSort =\n  rowType === 'column' && columnConfigs.length ?\n  [\n  {\n    id: columnConfigs[0].key,\n    desc: 'true' }] :\n\n\n  [];\n\n  return (\n    ___EmotionJSX(TimeTableStyles, {\n      \"data-test\": \"time-table\",\n      className: className,\n      height: height },\n\n    ___EmotionJSX(TableView, {\n      className: \"table-no-hover\",\n      columns: memoizedColumns,\n      data: memoizedRows,\n      initialSortBy: defaultSort,\n      withPagination: false })));\n\n\n\n};__signature__(TimeTable, \"useMemo{memoizedColumns}\\nuseMemo{memoizedRows}\");\n\nTimeTable.propTypes = propTypes;\nTimeTable.defaultProps = defaultProps;const _default =\n\nTimeTable;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ACCESSIBLE_COLOR_BOUNDS, \"ACCESSIBLE_COLOR_BOUNDS\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/visualizations/TimeTable/TimeTable.jsx\");reactHotLoader.register(sortNumberWithMixedTypes, \"sortNumberWithMixedTypes\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/visualizations/TimeTable/TimeTable.jsx\");reactHotLoader.register(colorFromBounds, \"colorFromBounds\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/visualizations/TimeTable/TimeTable.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/visualizations/TimeTable/TimeTable.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/visualizations/TimeTable/TimeTable.jsx\");reactHotLoader.register(TimeTableStyles, \"TimeTableStyles\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/visualizations/TimeTable/TimeTable.jsx\");reactHotLoader.register(TimeTable, \"TimeTable\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/visualizations/TimeTable/TimeTable.jsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/visualizations/TimeTable/TimeTable.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useMemo","PropTypes","Mustache","scaleLinear","TableView","styled","t","InfoTooltipWithTrigger","MetricOption","sortNumericValues","FormattedNumber","SparklineCell","ACCESSIBLE_COLOR_BOUNDS","sortNumberWithMixedTypes","rowA","rowB","columnId","descending","values","props","nanTreatment","colorFromBounds","value","bounds","colorBounds","min","max","minColor","maxColor","colorScale","domain","range","propTypes","className","string","height","number","data","objectOf","isRequired","columnConfigs","arrayOf","shape","colType","comparisonType","d3format","key","label","timeLag","rows","oneOfType","metric_name","rowType","oneOf","url","defaultProps","undefined","TimeTableStyles","div","TimeTable","memoizedColumns","accessor","Header","map","columnConfig","i","cellProps","style","width","tooltip","sortType","memoizedRows","renderSparklineCell","valueField","column","entries","sparkData","timeRatio","length","prevData","push","d","parseInt","dateFormat","yAxisBounds","showYAxis","renderValueCell","reversedEntries","recent","v","errorMsg","totalLag","Object","keys","k","reduce","a","b","stats","slice","entry","count","sum","color","theme","boxShadow","borderRight","colors","grayscale","light5","renderLeftCell","row","context","metric","fullUrl","render","sort","time","concat","reverse","cellValues","acc","defaultSort","id","desc"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/visualizations/TimeTable/TimeTable.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Mustache from 'mustache';\nimport { scaleLinear } from 'd3-scale';\nimport TableView from 'src/components/TableView';\nimport { styled, t } from '@superset-ui/core';\nimport {\n  InfoTooltipWithTrigger,\n  MetricOption,\n} from '@superset-ui/chart-controls';\nimport sortNumericValues from 'src/utils/sortNumericValues';\n\nimport FormattedNumber from './FormattedNumber';\nimport SparklineCell from './SparklineCell';\n\nconst ACCESSIBLE_COLOR_BOUNDS = ['#ca0020', '#0571b0'];\n\nconst sortNumberWithMixedTypes = (rowA, rowB, columnId, descending) =>\n  sortNumericValues(\n    rowA.values[columnId].props['data-value'],\n    rowB.values[columnId].props['data-value'],\n    { descending, nanTreatment: 'asSmallest' },\n  ) *\n  // react-table sort function always expects -1 for smaller number\n  (descending ? -1 : 1);\n\nfunction colorFromBounds(value, bounds, colorBounds = ACCESSIBLE_COLOR_BOUNDS) {\n  if (bounds) {\n    const [min, max] = bounds;\n    const [minColor, maxColor] = colorBounds;\n    if (min !== null && max !== null) {\n      const colorScale = scaleLinear()\n        .domain([min, (max + min) / 2, max])\n        .range([minColor, 'grey', maxColor]);\n      return colorScale(value);\n    }\n    if (min !== null) {\n      return value >= min ? maxColor : minColor;\n    }\n    if (max !== null) {\n      return value < max ? maxColor : minColor;\n    }\n  }\n  return null;\n}\n\nconst propTypes = {\n  className: PropTypes.string,\n  height: PropTypes.number,\n  // Example\n  // {'2018-04-14 00:00:00': { 'SUM(metric_value)': 80031779.40047 }}\n  data: PropTypes.objectOf(PropTypes.objectOf(PropTypes.number)).isRequired,\n  columnConfigs: PropTypes.arrayOf(\n    PropTypes.shape({\n      colType: PropTypes.string,\n      comparisonType: PropTypes.string,\n      d3format: PropTypes.string,\n      key: PropTypes.string,\n      label: PropTypes.string,\n      timeLag: PropTypes.number,\n    }),\n  ).isRequired,\n  rows: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.shape({\n        label: PropTypes.string,\n      }),\n      PropTypes.shape({\n        metric_name: PropTypes.string,\n      }),\n    ]),\n  ).isRequired,\n  rowType: PropTypes.oneOf(['column', 'metric']).isRequired,\n  url: PropTypes.string,\n};\nconst defaultProps = {\n  className: '',\n  height: undefined,\n  url: '',\n};\n\n// @z-index-above-dashboard-charts + 1 = 11\nconst TimeTableStyles = styled.div`\n  height: ${props => props.height}px;\n  overflow: auto;\n\n  th {\n    z-index: 11 !important; // to cover sparkline\n  }\n`;\n\nconst TimeTable = ({\n  className,\n  height,\n  data,\n  columnConfigs,\n  rowType,\n  rows,\n  url,\n}) => {\n  const memoizedColumns = useMemo(\n    () => [\n      { accessor: 'metric', Header: t('Metric') },\n      ...columnConfigs.map((columnConfig, i) => ({\n        accessor: columnConfig.key,\n        cellProps: columnConfig.colType === 'spark' && {\n          style: { width: '1%' },\n        },\n        Header: () => (\n          <>\n            {columnConfig.label}{' '}\n            {columnConfig.tooltip && (\n              <InfoTooltipWithTrigger\n                tooltip={columnConfig.tooltip}\n                label={`tt-col-${i}`}\n                placement=\"top\"\n              />\n            )}\n          </>\n        ),\n        sortType: sortNumberWithMixedTypes,\n      })),\n    ],\n    [columnConfigs],\n  );\n\n  const memoizedRows = useMemo(() => {\n    const renderSparklineCell = (valueField, column, entries) => {\n      let sparkData;\n      if (column.timeRatio) {\n        // Period ratio sparkline\n        sparkData = [];\n        for (let i = column.timeRatio; i < entries.length; i += 1) {\n          const prevData = entries[i - column.timeRatio][valueField];\n          if (prevData && prevData !== 0) {\n            sparkData.push(entries[i][valueField] / prevData);\n          } else {\n            sparkData.push(null);\n          }\n        }\n      } else {\n        sparkData = entries.map(d => d[valueField]);\n      }\n\n      return (\n        <SparklineCell\n          ariaLabel={`spark-${valueField}`}\n          width={parseInt(column.width, 10) || 300}\n          height={parseInt(column.height, 10) || 50}\n          data={sparkData}\n          dataKey={`spark-${valueField}`}\n          dateFormat={column.dateFormat}\n          numberFormat={column.d3format}\n          yAxisBounds={column.yAxisBounds}\n          showYAxis={column.showYAxis}\n          entries={entries}\n        />\n      );\n    };\n\n    const renderValueCell = (valueField, column, reversedEntries) => {\n      const recent = reversedEntries[0][valueField];\n      let v;\n      let errorMsg;\n      if (column.colType === 'time') {\n        // Time lag ratio\n        const timeLag = column.timeLag || 0;\n        const totalLag = Object.keys(reversedEntries).length;\n        if (timeLag >= totalLag) {\n          errorMsg = `The time lag set at ${timeLag} is too large for the length of data at ${reversedEntries.length}. No data available.`;\n        } else {\n          v = reversedEntries[timeLag][valueField];\n        }\n        if (typeof v === 'number' && typeof recent === 'number') {\n          if (column.comparisonType === 'diff') {\n            v = recent - v;\n          } else if (column.comparisonType === 'perc') {\n            v = recent / v;\n          } else if (column.comparisonType === 'perc_change') {\n            v = recent / v - 1;\n          }\n        } else {\n          v = null;\n        }\n      } else if (column.colType === 'contrib') {\n        // contribution to column total\n        v =\n          recent /\n          Object.keys(reversedEntries[0])\n            .map(k => (k !== 'time' ? reversedEntries[0][k] : null))\n            .reduce((a, b) => a + b);\n      } else if (column.colType === 'avg') {\n        // Average over the last {timeLag}\n        v = null;\n        if (reversedEntries.length > 0) {\n          const stats = reversedEntries.slice(undefined, column.timeLag).reduce(\n            function ({ count, sum }, entry) {\n              return entry[valueField] !== undefined &&\n                entry[valueField] !== null\n                ? { count: count + 1, sum: sum + entry[valueField] }\n                : { count, sum };\n            },\n            { count: 0, sum: 0 },\n          );\n          if (stats.count > 0) {\n            v = stats.sum / stats.count;\n          }\n        }\n      }\n\n      const color = colorFromBounds(v, column.bounds);\n\n      return (\n        <span\n          key={column.key}\n          data-value={v}\n          css={theme =>\n            color && {\n              boxShadow: `inset 0px -2.5px 0px 0px ${color}`,\n              borderRight: `2px solid ${theme.colors.grayscale.light5}`,\n            }\n          }\n        >\n          {errorMsg || (\n            <span style={{ color }}>\n              <FormattedNumber num={v} format={column.d3format} />\n            </span>\n          )}\n        </span>\n      );\n    };\n\n    const renderLeftCell = row => {\n      const context = { metric: row };\n      const fullUrl = url ? Mustache.render(url, context) : null;\n\n      if (rowType === 'column') {\n        const column = row;\n        if (fullUrl) {\n          return (\n            <a href={fullUrl} rel=\"noopener noreferrer\" target=\"_blank\">\n              {column.label}\n            </a>\n          );\n        }\n        return column.label;\n      }\n\n      return (\n        <MetricOption\n          metric={row}\n          url={fullUrl}\n          showFormula={false}\n          openInNewWindow\n        />\n      );\n    };\n\n    const entries = Object.keys(data)\n      .sort()\n      .map(time => ({ ...data[time], time }));\n    const reversedEntries = entries.concat().reverse();\n\n    return rows.map(row => {\n      const valueField = row.label || row.metric_name;\n      const cellValues = columnConfigs.reduce((acc, columnConfig) => {\n        if (columnConfig.colType === 'spark') {\n          return {\n            ...acc,\n            [columnConfig.key]: renderSparklineCell(\n              valueField,\n              columnConfig,\n              entries,\n            ),\n          };\n        }\n        return {\n          ...acc,\n          [columnConfig.key]: renderValueCell(\n            valueField,\n            columnConfig,\n            reversedEntries,\n          ),\n        };\n      }, {});\n      return { ...row, ...cellValues, metric: renderLeftCell(row) };\n    });\n  }, [columnConfigs, data, rowType, rows, url]);\n\n  const defaultSort =\n    rowType === 'column' && columnConfigs.length\n      ? [\n          {\n            id: columnConfigs[0].key,\n            desc: 'true',\n          },\n        ]\n      : [];\n\n  return (\n    <TimeTableStyles\n      data-test=\"time-table\"\n      className={className}\n      height={height}\n    >\n      <TableView\n        className=\"table-no-hover\"\n        columns={memoizedColumns}\n        data={memoizedRows}\n        initialSortBy={defaultSort}\n        withPagination={false}\n      />\n    </TimeTableStyles>\n  );\n};\n\nTimeTable.propTypes = propTypes;\nTimeTable.defaultProps = defaultProps;\n\nexport default TimeTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}