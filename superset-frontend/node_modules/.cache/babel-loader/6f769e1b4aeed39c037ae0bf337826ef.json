{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport Select from 'antd/lib/select';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledNativeSelect = styled((props) => ___EmotionJSX(Select, _extends({ getPopupContainer: (trigger) => trigger.parentNode }, props)))`\n  display: block;\n`;\nconst StyledNativeGraySelect = styled(Select)`\n  &.ant-select-single {\n    .ant-select-selector {\n      height: 36px;\n      padding: 0 11px;\n      background-color: ${(_ref) => {let { theme } = _ref;return theme.colors.grayscale.light3;}};\n      border: none;\n\n      .ant-select-selection-search-input {\n        height: 100%;\n      }\n\n      .ant-select-selection-item,\n      .ant-select-selection-placeholder {\n        line-height: 35px;\n        color: ${(_ref2) => {let { theme } = _ref2;return theme.colors.grayscale.dark1;}};\n      }\n    }\n  }\n`;\nexport const NativeSelect = Object.assign(StyledNativeSelect, {\n  Option: Select.Option });\n\nexport const NativeGraySelect = Object.assign(StyledNativeGraySelect, {\n  Option: Select.Option });","map":{"version":3,"mappings":"+DAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,MAAP,MAAoC,iBAApC,C;AAOA,MAAMC,kBAAkB,GAAGF,MAAM,CAAC,CAACG,KAAD,KAChC,cAAC,MAAD,aAAQ,iBAAiB,EAAE,CAACC,OAAD,KAAkBA,OAAO,CAACC,UAArD,IAAqEF,KAArE,EAD+B,CAE/B;;CAFF;AAMA,MAAMG,sBAAsB,GAAGN,MAAM,CAACC,MAAD,CAAQ;;;;;0BAKnB,eAAC,EAAEM,KAAF,EAAD,eAAeA,KAAK,CAACC,MAAN,CAAaC,SAAb,CAAuBC,MAAtC,EAA4C;;;;;;;;;;iBAUrD,gBAAC,EAAEH,KAAF,EAAD,gBAAeA,KAAK,CAACC,MAAN,CAAaC,SAAb,CAAuBE,KAAtC,EAA2C;;;;CAf5D;AAqBA,OAAO,MAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcZ,kBAAd,EAAkC;EAC5Da,MAAM,EAAEd,MAAM,CAACc,MAD6C,EAAlC,CAArB;;AAIP,OAAO,MAAMC,gBAAgB,GAAGH,MAAM,CAACC,MAAP,CAAcR,sBAAd,EAAsC;EACpES,MAAM,EAAEd,MAAM,CAACc,MADqD,EAAtC,CAAzB","names":["React","styled","Select","StyledNativeSelect","props","trigger","parentNode","StyledNativeGraySelect","theme","colors","grayscale","light3","dark1","NativeSelect","Object","assign","Option","NativeGraySelect"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/DeprecatedSelect/NativeSelect.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport Select, { SelectProps } from 'antd/lib/select';\n\nexport type {\n  OptionType as NativeSelectOptionType,\n  SelectProps as NativeSelectProps,\n} from 'antd/lib/select';\n\nconst StyledNativeSelect = styled((props: SelectProps<any>) => (\n  <Select getPopupContainer={(trigger: any) => trigger.parentNode} {...props} />\n))`\n  display: block;\n`;\n\nconst StyledNativeGraySelect = styled(Select)`\n  &.ant-select-single {\n    .ant-select-selector {\n      height: 36px;\n      padding: 0 11px;\n      background-color: ${({ theme }) => theme.colors.grayscale.light3};\n      border: none;\n\n      .ant-select-selection-search-input {\n        height: 100%;\n      }\n\n      .ant-select-selection-item,\n      .ant-select-selection-placeholder {\n        line-height: 35px;\n        color: ${({ theme }) => theme.colors.grayscale.dark1};\n      }\n    }\n  }\n`;\n\nexport const NativeSelect = Object.assign(StyledNativeSelect, {\n  Option: Select.Option,\n});\n\nexport const NativeGraySelect = Object.assign(StyledNativeGraySelect, {\n  Option: Select.Option,\n});\n"]},"metadata":{},"sourceType":"module"}