{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { ControlSubSectionHeader, getStandardizedControls, sections, sharedControls } from '@superset-ui/chart-controls';\nimport { DEFAULT_FORM_DATA } from './types';\nimport { legendSection } from '../controls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst requiredEntity = {\n  ...sharedControls.entity,\n  clearable: false };\n\nconst optionalEntity = {\n  ...sharedControls.entity,\n  clearable: true,\n  validators: [] };\n\nconst controlPanel = {\n  controlPanelSections: [\n  sections.legacyRegularTime,\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'source',\n      config: {\n        ...requiredEntity,\n        label: t('Source'),\n        description: t('Name of the source nodes') } }],\n\n\n\n    [\n    {\n      name: 'target',\n      config: {\n        ...requiredEntity,\n        label: t('Target'),\n        description: t('Name of the target nodes') } }],\n\n\n\n    ['metric'],\n    [\n    {\n      name: 'source_category',\n      config: {\n        ...optionalEntity,\n        label: t('Source category'),\n        description: t('The category of source nodes used to assign colors. ' +\n        'If a node is associated with more than one category, only the first will be used.') } }],\n\n\n\n    [\n    {\n      name: 'target_category',\n      config: {\n        ...optionalEntity,\n        label: t('Target category'),\n        description: t('Category of target nodes') } }],\n\n\n\n    ['adhoc_filters'],\n    ['row_limit']] },\n\n\n  {\n    label: t('Chart options'),\n    expanded: true,\n    controlSetRows: [\n    ['color_scheme'],\n    ...legendSection,\n    [___EmotionJSX(ControlSubSectionHeader, null, t('Layout'))],\n    [\n    {\n      name: 'layout',\n      config: {\n        type: 'RadioButtonControl',\n        renderTrigger: true,\n        label: t('Graph layout'),\n        default: DEFAULT_FORM_DATA.layout,\n        options: [\n        ['force', t('Force')],\n        ['circular', t('Circular')]],\n\n        description: t('Layout type of graph') } }],\n\n\n\n    [\n    {\n      name: 'edgeSymbol',\n      config: {\n        type: 'SelectControl',\n        renderTrigger: true,\n        label: t('Edge symbols'),\n        description: t('Symbol of two ends of edge line'),\n        default: DEFAULT_FORM_DATA.edgeSymbol,\n        choices: [\n        ['none,none', t('None -> None')],\n        ['none,arrow', t('None -> Arrow')],\n        ['circle,arrow', t('Circle -> Arrow')],\n        ['circle,circle', t('Circle -> Circle')]] } }],\n\n\n\n\n    [\n    {\n      name: 'draggable',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Enable node dragging'),\n        renderTrigger: true,\n        default: DEFAULT_FORM_DATA.draggable,\n        description: t('Whether to enable node dragging in force layout mode.'),\n        visibility(_ref) {let { form_data: { layout } } = _ref;\n          return layout === 'force' ||\n          !layout && DEFAULT_FORM_DATA.layout === 'force';\n        } } }],\n\n\n\n    [\n    {\n      name: 'roam',\n      config: {\n        type: 'SelectControl',\n        label: t('Enable graph roaming'),\n        renderTrigger: true,\n        default: DEFAULT_FORM_DATA.roam,\n        choices: [\n        [false, t('Disabled')],\n        ['scale', t('Scale only')],\n        ['move', t('Move only')],\n        [true, t('Scale and Move')]],\n\n        description: t('Whether to enable changing graph position and scaling.') } }],\n\n\n\n    [\n    {\n      name: 'selectedMode',\n      config: {\n        type: 'SelectControl',\n        renderTrigger: true,\n        label: t('Node select mode'),\n        default: DEFAULT_FORM_DATA.selectedMode,\n        choices: [\n        [false, t('Disabled')],\n        ['single', t('Single')],\n        ['multiple', t('Multiple')]],\n\n        description: t('Allow node selections') } }],\n\n\n\n    [\n    {\n      name: 'showSymbolThreshold',\n      config: {\n        type: 'TextControl',\n        label: t('Label threshold'),\n        renderTrigger: true,\n        isInt: true,\n        default: DEFAULT_FORM_DATA.showSymbolThreshold,\n        description: t('Minimum value for label to be displayed on graph.') } }],\n\n\n\n    [\n    {\n      name: 'baseNodeSize',\n      config: {\n        type: 'TextControl',\n        label: t('Node size'),\n        renderTrigger: true,\n        isFloat: true,\n        default: DEFAULT_FORM_DATA.baseNodeSize,\n        description: t('Median node size, the largest node will be 4 times larger than the smallest') } },\n\n\n    {\n      name: 'baseEdgeWidth',\n      config: {\n        type: 'TextControl',\n        label: t('Edge width'),\n        renderTrigger: true,\n        isFloat: true,\n        default: DEFAULT_FORM_DATA.baseEdgeWidth,\n        description: t('Median edge width, the thickest edge will be 4 times thicker than the thinnest.') } }],\n\n\n\n    [\n    {\n      name: 'edgeLength',\n      config: {\n        type: 'SliderControl',\n        label: t('Edge length'),\n        renderTrigger: true,\n        min: 100,\n        max: 1000,\n        step: 50,\n        default: DEFAULT_FORM_DATA.edgeLength,\n        description: t('Edge length between nodes'),\n        visibility(_ref2) {let { form_data: { layout } } = _ref2;\n          return layout === 'force' ||\n          !layout && DEFAULT_FORM_DATA.layout === 'force';\n        } } }],\n\n\n\n    [\n    {\n      name: 'gravity',\n      config: {\n        type: 'SliderControl',\n        label: t('Gravity'),\n        renderTrigger: true,\n        min: 0.1,\n        max: 1,\n        step: 0.1,\n        default: DEFAULT_FORM_DATA.gravity,\n        description: t('Strength to pull the graph toward center'),\n        visibility(_ref3) {let { form_data: { layout } } = _ref3;\n          return layout === 'force' ||\n          !layout && DEFAULT_FORM_DATA.layout === 'force';\n        } } }],\n\n\n\n    [\n    {\n      name: 'repulsion',\n      config: {\n        type: 'SliderControl',\n        label: t('Repulsion'),\n        renderTrigger: true,\n        min: 100,\n        max: 3000,\n        step: 50,\n        default: DEFAULT_FORM_DATA.repulsion,\n        description: t('Repulsion strength between nodes'),\n        visibility(_ref4) {let { form_data: { layout } } = _ref4;\n          return layout === 'force' ||\n          !layout && DEFAULT_FORM_DATA.layout === 'force';\n        } } }],\n\n\n\n    [\n    {\n      name: 'friction',\n      config: {\n        type: 'SliderControl',\n        label: t('Friction'),\n        renderTrigger: true,\n        min: 0.1,\n        max: 1,\n        step: 0.1,\n        default: DEFAULT_FORM_DATA.friction,\n        description: t('Friction between nodes'),\n        visibility(_ref5) {let { form_data: { layout } } = _ref5;\n          return layout === 'force' ||\n          !layout && DEFAULT_FORM_DATA.layout === 'force';\n        } } }]] }],\n\n\n\n\n\n\n  formDataOverrides: (formData) => ({\n    ...formData,\n    metric: getStandardizedControls().popAllMetrics() }) };\n\n\nexport default controlPanel;","map":{"version":3,"mappings":"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","names":["React","t","ControlSubSectionHeader","getStandardizedControls","sections","sharedControls","DEFAULT_FORM_DATA","legendSection","requiredEntity","entity","clearable","optionalEntity","validators","controlPanel","controlPanelSections","legacyRegularTime","label","expanded","controlSetRows","name","config","description","type","renderTrigger","default","layout","options","edgeSymbol","choices","draggable","visibility","form_data","roam","selectedMode","isInt","showSymbolThreshold","isFloat","baseNodeSize","baseEdgeWidth","min","max","step","edgeLength","gravity","repulsion","friction","formDataOverrides","formData","metric","popAllMetrics"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/plugin-chart-echarts/src/Graph/controlPanel.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  ControlSubSectionHeader,\n  getStandardizedControls,\n  sections,\n  sharedControls,\n} from '@superset-ui/chart-controls';\nimport { DEFAULT_FORM_DATA } from './types';\nimport { legendSection } from '../controls';\n\nconst requiredEntity = {\n  ...sharedControls.entity,\n  clearable: false,\n};\n\nconst optionalEntity = {\n  ...sharedControls.entity,\n  clearable: true,\n  validators: [],\n};\n\nconst controlPanel: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.legacyRegularTime,\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'source',\n            config: {\n              ...requiredEntity,\n              label: t('Source'),\n              description: t('Name of the source nodes'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'target',\n            config: {\n              ...requiredEntity,\n              label: t('Target'),\n              description: t('Name of the target nodes'),\n            },\n          },\n        ],\n        ['metric'],\n        [\n          {\n            name: 'source_category',\n            config: {\n              ...optionalEntity,\n              label: t('Source category'),\n              description: t(\n                'The category of source nodes used to assign colors. ' +\n                  'If a node is associated with more than one category, only the first will be used.',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'target_category',\n            config: {\n              ...optionalEntity,\n              label: t('Target category'),\n              description: t('Category of target nodes'),\n            },\n          },\n        ],\n        ['adhoc_filters'],\n        ['row_limit'],\n      ],\n    },\n    {\n      label: t('Chart options'),\n      expanded: true,\n      controlSetRows: [\n        ['color_scheme'],\n        ...legendSection,\n        [<ControlSubSectionHeader>{t('Layout')}</ControlSubSectionHeader>],\n        [\n          {\n            name: 'layout',\n            config: {\n              type: 'RadioButtonControl',\n              renderTrigger: true,\n              label: t('Graph layout'),\n              default: DEFAULT_FORM_DATA.layout,\n              options: [\n                ['force', t('Force')],\n                ['circular', t('Circular')],\n              ],\n              description: t('Layout type of graph'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'edgeSymbol',\n            config: {\n              type: 'SelectControl',\n              renderTrigger: true,\n              label: t('Edge symbols'),\n              description: t('Symbol of two ends of edge line'),\n              default: DEFAULT_FORM_DATA.edgeSymbol,\n              choices: [\n                ['none,none', t('None -> None')],\n                ['none,arrow', t('None -> Arrow')],\n                ['circle,arrow', t('Circle -> Arrow')],\n                ['circle,circle', t('Circle -> Circle')],\n              ],\n            },\n          },\n        ],\n        [\n          {\n            name: 'draggable',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Enable node dragging'),\n              renderTrigger: true,\n              default: DEFAULT_FORM_DATA.draggable,\n              description: t(\n                'Whether to enable node dragging in force layout mode.',\n              ),\n              visibility({ form_data: { layout } }) {\n                return (\n                  layout === 'force' ||\n                  (!layout && DEFAULT_FORM_DATA.layout === 'force')\n                );\n              },\n            },\n          },\n        ],\n        [\n          {\n            name: 'roam',\n            config: {\n              type: 'SelectControl',\n              label: t('Enable graph roaming'),\n              renderTrigger: true,\n              default: DEFAULT_FORM_DATA.roam,\n              choices: [\n                [false, t('Disabled')],\n                ['scale', t('Scale only')],\n                ['move', t('Move only')],\n                [true, t('Scale and Move')],\n              ],\n              description: t(\n                'Whether to enable changing graph position and scaling.',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'selectedMode',\n            config: {\n              type: 'SelectControl',\n              renderTrigger: true,\n              label: t('Node select mode'),\n              default: DEFAULT_FORM_DATA.selectedMode,\n              choices: [\n                [false, t('Disabled')],\n                ['single', t('Single')],\n                ['multiple', t('Multiple')],\n              ],\n              description: t('Allow node selections'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'showSymbolThreshold',\n            config: {\n              type: 'TextControl',\n              label: t('Label threshold'),\n              renderTrigger: true,\n              isInt: true,\n              default: DEFAULT_FORM_DATA.showSymbolThreshold,\n              description: t(\n                'Minimum value for label to be displayed on graph.',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'baseNodeSize',\n            config: {\n              type: 'TextControl',\n              label: t('Node size'),\n              renderTrigger: true,\n              isFloat: true,\n              default: DEFAULT_FORM_DATA.baseNodeSize,\n              description: t(\n                'Median node size, the largest node will be 4 times larger than the smallest',\n              ),\n            },\n          },\n          {\n            name: 'baseEdgeWidth',\n            config: {\n              type: 'TextControl',\n              label: t('Edge width'),\n              renderTrigger: true,\n              isFloat: true,\n              default: DEFAULT_FORM_DATA.baseEdgeWidth,\n              description: t(\n                'Median edge width, the thickest edge will be 4 times thicker than the thinnest.',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'edgeLength',\n            config: {\n              type: 'SliderControl',\n              label: t('Edge length'),\n              renderTrigger: true,\n              min: 100,\n              max: 1000,\n              step: 50,\n              default: DEFAULT_FORM_DATA.edgeLength,\n              description: t('Edge length between nodes'),\n              visibility({ form_data: { layout } }) {\n                return (\n                  layout === 'force' ||\n                  (!layout && DEFAULT_FORM_DATA.layout === 'force')\n                );\n              },\n            },\n          },\n        ],\n        [\n          {\n            name: 'gravity',\n            config: {\n              type: 'SliderControl',\n              label: t('Gravity'),\n              renderTrigger: true,\n              min: 0.1,\n              max: 1,\n              step: 0.1,\n              default: DEFAULT_FORM_DATA.gravity,\n              description: t('Strength to pull the graph toward center'),\n              visibility({ form_data: { layout } }) {\n                return (\n                  layout === 'force' ||\n                  (!layout && DEFAULT_FORM_DATA.layout === 'force')\n                );\n              },\n            },\n          },\n        ],\n        [\n          {\n            name: 'repulsion',\n            config: {\n              type: 'SliderControl',\n              label: t('Repulsion'),\n              renderTrigger: true,\n              min: 100,\n              max: 3000,\n              step: 50,\n              default: DEFAULT_FORM_DATA.repulsion,\n              description: t('Repulsion strength between nodes'),\n              visibility({ form_data: { layout } }) {\n                return (\n                  layout === 'force' ||\n                  (!layout && DEFAULT_FORM_DATA.layout === 'force')\n                );\n              },\n            },\n          },\n        ],\n        [\n          {\n            name: 'friction',\n            config: {\n              type: 'SliderControl',\n              label: t('Friction'),\n              renderTrigger: true,\n              min: 0.1,\n              max: 1,\n              step: 0.1,\n              default: DEFAULT_FORM_DATA.friction,\n              description: t('Friction between nodes'),\n              visibility({ form_data: { layout } }) {\n                return (\n                  layout === 'force' ||\n                  (!layout && DEFAULT_FORM_DATA.layout === 'force')\n                );\n              },\n            },\n          },\n        ],\n      ],\n    },\n  ],\n  formDataOverrides: formData => ({\n    ...formData,\n    metric: getStandardizedControls().popAllMetrics(),\n  }),\n};\n\nexport default controlPanel;\n"]},"metadata":{},"sourceType":"module"}