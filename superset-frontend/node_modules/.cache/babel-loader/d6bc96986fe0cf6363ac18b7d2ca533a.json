{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { css, styled } from '@superset-ui/core';\n\nimport DragDroppable from 'src/dashboard/components/dnd/DragDroppable';\nimport { NEW_COMPONENTS_SOURCE_ID } from 'src/dashboard/util/constants';\nimport { NEW_COMPONENT_SOURCE_TYPE } from 'src/dashboard/util/componentTypes';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  className: PropTypes.string };\n\n\nconst defaultProps = {\n  className: null };\n\n\nconst NewComponent = styled.div`\n  ${(_ref) => {let { theme } = _ref;return css`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    align-items: center;\n    padding: ${theme.gridUnit * 4}px;\n    background: ${theme.colors.grayscale.light5};\n    cursor: move;\n\n    &:not(.static):hover {\n      background: ${theme.colors.grayscale.light4};\n    }\n  `;}}\n`;\n\nconst NewComponentPlaceholder = styled.div`\n  ${(_ref2) => {let { theme } = _ref2;return css`\n    position: relative;\n    background: ${theme.colors.grayscale.light4};\n    width: ${theme.gridUnit * 10}px;\n    height: ${theme.gridUnit * 10}px;\n    margin-right: ${theme.gridUnit * 4}px;\n    border: 1px solid ${theme.colors.grayscale.light5};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: ${theme.colors.text.label};\n    font-size: ${theme.typography.sizes.xxl}px;\n\n    &.fa-window-restore {\n      font-size: ${theme.typography.sizes.l}px;\n    }\n\n    &.fa-area-chart {\n      font-size: ${theme.typography.sizes.xl}px;\n    }\n\n    &.divider-placeholder:after {\n      content: '';\n      height: 2px;\n      width: 100%;\n      background-color: ${theme.colors.grayscale.light2};\n    }\n  `;}}\n`;\n\nexport default class DraggableNewComponent extends React.PureComponent {\n  render() {\n    const { label, id, type, className, meta } = this.props;\n    return (\n      ___EmotionJSX(DragDroppable, {\n        component: { type, id, meta },\n        parentComponent: {\n          id: NEW_COMPONENTS_SOURCE_ID,\n          type: NEW_COMPONENT_SOURCE_TYPE },\n\n        index: 0,\n        depth: 0,\n        editMode: true },\n\n      (_ref3) => {let { dragSourceRef } = _ref3;return (\n          ___EmotionJSX(NewComponent, { ref: dragSourceRef },\n          ___EmotionJSX(NewComponentPlaceholder, {\n            className: cx('new-component-placeholder', className) }),\n\n          label));}));\n\n\n\n\n  }}\n\n\nDraggableNewComponent.propTypes = propTypes;\nDraggableNewComponent.defaultProps = defaultProps;","map":{"version":3,"names":["React","PropTypes","cx","css","styled","DragDroppable","NEW_COMPONENTS_SOURCE_ID","NEW_COMPONENT_SOURCE_TYPE","propTypes","id","string","isRequired","type","label","className","defaultProps","NewComponent","div","theme","gridUnit","colors","grayscale","light5","light4","NewComponentPlaceholder","text","typography","sizes","xxl","l","xl","light2","DraggableNewComponent","PureComponent","render","meta","props","dragSourceRef"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/gridComponents/new/DraggableNewComponent.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { css, styled } from '@superset-ui/core';\n\nimport DragDroppable from 'src/dashboard/components/dnd/DragDroppable';\nimport { NEW_COMPONENTS_SOURCE_ID } from 'src/dashboard/util/constants';\nimport { NEW_COMPONENT_SOURCE_TYPE } from 'src/dashboard/util/componentTypes';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nconst defaultProps = {\n  className: null,\n};\n\nconst NewComponent = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    align-items: center;\n    padding: ${theme.gridUnit * 4}px;\n    background: ${theme.colors.grayscale.light5};\n    cursor: move;\n\n    &:not(.static):hover {\n      background: ${theme.colors.grayscale.light4};\n    }\n  `}\n`;\n\nconst NewComponentPlaceholder = styled.div`\n  ${({ theme }) => css`\n    position: relative;\n    background: ${theme.colors.grayscale.light4};\n    width: ${theme.gridUnit * 10}px;\n    height: ${theme.gridUnit * 10}px;\n    margin-right: ${theme.gridUnit * 4}px;\n    border: 1px solid ${theme.colors.grayscale.light5};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: ${theme.colors.text.label};\n    font-size: ${theme.typography.sizes.xxl}px;\n\n    &.fa-window-restore {\n      font-size: ${theme.typography.sizes.l}px;\n    }\n\n    &.fa-area-chart {\n      font-size: ${theme.typography.sizes.xl}px;\n    }\n\n    &.divider-placeholder:after {\n      content: '';\n      height: 2px;\n      width: 100%;\n      background-color: ${theme.colors.grayscale.light2};\n    }\n  `}\n`;\n\nexport default class DraggableNewComponent extends React.PureComponent {\n  render() {\n    const { label, id, type, className, meta } = this.props;\n    return (\n      <DragDroppable\n        component={{ type, id, meta }}\n        parentComponent={{\n          id: NEW_COMPONENTS_SOURCE_ID,\n          type: NEW_COMPONENT_SOURCE_TYPE,\n        }}\n        index={0}\n        depth={0}\n        editMode\n      >\n        {({ dragSourceRef }) => (\n          <NewComponent ref={dragSourceRef} data-test=\"new-component\">\n            <NewComponentPlaceholder\n              className={cx('new-component-placeholder', className)}\n            />\n            {label}\n          </NewComponent>\n        )}\n      </DragDroppable>\n    );\n  }\n}\n\nDraggableNewComponent.propTypes = propTypes;\nDraggableNewComponent.defaultProps = defaultProps;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}