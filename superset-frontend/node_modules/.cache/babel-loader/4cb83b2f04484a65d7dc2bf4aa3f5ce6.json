{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport { useParams, Link, useHistory } from 'react-router-dom';\nimport { css, t, styled, SupersetClient } from '@superset-ui/core';\nimport moment from 'moment';\nimport rison from 'rison';\nimport ActionsBar from 'src/components/ListView/ActionsBar';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ListView from 'src/components/ListView';\nimport SubMenu from 'src/features/home/SubMenu';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createErrorHandler } from 'src/views/CRUD/utils';\nimport AnnotationModal from 'src/features/annotations/AnnotationModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst PAGE_SIZE = 25;\nconst StyledHeader = styled.div`\n  ${(_ref) => {let { theme } = _ref;return css`\n    display: flex;\n    flex-direction: row;\n\n    a,\n    Link {\n      margin-left: ${theme.gridUnit * 4}px;\n      font-size: ${theme.typography.sizes.s}px;\n      font-weight: ${theme.typography.weights.normal};\n      text-decoration: underline;\n    }\n  `;}}\n`;\nfunction AnnotationList(_ref2) {let { addDangerToast, addSuccessToast } = _ref2;\n  const { annotationLayerId } = useParams();\n  const { state: { loading, resourceCount: annotationsCount, resourceCollection: annotations, bulkSelectEnabled }, fetchData, refreshData, toggleBulkSelect } = useListViewResource(`annotation_layer/${annotationLayerId}/annotation`, t('annotation'), addDangerToast, false);\n  const [annotationModalOpen, setAnnotationModalOpen] = useState(false);\n  const [annotationLayerName, setAnnotationLayerName] = useState('');\n  const [currentAnnotation, setCurrentAnnotation] = useState(null);\n  const [annotationCurrentlyDeleting, setAnnotationCurrentlyDeleting] = useState(null);\n  const handleAnnotationEdit = (annotation) => {\n    setCurrentAnnotation(annotation);\n    setAnnotationModalOpen(true);\n  };\n  const fetchAnnotationLayer = useCallback(async function fetchAnnotationLayer() {\n    try {\n      const response = await SupersetClient.get({\n        endpoint: `/api/v1/annotation_layer/${annotationLayerId}` });\n\n      setAnnotationLayerName(response.json.result.name);\n    }\n    catch (response) {\n      await getClientErrorObject(response).then((_ref3) => {let { error } = _ref3;\n        addDangerToast(error.error || error.statusText || error);\n      });\n    }\n  }, [annotationLayerId]);\n  const handleAnnotationDelete = (_ref4) => {let { id, short_descr } = _ref4;\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${annotationLayerId}/annotation/${id}` }).\n    then(() => {\n      refreshData();\n      setAnnotationCurrentlyDeleting(null);\n      addSuccessToast(t('Deleted: %s', short_descr));\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting %s: %s', short_descr, errMsg))));\n  };\n  const handleBulkAnnotationsDelete = (annotationsToDelete) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${annotationLayerId}/annotation/?q=${rison.encode(annotationsToDelete.map((_ref5) => {let { id } = _ref5;return id;}))}` }).\n    then((_ref6) => {let { json = {} } = _ref6;\n      refreshData();\n      addSuccessToast(json.message);\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting the selected annotations: %s', errMsg))));\n  };\n  // get the Annotation Layer\n  useEffect(() => {\n    fetchAnnotationLayer();\n  }, [fetchAnnotationLayer]);\n  const initialSort = [{ id: 'short_descr', desc: true }];\n  const columns = useMemo(() => [\n  {\n    accessor: 'short_descr',\n    Header: t('Label') },\n\n  {\n    accessor: 'long_descr',\n    Header: t('Description') },\n\n  {\n    Cell: (_ref7) => {let { row: { original: { start_dttm: startDttm } } } = _ref7;return moment(new Date(startDttm)).format('ll');},\n    Header: t('Start'),\n    accessor: 'start_dttm' },\n\n  {\n    Cell: (_ref8) => {let { row: { original: { end_dttm: endDttm } } } = _ref8;return moment(new Date(endDttm)).format('ll');},\n    Header: t('End'),\n    accessor: 'end_dttm' },\n\n  {\n    Cell: (_ref9) => {let { row: { original } } = _ref9;\n      const handleEdit = () => handleAnnotationEdit(original);\n      const handleDelete = () => setAnnotationCurrentlyDeleting(original);\n      const actions = [\n      {\n        label: 'edit-action',\n        tooltip: t('Edit annotation'),\n        placement: 'bottom',\n        icon: 'Edit',\n        onClick: handleEdit },\n\n      {\n        label: 'delete-action',\n        tooltip: t('Delete annotation'),\n        placement: 'bottom',\n        icon: 'Trash',\n        onClick: handleDelete }];\n\n\n      return ___EmotionJSX(ActionsBar, { actions: actions });\n    },\n    Header: t('Actions'),\n    id: 'actions',\n    disableSortBy: true }],\n\n  [true, true]);\n  const subMenuButtons = [];\n  subMenuButtons.push({\n    name: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }), \" \", t('Annotation')),\n\n    buttonStyle: 'primary',\n    onClick: () => {\n      handleAnnotationEdit(null);\n    } });\n\n  subMenuButtons.push({\n    name: t('Bulk select'),\n    onClick: toggleBulkSelect,\n    buttonStyle: 'secondary',\n    'data-test': 'annotation-bulk-select' });\n\n  let hasHistory = true;\n  try {\n    useHistory();\n  }\n  catch (err) {\n    // If error is thrown, we know not to use <Link> in render\n    hasHistory = false;\n  }\n  const emptyState = {\n    title: t('No annotation yet'),\n    image: 'filter-results.svg',\n    buttonAction: () => {\n      handleAnnotationEdit(null);\n    },\n    buttonText: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }), \" \", t('Annotation')) };\n\n\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, { name: ___EmotionJSX(StyledHeader, null,\n    ___EmotionJSX(\"span\", null, t('Annotation Layer %s', annotationLayerName)),\n    ___EmotionJSX(\"span\", null,\n    hasHistory ? ___EmotionJSX(Link, { to: \"/annotationlayer/list/\" }, t('Back to all')) : ___EmotionJSX(\"a\", { href: \"/annotationlayer/list/\" }, t('Back to all')))),\n\n    buttons: subMenuButtons }),\n  ___EmotionJSX(AnnotationModal, { addDangerToast: addDangerToast, addSuccessToast: addSuccessToast, annotation: currentAnnotation, show: annotationModalOpen, onAnnotationAdd: () => refreshData(), annotationLayerId: annotationLayerId, onHide: () => setAnnotationModalOpen(false) }),\n  annotationCurrentlyDeleting && ___EmotionJSX(DeleteModal, { description: t('Are you sure you want to delete %s?', annotationCurrentlyDeleting == null ? void 0 : annotationCurrentlyDeleting.short_descr), onConfirm: () => {\n      if (annotationCurrentlyDeleting) {\n        handleAnnotationDelete(annotationCurrentlyDeleting);\n      }\n    }, onHide: () => setAnnotationCurrentlyDeleting(null), open: true, title: t('Delete Annotation?') }),\n  ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: t('Are you sure you want to delete the selected annotations?'), onConfirm: handleBulkAnnotationsDelete },\n  (confirmDelete) => {\n    const bulkActions = [\n    {\n      key: 'delete',\n      name: t('Delete'),\n      onSelect: confirmDelete,\n      type: 'danger' }];\n\n\n    return ___EmotionJSX(ListView, { className: \"annotations-list-view\", bulkActions: bulkActions, bulkSelectEnabled: bulkSelectEnabled, columns: columns, count: annotationsCount, data: annotations, disableBulkSelect: toggleBulkSelect, emptyState: emptyState, fetchData: fetchData, initialSort: initialSort, loading: loading, pageSize: PAGE_SIZE });\n  }));\n\n\n}\nexport default withToasts(AnnotationList);","map":{"version":3,"mappings":"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","names":["React","useMemo","useState","useEffect","useCallback","useParams","Link","useHistory","css","t","styled","SupersetClient","moment","rison","ActionsBar","ConfirmStatusChange","DeleteModal","ListView","SubMenu","getClientErrorObject","withToasts","useListViewResource","createErrorHandler","AnnotationModal","PAGE_SIZE","StyledHeader","div","theme","gridUnit","typography","sizes","s","weights","normal","AnnotationList","addDangerToast","addSuccessToast","annotationLayerId","state","loading","resourceCount","annotationsCount","resourceCollection","annotations","bulkSelectEnabled","fetchData","refreshData","toggleBulkSelect","annotationModalOpen","setAnnotationModalOpen","annotationLayerName","setAnnotationLayerName","currentAnnotation","setCurrentAnnotation","annotationCurrentlyDeleting","setAnnotationCurrentlyDeleting","handleAnnotationEdit","annotation","fetchAnnotationLayer","response","get","endpoint","json","result","name","then","error","statusText","handleAnnotationDelete","id","short_descr","delete","errMsg","handleBulkAnnotationsDelete","annotationsToDelete","encode","map","message","initialSort","desc","columns","accessor","Header","Cell","row","original","start_dttm","startDttm","Date","format","end_dttm","endDttm","handleEdit","handleDelete","actions","label","tooltip","placement","icon","onClick","disableSortBy","subMenuButtons","push","buttonStyle","hasHistory","err","emptyState","title","image","buttonAction","buttonText","bulkActions","key","onSelect","confirmDelete","type"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/AnnotationList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport { useParams, Link, useHistory } from 'react-router-dom';\nimport { css, t, styled, SupersetClient } from '@superset-ui/core';\nimport moment from 'moment';\nimport rison from 'rison';\n\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ListView, { ListViewProps } from 'src/components/ListView';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createErrorHandler } from 'src/views/CRUD/utils';\n\nimport { AnnotationObject } from 'src/features/annotations/types';\nimport AnnotationModal from 'src/features/annotations/AnnotationModal';\n\nconst PAGE_SIZE = 25;\n\ninterface AnnotationListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n}\n\nconst StyledHeader = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: row;\n\n    a,\n    Link {\n      margin-left: ${theme.gridUnit * 4}px;\n      font-size: ${theme.typography.sizes.s}px;\n      font-weight: ${theme.typography.weights.normal};\n      text-decoration: underline;\n    }\n  `}\n`;\n\nfunction AnnotationList({\n  addDangerToast,\n  addSuccessToast,\n}: AnnotationListProps) {\n  const { annotationLayerId }: any = useParams();\n  const {\n    state: {\n      loading,\n      resourceCount: annotationsCount,\n      resourceCollection: annotations,\n      bulkSelectEnabled,\n    },\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<AnnotationObject>(\n    `annotation_layer/${annotationLayerId}/annotation`,\n    t('annotation'),\n    addDangerToast,\n    false,\n  );\n  const [annotationModalOpen, setAnnotationModalOpen] =\n    useState<boolean>(false);\n  const [annotationLayerName, setAnnotationLayerName] = useState<string>('');\n  const [currentAnnotation, setCurrentAnnotation] =\n    useState<AnnotationObject | null>(null);\n  const [annotationCurrentlyDeleting, setAnnotationCurrentlyDeleting] =\n    useState<AnnotationObject | null>(null);\n  const handleAnnotationEdit = (annotation: AnnotationObject | null) => {\n    setCurrentAnnotation(annotation);\n    setAnnotationModalOpen(true);\n  };\n\n  const fetchAnnotationLayer = useCallback(\n    async function fetchAnnotationLayer() {\n      try {\n        const response = await SupersetClient.get({\n          endpoint: `/api/v1/annotation_layer/${annotationLayerId}`,\n        });\n        setAnnotationLayerName(response.json.result.name);\n      } catch (response) {\n        await getClientErrorObject(response).then(({ error }: any) => {\n          addDangerToast(error.error || error.statusText || error);\n        });\n      }\n    },\n    [annotationLayerId],\n  );\n\n  const handleAnnotationDelete = ({ id, short_descr }: AnnotationObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${annotationLayerId}/annotation/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setAnnotationCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', short_descr));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting %s: %s', short_descr, errMsg),\n        ),\n      ),\n    );\n  };\n\n  const handleBulkAnnotationsDelete = (\n    annotationsToDelete: AnnotationObject[],\n  ) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${annotationLayerId}/annotation/?q=${rison.encode(\n        annotationsToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected annotations: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  // get the Annotation Layer\n  useEffect(() => {\n    fetchAnnotationLayer();\n  }, [fetchAnnotationLayer]);\n\n  const initialSort = [{ id: 'short_descr', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'short_descr',\n        Header: t('Label'),\n      },\n      {\n        accessor: 'long_descr',\n        Header: t('Description'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { start_dttm: startDttm },\n          },\n        }: any) => moment(new Date(startDttm)).format('ll'),\n        Header: t('Start'),\n        accessor: 'start_dttm',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { end_dttm: endDttm },\n          },\n        }: any) => moment(new Date(endDttm)).format('ll'),\n        Header: t('End'),\n        accessor: 'end_dttm',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () => handleAnnotationEdit(original);\n          const handleDelete = () => setAnnotationCurrentlyDeleting(original);\n          const actions = [\n            {\n              label: 'edit-action',\n              tooltip: t('Edit annotation'),\n              placement: 'bottom',\n              icon: 'Edit',\n              onClick: handleEdit,\n            },\n            {\n              label: 'delete-action',\n              tooltip: t('Delete annotation'),\n              placement: 'bottom',\n              icon: 'Trash',\n              onClick: handleDelete,\n            },\n          ];\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n      },\n    ],\n    [true, true],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  subMenuButtons.push({\n    name: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Annotation')}\n      </>\n    ),\n    buttonStyle: 'primary',\n    onClick: () => {\n      handleAnnotationEdit(null);\n    },\n  });\n\n  subMenuButtons.push({\n    name: t('Bulk select'),\n    onClick: toggleBulkSelect,\n    buttonStyle: 'secondary',\n    'data-test': 'annotation-bulk-select',\n  });\n\n  let hasHistory = true;\n\n  try {\n    useHistory();\n  } catch (err) {\n    // If error is thrown, we know not to use <Link> in render\n    hasHistory = false;\n  }\n\n  const emptyState = {\n    title: t('No annotation yet'),\n    image: 'filter-results.svg',\n    buttonAction: () => {\n      handleAnnotationEdit(null);\n    },\n    buttonText: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Annotation')}\n      </>\n    ),\n  };\n\n  return (\n    <>\n      <SubMenu\n        name={\n          <StyledHeader>\n            <span>{t('Annotation Layer %s', annotationLayerName)}</span>\n            <span>\n              {hasHistory ? (\n                <Link to=\"/annotationlayer/list/\">{t('Back to all')}</Link>\n              ) : (\n                <a href=\"/annotationlayer/list/\">{t('Back to all')}</a>\n              )}\n            </span>\n          </StyledHeader>\n        }\n        buttons={subMenuButtons}\n      />\n      <AnnotationModal\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        annotation={currentAnnotation}\n        show={annotationModalOpen}\n        onAnnotationAdd={() => refreshData()}\n        annotationLayerId={annotationLayerId}\n        onHide={() => setAnnotationModalOpen(false)}\n      />\n      {annotationCurrentlyDeleting && (\n        <DeleteModal\n          description={t(\n            'Are you sure you want to delete %s?',\n            annotationCurrentlyDeleting?.short_descr,\n          )}\n          onConfirm={() => {\n            if (annotationCurrentlyDeleting) {\n              handleAnnotationDelete(annotationCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setAnnotationCurrentlyDeleting(null)}\n          open\n          title={t('Delete Annotation?')}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected annotations?',\n        )}\n        onConfirm={handleBulkAnnotationsDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [\n            {\n              key: 'delete',\n              name: t('Delete'),\n              onSelect: confirmDelete,\n              type: 'danger',\n            },\n          ];\n\n          return (\n            <ListView<AnnotationObject>\n              className=\"annotations-list-view\"\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              columns={columns}\n              count={annotationsCount}\n              data={annotations}\n              disableBulkSelect={toggleBulkSelect}\n              emptyState={emptyState}\n              fetchData={fetchData}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(AnnotationList);\n"]},"metadata":{},"sourceType":"module"}