{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { CHART_TYPE } from './componentTypes';\n\nexport default function getChartIdsFromLayout(layout) {\n  return Object.values(layout).reduce((chartIds, currentComponent) => {\n    if (\n    currentComponent &&\n    currentComponent.type === CHART_TYPE &&\n    currentComponent.meta &&\n    currentComponent.meta.chartId)\n    {\n      chartIds.push(currentComponent.meta.chartId);\n    }\n    return chartIds;\n  }, []);\n}","map":{"version":3,"names":["CHART_TYPE","getChartIdsFromLayout","layout","Object","values","reduce","chartIds","currentComponent","type","meta","chartId","push"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/util/getChartIdsFromLayout.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { CHART_TYPE } from './componentTypes';\n\nexport default function getChartIdsFromLayout(layout) {\n  return Object.values(layout).reduce((chartIds, currentComponent) => {\n    if (\n      currentComponent &&\n      currentComponent.type === CHART_TYPE &&\n      currentComponent.meta &&\n      currentComponent.meta.chartId\n    ) {\n      chartIds.push(currentComponent.meta.chartId);\n    }\n    return chartIds;\n  }, []);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,QAA2B,kBAA3B;;AAEA,eAAe,SAASC,qBAAT,CAA+BC,MAA/B,EAAuC;EACpD,OAAOC,MAAM,CAACC,MAAP,CAAcF,MAAd,EAAsBG,MAAtB,CAA6B,CAACC,QAAD,EAAWC,gBAAX,KAAgC;IAClE;IACEA,gBAAgB;IAChBA,gBAAgB,CAACC,IAAjB,KAA0BR,UAD1B;IAEAO,gBAAgB,CAACE,IAFjB;IAGAF,gBAAgB,CAACE,IAAjB,CAAsBC,OAJxB;IAKE;MACAJ,QAAQ,CAACK,IAAT,CAAcJ,gBAAgB,CAACE,IAAjB,CAAsBC,OAApC;IACD;IACD,OAAOJ,QAAP;EACD,CAVM,EAUJ,EAVI,CAAP;AAWD"},"metadata":{},"sourceType":"module"}