{"ast":null,"code":"import _merge from \"lodash/merge\";var _bootstrapData$common, _bootstrapData$user; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { setConfig as setHotLoaderConfig } from 'react-hot-loader';\nimport 'abortcontroller-polyfill/dist/abortcontroller-polyfill-only';\nimport moment from 'moment';\n// eslint-disable-next-line no-restricted-imports\nimport { configure, makeApi, supersetTheme } from '@superset-ui/core';\n\nimport setupClient from './setup/setupClient';\nimport setupColors from './setup/setupColors';\nimport setupFormatters from './setup/setupFormatters';\nimport setupDashboardComponents from './setup/setupDashboardComponents';\nimport { initFeatureFlags } from './featureFlags';\nimport getBootstrapData from './utils/getBootstrapData';\nif (process.env.WEBPACK_MODE === 'development') {\n  setHotLoaderConfig({ logLevel: 'debug', trackTailUpdates: false });\n}\n// eslint-disable-next-line import/no-mutable-exports\nconst bootstrapData = getBootstrapData();\n// Configure translation\nif (typeof window !== 'undefined') {\n  configure({ languagePack: bootstrapData.common.language_pack });\n  moment.locale(bootstrapData.common.locale);\n} else\n{\n  configure();\n}\n// Configure feature flags\ninitFeatureFlags(bootstrapData.common.feature_flags);\n// Setup SupersetClient\nsetupClient();\nsetupColors(bootstrapData.common.extra_categorical_color_schemes, bootstrapData.common.extra_sequential_color_schemes);\n// Setup number formatters\nsetupFormatters(bootstrapData.common.d3_format);\nsetupDashboardComponents();\nexport const theme = _merge(supersetTheme, (_bootstrapData$common = bootstrapData.common.theme_overrides) != null ? _bootstrapData$common : {});\nconst getMe = makeApi({\n  method: 'GET',\n  endpoint: '/api/v1/me/' });\n\n/**\n * When you re-open the window, we check if you are still logged in.\n * If your session expired or you signed out, we'll redirect to login.\n * If you aren't logged in in the first place (!isActive), then we shouldn't do this.\n */\nif ((_bootstrapData$user = bootstrapData.user) != null && _bootstrapData$user.isActive) {\n  document.addEventListener('visibilitychange', () => {\n    // we only care about the tab becoming visible, not vice versa\n    if (document.visibilityState !== 'visible')\n    return;\n    getMe().catch(() => {\n      // ignore error, SupersetClient will redirect to login on a 401\n    });\n  });\n}","map":{"version":3,"mappings":"kFAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,SAAS,IAAIC,kBAAtB,QAAgD,kBAAhD;AACA,OAAO,6DAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,aAA7B,QAAkD,mBAAlD;;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,wBAAP,MAAqC,kCAArC;AAEA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,YAAZ,KAA6B,aAAjC,EAAgD;EAC9Cb,kBAAkB,CAAC,EAAEc,QAAQ,EAAE,OAAZ,EAAqBC,gBAAgB,EAAE,KAAvC,EAAD,CAAlB;AACD;AAED;AACA,MAAMC,aAAa,GAAGN,gBAAgB,EAAtC;AAEA;AACA,IAAI,OAAOO,MAAP,KAAkB,WAAtB,EAAmC;EACjCf,SAAS,CAAC,EAAEgB,YAAY,EAAEF,aAAa,CAACG,MAAd,CAAqBC,aAArC,EAAD,CAAT;EACAnB,MAAM,CAACoB,MAAP,CAAcL,aAAa,CAACG,MAAd,CAAqBE,MAAnC;AACD,CAHD;AAGO;EACLnB,SAAS;AACV;AAED;AACAO,gBAAgB,CAACO,aAAa,CAACG,MAAd,CAAqBG,aAAtB,CAAhB;AAEA;AACAjB,WAAW;AAEXC,WAAW,CACTU,aAAa,CAACG,MAAd,CAAqBI,+BADZ,EAETP,aAAa,CAACG,MAAd,CAAqBK,8BAFZ,CAAX;AAKA;AACAjB,eAAe,CAACS,aAAa,CAACG,MAAd,CAAqBM,SAAtB,CAAf;AAEAjB,wBAAwB;AAExB,OAAO,MAAMkB,KAAK,GAAG,OACnBtB,aADmB,2BAEnBY,aAAa,CAACG,MAAd,CAAqBQ,eAFF,oCAEqB,EAFrB,CAAd;AAKP,MAAMC,KAAK,GAAGzB,OAAO,CAAa;EAChC0B,MAAM,EAAE,KADwB;EAEhCC,QAAQ,EAAE,aAFsB,EAAb,CAArB;;AAKA;;;;;AAKA,2BAAId,aAAa,CAACe,IAAlB,aAAI,oBAAoBC,QAAxB,EAAkC;EAChCC,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,MAAK;IACjD;IACA,IAAID,QAAQ,CAACE,eAAT,KAA6B,SAAjC;IAA4C;IAE5CP,KAAK,GAAGQ,KAAR,CAAc,MAAK;MACjB;IACD,CAFD;EAGD,CAPD;AAQD","names":["setConfig","setHotLoaderConfig","moment","configure","makeApi","supersetTheme","setupClient","setupColors","setupFormatters","setupDashboardComponents","initFeatureFlags","getBootstrapData","process","env","WEBPACK_MODE","logLevel","trackTailUpdates","bootstrapData","window","languagePack","common","language_pack","locale","feature_flags","extra_categorical_color_schemes","extra_sequential_color_schemes","d3_format","theme","theme_overrides","getMe","method","endpoint","user","isActive","document","addEventListener","visibilityState","catch"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/preamble.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { setConfig as setHotLoaderConfig } from 'react-hot-loader';\nimport 'abortcontroller-polyfill/dist/abortcontroller-polyfill-only';\nimport moment from 'moment';\n// eslint-disable-next-line no-restricted-imports\nimport { configure, makeApi, supersetTheme } from '@superset-ui/core';\nimport { merge } from 'lodash';\nimport setupClient from './setup/setupClient';\nimport setupColors from './setup/setupColors';\nimport setupFormatters from './setup/setupFormatters';\nimport setupDashboardComponents from './setup/setupDashboardComponents';\nimport { User } from './types/bootstrapTypes';\nimport { initFeatureFlags } from './featureFlags';\nimport getBootstrapData from './utils/getBootstrapData';\n\nif (process.env.WEBPACK_MODE === 'development') {\n  setHotLoaderConfig({ logLevel: 'debug', trackTailUpdates: false });\n}\n\n// eslint-disable-next-line import/no-mutable-exports\nconst bootstrapData = getBootstrapData();\n\n// Configure translation\nif (typeof window !== 'undefined') {\n  configure({ languagePack: bootstrapData.common.language_pack });\n  moment.locale(bootstrapData.common.locale);\n} else {\n  configure();\n}\n\n// Configure feature flags\ninitFeatureFlags(bootstrapData.common.feature_flags);\n\n// Setup SupersetClient\nsetupClient();\n\nsetupColors(\n  bootstrapData.common.extra_categorical_color_schemes,\n  bootstrapData.common.extra_sequential_color_schemes,\n);\n\n// Setup number formatters\nsetupFormatters(bootstrapData.common.d3_format);\n\nsetupDashboardComponents();\n\nexport const theme = merge(\n  supersetTheme,\n  bootstrapData.common.theme_overrides ?? {},\n);\n\nconst getMe = makeApi<void, User>({\n  method: 'GET',\n  endpoint: '/api/v1/me/',\n});\n\n/**\n * When you re-open the window, we check if you are still logged in.\n * If your session expired or you signed out, we'll redirect to login.\n * If you aren't logged in in the first place (!isActive), then we shouldn't do this.\n */\nif (bootstrapData.user?.isActive) {\n  document.addEventListener('visibilitychange', () => {\n    // we only care about the tab becoming visible, not vice versa\n    if (document.visibilityState !== 'visible') return;\n\n    getMe().catch(() => {\n      // ignore error, SupersetClient will redirect to login on a 401\n    });\n  });\n}\n"]},"metadata":{},"sourceType":"module"}