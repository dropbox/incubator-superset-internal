{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport moment from 'moment';\nimport Card from 'src/components/Card';\nimport ProgressBar from 'src/components/ProgressBar';\nimport Label from 'src/components/Label';\nimport { t, useTheme } from '@superset-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { queryEditorSetAndSaveSql, cloneQueryToNewTab, fetchQueryResults, clearQueryResults, removeQuery } from 'src/SqlLab/actions/sqlLab';\nimport TableView from 'src/components/TableView';\nimport Button from 'src/components/Button';\nimport { fDuration } from 'src/utils/dates';\nimport Icons from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport ResultSet from '../ResultSet';\nimport HighlightedSql from '../HighlightedSql';\nimport { StaticPosition, verticalAlign, StyledTooltip } from './styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst openQuery = (id) => {\n  const url = `/superset/sqllab?queryId=${id}`;\n  window.open(url);\n};\nconst QueryTable = (_ref) => {let { columns = ['started', 'duration', 'rows'], queries = [], onUserClicked = () => undefined, onDbClicked = () => undefined, displayLimit, latestQueryId } = _ref;\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const QUERY_HISTORY_TABLE_HEADERS_LOCALIZED = {\n    state: t('State'),\n    started: t('Started'),\n    duration: t('Duration'),\n    progress: t('Progress'),\n    rows: t('Rows'),\n    sql: t('SQL'),\n    results: t('Results'),\n    actions: t('Actions') };\n\n  const setHeaders = (column) => {\n    if (column === 'sql') {\n      return column.toUpperCase();\n    }\n    return column.charAt(0).toUpperCase().concat(column.slice(1));\n  };\n  const columnsOfTable = useMemo(() => columns.map((column) => ({\n    accessor: column,\n    Header: QUERY_HISTORY_TABLE_HEADERS_LOCALIZED[column] || setHeaders(column),\n    disableSortBy: true })),\n  [columns]);\n  const user = useSelector((state) => state.sqlLab.user);\n  const data = useMemo(() => {\n    const restoreSql = (query) => {\n      dispatch(queryEditorSetAndSaveSql({ id: query.sqlEditorId }, query.sql));\n    };\n    const openQueryInNewTab = (query) => {\n      dispatch(cloneQueryToNewTab(query, true));\n    };\n    const openAsyncResults = (query, displayLimit) => {\n      dispatch(fetchQueryResults(query, displayLimit));\n    };\n    const statusAttributes = {\n      success: {\n        config: {\n          icon: ___EmotionJSX(Icons.Check, { iconColor: theme.colors.success.base }),\n          label: t('Success') } },\n\n\n      failed: {\n        config: {\n          icon: ___EmotionJSX(Icons.XSmall, { iconColor: theme.colors.error.base }),\n          label: t('Failed') } },\n\n\n      stopped: {\n        config: {\n          icon: ___EmotionJSX(Icons.XSmall, { iconColor: theme.colors.error.base }),\n          label: t('Failed') } },\n\n\n      running: {\n        config: {\n          icon: ___EmotionJSX(Icons.Running, { iconColor: theme.colors.primary.base }),\n          label: t('Running') } },\n\n\n      fetching: {\n        config: {\n          icon: ___EmotionJSX(Icons.Queued, { iconColor: theme.colors.primary.base }),\n          label: t('Fetching') } },\n\n\n      timed_out: {\n        config: {\n          icon: ___EmotionJSX(Icons.Offline, { iconColor: theme.colors.grayscale.light1 }),\n          label: t('Offline') } },\n\n\n      scheduled: {\n        config: {\n          icon: ___EmotionJSX(Icons.Queued, { iconColor: theme.colors.grayscale.base }),\n          label: t('Scheduled') } },\n\n\n      pending: {\n        config: {\n          icon: ___EmotionJSX(Icons.Queued, { iconColor: theme.colors.grayscale.base }),\n          label: t('Scheduled') } },\n\n\n      error: {\n        config: {\n          icon: ___EmotionJSX(Icons.Error, { iconColor: theme.colors.error.base }),\n          label: t('Unknown Status') } } };\n\n\n\n    return queries.\n    map((query) => {\n      const { state, sql, progress, ...rest } = query;\n      const q = rest;\n      const status = statusAttributes[state] || statusAttributes.error;\n      if (q.endDttm) {\n        q.duration = fDuration(q.startDttm, q.endDttm);\n      }\n      const time = moment(q.startDttm).format().split('T');\n      q.time = ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(\"span\", null,\n      time[0], \" \", ___EmotionJSX(\"br\", null), \" \", time[1]));\n\n\n      q.user = ___EmotionJSX(Button, { buttonSize: \"small\", buttonStyle: \"link\", onClick: () => onUserClicked(q.userId) },\n      q.user);\n\n      q.db = ___EmotionJSX(Button, { buttonSize: \"small\", buttonStyle: \"link\", onClick: () => onDbClicked(q.dbId) },\n      q.db);\n\n      q.started = moment(q.startDttm).format('HH:mm:ss');\n      q.querylink = ___EmotionJSX(Button, { buttonSize: \"small\", buttonStyle: \"link\", onClick: () => openQuery(q.queryId) },\n      ___EmotionJSX(\"i\", { className: \"fa fa-external-link m-r-3\" }),\n      t('Edit'));\n\n      q.sql = ___EmotionJSX(Card, { css: [StaticPosition, process.env.NODE_ENV === \"production\" ? \"\" : \";label:q-sql;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy96aGFvcnVpL3NyYy9pbmN1YmF0b3Itc3VwZXJzZXQtaW50ZXJuYWwvc3VwZXJzZXQtZnJvbnRlbmQvc3JjL1NxbExhYi9jb21wb25lbnRzL1F1ZXJ5VGFibGUvaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJKMkIiLCJmaWxlIjoiL1VzZXJzL3poYW9ydWkvc3JjL2luY3ViYXRvci1zdXBlcnNldC1pbnRlcm5hbC9zdXBlcnNldC1mcm9udGVuZC9zcmMvU3FsTGFiL2NvbXBvbmVudHMvUXVlcnlUYWJsZS9pbmRleC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JztcbmltcG9ydCBDYXJkIGZyb20gJ3NyYy9jb21wb25lbnRzL0NhcmQnO1xuaW1wb3J0IFByb2dyZXNzQmFyIGZyb20gJ3NyYy9jb21wb25lbnRzL1Byb2dyZXNzQmFyJztcbmltcG9ydCBMYWJlbCBmcm9tICdzcmMvY29tcG9uZW50cy9MYWJlbCc7XG5pbXBvcnQgeyB0LCB1c2VUaGVtZSB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcbmltcG9ydCB7IHVzZURpc3BhdGNoLCB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCB7IHF1ZXJ5RWRpdG9yU2V0QW5kU2F2ZVNxbCwgY2xvbmVRdWVyeVRvTmV3VGFiLCBmZXRjaFF1ZXJ5UmVzdWx0cywgY2xlYXJRdWVyeVJlc3VsdHMsIHJlbW92ZVF1ZXJ5LCB9IGZyb20gJ3NyYy9TcWxMYWIvYWN0aW9ucy9zcWxMYWInO1xuaW1wb3J0IFRhYmxlVmlldyBmcm9tICdzcmMvY29tcG9uZW50cy9UYWJsZVZpZXcnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICdzcmMvY29tcG9uZW50cy9CdXR0b24nO1xuaW1wb3J0IHsgZkR1cmF0aW9uIH0gZnJvbSAnc3JjL3V0aWxzL2RhdGVzJztcbmltcG9ydCBJY29ucyBmcm9tICdzcmMvY29tcG9uZW50cy9JY29ucyc7XG5pbXBvcnQgeyBUb29sdGlwIH0gZnJvbSAnc3JjL2NvbXBvbmVudHMvVG9vbHRpcCc7XG5pbXBvcnQgTW9kYWxUcmlnZ2VyIGZyb20gJ3NyYy9jb21wb25lbnRzL01vZGFsVHJpZ2dlcic7XG5pbXBvcnQgUmVzdWx0U2V0IGZyb20gJy4uL1Jlc3VsdFNldCc7XG5pbXBvcnQgSGlnaGxpZ2h0ZWRTcWwgZnJvbSAnLi4vSGlnaGxpZ2h0ZWRTcWwnO1xuaW1wb3J0IHsgU3RhdGljUG9zaXRpb24sIHZlcnRpY2FsQWxpZ24sIFN0eWxlZFRvb2x0aXAgfSBmcm9tICcuL3N0eWxlcyc7XG5jb25zdCBvcGVuUXVlcnkgPSAoaWQpID0+IHtcbiAgICBjb25zdCB1cmwgPSBgL3N1cGVyc2V0L3NxbGxhYj9xdWVyeUlkPSR7aWR9YDtcbiAgICB3aW5kb3cub3Blbih1cmwpO1xufTtcbmNvbnN0IFF1ZXJ5VGFibGUgPSAoeyBjb2x1bW5zID0gWydzdGFydGVkJywgJ2R1cmF0aW9uJywgJ3Jvd3MnXSwgcXVlcmllcyA9IFtdLCBvblVzZXJDbGlja2VkID0gKCkgPT4gdW5kZWZpbmVkLCBvbkRiQ2xpY2tlZCA9ICgpID0+IHVuZGVmaW5lZCwgZGlzcGxheUxpbWl0LCBsYXRlc3RRdWVyeUlkLCB9KSA9PiB7XG4gICAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICAgIGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcbiAgICBjb25zdCBRVUVSWV9ISVNUT1JZX1RBQkxFX0hFQURFUlNfTE9DQUxJWkVEID0ge1xuICAgICAgICBzdGF0ZTogdCgnU3RhdGUnKSxcbiAgICAgICAgc3RhcnRlZDogdCgnU3RhcnRlZCcpLFxuICAgICAgICBkdXJhdGlvbjogdCgnRHVyYXRpb24nKSxcbiAgICAgICAgcHJvZ3Jlc3M6IHQoJ1Byb2dyZXNzJyksXG4gICAgICAgIHJvd3M6IHQoJ1Jvd3MnKSxcbiAgICAgICAgc3FsOiB0KCdTUUwnKSxcbiAgICAgICAgcmVzdWx0czogdCgnUmVzdWx0cycpLFxuICAgICAgICBhY3Rpb25zOiB0KCdBY3Rpb25zJyksXG4gICAgfTtcbiAgICBjb25zdCBzZXRIZWFkZXJzID0gKGNvbHVtbikgPT4ge1xuICAgICAgICBpZiAoY29sdW1uID09PSAnc3FsJykge1xuICAgICAgICAgICAgcmV0dXJuIGNvbHVtbi50b1VwcGVyQ2FzZSgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjb2x1bW4uY2hhckF0KDApLnRvVXBwZXJDYXNlKCkuY29uY2F0KGNvbHVtbi5zbGljZSgxKSk7XG4gICAgfTtcbiAgICBjb25zdCBjb2x1bW5zT2ZUYWJsZSA9IHVzZU1lbW8oKCkgPT4gY29sdW1ucy5tYXAoY29sdW1uID0+ICh7XG4gICAgICAgIGFjY2Vzc29yOiBjb2x1bW4sXG4gICAgICAgIEhlYWRlcjogUVVFUllfSElTVE9SWV9UQUJMRV9IRUFERVJTX0xPQ0FMSVpFRFtjb2x1bW5dIHx8IHNldEhlYWRlcnMoY29sdW1uKSxcbiAgICAgICAgZGlzYWJsZVNvcnRCeTogdHJ1ZSxcbiAgICB9KSksIFtjb2x1bW5zXSk7XG4gICAgY29uc3QgdXNlciA9IHVzZVNlbGVjdG9yKHN0YXRlID0+IHN0YXRlLnNxbExhYi51c2VyKTtcbiAgICBjb25zdCBkYXRhID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGNvbnN0IHJlc3RvcmVTcWwgPSAocXVlcnkpID0+IHtcbiAgICAgICAgICAgIGRpc3BhdGNoKHF1ZXJ5RWRpdG9yU2V0QW5kU2F2ZVNxbCh7IGlkOiBxdWVyeS5zcWxFZGl0b3JJZCB9LCBxdWVyeS5zcWwpKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3Qgb3BlblF1ZXJ5SW5OZXdUYWIgPSAocXVlcnkpID0+IHtcbiAgICAgICAgICAgIGRpc3BhdGNoKGNsb25lUXVlcnlUb05ld1RhYihxdWVyeSwgdHJ1ZSkpO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBvcGVuQXN5bmNSZXN1bHRzID0gKHF1ZXJ5LCBkaXNwbGF5TGltaXQpID0+IHtcbiAgICAgICAgICAgIGRpc3BhdGNoKGZldGNoUXVlcnlSZXN1bHRzKHF1ZXJ5LCBkaXNwbGF5TGltaXQpKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3Qgc3RhdHVzQXR0cmlidXRlcyA9IHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IHtcbiAgICAgICAgICAgICAgICBjb25maWc6IHtcbiAgICAgICAgICAgICAgICAgICAgaWNvbjogPEljb25zLkNoZWNrIGljb25Db2xvcj17dGhlbWUuY29sb3JzLnN1Y2Nlc3MuYmFzZX0vPixcbiAgICAgICAgICAgICAgICAgICAgbGFiZWw6IHQoJ1N1Y2Nlc3MnKSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWxlZDoge1xuICAgICAgICAgICAgICAgIGNvbmZpZzoge1xuICAgICAgICAgICAgICAgICAgICBpY29uOiA8SWNvbnMuWFNtYWxsIGljb25Db2xvcj17dGhlbWUuY29sb3JzLmVycm9yLmJhc2V9Lz4sXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiB0KCdGYWlsZWQnKSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN0b3BwZWQ6IHtcbiAgICAgICAgICAgICAgICBjb25maWc6IHtcbiAgICAgICAgICAgICAgICAgICAgaWNvbjogPEljb25zLlhTbWFsbCBpY29uQ29sb3I9e3RoZW1lLmNvbG9ycy5lcnJvci5iYXNlfS8+LFxuICAgICAgICAgICAgICAgICAgICBsYWJlbDogdCgnRmFpbGVkJyksXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBydW5uaW5nOiB7XG4gICAgICAgICAgICAgICAgY29uZmlnOiB7XG4gICAgICAgICAgICAgICAgICAgIGljb246IDxJY29ucy5SdW5uaW5nIGljb25Db2xvcj17dGhlbWUuY29sb3JzLnByaW1hcnkuYmFzZX0vPixcbiAgICAgICAgICAgICAgICAgICAgbGFiZWw6IHQoJ1J1bm5pbmcnKSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZldGNoaW5nOiB7XG4gICAgICAgICAgICAgICAgY29uZmlnOiB7XG4gICAgICAgICAgICAgICAgICAgIGljb246IDxJY29ucy5RdWV1ZWQgaWNvbkNvbG9yPXt0aGVtZS5jb2xvcnMucHJpbWFyeS5iYXNlfS8+LFxuICAgICAgICAgICAgICAgICAgICBsYWJlbDogdCgnRmV0Y2hpbmcnKSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRpbWVkX291dDoge1xuICAgICAgICAgICAgICAgIGNvbmZpZzoge1xuICAgICAgICAgICAgICAgICAgICBpY29uOiA8SWNvbnMuT2ZmbGluZSBpY29uQ29sb3I9e3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUubGlnaHQxfS8+LFxuICAgICAgICAgICAgICAgICAgICBsYWJlbDogdCgnT2ZmbGluZScpLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2NoZWR1bGVkOiB7XG4gICAgICAgICAgICAgICAgY29uZmlnOiB7XG4gICAgICAgICAgICAgICAgICAgIGljb246IDxJY29ucy5RdWV1ZWQgaWNvbkNvbG9yPXt0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmJhc2V9Lz4sXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiB0KCdTY2hlZHVsZWQnKSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHBlbmRpbmc6IHtcbiAgICAgICAgICAgICAgICBjb25maWc6IHtcbiAgICAgICAgICAgICAgICAgICAgaWNvbjogPEljb25zLlF1ZXVlZCBpY29uQ29sb3I9e3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUuYmFzZX0vPixcbiAgICAgICAgICAgICAgICAgICAgbGFiZWw6IHQoJ1NjaGVkdWxlZCcpLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3I6IHtcbiAgICAgICAgICAgICAgICBjb25maWc6IHtcbiAgICAgICAgICAgICAgICAgICAgaWNvbjogPEljb25zLkVycm9yIGljb25Db2xvcj17dGhlbWUuY29sb3JzLmVycm9yLmJhc2V9Lz4sXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiB0KCdVbmtub3duIFN0YXR1cycpLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gcXVlcmllc1xuICAgICAgICAgICAgLm1hcChxdWVyeSA9PiB7XG4gICAgICAgICAgICBjb25zdCB7IHN0YXRlLCBzcWwsIHByb2dyZXNzLCAuLi5yZXN0IH0gPSBxdWVyeTtcbiAgICAgICAgICAgIGNvbnN0IHEgPSByZXN0O1xuICAgICAgICAgICAgY29uc3Qgc3RhdHVzID0gc3RhdHVzQXR0cmlidXRlc1tzdGF0ZV0gfHwgc3RhdHVzQXR0cmlidXRlcy5lcnJvcjtcbiAgICAgICAgICAgIGlmIChxLmVuZER0dG0pIHtcbiAgICAgICAgICAgICAgICBxLmR1cmF0aW9uID0gZkR1cmF0aW9uKHEuc3RhcnREdHRtLCBxLmVuZER0dG0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgdGltZSA9IG1vbWVudChxLnN0YXJ0RHR0bSkuZm9ybWF0KCkuc3BsaXQoJ1QnKTtcbiAgICAgICAgICAgIHEudGltZSA9ICg8ZGl2PlxuICAgICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICAgIHt0aW1lWzBdfSA8YnIgLz4ge3RpbWVbMV19XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgPC9kaXY+KTtcbiAgICAgICAgICAgIHEudXNlciA9ICg8QnV0dG9uIGJ1dHRvblNpemU9XCJzbWFsbFwiIGJ1dHRvblN0eWxlPVwibGlua1wiIG9uQ2xpY2s9eygpID0+IG9uVXNlckNsaWNrZWQocS51c2VySWQpfT5cbiAgICAgICAgICAgIHtxLnVzZXJ9XG4gICAgICAgICAgPC9CdXR0b24+KTtcbiAgICAgICAgICAgIHEuZGIgPSAoPEJ1dHRvbiBidXR0b25TaXplPVwic21hbGxcIiBidXR0b25TdHlsZT1cImxpbmtcIiBvbkNsaWNrPXsoKSA9PiBvbkRiQ2xpY2tlZChxLmRiSWQpfT5cbiAgICAgICAgICAgIHtxLmRifVxuICAgICAgICAgIDwvQnV0dG9uPik7XG4gICAgICAgICAgICBxLnN0YXJ0ZWQgPSBtb21lbnQocS5zdGFydER0dG0pLmZvcm1hdCgnSEg6bW06c3MnKTtcbiAgICAgICAgICAgIHEucXVlcnlsaW5rID0gKDxCdXR0b24gYnV0dG9uU2l6ZT1cInNtYWxsXCIgYnV0dG9uU3R5bGU9XCJsaW5rXCIgb25DbGljaz17KCkgPT4gb3BlblF1ZXJ5KHEucXVlcnlJZCl9PlxuICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtZXh0ZXJuYWwtbGluayBtLXItM1wiLz5cbiAgICAgICAgICAgIHt0KCdFZGl0Jyl9XG4gICAgICAgICAgPC9CdXR0b24+KTtcbiAgICAgICAgICAgIHEuc3FsID0gKDxDYXJkIGNzcz17W1N0YXRpY1Bvc2l0aW9uXX0+XG4gICAgICAgICAgICA8SGlnaGxpZ2h0ZWRTcWwgc3FsPXtzcWx9IHJhd1NxbD17cS5leGVjdXRlZFNxbH0gc2hyaW5rIG1heFdpZHRoPXs2MH0vPlxuICAgICAgICAgIDwvQ2FyZD4pO1xuICAgICAgICAgICAgaWYgKHEucmVzdWx0c0tleSkge1xuICAgICAgICAgICAgICAgIHEucmVzdWx0cyA9ICg8TW9kYWxUcmlnZ2VyIGNsYXNzTmFtZT1cIlJlc3VsdHNNb2RhbFwiIHRyaWdnZXJOb2RlPXs8TGFiZWwgdHlwZT1cImluZm9cIiBjbGFzc05hbWU9XCJwb2ludGVyXCI+XG4gICAgICAgICAgICAgICAgICB7dCgnVmlldycpfVxuICAgICAgICAgICAgICAgIDwvTGFiZWw+fSBtb2RhbFRpdGxlPXt0KCdEYXRhIHByZXZpZXcnKX0gYmVmb3JlT3Blbj17KCkgPT4gb3BlbkFzeW5jUmVzdWx0cyhxdWVyeSwgZGlzcGxheUxpbWl0KX0gb25FeGl0PXsoKSA9PiBkaXNwYXRjaChjbGVhclF1ZXJ5UmVzdWx0cyhxdWVyeSkpfSBtb2RhbEJvZHk9ezxSZXN1bHRTZXQgc2hvd1NxbCB1c2VyPXt1c2VyfSBxdWVyeT17cXVlcnl9IGhlaWdodD17NDAwfSBkaXNwbGF5TGltaXQ9e2Rpc3BsYXlMaW1pdH0gZGVmYXVsdFF1ZXJ5TGltaXQ9ezEwMDB9Lz59IHJlc3BvbnNpdmUvPik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBxLnJlc3VsdHMgPSA8PjwvPjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHEucHJvZ3Jlc3MgPVxuICAgICAgICAgICAgICAgIHN0YXRlID09PSAnc3VjY2VzcycgPyAoPFByb2dyZXNzQmFyIHBlcmNlbnQ9e3BhcnNlSW50KHByb2dyZXNzLnRvRml4ZWQoMCksIDEwKX0gc3RyaXBlZCBzaG93SW5mbz17ZmFsc2V9Lz4pIDogKDxQcm9ncmVzc0JhciBwZXJjZW50PXtwYXJzZUludChwcm9ncmVzcy50b0ZpeGVkKDApLCAxMCl9IHN0cmlwZWQvPik7XG4gICAgICAgICAgICBxLnN0YXRlID0gKDxUb29sdGlwIHRpdGxlPXtzdGF0dXMuY29uZmlnLmxhYmVsfSBwbGFjZW1lbnQ9XCJib3R0b21cIj5cbiAgICAgICAgICAgIDxzcGFuPntzdGF0dXMuY29uZmlnLmljb259PC9zcGFuPlxuICAgICAgICAgIDwvVG9vbHRpcD4pO1xuICAgICAgICAgICAgcS5hY3Rpb25zID0gKDxkaXY+XG4gICAgICAgICAgICA8U3R5bGVkVG9vbHRpcCBvbkNsaWNrPXsoKSA9PiByZXN0b3JlU3FsKHF1ZXJ5KX0gdG9vbHRpcD17dCgnT3ZlcndyaXRlIHRleHQgaW4gdGhlIGVkaXRvciB3aXRoIGEgcXVlcnkgb24gdGhpcyB0YWJsZScpfSBwbGFjZW1lbnQ9XCJ0b3BcIj5cbiAgICAgICAgICAgICAgPEljb25zLkVkaXQgaWNvblNpemU9XCJ4bFwiLz5cbiAgICAgICAgICAgIDwvU3R5bGVkVG9vbHRpcD5cbiAgICAgICAgICAgIDxTdHlsZWRUb29sdGlwIG9uQ2xpY2s9eygpID0+IG9wZW5RdWVyeUluTmV3VGFiKHF1ZXJ5KX0gdG9vbHRpcD17dCgnUnVuIHF1ZXJ5IGluIGEgbmV3IHRhYicpfSBwbGFjZW1lbnQ9XCJ0b3BcIj5cbiAgICAgICAgICAgICAgPEljb25zLlBsdXNDaXJjbGVPdXRsaW5lZCBpY29uU2l6ZT1cInhsXCIgY3NzPXt2ZXJ0aWNhbEFsaWdufS8+XG4gICAgICAgICAgICA8L1N0eWxlZFRvb2x0aXA+XG4gICAgICAgICAgICB7cS5pZCAhPT0gbGF0ZXN0UXVlcnlJZCAmJiAoPFN0eWxlZFRvb2x0aXAgdG9vbHRpcD17dCgnUmVtb3ZlIHF1ZXJ5IGZyb20gbG9nJyl9IG9uQ2xpY2s9eygpID0+IGRpc3BhdGNoKHJlbW92ZVF1ZXJ5KHF1ZXJ5KSl9PlxuICAgICAgICAgICAgICAgIDxJY29ucy5UcmFzaCBpY29uU2l6ZT1cInhsXCIvPlxuICAgICAgICAgICAgICA8L1N0eWxlZFRvb2x0aXA+KX1cbiAgICAgICAgICA8L2Rpdj4pO1xuICAgICAgICAgICAgcmV0dXJuIHE7XG4gICAgICAgIH0pXG4gICAgICAgICAgICAucmV2ZXJzZSgpO1xuICAgIH0sIFtxdWVyaWVzLCBvblVzZXJDbGlja2VkLCBvbkRiQ2xpY2tlZCwgdXNlciwgZGlzcGxheUxpbWl0XSk7XG4gICAgcmV0dXJuICg8ZGl2IGNsYXNzTmFtZT1cIlF1ZXJ5VGFibGVcIj5cbiAgICAgIDxUYWJsZVZpZXcgY29sdW1ucz17Y29sdW1uc09mVGFibGV9IGRhdGE9e2RhdGF9IGNsYXNzTmFtZT1cInRhYmxlLWNvbmRlbnNlZFwiIHBhZ2VTaXplPXs1MH0vPlxuICAgIDwvZGl2Pik7XG59O1xuZXhwb3J0IGRlZmF1bHQgUXVlcnlUYWJsZTtcbiJdfQ== */\"] },\n      ___EmotionJSX(HighlightedSql, { sql: sql, rawSql: q.executedSql, shrink: true, maxWidth: 60 }));\n\n      if (q.resultsKey) {\n        q.results = ___EmotionJSX(ModalTrigger, { className: \"ResultsModal\", triggerNode: ___EmotionJSX(Label, { type: \"info\", className: \"pointer\" },\n          t('View')),\n          modalTitle: t('Data preview'), beforeOpen: () => openAsyncResults(query, displayLimit), onExit: () => dispatch(clearQueryResults(query)), modalBody: ___EmotionJSX(ResultSet, { showSql: true, user: user, query: query, height: 400, displayLimit: displayLimit, defaultQueryLimit: 1000 }), responsive: true });\n      } else\n      {\n        q.results = ___EmotionJSX(React.Fragment, null);\n      }\n      q.progress =\n      state === 'success' ? ___EmotionJSX(ProgressBar, { percent: parseInt(progress.toFixed(0), 10), striped: true, showInfo: false }) : ___EmotionJSX(ProgressBar, { percent: parseInt(progress.toFixed(0), 10), striped: true });\n      q.state = ___EmotionJSX(Tooltip, { title: status.config.label, placement: \"bottom\" },\n      ___EmotionJSX(\"span\", null, status.config.icon));\n\n      q.actions = ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(StyledTooltip, { onClick: () => restoreSql(query), tooltip: t('Overwrite text in the editor with a query on this table'), placement: \"top\" },\n      ___EmotionJSX(Icons.Edit, { iconSize: \"xl\" })),\n\n      ___EmotionJSX(StyledTooltip, { onClick: () => openQueryInNewTab(query), tooltip: t('Run query in a new tab'), placement: \"top\" },\n      ___EmotionJSX(Icons.PlusCircleOutlined, { iconSize: \"xl\", css: verticalAlign })),\n\n      q.id !== latestQueryId && ___EmotionJSX(StyledTooltip, { tooltip: t('Remove query from log'), onClick: () => dispatch(removeQuery(query)) },\n      ___EmotionJSX(Icons.Trash, { iconSize: \"xl\" })));\n\n\n      return q;\n    }).\n    reverse();\n  }, [queries, onUserClicked, onDbClicked, user, displayLimit]);\n  return ___EmotionJSX(\"div\", { className: \"QueryTable\" },\n  ___EmotionJSX(TableView, { columns: columnsOfTable, data: data, className: \"table-condensed\", pageSize: 50 }));\n\n};\nexport default QueryTable;","map":{"version":3,"mappings":"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","names":["React","useMemo","moment","Card","ProgressBar","Label","t","useTheme","useDispatch","useSelector","queryEditorSetAndSaveSql","cloneQueryToNewTab","fetchQueryResults","clearQueryResults","removeQuery","TableView","Button","fDuration","Icons","Tooltip","ModalTrigger","ResultSet","HighlightedSql","StaticPosition","verticalAlign","StyledTooltip","openQuery","id","url","window","open","QueryTable","columns","queries","onUserClicked","undefined","onDbClicked","displayLimit","latestQueryId","theme","dispatch","QUERY_HISTORY_TABLE_HEADERS_LOCALIZED","state","started","duration","progress","rows","sql","results","actions","setHeaders","column","toUpperCase","charAt","concat","slice","columnsOfTable","map","accessor","Header","disableSortBy","user","sqlLab","data","restoreSql","query","sqlEditorId","openQueryInNewTab","openAsyncResults","statusAttributes","success","config","icon","colors","base","label","failed","error","stopped","running","primary","fetching","timed_out","grayscale","light1","scheduled","pending","rest","q","status","endDttm","startDttm","time","format","split","userId","db","dbId","querylink","queryId","executedSql","resultsKey","parseInt","toFixed","reverse"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/SqlLab/components/QueryTable/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport moment from 'moment';\nimport Card from 'src/components/Card';\nimport ProgressBar from 'src/components/ProgressBar';\nimport Label from 'src/components/Label';\nimport { t, useTheme, QueryResponse } from '@superset-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  queryEditorSetAndSaveSql,\n  cloneQueryToNewTab,\n  fetchQueryResults,\n  clearQueryResults,\n  removeQuery,\n} from 'src/SqlLab/actions/sqlLab';\nimport TableView from 'src/components/TableView';\nimport Button from 'src/components/Button';\nimport { fDuration } from 'src/utils/dates';\nimport Icons from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { SqlLabRootState } from 'src/SqlLab/types';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport { UserWithPermissionsAndRoles as User } from 'src/types/bootstrapTypes';\nimport ResultSet from '../ResultSet';\nimport HighlightedSql from '../HighlightedSql';\nimport { StaticPosition, verticalAlign, StyledTooltip } from './styles';\n\ninterface QueryTableQuery\n  extends Omit<QueryResponse, 'state' | 'sql' | 'progress' | 'results'> {\n  state?: Record<string, any>;\n  sql?: Record<string, any>;\n  progress?: Record<string, any>;\n  results?: Record<string, any>;\n}\n\ninterface QueryTableProps {\n  columns?: string[];\n  queries?: QueryResponse[];\n  onUserClicked?: Function;\n  onDbClicked?: Function;\n  displayLimit: number;\n  latestQueryId?: string | undefined;\n}\n\nconst openQuery = (id: number) => {\n  const url = `/superset/sqllab?queryId=${id}`;\n  window.open(url);\n};\n\nconst QueryTable = ({\n  columns = ['started', 'duration', 'rows'],\n  queries = [],\n  onUserClicked = () => undefined,\n  onDbClicked = () => undefined,\n  displayLimit,\n  latestQueryId,\n}: QueryTableProps) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const QUERY_HISTORY_TABLE_HEADERS_LOCALIZED = {\n    state: t('State'),\n    started: t('Started'),\n    duration: t('Duration'),\n    progress: t('Progress'),\n    rows: t('Rows'),\n    sql: t('SQL'),\n    results: t('Results'),\n    actions: t('Actions'),\n  };\n\n  const setHeaders = (column: string) => {\n    if (column === 'sql') {\n      return column.toUpperCase();\n    }\n    return column.charAt(0).toUpperCase().concat(column.slice(1));\n  };\n\n  const columnsOfTable = useMemo(\n    () =>\n      columns.map(column => ({\n        accessor: column,\n        Header:\n          QUERY_HISTORY_TABLE_HEADERS_LOCALIZED[column] || setHeaders(column),\n        disableSortBy: true,\n      })),\n    [columns],\n  );\n\n  const user = useSelector<SqlLabRootState, User>(state => state.sqlLab.user);\n\n  const data = useMemo(() => {\n    const restoreSql = (query: QueryResponse) => {\n      dispatch(queryEditorSetAndSaveSql({ id: query.sqlEditorId }, query.sql));\n    };\n\n    const openQueryInNewTab = (query: QueryResponse) => {\n      dispatch(cloneQueryToNewTab(query, true));\n    };\n\n    const openAsyncResults = (query: QueryResponse, displayLimit: number) => {\n      dispatch(fetchQueryResults(query, displayLimit));\n    };\n\n    const statusAttributes = {\n      success: {\n        config: {\n          icon: <Icons.Check iconColor={theme.colors.success.base} />,\n          label: t('Success'),\n        },\n      },\n      failed: {\n        config: {\n          icon: <Icons.XSmall iconColor={theme.colors.error.base} />,\n          label: t('Failed'),\n        },\n      },\n      stopped: {\n        config: {\n          icon: <Icons.XSmall iconColor={theme.colors.error.base} />,\n          label: t('Failed'),\n        },\n      },\n      running: {\n        config: {\n          icon: <Icons.Running iconColor={theme.colors.primary.base} />,\n          label: t('Running'),\n        },\n      },\n      fetching: {\n        config: {\n          icon: <Icons.Queued iconColor={theme.colors.primary.base} />,\n          label: t('Fetching'),\n        },\n      },\n      timed_out: {\n        config: {\n          icon: <Icons.Offline iconColor={theme.colors.grayscale.light1} />,\n          label: t('Offline'),\n        },\n      },\n      scheduled: {\n        config: {\n          icon: <Icons.Queued iconColor={theme.colors.grayscale.base} />,\n          label: t('Scheduled'),\n        },\n      },\n      pending: {\n        config: {\n          icon: <Icons.Queued iconColor={theme.colors.grayscale.base} />,\n          label: t('Scheduled'),\n        },\n      },\n      error: {\n        config: {\n          icon: <Icons.Error iconColor={theme.colors.error.base} />,\n          label: t('Unknown Status'),\n        },\n      },\n    };\n\n    return queries\n      .map(query => {\n        const { state, sql, progress, ...rest } = query;\n        const q = rest as QueryTableQuery;\n\n        const status = statusAttributes[state] || statusAttributes.error;\n\n        if (q.endDttm) {\n          q.duration = fDuration(q.startDttm, q.endDttm);\n        }\n        const time = moment(q.startDttm).format().split('T');\n        q.time = (\n          <div>\n            <span>\n              {time[0]} <br /> {time[1]}\n            </span>\n          </div>\n        );\n        q.user = (\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"link\"\n            onClick={() => onUserClicked(q.userId)}\n          >\n            {q.user}\n          </Button>\n        );\n        q.db = (\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"link\"\n            onClick={() => onDbClicked(q.dbId)}\n          >\n            {q.db}\n          </Button>\n        );\n        q.started = moment(q.startDttm).format('HH:mm:ss');\n        q.querylink = (\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"link\"\n            onClick={() => openQuery(q.queryId)}\n          >\n            <i className=\"fa fa-external-link m-r-3\" />\n            {t('Edit')}\n          </Button>\n        );\n        q.sql = (\n          <Card css={[StaticPosition]}>\n            <HighlightedSql\n              sql={sql}\n              rawSql={q.executedSql}\n              shrink\n              maxWidth={60}\n            />\n          </Card>\n        );\n        if (q.resultsKey) {\n          q.results = (\n            <ModalTrigger\n              className=\"ResultsModal\"\n              triggerNode={\n                <Label type=\"info\" className=\"pointer\">\n                  {t('View')}\n                </Label>\n              }\n              modalTitle={t('Data preview')}\n              beforeOpen={() => openAsyncResults(query, displayLimit)}\n              onExit={() => dispatch(clearQueryResults(query))}\n              modalBody={\n                <ResultSet\n                  showSql\n                  user={user}\n                  query={query}\n                  height={400}\n                  displayLimit={displayLimit}\n                  defaultQueryLimit={1000}\n                />\n              }\n              responsive\n            />\n          );\n        } else {\n          q.results = <></>;\n        }\n\n        q.progress =\n          state === 'success' ? (\n            <ProgressBar\n              percent={parseInt(progress.toFixed(0), 10)}\n              striped\n              showInfo={false}\n            />\n          ) : (\n            <ProgressBar percent={parseInt(progress.toFixed(0), 10)} striped />\n          );\n        q.state = (\n          <Tooltip title={status.config.label} placement=\"bottom\">\n            <span>{status.config.icon}</span>\n          </Tooltip>\n        );\n        q.actions = (\n          <div>\n            <StyledTooltip\n              onClick={() => restoreSql(query)}\n              tooltip={t(\n                'Overwrite text in the editor with a query on this table',\n              )}\n              placement=\"top\"\n            >\n              <Icons.Edit iconSize=\"xl\" />\n            </StyledTooltip>\n            <StyledTooltip\n              onClick={() => openQueryInNewTab(query)}\n              tooltip={t('Run query in a new tab')}\n              placement=\"top\"\n            >\n              <Icons.PlusCircleOutlined iconSize=\"xl\" css={verticalAlign} />\n            </StyledTooltip>\n            {q.id !== latestQueryId && (\n              <StyledTooltip\n                tooltip={t('Remove query from log')}\n                onClick={() => dispatch(removeQuery(query))}\n              >\n                <Icons.Trash iconSize=\"xl\" />\n              </StyledTooltip>\n            )}\n          </div>\n        );\n        return q;\n      })\n      .reverse();\n  }, [queries, onUserClicked, onDbClicked, user, displayLimit]);\n\n  return (\n    <div className=\"QueryTable\">\n      <TableView\n        columns={columnsOfTable}\n        data={data}\n        className=\"table-condensed\"\n        pageSize={50}\n      />\n    </div>\n  );\n};\n\nexport default QueryTable;\n"]},"metadata":{},"sourceType":"module"}