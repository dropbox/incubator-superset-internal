{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport function columnChoices(datasource) {\n  if (datasource != null && datasource.columns) {\n    return datasource.columns.\n    map((col) => [col.column_name, col.verbose_name || col.column_name]).\n    sort((opt1, opt2) =>\n    opt1[1].toLowerCase() > opt2[1].toLowerCase() ? 1 : -1);\n\n  }\n  return [];\n}\n\nexport const PRIMARY_COLOR = { r: 0, g: 122, b: 135, a: 1 };\n\nexport default {\n  default: null,\n  mapStateToProps: (state) => ({\n    choices: state.datasource ?\n    state.datasource.time_grain_sqla.filter((o) => o[0] !== null) :\n    null }) };","map":{"version":3,"names":["columnChoices","datasource","columns","map","col","column_name","verbose_name","sort","opt1","opt2","toLowerCase","PRIMARY_COLOR","r","g","b","a","default","mapStateToProps","state","choices","time_grain_sqla","filter","o"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/controls.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport function columnChoices(datasource) {\n  if (datasource?.columns) {\n    return datasource.columns\n      .map(col => [col.column_name, col.verbose_name || col.column_name])\n      .sort((opt1, opt2) =>\n        opt1[1].toLowerCase() > opt2[1].toLowerCase() ? 1 : -1,\n      );\n  }\n  return [];\n}\n\nexport const PRIMARY_COLOR = { r: 0, g: 122, b: 135, a: 1 };\n\nexport default {\n  default: null,\n  mapStateToProps: state => ({\n    choices: state.datasource\n      ? state.datasource.time_grain_sqla.filter(o => o[0] !== null)\n      : null,\n  }),\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,aAAT,CAAuBC,UAAvB,EAAmC;EACxC,IAAIA,UAAJ,YAAIA,UAAU,CAAEC,OAAhB,EAAyB;IACvB,OAAOD,UAAU,CAACC,OAAX;IACJC,GADI,CACA,CAAAC,GAAG,KAAI,CAACA,GAAG,CAACC,WAAL,EAAkBD,GAAG,CAACE,YAAJ,IAAoBF,GAAG,CAACC,WAA1C,CADP;IAEJE,IAFI,CAEC,CAACC,IAAD,EAAOC,IAAP;IACJD,IAAI,CAAC,CAAD,CAAJ,CAAQE,WAAR,KAAwBD,IAAI,CAAC,CAAD,CAAJ,CAAQC,WAAR,EAAxB,GAAgD,CAAhD,GAAoD,CAAC,CAHlD,CAAP;;EAKD;EACD,OAAO,EAAP;AACD;;AAED,OAAO,MAAMC,aAAa,GAAG,EAAEC,CAAC,EAAE,CAAL,EAAQC,CAAC,EAAE,GAAX,EAAgBC,CAAC,EAAE,GAAnB,EAAwBC,CAAC,EAAE,CAA3B,EAAtB;;AAEP,eAAe;EACbC,OAAO,EAAE,IADI;EAEbC,eAAe,EAAE,CAAAC,KAAK,MAAK;IACzBC,OAAO,EAAED,KAAK,CAACjB,UAAN;IACLiB,KAAK,CAACjB,UAAN,CAAiBmB,eAAjB,CAAiCC,MAAjC,CAAwC,CAAAC,CAAC,KAAIA,CAAC,CAAC,CAAD,CAAD,KAAS,IAAtD,CADK;IAEL,IAHqB,EAAL,CAFT,EAAf"},"metadata":{},"sourceType":"module"}