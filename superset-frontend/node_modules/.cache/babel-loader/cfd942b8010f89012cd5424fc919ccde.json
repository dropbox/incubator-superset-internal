{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nconst untitledQueryRegex = /^Untitled Query (\\d+)$/; // Literal notation isn't recompiled\nconst untitledQuery = 'Untitled Query ';\nexport const newQueryTabName = function (queryEditors, initialTitle) {if (initialTitle === void 0) {initialTitle = `${untitledQuery}1`;}\n  const resultTitle = t(initialTitle);\n  if (queryEditors.length > 0) {\n    const mappedUntitled = queryEditors.filter((qe) => {var _qe$name;return (_qe$name = qe.name) == null ? void 0 : _qe$name.match(untitledQueryRegex);});\n    const untitledQueryNumbers = mappedUntitled.map((qe) => +qe.name.replace(untitledQuery, ''));\n    if (untitledQueryNumbers.length > 0) {\n      // When there are query tabs open, and at least one is called \"Untitled Query #\"\n      // Where # is a valid number\n      const largestNumber = Math.max(...untitledQueryNumbers);\n      return t('%s%s', untitledQuery, largestNumber + 1);\n    }\n    return resultTitle;\n  }\n  return resultTitle;\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(untitledQueryRegex, \"untitledQueryRegex\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/utils/newQueryTabName.ts\");reactHotLoader.register(untitledQuery, \"untitledQuery\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/utils/newQueryTabName.ts\");reactHotLoader.register(newQueryTabName, \"newQueryTabName\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/utils/newQueryTabName.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,CAAT,QAAkB,mBAAlB;AAGA,MAAMC,kBAAkB,GAAG,wBAA3B,C,CAAqD;AACrD,MAAMC,aAAa,GAAG,iBAAtB;AAEA,OAAO,MAAMC,eAAe,GAAG,UAC7BC,YAD6B,EAE7BC,YAF6B,EAGnB,KADVA,YACU,cADVA,YACU,GADK,GAAGH,aAAa,GACrB;EACV,MAAMI,WAAW,GAAGN,CAAC,CAACK,YAAD,CAArB;EAEA,IAAID,YAAY,CAACG,MAAb,GAAsB,CAA1B,EAA6B;IAC3B,MAAMC,cAAc,GAAGJ,YAAY,CAACK,MAAb,CAAoB,GAAE,sCAC3CC,EAAE,CAACC,IADwC,qBAC3C,SAASC,KAAT,CAAeX,kBAAf,CAD2C,EAAtB,CAAvB;IAGA,MAAMY,oBAAoB,GAAGL,cAAc,CAACM,GAAf,CAC3B,GAAE,KAAI,CAACJ,EAAE,CAACC,IAAH,CAAQI,OAAR,CAAgBb,aAAhB,EAA+B,EAA/B,CADoB,CAA7B;IAGA,IAAIW,oBAAoB,CAACN,MAArB,GAA8B,CAAlC,EAAqC;MACnC;MACA;MACA,MAAMS,aAAa,GAAWC,IAAI,CAACC,GAAL,CAAS,GAAGL,oBAAZ,CAA9B;MACA,OAAOb,CAAC,CAAC,MAAD,EAASE,aAAT,EAAwBc,aAAa,GAAG,CAAxC,CAAR;IACD;IACD,OAAOV,WAAP;EACD;EAED,OAAOA,WAAP;AACD,CAvBM,C,iLAHDL,kB,wJACAC,a,mJAEOC,e","names":["t","untitledQueryRegex","untitledQuery","newQueryTabName","queryEditors","initialTitle","resultTitle","length","mappedUntitled","filter","qe","name","match","untitledQueryNumbers","map","replace","largestNumber","Math","max"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/utils/newQueryTabName.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { t } from '@superset-ui/core';\nimport { QueryEditor } from '../types';\n\nconst untitledQueryRegex = /^Untitled Query (\\d+)$/; // Literal notation isn't recompiled\nconst untitledQuery = 'Untitled Query ';\n\nexport const newQueryTabName = (\n  queryEditors: QueryEditor[],\n  initialTitle = `${untitledQuery}1`,\n): string => {\n  const resultTitle = t(initialTitle);\n\n  if (queryEditors.length > 0) {\n    const mappedUntitled = queryEditors.filter(qe =>\n      qe.name?.match(untitledQueryRegex),\n    );\n    const untitledQueryNumbers = mappedUntitled.map(\n      qe => +qe.name.replace(untitledQuery, ''),\n    );\n    if (untitledQueryNumbers.length > 0) {\n      // When there are query tabs open, and at least one is called \"Untitled Query #\"\n      // Where # is a valid number\n      const largestNumber: number = Math.max(...untitledQueryNumbers);\n      return t('%s%s', untitledQuery, largestNumber + 1);\n    }\n    return resultTitle;\n  }\n\n  return resultTitle;\n};\n"]},"metadata":{},"sourceType":"module"}