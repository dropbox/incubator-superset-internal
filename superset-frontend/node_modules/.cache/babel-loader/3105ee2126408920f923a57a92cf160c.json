{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { css, styled, t } from '@superset-ui/core';\nimport moment from 'moment';\nimport React, { useEffect, useMemo } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport ListView from 'src/components/ListView';\nimport { Tooltip } from 'src/components/Tooltip';\nimport SubMenu from 'src/features/home/SubMenu';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { fDuration } from 'src/utils/dates';\nimport AlertStatusIcon from 'src/features/alerts/components/AlertStatusIcon';\nimport { useListViewResource, useSingleViewResource } from 'src/views/CRUD/hooks';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst PAGE_SIZE = 25;\nconst StyledHeader = styled.div`\n  ${(_ref) => {let { theme } = _ref;return css`\n    display: flex;\n    flex-direction: row;\n\n    a,\n    Link {\n      margin-left: ${theme.gridUnit * 4}px;\n      font-size: ${theme.typography.sizes.s};\n      font-weight: ${theme.typography.weights.normal};\n      text-decoration: underline;\n    }\n  `;}}\n`;\nfunction ExecutionLog(_ref2) {let { addDangerToast, isReportEnabled } = _ref2;\n  const { alertId } = useParams();\n  const { state: { loading, resourceCount: logCount, resourceCollection: logs }, fetchData } = useListViewResource(`report/${alertId}/log`, t('log'), addDangerToast, false);\n  const { state: { loading: alertLoading, resource: alertResource }, fetchResource } = useSingleViewResource('report', t('reports'), addDangerToast);\n  useEffect(() => {\n    if (alertId !== null && !alertLoading) {\n      fetchResource(alertId);\n    }\n  }, [alertId]);\n  const initialSort = [{ id: 'start_dttm', desc: true }];\n  const columns = useMemo(() => [\n  {\n    Cell: (_ref3) => {let { row: { original: { state } } } = _ref3;return ___EmotionJSX(AlertStatusIcon, { state: state, isReportEnabled: isReportEnabled });},\n    accessor: 'state',\n    Header: t('State'),\n    size: 'xs',\n    disableSortBy: true },\n\n  {\n    Cell: (_ref4) => {let { row: { original: { uuid: executionId } } } = _ref4;return executionId ? executionId.slice(0, 6) : 'none';},\n    accessor: 'uuid',\n    Header: t('Execution ID'),\n    size: 'xs',\n    disableSortBy: true },\n\n  {\n    Cell: (_ref5) => {let { row: { original: { scheduled_dttm: scheduledDttm } } } = _ref5;return moment(new Date(scheduledDttm)).format('YYYY-MM-DD hh:mm:ss a');},\n    accessor: 'scheduled_dttm',\n    Header: t('Scheduled at (UTC)') },\n\n  {\n    Cell: (_ref6) => {let { row: { original: { start_dttm: startDttm } } } = _ref6;return moment(new Date(startDttm)).format('YYYY-MM-DD hh:mm:ss a');},\n    Header: t('Start at (UTC)'),\n    accessor: 'start_dttm' },\n\n  {\n    Cell: (_ref7) => {let { row: { original: { start_dttm: startDttm, end_dttm: endDttm } } } = _ref7;return fDuration(new Date(startDttm).getTime(), new Date(endDttm).getTime());},\n    Header: t('Duration'),\n    disableSortBy: true },\n\n  {\n    accessor: 'value',\n    Header: t('Value') },\n\n  {\n    accessor: 'error_message',\n    Header: t('Error message'),\n    Cell: (_ref8) => {let { row: { original: { error_message = '' } } } = _ref8;return ___EmotionJSX(Tooltip, { title: error_message, placement: \"topLeft\" },\n      ___EmotionJSX(\"span\", null, error_message));} }],\n\n\n  [isReportEnabled]);\n  const path = `/${isReportEnabled ? 'report' : 'alert'}/list/`;\n  const ALERT_TEXT = t('Alert');\n  const REPORT_TEXT = t('Report');\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, { name: ___EmotionJSX(StyledHeader, null,\n    ___EmotionJSX(\"span\", null,\n    alertResource ?\n    alertResource.type === 'Alert' ?\n    `${ALERT_TEXT}:` :\n    alertResource.type === 'Report' ?\n    `${REPORT_TEXT}:` :\n    null :\n    null, ' ',\n    alertResource == null ? void 0 : alertResource.name),\n\n    ___EmotionJSX(\"span\", null,\n    ___EmotionJSX(Link, { to: path }, t('Back to all')))) }),\n\n\n  ___EmotionJSX(ListView, { className: \"execution-log-list-view\", columns: columns, count: logCount, data: logs, fetchData: fetchData, initialSort: initialSort, loading: loading, pageSize: PAGE_SIZE }));\n\n}\nexport default withToasts(ExecutionLog);","map":{"version":3,"mappings":"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","names":["css","styled","t","moment","React","useEffect","useMemo","Link","useParams","ListView","Tooltip","SubMenu","withToasts","fDuration","AlertStatusIcon","useListViewResource","useSingleViewResource","PAGE_SIZE","StyledHeader","div","theme","gridUnit","typography","sizes","s","weights","normal","ExecutionLog","addDangerToast","isReportEnabled","alertId","state","loading","resourceCount","logCount","resourceCollection","logs","fetchData","alertLoading","resource","alertResource","fetchResource","initialSort","id","desc","columns","Cell","row","original","accessor","Header","size","disableSortBy","uuid","executionId","slice","scheduled_dttm","scheduledDttm","Date","format","start_dttm","startDttm","end_dttm","endDttm","getTime","error_message","path","ALERT_TEXT","REPORT_TEXT","type","name"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/ExecutionLogList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { css, styled, t } from '@superset-ui/core';\nimport moment from 'moment';\nimport React, { useEffect, useMemo } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport ListView from 'src/components/ListView';\nimport { Tooltip } from 'src/components/Tooltip';\nimport SubMenu from 'src/features/home/SubMenu';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { fDuration } from 'src/utils/dates';\nimport AlertStatusIcon from 'src/features/alerts/components/AlertStatusIcon';\nimport {\n  useListViewResource,\n  useSingleViewResource,\n} from 'src/views/CRUD/hooks';\nimport { AlertObject, LogObject } from 'src/features/alerts/types';\n\nconst PAGE_SIZE = 25;\n\nconst StyledHeader = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: row;\n\n    a,\n    Link {\n      margin-left: ${theme.gridUnit * 4}px;\n      font-size: ${theme.typography.sizes.s};\n      font-weight: ${theme.typography.weights.normal};\n      text-decoration: underline;\n    }\n  `}\n`;\n\ninterface ExecutionLogProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  isReportEnabled: boolean;\n}\n\nfunction ExecutionLog({ addDangerToast, isReportEnabled }: ExecutionLogProps) {\n  const { alertId }: any = useParams();\n  const {\n    state: { loading, resourceCount: logCount, resourceCollection: logs },\n    fetchData,\n  } = useListViewResource<LogObject>(\n    `report/${alertId}/log`,\n    t('log'),\n    addDangerToast,\n    false,\n  );\n  const {\n    state: { loading: alertLoading, resource: alertResource },\n    fetchResource,\n  } = useSingleViewResource<AlertObject>(\n    'report',\n    t('reports'),\n    addDangerToast,\n  );\n\n  useEffect(() => {\n    if (alertId !== null && !alertLoading) {\n      fetchResource(alertId);\n    }\n  }, [alertId]);\n\n  const initialSort = [{ id: 'start_dttm', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { state },\n          },\n        }: any) => (\n          <AlertStatusIcon state={state} isReportEnabled={isReportEnabled} />\n        ),\n        accessor: 'state',\n        Header: t('State'),\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { uuid: executionId },\n          },\n        }: any) => (executionId ? executionId.slice(0, 6) : 'none'),\n        accessor: 'uuid',\n        Header: t('Execution ID'),\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { scheduled_dttm: scheduledDttm },\n          },\n        }: any) =>\n          moment(new Date(scheduledDttm)).format('YYYY-MM-DD hh:mm:ss a'),\n        accessor: 'scheduled_dttm',\n        Header: t('Scheduled at (UTC)'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { start_dttm: startDttm },\n          },\n        }: any) => moment(new Date(startDttm)).format('YYYY-MM-DD hh:mm:ss a'),\n        Header: t('Start at (UTC)'),\n        accessor: 'start_dttm',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { start_dttm: startDttm, end_dttm: endDttm },\n          },\n        }: any) =>\n          fDuration(new Date(startDttm).getTime(), new Date(endDttm).getTime()),\n        Header: t('Duration'),\n        disableSortBy: true,\n      },\n      {\n        accessor: 'value',\n        Header: t('Value'),\n      },\n      {\n        accessor: 'error_message',\n        Header: t('Error message'),\n        Cell: ({\n          row: {\n            original: { error_message = '' },\n          },\n        }: any) => (\n          <Tooltip title={error_message} placement=\"topLeft\">\n            <span>{error_message}</span>\n          </Tooltip>\n        ),\n      },\n    ],\n    [isReportEnabled],\n  );\n  const path = `/${isReportEnabled ? 'report' : 'alert'}/list/`;\n  const ALERT_TEXT = t('Alert');\n  const REPORT_TEXT = t('Report');\n\n  return (\n    <>\n      <SubMenu\n        name={\n          <StyledHeader>\n            <span>\n              {alertResource\n                ? alertResource.type === 'Alert'\n                  ? `${ALERT_TEXT}:`\n                  : alertResource.type === 'Report'\n                  ? `${REPORT_TEXT}:`\n                  : null\n                : null}{' '}\n              {alertResource?.name}\n            </span>\n            <span>\n              <Link to={path}>{t('Back to all')}</Link>\n            </span>\n          </StyledHeader>\n        }\n      />\n      <ListView<LogObject>\n        className=\"execution-log-list-view\"\n        columns={columns}\n        count={logCount}\n        data={logs}\n        fetchData={fetchData}\n        initialSort={initialSort}\n        loading={loading}\n        pageSize={PAGE_SIZE}\n      />\n    </>\n  );\n}\n\nexport default withToasts(ExecutionLog);\n"]},"metadata":{},"sourceType":"module"}