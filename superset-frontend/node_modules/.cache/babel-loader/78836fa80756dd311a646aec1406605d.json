{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\n/* eslint prefer-const: 2 */\nimport shortid from 'shortid';\nimport { SupersetClient } from '@superset-ui/core';\n\nimport { safeStringify } from '../utils/safeStringify';\nimport { LOG_EVENT } from '../logger/actions';\nimport { LOG_EVENT_TYPE_TIMING } from '../logger/LogUtils';\nimport DebouncedMessageQueue from '../utils/DebouncedMessageQueue';\n\nconst LOG_ENDPOINT = '/superset/log/?explode=events';\nconst sendBeacon = (events) => {\n  if (events.length <= 0) {\n    return;\n  }\n\n  let endpoint = LOG_ENDPOINT;\n  const { source, source_id } = events[0];\n  // backend logs treat these request params as first-class citizens\n  if (source === 'dashboard') {\n    endpoint += `&dashboard_id=${source_id}`;\n  } else if (source === 'slice') {\n    endpoint += `&slice_id=${source_id}`;\n  }\n\n  if (navigator.sendBeacon) {\n    const formData = new FormData();\n    formData.append('events', safeStringify(events));\n    if (SupersetClient.getGuestToken()) {\n      // if we have a guest token, we need to send it for auth via the form\n      formData.append('guest_token', SupersetClient.getGuestToken());\n    }\n    navigator.sendBeacon(endpoint, formData);\n  } else {\n    SupersetClient.post({\n      endpoint,\n      postPayload: { events },\n      parseMethod: null });\n\n  }\n};\n\n// beacon API has data size limit = 2^16.\n// assume avg each log entry has 2^6 characters\nconst MAX_EVENTS_PER_REQUEST = 1024;\nconst logMessageQueue = new DebouncedMessageQueue({\n  callback: sendBeacon,\n  sizeThreshold: MAX_EVENTS_PER_REQUEST,\n  delayThreshold: 1000 });\n\nlet lastEventId = 0;\nconst loggerMiddleware = (store) => (next) => (action) => {var _dashboardLayout$pres;\n  if (action.type !== LOG_EVENT) {\n    return next(action);\n  }\n\n  const { dashboardInfo, explore, impressionId, dashboardLayout, sqlLab } =\n  store.getState();\n  let logMetadata = {\n    impression_id: impressionId,\n    version: 'v2' };\n\n  if (dashboardInfo != null && dashboardInfo.id) {\n    logMetadata = {\n      source: 'dashboard',\n      source_id: dashboardInfo.id,\n      ...logMetadata };\n\n  } else if (explore != null && explore.slice) {\n    logMetadata = {\n      source: 'explore',\n      source_id: explore.slice ? explore.slice.slice_id : 0,\n      ...logMetadata };\n\n  } else if (sqlLab) {\n    const editor = sqlLab.queryEditors.find(\n    (_ref) => {let { id } = _ref;return id === sqlLab.tabHistory.slice(-1)[0];});\n\n    logMetadata = {\n      source: 'sqlLab',\n      source_id: editor == null ? void 0 : editor.id,\n      db_id: editor == null ? void 0 : editor.dbId,\n      schema: editor == null ? void 0 : editor.schema };\n\n  }\n\n  const { eventName } = action.payload;\n  let { eventData = {} } = action.payload;\n  eventData = {\n    ...logMetadata,\n    ts: new Date().getTime(),\n    event_name: eventName,\n    ...eventData };\n\n  if (LOG_EVENT_TYPE_TIMING.has(eventName)) {\n    eventData = {\n      ...eventData,\n      event_type: 'timing',\n      trigger_event: lastEventId };\n\n  } else {\n    lastEventId = shortid.generate();\n    eventData = {\n      ...eventData,\n      event_type: 'user',\n      event_id: lastEventId,\n      visibility: document.visibilityState };\n\n  }\n\n  if (eventData.target_id && dashboardLayout != null && (_dashboardLayout$pres = dashboardLayout.present) != null && _dashboardLayout$pres[eventData.target_id]) {\n    const { meta } = dashboardLayout.present[eventData.target_id];\n    // chart name or tab/header text\n    eventData.target_name = meta.chartId ? meta.sliceName : meta.text;\n  }\n\n  logMessageQueue.append(eventData);\n  return eventData;\n};\n\nexport default loggerMiddleware;","map":{"version":3,"names":["shortid","SupersetClient","safeStringify","LOG_EVENT","LOG_EVENT_TYPE_TIMING","DebouncedMessageQueue","LOG_ENDPOINT","sendBeacon","events","length","endpoint","source","source_id","navigator","formData","FormData","append","getGuestToken","post","postPayload","parseMethod","MAX_EVENTS_PER_REQUEST","logMessageQueue","callback","sizeThreshold","delayThreshold","lastEventId","loggerMiddleware","store","next","action","type","dashboardInfo","explore","impressionId","dashboardLayout","sqlLab","getState","logMetadata","impression_id","version","id","slice","slice_id","editor","queryEditors","find","tabHistory","db_id","dbId","schema","eventName","payload","eventData","ts","Date","getTime","event_name","has","event_type","trigger_event","generate","event_id","visibility","document","visibilityState","target_id","present","meta","target_name","chartId","sliceName","text"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/middleware/loggerMiddleware.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\n/* eslint prefer-const: 2 */\nimport shortid from 'shortid';\nimport { SupersetClient } from '@superset-ui/core';\n\nimport { safeStringify } from '../utils/safeStringify';\nimport { LOG_EVENT } from '../logger/actions';\nimport { LOG_EVENT_TYPE_TIMING } from '../logger/LogUtils';\nimport DebouncedMessageQueue from '../utils/DebouncedMessageQueue';\n\nconst LOG_ENDPOINT = '/superset/log/?explode=events';\nconst sendBeacon = events => {\n  if (events.length <= 0) {\n    return;\n  }\n\n  let endpoint = LOG_ENDPOINT;\n  const { source, source_id } = events[0];\n  // backend logs treat these request params as first-class citizens\n  if (source === 'dashboard') {\n    endpoint += `&dashboard_id=${source_id}`;\n  } else if (source === 'slice') {\n    endpoint += `&slice_id=${source_id}`;\n  }\n\n  if (navigator.sendBeacon) {\n    const formData = new FormData();\n    formData.append('events', safeStringify(events));\n    if (SupersetClient.getGuestToken()) {\n      // if we have a guest token, we need to send it for auth via the form\n      formData.append('guest_token', SupersetClient.getGuestToken());\n    }\n    navigator.sendBeacon(endpoint, formData);\n  } else {\n    SupersetClient.post({\n      endpoint,\n      postPayload: { events },\n      parseMethod: null,\n    });\n  }\n};\n\n// beacon API has data size limit = 2^16.\n// assume avg each log entry has 2^6 characters\nconst MAX_EVENTS_PER_REQUEST = 1024;\nconst logMessageQueue = new DebouncedMessageQueue({\n  callback: sendBeacon,\n  sizeThreshold: MAX_EVENTS_PER_REQUEST,\n  delayThreshold: 1000,\n});\nlet lastEventId = 0;\nconst loggerMiddleware = store => next => action => {\n  if (action.type !== LOG_EVENT) {\n    return next(action);\n  }\n\n  const { dashboardInfo, explore, impressionId, dashboardLayout, sqlLab } =\n    store.getState();\n  let logMetadata = {\n    impression_id: impressionId,\n    version: 'v2',\n  };\n  if (dashboardInfo?.id) {\n    logMetadata = {\n      source: 'dashboard',\n      source_id: dashboardInfo.id,\n      ...logMetadata,\n    };\n  } else if (explore?.slice) {\n    logMetadata = {\n      source: 'explore',\n      source_id: explore.slice ? explore.slice.slice_id : 0,\n      ...logMetadata,\n    };\n  } else if (sqlLab) {\n    const editor = sqlLab.queryEditors.find(\n      ({ id }) => id === sqlLab.tabHistory.slice(-1)[0],\n    );\n    logMetadata = {\n      source: 'sqlLab',\n      source_id: editor?.id,\n      db_id: editor?.dbId,\n      schema: editor?.schema,\n    };\n  }\n\n  const { eventName } = action.payload;\n  let { eventData = {} } = action.payload;\n  eventData = {\n    ...logMetadata,\n    ts: new Date().getTime(),\n    event_name: eventName,\n    ...eventData,\n  };\n  if (LOG_EVENT_TYPE_TIMING.has(eventName)) {\n    eventData = {\n      ...eventData,\n      event_type: 'timing',\n      trigger_event: lastEventId,\n    };\n  } else {\n    lastEventId = shortid.generate();\n    eventData = {\n      ...eventData,\n      event_type: 'user',\n      event_id: lastEventId,\n      visibility: document.visibilityState,\n    };\n  }\n\n  if (eventData.target_id && dashboardLayout?.present?.[eventData.target_id]) {\n    const { meta } = dashboardLayout.present[eventData.target_id];\n    // chart name or tab/header text\n    eventData.target_name = meta.chartId ? meta.sliceName : meta.text;\n  }\n\n  logMessageQueue.append(eventData);\n  return eventData;\n};\n\nexport default loggerMiddleware;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}