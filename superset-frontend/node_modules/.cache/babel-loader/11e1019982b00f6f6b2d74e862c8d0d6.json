{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t, styled } from '@superset-ui/core';\nimport { EmptyStateBig } from 'src/components/EmptyState';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledContainer = styled.div`\n  padding: ${(_ref) => {let { theme } = _ref;return theme.gridUnit * 8;}}px\n    ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit * 6;}}px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\nconst StyledEmptyStateBig = styled(EmptyStateBig)`\n  max-width: 50%;\n\n  p {\n    width: ${(_ref3) => {let { theme } = _ref3;return theme.gridUnit * 115;}}px;\n  }\n`;\nexport const SELECT_MESSAGE = t('Datasets can be created from database tables or SQL queries. Select a database table to the left or ');\nexport const CREATE_MESSAGE = t('create dataset from SQL query');\nexport const VIEW_DATASET_MESSAGE = t(' to open SQL Lab. From there you can save the query as a dataset.');\nconst renderEmptyDescription = () => ___EmotionJSX(React.Fragment, null,\nSELECT_MESSAGE,\n___EmotionJSX(\"span\", { role: \"button\", onClick: () => {\n    window.location.href = `/superset/sqllab`;\n  }, tabIndex: 0 },\nCREATE_MESSAGE),\n\nVIEW_DATASET_MESSAGE);\n\nexport const SELECT_TABLE_TITLE = t('Select dataset source');\nexport const NO_COLUMNS_TITLE = t('No table columns');\nexport const NO_COLUMNS_DESCRIPTION = t('This database table does not contain any data. Please select a different table.');\nexport const ERROR_TITLE = t('An Error Occurred');\nexport const ERROR_DESCRIPTION = t('Unable to load columns for the selected table. Please select a different table.');\nexport const MessageContent = (props) => {\n  const { hasError, tableName, hasColumns } = props;\n  let currentImage = 'empty-dataset.svg';\n  let currentTitle = SELECT_TABLE_TITLE;\n  let currentDescription = renderEmptyDescription();\n  if (hasError) {\n    currentTitle = ERROR_TITLE;\n    currentDescription = ___EmotionJSX(React.Fragment, null, ERROR_DESCRIPTION);\n    currentImage = undefined;\n  } else\n  if (tableName && !hasColumns) {\n    currentImage = 'no-columns.svg';\n    currentTitle = NO_COLUMNS_TITLE;\n    currentDescription = ___EmotionJSX(React.Fragment, null, NO_COLUMNS_DESCRIPTION);\n  }\n  return ___EmotionJSX(StyledContainer, null,\n  ___EmotionJSX(StyledEmptyStateBig, { image: currentImage, title: currentTitle, description: currentDescription }));\n\n};\nexport default MessageContent;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,CAAT,EAAYC,MAAZ,QAA0B,mBAA1B;AACA,SAASC,aAAT,QAA8B,2BAA9B,C;AAEA,MAAMC,eAAe,GAAGF,MAAM,CAACG,GAAG;aACrB,eAAC,EAAEC,KAAF,EAAD,eAAeA,KAAK,CAACC,QAAN,GAAiB,CAAhC,EAAiC;MACxC,gBAAC,EAAED,KAAF,EAAD,gBAAeA,KAAK,CAACC,QAAN,GAAiB,CAAhC,EAAiC;;;;;;CAFvC;AAUA,MAAMC,mBAAmB,GAAGN,MAAM,CAACC,aAAD,CAAe;;;;aAIpC,gBAAC,EAAEG,KAAF,EAAD,gBAAeA,KAAK,CAACC,QAAN,GAAiB,GAAhC,EAAmC;;CAJhD;AAQA,OAAO,MAAME,cAAc,GAAGR,CAAC,CAC7B,sGAD6B,CAAxB;AAGP,OAAO,MAAMS,cAAc,GAAGT,CAAC,CAAC,+BAAD,CAAxB;AACP,OAAO,MAAMU,oBAAoB,GAAGV,CAAC,CACnC,mEADmC,CAA9B;AAIP,MAAMW,sBAAsB,GAAG,MAC7B;AACGH,cADH;AAEE,wBACE,IAAI,EAAC,QADP,EAEE,OAAO,EAAE,MAAK;IACZI,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,kBAAvB;EACD,CAJH,EAKE,QAAQ,EAAE,CALZ;AAOGL,cAPH,CAFF;;AAWGC,oBAXH,CADF;;AAgBA,OAAO,MAAMK,kBAAkB,GAAGf,CAAC,CAAC,uBAAD,CAA5B;AACP,OAAO,MAAMgB,gBAAgB,GAAGhB,CAAC,CAAC,kBAAD,CAA1B;AACP,OAAO,MAAMiB,sBAAsB,GAAGjB,CAAC,CACrC,iFADqC,CAAhC;AAGP,OAAO,MAAMkB,WAAW,GAAGlB,CAAC,CAAC,mBAAD,CAArB;AACP,OAAO,MAAMmB,iBAAiB,GAAGnB,CAAC,CAChC,iFADgC,CAA3B;AAUP,OAAO,MAAMoB,cAAc,GAAG,CAACC,KAAD,KAA+B;EAC3D,MAAM,EAAEC,QAAF,EAAYC,SAAZ,EAAuBC,UAAvB,KAAsCH,KAA5C;EACA,IAAII,YAAY,GAAuB,mBAAvC;EACA,IAAIC,YAAY,GAAGX,kBAAnB;EACA,IAAIY,kBAAkB,GAAGhB,sBAAsB,EAA/C;EACA,IAAIW,QAAJ,EAAc;IACZI,YAAY,GAAGR,WAAf;IACAS,kBAAkB,GAAG,oCAAGR,iBAAH,CAArB;IACAM,YAAY,GAAGG,SAAf;EACD,CAJD;EAIO,IAAIL,SAAS,IAAI,CAACC,UAAlB,EAA8B;IACnCC,YAAY,GAAG,gBAAf;IACAC,YAAY,GAAGV,gBAAf;IACAW,kBAAkB,GAAG,oCAAGV,sBAAH,CAArB;EACD;EACD,OACE,cAAC,eAAD;EACE,cAAC,mBAAD,IACE,KAAK,EAAEQ,YADT,EAEE,KAAK,EAAEC,YAFT,EAGE,WAAW,EAAEC,kBAHf,GADF,CADF;;AASD,CAvBM;AAyBP,eAAeP,cAAf","names":["React","t","styled","EmptyStateBig","StyledContainer","div","theme","gridUnit","StyledEmptyStateBig","SELECT_MESSAGE","CREATE_MESSAGE","VIEW_DATASET_MESSAGE","renderEmptyDescription","window","location","href","SELECT_TABLE_TITLE","NO_COLUMNS_TITLE","NO_COLUMNS_DESCRIPTION","ERROR_TITLE","ERROR_DESCRIPTION","MessageContent","props","hasError","tableName","hasColumns","currentImage","currentTitle","currentDescription","undefined"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/datasets/AddDataset/DatasetPanel/MessageContent.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { t, styled } from '@superset-ui/core';\nimport { EmptyStateBig } from 'src/components/EmptyState';\n\nconst StyledContainer = styled.div`\n  padding: ${({ theme }) => theme.gridUnit * 8}px\n    ${({ theme }) => theme.gridUnit * 6}px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\n\nconst StyledEmptyStateBig = styled(EmptyStateBig)`\n  max-width: 50%;\n\n  p {\n    width: ${({ theme }) => theme.gridUnit * 115}px;\n  }\n`;\n\nexport const SELECT_MESSAGE = t(\n  'Datasets can be created from database tables or SQL queries. Select a database table to the left or ',\n);\nexport const CREATE_MESSAGE = t('create dataset from SQL query');\nexport const VIEW_DATASET_MESSAGE = t(\n  ' to open SQL Lab. From there you can save the query as a dataset.',\n);\n\nconst renderEmptyDescription = () => (\n  <>\n    {SELECT_MESSAGE}\n    <span\n      role=\"button\"\n      onClick={() => {\n        window.location.href = `/superset/sqllab`;\n      }}\n      tabIndex={0}\n    >\n      {CREATE_MESSAGE}\n    </span>\n    {VIEW_DATASET_MESSAGE}\n  </>\n);\n\nexport const SELECT_TABLE_TITLE = t('Select dataset source');\nexport const NO_COLUMNS_TITLE = t('No table columns');\nexport const NO_COLUMNS_DESCRIPTION = t(\n  'This database table does not contain any data. Please select a different table.',\n);\nexport const ERROR_TITLE = t('An Error Occurred');\nexport const ERROR_DESCRIPTION = t(\n  'Unable to load columns for the selected table. Please select a different table.',\n);\n\ninterface MessageContentProps {\n  hasError: boolean;\n  tableName?: string | null;\n  hasColumns: boolean;\n}\n\nexport const MessageContent = (props: MessageContentProps) => {\n  const { hasError, tableName, hasColumns } = props;\n  let currentImage: string | undefined = 'empty-dataset.svg';\n  let currentTitle = SELECT_TABLE_TITLE;\n  let currentDescription = renderEmptyDescription();\n  if (hasError) {\n    currentTitle = ERROR_TITLE;\n    currentDescription = <>{ERROR_DESCRIPTION}</>;\n    currentImage = undefined;\n  } else if (tableName && !hasColumns) {\n    currentImage = 'no-columns.svg';\n    currentTitle = NO_COLUMNS_TITLE;\n    currentDescription = <>{NO_COLUMNS_DESCRIPTION}</>;\n  }\n  return (\n    <StyledContainer>\n      <StyledEmptyStateBig\n        image={currentImage}\n        title={currentTitle}\n        description={currentDescription}\n      />\n    </StyledContainer>\n  );\n};\n\nexport default MessageContent;\n"]},"metadata":{},"sourceType":"module"}