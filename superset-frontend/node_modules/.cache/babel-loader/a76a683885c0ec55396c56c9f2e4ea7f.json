{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /* eslint-disable react/sort-prop-types */\n/* eslint-disable react/jsx-handler-names */\n/* eslint-disable react/no-access-state-in-setstate */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\n\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport PropTypes from 'prop-types';\n\nimport { PolygonLayer } from 'deck.gl';\n\nimport AnimatableDeckGLContainer from '../../AnimatableDeckGLContainer';\nimport Legend from '../../components/Legend';\nimport TooltipRow from '../../TooltipRow';\nimport { getBuckets, getBreakPointColorScaler } from '../../utils';\n\nimport { commonLayerProps } from '../common';\nimport { getPlaySliderParams } from '../../utils/time';\nimport sandboxedEval from '../../utils/sandbox';\n// eslint-disable-next-line import/extensions\nimport getPointsFromPolygon from '../../utils/getPointsFromPolygon';\n// eslint-disable-next-line import/extensions\nimport fitViewport from '../../utils/fitViewport';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst DOUBLE_CLICK_THRESHOLD = 250; // milliseconds\n\nfunction getElevation(d, colorScaler) {\n  /* in deck.gl 5.3.4 (used in Superset as of 2018-10-24), if a polygon has\n   * opacity zero it will make everything behind it have opacity zero,\n   * effectively showing the map layer no matter what other polygons are\n   * behind it.\n   */\n  return colorScaler(d)[3] === 0 ? 0 : d.elevation;\n}\n\nfunction setTooltipContent(formData) {\n  return (o) => {\n    const metricLabel = formData.metric.label || formData.metric;\n\n    return (\n      ___EmotionJSX(\"div\", { className: \"deckgl-tooltip\" },\n      o.object.name &&\n      ___EmotionJSX(TooltipRow\n      // eslint-disable-next-line prefer-template\n      , { label: t('name') + ': ',\n        value: `${o.object.name}` }),\n\n\n      o.object[formData.line_column] &&\n      ___EmotionJSX(TooltipRow, {\n        label: `${formData.line_column}: `,\n        value: `${o.object[formData.line_column]}` }),\n\n\n      formData.metric &&\n      ___EmotionJSX(TooltipRow, {\n        label: `${metricLabel}: `,\n        value: `${o.object[metricLabel]}` })));\n\n\n\n\n  };\n}\n\nexport function getLayer(\nformData,\npayload,\nonAddFilter,\nsetTooltip,\nselected,\nonSelect,\nfilters)\n{var _context;\n  const fd = formData;\n  const fc = fd.fill_color_picker;\n  const sc = fd.stroke_color_picker;\n  let data = [...payload.data.features];\n\n  if (filters != null) {\n    filters.forEach((f) => {\n      data = data.filter((x) => f(x));\n    });\n  }\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n\n  const metricLabel = fd.metric ? fd.metric.label || fd.metric : null;\n  const accessor = (d) => d[metricLabel];\n  // base color for the polygons\n  const baseColorScaler =\n  fd.metric === null ?\n  () => [fc.r, fc.g, fc.b, 255 * fc.a] :\n  getBreakPointColorScaler(fd, data, accessor);\n\n  // when polygons are selected, reduce the opacity of non-selected polygons\n  const colorScaler = (d) => {\n    const baseColor = baseColorScaler(d);\n    if (selected.length > 0 && !_includesInstanceProperty(selected).call(selected, d[fd.line_column])) {\n      baseColor[3] /= 2;\n    }\n\n    return baseColor;\n  };\n\n  const tooltipContentGenerator =\n  fd.line_column &&\n  fd.metric &&\n  _includesInstanceProperty(_context = ['json', 'geohash', 'zipcode']).call(_context, fd.line_type) ?\n  setTooltipContent(fd) :\n  undefined;\n\n  return new PolygonLayer({\n    id: `path-layer-${fd.slice_id}`,\n    data,\n    pickable: true,\n    filled: fd.filled,\n    stroked: fd.stroked,\n    getPolygon: getPointsFromPolygon,\n    getFillColor: colorScaler,\n    getLineColor: [sc.r, sc.g, sc.b, 255 * sc.a],\n    getLineWidth: fd.line_width,\n    extruded: fd.extruded,\n    getElevation: (d) => getElevation(d, colorScaler),\n    elevationScale: fd.multiplier,\n    fp64: true,\n    ...commonLayerProps(fd, setTooltip, tooltipContentGenerator, onSelect) });\n\n}\n\nconst propTypes = {\n  formData: PropTypes.object.isRequired,\n  payload: PropTypes.object.isRequired,\n  setControlValue: PropTypes.func.isRequired,\n  viewport: PropTypes.object.isRequired,\n  onAddFilter: PropTypes.func,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired };\n\n\nconst defaultProps = {\n  onAddFilter() {} };\n\n\nclass DeckGLPolygon extends React.Component {\n\n\n  constructor(props) {\n    super(props);this.containerRef = /*#__PURE__*/React.createRef();this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    setTooltip = (tooltip) => {\n      const { current } = this.containerRef;\n      if (current) {\n        current.setTooltip(tooltip);\n      }\n    };this.state = DeckGLPolygon.getDerivedStateFromProps(props);this.getLayers = this.getLayers.bind(this);this.onSelect = this.onSelect.bind(this);this.onValuesChange = this.onValuesChange.bind(this);}static getDerivedStateFromProps(props, state) {const { width, height, formData, payload } = props; // the state is computed only from the payload; if it hasn't changed, do\n    // not recompute state since this would reset selections and/or the play\n    // slider position due to changes in form controls\n    if (state && payload.form_data === state.formData) {return null;}const features = payload.data.features || [];const timestamps = features.map((f) => f.__timestamp); // the granularity has to be read from the payload form_data, not the\n    // props formData which comes from the instantaneous controls state\n    const granularity = payload.form_data.time_grain_sqla || payload.form_data.granularity || 'P1D';const { start, end, getStep, values, disabled } = getPlaySliderParams(timestamps, granularity);let { viewport } = props;if (formData.autozoom) {viewport = fitViewport(viewport, { width, height, points: features.flatMap(getPointsFromPolygon) });}return { start, end, getStep, values, disabled, viewport, selected: [], lastClick: 0, formData: payload.form_data };}onSelect(polygon) {const { formData, onAddFilter } = this.props;const now = new Date();const doubleClick = now - this.state.lastClick <= DOUBLE_CLICK_THRESHOLD; // toggle selected polygons\n    const selected = [...this.state.selected];if (doubleClick) {selected.splice(0, selected.length, polygon);} else if (formData.toggle_polygons) {const i = selected.indexOf(polygon);if (i === -1) {selected.push(polygon);} else {selected.splice(i, 1);}} else {selected.splice(0, 1, polygon);}this.setState({ selected, lastClick: now });if (formData.table_filter) {onAddFilter(formData.line_column, selected, false, true);}}onValuesChange(values) {this.setState({ values: Array.isArray(values) ? values : [values, values + this.state.getStep(values)] });}getLayers(values) {if (this.props.payload.data.features === undefined) {return [];}const filters = []; // time filter\n    if (values[0] === values[1] || values[1] === this.end) {filters.push((d) => d.__timestamp >= values[0] && d.__timestamp <= values[1]);} else {filters.push((d) => d.__timestamp >= values[0] && d.__timestamp < values[1]);}const layer = getLayer(this.props.formData, this.props.payload, this.props.onAddFilter, this.setTooltip, this.state.selected, this.onSelect, filters);return [layer];}render() {const { payload, formData, setControlValue } = this.props;const { start, end, getStep, values, disabled, viewport } = this.state;const fd = formData;const metricLabel = fd.metric ? fd.metric.label || fd.metric : null;\n    const accessor = (d) => d[metricLabel];\n\n    const buckets = getBuckets(formData, payload.data.features, accessor);\n\n    return (\n      ___EmotionJSX(\"div\", { style: { position: 'relative' } },\n      ___EmotionJSX(AnimatableDeckGLContainer, {\n        ref: this.containerRef,\n        aggregation: true,\n        getLayers: this.getLayers,\n        start: start,\n        end: end,\n        getStep: getStep,\n        values: values,\n        disabled: disabled,\n        viewport: viewport,\n        width: this.props.width,\n        height: this.props.height,\n        mapboxApiAccessToken: payload.data.mapboxApiKey,\n        mapStyle: formData.mapbox_style,\n        setControlValue: setControlValue,\n        onValuesChange: this.onValuesChange,\n        onViewportChange: this.onViewportChange },\n\n      formData.metric !== null &&\n      ___EmotionJSX(Legend, {\n        categories: buckets,\n        position: formData.legend_position,\n        format: formData.legend_format }))));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nDeckGLPolygon.propTypes = propTypes;\nDeckGLPolygon.defaultProps = defaultProps;const _default =\n\nDeckGLPolygon;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DOUBLE_CLICK_THRESHOLD, \"DOUBLE_CLICK_THRESHOLD\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Polygon/Polygon.jsx\");reactHotLoader.register(getElevation, \"getElevation\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Polygon/Polygon.jsx\");reactHotLoader.register(setTooltipContent, \"setTooltipContent\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Polygon/Polygon.jsx\");reactHotLoader.register(getLayer, \"getLayer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Polygon/Polygon.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Polygon/Polygon.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Polygon/Polygon.jsx\");reactHotLoader.register(DeckGLPolygon, \"DeckGLPolygon\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Polygon/Polygon.jsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Polygon/Polygon.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","t","PropTypes","PolygonLayer","AnimatableDeckGLContainer","Legend","TooltipRow","getBuckets","getBreakPointColorScaler","commonLayerProps","getPlaySliderParams","sandboxedEval","getPointsFromPolygon","fitViewport","DOUBLE_CLICK_THRESHOLD","getElevation","d","colorScaler","elevation","setTooltipContent","formData","o","metricLabel","metric","label","object","name","line_column","getLayer","payload","onAddFilter","setTooltip","selected","onSelect","filters","fd","fc","fill_color_picker","sc","stroke_color_picker","data","features","forEach","f","filter","x","js_data_mutator","jsFnMutator","accessor","baseColorScaler","r","g","b","a","baseColor","length","tooltipContentGenerator","line_type","undefined","id","slice_id","pickable","filled","stroked","getPolygon","getFillColor","getLineColor","getLineWidth","line_width","extruded","elevationScale","multiplier","fp64","propTypes","isRequired","setControlValue","func","viewport","width","number","height","defaultProps","DeckGLPolygon","Component","constructor","props","containerRef","createRef","tooltip","current","state","getDerivedStateFromProps","getLayers","bind","onValuesChange","form_data","timestamps","map","__timestamp","granularity","time_grain_sqla","start","end","getStep","values","disabled","autozoom","points","flatMap","lastClick","polygon","now","Date","doubleClick","splice","toggle_polygons","i","indexOf","push","setState","table_filter","Array","isArray","layer","render","buckets","position","mapboxApiKey","mapbox_style","onViewportChange","legend_position","legend_format"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Polygon/Polygon.jsx"],"sourcesContent":["/* eslint-disable react/sort-prop-types */\n/* eslint-disable react/jsx-handler-names */\n/* eslint-disable react/no-access-state-in-setstate */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\n\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport PropTypes from 'prop-types';\n\nimport { PolygonLayer } from 'deck.gl';\n\nimport AnimatableDeckGLContainer from '../../AnimatableDeckGLContainer';\nimport Legend from '../../components/Legend';\nimport TooltipRow from '../../TooltipRow';\nimport { getBuckets, getBreakPointColorScaler } from '../../utils';\n\nimport { commonLayerProps } from '../common';\nimport { getPlaySliderParams } from '../../utils/time';\nimport sandboxedEval from '../../utils/sandbox';\n// eslint-disable-next-line import/extensions\nimport getPointsFromPolygon from '../../utils/getPointsFromPolygon';\n// eslint-disable-next-line import/extensions\nimport fitViewport from '../../utils/fitViewport';\n\nconst DOUBLE_CLICK_THRESHOLD = 250; // milliseconds\n\nfunction getElevation(d, colorScaler) {\n  /* in deck.gl 5.3.4 (used in Superset as of 2018-10-24), if a polygon has\n   * opacity zero it will make everything behind it have opacity zero,\n   * effectively showing the map layer no matter what other polygons are\n   * behind it.\n   */\n  return colorScaler(d)[3] === 0 ? 0 : d.elevation;\n}\n\nfunction setTooltipContent(formData) {\n  return o => {\n    const metricLabel = formData.metric.label || formData.metric;\n\n    return (\n      <div className=\"deckgl-tooltip\">\n        {o.object.name && (\n          <TooltipRow\n            // eslint-disable-next-line prefer-template\n            label={t('name') + ': '}\n            value={`${o.object.name}`}\n          />\n        )}\n        {o.object[formData.line_column] && (\n          <TooltipRow\n            label={`${formData.line_column}: `}\n            value={`${o.object[formData.line_column]}`}\n          />\n        )}\n        {formData.metric && (\n          <TooltipRow\n            label={`${metricLabel}: `}\n            value={`${o.object[metricLabel]}`}\n          />\n        )}\n      </div>\n    );\n  };\n}\n\nexport function getLayer(\n  formData,\n  payload,\n  onAddFilter,\n  setTooltip,\n  selected,\n  onSelect,\n  filters,\n) {\n  const fd = formData;\n  const fc = fd.fill_color_picker;\n  const sc = fd.stroke_color_picker;\n  let data = [...payload.data.features];\n\n  if (filters != null) {\n    filters.forEach(f => {\n      data = data.filter(x => f(x));\n    });\n  }\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n\n  const metricLabel = fd.metric ? fd.metric.label || fd.metric : null;\n  const accessor = d => d[metricLabel];\n  // base color for the polygons\n  const baseColorScaler =\n    fd.metric === null\n      ? () => [fc.r, fc.g, fc.b, 255 * fc.a]\n      : getBreakPointColorScaler(fd, data, accessor);\n\n  // when polygons are selected, reduce the opacity of non-selected polygons\n  const colorScaler = d => {\n    const baseColor = baseColorScaler(d);\n    if (selected.length > 0 && !selected.includes(d[fd.line_column])) {\n      baseColor[3] /= 2;\n    }\n\n    return baseColor;\n  };\n\n  const tooltipContentGenerator =\n    fd.line_column &&\n    fd.metric &&\n    ['json', 'geohash', 'zipcode'].includes(fd.line_type)\n      ? setTooltipContent(fd)\n      : undefined;\n\n  return new PolygonLayer({\n    id: `path-layer-${fd.slice_id}`,\n    data,\n    pickable: true,\n    filled: fd.filled,\n    stroked: fd.stroked,\n    getPolygon: getPointsFromPolygon,\n    getFillColor: colorScaler,\n    getLineColor: [sc.r, sc.g, sc.b, 255 * sc.a],\n    getLineWidth: fd.line_width,\n    extruded: fd.extruded,\n    getElevation: d => getElevation(d, colorScaler),\n    elevationScale: fd.multiplier,\n    fp64: true,\n    ...commonLayerProps(fd, setTooltip, tooltipContentGenerator, onSelect),\n  });\n}\n\nconst propTypes = {\n  formData: PropTypes.object.isRequired,\n  payload: PropTypes.object.isRequired,\n  setControlValue: PropTypes.func.isRequired,\n  viewport: PropTypes.object.isRequired,\n  onAddFilter: PropTypes.func,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n};\n\nconst defaultProps = {\n  onAddFilter() {},\n};\n\nclass DeckGLPolygon extends React.Component {\n  containerRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = DeckGLPolygon.getDerivedStateFromProps(props);\n\n    this.getLayers = this.getLayers.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onValuesChange = this.onValuesChange.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { width, height, formData, payload } = props;\n\n    // the state is computed only from the payload; if it hasn't changed, do\n    // not recompute state since this would reset selections and/or the play\n    // slider position due to changes in form controls\n    if (state && payload.form_data === state.formData) {\n      return null;\n    }\n\n    const features = payload.data.features || [];\n    const timestamps = features.map(f => f.__timestamp);\n\n    // the granularity has to be read from the payload form_data, not the\n    // props formData which comes from the instantaneous controls state\n    const granularity =\n      payload.form_data.time_grain_sqla ||\n      payload.form_data.granularity ||\n      'P1D';\n\n    const { start, end, getStep, values, disabled } = getPlaySliderParams(\n      timestamps,\n      granularity,\n    );\n\n    let { viewport } = props;\n    if (formData.autozoom) {\n      viewport = fitViewport(viewport, {\n        width,\n        height,\n        points: features.flatMap(getPointsFromPolygon),\n      });\n    }\n\n    return {\n      start,\n      end,\n      getStep,\n      values,\n      disabled,\n      viewport,\n      selected: [],\n      lastClick: 0,\n      formData: payload.form_data,\n    };\n  }\n\n  onSelect(polygon) {\n    const { formData, onAddFilter } = this.props;\n\n    const now = new Date();\n    const doubleClick = now - this.state.lastClick <= DOUBLE_CLICK_THRESHOLD;\n\n    // toggle selected polygons\n    const selected = [...this.state.selected];\n    if (doubleClick) {\n      selected.splice(0, selected.length, polygon);\n    } else if (formData.toggle_polygons) {\n      const i = selected.indexOf(polygon);\n      if (i === -1) {\n        selected.push(polygon);\n      } else {\n        selected.splice(i, 1);\n      }\n    } else {\n      selected.splice(0, 1, polygon);\n    }\n\n    this.setState({ selected, lastClick: now });\n    if (formData.table_filter) {\n      onAddFilter(formData.line_column, selected, false, true);\n    }\n  }\n\n  onValuesChange(values) {\n    this.setState({\n      values: Array.isArray(values)\n        ? values\n        : [values, values + this.state.getStep(values)],\n    });\n  }\n\n  getLayers(values) {\n    if (this.props.payload.data.features === undefined) {\n      return [];\n    }\n\n    const filters = [];\n\n    // time filter\n    if (values[0] === values[1] || values[1] === this.end) {\n      filters.push(\n        d => d.__timestamp >= values[0] && d.__timestamp <= values[1],\n      );\n    } else {\n      filters.push(\n        d => d.__timestamp >= values[0] && d.__timestamp < values[1],\n      );\n    }\n\n    const layer = getLayer(\n      this.props.formData,\n      this.props.payload,\n      this.props.onAddFilter,\n      this.setTooltip,\n      this.state.selected,\n      this.onSelect,\n      filters,\n    );\n\n    return [layer];\n  }\n\n  setTooltip = tooltip => {\n    const { current } = this.containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  };\n\n  render() {\n    const { payload, formData, setControlValue } = this.props;\n    const { start, end, getStep, values, disabled, viewport } = this.state;\n\n    const fd = formData;\n    const metricLabel = fd.metric ? fd.metric.label || fd.metric : null;\n    const accessor = d => d[metricLabel];\n\n    const buckets = getBuckets(formData, payload.data.features, accessor);\n\n    return (\n      <div style={{ position: 'relative' }}>\n        <AnimatableDeckGLContainer\n          ref={this.containerRef}\n          aggregation\n          getLayers={this.getLayers}\n          start={start}\n          end={end}\n          getStep={getStep}\n          values={values}\n          disabled={disabled}\n          viewport={viewport}\n          width={this.props.width}\n          height={this.props.height}\n          mapboxApiAccessToken={payload.data.mapboxApiKey}\n          mapStyle={formData.mapbox_style}\n          setControlValue={setControlValue}\n          onValuesChange={this.onValuesChange}\n          onViewportChange={this.onViewportChange}\n        >\n          {formData.metric !== null && (\n            <Legend\n              categories={buckets}\n              position={formData.legend_position}\n              format={formData.legend_format}\n            />\n          )}\n        </AnimatableDeckGLContainer>\n      </div>\n    );\n  }\n}\n\nDeckGLPolygon.propTypes = propTypes;\nDeckGLPolygon.defaultProps = defaultProps;\n\nexport default DeckGLPolygon;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}