{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-continue, no-bitwise */\n/* eslint-disable react/jsx-sort-default-props */\n/* eslint-disable react/sort-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { extent as d3Extent } from 'd3-array';\nimport { scaleLinear } from 'd3-scale';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nexport const DEFAULT_COLORS = [\n'#313695',\n'#4575b4',\n'#74add1',\n'#abd9e9',\n'#fee090',\n'#fdae61',\n'#f46d43',\n'#d73027'];\n\n\nconst propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  data: PropTypes.arrayOf(\n  PropTypes.shape({\n    y: PropTypes.number })).\n\n  isRequired,\n  bands: PropTypes.number,\n  colors: PropTypes.arrayOf(PropTypes.string),\n  colorScale: PropTypes.string,\n  mode: PropTypes.string,\n  offsetX: PropTypes.number,\n  title: PropTypes.string,\n  yDomain: PropTypes.arrayOf(PropTypes.number) };\n\n\nconst defaultProps = {\n  className: '',\n  width: 800,\n  height: 20,\n  bands: DEFAULT_COLORS.length >> 1,\n  colors: DEFAULT_COLORS,\n  colorScale: 'series',\n  mode: 'offset',\n  offsetX: 0,\n  title: '',\n  yDomain: undefined };\n\n\nclass HorizonRow extends React.PureComponent {\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  componentDidUpdate() {\n    this.drawChart();\n  }\n\n  componentWillUnmount() {\n    this.canvas = null;\n  }\n\n  drawChart() {\n    if (this.canvas) {\n      const {\n        data: rawData,\n        yDomain,\n        width,\n        height,\n        bands,\n        colors,\n        colorScale,\n        offsetX,\n        mode } =\n      this.props;\n\n      const data =\n      colorScale === 'change' ?\n      rawData.map((d) => ({ ...d, y: d.y - rawData[0].y })) :\n      rawData;\n\n      const context = this.canvas.getContext('2d');\n      context.imageSmoothingEnabled = false;\n      context.clearRect(0, 0, width, height);\n      // Reset transform\n      context.setTransform(1, 0, 0, 1, 0, 0);\n      context.translate(0.5, 0.5);\n\n      const step = width / data.length;\n      // the data frame currently being shown:\n      const startIndex = Math.floor(Math.max(0, -(offsetX / step)));\n      const endIndex = Math.floor(\n      Math.min(data.length, startIndex + width / step));\n\n\n      // skip drawing if there's no data to be drawn\n      if (startIndex > data.length) {\n        return;\n      }\n\n      // Create y-scale\n      const [min, max] = yDomain || d3Extent(data, (d) => d.y);\n      const y = scaleLinear().\n      domain([0, Math.max(-min, max)]).\n      range([0, height]);\n\n      // we are drawing positive & negative bands separately to avoid mutating canvas state\n      // http://www.html5rocks.com/en/tutorials/canvas/performance/\n      let hasNegative = false;\n      // draw positive bands\n      let value;\n      let bExtents;\n      for (let b = 0; b < bands; b += 1) {\n        context.fillStyle = colors[bands + b];\n\n        // Adjust the range based on the current band index.\n        bExtents = (b + 1 - bands) * height;\n        y.range([bands * height + bExtents, bExtents]);\n\n        // only the current data frame is being drawn i.e. what's visible:\n        for (let i = startIndex; i < endIndex; i += 1) {\n          value = data[i].y;\n          if (value <= 0) {\n            hasNegative = true;\n            continue;\n          }\n          if (value !== undefined) {\n            context.fillRect(\n            offsetX + i * step,\n            y(value),\n            step + 1,\n            y(0) - y(value));\n\n          }\n        }\n      }\n\n      // draw negative bands\n      if (hasNegative) {\n        // mirror the negative bands, by flipping the canvas\n        if (mode === 'offset') {\n          context.translate(0, height);\n          context.scale(1, -1);\n        }\n\n        for (let b = 0; b < bands; b += 1) {\n          context.fillStyle = colors[bands - b - 1];\n\n          // Adjust the range based on the current band index.\n          bExtents = (b + 1 - bands) * height;\n          y.range([bands * height + bExtents, bExtents]);\n\n          // only the current data frame is being drawn i.e. what's visible:\n          for (let ii = startIndex; ii < endIndex; ii += 1) {\n            value = data[ii].y;\n            if (value >= 0) {\n              continue;\n            }\n            context.fillRect(\n            offsetX + ii * step,\n            y(-value),\n            step + 1,\n            y(0) - y(-value));\n\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    const { className, title, width, height } = this.props;\n\n    return (\n      ___EmotionJSX(\"div\", { className: `horizon-row ${className}` },\n      ___EmotionJSX(\"span\", { className: \"title\" }, title),\n      ___EmotionJSX(\"canvas\", {\n        ref: (c) => {\n          this.canvas = c;\n        },\n        width: width,\n        height: height })));\n\n\n\n  }}\n\n\nHorizonRow.propTypes = propTypes;\nHorizonRow.defaultProps = defaultProps;\n\nexport default HorizonRow;","map":{"version":3,"names":["React","PropTypes","extent","d3Extent","scaleLinear","DEFAULT_COLORS","propTypes","className","string","width","number","height","data","arrayOf","shape","y","isRequired","bands","colors","colorScale","mode","offsetX","title","yDomain","defaultProps","length","undefined","HorizonRow","PureComponent","componentDidMount","drawChart","componentDidUpdate","componentWillUnmount","canvas","rawData","props","map","d","context","getContext","imageSmoothingEnabled","clearRect","setTransform","translate","step","startIndex","Math","floor","max","endIndex","min","domain","range","hasNegative","value","bExtents","b","fillStyle","i","fillRect","scale","ii","render","c"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/legacy-plugin-chart-horizon/src/HorizonRow.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-continue, no-bitwise */\n/* eslint-disable react/jsx-sort-default-props */\n/* eslint-disable react/sort-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { extent as d3Extent } from 'd3-array';\nimport { scaleLinear } from 'd3-scale';\n\nexport const DEFAULT_COLORS = [\n  '#313695',\n  '#4575b4',\n  '#74add1',\n  '#abd9e9',\n  '#fee090',\n  '#fdae61',\n  '#f46d43',\n  '#d73027',\n];\n\nconst propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      y: PropTypes.number,\n    }),\n  ).isRequired,\n  bands: PropTypes.number,\n  colors: PropTypes.arrayOf(PropTypes.string),\n  colorScale: PropTypes.string,\n  mode: PropTypes.string,\n  offsetX: PropTypes.number,\n  title: PropTypes.string,\n  yDomain: PropTypes.arrayOf(PropTypes.number),\n};\n\nconst defaultProps = {\n  className: '',\n  width: 800,\n  height: 20,\n  bands: DEFAULT_COLORS.length >> 1,\n  colors: DEFAULT_COLORS,\n  colorScale: 'series',\n  mode: 'offset',\n  offsetX: 0,\n  title: '',\n  yDomain: undefined,\n};\n\nclass HorizonRow extends React.PureComponent {\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  componentDidUpdate() {\n    this.drawChart();\n  }\n\n  componentWillUnmount() {\n    this.canvas = null;\n  }\n\n  drawChart() {\n    if (this.canvas) {\n      const {\n        data: rawData,\n        yDomain,\n        width,\n        height,\n        bands,\n        colors,\n        colorScale,\n        offsetX,\n        mode,\n      } = this.props;\n\n      const data =\n        colorScale === 'change'\n          ? rawData.map(d => ({ ...d, y: d.y - rawData[0].y }))\n          : rawData;\n\n      const context = this.canvas.getContext('2d');\n      context.imageSmoothingEnabled = false;\n      context.clearRect(0, 0, width, height);\n      // Reset transform\n      context.setTransform(1, 0, 0, 1, 0, 0);\n      context.translate(0.5, 0.5);\n\n      const step = width / data.length;\n      // the data frame currently being shown:\n      const startIndex = Math.floor(Math.max(0, -(offsetX / step)));\n      const endIndex = Math.floor(\n        Math.min(data.length, startIndex + width / step),\n      );\n\n      // skip drawing if there's no data to be drawn\n      if (startIndex > data.length) {\n        return;\n      }\n\n      // Create y-scale\n      const [min, max] = yDomain || d3Extent(data, d => d.y);\n      const y = scaleLinear()\n        .domain([0, Math.max(-min, max)])\n        .range([0, height]);\n\n      // we are drawing positive & negative bands separately to avoid mutating canvas state\n      // http://www.html5rocks.com/en/tutorials/canvas/performance/\n      let hasNegative = false;\n      // draw positive bands\n      let value;\n      let bExtents;\n      for (let b = 0; b < bands; b += 1) {\n        context.fillStyle = colors[bands + b];\n\n        // Adjust the range based on the current band index.\n        bExtents = (b + 1 - bands) * height;\n        y.range([bands * height + bExtents, bExtents]);\n\n        // only the current data frame is being drawn i.e. what's visible:\n        for (let i = startIndex; i < endIndex; i += 1) {\n          value = data[i].y;\n          if (value <= 0) {\n            hasNegative = true;\n            continue;\n          }\n          if (value !== undefined) {\n            context.fillRect(\n              offsetX + i * step,\n              y(value),\n              step + 1,\n              y(0) - y(value),\n            );\n          }\n        }\n      }\n\n      // draw negative bands\n      if (hasNegative) {\n        // mirror the negative bands, by flipping the canvas\n        if (mode === 'offset') {\n          context.translate(0, height);\n          context.scale(1, -1);\n        }\n\n        for (let b = 0; b < bands; b += 1) {\n          context.fillStyle = colors[bands - b - 1];\n\n          // Adjust the range based on the current band index.\n          bExtents = (b + 1 - bands) * height;\n          y.range([bands * height + bExtents, bExtents]);\n\n          // only the current data frame is being drawn i.e. what's visible:\n          for (let ii = startIndex; ii < endIndex; ii += 1) {\n            value = data[ii].y;\n            if (value >= 0) {\n              continue;\n            }\n            context.fillRect(\n              offsetX + ii * step,\n              y(-value),\n              step + 1,\n              y(0) - y(-value),\n            );\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    const { className, title, width, height } = this.props;\n\n    return (\n      <div className={`horizon-row ${className}`}>\n        <span className=\"title\">{title}</span>\n        <canvas\n          ref={c => {\n            this.canvas = c;\n          }}\n          width={width}\n          height={height}\n        />\n      </div>\n    );\n  }\n}\n\nHorizonRow.propTypes = propTypes;\nHorizonRow.defaultProps = defaultProps;\n\nexport default HorizonRow;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}