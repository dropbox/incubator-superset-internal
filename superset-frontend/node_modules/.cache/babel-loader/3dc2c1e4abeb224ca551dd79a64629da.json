{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { t, SupersetClient, makeApi, styled, getExtensionsRegistry } from '@superset-ui/core';\nimport moment from 'moment';\nimport ActionsBar from 'src/components/ListView/ActionsBar';\nimport FacePile from 'src/components/FacePile';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ListView, { FilterOperator } from 'src/components/ListView';\nimport SubMenu from 'src/features/home/SubMenu';\nimport { Switch } from 'src/components/Switch';\nimport { DATETIME_WITH_TIME_ZONE } from 'src/constants';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport AlertStatusIcon from 'src/features/alerts/components/AlertStatusIcon';\nimport RecipientIcon from 'src/features/alerts/components/RecipientIcon';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport DeleteModal from 'src/components/DeleteModal';\nimport LastUpdated from 'src/components/LastUpdated';\nimport { useListViewResource, useSingleViewResource } from 'src/views/CRUD/hooks';\nimport { createErrorHandler, createFetchRelated } from 'src/views/CRUD/utils';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport AlertReportModal from 'src/features/alerts/AlertReportModal';\nimport { AlertState } from 'src/features/alerts/types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst extensionsRegistry = getExtensionsRegistry();\nconst PAGE_SIZE = 25;\nconst AlertStateLabel = {\n  [AlertState.Success]: t('Success'),\n  [AlertState.Working]: t('Working'),\n  [AlertState.Error]: t('Error'),\n  [AlertState.Noop]: t('Not triggered'),\n  [AlertState.Grace]: t('On Grace') };\n\nconst deleteAlerts = makeApi({\n  requestType: 'rison',\n  method: 'DELETE',\n  endpoint: '/api/v1/report/' });\n\nconst RefreshContainer = styled.div`\n  width: 100%;\n  padding: 0 ${(_ref) => {let { theme } = _ref;return theme.gridUnit * 4;}}px\n    ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit * 3;}}px;\n  background-color: ${(_ref3) => {let { theme } = _ref3;return theme.colors.grayscale.light5;}};\n`;\nconst StyledHeaderWithIcon = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  > *:first-child {\n    margin-right: ${(_ref4) => {let { theme } = _ref4;return theme.gridUnit;}}px;\n  }\n`;\nconst HeaderExtension = extensionsRegistry.get('alertsreports.header.icon');\nfunction AlertList(_ref5) {let { addDangerToast, isReportEnabled = false, user, addSuccessToast } = _ref5;\n  const title = isReportEnabled ? t('report') : t('alert');\n  const titlePlural = isReportEnabled ? t('reports') : t('alerts');\n  const pathName = isReportEnabled ? 'Reports' : 'Alerts';\n  const initialFilters = useMemo(() => [\n  {\n    id: 'type',\n    operator: FilterOperator.equals,\n    value: isReportEnabled ? 'Report' : 'Alert' }],\n\n  [isReportEnabled]);\n  const { state: { loading, resourceCount: alertsCount, resourceCollection: alerts, bulkSelectEnabled, lastFetched }, hasPerm, fetchData, setResourceCollection, refreshData, toggleBulkSelect } = useListViewResource('report', t('reports'), addDangerToast, true, undefined, initialFilters);\n  const { updateResource } = useSingleViewResource('report', t('reports'), addDangerToast);\n  const [alertModalOpen, setAlertModalOpen] = useState(false);\n  const [currentAlert, setCurrentAlert] = useState(null);\n  const [currentAlertDeleting, setCurrentAlertDeleting] = useState(null);\n  // Actions\n  function handleAlertEdit(alert) {\n    setCurrentAlert(alert);\n    setAlertModalOpen(true);\n  }\n  const generateKey = () => `${new Date().getTime()}`;\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canCreate = hasPerm('can_write');\n  useEffect(() => {\n    if (bulkSelectEnabled && canDelete) {\n      toggleBulkSelect();\n    }\n  }, [isReportEnabled]);\n  const handleAlertDelete = (_ref6) => {let { id, name } = _ref6;\n    SupersetClient.delete({\n      endpoint: `/api/v1/report/${id}` }).\n    then(() => {\n      refreshData();\n      setCurrentAlertDeleting(null);\n      addSuccessToast(t('Deleted: %s', name));\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting %s: %s', name, errMsg))));\n  };\n  const handleBulkAlertDelete = async (alertsToDelete) => {\n    try {\n      const { message } = await deleteAlerts(alertsToDelete.map((_ref7) => {let { id } = _ref7;return id;}));\n      refreshData();\n      addSuccessToast(message);\n    }\n    catch (e) {\n      createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting the selected %s: %s', titlePlural, errMsg)))(e);\n    }\n  };\n  const initialSort = [{ id: 'name', desc: true }];\n  const toggleActive = useCallback((data, checked) => {\n    if (data != null && data.id) {\n      const update_id = data.id;\n      const original = [...alerts];\n      setResourceCollection(original.map((alert) => {\n        if ((alert == null ? void 0 : alert.id) === data.id) {\n          return {\n            ...alert,\n            active: checked };\n\n        }\n        return alert;\n      }));\n      updateResource(update_id, { active: checked }, false, false).\n      then().\n      catch(() => setResourceCollection(original));\n    }\n  }, [alerts, setResourceCollection, updateResource]);\n  const columns = useMemo(() => [\n  {\n    Cell: (_ref8) => {let { row: { original: { last_state: lastState } } } = _ref8;return ___EmotionJSX(AlertStatusIcon, { state: lastState, isReportEnabled: isReportEnabled });},\n    accessor: 'last_state',\n    size: 'xs',\n    disableSortBy: true },\n\n  {\n    Cell: (_ref9) => {let { row: { original: { last_eval_dttm: lastEvalDttm } } } = _ref9;return lastEvalDttm ?\n      moment.utc(lastEvalDttm).local().format(DATETIME_WITH_TIME_ZONE) :\n      '';},\n    accessor: 'last_eval_dttm',\n    Header: t('Last run'),\n    size: 'lg' },\n\n  {\n    accessor: 'name',\n    Header: t('Name'),\n    size: 'xl' },\n\n  {\n    Header: t('Schedule'),\n    accessor: 'crontab_humanized',\n    size: 'xl',\n    Cell: (_ref10) => {let { row: { original: { crontab_humanized = '', timezone } } } = _ref10;return ___EmotionJSX(Tooltip, { title: `${crontab_humanized} (${timezone})`, placement: \"topLeft\" },\n      ___EmotionJSX(\"span\", null, `${crontab_humanized} (${timezone})`));} },\n\n\n  {\n    Cell: (_ref11) => {let { row: { original: { recipients } } } = _ref11;return recipients.map((r) => ___EmotionJSX(RecipientIcon, { key: r.id, type: r.type }));},\n    accessor: 'recipients',\n    Header: t('Notification method'),\n    disableSortBy: true,\n    size: 'xl' },\n\n  {\n    Cell: (_ref12) => {let { row: { original: { created_by } } } = _ref12;return created_by ? `${created_by.first_name} ${created_by.last_name}` : '';},\n    Header: t('Created by'),\n    id: 'created_by',\n    disableSortBy: true,\n    size: 'xl' },\n\n  {\n    Cell: (_ref13) => {let { row: { original: { owners = [] } } } = _ref13;return ___EmotionJSX(FacePile, { users: owners });},\n    Header: t('Owners'),\n    id: 'owners',\n    disableSortBy: true,\n    size: 'xl' },\n\n  {\n    Cell: (_ref14) => {let { row: { original: { changed_on_delta_humanized: changedOn } } } = _ref14;return ___EmotionJSX(\"span\", { className: \"no-wrap\" }, changedOn);},\n    Header: t('Modified'),\n    accessor: 'changed_on_delta_humanized',\n    size: 'xl' },\n\n  {\n    Cell: (_ref15) => {var _context;let { row: { original } } = _ref15;\n      const allowEdit = _includesInstanceProperty(_context = original.owners.map((o) => o.id)).call(_context, user.userId) ||\n      isUserAdmin(user);\n      return ___EmotionJSX(Switch, { disabled: !allowEdit, \"data-test\": \"toggle-active\", checked: original.active, onClick: (checked) => toggleActive(original, checked), size: \"small\" });\n    },\n    Header: t('Active'),\n    accessor: 'active',\n    id: 'active',\n    size: 'xl' },\n\n  {\n    Cell: __signature__((_ref16) => {var _context2;let { row: { original } } = _ref16;\n      const history = useHistory();\n      const handleEdit = () => handleAlertEdit(original);\n      const handleDelete = () => setCurrentAlertDeleting(original);\n      const handleGotoExecutionLog = () => history.push(`/${original.type.toLowerCase()}/${original.id}/log`);\n      const allowEdit = _includesInstanceProperty(_context2 = original.owners.map((o) => o.id)).call(_context2, user.userId) ||\n      isUserAdmin(user);\n      const actions = [\n      canEdit ?\n      {\n        label: 'execution-log-action',\n        tooltip: t('Execution log'),\n        placement: 'bottom',\n        icon: 'Note',\n        onClick: handleGotoExecutionLog } :\n\n      null,\n      canEdit ?\n      {\n        label: allowEdit ? 'edit-action' : 'preview-action',\n        tooltip: allowEdit ? t('Edit') : t('View'),\n        placement: 'bottom',\n        icon: allowEdit ? 'Edit' : 'Binoculars',\n        onClick: handleEdit } :\n\n      null,\n      allowEdit && canDelete ?\n      {\n        label: 'delete-action',\n        tooltip: t('Delete'),\n        placement: 'bottom',\n        icon: 'Trash',\n        onClick: handleDelete } :\n\n      null].\n      filter((item) => item !== null);\n      return ___EmotionJSX(ActionsBar, { actions: actions });\n    }, \"useHistory{history}\", () => [useHistory]),\n    Header: t('Actions'),\n    id: 'actions',\n    hidden: !canEdit && !canDelete,\n    disableSortBy: true,\n    size: 'xl' }],\n\n  [canDelete, canEdit, isReportEnabled, toggleActive]);\n  const subMenuButtons = [];\n  if (canCreate) {\n    subMenuButtons.push({\n      name: ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }), \" \", title),\n\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAlertEdit(null);\n      } });\n\n  }\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select-toggle' });\n\n  }\n  const emptyState = {\n    title: t('No %s yet', titlePlural),\n    image: 'filter-results.svg',\n    buttonAction: () => handleAlertEdit(null),\n    buttonText: canCreate ? ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }), \" \", title, ' ') :\n    null };\n\n  const filters = useMemo(() => [\n  {\n    Header: t('Owner'),\n    key: 'owner',\n    id: 'owners',\n    input: 'select',\n    operator: FilterOperator.relationManyMany,\n    unfilteredLabel: t('All'),\n    fetchSelects: createFetchRelated('report', 'owners', createErrorHandler((errMsg) => t('An error occurred while fetching owners values: %s', errMsg)), user),\n    paginate: true },\n\n  {\n    Header: t('Created by'),\n    key: 'created_by',\n    id: 'created_by',\n    input: 'select',\n    operator: FilterOperator.relationOneMany,\n    unfilteredLabel: 'All',\n    fetchSelects: createFetchRelated('report', 'created_by', createErrorHandler((errMsg) => t('An error occurred while fetching created by values: %s', errMsg)), user),\n    paginate: true },\n\n  {\n    Header: t('Status'),\n    key: 'status',\n    id: 'last_state',\n    input: 'select',\n    operator: FilterOperator.equals,\n    unfilteredLabel: 'Any',\n    selects: [\n    {\n      label: AlertStateLabel[AlertState.Success],\n      value: AlertState.Success },\n\n    {\n      label: AlertStateLabel[AlertState.Working],\n      value: AlertState.Working },\n\n    { label: AlertStateLabel[AlertState.Error], value: AlertState.Error },\n    { label: AlertStateLabel[AlertState.Noop], value: AlertState.Noop },\n    { label: AlertStateLabel[AlertState.Grace], value: AlertState.Grace }] },\n\n\n  {\n    Header: t('Search'),\n    key: 'search',\n    id: 'name',\n    input: 'search',\n    operator: FilterOperator.contains }],\n\n  []);\n  const header = HeaderExtension ? ___EmotionJSX(StyledHeaderWithIcon, null,\n  ___EmotionJSX(\"div\", null, t('Alerts & reports')),\n  ___EmotionJSX(HeaderExtension, null)) :\n  t('Alerts & reports');\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, { activeChild: pathName, name: header, tabs: [\n    {\n      name: 'Alerts',\n      label: t('Alerts'),\n      url: '/alert/list/',\n      usesRouter: true,\n      'data-test': 'alert-list' },\n\n    {\n      name: 'Reports',\n      label: t('Reports'),\n      url: '/report/list/',\n      usesRouter: true,\n      'data-test': 'report-list' }],\n\n    buttons: subMenuButtons },\n  ___EmotionJSX(RefreshContainer, null,\n  ___EmotionJSX(LastUpdated, { updatedAt: lastFetched, update: () => refreshData() }))),\n\n\n  ___EmotionJSX(AlertReportModal, { alert: currentAlert, addDangerToast: addDangerToast, layer: currentAlert, onHide: () => {\n      setAlertModalOpen(false);\n      setCurrentAlert(null);\n      refreshData();\n    }, show: alertModalOpen, isReport: isReportEnabled, key: (currentAlert == null ? void 0 : currentAlert.id) || generateKey() }),\n  currentAlertDeleting && ___EmotionJSX(DeleteModal, { description: t('This action will permanently delete %s.', currentAlertDeleting.name), onConfirm: () => {\n      if (currentAlertDeleting) {\n        handleAlertDelete(currentAlertDeleting);\n      }\n    }, onHide: () => setCurrentAlertDeleting(null), open: true, title: t('Delete %s?', title) }),\n  ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: t('Are you sure you want to delete the selected %s?', titlePlural), onConfirm: handleBulkAlertDelete },\n  (confirmDelete) => {\n    const bulkActions = canDelete ?\n    [\n    {\n      key: 'delete',\n      name: t('Delete'),\n      onSelect: confirmDelete,\n      type: 'danger' }] :\n\n\n    [];\n    return ___EmotionJSX(ListView, { className: \"alerts-list-view\", columns: columns, count: alertsCount, data: alerts, emptyState: emptyState, fetchData: fetchData, filters: filters, initialSort: initialSort, loading: loading, bulkActions: bulkActions, bulkSelectEnabled: bulkSelectEnabled, disableBulkSelect: toggleBulkSelect, pageSize: PAGE_SIZE });\n  }));\n\n\n}__signature__(AlertList, \"useMemo{initialFilters}\\nuseListViewResource{{ state: { loading, resourceCount: alertsCount, resourceCollection: alerts, bulkSelectEnabled, lastFetched, }, hasPerm, fetchData, setResourceCollection, refreshData, toggleBulkSelect, }}\\nuseSingleViewResource{{ updateResource }}\\nuseState{[alertModalOpen, setAlertModalOpen](false)}\\nuseState{[currentAlert, setCurrentAlert](null)}\\nuseState{[currentAlertDeleting, setCurrentAlertDeleting](null)}\\nuseEffect{}\\nuseCallback{toggleActive}\\nuseMemo{columns}\\nuseMemo{filters}\", () => [useListViewResource, useSingleViewResource]);const _default =\nwithToasts(AlertList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(extensionsRegistry, \"extensionsRegistry\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/AlertReportList/index.tsx\");reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/AlertReportList/index.tsx\");reactHotLoader.register(AlertStateLabel, \"AlertStateLabel\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/AlertReportList/index.tsx\");reactHotLoader.register(deleteAlerts, \"deleteAlerts\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/AlertReportList/index.tsx\");reactHotLoader.register(RefreshContainer, \"RefreshContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/AlertReportList/index.tsx\");reactHotLoader.register(StyledHeaderWithIcon, \"StyledHeaderWithIcon\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/AlertReportList/index.tsx\");reactHotLoader.register(HeaderExtension, \"HeaderExtension\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/AlertReportList/index.tsx\");reactHotLoader.register(AlertList, \"AlertList\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/AlertReportList/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/AlertReportList/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useState","useMemo","useEffect","useCallback","useHistory","t","SupersetClient","makeApi","styled","getExtensionsRegistry","moment","ActionsBar","FacePile","Tooltip","ListView","FilterOperator","SubMenu","Switch","DATETIME_WITH_TIME_ZONE","withToasts","AlertStatusIcon","RecipientIcon","ConfirmStatusChange","DeleteModal","LastUpdated","useListViewResource","useSingleViewResource","createErrorHandler","createFetchRelated","isUserAdmin","AlertReportModal","AlertState","extensionsRegistry","PAGE_SIZE","AlertStateLabel","Success","Working","Error","Noop","Grace","deleteAlerts","requestType","method","endpoint","RefreshContainer","div","theme","gridUnit","colors","grayscale","light5","StyledHeaderWithIcon","HeaderExtension","get","AlertList","addDangerToast","isReportEnabled","user","addSuccessToast","title","titlePlural","pathName","initialFilters","id","operator","equals","value","state","loading","resourceCount","alertsCount","resourceCollection","alerts","bulkSelectEnabled","lastFetched","hasPerm","fetchData","setResourceCollection","refreshData","toggleBulkSelect","undefined","updateResource","alertModalOpen","setAlertModalOpen","currentAlert","setCurrentAlert","currentAlertDeleting","setCurrentAlertDeleting","handleAlertEdit","alert","generateKey","Date","getTime","canEdit","canDelete","canCreate","handleAlertDelete","name","delete","then","errMsg","handleBulkAlertDelete","alertsToDelete","message","map","e","initialSort","desc","toggleActive","data","checked","update_id","original","active","catch","columns","Cell","row","last_state","lastState","accessor","size","disableSortBy","last_eval_dttm","lastEvalDttm","utc","local","format","Header","crontab_humanized","timezone","recipients","r","type","created_by","first_name","last_name","owners","changed_on_delta_humanized","changedOn","allowEdit","o","userId","history","handleEdit","handleDelete","handleGotoExecutionLog","push","toLowerCase","actions","label","tooltip","placement","icon","onClick","filter","item","hidden","subMenuButtons","buttonStyle","emptyState","image","buttonAction","buttonText","filters","key","input","relationManyMany","unfilteredLabel","fetchSelects","paginate","relationOneMany","selects","contains","header","url","usesRouter","bulkActions","onSelect","confirmDelete"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/AlertReportList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  t,\n  SupersetClient,\n  makeApi,\n  styled,\n  getExtensionsRegistry,\n} from '@superset-ui/core';\nimport moment from 'moment';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport FacePile from 'src/components/FacePile';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ListView, {\n  FilterOperator,\n  Filters,\n  ListViewProps,\n} from 'src/components/ListView';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport { Switch } from 'src/components/Switch';\nimport { DATETIME_WITH_TIME_ZONE } from 'src/constants';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport AlertStatusIcon from 'src/features/alerts/components/AlertStatusIcon';\nimport RecipientIcon from 'src/features/alerts/components/RecipientIcon';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport DeleteModal from 'src/components/DeleteModal';\nimport LastUpdated from 'src/components/LastUpdated';\nimport {\n  useListViewResource,\n  useSingleViewResource,\n} from 'src/views/CRUD/hooks';\nimport { createErrorHandler, createFetchRelated } from 'src/views/CRUD/utils';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport Owner from 'src/types/Owner';\nimport AlertReportModal from 'src/features/alerts/AlertReportModal';\nimport { AlertObject, AlertState } from 'src/features/alerts/types';\n\nconst extensionsRegistry = getExtensionsRegistry();\n\nconst PAGE_SIZE = 25;\n\nconst AlertStateLabel: Record<AlertState, string> = {\n  [AlertState.Success]: t('Success'),\n  [AlertState.Working]: t('Working'),\n  [AlertState.Error]: t('Error'),\n  [AlertState.Noop]: t('Not triggered'),\n  [AlertState.Grace]: t('On Grace'),\n};\n\ninterface AlertListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  isReportEnabled: boolean;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\nconst deleteAlerts = makeApi<number[], { message: string }>({\n  requestType: 'rison',\n  method: 'DELETE',\n  endpoint: '/api/v1/report/',\n});\n\nconst RefreshContainer = styled.div`\n  width: 100%;\n  padding: 0 ${({ theme }) => theme.gridUnit * 4}px\n    ${({ theme }) => theme.gridUnit * 3}px;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n`;\n\nconst StyledHeaderWithIcon = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  > *:first-child {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst HeaderExtension = extensionsRegistry.get('alertsreports.header.icon');\n\nfunction AlertList({\n  addDangerToast,\n  isReportEnabled = false,\n  user,\n  addSuccessToast,\n}: AlertListProps) {\n  const title = isReportEnabled ? t('report') : t('alert');\n  const titlePlural = isReportEnabled ? t('reports') : t('alerts');\n  const pathName = isReportEnabled ? 'Reports' : 'Alerts';\n  const initialFilters = useMemo(\n    () => [\n      {\n        id: 'type',\n        operator: FilterOperator.equals,\n        value: isReportEnabled ? 'Report' : 'Alert',\n      },\n    ],\n    [isReportEnabled],\n  );\n  const {\n    state: {\n      loading,\n      resourceCount: alertsCount,\n      resourceCollection: alerts,\n      bulkSelectEnabled,\n      lastFetched,\n    },\n    hasPerm,\n    fetchData,\n    setResourceCollection,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<AlertObject>(\n    'report',\n    t('reports'),\n    addDangerToast,\n    true,\n    undefined,\n    initialFilters,\n  );\n\n  const { updateResource } = useSingleViewResource<Partial<AlertObject>>(\n    'report',\n    t('reports'),\n    addDangerToast,\n  );\n\n  const [alertModalOpen, setAlertModalOpen] = useState<boolean>(false);\n  const [currentAlert, setCurrentAlert] = useState<Partial<AlertObject> | null>(\n    null,\n  );\n  const [currentAlertDeleting, setCurrentAlertDeleting] =\n    useState<AlertObject | null>(null);\n\n  // Actions\n  function handleAlertEdit(alert: AlertObject | null) {\n    setCurrentAlert(alert);\n    setAlertModalOpen(true);\n  }\n\n  const generateKey = () => `${new Date().getTime()}`;\n\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canCreate = hasPerm('can_write');\n\n  useEffect(() => {\n    if (bulkSelectEnabled && canDelete) {\n      toggleBulkSelect();\n    }\n  }, [isReportEnabled]);\n\n  const handleAlertDelete = ({ id, name }: AlertObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/report/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setCurrentAlertDeleting(null);\n        addSuccessToast(t('Deleted: %s', name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', name, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkAlertDelete = async (alertsToDelete: AlertObject[]) => {\n    try {\n      const { message } = await deleteAlerts(\n        alertsToDelete.map(({ id }) => id),\n      );\n      refreshData();\n      addSuccessToast(message);\n    } catch (e) {\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t(\n            'There was an issue deleting the selected %s: %s',\n            titlePlural,\n            errMsg,\n          ),\n        ),\n      )(e);\n    }\n  };\n\n  const initialSort = [{ id: 'name', desc: true }];\n\n  const toggleActive = useCallback(\n    (data: AlertObject, checked: boolean) => {\n      if (data?.id) {\n        const update_id = data.id;\n        const original = [...alerts];\n\n        setResourceCollection(\n          original.map(alert => {\n            if (alert?.id === data.id) {\n              return {\n                ...alert,\n                active: checked,\n              };\n            }\n\n            return alert;\n          }),\n        );\n\n        updateResource(update_id, { active: checked }, false, false)\n          .then()\n          .catch(() => setResourceCollection(original));\n      }\n    },\n    [alerts, setResourceCollection, updateResource],\n  );\n\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { last_state: lastState },\n          },\n        }: any) => (\n          <AlertStatusIcon\n            state={lastState}\n            isReportEnabled={isReportEnabled}\n          />\n        ),\n        accessor: 'last_state',\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { last_eval_dttm: lastEvalDttm },\n          },\n        }: any) =>\n          lastEvalDttm\n            ? moment.utc(lastEvalDttm).local().format(DATETIME_WITH_TIME_ZONE)\n            : '',\n        accessor: 'last_eval_dttm',\n        Header: t('Last run'),\n        size: 'lg',\n      },\n      {\n        accessor: 'name',\n        Header: t('Name'),\n        size: 'xl',\n      },\n      {\n        Header: t('Schedule'),\n        accessor: 'crontab_humanized',\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { crontab_humanized = '', timezone },\n          },\n        }: any) => (\n          <Tooltip\n            title={`${crontab_humanized} (${timezone})`}\n            placement=\"topLeft\"\n          >\n            <span>{`${crontab_humanized} (${timezone})`}</span>\n          </Tooltip>\n        ),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { recipients },\n          },\n        }: any) =>\n          recipients.map((r: any) => (\n            <RecipientIcon key={r.id} type={r.type} />\n          )),\n        accessor: 'recipients',\n        Header: t('Notification method'),\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_by },\n          },\n        }: any) =>\n          created_by ? `${created_by.first_name} ${created_by.last_name}` : '',\n        Header: t('Created by'),\n        id: 'created_by',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { owners = [] },\n          },\n        }: any) => <FacePile users={owners} />,\n        Header: t('Owners'),\n        id: 'owners',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { changed_on_delta_humanized: changedOn },\n          },\n        }: any) => <span className=\"no-wrap\">{changedOn}</span>,\n        Header: t('Modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const allowEdit =\n            original.owners.map((o: Owner) => o.id).includes(user.userId) ||\n            isUserAdmin(user);\n\n          return (\n            <Switch\n              disabled={!allowEdit}\n              data-test=\"toggle-active\"\n              checked={original.active}\n              onClick={(checked: boolean) => toggleActive(original, checked)}\n              size=\"small\"\n            />\n          );\n        },\n        Header: t('Active'),\n        accessor: 'active',\n        id: 'active',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const history = useHistory();\n          const handleEdit = () => handleAlertEdit(original);\n          const handleDelete = () => setCurrentAlertDeleting(original);\n          const handleGotoExecutionLog = () =>\n            history.push(`/${original.type.toLowerCase()}/${original.id}/log`);\n\n          const allowEdit =\n            original.owners.map((o: Owner) => o.id).includes(user.userId) ||\n            isUserAdmin(user);\n\n          const actions = [\n            canEdit\n              ? {\n                  label: 'execution-log-action',\n                  tooltip: t('Execution log'),\n                  placement: 'bottom',\n                  icon: 'Note',\n                  onClick: handleGotoExecutionLog,\n                }\n              : null,\n            canEdit\n              ? {\n                  label: allowEdit ? 'edit-action' : 'preview-action',\n                  tooltip: allowEdit ? t('Edit') : t('View'),\n                  placement: 'bottom',\n                  icon: allowEdit ? 'Edit' : 'Binoculars',\n                  onClick: handleEdit,\n                }\n              : null,\n            allowEdit && canDelete\n              ? {\n                  label: 'delete-action',\n                  tooltip: t('Delete'),\n                  placement: 'bottom',\n                  icon: 'Trash',\n                  onClick: handleDelete,\n                }\n              : null,\n          ].filter(item => item !== null);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        hidden: !canEdit && !canDelete,\n        disableSortBy: true,\n        size: 'xl',\n      },\n    ],\n    [canDelete, canEdit, isReportEnabled, toggleActive],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {title}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAlertEdit(null);\n      },\n    });\n  }\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select-toggle',\n    });\n  }\n\n  const emptyState = {\n    title: t('No %s yet', titlePlural),\n    image: 'filter-results.svg',\n    buttonAction: () => handleAlertEdit(null),\n    buttonText: canCreate ? (\n      <>\n        <i className=\"fa fa-plus\" /> {title}{' '}\n      </>\n    ) : null,\n  };\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Owner'),\n        key: 'owner',\n        id: 'owners',\n        input: 'select',\n        operator: FilterOperator.relationManyMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'report',\n          'owners',\n          createErrorHandler(errMsg =>\n            t('An error occurred while fetching owners values: %s', errMsg),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Created by'),\n        key: 'created_by',\n        id: 'created_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'report',\n          'created_by',\n          createErrorHandler(errMsg =>\n            t('An error occurred while fetching created by values: %s', errMsg),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Status'),\n        key: 'status',\n        id: 'last_state',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: 'Any',\n        selects: [\n          {\n            label: AlertStateLabel[AlertState.Success],\n            value: AlertState.Success,\n          },\n          {\n            label: AlertStateLabel[AlertState.Working],\n            value: AlertState.Working,\n          },\n          { label: AlertStateLabel[AlertState.Error], value: AlertState.Error },\n          { label: AlertStateLabel[AlertState.Noop], value: AlertState.Noop },\n          { label: AlertStateLabel[AlertState.Grace], value: AlertState.Grace },\n        ],\n      },\n      {\n        Header: t('Search'),\n        key: 'search',\n        id: 'name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ],\n    [],\n  );\n\n  const header = HeaderExtension ? (\n    <StyledHeaderWithIcon>\n      <div>{t('Alerts & reports')}</div>\n      <HeaderExtension />\n    </StyledHeaderWithIcon>\n  ) : (\n    t('Alerts & reports')\n  );\n\n  return (\n    <>\n      <SubMenu\n        activeChild={pathName}\n        name={header}\n        tabs={[\n          {\n            name: 'Alerts',\n            label: t('Alerts'),\n            url: '/alert/list/',\n            usesRouter: true,\n            'data-test': 'alert-list',\n          },\n          {\n            name: 'Reports',\n            label: t('Reports'),\n            url: '/report/list/',\n            usesRouter: true,\n            'data-test': 'report-list',\n          },\n        ]}\n        buttons={subMenuButtons}\n      >\n        <RefreshContainer>\n          <LastUpdated updatedAt={lastFetched} update={() => refreshData()} />\n        </RefreshContainer>\n      </SubMenu>\n      <AlertReportModal\n        alert={currentAlert}\n        addDangerToast={addDangerToast}\n        layer={currentAlert}\n        onHide={() => {\n          setAlertModalOpen(false);\n          setCurrentAlert(null);\n          refreshData();\n        }}\n        show={alertModalOpen}\n        isReport={isReportEnabled}\n        key={currentAlert?.id || generateKey()}\n      />\n      {currentAlertDeleting && (\n        <DeleteModal\n          description={t(\n            'This action will permanently delete %s.',\n            currentAlertDeleting.name,\n          )}\n          onConfirm={() => {\n            if (currentAlertDeleting) {\n              handleAlertDelete(currentAlertDeleting);\n            }\n          }}\n          onHide={() => setCurrentAlertDeleting(null)}\n          open\n          title={t('Delete %s?', title)}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected %s?',\n          titlePlural,\n        )}\n        onConfirm={handleBulkAlertDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = canDelete\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n          return (\n            <ListView<AlertObject>\n              className=\"alerts-list-view\"\n              columns={columns}\n              count={alertsCount}\n              data={alerts}\n              emptyState={emptyState}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              pageSize={PAGE_SIZE}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(AlertList);\n"]},"metadata":{},"sourceType":"module"}