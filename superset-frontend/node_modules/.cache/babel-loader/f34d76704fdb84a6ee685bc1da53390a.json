{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { initFeatureFlags } from '@superset-ui/core';\nimport getBootstrapData from './getBootstrapData';\n\nfunction getDomainsConfig() {\n  const appContainer = document.getElementById('app');\n  if (!appContainer) {\n    return [];\n  }\n\n  const availableDomains = new Set([window.location.hostname]);\n\n  // don't do domain sharding if a certain query param is set\n  const disableDomainSharding =\n  new URLSearchParams(window.location.search).get('disableDomainSharding') ===\n  '1';\n  if (disableDomainSharding) {\n    return Array.from(availableDomains);\n  }\n\n  const bootstrapData = getBootstrapData();\n  // this module is a little special, it may be loaded before index.jsx,\n  // where window.featureFlags get initialized\n  // eslint-disable-next-line camelcase\n  initFeatureFlags(bootstrapData.common.feature_flags);\n\n  if (\n  bootstrapData &&\n  bootstrapData.common &&\n  bootstrapData.common.conf &&\n  bootstrapData.common.conf.SUPERSET_WEBSERVER_DOMAINS)\n  {\n    bootstrapData.common.conf.SUPERSET_WEBSERVER_DOMAINS.forEach((hostName) => {\n      availableDomains.add(hostName);\n    });\n  }\n  return Array.from(availableDomains);\n}\n\nexport const availableDomains = getDomainsConfig();\n\nexport const allowCrossDomain = availableDomains.length > 1;","map":{"version":3,"names":["initFeatureFlags","getBootstrapData","getDomainsConfig","appContainer","document","getElementById","availableDomains","Set","window","location","hostname","disableDomainSharding","URLSearchParams","search","get","Array","from","bootstrapData","common","feature_flags","conf","SUPERSET_WEBSERVER_DOMAINS","forEach","hostName","add","allowCrossDomain","length"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/utils/hostNamesConfig.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { initFeatureFlags } from '@superset-ui/core';\nimport getBootstrapData from './getBootstrapData';\n\nfunction getDomainsConfig() {\n  const appContainer = document.getElementById('app');\n  if (!appContainer) {\n    return [];\n  }\n\n  const availableDomains = new Set([window.location.hostname]);\n\n  // don't do domain sharding if a certain query param is set\n  const disableDomainSharding =\n    new URLSearchParams(window.location.search).get('disableDomainSharding') ===\n    '1';\n  if (disableDomainSharding) {\n    return Array.from(availableDomains);\n  }\n\n  const bootstrapData = getBootstrapData();\n  // this module is a little special, it may be loaded before index.jsx,\n  // where window.featureFlags get initialized\n  // eslint-disable-next-line camelcase\n  initFeatureFlags(bootstrapData.common.feature_flags);\n\n  if (\n    bootstrapData &&\n    bootstrapData.common &&\n    bootstrapData.common.conf &&\n    bootstrapData.common.conf.SUPERSET_WEBSERVER_DOMAINS\n  ) {\n    bootstrapData.common.conf.SUPERSET_WEBSERVER_DOMAINS.forEach(hostName => {\n      availableDomains.add(hostName);\n    });\n  }\n  return Array.from(availableDomains);\n}\n\nexport const availableDomains = getDomainsConfig();\n\nexport const allowCrossDomain = availableDomains.length > 1;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,SAASC,gBAAT,GAA4B;EAC1B,MAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAArB;EACA,IAAI,CAACF,YAAL,EAAmB;IACjB,OAAO,EAAP;EACD;;EAED,MAAMG,gBAAgB,GAAG,IAAIC,GAAJ,CAAQ,CAACC,MAAM,CAACC,QAAP,CAAgBC,QAAjB,CAAR,CAAzB;;EAEA;EACA,MAAMC,qBAAqB;EACzB,IAAIC,eAAJ,CAAoBJ,MAAM,CAACC,QAAP,CAAgBI,MAApC,EAA4CC,GAA5C,CAAgD,uBAAhD;EACA,GAFF;EAGA,IAAIH,qBAAJ,EAA2B;IACzB,OAAOI,KAAK,CAACC,IAAN,CAAWV,gBAAX,CAAP;EACD;;EAED,MAAMW,aAAa,GAAGhB,gBAAgB,EAAtC;EACA;EACA;EACA;EACAD,gBAAgB,CAACiB,aAAa,CAACC,MAAd,CAAqBC,aAAtB,CAAhB;;EAEA;EACEF,aAAa;EACbA,aAAa,CAACC,MADd;EAEAD,aAAa,CAACC,MAAd,CAAqBE,IAFrB;EAGAH,aAAa,CAACC,MAAd,CAAqBE,IAArB,CAA0BC,0BAJ5B;EAKE;IACAJ,aAAa,CAACC,MAAd,CAAqBE,IAArB,CAA0BC,0BAA1B,CAAqDC,OAArD,CAA6D,CAAAC,QAAQ,KAAI;MACvEjB,gBAAgB,CAACkB,GAAjB,CAAqBD,QAArB;IACD,CAFD;EAGD;EACD,OAAOR,KAAK,CAACC,IAAN,CAAWV,gBAAX,CAAP;AACD;;AAED,OAAO,MAAMA,gBAAgB,GAAGJ,gBAAgB,EAAzC;;AAEP,OAAO,MAAMuB,gBAAgB,GAAGnB,gBAAgB,CAACoB,MAAjB,GAA0B,CAAnD"},"metadata":{},"sourceType":"module"}