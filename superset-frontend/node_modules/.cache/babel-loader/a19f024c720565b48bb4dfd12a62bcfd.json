{"ast":null,"code":"function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Input } from 'src/components/Input';\nimport { FormItem } from 'src/components/Form';\nimport jsonStringify from 'json-stringify-pretty-compact';\nimport Button from 'src/components/Button';\nimport { AntdForm, AsyncSelect, Col, Row } from 'src/components';\nimport rison from 'rison';\nimport { CategoricalColorNamespace, ensureIsArray, FeatureFlag, getCategoricalSchemeRegistry, getSharedLabelColor, styled, SupersetClient, t } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport { JsonEditor } from 'src/components/AsyncAceEditor';\nimport ColorSchemeControlWrapper from 'src/dashboard/components/ColorSchemeControlWrapper';\nimport FilterScopeModal from 'src/dashboard/components/filterscope/FilterScopeModal';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport { addTag, deleteTaggedObjects, fetchTags, OBJECT_TYPES } from 'src/features/tags/tags';\nimport { loadTags } from 'src/components/Tags/utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledFormItem = styled(FormItem)`\n  margin-bottom: 0;\n`;\nconst StyledJsonEditor = styled(JsonEditor)`\n  border-radius: ${(_ref) => {let { theme } = _ref;return theme.borderRadius;}}px;\n  border: 1px solid ${(_ref2) => {let { theme } = _ref2;return theme.colors.secondary.light2;}};\n`;var _ref4 = process.env.NODE_ENV === \"production\" ? { name: \"1blj7km\", styles: \"margin-top:1em\" } : { name: \"1gtq0eh-PropertiesModal\", styles: \"margin-top:1em;label:PropertiesModal;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\nconst PropertiesModal = (_ref3) => {let { addSuccessToast, addDangerToast, colorScheme: currentColorScheme, dashboardId, dashboardInfo: currentDashboardInfo, dashboardTitle, onHide = () => {}, onlyApply = false, onSubmit = () => {}, show = false } = _ref3;\n  const [form] = AntdForm.useForm();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isAdvancedOpen, setIsAdvancedOpen] = useState(false);\n  const [colorScheme, setColorScheme] = useState(currentColorScheme);\n  const [jsonMetadata, setJsonMetadata] = useState('');\n  const [dashboardInfo, setDashboardInfo] = useState();\n  const [owners, setOwners] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const saveLabel = onlyApply ? t('Apply') : t('Save');\n  const [tags, setTags] = useState([]);\n  const categoricalSchemeRegistry = getCategoricalSchemeRegistry();\n  const tagsAsSelectValues = useMemo(() => {\n    const selectTags = tags.map((tag) => ({\n      value: tag.name,\n      label: tag.name,\n      key: tag.name }));\n\n    return selectTags;\n  }, [tags.length]);\n  const handleErrorResponse = async (response) => {\n    const { error, statusText, message } = await getClientErrorObject(response);\n    let errorText = error || statusText || t('An error has occurred');\n    if (typeof message === 'object' && 'json_metadata' in message) {\n      errorText = message.json_metadata;\n    } else\n    if (typeof message === 'string') {\n      errorText = message;\n      if (message === 'Forbidden') {\n        errorText = t('You do not have permission to edit this dashboard');\n      }\n    }\n    Modal.error({\n      title: t('Error'),\n      content: errorText,\n      okButtonProps: { danger: true, className: 'btn-danger' } });\n\n  };\n  const loadAccessOptions = useCallback(function (accessType, input, page, pageSize) {if (accessType === void 0) {accessType = 'owners';}if (input === void 0) {input = '';}\n    const query = rison.encode({\n      filter: input,\n      page,\n      page_size: pageSize });\n\n    return SupersetClient.get({\n      endpoint: `/api/v1/dashboard/related/${accessType}?q=${query}` }).\n    then((response) => ({\n      data: response.json.result.\n      filter((item) => item.extra.active !== undefined ? item.extra.active : true).\n      map((item) => ({\n        value: item.value,\n        label: item.text })),\n\n      totalCount: response.json.count }));\n\n  }, []);\n  const handleDashboardData = useCallback((dashboardData) => {\n    const { id, dashboard_title, slug, certified_by, certification_details, owners, roles, metadata, is_managed_externally } = dashboardData;\n    const dashboardInfo = {\n      id,\n      title: dashboard_title,\n      slug: slug || '',\n      certifiedBy: certified_by || '',\n      certificationDetails: certification_details || '',\n      isManagedExternally: is_managed_externally || false };\n\n    form.setFieldsValue(dashboardInfo);\n    setDashboardInfo(dashboardInfo);\n    setOwners(owners);\n    setRoles(roles);\n    setColorScheme(metadata.color_scheme);\n    // temporary fix to remove positions from dashboards' metadata\n    if (metadata != null && metadata.positions) {\n      delete metadata.positions;\n    }\n    const metaDataCopy = { ...metadata };\n    delete metaDataCopy.shared_label_colors;\n    delete metaDataCopy.color_scheme_domain;\n    setJsonMetadata(metaDataCopy ? jsonStringify(metaDataCopy) : '');\n  }, [form]);\n  const fetchDashboardDetails = useCallback(() => {\n    setIsLoading(true);\n    // We fetch the dashboard details because not all code\n    // that renders this component have all the values we need.\n    // At some point when we have a more consistent frontend\n    // datamodel, the dashboard could probably just be passed as a prop.\n    SupersetClient.get({\n      endpoint: `/api/v1/dashboard/${dashboardId}` }).\n    then((response) => {var _dashboard$json_metad;\n      const dashboard = response.json.result;\n      const jsonMetadataObj = (_dashboard$json_metad = dashboard.json_metadata) != null && _dashboard$json_metad.length ?\n      JSON.parse(dashboard.json_metadata) :\n      {};\n      handleDashboardData({\n        ...dashboard,\n        metadata: jsonMetadataObj });\n\n      setIsLoading(false);\n    }, handleErrorResponse);\n  }, [dashboardId, handleDashboardData]);\n  const getJsonMetadata = () => {\n    try {\n      const jsonMetadataObj = jsonMetadata != null && jsonMetadata.length ?\n      JSON.parse(jsonMetadata) :\n      {};\n      return jsonMetadataObj;\n    }\n    catch (_) {\n      return {};\n    }\n  };\n  const handleOnChangeOwners = (owners) => {\n    const parsedOwners = ensureIsArray(owners).map((o) => ({\n      id: o.value,\n      full_name: o.label }));\n\n    setOwners(parsedOwners);\n  };\n  const handleOnChangeRoles = (roles) => {\n    const parsedRoles = ensureIsArray(roles).map((r) => ({\n      id: r.value,\n      name: r.label }));\n\n    setRoles(parsedRoles);\n  };\n  const handleOwnersSelectValue = () => {\n    const parsedOwners = (owners || []).map((owner) => ({\n      value: owner.id,\n      label: owner.full_name || `${owner.first_name} ${owner.last_name}` }));\n\n    return parsedOwners;\n  };\n  const handleRolesSelectValue = () => {\n    const parsedRoles = (roles || []).map((role) => ({\n      value: role.id,\n      label: `${role.name}` }));\n\n    return parsedRoles;\n  };\n  const onColorSchemeChange = function (colorScheme, _temp) {if (colorScheme === void 0) {colorScheme = '';}let { updateMetadata = true } = _temp === void 0 ? {} : _temp;\n    // check that color_scheme is valid\n    const colorChoices = categoricalSchemeRegistry.keys();\n    const jsonMetadataObj = getJsonMetadata();\n    // only fire if the color_scheme is present and invalid\n    if (colorScheme && !_includesInstanceProperty(colorChoices).call(colorChoices, colorScheme)) {\n      Modal.error({\n        title: t('Error'),\n        content: t('A valid color scheme is required'),\n        okButtonProps: { danger: true, className: 'btn-danger' } });\n\n      throw new Error('A valid color scheme is required');\n    }\n    // update metadata to match selection\n    if (updateMetadata) {\n      jsonMetadataObj.color_scheme = colorScheme;\n      jsonMetadataObj.label_colors = jsonMetadataObj.label_colors || {};\n      setJsonMetadata(jsonStringify(jsonMetadataObj));\n    }\n    setColorScheme(colorScheme);\n  };\n  const updateTags = (oldTags, newTags) => {\n    // update the tags for this object\n    // add tags that are in new tags, but not in old tags\n    // eslint-disable-next-line array-callback-return\n    newTags.map((tag) => {\n      if (!oldTags.some((t) => t.name === tag.name)) {\n        addTag({\n          objectType: OBJECT_TYPES.DASHBOARD,\n          objectId: dashboardId,\n          includeTypes: false },\n        tag.name, () => {}, () => {});\n      }\n    });\n    // delete tags that are in old tags, but not in new tags\n    // eslint-disable-next-line array-callback-return\n    oldTags.map((tag) => {\n      if (!newTags.some((t) => t.name === tag.name)) {\n        deleteTaggedObjects({\n          objectType: OBJECT_TYPES.DASHBOARD,\n          objectId: dashboardId },\n        tag, () => {}, () => {});\n      }\n    });\n  };\n  const onFinish = () => {var _metadata, _metadata2, _metadata3, _metadata4;\n    const { title, slug, certifiedBy, certificationDetails } = form.getFieldsValue();\n    let currentColorScheme = colorScheme;\n    let colorNamespace = '';\n    let currentJsonMetadata = jsonMetadata;\n    // validate currentJsonMetadata\n    let metadata;\n    try {\n      if (!currentJsonMetadata.startsWith('{') ||\n      !currentJsonMetadata.endsWith('}')) {\n        throw new Error();\n      }\n      metadata = JSON.parse(currentJsonMetadata);\n    }\n    catch (error) {\n      addDangerToast(t('JSON metadata is invalid!'));\n      return;\n    }\n    // color scheme in json metadata has precedence over selection\n    currentColorScheme = ((_metadata = metadata) == null ? void 0 : _metadata.color_scheme) || colorScheme;\n    colorNamespace = (_metadata2 = metadata) == null ? void 0 : _metadata2.color_namespace;\n    // filter shared_label_color from user input\n    if ((_metadata3 = metadata) != null && _metadata3.shared_label_colors) {\n      delete metadata.shared_label_colors;\n    }\n    if ((_metadata4 = metadata) != null && _metadata4.color_scheme_domain) {\n      delete metadata.color_scheme_domain;\n    }\n    const sharedLabelColor = getSharedLabelColor();\n    const categoricalNamespace = CategoricalColorNamespace.getNamespace(colorNamespace);\n    categoricalNamespace.resetColors();\n    if (currentColorScheme) {var _categoricalSchemeReg;\n      sharedLabelColor.updateColorMap(colorNamespace, currentColorScheme);\n      metadata.shared_label_colors = Object.fromEntries(sharedLabelColor.getColorMap());\n      metadata.color_scheme_domain =\n      ((_categoricalSchemeReg = categoricalSchemeRegistry.get(colorScheme)) == null ? void 0 : _categoricalSchemeReg.colors) || [];\n    } else\n    {\n      sharedLabelColor.reset();\n      metadata.shared_label_colors = {};\n      metadata.color_scheme_domain = [];\n    }\n    currentJsonMetadata = jsonStringify(metadata);\n    onColorSchemeChange(currentColorScheme, {\n      updateMetadata: false });\n\n    if (isFeatureEnabled(FeatureFlag.TAGGING_SYSTEM)) {\n      // update tags\n      try {\n        fetchTags({\n          objectType: OBJECT_TYPES.DASHBOARD,\n          objectId: dashboardId,\n          includeTypes: false },\n        (currentTags) => updateTags(currentTags, tags), (error) => {\n          handleErrorResponse(error);\n        });\n      }\n      catch (error) {\n        handleErrorResponse(error);\n      }\n    }\n    const moreOnSubmitProps = {};\n    const morePutProps = {};\n    if (isFeatureEnabled(FeatureFlag.DASHBOARD_RBAC)) {\n      moreOnSubmitProps.roles = roles;\n      morePutProps.roles = (roles || []).map((r) => r.id);\n    }\n    const onSubmitProps = {\n      id: dashboardId,\n      title,\n      slug,\n      jsonMetadata: currentJsonMetadata,\n      owners,\n      colorScheme: currentColorScheme,\n      colorNamespace,\n      certifiedBy,\n      certificationDetails,\n      ...moreOnSubmitProps };\n\n    if (onlyApply) {\n      onSubmit(onSubmitProps);\n      onHide();\n      addSuccessToast(t('Dashboard properties updated'));\n    } else\n    {\n      SupersetClient.put({\n        endpoint: `/api/v1/dashboard/${dashboardId}`,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          dashboard_title: title,\n          slug: slug || null,\n          json_metadata: currentJsonMetadata || null,\n          owners: (owners || []).map((o) => o.id),\n          certified_by: certifiedBy || null,\n          certification_details: certifiedBy && certificationDetails ? certificationDetails : null,\n          ...morePutProps }) }).\n\n      then(() => {\n        onSubmit(onSubmitProps);\n        onHide();\n        addSuccessToast(t('The dashboard has been saved'));\n      }, handleErrorResponse);\n    }\n  };\n  const getRowsWithoutRoles = () => {\n    const jsonMetadataObj = getJsonMetadata();\n    const hasCustomLabelColors = !!Object.keys((jsonMetadataObj == null ? void 0 : jsonMetadataObj.label_colors) || {}).length;\n    return ___EmotionJSX(Row, { gutter: 16 },\n    ___EmotionJSX(Col, { xs: 24, md: 12 },\n    ___EmotionJSX(\"h3\", { style: { marginTop: '1em' } }, t('Access')),\n    ___EmotionJSX(StyledFormItem, { label: t('Owners') },\n    ___EmotionJSX(AsyncSelect, { allowClear: true, ariaLabel: t('Owners'), disabled: isLoading, mode: \"multiple\", onChange: handleOnChangeOwners, options: (input, page, pageSize) => loadAccessOptions('owners', input, page, pageSize), value: handleOwnersSelectValue() })),\n\n    ___EmotionJSX(\"p\", { className: \"help-block\" },\n    t('Owners is a list of users who can alter the dashboard. Searchable by name or username.'))),\n\n\n    ___EmotionJSX(Col, { xs: 24, md: 12 },\n    ___EmotionJSX(\"h3\", { style: { marginTop: '1em' } }, t('Colors')),\n    ___EmotionJSX(ColorSchemeControlWrapper, { hasCustomLabelColors: hasCustomLabelColors, onChange: onColorSchemeChange, colorScheme: colorScheme, labelMargin: 4 })));\n\n\n  };\n  const getRowsWithRoles = () => {\n    const jsonMetadataObj = getJsonMetadata();\n    const hasCustomLabelColors = !!Object.keys((jsonMetadataObj == null ? void 0 : jsonMetadataObj.label_colors) || {}).length;\n    return ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(Row, null,\n    ___EmotionJSX(Col, { xs: 24, md: 24 },\n    ___EmotionJSX(\"h3\", { style: { marginTop: '1em' } }, t('Access')))),\n\n\n    ___EmotionJSX(Row, { gutter: 16 },\n    ___EmotionJSX(Col, { xs: 24, md: 12 },\n    ___EmotionJSX(StyledFormItem, { label: t('Owners') },\n    ___EmotionJSX(AsyncSelect, { allowClear: true, allowNewOptions: true, ariaLabel: t('Owners'), disabled: isLoading, mode: \"multiple\", onChange: handleOnChangeOwners, options: (input, page, pageSize) => loadAccessOptions('owners', input, page, pageSize), value: handleOwnersSelectValue() })),\n\n    ___EmotionJSX(\"p\", { className: \"help-block\" },\n    t('Owners is a list of users who can alter the dashboard. Searchable by name or username.'))),\n\n\n    ___EmotionJSX(Col, { xs: 24, md: 12 },\n    ___EmotionJSX(StyledFormItem, { label: t('Roles') },\n    ___EmotionJSX(AsyncSelect, { allowClear: true, ariaLabel: t('Roles'), disabled: isLoading, mode: \"multiple\", onChange: handleOnChangeRoles, options: (input, page, pageSize) => loadAccessOptions('roles', input, page, pageSize), value: handleRolesSelectValue() })),\n\n    ___EmotionJSX(\"p\", { className: \"help-block\" },\n    t('Roles is a list which defines access to the dashboard. Granting a role access to a dashboard will bypass dataset level checks. If no roles are defined, regular access permissions apply.')))),\n\n\n\n    ___EmotionJSX(Row, null,\n    ___EmotionJSX(Col, { xs: 24, md: 12 },\n    ___EmotionJSX(ColorSchemeControlWrapper, { hasCustomLabelColors: hasCustomLabelColors, onChange: onColorSchemeChange, colorScheme: colorScheme, labelMargin: 4 }))));\n\n\n\n  };\n  useEffect(() => {\n    if (show) {\n      if (!currentDashboardInfo) {\n        fetchDashboardDetails();\n      } else\n      {\n        handleDashboardData(currentDashboardInfo);\n      }\n    }\n    JsonEditor.preload();\n  }, [currentDashboardInfo, fetchDashboardDetails, handleDashboardData, show]);\n  useEffect(() => {\n    // the title can be changed inline in the dashboard, this catches it\n    if (dashboardTitle &&\n    dashboardInfo &&\n    dashboardInfo.title !== dashboardTitle) {\n      form.setFieldsValue({\n        ...dashboardInfo,\n        title: dashboardTitle });\n\n    }\n  }, [dashboardInfo, dashboardTitle, form]);\n  useEffect(() => {\n    if (!isFeatureEnabled(FeatureFlag.TAGGING_SYSTEM))\n    return;\n    try {\n      fetchTags({\n        objectType: OBJECT_TYPES.DASHBOARD,\n        objectId: dashboardId,\n        includeTypes: false },\n      (tags) => setTags(tags), (error) => {\n        addDangerToast(`Error fetching tags: ${error.text}`);\n      });\n    }\n    catch (error) {\n      handleErrorResponse(error);\n    }\n  }, [dashboardId]);\n  const handleChangeTags = (values) => {\n    // triggered whenever a new tag is selected or a tag was deselected\n    // on new tag selected, add the tag\n    const uniqueTags = [...new Set(values.map((v) => v.label))];\n    setTags([...uniqueTags.map((t) => ({ name: t }))]);\n  };\n  return ___EmotionJSX(Modal, { show: show, onHide: onHide, title: t('Dashboard properties'), footer: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(Button, { htmlType: \"button\", buttonSize: \"small\", onClick: onHide, cta: true },\n    t('Cancel')),\n\n    ___EmotionJSX(Button, { onClick: form.submit, buttonSize: \"small\", buttonStyle: \"primary\", className: \"m-r-5\", cta: true, disabled: dashboardInfo == null ? void 0 : dashboardInfo.isManagedExternally, tooltip: dashboardInfo != null && dashboardInfo.isManagedExternally ?\n      t(\"This dashboard is managed externally, and can't be edited in Superset\") :\n      '' },\n    saveLabel)),\n\n    responsive: true },\n  ___EmotionJSX(AntdForm, { form: form, onFinish: onFinish, layout: \"vertical\", initialValues: dashboardInfo },\n  ___EmotionJSX(Row, null,\n  ___EmotionJSX(Col, { xs: 24, md: 24 },\n  ___EmotionJSX(\"h3\", null, t('Basic information')))),\n\n\n  ___EmotionJSX(Row, { gutter: 16 },\n  ___EmotionJSX(Col, { xs: 24, md: 12 },\n  ___EmotionJSX(FormItem, { label: t('Title'), name: \"title\" },\n  ___EmotionJSX(Input, { type: \"text\", disabled: isLoading }))),\n\n\n  ___EmotionJSX(Col, { xs: 24, md: 12 },\n  ___EmotionJSX(StyledFormItem, { label: t('URL slug'), name: \"slug\" },\n  ___EmotionJSX(Input, { type: \"text\", disabled: isLoading })),\n\n  ___EmotionJSX(\"p\", { className: \"help-block\" },\n  t('A readable URL for your dashboard')))),\n\n\n\n  isFeatureEnabled(FeatureFlag.DASHBOARD_RBAC) ?\n  getRowsWithRoles() :\n  getRowsWithoutRoles(),\n  ___EmotionJSX(Row, null,\n  ___EmotionJSX(Col, { xs: 24, md: 24 },\n  ___EmotionJSX(\"h3\", null, t('Certification')))),\n\n\n  ___EmotionJSX(Row, { gutter: 16 },\n  ___EmotionJSX(Col, { xs: 24, md: 12 },\n  ___EmotionJSX(StyledFormItem, { label: t('Certified by'), name: \"certifiedBy\" },\n  ___EmotionJSX(Input, { type: \"text\", disabled: isLoading })),\n\n  ___EmotionJSX(\"p\", { className: \"help-block\" },\n  t('Person or group that has certified this dashboard.'))),\n\n\n  ___EmotionJSX(Col, { xs: 24, md: 12 },\n  ___EmotionJSX(StyledFormItem, { label: t('Certification details'), name: \"certificationDetails\" },\n  ___EmotionJSX(Input, { type: \"text\", disabled: isLoading })),\n\n  ___EmotionJSX(\"p\", { className: \"help-block\" },\n  t('Any additional detail to show in the certification tooltip.')))),\n\n\n\n  isFeatureEnabled(FeatureFlag.TAGGING_SYSTEM) ? ___EmotionJSX(Row, { gutter: 16 },\n  ___EmotionJSX(Col, { xs: 24, md: 12 },\n  ___EmotionJSX(\"h3\", { css: _ref4 }, t('Tags')))) :\n\n  null,\n  isFeatureEnabled(FeatureFlag.TAGGING_SYSTEM) ? ___EmotionJSX(Row, { gutter: 16 },\n  ___EmotionJSX(Col, { xs: 24, md: 12 },\n  ___EmotionJSX(StyledFormItem, null,\n  ___EmotionJSX(AsyncSelect, { ariaLabel: \"Tags\", mode: \"multiple\", allowNewOptions: true, value: tagsAsSelectValues, options: loadTags, onChange: handleChangeTags, allowClear: true })),\n\n  ___EmotionJSX(\"p\", { className: \"help-block\" },\n  t('A list of tags that have been applied to this chart.')))) :\n\n\n  null,\n  ___EmotionJSX(Row, null,\n  ___EmotionJSX(Col, { xs: 24, md: 24 },\n  ___EmotionJSX(\"h3\", { style: { marginTop: '1em' } },\n  ___EmotionJSX(Button, { buttonStyle: \"link\", onClick: () => setIsAdvancedOpen(!isAdvancedOpen) },\n  ___EmotionJSX(\"i\", { className: `fa fa-angle-${isAdvancedOpen ? 'down' : 'right'}`, style: { minWidth: '1em' } }),\n  t('Advanced'))),\n\n\n  isAdvancedOpen && ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(StyledFormItem, { label: t('JSON metadata') },\n  ___EmotionJSX(StyledJsonEditor, { showLoadingForImport: true, name: \"json_metadata\", value: jsonMetadata, onChange: setJsonMetadata, tabSize: 2, width: \"100%\", height: \"200px\", wrapEnabled: true })),\n\n  ___EmotionJSX(\"p\", { className: \"help-block\" },\n  t('This JSON object is generated dynamically when clicking the save or overwrite button in the dashboard view. It is exposed here for reference and for power users who may want to alter specific parameters.'),\n  onlyApply && ___EmotionJSX(React.Fragment, null,\n  ' ',\n  t('Please DO NOT overwrite the \"filter_scopes\" key.'), ' ',\n  ___EmotionJSX(FilterScopeModal, { triggerNode: ___EmotionJSX(\"span\", { className: \"alert-link\" },\n    t('Use \"%(menuName)s\" menu instead.', {\n      menuName: t('Set filter mapping') })) }))))))));\n\n\n\n\n\n\n\n\n\n};\nexport default withToasts(PropertiesModal);","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useMemo","useState","Input","FormItem","jsonStringify","Button","AntdForm","AsyncSelect","Col","Row","rison","CategoricalColorNamespace","ensureIsArray","FeatureFlag","getCategoricalSchemeRegistry","getSharedLabelColor","styled","SupersetClient","t","Modal","JsonEditor","ColorSchemeControlWrapper","FilterScopeModal","getClientErrorObject","withToasts","isFeatureEnabled","addTag","deleteTaggedObjects","fetchTags","OBJECT_TYPES","loadTags","StyledFormItem","StyledJsonEditor","theme","borderRadius","colors","secondary","light2","PropertiesModal","addSuccessToast","addDangerToast","colorScheme","currentColorScheme","dashboardId","dashboardInfo","currentDashboardInfo","dashboardTitle","onHide","onlyApply","onSubmit","show","form","useForm","isLoading","setIsLoading","isAdvancedOpen","setIsAdvancedOpen","setColorScheme","jsonMetadata","setJsonMetadata","setDashboardInfo","owners","setOwners","roles","setRoles","saveLabel","tags","setTags","categoricalSchemeRegistry","tagsAsSelectValues","selectTags","map","value","tag","name","label","key","length","handleErrorResponse","response","error","statusText","message","errorText","json_metadata","title","content","okButtonProps","danger","className","loadAccessOptions","accessType","input","page","pageSize","query","encode","filter","page_size","get","endpoint","then","data","json","result","item","extra","active","undefined","text","totalCount","count","handleDashboardData","id","dashboard_title","slug","certified_by","certification_details","metadata","is_managed_externally","dashboardData","certifiedBy","certificationDetails","isManagedExternally","setFieldsValue","color_scheme","positions","metaDataCopy","shared_label_colors","color_scheme_domain","fetchDashboardDetails","dashboard","jsonMetadataObj","JSON","parse","getJsonMetadata","_","handleOnChangeOwners","parsedOwners","o","full_name","handleOnChangeRoles","parsedRoles","r","handleOwnersSelectValue","owner","first_name","last_name","handleRolesSelectValue","role","onColorSchemeChange","updateMetadata","colorChoices","keys","Error","label_colors","updateTags","oldTags","newTags","some","objectType","DASHBOARD","objectId","includeTypes","onFinish","getFieldsValue","colorNamespace","currentJsonMetadata","startsWith","endsWith","color_namespace","sharedLabelColor","categoricalNamespace","getNamespace","resetColors","updateColorMap","Object","fromEntries","getColorMap","reset","TAGGING_SYSTEM","currentTags","moreOnSubmitProps","morePutProps","DASHBOARD_RBAC","onSubmitProps","put","headers","body","stringify","getRowsWithoutRoles","hasCustomLabelColors","marginTop","getRowsWithRoles","preload","handleChangeTags","values","uniqueTags","Set","v","submit","minWidth","menuName"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/PropertiesModal/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Input } from 'src/components/Input';\nimport { FormItem } from 'src/components/Form';\nimport jsonStringify from 'json-stringify-pretty-compact';\nimport Button from 'src/components/Button';\nimport { AntdForm, AsyncSelect, Col, Row } from 'src/components';\nimport rison from 'rison';\nimport {\n  CategoricalColorNamespace,\n  ensureIsArray,\n  FeatureFlag,\n  getCategoricalSchemeRegistry,\n  getSharedLabelColor,\n  styled,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\n\nimport Modal from 'src/components/Modal';\nimport { JsonEditor } from 'src/components/AsyncAceEditor';\n\nimport ColorSchemeControlWrapper from 'src/dashboard/components/ColorSchemeControlWrapper';\nimport FilterScopeModal from 'src/dashboard/components/filterscope/FilterScopeModal';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport TagType from 'src/types/TagType';\nimport {\n  addTag,\n  deleteTaggedObjects,\n  fetchTags,\n  OBJECT_TYPES,\n} from 'src/features/tags/tags';\nimport { loadTags } from 'src/components/Tags/utils';\n\nconst StyledFormItem = styled(FormItem)`\n  margin-bottom: 0;\n`;\n\nconst StyledJsonEditor = styled(JsonEditor)`\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  border: 1px solid ${({ theme }) => theme.colors.secondary.light2};\n`;\n\ntype PropertiesModalProps = {\n  dashboardId: number;\n  dashboardTitle?: string;\n  dashboardInfo?: Record<string, any>;\n  show?: boolean;\n  onHide?: () => void;\n  colorScheme?: string;\n  onSubmit?: (params: Record<string, any>) => void;\n  addSuccessToast: (message: string) => void;\n  addDangerToast: (message: string) => void;\n  onlyApply?: boolean;\n};\n\ntype Roles = { id: number; name: string }[];\ntype Owners = {\n  id: number;\n  full_name?: string;\n  first_name?: string;\n  last_name?: string;\n}[];\ntype DashboardInfo = {\n  id: number;\n  title: string;\n  slug: string;\n  certifiedBy: string;\n  certificationDetails: string;\n  isManagedExternally: boolean;\n};\n\nconst PropertiesModal = ({\n  addSuccessToast,\n  addDangerToast,\n  colorScheme: currentColorScheme,\n  dashboardId,\n  dashboardInfo: currentDashboardInfo,\n  dashboardTitle,\n  onHide = () => {},\n  onlyApply = false,\n  onSubmit = () => {},\n  show = false,\n}: PropertiesModalProps) => {\n  const [form] = AntdForm.useForm();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isAdvancedOpen, setIsAdvancedOpen] = useState(false);\n  const [colorScheme, setColorScheme] = useState(currentColorScheme);\n  const [jsonMetadata, setJsonMetadata] = useState('');\n  const [dashboardInfo, setDashboardInfo] = useState<DashboardInfo>();\n  const [owners, setOwners] = useState<Owners>([]);\n  const [roles, setRoles] = useState<Roles>([]);\n  const saveLabel = onlyApply ? t('Apply') : t('Save');\n  const [tags, setTags] = useState<TagType[]>([]);\n  const categoricalSchemeRegistry = getCategoricalSchemeRegistry();\n\n  const tagsAsSelectValues = useMemo(() => {\n    const selectTags = tags.map(tag => ({\n      value: tag.name,\n      label: tag.name,\n      key: tag.name,\n    }));\n    return selectTags;\n  }, [tags.length]);\n\n  const handleErrorResponse = async (response: Response) => {\n    const { error, statusText, message } = await getClientErrorObject(response);\n    let errorText = error || statusText || t('An error has occurred');\n    if (typeof message === 'object' && 'json_metadata' in message) {\n      errorText = (message as { json_metadata: string }).json_metadata;\n    } else if (typeof message === 'string') {\n      errorText = message;\n\n      if (message === 'Forbidden') {\n        errorText = t('You do not have permission to edit this dashboard');\n      }\n    }\n\n    Modal.error({\n      title: t('Error'),\n      content: errorText,\n      okButtonProps: { danger: true, className: 'btn-danger' },\n    });\n  };\n\n  const loadAccessOptions = useCallback(\n    (accessType = 'owners', input = '', page: number, pageSize: number) => {\n      const query = rison.encode({\n        filter: input,\n        page,\n        page_size: pageSize,\n      });\n      return SupersetClient.get({\n        endpoint: `/api/v1/dashboard/related/${accessType}?q=${query}`,\n      }).then(response => ({\n        data: response.json.result\n          .filter((item: { extra: { active: boolean } }) =>\n            item.extra.active !== undefined ? item.extra.active : true,\n          )\n          .map((item: { value: number; text: string }) => ({\n            value: item.value,\n            label: item.text,\n          })),\n        totalCount: response.json.count,\n      }));\n    },\n    [],\n  );\n\n  const handleDashboardData = useCallback(\n    dashboardData => {\n      const {\n        id,\n        dashboard_title,\n        slug,\n        certified_by,\n        certification_details,\n        owners,\n        roles,\n        metadata,\n        is_managed_externally,\n      } = dashboardData;\n      const dashboardInfo = {\n        id,\n        title: dashboard_title,\n        slug: slug || '',\n        certifiedBy: certified_by || '',\n        certificationDetails: certification_details || '',\n        isManagedExternally: is_managed_externally || false,\n      };\n\n      form.setFieldsValue(dashboardInfo);\n      setDashboardInfo(dashboardInfo);\n      setOwners(owners);\n      setRoles(roles);\n      setColorScheme(metadata.color_scheme);\n\n      // temporary fix to remove positions from dashboards' metadata\n      if (metadata?.positions) {\n        delete metadata.positions;\n      }\n      const metaDataCopy = { ...metadata };\n\n      delete metaDataCopy.shared_label_colors;\n\n      delete metaDataCopy.color_scheme_domain;\n\n      setJsonMetadata(metaDataCopy ? jsonStringify(metaDataCopy) : '');\n    },\n    [form],\n  );\n\n  const fetchDashboardDetails = useCallback(() => {\n    setIsLoading(true);\n    // We fetch the dashboard details because not all code\n    // that renders this component have all the values we need.\n    // At some point when we have a more consistent frontend\n    // datamodel, the dashboard could probably just be passed as a prop.\n    SupersetClient.get({\n      endpoint: `/api/v1/dashboard/${dashboardId}`,\n    }).then(response => {\n      const dashboard = response.json.result;\n      const jsonMetadataObj = dashboard.json_metadata?.length\n        ? JSON.parse(dashboard.json_metadata)\n        : {};\n\n      handleDashboardData({\n        ...dashboard,\n        metadata: jsonMetadataObj,\n      });\n\n      setIsLoading(false);\n    }, handleErrorResponse);\n  }, [dashboardId, handleDashboardData]);\n\n  const getJsonMetadata = () => {\n    try {\n      const jsonMetadataObj = jsonMetadata?.length\n        ? JSON.parse(jsonMetadata)\n        : {};\n      return jsonMetadataObj;\n    } catch (_) {\n      return {};\n    }\n  };\n\n  const handleOnChangeOwners = (owners: { value: number; label: string }[]) => {\n    const parsedOwners: Owners = ensureIsArray(owners).map(o => ({\n      id: o.value,\n      full_name: o.label,\n    }));\n    setOwners(parsedOwners);\n  };\n\n  const handleOnChangeRoles = (roles: { value: number; label: string }[]) => {\n    const parsedRoles: Roles = ensureIsArray(roles).map(r => ({\n      id: r.value,\n      name: r.label,\n    }));\n    setRoles(parsedRoles);\n  };\n\n  const handleOwnersSelectValue = () => {\n    const parsedOwners = (owners || []).map(\n      (owner: {\n        id: number;\n        first_name?: string;\n        last_name?: string;\n        full_name?: string;\n      }) => ({\n        value: owner.id,\n        label: owner.full_name || `${owner.first_name} ${owner.last_name}`,\n      }),\n    );\n    return parsedOwners;\n  };\n\n  const handleRolesSelectValue = () => {\n    const parsedRoles = (roles || []).map(\n      (role: { id: number; name: string }) => ({\n        value: role.id,\n        label: `${role.name}`,\n      }),\n    );\n    return parsedRoles;\n  };\n\n  const onColorSchemeChange = (\n    colorScheme = '',\n    { updateMetadata = true } = {},\n  ) => {\n    // check that color_scheme is valid\n    const colorChoices = categoricalSchemeRegistry.keys();\n    const jsonMetadataObj = getJsonMetadata();\n\n    // only fire if the color_scheme is present and invalid\n    if (colorScheme && !colorChoices.includes(colorScheme)) {\n      Modal.error({\n        title: t('Error'),\n        content: t('A valid color scheme is required'),\n        okButtonProps: { danger: true, className: 'btn-danger' },\n      });\n      throw new Error('A valid color scheme is required');\n    }\n\n    // update metadata to match selection\n    if (updateMetadata) {\n      jsonMetadataObj.color_scheme = colorScheme;\n      jsonMetadataObj.label_colors = jsonMetadataObj.label_colors || {};\n\n      setJsonMetadata(jsonStringify(jsonMetadataObj));\n    }\n    setColorScheme(colorScheme);\n  };\n\n  const updateTags = (oldTags: TagType[], newTags: TagType[]) => {\n    // update the tags for this object\n    // add tags that are in new tags, but not in old tags\n    // eslint-disable-next-line array-callback-return\n    newTags.map((tag: TagType) => {\n      if (!oldTags.some(t => t.name === tag.name)) {\n        addTag(\n          {\n            objectType: OBJECT_TYPES.DASHBOARD,\n            objectId: dashboardId,\n            includeTypes: false,\n          },\n          tag.name,\n          () => {},\n          () => {},\n        );\n      }\n    });\n    // delete tags that are in old tags, but not in new tags\n    // eslint-disable-next-line array-callback-return\n    oldTags.map((tag: TagType) => {\n      if (!newTags.some(t => t.name === tag.name)) {\n        deleteTaggedObjects(\n          {\n            objectType: OBJECT_TYPES.DASHBOARD,\n            objectId: dashboardId,\n          },\n          tag,\n          () => {},\n          () => {},\n        );\n      }\n    });\n  };\n\n  const onFinish = () => {\n    const { title, slug, certifiedBy, certificationDetails } =\n      form.getFieldsValue();\n    let currentColorScheme = colorScheme;\n    let colorNamespace = '';\n    let currentJsonMetadata = jsonMetadata;\n\n    // validate currentJsonMetadata\n    let metadata;\n    try {\n      if (\n        !currentJsonMetadata.startsWith('{') ||\n        !currentJsonMetadata.endsWith('}')\n      ) {\n        throw new Error();\n      }\n      metadata = JSON.parse(currentJsonMetadata);\n    } catch (error) {\n      addDangerToast(t('JSON metadata is invalid!'));\n      return;\n    }\n\n    // color scheme in json metadata has precedence over selection\n    currentColorScheme = metadata?.color_scheme || colorScheme;\n    colorNamespace = metadata?.color_namespace;\n\n    // filter shared_label_color from user input\n    if (metadata?.shared_label_colors) {\n      delete metadata.shared_label_colors;\n    }\n    if (metadata?.color_scheme_domain) {\n      delete metadata.color_scheme_domain;\n    }\n\n    const sharedLabelColor = getSharedLabelColor();\n    const categoricalNamespace =\n      CategoricalColorNamespace.getNamespace(colorNamespace);\n    categoricalNamespace.resetColors();\n    if (currentColorScheme) {\n      sharedLabelColor.updateColorMap(colorNamespace, currentColorScheme);\n      metadata.shared_label_colors = Object.fromEntries(\n        sharedLabelColor.getColorMap(),\n      );\n      metadata.color_scheme_domain =\n        categoricalSchemeRegistry.get(colorScheme)?.colors || [];\n    } else {\n      sharedLabelColor.reset();\n      metadata.shared_label_colors = {};\n      metadata.color_scheme_domain = [];\n    }\n\n    currentJsonMetadata = jsonStringify(metadata);\n\n    onColorSchemeChange(currentColorScheme, {\n      updateMetadata: false,\n    });\n\n    if (isFeatureEnabled(FeatureFlag.TAGGING_SYSTEM)) {\n      // update tags\n      try {\n        fetchTags(\n          {\n            objectType: OBJECT_TYPES.DASHBOARD,\n            objectId: dashboardId,\n            includeTypes: false,\n          },\n          (currentTags: TagType[]) => updateTags(currentTags, tags),\n          error => {\n            handleErrorResponse(error);\n          },\n        );\n      } catch (error) {\n        handleErrorResponse(error);\n      }\n    }\n\n    const moreOnSubmitProps: { roles?: Roles } = {};\n    const morePutProps: { roles?: number[] } = {};\n    if (isFeatureEnabled(FeatureFlag.DASHBOARD_RBAC)) {\n      moreOnSubmitProps.roles = roles;\n      morePutProps.roles = (roles || []).map(r => r.id);\n    }\n    const onSubmitProps = {\n      id: dashboardId,\n      title,\n      slug,\n      jsonMetadata: currentJsonMetadata,\n      owners,\n      colorScheme: currentColorScheme,\n      colorNamespace,\n      certifiedBy,\n      certificationDetails,\n      ...moreOnSubmitProps,\n    };\n    if (onlyApply) {\n      onSubmit(onSubmitProps);\n      onHide();\n      addSuccessToast(t('Dashboard properties updated'));\n    } else {\n      SupersetClient.put({\n        endpoint: `/api/v1/dashboard/${dashboardId}`,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          dashboard_title: title,\n          slug: slug || null,\n          json_metadata: currentJsonMetadata || null,\n          owners: (owners || []).map(o => o.id),\n          certified_by: certifiedBy || null,\n          certification_details:\n            certifiedBy && certificationDetails ? certificationDetails : null,\n          ...morePutProps,\n        }),\n      }).then(() => {\n        onSubmit(onSubmitProps);\n        onHide();\n        addSuccessToast(t('The dashboard has been saved'));\n      }, handleErrorResponse);\n    }\n  };\n\n  const getRowsWithoutRoles = () => {\n    const jsonMetadataObj = getJsonMetadata();\n    const hasCustomLabelColors = !!Object.keys(\n      jsonMetadataObj?.label_colors || {},\n    ).length;\n\n    return (\n      <Row gutter={16}>\n        <Col xs={24} md={12}>\n          <h3 style={{ marginTop: '1em' }}>{t('Access')}</h3>\n          <StyledFormItem label={t('Owners')}>\n            <AsyncSelect\n              allowClear\n              ariaLabel={t('Owners')}\n              disabled={isLoading}\n              mode=\"multiple\"\n              onChange={handleOnChangeOwners}\n              options={(input, page, pageSize) =>\n                loadAccessOptions('owners', input, page, pageSize)\n              }\n              value={handleOwnersSelectValue()}\n            />\n          </StyledFormItem>\n          <p className=\"help-block\">\n            {t(\n              'Owners is a list of users who can alter the dashboard. Searchable by name or username.',\n            )}\n          </p>\n        </Col>\n        <Col xs={24} md={12}>\n          <h3 style={{ marginTop: '1em' }}>{t('Colors')}</h3>\n          <ColorSchemeControlWrapper\n            hasCustomLabelColors={hasCustomLabelColors}\n            onChange={onColorSchemeChange}\n            colorScheme={colorScheme}\n            labelMargin={4}\n          />\n        </Col>\n      </Row>\n    );\n  };\n\n  const getRowsWithRoles = () => {\n    const jsonMetadataObj = getJsonMetadata();\n    const hasCustomLabelColors = !!Object.keys(\n      jsonMetadataObj?.label_colors || {},\n    ).length;\n\n    return (\n      <>\n        <Row>\n          <Col xs={24} md={24}>\n            <h3 style={{ marginTop: '1em' }}>{t('Access')}</h3>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col xs={24} md={12}>\n            <StyledFormItem label={t('Owners')}>\n              <AsyncSelect\n                allowClear\n                allowNewOptions\n                ariaLabel={t('Owners')}\n                disabled={isLoading}\n                mode=\"multiple\"\n                onChange={handleOnChangeOwners}\n                options={(input, page, pageSize) =>\n                  loadAccessOptions('owners', input, page, pageSize)\n                }\n                value={handleOwnersSelectValue()}\n              />\n            </StyledFormItem>\n            <p className=\"help-block\">\n              {t(\n                'Owners is a list of users who can alter the dashboard. Searchable by name or username.',\n              )}\n            </p>\n          </Col>\n          <Col xs={24} md={12}>\n            <StyledFormItem label={t('Roles')}>\n              <AsyncSelect\n                allowClear\n                ariaLabel={t('Roles')}\n                disabled={isLoading}\n                mode=\"multiple\"\n                onChange={handleOnChangeRoles}\n                options={(input, page, pageSize) =>\n                  loadAccessOptions('roles', input, page, pageSize)\n                }\n                value={handleRolesSelectValue()}\n              />\n            </StyledFormItem>\n            <p className=\"help-block\">\n              {t(\n                'Roles is a list which defines access to the dashboard. Granting a role access to a dashboard will bypass dataset level checks. If no roles are defined, regular access permissions apply.',\n              )}\n            </p>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={24} md={12}>\n            <ColorSchemeControlWrapper\n              hasCustomLabelColors={hasCustomLabelColors}\n              onChange={onColorSchemeChange}\n              colorScheme={colorScheme}\n              labelMargin={4}\n            />\n          </Col>\n        </Row>\n      </>\n    );\n  };\n\n  useEffect(() => {\n    if (show) {\n      if (!currentDashboardInfo) {\n        fetchDashboardDetails();\n      } else {\n        handleDashboardData(currentDashboardInfo);\n      }\n    }\n\n    JsonEditor.preload();\n  }, [currentDashboardInfo, fetchDashboardDetails, handleDashboardData, show]);\n\n  useEffect(() => {\n    // the title can be changed inline in the dashboard, this catches it\n    if (\n      dashboardTitle &&\n      dashboardInfo &&\n      dashboardInfo.title !== dashboardTitle\n    ) {\n      form.setFieldsValue({\n        ...dashboardInfo,\n        title: dashboardTitle,\n      });\n    }\n  }, [dashboardInfo, dashboardTitle, form]);\n\n  useEffect(() => {\n    if (!isFeatureEnabled(FeatureFlag.TAGGING_SYSTEM)) return;\n    try {\n      fetchTags(\n        {\n          objectType: OBJECT_TYPES.DASHBOARD,\n          objectId: dashboardId,\n          includeTypes: false,\n        },\n        (tags: TagType[]) => setTags(tags),\n        (error: Response) => {\n          addDangerToast(`Error fetching tags: ${error.text}`);\n        },\n      );\n    } catch (error) {\n      handleErrorResponse(error);\n    }\n  }, [dashboardId]);\n\n  const handleChangeTags = (values: { label: string; value: number }[]) => {\n    // triggered whenever a new tag is selected or a tag was deselected\n    // on new tag selected, add the tag\n\n    const uniqueTags = [...new Set(values.map(v => v.label))];\n    setTags([...uniqueTags.map(t => ({ name: t }))]);\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      title={t('Dashboard properties')}\n      footer={\n        <>\n          <Button\n            htmlType=\"button\"\n            buttonSize=\"small\"\n            onClick={onHide}\n            data-test=\"properties-modal-cancel-button\"\n            cta\n          >\n            {t('Cancel')}\n          </Button>\n          <Button\n            data-test=\"properties-modal-apply-button\"\n            onClick={form.submit}\n            buttonSize=\"small\"\n            buttonStyle=\"primary\"\n            className=\"m-r-5\"\n            cta\n            disabled={dashboardInfo?.isManagedExternally}\n            tooltip={\n              dashboardInfo?.isManagedExternally\n                ? t(\n                    \"This dashboard is managed externally, and can't be edited in Superset\",\n                  )\n                : ''\n            }\n          >\n            {saveLabel}\n          </Button>\n        </>\n      }\n      responsive\n    >\n      <AntdForm\n        form={form}\n        onFinish={onFinish}\n        data-test=\"dashboard-edit-properties-form\"\n        layout=\"vertical\"\n        initialValues={dashboardInfo}\n      >\n        <Row>\n          <Col xs={24} md={24}>\n            <h3>{t('Basic information')}</h3>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col xs={24} md={12}>\n            <FormItem label={t('Title')} name=\"title\">\n              <Input\n                data-test=\"dashboard-title-input\"\n                type=\"text\"\n                disabled={isLoading}\n              />\n            </FormItem>\n          </Col>\n          <Col xs={24} md={12}>\n            <StyledFormItem label={t('URL slug')} name=\"slug\">\n              <Input type=\"text\" disabled={isLoading} />\n            </StyledFormItem>\n            <p className=\"help-block\">\n              {t('A readable URL for your dashboard')}\n            </p>\n          </Col>\n        </Row>\n        {isFeatureEnabled(FeatureFlag.DASHBOARD_RBAC)\n          ? getRowsWithRoles()\n          : getRowsWithoutRoles()}\n        <Row>\n          <Col xs={24} md={24}>\n            <h3>{t('Certification')}</h3>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col xs={24} md={12}>\n            <StyledFormItem label={t('Certified by')} name=\"certifiedBy\">\n              <Input type=\"text\" disabled={isLoading} />\n            </StyledFormItem>\n            <p className=\"help-block\">\n              {t('Person or group that has certified this dashboard.')}\n            </p>\n          </Col>\n          <Col xs={24} md={12}>\n            <StyledFormItem\n              label={t('Certification details')}\n              name=\"certificationDetails\"\n            >\n              <Input type=\"text\" disabled={isLoading} />\n            </StyledFormItem>\n            <p className=\"help-block\">\n              {t('Any additional detail to show in the certification tooltip.')}\n            </p>\n          </Col>\n        </Row>\n        {isFeatureEnabled(FeatureFlag.TAGGING_SYSTEM) ? (\n          <Row gutter={16}>\n            <Col xs={24} md={12}>\n              <h3 css={{ marginTop: '1em' }}>{t('Tags')}</h3>\n            </Col>\n          </Row>\n        ) : null}\n        {isFeatureEnabled(FeatureFlag.TAGGING_SYSTEM) ? (\n          <Row gutter={16}>\n            <Col xs={24} md={12}>\n              <StyledFormItem>\n                <AsyncSelect\n                  ariaLabel=\"Tags\"\n                  mode=\"multiple\"\n                  allowNewOptions\n                  value={tagsAsSelectValues}\n                  options={loadTags}\n                  onChange={handleChangeTags}\n                  allowClear\n                />\n              </StyledFormItem>\n              <p className=\"help-block\">\n                {t('A list of tags that have been applied to this chart.')}\n              </p>\n            </Col>\n          </Row>\n        ) : null}\n        <Row>\n          <Col xs={24} md={24}>\n            <h3 style={{ marginTop: '1em' }}>\n              <Button\n                buttonStyle=\"link\"\n                onClick={() => setIsAdvancedOpen(!isAdvancedOpen)}\n              >\n                <i\n                  className={`fa fa-angle-${isAdvancedOpen ? 'down' : 'right'}`}\n                  style={{ minWidth: '1em' }}\n                />\n                {t('Advanced')}\n              </Button>\n            </h3>\n            {isAdvancedOpen && (\n              <>\n                <StyledFormItem label={t('JSON metadata')}>\n                  <StyledJsonEditor\n                    showLoadingForImport\n                    name=\"json_metadata\"\n                    value={jsonMetadata}\n                    onChange={setJsonMetadata}\n                    tabSize={2}\n                    width=\"100%\"\n                    height=\"200px\"\n                    wrapEnabled\n                  />\n                </StyledFormItem>\n                <p className=\"help-block\">\n                  {t(\n                    'This JSON object is generated dynamically when clicking the save or overwrite button in the dashboard view. It is exposed here for reference and for power users who may want to alter specific parameters.',\n                  )}\n                  {onlyApply && (\n                    <>\n                      {' '}\n                      {t(\n                        'Please DO NOT overwrite the \"filter_scopes\" key.',\n                      )}{' '}\n                      <FilterScopeModal\n                        triggerNode={\n                          <span className=\"alert-link\">\n                            {t('Use \"%(menuName)s\" menu instead.', {\n                              menuName: t('Set filter mapping'),\n                            })}\n                          </span>\n                        }\n                      />\n                    </>\n                  )}\n                </p>\n              </>\n            )}\n          </Col>\n        </Row>\n      </AntdForm>\n    </Modal>\n  );\n};\n\nexport default withToasts(PropertiesModal);\n"]},"metadata":{},"sourceType":"module"}