{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { validateNumber } from '@superset-ui/core';\n// eslint-disable-next-line import/prefer-default-export\nexport function parseYAxisBound(bound) {\n  if (bound === undefined || bound === null || Number.isNaN(Number(bound))) {\n    return undefined;\n  }\n  return Number(bound);\n}\nexport function parseNumbersList(value, delim) {if (delim === void 0) {delim = ';';}\n  if (!value || !value.trim())\n  return [];\n  return value.split(delim).map((num) => {\n    if (validateNumber(num))\n    throw new Error('All values must be numeric');\n    return Number(num);\n  });\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(parseYAxisBound, \"parseYAxisBound\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/utils/controls.ts\");reactHotLoader.register(parseNumbersList, \"parseNumbersList\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/utils/controls.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,cAAT,QAA+B,mBAA/B;AAEA;AACA,OAAM,SAAUC,eAAV,CACJC,KADI,EAC0B;EAE9B,IAAIA,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAAjC,IAAyCE,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACF,KAAD,CAAnB,CAA7C,EAA0E;IACxE,OAAOC,SAAP;EACD;EACD,OAAOC,MAAM,CAACF,KAAD,CAAb;AACD;AAED,OAAM,SAAUI,gBAAV,CAA2BC,KAA3B,EAA0CC,KAA1C,EAAqD,KAAXA,KAAW,cAAXA,KAAW,GAAH,GAAG;EACzD,IAAI,CAACD,KAAD,IAAU,CAACA,KAAK,CAACE,IAAN,EAAf;EAA6B,OAAO,EAAP;EAC7B,OAAOF,KAAK,CAACG,KAAN,CAAYF,KAAZ,EAAmBG,GAAnB,CAAuB,IAAG,KAAG;IAClC,IAAIX,cAAc,CAACY,GAAD,CAAlB;IAAyB,MAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;IACzB,OAAOT,MAAM,CAACQ,GAAD,CAAb;EACD,CAHM,CAAP;AAID,C,iLAfeX,e,oKASAK,gB","names":["validateNumber","parseYAxisBound","bound","undefined","Number","isNaN","parseNumbersList","value","delim","trim","split","map","num","Error"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/utils/controls.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { validateNumber } from '@superset-ui/core';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function parseYAxisBound(\n  bound?: string | number | null,\n): number | undefined {\n  if (bound === undefined || bound === null || Number.isNaN(Number(bound))) {\n    return undefined;\n  }\n  return Number(bound);\n}\n\nexport function parseNumbersList(value: string, delim = ';') {\n  if (!value || !value.trim()) return [];\n  return value.split(delim).map(num => {\n    if (validateNumber(num)) throw new Error('All values must be numeric');\n    return Number(num);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}