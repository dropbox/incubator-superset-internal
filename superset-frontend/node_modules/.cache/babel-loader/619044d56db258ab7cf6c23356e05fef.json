{"ast":null,"code":"import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import { areObjectsEqual } from '../../../reduxUtils';\nexport const arrayDiff = (a, b) => [\n...a.filter((x) => !_includesInstanceProperty(b).call(b, x)),\n...b.filter((x) => !_includesInstanceProperty(a).call(a, x))];\n\nexport const getAffectedOwnDataCharts = (ownDataCharts, appliedOwnDataCharts) => {\n  const chartIds = Object.keys(ownDataCharts);\n  const appliedChartIds = Object.keys(appliedOwnDataCharts);\n  const affectedIds = arrayDiff(chartIds, appliedChartIds).filter((id) => ownDataCharts[id] || appliedOwnDataCharts[id]);\n  const checkForUpdateIds = new Set([...chartIds, ...appliedChartIds]);\n  checkForUpdateIds.forEach((chartId) => {\n    if (!areObjectsEqual(ownDataCharts[chartId], appliedOwnDataCharts[chartId])) {\n      affectedIds.push(chartId);\n    }\n  });\n  return [...new Set(affectedIds)];\n};","map":{"version":3,"mappings":"gGAmBA,SAASA,eAAT,QAAgC,qBAAhC;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,CAAD,EAAcC,CAAd,KAA8B;AACrD,GAAGD,CAAC,CAACE,MAAF,CAAS,EAAC,KAAI,CAAC,2BAAC,MAAD,EAAC,EAAUC,CAAV,CAAhB,CADkD;AAErD,GAAGF,CAAC,CAACC,MAAF,CAAS,EAAC,KAAI,CAAC,2BAAC,MAAD,EAAC,EAAUC,CAAV,CAAhB,CAFkD,CAAhD;;AAKP,OAAO,MAAMC,wBAAwB,GAAG,CACtCC,aADsC,EAEtCC,oBAFsC,KAGpC;EACF,MAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYJ,aAAZ,CAAjB;EACA,MAAMK,eAAe,GAAGF,MAAM,CAACC,IAAP,CAAYH,oBAAZ,CAAxB;EACA,MAAMK,WAAW,GAAaZ,SAAS,CAACQ,QAAD,EAAWG,eAAX,CAAT,CAAqCR,MAArC,CAC5B,GAAE,KAAIG,aAAa,CAACO,EAAD,CAAb,IAAqBN,oBAAoB,CAACM,EAAD,CADnB,CAA9B;EAGA,MAAMC,iBAAiB,GAAG,IAAIC,GAAJ,CAAgB,CAAC,GAAGP,QAAJ,EAAc,GAAGG,eAAjB,CAAhB,CAA1B;EACAG,iBAAiB,CAACE,OAAlB,CAA0B,QAAO,KAAG;IAClC,IACE,CAACjB,eAAe,CAACO,aAAa,CAACW,OAAD,CAAd,EAAyBV,oBAAoB,CAACU,OAAD,CAA7C,CADlB,EAEE;MACAL,WAAW,CAACM,IAAZ,CAAiBD,OAAjB;IACD;EACF,CAND;EAOA,OAAO,CAAC,GAAG,IAAIF,GAAJ,CAAQH,WAAR,CAAJ,CAAP;AACD,CAlBM","names":["areObjectsEqual","arrayDiff","a","b","filter","x","getAffectedOwnDataCharts","ownDataCharts","appliedOwnDataCharts","chartIds","Object","keys","appliedChartIds","affectedIds","id","checkForUpdateIds","Set","forEach","chartId","push"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/util/charts/getOwnDataCharts.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { JsonObject } from '@superset-ui/core';\nimport { areObjectsEqual } from '../../../reduxUtils';\n\nexport const arrayDiff = (a: string[], b: string[]) => [\n  ...a.filter(x => !b.includes(x)),\n  ...b.filter(x => !a.includes(x)),\n];\n\nexport const getAffectedOwnDataCharts = (\n  ownDataCharts: JsonObject,\n  appliedOwnDataCharts: JsonObject,\n) => {\n  const chartIds = Object.keys(ownDataCharts);\n  const appliedChartIds = Object.keys(appliedOwnDataCharts);\n  const affectedIds: string[] = arrayDiff(chartIds, appliedChartIds).filter(\n    id => ownDataCharts[id] || appliedOwnDataCharts[id],\n  );\n  const checkForUpdateIds = new Set<string>([...chartIds, ...appliedChartIds]);\n  checkForUpdateIds.forEach(chartId => {\n    if (\n      !areObjectsEqual(ownDataCharts[chartId], appliedOwnDataCharts[chartId])\n    ) {\n      affectedIds.push(chartId);\n    }\n  });\n  return [...new Set(affectedIds)];\n};\n"]},"metadata":{},"sourceType":"module"}