{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\n\nfunction extractTypes(metadata) {\n  return Object.keys(metadata).reduce((prev, key) => {\n    const result = prev;\n    result[key] = key;\n    return result;\n  }, {});\n}\n\nexport const ANNOTATION_TYPES_METADATA = {\n  FORMULA: {\n    value: 'FORMULA',\n    label: t('Formula') },\n\n  EVENT: {\n    value: 'EVENT',\n    label: t('Event'),\n    supportNativeSource: true },\n\n  INTERVAL: {\n    value: 'INTERVAL',\n    label: t('Interval'),\n    supportNativeSource: true },\n\n  TIME_SERIES: {\n    value: 'TIME_SERIES',\n    label: t('Time series') } };\n\n\n\nexport const ANNOTATION_TYPES = extractTypes(ANNOTATION_TYPES_METADATA);\n\nexport const DEFAULT_ANNOTATION_TYPE = ANNOTATION_TYPES.FORMULA;\n\nexport const ANNOTATION_SOURCE_TYPES_METADATA = {\n  NATIVE: {\n    value: 'NATIVE',\n    label: 'Superset annotation' } };\n\n\n\nexport const ANNOTATION_SOURCE_TYPES = extractTypes(\nANNOTATION_SOURCE_TYPES_METADATA);\n\n\nexport function requiresQuery(annotationSourceType) {\n  return !!annotationSourceType;\n}\n\nconst NATIVE_COLUMN_NAMES = {\n  timeColumn: 'start_dttm',\n  intervalEndColumn: 'end_dttm',\n  titleColumn: 'short_descr',\n  descriptionColumns: ['long_descr'] };\n\n\nexport function applyNativeColumns(annotation) {\n  if (annotation.sourceType === ANNOTATION_SOURCE_TYPES.NATIVE) {\n    return { ...annotation, ...NATIVE_COLUMN_NAMES };\n  }\n  return annotation;\n}","map":{"version":3,"names":["t","extractTypes","metadata","Object","keys","reduce","prev","key","result","ANNOTATION_TYPES_METADATA","FORMULA","value","label","EVENT","supportNativeSource","INTERVAL","TIME_SERIES","ANNOTATION_TYPES","DEFAULT_ANNOTATION_TYPE","ANNOTATION_SOURCE_TYPES_METADATA","NATIVE","ANNOTATION_SOURCE_TYPES","requiresQuery","annotationSourceType","NATIVE_COLUMN_NAMES","timeColumn","intervalEndColumn","titleColumn","descriptionColumns","applyNativeColumns","annotation","sourceType"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/modules/AnnotationTypes.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\n\nfunction extractTypes(metadata) {\n  return Object.keys(metadata).reduce((prev, key) => {\n    const result = prev;\n    result[key] = key;\n    return result;\n  }, {});\n}\n\nexport const ANNOTATION_TYPES_METADATA = {\n  FORMULA: {\n    value: 'FORMULA',\n    label: t('Formula'),\n  },\n  EVENT: {\n    value: 'EVENT',\n    label: t('Event'),\n    supportNativeSource: true,\n  },\n  INTERVAL: {\n    value: 'INTERVAL',\n    label: t('Interval'),\n    supportNativeSource: true,\n  },\n  TIME_SERIES: {\n    value: 'TIME_SERIES',\n    label: t('Time series'),\n  },\n};\n\nexport const ANNOTATION_TYPES = extractTypes(ANNOTATION_TYPES_METADATA);\n\nexport const DEFAULT_ANNOTATION_TYPE = ANNOTATION_TYPES.FORMULA;\n\nexport const ANNOTATION_SOURCE_TYPES_METADATA = {\n  NATIVE: {\n    value: 'NATIVE',\n    label: 'Superset annotation',\n  },\n};\n\nexport const ANNOTATION_SOURCE_TYPES = extractTypes(\n  ANNOTATION_SOURCE_TYPES_METADATA,\n);\n\nexport function requiresQuery(annotationSourceType) {\n  return !!annotationSourceType;\n}\n\nconst NATIVE_COLUMN_NAMES = {\n  timeColumn: 'start_dttm',\n  intervalEndColumn: 'end_dttm',\n  titleColumn: 'short_descr',\n  descriptionColumns: ['long_descr'],\n};\n\nexport function applyNativeColumns(annotation) {\n  if (annotation.sourceType === ANNOTATION_SOURCE_TYPES.NATIVE) {\n    return { ...annotation, ...NATIVE_COLUMN_NAMES };\n  }\n  return annotation;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,CAAT,QAAkB,mBAAlB;;AAEA,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;EAC9B,OAAOC,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,MAAtB,CAA6B,CAACC,IAAD,EAAOC,GAAP,KAAe;IACjD,MAAMC,MAAM,GAAGF,IAAf;IACAE,MAAM,CAACD,GAAD,CAAN,GAAcA,GAAd;IACA,OAAOC,MAAP;EACD,CAJM,EAIJ,EAJI,CAAP;AAKD;;AAED,OAAO,MAAMC,yBAAyB,GAAG;EACvCC,OAAO,EAAE;IACPC,KAAK,EAAE,SADA;IAEPC,KAAK,EAAEZ,CAAC,CAAC,SAAD,CAFD,EAD8B;;EAKvCa,KAAK,EAAE;IACLF,KAAK,EAAE,OADF;IAELC,KAAK,EAAEZ,CAAC,CAAC,OAAD,CAFH;IAGLc,mBAAmB,EAAE,IAHhB,EALgC;;EAUvCC,QAAQ,EAAE;IACRJ,KAAK,EAAE,UADC;IAERC,KAAK,EAAEZ,CAAC,CAAC,UAAD,CAFA;IAGRc,mBAAmB,EAAE,IAHb,EAV6B;;EAevCE,WAAW,EAAE;IACXL,KAAK,EAAE,aADI;IAEXC,KAAK,EAAEZ,CAAC,CAAC,aAAD,CAFG,EAf0B,EAAlC;;;;AAqBP,OAAO,MAAMiB,gBAAgB,GAAGhB,YAAY,CAACQ,yBAAD,CAArC;;AAEP,OAAO,MAAMS,uBAAuB,GAAGD,gBAAgB,CAACP,OAAjD;;AAEP,OAAO,MAAMS,gCAAgC,GAAG;EAC9CC,MAAM,EAAE;IACNT,KAAK,EAAE,QADD;IAENC,KAAK,EAAE,qBAFD,EADsC,EAAzC;;;;AAOP,OAAO,MAAMS,uBAAuB,GAAGpB,YAAY;AACjDkB,gCADiD,CAA5C;;;AAIP,OAAO,SAASG,aAAT,CAAuBC,oBAAvB,EAA6C;EAClD,OAAO,CAAC,CAACA,oBAAT;AACD;;AAED,MAAMC,mBAAmB,GAAG;EAC1BC,UAAU,EAAE,YADc;EAE1BC,iBAAiB,EAAE,UAFO;EAG1BC,WAAW,EAAE,aAHa;EAI1BC,kBAAkB,EAAE,CAAC,YAAD,CAJM,EAA5B;;;AAOA,OAAO,SAASC,kBAAT,CAA4BC,UAA5B,EAAwC;EAC7C,IAAIA,UAAU,CAACC,UAAX,KAA0BV,uBAAuB,CAACD,MAAtD,EAA8D;IAC5D,OAAO,EAAE,GAAGU,UAAL,EAAiB,GAAGN,mBAApB,EAAP;EACD;EACD,OAAOM,UAAP;AACD"},"metadata":{},"sourceType":"module"}