{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { ControlSubSectionHeader, D3_TIME_FORMAT_DOCS, getStandardizedControls, sections, sharedControls } from '@superset-ui/chart-controls';\nimport { EchartsTimeseriesSeriesType } from '../types';\nimport { DEFAULT_FORM_DATA, TIME_SERIES_DESCRIPTION_TEXT } from '../constants';\nimport { legendSection, onlyTotalControl, showValueControl, richTooltipSection, seriesOrderSection, percentageThresholdControl } from '../../controls';\nimport { AreaChartStackControlOptions } from '../../constants';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst { logAxis, markerEnabled, markerSize, minorSplitLine, opacity, rowLimit, seriesType, truncateYAxis, yAxisBounds, zoomable, xAxisLabelRotation } = DEFAULT_FORM_DATA;\nconst config = {\n  controlPanelSections: [\n  sections.genericTime,\n  sections.echartsTimeSeriesQueryWithXAxisSort,\n  sections.advancedAnalyticsControls,\n  sections.annotationsAndLayersControls,\n  sections.forecastIntervalControls,\n  sections.titleControls,\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [\n    ...seriesOrderSection,\n    ['color_scheme'],\n    [\n    {\n      name: 'seriesType',\n      config: {\n        type: 'SelectControl',\n        label: t('Series Style'),\n        renderTrigger: true,\n        default: seriesType,\n        choices: [\n        [EchartsTimeseriesSeriesType.Line, t('Line')],\n        [EchartsTimeseriesSeriesType.Smooth, t('Smooth Line')],\n        [EchartsTimeseriesSeriesType.Start, t('Step - start')],\n        [EchartsTimeseriesSeriesType.Middle, t('Step - middle')],\n        [EchartsTimeseriesSeriesType.End, t('Step - end')]],\n\n        description: t('Series chart type (line, bar etc)') } }],\n\n\n\n    [\n    {\n      name: 'opacity',\n      config: {\n        type: 'SliderControl',\n        label: t('Area chart opacity'),\n        renderTrigger: true,\n        min: 0,\n        max: 1,\n        step: 0.1,\n        default: opacity,\n        description: t('Opacity of Area Chart. Also applies to confidence band.') } }],\n\n\n\n    [showValueControl],\n    [\n    {\n      name: 'stack',\n      config: {\n        type: 'SelectControl',\n        label: t('Stacked Style'),\n        renderTrigger: true,\n        choices: AreaChartStackControlOptions,\n        default: null,\n        description: t('Stack series on top of each other') } }],\n\n\n\n    [onlyTotalControl],\n    [percentageThresholdControl],\n    [\n    {\n      name: 'show_extra_controls',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Extra Controls'),\n        renderTrigger: true,\n        default: false,\n        description: t('Whether to show extra controls or not. Extra controls ' +\n        'include things like making mulitBar charts stacked ' +\n        'or side by side.') } }],\n\n\n\n    [\n    {\n      name: 'markerEnabled',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Marker'),\n        renderTrigger: true,\n        default: markerEnabled,\n        description: t('Draw a marker on data points. Only applicable for line types.') } }],\n\n\n\n    [\n    {\n      name: 'markerSize',\n      config: {\n        type: 'SliderControl',\n        label: t('Marker Size'),\n        renderTrigger: true,\n        min: 0,\n        max: 20,\n        default: markerSize,\n        description: t('Size of marker. Also applies to forecast observations.'),\n        visibility: (_ref) => {var _controls$markerEnabl;let { controls } = _ref;return Boolean(controls == null ? void 0 : (_controls$markerEnabl = controls.markerEnabled) == null ? void 0 : _controls$markerEnabl.value);} } }],\n\n\n\n    [\n    {\n      name: 'zoomable',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Data Zoom'),\n        default: zoomable,\n        renderTrigger: true,\n        description: t('Enable data zooming controls') } }],\n\n\n\n    ...legendSection,\n    [___EmotionJSX(ControlSubSectionHeader, null, t('X Axis'))],\n    [\n    {\n      name: 'x_axis_time_format',\n      config: {\n        ...sharedControls.x_axis_time_format,\n        default: 'smart_date',\n        description: `${D3_TIME_FORMAT_DOCS}. ${TIME_SERIES_DESCRIPTION_TEXT}` } }],\n\n\n\n    [\n    {\n      name: 'xAxisLabelRotation',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        clearable: false,\n        label: t('Rotate x axis label'),\n        choices: [\n        [0, '0°'],\n        [45, '45°']],\n\n        default: xAxisLabelRotation,\n        renderTrigger: true,\n        description: t('Input field supports custom rotation. e.g. 30 for 30°') } }],\n\n\n\n    ...richTooltipSection,\n    // eslint-disable-next-line react/jsx-key\n    [___EmotionJSX(ControlSubSectionHeader, null, t('Y Axis'))],\n    ['y_axis_format'],\n    [\n    {\n      name: 'logAxis',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Logarithmic y-axis'),\n        renderTrigger: true,\n        default: logAxis,\n        description: t('Logarithmic y-axis') } }],\n\n\n\n    [\n    {\n      name: 'minorSplitLine',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Minor Split Line'),\n        renderTrigger: true,\n        default: minorSplitLine,\n        description: t('Draw split lines for minor y-axis ticks') } }],\n\n\n\n    [\n    {\n      name: 'truncateYAxis',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Truncate Y Axis'),\n        default: truncateYAxis,\n        renderTrigger: true,\n        description: t('Truncate Y Axis. Can be overridden by specifying a min or max bound.') } }],\n\n\n\n    [\n    {\n      name: 'y_axis_bounds',\n      config: {\n        type: 'BoundsControl',\n        label: t('Y Axis Bounds'),\n        renderTrigger: true,\n        default: yAxisBounds,\n        description: t('Bounds for the Y-axis. When left empty, the bounds are ' +\n        'dynamically defined based on the min/max of the data. Note that ' +\n        \"this feature will only expand the axis range. It won't \" +\n        \"narrow the data's extent.\"),\n        visibility: (_ref2) => {var _controls$truncateYAx;let { controls } = _ref2;return Boolean(controls == null ? void 0 : (_controls$truncateYAx = controls.truncateYAxis) == null ? void 0 : _controls$truncateYAx.value);} } }]] }],\n\n\n\n\n\n\n  controlOverrides: {\n    row_limit: {\n      default: rowLimit } },\n\n\n  formDataOverrides: (formData) => ({\n    ...formData,\n    metrics: getStandardizedControls().popAllMetrics(),\n    groupby: getStandardizedControls().popAllColumns() }) };\n\n\nexport default config;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,CAAT,QAAkB,mBAAlB;AACA,SAGEC,uBAHF,EAIEC,mBAJF,EAKEC,uBALF,EAMEC,QANF,EAOEC,cAPF,QAQO,6BARP;AAUA,SAASC,2BAAT,QAA4C,UAA5C;AACA,SAASC,iBAAT,EAA4BC,4BAA5B,QAAgE,cAAhE;AACA,SACEC,aADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,kBAJF,EAKEC,kBALF,EAMEC,0BANF,QAOO,gBAPP;AAQA,SAASC,4BAAT,QAA6C,iBAA7C,C;AAEA,MAAM,EACJC,OADI,EAEJC,aAFI,EAGJC,UAHI,EAIJC,cAJI,EAKJC,OALI,EAMJC,QANI,EAOJC,UAPI,EAQJC,aARI,EASJC,WATI,EAUJC,QAVI,EAWJC,kBAXI,KAYFnB,iBAZJ;AAaA,MAAMoB,MAAM,GAAuB;EACjCC,oBAAoB,EAAE;EACpBxB,QAAQ,CAACyB,WADW;EAEpBzB,QAAQ,CAAC0B,mCAFW;EAGpB1B,QAAQ,CAAC2B,yBAHW;EAIpB3B,QAAQ,CAAC4B,4BAJW;EAKpB5B,QAAQ,CAAC6B,wBALW;EAMpB7B,QAAQ,CAAC8B,aANW;EAOpB;IACEC,KAAK,EAAEnC,CAAC,CAAC,eAAD,CADV;IAEEoC,QAAQ,EAAE,IAFZ;IAGEC,cAAc,EAAE;IACd,GAAGxB,kBADW;IAEd,CAAC,cAAD,CAFc;IAGd;IACE;MACEyB,IAAI,EAAE,YADR;MAEEX,MAAM,EAAE;QACNY,IAAI,EAAE,eADA;QAENJ,KAAK,EAAEnC,CAAC,CAAC,cAAD,CAFF;QAGNwC,aAAa,EAAE,IAHT;QAINC,OAAO,EAAEnB,UAJH;QAKNoB,OAAO,EAAE;QACP,CAACpC,2BAA2B,CAACqC,IAA7B,EAAmC3C,CAAC,CAAC,MAAD,CAApC,CADO;QAEP,CAACM,2BAA2B,CAACsC,MAA7B,EAAqC5C,CAAC,CAAC,aAAD,CAAtC,CAFO;QAGP,CAACM,2BAA2B,CAACuC,KAA7B,EAAoC7C,CAAC,CAAC,cAAD,CAArC,CAHO;QAIP,CAACM,2BAA2B,CAACwC,MAA7B,EAAqC9C,CAAC,CAAC,eAAD,CAAtC,CAJO;QAKP,CAACM,2BAA2B,CAACyC,GAA7B,EAAkC/C,CAAC,CAAC,YAAD,CAAnC,CALO,CALH;;QAYNgD,WAAW,EAAEhD,CAAC,CAAC,mCAAD,CAZR,EAFV,EADF,CAHc;;;;IAsBd;IACE;MACEsC,IAAI,EAAE,SADR;MAEEX,MAAM,EAAE;QACNY,IAAI,EAAE,eADA;QAENJ,KAAK,EAAEnC,CAAC,CAAC,oBAAD,CAFF;QAGNwC,aAAa,EAAE,IAHT;QAINS,GAAG,EAAE,CAJC;QAKNC,GAAG,EAAE,CALC;QAMNC,IAAI,EAAE,GANA;QAONV,OAAO,EAAErB,OAPH;QAQN4B,WAAW,EAAEhD,CAAC,CACZ,yDADY,CARR,EAFV,EADF,CAtBc;;;;IAuCd,CAACW,gBAAD,CAvCc;IAwCd;IACE;MACE2B,IAAI,EAAE,OADR;MAEEX,MAAM,EAAE;QACNY,IAAI,EAAE,eADA;QAENJ,KAAK,EAAEnC,CAAC,CAAC,eAAD,CAFF;QAGNwC,aAAa,EAAE,IAHT;QAINE,OAAO,EAAE3B,4BAJH;QAKN0B,OAAO,EAAE,IALH;QAMNO,WAAW,EAAEhD,CAAC,CAAC,mCAAD,CANR,EAFV,EADF,CAxCc;;;;IAqDd,CAACU,gBAAD,CArDc;IAsDd,CAACI,0BAAD,CAtDc;IAuDd;IACE;MACEwB,IAAI,EAAE,qBADR;MAEEX,MAAM,EAAE;QACNY,IAAI,EAAE,iBADA;QAENJ,KAAK,EAAEnC,CAAC,CAAC,gBAAD,CAFF;QAGNwC,aAAa,EAAE,IAHT;QAINC,OAAO,EAAE,KAJH;QAKNO,WAAW,EAAEhD,CAAC,CACZ;QACE,qDADF;QAEE,kBAHU,CALR,EAFV,EADF,CAvDc;;;;IAuEd;IACE;MACEsC,IAAI,EAAE,eADR;MAEEX,MAAM,EAAE;QACNY,IAAI,EAAE,iBADA;QAENJ,KAAK,EAAEnC,CAAC,CAAC,QAAD,CAFF;QAGNwC,aAAa,EAAE,IAHT;QAINC,OAAO,EAAExB,aAJH;QAKN+B,WAAW,EAAEhD,CAAC,CACZ,+DADY,CALR,EAFV,EADF,CAvEc;;;;IAqFd;IACE;MACEsC,IAAI,EAAE,YADR;MAEEX,MAAM,EAAE;QACNY,IAAI,EAAE,eADA;QAENJ,KAAK,EAAEnC,CAAC,CAAC,aAAD,CAFF;QAGNwC,aAAa,EAAE,IAHT;QAINS,GAAG,EAAE,CAJC;QAKNC,GAAG,EAAE,EALC;QAMNT,OAAO,EAAEvB,UANH;QAON8B,WAAW,EAAEhD,CAAC,CACZ,wDADY,CAPR;QAUNoD,UAAU,EAAE,yCAAC,EAAEC,QAAF,EAAD,eACVC,OAAO,CAACD,QAAD,6CAACA,QAAQ,CAAEpC,aAAX,qBAAC,sBAAyBsC,KAA1B,CADG,EAVN,EAFV,EADF,CArFc;;;;IAuGd;IACE;MACEjB,IAAI,EAAE,UADR;MAEEX,MAAM,EAAE;QACNY,IAAI,EAAE,iBADA;QAENJ,KAAK,EAAEnC,CAAC,CAAC,WAAD,CAFF;QAGNyC,OAAO,EAAEhB,QAHH;QAINe,aAAa,EAAE,IAJT;QAKNQ,WAAW,EAAEhD,CAAC,CAAC,8BAAD,CALR,EAFV,EADF,CAvGc;;;;IAmHd,GAAGS,aAnHW;IAoHd,CAAC,cAAC,uBAAD,QAA0BT,CAAC,CAAC,QAAD,CAA3B,CAAD,CApHc;IAqHd;IACE;MACEsC,IAAI,EAAE,oBADR;MAEEX,MAAM,EAAE;QACN,GAAGtB,cAAc,CAACmD,kBADZ;QAENf,OAAO,EAAE,YAFH;QAGNO,WAAW,EAAE,GAAG9C,mBAAmB,KAAKM,4BAA4B,EAH9D,EAFV,EADF,CArHc;;;;IA+Hd;IACE;MACE8B,IAAI,EAAE,oBADR;MAEEX,MAAM,EAAE;QACNY,IAAI,EAAE,eADA;QAENkB,QAAQ,EAAE,IAFJ;QAGNC,SAAS,EAAE,KAHL;QAINvB,KAAK,EAAEnC,CAAC,CAAC,qBAAD,CAJF;QAKN0C,OAAO,EAAE;QACP,CAAC,CAAD,EAAI,IAAJ,CADO;QAEP,CAAC,EAAD,EAAK,KAAL,CAFO,CALH;;QASND,OAAO,EAAEf,kBATH;QAUNc,aAAa,EAAE,IAVT;QAWNQ,WAAW,EAAEhD,CAAC,CACZ,uDADY,CAXR,EAFV,EADF,CA/Hc;;;;IAmJd,GAAGY,kBAnJW;IAoJd;IACA,CAAC,cAAC,uBAAD,QAA0BZ,CAAC,CAAC,QAAD,CAA3B,CAAD,CArJc;IAsJd,CAAC,eAAD,CAtJc;IAuJd;IACE;MACEsC,IAAI,EAAE,SADR;MAEEX,MAAM,EAAE;QACNY,IAAI,EAAE,iBADA;QAENJ,KAAK,EAAEnC,CAAC,CAAC,oBAAD,CAFF;QAGNwC,aAAa,EAAE,IAHT;QAINC,OAAO,EAAEzB,OAJH;QAKNgC,WAAW,EAAEhD,CAAC,CAAC,oBAAD,CALR,EAFV,EADF,CAvJc;;;;IAmKd;IACE;MACEsC,IAAI,EAAE,gBADR;MAEEX,MAAM,EAAE;QACNY,IAAI,EAAE,iBADA;QAENJ,KAAK,EAAEnC,CAAC,CAAC,kBAAD,CAFF;QAGNwC,aAAa,EAAE,IAHT;QAINC,OAAO,EAAEtB,cAJH;QAKN6B,WAAW,EAAEhD,CAAC,CAAC,yCAAD,CALR,EAFV,EADF,CAnKc;;;;IA+Kd;IACE;MACEsC,IAAI,EAAE,eADR;MAEEX,MAAM,EAAE;QACNY,IAAI,EAAE,iBADA;QAENJ,KAAK,EAAEnC,CAAC,CAAC,iBAAD,CAFF;QAGNyC,OAAO,EAAElB,aAHH;QAINiB,aAAa,EAAE,IAJT;QAKNQ,WAAW,EAAEhD,CAAC,CACZ,sEADY,CALR,EAFV,EADF,CA/Kc;;;;IA6Ld;IACE;MACEsC,IAAI,EAAE,eADR;MAEEX,MAAM,EAAE;QACNY,IAAI,EAAE,eADA;QAENJ,KAAK,EAAEnC,CAAC,CAAC,eAAD,CAFF;QAGNwC,aAAa,EAAE,IAHT;QAINC,OAAO,EAAEjB,WAJH;QAKNwB,WAAW,EAAEhD,CAAC,CACZ;QACE,kEADF;QAEE,yDAFF;QAGE,2BAJU,CALR;QAWNoD,UAAU,EAAE,0CAAC,EAAEC,QAAF,EAAD,gBACVC,OAAO,CAACD,QAAD,6CAACA,QAAQ,CAAE9B,aAAX,qBAAC,sBAAyBgC,KAA1B,CADG,EAXN,EAFV,EADF,CA7Lc,CAHlB,EAPoB,CADW;;;;;;;EA8NjCI,gBAAgB,EAAE;IAChBC,SAAS,EAAE;MACTnB,OAAO,EAAEpB,QADA,EADK,EA9Ne;;;EAmOjCwC,iBAAiB,EAAE,SAAQ,MAAK;IAC9B,GAAGC,QAD2B;IAE9BC,OAAO,EAAE5D,uBAAuB,GAAG6D,aAA1B,EAFqB;IAG9BC,OAAO,EAAE9D,uBAAuB,GAAG+D,aAA1B,EAHqB,EAAL,CAnOM,EAAnC;;;AA0OA,eAAevC,MAAf","names":["React","t","ControlSubSectionHeader","D3_TIME_FORMAT_DOCS","getStandardizedControls","sections","sharedControls","EchartsTimeseriesSeriesType","DEFAULT_FORM_DATA","TIME_SERIES_DESCRIPTION_TEXT","legendSection","onlyTotalControl","showValueControl","richTooltipSection","seriesOrderSection","percentageThresholdControl","AreaChartStackControlOptions","logAxis","markerEnabled","markerSize","minorSplitLine","opacity","rowLimit","seriesType","truncateYAxis","yAxisBounds","zoomable","xAxisLabelRotation","config","controlPanelSections","genericTime","echartsTimeSeriesQueryWithXAxisSort","advancedAnalyticsControls","annotationsAndLayersControls","forecastIntervalControls","titleControls","label","expanded","controlSetRows","name","type","renderTrigger","default","choices","Line","Smooth","Start","Middle","End","description","min","max","step","visibility","controls","Boolean","value","x_axis_time_format","freeForm","clearable","controlOverrides","row_limit","formDataOverrides","formData","metrics","popAllMetrics","groupby","popAllColumns"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/plugin-chart-echarts/src/Timeseries/Area/controlPanel.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  ControlPanelsContainerProps,\n  ControlSubSectionHeader,\n  D3_TIME_FORMAT_DOCS,\n  getStandardizedControls,\n  sections,\n  sharedControls,\n} from '@superset-ui/chart-controls';\n\nimport { EchartsTimeseriesSeriesType } from '../types';\nimport { DEFAULT_FORM_DATA, TIME_SERIES_DESCRIPTION_TEXT } from '../constants';\nimport {\n  legendSection,\n  onlyTotalControl,\n  showValueControl,\n  richTooltipSection,\n  seriesOrderSection,\n  percentageThresholdControl,\n} from '../../controls';\nimport { AreaChartStackControlOptions } from '../../constants';\n\nconst {\n  logAxis,\n  markerEnabled,\n  markerSize,\n  minorSplitLine,\n  opacity,\n  rowLimit,\n  seriesType,\n  truncateYAxis,\n  yAxisBounds,\n  zoomable,\n  xAxisLabelRotation,\n} = DEFAULT_FORM_DATA;\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.genericTime,\n    sections.echartsTimeSeriesQueryWithXAxisSort,\n    sections.advancedAnalyticsControls,\n    sections.annotationsAndLayersControls,\n    sections.forecastIntervalControls,\n    sections.titleControls,\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        ...seriesOrderSection,\n        ['color_scheme'],\n        [\n          {\n            name: 'seriesType',\n            config: {\n              type: 'SelectControl',\n              label: t('Series Style'),\n              renderTrigger: true,\n              default: seriesType,\n              choices: [\n                [EchartsTimeseriesSeriesType.Line, t('Line')],\n                [EchartsTimeseriesSeriesType.Smooth, t('Smooth Line')],\n                [EchartsTimeseriesSeriesType.Start, t('Step - start')],\n                [EchartsTimeseriesSeriesType.Middle, t('Step - middle')],\n                [EchartsTimeseriesSeriesType.End, t('Step - end')],\n              ],\n              description: t('Series chart type (line, bar etc)'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'opacity',\n            config: {\n              type: 'SliderControl',\n              label: t('Area chart opacity'),\n              renderTrigger: true,\n              min: 0,\n              max: 1,\n              step: 0.1,\n              default: opacity,\n              description: t(\n                'Opacity of Area Chart. Also applies to confidence band.',\n              ),\n            },\n          },\n        ],\n        [showValueControl],\n        [\n          {\n            name: 'stack',\n            config: {\n              type: 'SelectControl',\n              label: t('Stacked Style'),\n              renderTrigger: true,\n              choices: AreaChartStackControlOptions,\n              default: null,\n              description: t('Stack series on top of each other'),\n            },\n          },\n        ],\n        [onlyTotalControl],\n        [percentageThresholdControl],\n        [\n          {\n            name: 'show_extra_controls',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Extra Controls'),\n              renderTrigger: true,\n              default: false,\n              description: t(\n                'Whether to show extra controls or not. Extra controls ' +\n                  'include things like making mulitBar charts stacked ' +\n                  'or side by side.',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'markerEnabled',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Marker'),\n              renderTrigger: true,\n              default: markerEnabled,\n              description: t(\n                'Draw a marker on data points. Only applicable for line types.',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'markerSize',\n            config: {\n              type: 'SliderControl',\n              label: t('Marker Size'),\n              renderTrigger: true,\n              min: 0,\n              max: 20,\n              default: markerSize,\n              description: t(\n                'Size of marker. Also applies to forecast observations.',\n              ),\n              visibility: ({ controls }: ControlPanelsContainerProps) =>\n                Boolean(controls?.markerEnabled?.value),\n            },\n          },\n        ],\n        [\n          {\n            name: 'zoomable',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Data Zoom'),\n              default: zoomable,\n              renderTrigger: true,\n              description: t('Enable data zooming controls'),\n            },\n          },\n        ],\n        ...legendSection,\n        [<ControlSubSectionHeader>{t('X Axis')}</ControlSubSectionHeader>],\n        [\n          {\n            name: 'x_axis_time_format',\n            config: {\n              ...sharedControls.x_axis_time_format,\n              default: 'smart_date',\n              description: `${D3_TIME_FORMAT_DOCS}. ${TIME_SERIES_DESCRIPTION_TEXT}`,\n            },\n          },\n        ],\n        [\n          {\n            name: 'xAxisLabelRotation',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              clearable: false,\n              label: t('Rotate x axis label'),\n              choices: [\n                [0, '0°'],\n                [45, '45°'],\n              ],\n              default: xAxisLabelRotation,\n              renderTrigger: true,\n              description: t(\n                'Input field supports custom rotation. e.g. 30 for 30°',\n              ),\n            },\n          },\n        ],\n        ...richTooltipSection,\n        // eslint-disable-next-line react/jsx-key\n        [<ControlSubSectionHeader>{t('Y Axis')}</ControlSubSectionHeader>],\n        ['y_axis_format'],\n        [\n          {\n            name: 'logAxis',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Logarithmic y-axis'),\n              renderTrigger: true,\n              default: logAxis,\n              description: t('Logarithmic y-axis'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'minorSplitLine',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Minor Split Line'),\n              renderTrigger: true,\n              default: minorSplitLine,\n              description: t('Draw split lines for minor y-axis ticks'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'truncateYAxis',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Truncate Y Axis'),\n              default: truncateYAxis,\n              renderTrigger: true,\n              description: t(\n                'Truncate Y Axis. Can be overridden by specifying a min or max bound.',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'y_axis_bounds',\n            config: {\n              type: 'BoundsControl',\n              label: t('Y Axis Bounds'),\n              renderTrigger: true,\n              default: yAxisBounds,\n              description: t(\n                'Bounds for the Y-axis. When left empty, the bounds are ' +\n                  'dynamically defined based on the min/max of the data. Note that ' +\n                  \"this feature will only expand the axis range. It won't \" +\n                  \"narrow the data's extent.\",\n              ),\n              visibility: ({ controls }: ControlPanelsContainerProps) =>\n                Boolean(controls?.truncateYAxis?.value),\n            },\n          },\n        ],\n      ],\n    },\n  ],\n  controlOverrides: {\n    row_limit: {\n      default: rowLimit,\n    },\n  },\n  formDataOverrides: formData => ({\n    ...formData,\n    metrics: getStandardizedControls().popAllMetrics(),\n    groupby: getStandardizedControls().popAllColumns(),\n  }),\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}