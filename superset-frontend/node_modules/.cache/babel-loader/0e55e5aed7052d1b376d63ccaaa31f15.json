{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Registry, makeSingleton, OverwritePolicy } from '../..';\nclass ChartBuildQueryRegistry extends Registry {\n  constructor() {\n    super({ name: 'ChartBuildQuery', overwritePolicy: OverwritePolicy.WARN });\n  }}\n\nconst getInstance = makeSingleton(ChartBuildQueryRegistry);\nexport default getInstance;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAmBA,SACEA,QADF,EAEEC,aAFF,EAGEC,eAHF,QAOO,OAPP;AAwBA,MAAMC,uBAAN,SAAsCH,QAAtC,CAA0D;EACxDI;IACE,MAAM,EAAEC,IAAI,EAAE,iBAAR,EAA2BC,eAAe,EAAEJ,eAAe,CAACK,IAA5D,EAAN;EACD,CAHuD;;AAM1D,MAAMC,WAAW,GAAGP,aAAa,CAACE,uBAAD,CAAjC;AAEA,eAAeK,WAAf","names":["Registry","makeSingleton","OverwritePolicy","ChartBuildQueryRegistry","constructor","name","overwritePolicy","WARN","getInstance"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/packages/superset-ui-core/src/chart/registries/ChartBuildQueryRegistrySingleton.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  Registry,\n  makeSingleton,\n  OverwritePolicy,\n  QueryContext,\n  SetDataMaskHook,\n  JsonObject,\n} from '../..';\n\n// Ideally this would be <T extends QueryFormData>\nexport type BuildQuery<T = any> = (\n  formData: T,\n  options?: {\n    extras?: {\n      cachedChanges?: any;\n    };\n    ownState?: JsonObject;\n    hooks?: {\n      setDataMask: SetDataMaskHook;\n      setCachedChanges: (newChanges: any) => void;\n    };\n  },\n) => QueryContext;\n\nclass ChartBuildQueryRegistry extends Registry<BuildQuery> {\n  constructor() {\n    super({ name: 'ChartBuildQuery', overwritePolicy: OverwritePolicy.WARN });\n  }\n}\n\nconst getInstance = makeSingleton(ChartBuildQueryRegistry);\n\nexport default getInstance;\n"]},"metadata":{},"sourceType":"module"}