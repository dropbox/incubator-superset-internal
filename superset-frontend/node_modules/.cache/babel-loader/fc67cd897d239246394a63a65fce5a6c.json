{"ast":null,"code":"import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useCallback } from 'react';\nimport { Link, useHistory, withRouter } from 'react-router-dom';\nimport moment from 'moment';\nimport { Behavior, css, FeatureFlag, getChartMetadataRegistry, styled, t, useTheme } from '@superset-ui/core';\nimport { useSelector } from 'react-redux';\nimport { Menu } from 'src/components/Menu';\nimport { NoAnimationDropdown } from 'src/components/Dropdown';\nimport ShareMenuItems from 'src/dashboard/components/menu/ShareMenuItems';\nimport downloadAsImage from 'src/utils/downloadAsImage';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport { getSliceHeaderTooltip } from 'src/dashboard/util/getSliceHeaderTooltip';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport Button from 'src/components/Button';\nimport ViewQueryModal from 'src/explore/components/controls/ViewQueryModal';\nimport { ResultsPaneOnDashboard } from 'src/explore/components/DataTablesPane';\nimport Modal from 'src/components/Modal';\nimport { DrillDetailMenuItems } from 'src/components/Chart/DrillDetail';\nimport { LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE } from 'src/logger/LogUtils';\nimport { useCrossFiltersScopingModal } from '../nativeFilters/FilterBar/CrossFilters/ScopingModal/useCrossFiltersScopingModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst MENU_KEYS = {\n  DOWNLOAD_AS_IMAGE: 'download_as_image',\n  EXPLORE_CHART: 'explore_chart',\n  EXPORT_CSV: 'export_csv',\n  EXPORT_FULL_CSV: 'export_full_csv',\n  EXPORT_XLSX: 'export_xlsx',\n  FORCE_REFRESH: 'force_refresh',\n  FULLSCREEN: 'fullscreen',\n  TOGGLE_CHART_DESCRIPTION: 'toggle_chart_description',\n  VIEW_QUERY: 'view_query',\n  VIEW_RESULTS: 'view_results',\n  DRILL_TO_DETAIL: 'drill_to_detail',\n  CROSS_FILTER_SCOPING: 'cross_filter_scoping' };\n\n// TODO: replace 3 dots with an icon\nconst VerticalDotsContainer = styled.div`\n  padding: ${(_ref) => {let { theme } = _ref;return theme.gridUnit / 4;}}px\n    ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit * 1.5;}}px;\n\n  .dot {\n    display: block;\n\n    height: ${(_ref3) => {let { theme } = _ref3;return theme.gridUnit;}}px;\n    width: ${(_ref4) => {let { theme } = _ref4;return theme.gridUnit;}}px;\n    border-radius: 50%;\n    margin: ${(_ref5) => {let { theme } = _ref5;return theme.gridUnit / 2;}}px 0;\n\n    background-color: ${(_ref6) => {let { theme } = _ref6;return theme.colors.text.label;}};\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst RefreshTooltip = styled.div`\n  height: auto;\n  margin: ${(_ref7) => {let { theme } = _ref7;return theme.gridUnit;}}px 0;\n  color: ${(_ref8) => {let { theme } = _ref8;return theme.colors.grayscale.base;}};\n  line-height: 21px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\nconst getScreenshotNodeSelector = (chartId) => `.dashboard-chart-id-${chartId}`;\nconst VerticalDotsTrigger = () => ___EmotionJSX(VerticalDotsContainer, null,\n___EmotionJSX(\"span\", { className: \"dot\" }),\n___EmotionJSX(\"span\", { className: \"dot\" }),\n___EmotionJSX(\"span\", { className: \"dot\" }));\n\nconst dropdownIconsStyles = css`\n  &&.anticon > .anticon:first-child {\n    margin-right: 0;\n    vertical-align: 0;\n  }\n`;\nconst ViewResultsModalTrigger = (_ref9) => {let { exploreUrl, triggerNode, modalTitle, modalBody } = _ref9;\n  const [showModal, setShowModal] = useState(false);\n  const openModal = useCallback(() => setShowModal(true), []);\n  const closeModal = useCallback(() => setShowModal(false), []);\n  const history = useHistory();\n  const exploreChart = () => history.push(exploreUrl);\n  const theme = useTheme();\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"span\", { onClick: openModal, role: \"button\", tabIndex: 0 },\n  triggerNode),\n\n  (() => ___EmotionJSX(Modal, { css: css`\n            .ant-modal-body {\n              display: flex;\n              flex-direction: column;\n            }\n          `, show: showModal, onHide: closeModal, title: modalTitle, footer: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(Button, { buttonStyle: \"secondary\", buttonSize: \"small\", onClick: exploreChart },\n    t('Edit chart')),\n\n    ___EmotionJSX(Button, { buttonStyle: \"primary\", buttonSize: \"small\", onClick: closeModal },\n    t('Close'))),\n\n    responsive: true, resizable: true, resizableConfig: {\n      minHeight: theme.gridUnit * 128,\n      minWidth: theme.gridUnit * 128,\n      defaultSize: {\n        width: 'auto',\n        height: '75vh' } },\n\n    draggable: true, destroyOnClose: true },\n  modalBody))());\n\n\n};\nconst SliceHeaderControls = (props) => {var _getChartMetadataRegi, _getChartMetadataRegi2;\n  const [openScopingModal, scopingModal] = useCrossFiltersScopingModal(props.slice.slice_id);\n  const canEditCrossFilters = useSelector((_ref10) => {let { dashboardInfo } = _ref10;return dashboardInfo.dash_edit_perm;}) &&\n  isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS) && ((_getChartMetadataRegi =\n  getChartMetadataRegistry().\n  get(props.slice.viz_type)) == null ? void 0 : (_getChartMetadataRegi2 = _getChartMetadataRegi.\n  behaviors) == null ? void 0 : _includesInstanceProperty(_getChartMetadataRegi2).call(_getChartMetadataRegi2, Behavior.INTERACTIVE_CHART));\n  const refreshChart = () => {\n    if (props.updatedDttm) {\n      props.forceRefresh(props.slice.slice_id, props.dashboardId);\n    }\n  };\n  const handleMenuClick = (_ref11) => {let { key, domEvent } = _ref11;\n    switch (key) {\n      case MENU_KEYS.FORCE_REFRESH:\n        refreshChart();\n        props.addSuccessToast(t('Data refreshed'));\n        break;\n      case MENU_KEYS.TOGGLE_CHART_DESCRIPTION:\n        // eslint-disable-next-line no-unused-expressions\n        props.toggleExpandSlice == null ? void 0 : props.toggleExpandSlice(props.slice.slice_id);\n        break;\n      case MENU_KEYS.EXPLORE_CHART:\n        // eslint-disable-next-line no-unused-expressions\n        props.logExploreChart == null ? void 0 : props.logExploreChart(props.slice.slice_id);\n        break;\n      case MENU_KEYS.EXPORT_CSV:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportCSV == null ? void 0 : props.exportCSV(props.slice.slice_id);\n        break;\n      case MENU_KEYS.FULLSCREEN:\n        props.handleToggleFullSize();\n        break;\n      case MENU_KEYS.EXPORT_FULL_CSV:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportFullCSV == null ? void 0 : props.exportFullCSV(props.slice.slice_id);\n        break;\n      case MENU_KEYS.EXPORT_XLSX:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportXLSX == null ? void 0 : props.exportXLSX(props.slice.slice_id);\n        break;\n      case MENU_KEYS.DOWNLOAD_AS_IMAGE:{\n          // menu closes with a delay, we need to hide it manually,\n          // so that we don't capture it on the screenshot\n          const menu = document.querySelector('.ant-dropdown:not(.ant-dropdown-hidden)');\n          menu.style.visibility = 'hidden';\n          downloadAsImage(getScreenshotNodeSelector(props.slice.slice_id), props.slice.slice_name, true)(domEvent).then(() => {\n            menu.style.visibility = 'visible';\n          });\n          props.logEvent == null ? void 0 : props.logEvent(LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE, {\n            chartId: props.slice.slice_id });\n\n          break;\n        }\n      case MENU_KEYS.CROSS_FILTER_SCOPING:{\n          openScopingModal();\n          break;\n        }\n      default:\n        break;}\n\n  };\n  const { componentId, dashboardId, slice, isFullSize, cachedDttm = [], updatedDttm = null, addSuccessToast = () => {}, addDangerToast = () => {}, supersetCanShare = false, isCached = [] } = props;\n  const isTable = slice.viz_type === 'table';\n  const cachedWhen = (cachedDttm || []).map((itemCachedDttm) => moment.utc(itemCachedDttm).fromNow());\n  const updatedWhen = updatedDttm ? moment.utc(updatedDttm).fromNow() : '';\n  const getCachedTitle = (itemCached) => {\n    if (itemCached) {\n      return t('Cached %s', cachedWhen);\n    }\n    if (updatedWhen) {\n      return t('Fetched %s', updatedWhen);\n    }\n    return '';\n  };\n  const refreshTooltipData = [...new Set(isCached.map(getCachedTitle) || '')];\n  // If all queries have same cache time we can unit them to one\n  const refreshTooltip = refreshTooltipData.map((item, index) => ___EmotionJSX(\"div\", { key: `tooltip-${index}` },\n  refreshTooltipData.length > 1 ?\n  t('Query %s: %s', index + 1, item) :\n  item));\n\n  const fullscreenLabel = isFullSize ?\n  t('Exit fullscreen') :\n  t('Enter fullscreen');\n  const menu = ___EmotionJSX(Menu, { onClick: handleMenuClick, selectable: false },\n  ___EmotionJSX(Menu.Item, { key: MENU_KEYS.FORCE_REFRESH, disabled: props.chartStatus === 'loading', style: { height: 'auto', lineHeight: 'initial' } },\n  t('Force refresh'),\n  ___EmotionJSX(RefreshTooltip, null,\n  refreshTooltip)),\n\n\n\n  ___EmotionJSX(Menu.Item, { key: MENU_KEYS.FULLSCREEN }, fullscreenLabel),\n\n  ___EmotionJSX(Menu.Divider, null),\n\n  slice.description && ___EmotionJSX(Menu.Item, { key: MENU_KEYS.TOGGLE_CHART_DESCRIPTION },\n  props.isDescriptionExpanded ?\n  t('Hide chart description') :\n  t('Show chart description')),\n\n\n  props.supersetCanExplore && ___EmotionJSX(Menu.Item, { key: MENU_KEYS.EXPLORE_CHART },\n  ___EmotionJSX(Link, { to: props.exploreUrl },\n  ___EmotionJSX(Tooltip, { title: getSliceHeaderTooltip(props.slice.slice_name) },\n  t('Edit chart')))),\n\n\n\n\n  canEditCrossFilters && ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Menu.Item, { key: MENU_KEYS.CROSS_FILTER_SCOPING },\n  t('Cross-filtering scoping')),\n\n  ___EmotionJSX(Menu.Divider, null)),\n\n\n  props.supersetCanExplore && ___EmotionJSX(Menu.Item, { key: MENU_KEYS.VIEW_QUERY },\n  ___EmotionJSX(ModalTrigger, { triggerNode: ___EmotionJSX(\"span\", null, t('View query')), modalTitle: t('View query'), modalBody: ___EmotionJSX(ViewQueryModal, { latestQueryFormData: props.formData }), draggable: true, resizable: true, responsive: true })),\n\n\n  props.supersetCanExplore && ___EmotionJSX(Menu.Item, { key: MENU_KEYS.VIEW_RESULTS },\n  ___EmotionJSX(ViewResultsModalTrigger, { exploreUrl: props.exploreUrl, triggerNode: ___EmotionJSX(\"span\", null, t('View as table')), modalTitle: t('Chart Data: %s', slice.slice_name), modalBody: ___EmotionJSX(ResultsPaneOnDashboard, { queryFormData: props.formData, queryForce: false, dataSize: 20, isRequest: true, isVisible: true }) })),\n\n\n  isFeatureEnabled(FeatureFlag.DRILL_TO_DETAIL) &&\n  props.supersetCanExplore && ___EmotionJSX(DrillDetailMenuItems, { chartId: slice.slice_id, formData: props.formData }),\n\n  (slice.description || props.supersetCanExplore) && ___EmotionJSX(Menu.Divider, null),\n\n  supersetCanShare && ___EmotionJSX(Menu.SubMenu, { title: t('Share') },\n  ___EmotionJSX(ShareMenuItems, { dashboardId: dashboardId, dashboardComponentId: componentId, copyMenuItemTitle: t('Copy permalink to clipboard'), emailMenuItemTitle: t('Share chart by email'), emailSubject: t('Superset chart'), emailBody: t('Check out this chart: '), addSuccessToast: addSuccessToast, addDangerToast: addDangerToast })),\n\n\n  props.slice.viz_type !== 'filter_box' && props.supersetCanCSV && ___EmotionJSX(Menu.SubMenu, { title: t('Download') },\n  ___EmotionJSX(Menu.Item, { key: MENU_KEYS.EXPORT_CSV, icon: ___EmotionJSX(Icons.FileOutlined, { css: dropdownIconsStyles }) },\n  t('Export to .CSV')),\n\n\n  props.slice.viz_type !== 'filter_box' &&\n  isFeatureEnabled(FeatureFlag.ALLOW_FULL_CSV_EXPORT) &&\n  props.supersetCanCSV &&\n  isTable && ___EmotionJSX(Menu.Item, { key: MENU_KEYS.EXPORT_FULL_CSV, icon: ___EmotionJSX(Icons.FileOutlined, { css: dropdownIconsStyles }) },\n  t('Export to full .CSV')),\n\n\n  ___EmotionJSX(Menu.Item, { key: MENU_KEYS.EXPORT_XLSX, icon: ___EmotionJSX(Icons.FileOutlined, { css: dropdownIconsStyles }) },\n  t('Export to Excel')),\n\n  ___EmotionJSX(Menu.Item, { key: MENU_KEYS.DOWNLOAD_AS_IMAGE, icon: ___EmotionJSX(Icons.FileImageOutlined, { css: dropdownIconsStyles }) },\n  t('Download as image'))));\n\n\n\n  return ___EmotionJSX(React.Fragment, null,\n  isFullSize && ___EmotionJSX(Icons.FullscreenExitOutlined, { style: { fontSize: 22 }, onClick: () => {\n      props.handleToggleFullSize();\n    } }),\n  ___EmotionJSX(NoAnimationDropdown, { overlay: menu, trigger: ['click'], placement: \"bottomRight\" },\n  ___EmotionJSX(\"span\", { css: css`\n            display: flex;\n            align-items: center;\n          `, id: `slice_${slice.slice_id}-controls`, role: \"button\", \"aria-label\": \"More Options\" },\n  ___EmotionJSX(VerticalDotsTrigger, null))),\n\n\n  canEditCrossFilters && scopingModal);\n\n};\nexport default withRouter(SliceHeaderControls);","map":{"version":3,"mappings":"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","names":["React","useState","useCallback","Link","useHistory","withRouter","moment","Behavior","css","FeatureFlag","getChartMetadataRegistry","styled","t","useTheme","useSelector","Menu","NoAnimationDropdown","ShareMenuItems","downloadAsImage","isFeatureEnabled","getSliceHeaderTooltip","Tooltip","Icons","ModalTrigger","Button","ViewQueryModal","ResultsPaneOnDashboard","Modal","DrillDetailMenuItems","LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE","useCrossFiltersScopingModal","MENU_KEYS","DOWNLOAD_AS_IMAGE","EXPLORE_CHART","EXPORT_CSV","EXPORT_FULL_CSV","EXPORT_XLSX","FORCE_REFRESH","FULLSCREEN","TOGGLE_CHART_DESCRIPTION","VIEW_QUERY","VIEW_RESULTS","DRILL_TO_DETAIL","CROSS_FILTER_SCOPING","VerticalDotsContainer","div","theme","gridUnit","colors","text","label","RefreshTooltip","grayscale","base","getScreenshotNodeSelector","chartId","VerticalDotsTrigger","dropdownIconsStyles","ViewResultsModalTrigger","exploreUrl","triggerNode","modalTitle","modalBody","showModal","setShowModal","openModal","closeModal","history","exploreChart","push","minHeight","minWidth","defaultSize","width","height","SliceHeaderControls","props","openScopingModal","scopingModal","slice","slice_id","canEditCrossFilters","dashboardInfo","dash_edit_perm","DASHBOARD_CROSS_FILTERS","get","viz_type","behaviors","INTERACTIVE_CHART","refreshChart","updatedDttm","forceRefresh","dashboardId","handleMenuClick","key","domEvent","addSuccessToast","toggleExpandSlice","logExploreChart","exportCSV","handleToggleFullSize","exportFullCSV","exportXLSX","menu","document","querySelector","style","visibility","slice_name","then","logEvent","componentId","isFullSize","cachedDttm","addDangerToast","supersetCanShare","isCached","isTable","cachedWhen","map","utc","itemCachedDttm","fromNow","updatedWhen","getCachedTitle","itemCached","refreshTooltipData","Set","refreshTooltip","item","index","length","fullscreenLabel","chartStatus","lineHeight","description","isDescriptionExpanded","supersetCanExplore","formData","supersetCanCSV","ALLOW_FULL_CSV_EXPORT","fontSize"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  MouseEvent,\n  Key,\n  ReactChild,\n  useState,\n  useCallback,\n} from 'react';\nimport {\n  Link,\n  RouteComponentProps,\n  useHistory,\n  withRouter,\n} from 'react-router-dom';\nimport moment from 'moment';\nimport {\n  Behavior,\n  css,\n  FeatureFlag,\n  getChartMetadataRegistry,\n  QueryFormData,\n  styled,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport { useSelector } from 'react-redux';\nimport { Menu } from 'src/components/Menu';\nimport { NoAnimationDropdown } from 'src/components/Dropdown';\nimport ShareMenuItems from 'src/dashboard/components/menu/ShareMenuItems';\nimport downloadAsImage from 'src/utils/downloadAsImage';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport { getSliceHeaderTooltip } from 'src/dashboard/util/getSliceHeaderTooltip';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport Button from 'src/components/Button';\nimport ViewQueryModal from 'src/explore/components/controls/ViewQueryModal';\nimport { ResultsPaneOnDashboard } from 'src/explore/components/DataTablesPane';\nimport Modal from 'src/components/Modal';\nimport { DrillDetailMenuItems } from 'src/components/Chart/DrillDetail';\nimport { LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE } from 'src/logger/LogUtils';\nimport { RootState } from 'src/dashboard/types';\nimport { useCrossFiltersScopingModal } from '../nativeFilters/FilterBar/CrossFilters/ScopingModal/useCrossFiltersScopingModal';\n\nconst MENU_KEYS = {\n  DOWNLOAD_AS_IMAGE: 'download_as_image',\n  EXPLORE_CHART: 'explore_chart',\n  EXPORT_CSV: 'export_csv',\n  EXPORT_FULL_CSV: 'export_full_csv',\n  EXPORT_XLSX: 'export_xlsx',\n  FORCE_REFRESH: 'force_refresh',\n  FULLSCREEN: 'fullscreen',\n  TOGGLE_CHART_DESCRIPTION: 'toggle_chart_description',\n  VIEW_QUERY: 'view_query',\n  VIEW_RESULTS: 'view_results',\n  DRILL_TO_DETAIL: 'drill_to_detail',\n  CROSS_FILTER_SCOPING: 'cross_filter_scoping',\n};\n\n// TODO: replace 3 dots with an icon\nconst VerticalDotsContainer = styled.div`\n  padding: ${({ theme }) => theme.gridUnit / 4}px\n    ${({ theme }) => theme.gridUnit * 1.5}px;\n\n  .dot {\n    display: block;\n\n    height: ${({ theme }) => theme.gridUnit}px;\n    width: ${({ theme }) => theme.gridUnit}px;\n    border-radius: 50%;\n    margin: ${({ theme }) => theme.gridUnit / 2}px 0;\n\n    background-color: ${({ theme }) => theme.colors.text.label};\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst RefreshTooltip = styled.div`\n  height: auto;\n  margin: ${({ theme }) => theme.gridUnit}px 0;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  line-height: 21px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n\nconst getScreenshotNodeSelector = (chartId: string | number) =>\n  `.dashboard-chart-id-${chartId}`;\n\nconst VerticalDotsTrigger = () => (\n  <VerticalDotsContainer>\n    <span className=\"dot\" />\n    <span className=\"dot\" />\n    <span className=\"dot\" />\n  </VerticalDotsContainer>\n);\n\nexport interface SliceHeaderControlsProps {\n  slice: {\n    description: string;\n    viz_type: string;\n    slice_name: string;\n    slice_id: number;\n    slice_description: string;\n    datasource: string;\n  };\n\n  componentId: string;\n  dashboardId: number;\n  chartStatus: string;\n  isCached: boolean[];\n  cachedDttm: string[] | null;\n  isExpanded?: boolean;\n  updatedDttm: number | null;\n  isFullSize?: boolean;\n  isDescriptionExpanded?: boolean;\n  formData: QueryFormData;\n  exploreUrl: string;\n\n  forceRefresh: (sliceId: number, dashboardId: number) => void;\n  logExploreChart?: (sliceId: number) => void;\n  logEvent?: (eventName: string, eventData?: object) => void;\n  toggleExpandSlice?: (sliceId: number) => void;\n  exportCSV?: (sliceId: number) => void;\n  exportFullCSV?: (sliceId: number) => void;\n  exportXLSX?: (sliceId: number) => void;\n  handleToggleFullSize: () => void;\n\n  addDangerToast: (message: string) => void;\n  addSuccessToast: (message: string) => void;\n\n  supersetCanExplore?: boolean;\n  supersetCanShare?: boolean;\n  supersetCanCSV?: boolean;\n  sliceCanEdit?: boolean;\n\n  crossFiltersEnabled?: boolean;\n}\ntype SliceHeaderControlsPropsWithRouter = SliceHeaderControlsProps &\n  RouteComponentProps;\n\nconst dropdownIconsStyles = css`\n  &&.anticon > .anticon:first-child {\n    margin-right: 0;\n    vertical-align: 0;\n  }\n`;\n\nconst ViewResultsModalTrigger = ({\n  exploreUrl,\n  triggerNode,\n  modalTitle,\n  modalBody,\n}: {\n  exploreUrl: string;\n  triggerNode: ReactChild;\n  modalTitle: ReactChild;\n  modalBody: ReactChild;\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const openModal = useCallback(() => setShowModal(true), []);\n  const closeModal = useCallback(() => setShowModal(false), []);\n  const history = useHistory();\n  const exploreChart = () => history.push(exploreUrl);\n  const theme = useTheme();\n\n  return (\n    <>\n      <span\n        data-test=\"span-modal-trigger\"\n        onClick={openModal}\n        role=\"button\"\n        tabIndex={0}\n      >\n        {triggerNode}\n      </span>\n      {(() => (\n        <Modal\n          css={css`\n            .ant-modal-body {\n              display: flex;\n              flex-direction: column;\n            }\n          `}\n          show={showModal}\n          onHide={closeModal}\n          title={modalTitle}\n          footer={\n            <>\n              <Button\n                buttonStyle=\"secondary\"\n                buttonSize=\"small\"\n                onClick={exploreChart}\n              >\n                {t('Edit chart')}\n              </Button>\n              <Button\n                buttonStyle=\"primary\"\n                buttonSize=\"small\"\n                onClick={closeModal}\n              >\n                {t('Close')}\n              </Button>\n            </>\n          }\n          responsive\n          resizable\n          resizableConfig={{\n            minHeight: theme.gridUnit * 128,\n            minWidth: theme.gridUnit * 128,\n            defaultSize: {\n              width: 'auto',\n              height: '75vh',\n            },\n          }}\n          draggable\n          destroyOnClose\n        >\n          {modalBody}\n        </Modal>\n      ))()}\n    </>\n  );\n};\n\nconst SliceHeaderControls = (props: SliceHeaderControlsPropsWithRouter) => {\n  const [openScopingModal, scopingModal] = useCrossFiltersScopingModal(\n    props.slice.slice_id,\n  );\n\n  const canEditCrossFilters =\n    useSelector<RootState, boolean>(\n      ({ dashboardInfo }) => dashboardInfo.dash_edit_perm,\n    ) &&\n    isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS) &&\n    getChartMetadataRegistry()\n      .get(props.slice.viz_type)\n      ?.behaviors?.includes(Behavior.INTERACTIVE_CHART);\n\n  const refreshChart = () => {\n    if (props.updatedDttm) {\n      props.forceRefresh(props.slice.slice_id, props.dashboardId);\n    }\n  };\n\n  const handleMenuClick = ({\n    key,\n    domEvent,\n  }: {\n    key: Key;\n    domEvent: MouseEvent<HTMLElement>;\n  }) => {\n    switch (key) {\n      case MENU_KEYS.FORCE_REFRESH:\n        refreshChart();\n        props.addSuccessToast(t('Data refreshed'));\n        break;\n      case MENU_KEYS.TOGGLE_CHART_DESCRIPTION:\n        // eslint-disable-next-line no-unused-expressions\n        props.toggleExpandSlice?.(props.slice.slice_id);\n        break;\n      case MENU_KEYS.EXPLORE_CHART:\n        // eslint-disable-next-line no-unused-expressions\n        props.logExploreChart?.(props.slice.slice_id);\n        break;\n      case MENU_KEYS.EXPORT_CSV:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportCSV?.(props.slice.slice_id);\n        break;\n      case MENU_KEYS.FULLSCREEN:\n        props.handleToggleFullSize();\n        break;\n      case MENU_KEYS.EXPORT_FULL_CSV:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportFullCSV?.(props.slice.slice_id);\n        break;\n      case MENU_KEYS.EXPORT_XLSX:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportXLSX?.(props.slice.slice_id);\n        break;\n      case MENU_KEYS.DOWNLOAD_AS_IMAGE: {\n        // menu closes with a delay, we need to hide it manually,\n        // so that we don't capture it on the screenshot\n        const menu = document.querySelector(\n          '.ant-dropdown:not(.ant-dropdown-hidden)',\n        ) as HTMLElement;\n        menu.style.visibility = 'hidden';\n        downloadAsImage(\n          getScreenshotNodeSelector(props.slice.slice_id),\n          props.slice.slice_name,\n          true,\n          // @ts-ignore\n        )(domEvent).then(() => {\n          menu.style.visibility = 'visible';\n        });\n        props.logEvent?.(LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE, {\n          chartId: props.slice.slice_id,\n        });\n        break;\n      }\n      case MENU_KEYS.CROSS_FILTER_SCOPING: {\n        openScopingModal();\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  const {\n    componentId,\n    dashboardId,\n    slice,\n    isFullSize,\n    cachedDttm = [],\n    updatedDttm = null,\n    addSuccessToast = () => {},\n    addDangerToast = () => {},\n    supersetCanShare = false,\n    isCached = [],\n  } = props;\n  const isTable = slice.viz_type === 'table';\n  const cachedWhen = (cachedDttm || []).map(itemCachedDttm =>\n    moment.utc(itemCachedDttm).fromNow(),\n  );\n  const updatedWhen = updatedDttm ? moment.utc(updatedDttm).fromNow() : '';\n  const getCachedTitle = (itemCached: boolean) => {\n    if (itemCached) {\n      return t('Cached %s', cachedWhen);\n    }\n    if (updatedWhen) {\n      return t('Fetched %s', updatedWhen);\n    }\n    return '';\n  };\n  const refreshTooltipData = [...new Set(isCached.map(getCachedTitle) || '')];\n  // If all queries have same cache time we can unit them to one\n  const refreshTooltip = refreshTooltipData.map((item, index) => (\n    <div key={`tooltip-${index}`}>\n      {refreshTooltipData.length > 1\n        ? t('Query %s: %s', index + 1, item)\n        : item}\n    </div>\n  ));\n  const fullscreenLabel = isFullSize\n    ? t('Exit fullscreen')\n    : t('Enter fullscreen');\n\n  const menu = (\n    <Menu\n      onClick={handleMenuClick}\n      selectable={false}\n      data-test={`slice_${slice.slice_id}-menu`}\n    >\n      <Menu.Item\n        key={MENU_KEYS.FORCE_REFRESH}\n        disabled={props.chartStatus === 'loading'}\n        style={{ height: 'auto', lineHeight: 'initial' }}\n        data-test=\"refresh-chart-menu-item\"\n      >\n        {t('Force refresh')}\n        <RefreshTooltip data-test=\"dashboard-slice-refresh-tooltip\">\n          {refreshTooltip}\n        </RefreshTooltip>\n      </Menu.Item>\n\n      <Menu.Item key={MENU_KEYS.FULLSCREEN}>{fullscreenLabel}</Menu.Item>\n\n      <Menu.Divider />\n\n      {slice.description && (\n        <Menu.Item key={MENU_KEYS.TOGGLE_CHART_DESCRIPTION}>\n          {props.isDescriptionExpanded\n            ? t('Hide chart description')\n            : t('Show chart description')}\n        </Menu.Item>\n      )}\n\n      {props.supersetCanExplore && (\n        <Menu.Item key={MENU_KEYS.EXPLORE_CHART}>\n          <Link to={props.exploreUrl}>\n            <Tooltip title={getSliceHeaderTooltip(props.slice.slice_name)}>\n              {t('Edit chart')}\n            </Tooltip>\n          </Link>\n        </Menu.Item>\n      )}\n\n      {canEditCrossFilters && (\n        <>\n          <Menu.Item key={MENU_KEYS.CROSS_FILTER_SCOPING}>\n            {t('Cross-filtering scoping')}\n          </Menu.Item>\n          <Menu.Divider />\n        </>\n      )}\n\n      {props.supersetCanExplore && (\n        <Menu.Item key={MENU_KEYS.VIEW_QUERY}>\n          <ModalTrigger\n            triggerNode={\n              <span data-test=\"view-query-menu-item\">{t('View query')}</span>\n            }\n            modalTitle={t('View query')}\n            modalBody={<ViewQueryModal latestQueryFormData={props.formData} />}\n            draggable\n            resizable\n            responsive\n          />\n        </Menu.Item>\n      )}\n\n      {props.supersetCanExplore && (\n        <Menu.Item key={MENU_KEYS.VIEW_RESULTS}>\n          <ViewResultsModalTrigger\n            exploreUrl={props.exploreUrl}\n            triggerNode={\n              <span data-test=\"view-query-menu-item\">{t('View as table')}</span>\n            }\n            modalTitle={t('Chart Data: %s', slice.slice_name)}\n            modalBody={\n              <ResultsPaneOnDashboard\n                queryFormData={props.formData}\n                queryForce={false}\n                dataSize={20}\n                isRequest\n                isVisible\n              />\n            }\n          />\n        </Menu.Item>\n      )}\n\n      {isFeatureEnabled(FeatureFlag.DRILL_TO_DETAIL) &&\n        props.supersetCanExplore && (\n          <DrillDetailMenuItems\n            chartId={slice.slice_id}\n            formData={props.formData}\n          />\n        )}\n\n      {(slice.description || props.supersetCanExplore) && <Menu.Divider />}\n\n      {supersetCanShare && (\n        <Menu.SubMenu title={t('Share')}>\n          <ShareMenuItems\n            dashboardId={dashboardId}\n            dashboardComponentId={componentId}\n            copyMenuItemTitle={t('Copy permalink to clipboard')}\n            emailMenuItemTitle={t('Share chart by email')}\n            emailSubject={t('Superset chart')}\n            emailBody={t('Check out this chart: ')}\n            addSuccessToast={addSuccessToast}\n            addDangerToast={addDangerToast}\n          />\n        </Menu.SubMenu>\n      )}\n\n      {props.slice.viz_type !== 'filter_box' && props.supersetCanCSV && (\n        <Menu.SubMenu title={t('Download')}>\n          <Menu.Item\n            key={MENU_KEYS.EXPORT_CSV}\n            icon={<Icons.FileOutlined css={dropdownIconsStyles} />}\n          >\n            {t('Export to .CSV')}\n          </Menu.Item>\n\n          {props.slice.viz_type !== 'filter_box' &&\n            isFeatureEnabled(FeatureFlag.ALLOW_FULL_CSV_EXPORT) &&\n            props.supersetCanCSV &&\n            isTable && (\n              <Menu.Item\n                key={MENU_KEYS.EXPORT_FULL_CSV}\n                icon={<Icons.FileOutlined css={dropdownIconsStyles} />}\n              >\n                {t('Export to full .CSV')}\n              </Menu.Item>\n            )}\n\n          <Menu.Item\n            key={MENU_KEYS.EXPORT_XLSX}\n            icon={<Icons.FileOutlined css={dropdownIconsStyles} />}\n          >\n            {t('Export to Excel')}\n          </Menu.Item>\n          <Menu.Item\n            key={MENU_KEYS.DOWNLOAD_AS_IMAGE}\n            icon={<Icons.FileImageOutlined css={dropdownIconsStyles} />}\n          >\n            {t('Download as image')}\n          </Menu.Item>\n        </Menu.SubMenu>\n      )}\n    </Menu>\n  );\n\n  return (\n    <>\n      {isFullSize && (\n        <Icons.FullscreenExitOutlined\n          style={{ fontSize: 22 }}\n          onClick={() => {\n            props.handleToggleFullSize();\n          }}\n        />\n      )}\n      <NoAnimationDropdown\n        overlay={menu}\n        trigger={['click']}\n        placement=\"bottomRight\"\n      >\n        <span\n          css={css`\n            display: flex;\n            align-items: center;\n          `}\n          id={`slice_${slice.slice_id}-controls`}\n          role=\"button\"\n          aria-label=\"More Options\"\n        >\n          <VerticalDotsTrigger />\n        </span>\n      </NoAnimationDropdown>\n      {canEditCrossFilters && scopingModal}\n    </>\n  );\n};\n\nexport default withRouter(SliceHeaderControls);\n"]},"metadata":{},"sourceType":"module"}