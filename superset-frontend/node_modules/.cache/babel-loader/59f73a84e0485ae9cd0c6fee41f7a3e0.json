{"ast":null,"code":"import _isString from \"lodash/isString\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";\nexport const hasTimeOffset = (series, timeCompare) => _isString(series.name) ?\n!!timeCompare.find((timeOffset) => {var _context, _context2;return (\n    // offset is represented as <offset>, group by list\n    _includesInstanceProperty(_context = series.name).call(_context, `${timeOffset},`) ||\n    // offset is represented as <metric>__<offset>\n    _includesInstanceProperty(_context2 = series.name).call(_context2, `__${timeOffset}`));}) :\nfalse;\nexport const getOriginalSeries = (seriesName, timeCompare) => {\n  let result = seriesName;\n  timeCompare.forEach((compare) => {\n    // offset is represented as <offset>, group by list\n    result = result.replace(`${compare},`, '');\n    // offset is represented as <metric>__<offset>\n    result = result.replace(`__${compare}`, '');\n  });\n  return result.trim();\n};","map":{"version":3,"mappings":";AAsBA,OAAO,MAAMA,aAAa,GAAG,CAC3BC,MAD2B,EAE3BC,WAF2B,KAI3B,UAASD,MAAM,CAACE,IAAhB;AACI,CAAC,CAACD,WAAW,CAACE,IAAZ,CACA,WAAU;IACR;IACA,2CAAM,CAACD,IAAP,iBAAqB,GAAGE,UAAU,GAAlC;IACA;IACA,4CAAM,CAACF,IAAP,kBAAqB,KAAKE,UAAU,EAApC,CAJQ,GADV,CADN;AAQI,KAZC;AAcP,OAAO,MAAMC,iBAAiB,GAAG,CAC/BC,UAD+B,EAE/BL,WAF+B,KAGrB;EACV,IAAIM,MAAM,GAAGD,UAAb;EACAL,WAAW,CAACO,OAAZ,CAAoB,QAAO,KAAG;IAC5B;IACAD,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAe,GAAGC,OAAO,GAAzB,EAA8B,EAA9B,CAAT;IACA;IACAH,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAe,KAAKC,OAAO,EAA3B,EAA+B,EAA/B,CAAT;EACD,CALD;EAMA,OAAOH,MAAM,CAACI,IAAP,EAAP;AACD,CAZM","names":["hasTimeOffset","series","timeCompare","name","find","timeOffset","getOriginalSeries","seriesName","result","forEach","replace","compare","trim"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/packages/superset-ui-chart-controls/src/operators/utils/timeOffset.ts"],"sourcesContent":["/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { JsonObject } from '@superset-ui/core';\nimport { isString } from 'lodash';\n\nexport const hasTimeOffset = (\n  series: JsonObject,\n  timeCompare: string[],\n): boolean =>\n  isString(series.name)\n    ? !!timeCompare.find(\n        timeOffset =>\n          // offset is represented as <offset>, group by list\n          series.name.includes(`${timeOffset},`) ||\n          // offset is represented as <metric>__<offset>\n          series.name.includes(`__${timeOffset}`),\n      )\n    : false;\n\nexport const getOriginalSeries = (\n  seriesName: string,\n  timeCompare: string[],\n): string => {\n  let result = seriesName;\n  timeCompare.forEach(compare => {\n    // offset is represented as <offset>, group by list\n    result = result.replace(`${compare},`, '');\n    // offset is represented as <metric>__<offset>\n    result = result.replace(`__${compare}`, '');\n  });\n  return result.trim();\n};\n"]},"metadata":{},"sourceType":"module"}