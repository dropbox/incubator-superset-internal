{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { DEFAULT_LEGEND_FORM_DATA } from '../constants';\nexport const DEFAULT_FORM_DATA = {\n  ...DEFAULT_LEGEND_FORM_DATA,\n  groupby: [],\n  rowLimit: 10,\n  minVal: null,\n  maxVal: null,\n  fontSize: 15,\n  numberFormat: 'SMART_NUMBER',\n  animation: true,\n  showProgress: true,\n  overlap: true,\n  roundCap: false,\n  showAxisTick: false,\n  showSplitLine: false,\n  splitNumber: 10,\n  startAngle: 225,\n  endAngle: -45,\n  showPointer: true,\n  intervals: '',\n  intervalColorIndices: '',\n  valueFormatter: '{value}' };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DEFAULT_FORM_DATA, \"DEFAULT_FORM_DATA\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Gauge/types.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"uSAyBA,SAASA,wBAAT,QAAyC,cAAzC;AA+BA,OAAO,MAAMC,iBAAiB,GAAkC;EAC9D,GAAGD,wBAD2D;EAE9DE,OAAO,EAAE,EAFqD;EAG9DC,QAAQ,EAAE,EAHoD;EAI9DC,MAAM,EAAE,IAJsD;EAK9DC,MAAM,EAAE,IALsD;EAM9DC,QAAQ,EAAE,EANoD;EAO9DC,YAAY,EAAE,cAPgD;EAQ9DC,SAAS,EAAE,IARmD;EAS9DC,YAAY,EAAE,IATgD;EAU9DC,OAAO,EAAE,IAVqD;EAW9DC,QAAQ,EAAE,KAXoD;EAY9DC,YAAY,EAAE,KAZgD;EAa9DC,aAAa,EAAE,KAb+C;EAc9DC,WAAW,EAAE,EAdiD;EAe9DC,UAAU,EAAE,GAfkD;EAgB9DC,QAAQ,EAAE,CAAC,EAhBmD;EAiB9DC,WAAW,EAAE,IAjBiD;EAkB9DC,SAAS,EAAE,EAlBmD;EAmB9DC,oBAAoB,EAAE,EAnBwC;EAoB9DC,cAAc,EAAE,SApB8C,EAAzD,C,iLAAMnB,iB","names":["DEFAULT_LEGEND_FORM_DATA","DEFAULT_FORM_DATA","groupby","rowLimit","minVal","maxVal","fontSize","numberFormat","animation","showProgress","overlap","roundCap","showAxisTick","showSplitLine","splitNumber","startAngle","endAngle","showPointer","intervals","intervalColorIndices","valueFormatter"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Gauge/types.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { QueryFormColumn, QueryFormData } from '@superset-ui/core';\nimport {\n  BaseChartProps,\n  BaseTransformedProps,\n  ContextMenuTransformedProps,\n  CrossFilterTransformedProps,\n} from '../types';\nimport { DEFAULT_LEGEND_FORM_DATA } from '../constants';\n\nexport type AxisTickLineStyle = {\n  width: number;\n  color: string;\n};\n\nexport type EchartsGaugeFormData = QueryFormData & {\n  colorScheme?: string;\n  groupby: QueryFormColumn[];\n  metric?: string;\n  rowLimit: number;\n  minVal: number | null;\n  maxVal: number | null;\n  fontSize: number;\n  numberFormat: string;\n  animation: boolean;\n  showProgress: boolean;\n  overlap: boolean;\n  roundCap: boolean;\n  showAxisTick: boolean;\n  showSplitLine: boolean;\n  splitNumber: number;\n  startAngle: number;\n  endAngle: number;\n  showPointer: boolean;\n  intervals: string;\n  intervalColorIndices: string;\n  valueFormatter: string;\n};\n\nexport const DEFAULT_FORM_DATA: Partial<EchartsGaugeFormData> = {\n  ...DEFAULT_LEGEND_FORM_DATA,\n  groupby: [],\n  rowLimit: 10,\n  minVal: null,\n  maxVal: null,\n  fontSize: 15,\n  numberFormat: 'SMART_NUMBER',\n  animation: true,\n  showProgress: true,\n  overlap: true,\n  roundCap: false,\n  showAxisTick: false,\n  showSplitLine: false,\n  splitNumber: 10,\n  startAngle: 225,\n  endAngle: -45,\n  showPointer: true,\n  intervals: '',\n  intervalColorIndices: '',\n  valueFormatter: '{value}',\n};\n\nexport interface EchartsGaugeChartProps\n  extends BaseChartProps<EchartsGaugeFormData> {\n  formData: EchartsGaugeFormData;\n}\n\nexport type GaugeChartTransformedProps =\n  BaseTransformedProps<EchartsGaugeFormData> &\n    ContextMenuTransformedProps &\n    CrossFilterTransformedProps;\n"]},"metadata":{},"sourceType":"module"}