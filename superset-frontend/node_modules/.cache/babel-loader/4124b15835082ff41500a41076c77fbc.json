{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { FeatureFlag, t, useTheme } from '@superset-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport Icons from 'src/components/Icons';\nimport ListViewCard from 'src/components/ListViewCard';\nimport Label from 'src/components/Label';\nimport { AntdDropdown } from 'src/components';\nimport { Menu } from 'src/components/Menu';\nimport FaveStar from 'src/components/FaveStar';\nimport FacePile from 'src/components/FacePile';\nimport { handleChartDelete, CardStyles } from 'src/views/CRUD/utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function ChartCard(_ref) {let { chart, hasPerm, openChartEditModal, bulkSelectEnabled, addDangerToast, addSuccessToast, refreshData, loading, showThumbnails, saveFavoriteStatus, favoriteStatus, chartFilter, userId, handleBulkChartExport } = _ref;\n  const history = useHistory();\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport = hasPerm('can_export') && isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT);\n  const theme = useTheme();\n  const menu = ___EmotionJSX(Menu, null,\n  canDelete && ___EmotionJSX(Menu.Item, null,\n  ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: ___EmotionJSX(React.Fragment, null,\n    t('Are you sure you want to delete'), \" \", ___EmotionJSX(\"b\", null, chart.slice_name), \"?\"),\n\n    onConfirm: () => handleChartDelete(chart, addSuccessToast, addDangerToast, refreshData, chartFilter, userId) },\n  (confirmDelete) => ___EmotionJSX(\"div\", { \"data-test\": \"chart-list-delete-option\", role: \"button\", tabIndex: 0, className: \"action-button\", onClick: confirmDelete },\n  ___EmotionJSX(Icons.Trash, { iconSize: \"l\" }), \" \", t('Delete')))),\n\n\n\n  canExport && ___EmotionJSX(Menu.Item, null,\n  ___EmotionJSX(\"div\", { role: \"button\", tabIndex: 0, onClick: () => handleBulkChartExport([chart]) },\n  ___EmotionJSX(Icons.Share, { iconSize: \"l\" }), \" \", t('Export'))),\n\n\n  canEdit && ___EmotionJSX(Menu.Item, null,\n  ___EmotionJSX(\"div\", { \"data-test\": \"chart-list-edit-option\", role: \"button\", tabIndex: 0, onClick: () => openChartEditModal(chart) },\n  ___EmotionJSX(Icons.EditAlt, { iconSize: \"l\" }), \" \", t('Edit'))));\n\n\n\n  return ___EmotionJSX(CardStyles, { onClick: () => {\n      if (!bulkSelectEnabled && chart.url) {\n        history.push(chart.url);\n      }\n    } },\n  ___EmotionJSX(ListViewCard, { loading: loading, title: chart.slice_name, certifiedBy: chart.certified_by, certificationDetails: chart.certification_details, cover: !isFeatureEnabled(FeatureFlag.THUMBNAILS) || !showThumbnails ? ___EmotionJSX(React.Fragment, null) : null, url: bulkSelectEnabled ? undefined : chart.url, imgURL: chart.thumbnail_url || '', imgFallbackURL: \"/static/assets/images/chart-card-fallback.svg\", description: t('Modified %s', chart.changed_on_delta_humanized), coverLeft: ___EmotionJSX(FacePile, { users: chart.owners || [] }), coverRight: ___EmotionJSX(Label, { type: \"secondary\" }, chart.datasource_name_text), linkComponent: Link, actions: ___EmotionJSX(ListViewCard.Actions, { onClick: (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n      } },\n    userId && ___EmotionJSX(FaveStar, { itemId: chart.id, saveFaveStar: saveFavoriteStatus, isStarred: favoriteStatus }),\n    ___EmotionJSX(AntdDropdown, { overlay: menu },\n    ___EmotionJSX(Icons.MoreVert, { iconColor: theme.colors.grayscale.base }))) }));\n\n\n\n}__signature__(ChartCard, \"useHistory{history}\\nuseTheme{theme}\", () => [useHistory, useTheme]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ChartCard, \"ChartCard\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/charts/ChartCard.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","FeatureFlag","t","useTheme","Link","useHistory","isFeatureEnabled","ConfirmStatusChange","Icons","ListViewCard","Label","AntdDropdown","Menu","FaveStar","FacePile","handleChartDelete","CardStyles","ChartCard","chart","hasPerm","openChartEditModal","bulkSelectEnabled","addDangerToast","addSuccessToast","refreshData","loading","showThumbnails","saveFavoriteStatus","favoriteStatus","chartFilter","userId","handleBulkChartExport","history","canEdit","canDelete","canExport","VERSIONED_EXPORT","theme","menu","slice_name","confirmDelete","url","push","certified_by","certification_details","THUMBNAILS","undefined","thumbnail_url","changed_on_delta_humanized","owners","datasource_name_text","e","stopPropagation","preventDefault","id","colors","grayscale","base"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/charts/ChartCard.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { FeatureFlag, t, useTheme } from '@superset-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport Icons from 'src/components/Icons';\nimport Chart from 'src/types/Chart';\n\nimport ListViewCard from 'src/components/ListViewCard';\nimport Label from 'src/components/Label';\nimport { AntdDropdown } from 'src/components';\nimport { Menu } from 'src/components/Menu';\nimport FaveStar from 'src/components/FaveStar';\nimport FacePile from 'src/components/FacePile';\nimport { handleChartDelete, CardStyles } from 'src/views/CRUD/utils';\n\ninterface ChartCardProps {\n  chart: Chart;\n  hasPerm: (perm: string) => boolean;\n  openChartEditModal: (chart: Chart) => void;\n  bulkSelectEnabled: boolean;\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  refreshData: () => void;\n  loading?: boolean;\n  saveFavoriteStatus: (id: number, isStarred: boolean) => void;\n  favoriteStatus: boolean;\n  chartFilter?: string;\n  userId?: string | number;\n  showThumbnails?: boolean;\n  handleBulkChartExport: (chartsToExport: Chart[]) => void;\n}\n\nexport default function ChartCard({\n  chart,\n  hasPerm,\n  openChartEditModal,\n  bulkSelectEnabled,\n  addDangerToast,\n  addSuccessToast,\n  refreshData,\n  loading,\n  showThumbnails,\n  saveFavoriteStatus,\n  favoriteStatus,\n  chartFilter,\n  userId,\n  handleBulkChartExport,\n}: ChartCardProps) {\n  const history = useHistory();\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport =\n    hasPerm('can_export') && isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT);\n  const theme = useTheme();\n\n  const menu = (\n    <Menu>\n      {canDelete && (\n        <Menu.Item>\n          <ConfirmStatusChange\n            title={t('Please confirm')}\n            description={\n              <>\n                {t('Are you sure you want to delete')} <b>{chart.slice_name}</b>\n                ?\n              </>\n            }\n            onConfirm={() =>\n              handleChartDelete(\n                chart,\n                addSuccessToast,\n                addDangerToast,\n                refreshData,\n                chartFilter,\n                userId,\n              )\n            }\n          >\n            {confirmDelete => (\n              <div\n                data-test=\"chart-list-delete-option\"\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                onClick={confirmDelete}\n              >\n                <Icons.Trash iconSize=\"l\" /> {t('Delete')}\n              </div>\n            )}\n          </ConfirmStatusChange>\n        </Menu.Item>\n      )}\n      {canExport && (\n        <Menu.Item>\n          <div\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => handleBulkChartExport([chart])}\n          >\n            <Icons.Share iconSize=\"l\" /> {t('Export')}\n          </div>\n        </Menu.Item>\n      )}\n      {canEdit && (\n        <Menu.Item>\n          <div\n            data-test=\"chart-list-edit-option\"\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => openChartEditModal(chart)}\n          >\n            <Icons.EditAlt iconSize=\"l\" /> {t('Edit')}\n          </div>\n        </Menu.Item>\n      )}\n    </Menu>\n  );\n  return (\n    <CardStyles\n      onClick={() => {\n        if (!bulkSelectEnabled && chart.url) {\n          history.push(chart.url);\n        }\n      }}\n    >\n      <ListViewCard\n        loading={loading}\n        title={chart.slice_name}\n        certifiedBy={chart.certified_by}\n        certificationDetails={chart.certification_details}\n        cover={\n          !isFeatureEnabled(FeatureFlag.THUMBNAILS) || !showThumbnails ? (\n            <></>\n          ) : null\n        }\n        url={bulkSelectEnabled ? undefined : chart.url}\n        imgURL={chart.thumbnail_url || ''}\n        imgFallbackURL=\"/static/assets/images/chart-card-fallback.svg\"\n        description={t('Modified %s', chart.changed_on_delta_humanized)}\n        coverLeft={<FacePile users={chart.owners || []} />}\n        coverRight={\n          <Label type=\"secondary\">{chart.datasource_name_text}</Label>\n        }\n        linkComponent={Link}\n        actions={\n          <ListViewCard.Actions\n            onClick={e => {\n              e.stopPropagation();\n              e.preventDefault();\n            }}\n          >\n            {userId && (\n              <FaveStar\n                itemId={chart.id}\n                saveFaveStar={saveFavoriteStatus}\n                isStarred={favoriteStatus}\n              />\n            )}\n            <AntdDropdown overlay={menu}>\n              <Icons.MoreVert iconColor={theme.colors.grayscale.base} />\n            </AntdDropdown>\n          </ListViewCard.Actions>\n        }\n      />\n    </CardStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}