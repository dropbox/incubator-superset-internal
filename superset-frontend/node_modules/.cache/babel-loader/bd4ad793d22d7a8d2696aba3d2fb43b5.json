{"ast":null,"code":"import _pickBy from \"lodash/pickBy\";import _debounce from \"lodash/debounce\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { FixedSizeList as List } from 'react-window';\nimport { createFilter } from 'react-search-input';\nimport { t, styled, css } from '@superset-ui/core';\nimport { Input } from 'src/components/Input';\nimport { Select } from 'src/components';\nimport Loading from 'src/components/Loading';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport {\nLocalStorageKeys,\ngetItem,\nsetItem } from\n'src/utils/localStorageHelpers';\nimport {\nCHART_TYPE,\nNEW_COMPONENT_SOURCE_TYPE } from\n'src/dashboard/util/componentTypes';\nimport {\nNEW_CHART_ID,\nNEW_COMPONENTS_SOURCE_ID } from\n'src/dashboard/util/constants';\nimport { slicePropShape } from 'src/dashboard/util/propShapes';\n\nimport Checkbox from 'src/components/Checkbox';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport AddSliceCard from './AddSliceCard';\nimport AddSliceDragPreview from './dnd/AddSliceDragPreview';\nimport DragDroppable from './dnd/DragDroppable';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  fetchSlices: PropTypes.func.isRequired,\n  updateSlices: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  slices: PropTypes.objectOf(slicePropShape).isRequired,\n  lastUpdated: PropTypes.number.isRequired,\n  errorMessage: PropTypes.string,\n  userId: PropTypes.number.isRequired,\n  selectedSliceIds: PropTypes.arrayOf(PropTypes.number),\n  editMode: PropTypes.bool,\n  dashboardId: PropTypes.number };\n\n\nconst defaultProps = {\n  selectedSliceIds: [],\n  editMode: false,\n  errorMessage: '' };\n\n\nconst KEYS_TO_FILTERS = ['slice_name', 'viz_type', 'datasource_name'];\nconst KEYS_TO_SORT = {\n  slice_name: t('name'),\n  viz_type: t('viz type'),\n  datasource_name: t('dataset'),\n  changed_on: t('recent') };\n\n\nexport const DEFAULT_SORT_KEY = 'changed_on';\n\nconst DEFAULT_CELL_HEIGHT = 128;\n\nconst Controls = styled.div`\n  ${(_ref) => {let { theme } = _ref;return `\n    display: flex;\n    flex-direction: row;\n    padding:\n      ${theme.gridUnit * 4}px\n      ${theme.gridUnit * 3}px\n      ${theme.gridUnit * 4}px\n      ${theme.gridUnit * 3}px;\n  `;}}\n`;\n\nconst StyledSelect = styled(Select)`\n  margin-left: ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit * 2;}}px;\n  min-width: 150px;\n`;\n\nconst NewChartButtonContainer = styled.div`\n  ${(_ref3) => {let { theme } = _ref3;return css`\n    display: flex;\n    justify-content: flex-end;\n    padding-right: ${theme.gridUnit * 2}px;\n  `;}}\n`;\n\nconst NewChartButton = styled(Button)`\n  ${(_ref4) => {let { theme } = _ref4;return css`\n    height: auto;\n    & > .anticon + span {\n      margin-left: 0;\n    }\n    & > [role='img']:first-of-type {\n      margin-right: ${theme.gridUnit}px;\n      padding-bottom: 1px;\n      line-height: 0;\n    }\n  `;}}\n`;\n\nexport const ChartList = styled.div`\n  flex-grow: 1;\n  min-height: 0;\n`;\n\nclass SliceAdder extends React.Component {\n  static sortByComparator(attr) {\n    const desc = attr === 'changed_on' ? -1 : 1;\n\n    return (a, b) => {\n      if (a[attr] < b[attr]) {\n        return -1 * desc;\n      }\n      if (a[attr] > b[attr]) {\n        return 1 * desc;\n      }\n      return 0;\n    };\n  }\n\n  constructor(props) {\n    super(props);this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    handleChange = _debounce((value) => {\n      this.searchUpdated(value);\n      this.slicesRequest = this.props.fetchSlices(\n      this.userIdForFetch(),\n      value,\n      this.state.sortBy);\n\n    }, 300);this.state = { filteredSlices: [], searchTerm: '', sortBy: DEFAULT_SORT_KEY, selectedSliceIdsSet: new Set(props.selectedSliceIds), showOnlyMyCharts: getItem(LocalStorageKeys.dashboard__editor_show_only_my_charts, true) };this.rowRenderer = this.rowRenderer.bind(this);this.searchUpdated = this.searchUpdated.bind(this);this.handleSelect = this.handleSelect.bind(this);this.userIdForFetch = this.userIdForFetch.bind(this);this.onShowOnlyMyCharts = this.onShowOnlyMyCharts.bind(this);}userIdForFetch() {return this.state.showOnlyMyCharts ? this.props.userId : undefined;}componentDidMount() {this.slicesRequest = this.props.fetchSlices(this.userIdForFetch());}UNSAFE_componentWillReceiveProps(nextProps) {const nextState = {};if (nextProps.lastUpdated !== this.props.lastUpdated) {nextState.filteredSlices = this.getFilteredSortedSlices(nextProps.slices, this.state.searchTerm, this.state.sortBy, this.state.showOnlyMyCharts);}if (nextProps.selectedSliceIds !== this.props.selectedSliceIds) {nextState.selectedSliceIdsSet = new Set(nextProps.selectedSliceIds);}if (Object.keys(nextState).length) {this.setState(nextState);}}componentWillUnmount() {// Clears the redux store keeping only selected items\n    const selectedSlices = _pickBy(this.props.slices, (value) => this.state.selectedSliceIdsSet.has(value.slice_id));this.props.updateSlices(selectedSlices);if (this.slicesRequest && this.slicesRequest.abort) {this.slicesRequest.abort();}}getFilteredSortedSlices(slices, searchTerm, sortBy, showOnlyMyCharts) {return Object.values(slices).filter((slice) => showOnlyMyCharts ? slice.owners && slice.owners.find((owner) => owner.id === this.props.userId) || slice.created_by && slice.created_by.id === this.props.userId : true).filter(createFilter(searchTerm, KEYS_TO_FILTERS)).sort(SliceAdder.sortByComparator(sortBy));}\n  searchUpdated(searchTerm) {\n    this.setState((prevState) => ({\n      searchTerm,\n      filteredSlices: this.getFilteredSortedSlices(\n      this.props.slices,\n      searchTerm,\n      prevState.sortBy,\n      prevState.showOnlyMyCharts) }));\n\n\n  }\n\n  handleSelect(sortBy) {\n    this.setState((prevState) => ({\n      sortBy,\n      filteredSlices: this.getFilteredSortedSlices(\n      this.props.slices,\n      prevState.searchTerm,\n      sortBy,\n      prevState.showOnlyMyCharts) }));\n\n\n    this.slicesRequest = this.props.fetchSlices(\n    this.userIdForFetch(),\n    this.state.searchTerm,\n    sortBy);\n\n  }\n\n  rowRenderer(_ref5) {let { key, index, style } = _ref5;\n    const { filteredSlices, selectedSliceIdsSet } = this.state;\n    const cellData = filteredSlices[index];\n    const isSelected = selectedSliceIdsSet.has(cellData.slice_id);\n    const type = CHART_TYPE;\n    const id = NEW_CHART_ID;\n\n    const meta = {\n      chartId: cellData.slice_id,\n      sliceName: cellData.slice_name };\n\n    return (\n      ___EmotionJSX(DragDroppable, {\n        key: key,\n        component: { type, id, meta },\n        parentComponent: {\n          id: NEW_COMPONENTS_SOURCE_ID,\n          type: NEW_COMPONENT_SOURCE_TYPE },\n\n        index: index,\n        depth: 0,\n        disableDragDrop: isSelected,\n        editMode: this.props.editMode\n        // we must use a custom drag preview within the List because\n        // it does not seem to work within a fixed-position container\n        , useEmptyDragPreview: true\n        // List library expect style props here\n        // actual style should be applied to nested AddSliceCard component\n        , style: {} },\n\n      (_ref6) => {let { dragSourceRef } = _ref6;return (\n          ___EmotionJSX(AddSliceCard, {\n            innerRef: dragSourceRef,\n            style: style,\n            sliceName: cellData.slice_name,\n            lastModified: cellData.changed_on_humanized,\n            visType: cellData.viz_type,\n            datasourceUrl: cellData.datasource_url,\n            datasourceName: cellData.datasource_name,\n            thumbnailUrl: cellData.thumbnail_url,\n            isSelected: isSelected }));}));\n\n\n\n\n  }\n\n  onShowOnlyMyCharts(showOnlyMyCharts) {\n    if (!showOnlyMyCharts) {\n      this.slicesRequest = this.props.fetchSlices(\n      undefined,\n      this.state.searchTerm,\n      this.state.sortBy);\n\n    }\n    this.setState((prevState) => ({\n      showOnlyMyCharts,\n      filteredSlices: this.getFilteredSortedSlices(\n      this.props.slices,\n      prevState.searchTerm,\n      prevState.sortBy,\n      showOnlyMyCharts) }));\n\n\n    setItem(\n    LocalStorageKeys.dashboard__editor_show_only_my_charts,\n    showOnlyMyCharts);\n\n  }\n\n  render() {\n    return (\n      ___EmotionJSX(\"div\", {\n        css: css`\n          height: 100%;\n          display: flex;\n          flex-direction: column;\n        ` },\n\n      ___EmotionJSX(NewChartButtonContainer, null,\n      ___EmotionJSX(NewChartButton, {\n        buttonStyle: \"link\",\n        buttonSize: \"xsmall\",\n        onClick: () =>\n        window.open(\n        `/chart/add?dashboard_id=${this.props.dashboardId}`,\n        '_blank',\n        'noopener noreferrer') },\n\n\n\n      ___EmotionJSX(Icons.PlusSmall, null),\n      t('Create new chart'))),\n\n\n      ___EmotionJSX(Controls, null,\n      ___EmotionJSX(Input, {\n        placeholder:\n        this.state.showOnlyMyCharts ?\n        t('Filter your charts') :\n        t('Filter charts'),\n\n        className: \"search-input\",\n        onChange: (ev) => this.handleChange(ev.target.value),\n        \"data-test\": \"dashboard-charts-filter-search-input\" }),\n\n      ___EmotionJSX(StyledSelect, {\n        id: \"slice-adder-sortby\",\n        value: this.state.sortBy,\n        onChange: this.handleSelect,\n        options: Object.entries(KEYS_TO_SORT).map((_ref7) => {let [key, label] = _ref7;return {\n            label: t('Sort by %s', label),\n            value: key };}),\n\n        placeholder: t('Sort by') })),\n\n\n      ___EmotionJSX(\"div\", {\n        css: (theme) => css`\n            display: flex;\n            flex-direction: row;\n            justify-content: flex-start;\n            align-items: center;\n            gap: ${theme.gridUnit}px;\n            padding: 0 ${theme.gridUnit * 3}px ${theme.gridUnit * 4}px\n              ${theme.gridUnit * 3}px;\n          ` },\n\n      ___EmotionJSX(Checkbox, {\n        onChange: this.onShowOnlyMyCharts,\n        checked: this.state.showOnlyMyCharts }),\n\n      t('Show only my charts'),\n      ___EmotionJSX(InfoTooltipWithTrigger, {\n        placement: \"top\",\n        tooltip: t(\n        `You can choose to display all charts that you have access to or only the ones you own.\n              Your filter selection will be saved and remain active until you choose to change it.`) })),\n\n\n\n      this.props.isLoading && ___EmotionJSX(Loading, null),\n      !this.props.isLoading && this.state.filteredSlices.length > 0 &&\n      ___EmotionJSX(ChartList, null,\n      ___EmotionJSX(AutoSizer, null,\n      (_ref8) => {let { height, width } = _ref8;return (\n          ___EmotionJSX(List, {\n            width: width,\n            height: height,\n            itemCount: this.state.filteredSlices.length,\n            itemSize: DEFAULT_CELL_HEIGHT,\n            searchTerm: this.state.searchTerm,\n            sortBy: this.state.sortBy,\n            selectedSliceIds: this.props.selectedSliceIds },\n\n          this.rowRenderer));})),\n\n\n\n\n\n      this.props.errorMessage &&\n      ___EmotionJSX(\"div\", {\n        css: css`\n              padding: 16px;\n            ` },\n\n      this.props.errorMessage),\n\n\n\n      ___EmotionJSX(AddSliceDragPreview, { slices: this.state.filteredSlices })));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nSliceAdder.propTypes = propTypes;\nSliceAdder.defaultProps = defaultProps;const _default =\n\nSliceAdder;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(KEYS_TO_FILTERS, \"KEYS_TO_FILTERS\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(KEYS_TO_SORT, \"KEYS_TO_SORT\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(DEFAULT_SORT_KEY, \"DEFAULT_SORT_KEY\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(DEFAULT_CELL_HEIGHT, \"DEFAULT_CELL_HEIGHT\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(Controls, \"Controls\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(StyledSelect, \"StyledSelect\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(NewChartButtonContainer, \"NewChartButtonContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(NewChartButton, \"NewChartButton\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(ChartList, \"ChartList\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(SliceAdder, \"SliceAdder\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/SliceAdder.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","PropTypes","AutoSizer","FixedSizeList","List","createFilter","t","styled","css","Input","Select","Loading","Button","Icons","LocalStorageKeys","getItem","setItem","CHART_TYPE","NEW_COMPONENT_SOURCE_TYPE","NEW_CHART_ID","NEW_COMPONENTS_SOURCE_ID","slicePropShape","Checkbox","InfoTooltipWithTrigger","AddSliceCard","AddSliceDragPreview","DragDroppable","propTypes","fetchSlices","func","isRequired","updateSlices","isLoading","bool","slices","objectOf","lastUpdated","number","errorMessage","string","userId","selectedSliceIds","arrayOf","editMode","dashboardId","defaultProps","KEYS_TO_FILTERS","KEYS_TO_SORT","slice_name","viz_type","datasource_name","changed_on","DEFAULT_SORT_KEY","DEFAULT_CELL_HEIGHT","Controls","div","theme","gridUnit","StyledSelect","NewChartButtonContainer","NewChartButton","ChartList","SliceAdder","Component","sortByComparator","attr","desc","a","b","constructor","props","handleChange","value","searchUpdated","slicesRequest","userIdForFetch","state","sortBy","filteredSlices","searchTerm","selectedSliceIdsSet","Set","showOnlyMyCharts","dashboard__editor_show_only_my_charts","rowRenderer","bind","handleSelect","onShowOnlyMyCharts","undefined","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","nextState","getFilteredSortedSlices","Object","keys","length","setState","componentWillUnmount","selectedSlices","has","slice_id","abort","values","filter","slice","owners","find","owner","id","created_by","sort","prevState","key","index","style","cellData","isSelected","type","meta","chartId","sliceName","dragSourceRef","changed_on_humanized","datasource_url","thumbnail_url","render","window","open","ev","target","entries","map","label","height","width"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/SliceAdder.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { FixedSizeList as List } from 'react-window';\nimport { createFilter } from 'react-search-input';\nimport { t, styled, css } from '@superset-ui/core';\nimport { Input } from 'src/components/Input';\nimport { Select } from 'src/components';\nimport Loading from 'src/components/Loading';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport {\n  LocalStorageKeys,\n  getItem,\n  setItem,\n} from 'src/utils/localStorageHelpers';\nimport {\n  CHART_TYPE,\n  NEW_COMPONENT_SOURCE_TYPE,\n} from 'src/dashboard/util/componentTypes';\nimport {\n  NEW_CHART_ID,\n  NEW_COMPONENTS_SOURCE_ID,\n} from 'src/dashboard/util/constants';\nimport { slicePropShape } from 'src/dashboard/util/propShapes';\nimport { debounce, pickBy } from 'lodash';\nimport Checkbox from 'src/components/Checkbox';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport AddSliceCard from './AddSliceCard';\nimport AddSliceDragPreview from './dnd/AddSliceDragPreview';\nimport DragDroppable from './dnd/DragDroppable';\n\nconst propTypes = {\n  fetchSlices: PropTypes.func.isRequired,\n  updateSlices: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  slices: PropTypes.objectOf(slicePropShape).isRequired,\n  lastUpdated: PropTypes.number.isRequired,\n  errorMessage: PropTypes.string,\n  userId: PropTypes.number.isRequired,\n  selectedSliceIds: PropTypes.arrayOf(PropTypes.number),\n  editMode: PropTypes.bool,\n  dashboardId: PropTypes.number,\n};\n\nconst defaultProps = {\n  selectedSliceIds: [],\n  editMode: false,\n  errorMessage: '',\n};\n\nconst KEYS_TO_FILTERS = ['slice_name', 'viz_type', 'datasource_name'];\nconst KEYS_TO_SORT = {\n  slice_name: t('name'),\n  viz_type: t('viz type'),\n  datasource_name: t('dataset'),\n  changed_on: t('recent'),\n};\n\nexport const DEFAULT_SORT_KEY = 'changed_on';\n\nconst DEFAULT_CELL_HEIGHT = 128;\n\nconst Controls = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    flex-direction: row;\n    padding:\n      ${theme.gridUnit * 4}px\n      ${theme.gridUnit * 3}px\n      ${theme.gridUnit * 4}px\n      ${theme.gridUnit * 3}px;\n  `}\n`;\n\nconst StyledSelect = styled(Select)`\n  margin-left: ${({ theme }) => theme.gridUnit * 2}px;\n  min-width: 150px;\n`;\n\nconst NewChartButtonContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    justify-content: flex-end;\n    padding-right: ${theme.gridUnit * 2}px;\n  `}\n`;\n\nconst NewChartButton = styled(Button)`\n  ${({ theme }) => css`\n    height: auto;\n    & > .anticon + span {\n      margin-left: 0;\n    }\n    & > [role='img']:first-of-type {\n      margin-right: ${theme.gridUnit}px;\n      padding-bottom: 1px;\n      line-height: 0;\n    }\n  `}\n`;\n\nexport const ChartList = styled.div`\n  flex-grow: 1;\n  min-height: 0;\n`;\n\nclass SliceAdder extends React.Component {\n  static sortByComparator(attr) {\n    const desc = attr === 'changed_on' ? -1 : 1;\n\n    return (a, b) => {\n      if (a[attr] < b[attr]) {\n        return -1 * desc;\n      }\n      if (a[attr] > b[attr]) {\n        return 1 * desc;\n      }\n      return 0;\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      filteredSlices: [],\n      searchTerm: '',\n      sortBy: DEFAULT_SORT_KEY,\n      selectedSliceIdsSet: new Set(props.selectedSliceIds),\n      showOnlyMyCharts: getItem(\n        LocalStorageKeys.dashboard__editor_show_only_my_charts,\n        true,\n      ),\n    };\n    this.rowRenderer = this.rowRenderer.bind(this);\n    this.searchUpdated = this.searchUpdated.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.userIdForFetch = this.userIdForFetch.bind(this);\n    this.onShowOnlyMyCharts = this.onShowOnlyMyCharts.bind(this);\n  }\n\n  userIdForFetch() {\n    return this.state.showOnlyMyCharts ? this.props.userId : undefined;\n  }\n\n  componentDidMount() {\n    this.slicesRequest = this.props.fetchSlices(this.userIdForFetch());\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const nextState = {};\n    if (nextProps.lastUpdated !== this.props.lastUpdated) {\n      nextState.filteredSlices = this.getFilteredSortedSlices(\n        nextProps.slices,\n        this.state.searchTerm,\n        this.state.sortBy,\n        this.state.showOnlyMyCharts,\n      );\n    }\n\n    if (nextProps.selectedSliceIds !== this.props.selectedSliceIds) {\n      nextState.selectedSliceIdsSet = new Set(nextProps.selectedSliceIds);\n    }\n\n    if (Object.keys(nextState).length) {\n      this.setState(nextState);\n    }\n  }\n\n  componentWillUnmount() {\n    // Clears the redux store keeping only selected items\n    const selectedSlices = pickBy(this.props.slices, value =>\n      this.state.selectedSliceIdsSet.has(value.slice_id),\n    );\n    this.props.updateSlices(selectedSlices);\n    if (this.slicesRequest && this.slicesRequest.abort) {\n      this.slicesRequest.abort();\n    }\n  }\n\n  getFilteredSortedSlices(slices, searchTerm, sortBy, showOnlyMyCharts) {\n    return Object.values(slices)\n      .filter(slice =>\n        showOnlyMyCharts\n          ? (slice.owners &&\n              slice.owners.find(owner => owner.id === this.props.userId)) ||\n            (slice.created_by && slice.created_by.id === this.props.userId)\n          : true,\n      )\n      .filter(createFilter(searchTerm, KEYS_TO_FILTERS))\n      .sort(SliceAdder.sortByComparator(sortBy));\n  }\n\n  handleChange = debounce(value => {\n    this.searchUpdated(value);\n    this.slicesRequest = this.props.fetchSlices(\n      this.userIdForFetch(),\n      value,\n      this.state.sortBy,\n    );\n  }, 300);\n\n  searchUpdated(searchTerm) {\n    this.setState(prevState => ({\n      searchTerm,\n      filteredSlices: this.getFilteredSortedSlices(\n        this.props.slices,\n        searchTerm,\n        prevState.sortBy,\n        prevState.showOnlyMyCharts,\n      ),\n    }));\n  }\n\n  handleSelect(sortBy) {\n    this.setState(prevState => ({\n      sortBy,\n      filteredSlices: this.getFilteredSortedSlices(\n        this.props.slices,\n        prevState.searchTerm,\n        sortBy,\n        prevState.showOnlyMyCharts,\n      ),\n    }));\n    this.slicesRequest = this.props.fetchSlices(\n      this.userIdForFetch(),\n      this.state.searchTerm,\n      sortBy,\n    );\n  }\n\n  rowRenderer({ key, index, style }) {\n    const { filteredSlices, selectedSliceIdsSet } = this.state;\n    const cellData = filteredSlices[index];\n    const isSelected = selectedSliceIdsSet.has(cellData.slice_id);\n    const type = CHART_TYPE;\n    const id = NEW_CHART_ID;\n\n    const meta = {\n      chartId: cellData.slice_id,\n      sliceName: cellData.slice_name,\n    };\n    return (\n      <DragDroppable\n        key={key}\n        component={{ type, id, meta }}\n        parentComponent={{\n          id: NEW_COMPONENTS_SOURCE_ID,\n          type: NEW_COMPONENT_SOURCE_TYPE,\n        }}\n        index={index}\n        depth={0}\n        disableDragDrop={isSelected}\n        editMode={this.props.editMode}\n        // we must use a custom drag preview within the List because\n        // it does not seem to work within a fixed-position container\n        useEmptyDragPreview\n        // List library expect style props here\n        // actual style should be applied to nested AddSliceCard component\n        style={{}}\n      >\n        {({ dragSourceRef }) => (\n          <AddSliceCard\n            innerRef={dragSourceRef}\n            style={style}\n            sliceName={cellData.slice_name}\n            lastModified={cellData.changed_on_humanized}\n            visType={cellData.viz_type}\n            datasourceUrl={cellData.datasource_url}\n            datasourceName={cellData.datasource_name}\n            thumbnailUrl={cellData.thumbnail_url}\n            isSelected={isSelected}\n          />\n        )}\n      </DragDroppable>\n    );\n  }\n\n  onShowOnlyMyCharts(showOnlyMyCharts) {\n    if (!showOnlyMyCharts) {\n      this.slicesRequest = this.props.fetchSlices(\n        undefined,\n        this.state.searchTerm,\n        this.state.sortBy,\n      );\n    }\n    this.setState(prevState => ({\n      showOnlyMyCharts,\n      filteredSlices: this.getFilteredSortedSlices(\n        this.props.slices,\n        prevState.searchTerm,\n        prevState.sortBy,\n        showOnlyMyCharts,\n      ),\n    }));\n    setItem(\n      LocalStorageKeys.dashboard__editor_show_only_my_charts,\n      showOnlyMyCharts,\n    );\n  }\n\n  render() {\n    return (\n      <div\n        css={css`\n          height: 100%;\n          display: flex;\n          flex-direction: column;\n        `}\n      >\n        <NewChartButtonContainer>\n          <NewChartButton\n            buttonStyle=\"link\"\n            buttonSize=\"xsmall\"\n            onClick={() =>\n              window.open(\n                `/chart/add?dashboard_id=${this.props.dashboardId}`,\n                '_blank',\n                'noopener noreferrer',\n              )\n            }\n          >\n            <Icons.PlusSmall />\n            {t('Create new chart')}\n          </NewChartButton>\n        </NewChartButtonContainer>\n        <Controls>\n          <Input\n            placeholder={\n              this.state.showOnlyMyCharts\n                ? t('Filter your charts')\n                : t('Filter charts')\n            }\n            className=\"search-input\"\n            onChange={ev => this.handleChange(ev.target.value)}\n            data-test=\"dashboard-charts-filter-search-input\"\n          />\n          <StyledSelect\n            id=\"slice-adder-sortby\"\n            value={this.state.sortBy}\n            onChange={this.handleSelect}\n            options={Object.entries(KEYS_TO_SORT).map(([key, label]) => ({\n              label: t('Sort by %s', label),\n              value: key,\n            }))}\n            placeholder={t('Sort by')}\n          />\n        </Controls>\n        <div\n          css={theme => css`\n            display: flex;\n            flex-direction: row;\n            justify-content: flex-start;\n            align-items: center;\n            gap: ${theme.gridUnit}px;\n            padding: 0 ${theme.gridUnit * 3}px ${theme.gridUnit * 4}px\n              ${theme.gridUnit * 3}px;\n          `}\n        >\n          <Checkbox\n            onChange={this.onShowOnlyMyCharts}\n            checked={this.state.showOnlyMyCharts}\n          />\n          {t('Show only my charts')}\n          <InfoTooltipWithTrigger\n            placement=\"top\"\n            tooltip={t(\n              `You can choose to display all charts that you have access to or only the ones you own.\n              Your filter selection will be saved and remain active until you choose to change it.`,\n            )}\n          />\n        </div>\n        {this.props.isLoading && <Loading />}\n        {!this.props.isLoading && this.state.filteredSlices.length > 0 && (\n          <ChartList>\n            <AutoSizer>\n              {({ height, width }) => (\n                <List\n                  width={width}\n                  height={height}\n                  itemCount={this.state.filteredSlices.length}\n                  itemSize={DEFAULT_CELL_HEIGHT}\n                  searchTerm={this.state.searchTerm}\n                  sortBy={this.state.sortBy}\n                  selectedSliceIds={this.props.selectedSliceIds}\n                >\n                  {this.rowRenderer}\n                </List>\n              )}\n            </AutoSizer>\n          </ChartList>\n        )}\n        {this.props.errorMessage && (\n          <div\n            css={css`\n              padding: 16px;\n            `}\n          >\n            {this.props.errorMessage}\n          </div>\n        )}\n        {/* Drag preview is just a single fixed-position element */}\n        <AddSliceDragPreview slices={this.state.filteredSlices} />\n      </div>\n    );\n  }\n}\n\nSliceAdder.propTypes = propTypes;\nSliceAdder.defaultProps = defaultProps;\n\nexport default SliceAdder;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}