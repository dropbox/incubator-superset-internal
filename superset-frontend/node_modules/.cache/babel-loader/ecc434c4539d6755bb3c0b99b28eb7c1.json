{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'src/components';\n\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst STYLE_ROW = { marginTop: '5px', minHeight: '30px' };\nconst STYLE_RALIGN = { textAlign: 'right' };\n\nconst propTypes = {\n  label: PropTypes.string.isRequired,\n  tooltip: PropTypes.string,\n  control: PropTypes.node.isRequired,\n  isCheckbox: PropTypes.bool };\n\n\nconst defaultProps = {\n  tooltip: null,\n  isCheckbox: false };\n\n\nexport default function FormRow(_ref) {let { label, tooltip, control, isCheckbox } = _ref;\n  const labelAndTooltip =\n  ___EmotionJSX(\"span\", null,\n  label, ' ',\n  tooltip &&\n  ___EmotionJSX(InfoTooltipWithTrigger, {\n    placement: \"top\",\n    label: label,\n    tooltip: tooltip }));\n\n\n\n\n  if (isCheckbox) {\n    return (\n      ___EmotionJSX(Row, { style: STYLE_ROW, gutter: 16 },\n      ___EmotionJSX(Col, { xs: 24, md: 8, style: STYLE_RALIGN },\n      control),\n\n      ___EmotionJSX(Col, { xs: 24, md: 16 },\n      labelAndTooltip)));\n\n\n\n  }\n  return (\n    ___EmotionJSX(Row, { style: STYLE_ROW, gutter: 16 },\n    ___EmotionJSX(Col, { xs: 24, md: 8, style: STYLE_RALIGN },\n    labelAndTooltip),\n\n    ___EmotionJSX(Col, { xs: 24, md: 16 },\n    control)));\n\n\n\n}\nFormRow.propTypes = propTypes;\nFormRow.defaultProps = defaultProps;","map":{"version":3,"names":["React","PropTypes","Row","Col","InfoTooltipWithTrigger","STYLE_ROW","marginTop","minHeight","STYLE_RALIGN","textAlign","propTypes","label","string","isRequired","tooltip","control","node","isCheckbox","bool","defaultProps","FormRow","labelAndTooltip"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/components/FormRow/index.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'src/components';\n\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\n\nconst STYLE_ROW = { marginTop: '5px', minHeight: '30px' };\nconst STYLE_RALIGN = { textAlign: 'right' };\n\nconst propTypes = {\n  label: PropTypes.string.isRequired,\n  tooltip: PropTypes.string,\n  control: PropTypes.node.isRequired,\n  isCheckbox: PropTypes.bool,\n};\n\nconst defaultProps = {\n  tooltip: null,\n  isCheckbox: false,\n};\n\nexport default function FormRow({ label, tooltip, control, isCheckbox }) {\n  const labelAndTooltip = (\n    <span>\n      {label}{' '}\n      {tooltip && (\n        <InfoTooltipWithTrigger\n          placement=\"top\"\n          label={label}\n          tooltip={tooltip}\n        />\n      )}\n    </span>\n  );\n  if (isCheckbox) {\n    return (\n      <Row style={STYLE_ROW} gutter={16}>\n        <Col xs={24} md={8} style={STYLE_RALIGN}>\n          {control}\n        </Col>\n        <Col xs={24} md={16}>\n          {labelAndTooltip}\n        </Col>\n      </Row>\n    );\n  }\n  return (\n    <Row style={STYLE_ROW} gutter={16}>\n      <Col xs={24} md={8} style={STYLE_RALIGN}>\n        {labelAndTooltip}\n      </Col>\n      <Col xs={24} md={16}>\n        {control}\n      </Col>\n    </Row>\n  );\n}\nFormRow.propTypes = propTypes;\nFormRow.defaultProps = defaultProps;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,gBAAzB;;AAEA,SAASC,sBAAT,QAAuC,6BAAvC,C;;AAEA,MAAMC,SAAS,GAAG,EAAEC,SAAS,EAAE,KAAb,EAAoBC,SAAS,EAAE,MAA/B,EAAlB;AACA,MAAMC,YAAY,GAAG,EAAEC,SAAS,EAAE,OAAb,EAArB;;AAEA,MAAMC,SAAS,GAAG;EAChBC,KAAK,EAAEV,SAAS,CAACW,MAAV,CAAiBC,UADR;EAEhBC,OAAO,EAAEb,SAAS,CAACW,MAFH;EAGhBG,OAAO,EAAEd,SAAS,CAACe,IAAV,CAAeH,UAHR;EAIhBI,UAAU,EAAEhB,SAAS,CAACiB,IAJN,EAAlB;;;AAOA,MAAMC,YAAY,GAAG;EACnBL,OAAO,EAAE,IADU;EAEnBG,UAAU,EAAE,KAFO,EAArB;;;AAKA,eAAe,SAASG,OAAT,OAA0D,KAAzC,EAAET,KAAF,EAASG,OAAT,EAAkBC,OAAlB,EAA2BE,UAA3B,EAAyC;EACvE,MAAMI,eAAe;EACnB;EACGV,KADH,EACU,GADV;EAEGG,OAAO;EACN,cAAC,sBAAD;IACE,SAAS,EAAC,KADZ;IAEE,KAAK,EAAEH,KAFT;IAGE,OAAO,EAAEG,OAHX,GAHJ,CADF;;;;;EAYA,IAAIG,UAAJ,EAAgB;IACd;MACE,cAAC,GAAD,IAAK,KAAK,EAAEZ,SAAZ,EAAuB,MAAM,EAAE,EAA/B;MACE,cAAC,GAAD,IAAK,EAAE,EAAE,EAAT,EAAa,EAAE,EAAE,CAAjB,EAAoB,KAAK,EAAEG,YAA3B;MACGO,OADH,CADF;;MAIE,cAAC,GAAD,IAAK,EAAE,EAAE,EAAT,EAAa,EAAE,EAAE,EAAjB;MACGM,eADH,CAJF,CADF;;;;EAUD;EACD;IACE,cAAC,GAAD,IAAK,KAAK,EAAEhB,SAAZ,EAAuB,MAAM,EAAE,EAA/B;IACE,cAAC,GAAD,IAAK,EAAE,EAAE,EAAT,EAAa,EAAE,EAAE,CAAjB,EAAoB,KAAK,EAAEG,YAA3B;IACGa,eADH,CADF;;IAIE,cAAC,GAAD,IAAK,EAAE,EAAE,EAAT,EAAa,EAAE,EAAE,EAAjB;IACGN,OADH,CAJF,CADF;;;;AAUD;AACDK,OAAO,CAACV,SAAR,GAAoBA,SAApB;AACAU,OAAO,CAACD,YAAR,GAAuBA,YAAvB"},"metadata":{},"sourceType":"module"}