{"ast":null,"code":"import { css as _css } from \"@emotion/react\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport cx from 'classnames';\nimport { t } from '@superset-ui/core';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport IndeterminateCheckbox from 'src/components/IndeterminateCheckbox';\nimport Collapse from 'src/components/Collapse';\nimport { StyledInputContainer, StyledJsonEditor, StyledExpandableForm, antdCollapseStyles, no_margin_bottom } from './styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst ExtraOptions = (_ref) => {var _db$engine_informatio, _extraJson$metadata_c, _extraJson$metadata_c2;let { db, onInputChange, onTextChange, onEditorChange, onExtraInputChange, onExtraEditorChange, extraExtension } = _ref;\n  const expandableModalIsOpen = !!(db != null && db.expose_in_sqllab);\n  const createAsOpen = !!(db != null && db.allow_ctas || db != null && db.allow_cvas);\n  const isFileUploadSupportedByEngine = db == null ? void 0 : (_db$engine_informatio = db.engine_information) == null ? void 0 : _db$engine_informatio.supports_file_upload;\n  // JSON.parse will deep parse engine_params\n  // if it's an object, and we want to keep it a string\n  const extraJson = JSON.parse((db == null ? void 0 : db.extra) || '{}', (key, value) => {\n    if (key === 'engine_params' && typeof value === 'object') {\n      // keep this as a string\n      return JSON.stringify(value);\n    }\n    return value;\n  });\n  const ExtraExtensionComponent = extraExtension == null ? void 0 : extraExtension.component;\n  const ExtraExtensionLogo = extraExtension == null ? void 0 : extraExtension.logo;\n  const ExtensionDescription = extraExtension == null ? void 0 : extraExtension.description;\n  return ___EmotionJSX(Collapse, { expandIconPosition: \"right\", accordion: true, css: (theme) => antdCollapseStyles(theme) },\n  ___EmotionJSX(Collapse.Panel, { header: ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(\"h4\", null, t('SQL Lab')),\n    ___EmotionJSX(\"p\", { className: \"helper\" },\n    t('Adjust how this database will interact with SQL Lab.'))),\n\n    key: \"1\" },\n  ___EmotionJSX(StyledInputContainer, { css: no_margin_bottom },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"expose_in_sqllab\", indeterminate: false, checked: !!(db != null && db.expose_in_sqllab), onChange: onInputChange, labelText: t('Expose database in SQL Lab') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Allow this database to be queried in SQL Lab') })),\n\n  ___EmotionJSX(StyledExpandableForm, { className: cx('expandable', {\n      open: expandableModalIsOpen,\n      'ctas-open': createAsOpen }) },\n\n  ___EmotionJSX(StyledInputContainer, { css: no_margin_bottom },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"allow_ctas\", indeterminate: false, checked: !!(db != null && db.allow_ctas), onChange: onInputChange, labelText: t('Allow CREATE TABLE AS') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Allow creation of new tables based on queries') }))),\n\n\n  ___EmotionJSX(StyledInputContainer, { css: no_margin_bottom },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"allow_cvas\", indeterminate: false, checked: !!(db != null && db.allow_cvas), onChange: onInputChange, labelText: t('Allow CREATE VIEW AS') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Allow creation of new views based on queries') })),\n\n  ___EmotionJSX(StyledInputContainer, { className: cx('expandable', { open: createAsOpen }) },\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('CTAS & CVAS SCHEMA')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"input\", { type: \"text\", name: \"force_ctas_schema\", placeholder: t('Create or select schema...'), onChange: onInputChange, value: (db == null ? void 0 : db.force_ctas_schema) || '' })),\n\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('Force all tables and views to be created in this schema when clicking CTAS or CVAS in SQL Lab.')))),\n\n\n\n  ___EmotionJSX(StyledInputContainer, { css: no_margin_bottom },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"allow_dml\", indeterminate: false, checked: !!(db != null && db.allow_dml), onChange: onInputChange, labelText: t('Allow DML') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Allow manipulation of the database using non-SELECT statements such as UPDATE, DELETE, CREATE, etc.') }))),\n\n\n  ___EmotionJSX(StyledInputContainer, { css: no_margin_bottom },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"cost_estimate_enabled\", indeterminate: false, checked: !!(extraJson != null && extraJson.cost_estimate_enabled), onChange: onExtraInputChange, labelText: t('Enable query cost estimation') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('For Bigquery, Presto and Postgres, shows a button to compute cost before running a query.') }))),\n\n\n  ___EmotionJSX(StyledInputContainer, { css: no_margin_bottom },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"allows_virtual_table_explore\", indeterminate: false, checked: !!(extraJson != null && extraJson.allows_virtual_table_explore), onChange: onExtraInputChange, labelText: t('Allow this database to be explored') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('When enabled, users are able to visualize SQL Lab results in Explore.') }))),\n\n\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"disable_data_preview\", indeterminate: false, checked: !!(extraJson != null && extraJson.disable_data_preview), onChange: onExtraInputChange, labelText: t('Disable SQL Lab data preview queries') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Disable data preview when fetching table metadata in SQL Lab. ' +\n    ' Useful to avoid browser performance issues when using ' +\n    ' databases with very wide tables.') })))))),\n\n\n\n\n\n  ___EmotionJSX(Collapse.Panel, { header: ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(\"h4\", null, t('Performance')),\n    ___EmotionJSX(\"p\", { className: \"helper\" },\n    t('Adjust performance settings of this database.'))),\n\n    key: \"2\" },\n  ___EmotionJSX(StyledInputContainer, { className: \"mb-8\" },\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Chart cache timeout')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"input\", { type: \"number\", name: \"cache_timeout\", value: (db == null ? void 0 : db.cache_timeout) || '', placeholder: t('Enter duration in seconds'), onChange: onInputChange })),\n\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('Duration (in seconds) of the caching timeout for charts of this database.' +\n  ' A timeout of 0 indicates that the cache never expires, and -1 bypasses the cache.' +\n  ' Note this defaults to the global timeout if undefined.'))),\n\n\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Schema cache timeout')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"input\", { type: \"number\", name: \"schema_cache_timeout\", value: (extraJson == null ? void 0 : (_extraJson$metadata_c = extraJson.metadata_cache_timeout) == null ? void 0 : _extraJson$metadata_c.schema_cache_timeout) || '', placeholder: t('Enter duration in seconds'), onChange: onExtraInputChange, \"data-test\": \"schema-cache-timeout-test\" })),\n\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('Duration (in seconds) of the metadata caching timeout for schemas of ' +\n  'this database. If left unset, the cache never expires.'))),\n\n\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Table cache timeout')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"input\", { type: \"number\", name: \"table_cache_timeout\", value: (extraJson == null ? void 0 : (_extraJson$metadata_c2 = extraJson.metadata_cache_timeout) == null ? void 0 : _extraJson$metadata_c2.table_cache_timeout) || '', placeholder: t('Enter duration in seconds'), onChange: onExtraInputChange, \"data-test\": \"table-cache-timeout-test\" })),\n\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('Duration (in seconds) of the metadata caching timeout for tables of ' +\n  'this database. If left unset, the cache never expires. '))),\n\n\n  ___EmotionJSX(StyledInputContainer, { css: /*#__PURE__*/_css({ no_margin_bottom }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:ExtraOptions;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"allow_run_async\", indeterminate: false, checked: !!(db != null && db.allow_run_async), onChange: onInputChange, labelText: t('Asynchronous query execution') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Operate the database in asynchronous mode, meaning that the queries ' +\n    'are executed on remote workers as opposed to on the web server itself. ' +\n    'This assumes that you have a Celery worker setup as well as a results ' +\n    'backend. Refer to the installation docs for more information.') }))),\n\n\n  ___EmotionJSX(StyledInputContainer, { css: /*#__PURE__*/_css({ no_margin_bottom }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:ExtraOptions;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"cancel_query_on_windows_unload\", indeterminate: false, checked: !!(extraJson != null && extraJson.cancel_query_on_windows_unload), onChange: onExtraInputChange, labelText: t('Cancel query on window unload event') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Terminate running queries when browser window closed or navigated ' +\n    'to another page. Available for Presto, Hive, MySQL, Postgres and ' +\n    'Snowflake databases.') })))),\n\n\n\n  ___EmotionJSX(Collapse.Panel, { header: ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(\"h4\", null, t('Security')),\n    ___EmotionJSX(\"p\", { className: \"helper\" }, t('Add extra connection information.'))),\n    key: \"3\" },\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Secure extra')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(StyledJsonEditor, { name: \"masked_encrypted_extra\", value: (db == null ? void 0 : db.masked_encrypted_extra) || '', placeholder: t('Secure extra'), onChange: (json) => onEditorChange({ json, name: 'masked_encrypted_extra' }), width: \"100%\", height: \"160px\" })),\n\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  ___EmotionJSX(\"div\", null,\n  t('JSON string containing additional connection configuration. ' +\n  'This is used to provide connection information for systems ' +\n  'like Hive, Presto and BigQuery which do not conform to the ' +\n  'username:password syntax normally used by SQLAlchemy.')))),\n\n\n\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Root certificate')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"textarea\", { name: \"server_cert\", value: (db == null ? void 0 : db.server_cert) || '', placeholder: t('Enter CA_BUNDLE'), onChange: onTextChange })),\n\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('Optional CA_BUNDLE contents to validate HTTPS requests. Only ' +\n  'available on certain database engines.'))),\n\n\n  ___EmotionJSX(StyledInputContainer, { css: !isFileUploadSupportedByEngine ? no_margin_bottom : {} },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"impersonate_user\", indeterminate: false, checked: !!(db != null && db.impersonate_user), onChange: onInputChange, labelText: t('Impersonate logged in user (Presto, Trino, Drill, Hive, and GSheets)') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('If Presto or Trino, all the queries in SQL Lab are going to be executed as the ' +\n    'currently logged on user who must have permission to run them. If Hive ' +\n    'and hive.server2.enable.doAs is enabled, will run the queries as ' +\n    'service account, but impersonate the currently logged on user via ' +\n    'hive.server2.proxy.user property.') }))),\n\n\n  isFileUploadSupportedByEngine && ___EmotionJSX(StyledInputContainer, { css: !(db != null && db.allow_file_upload) ? no_margin_bottom : {} },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"allow_file_upload\", indeterminate: false, checked: !!(db != null && db.allow_file_upload), onChange: onInputChange, labelText: t('Allow file uploads to database') }))),\n\n\n  isFileUploadSupportedByEngine && !!(db != null && db.allow_file_upload) && ___EmotionJSX(StyledInputContainer, { css: no_margin_bottom },\n  ___EmotionJSX(\"div\", { className: \"control-label\" },\n  t('Schemas allowed for File upload')),\n\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"input\", { type: \"text\", name: \"schemas_allowed_for_file_upload\", value: ((extraJson == null ? void 0 : extraJson.schemas_allowed_for_file_upload) || []).join(','), placeholder: \"schema1,schema2\", onChange: onExtraInputChange })),\n\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('A comma-separated list of schemas that files are allowed to upload to.')))),\n\n\n\n  extraExtension && ExtraExtensionComponent && ExtensionDescription && ___EmotionJSX(Collapse.Panel, { header: ___EmotionJSX(\"div\", null,\n    ExtraExtensionLogo && ___EmotionJSX(ExtraExtensionLogo, null),\n    ___EmotionJSX(\"span\", { css: (theme) => ({\n        fontSize: theme.typography.sizes.l,\n        fontWeight: theme.typography.weights.bold }) },\n\n    extraExtension == null ? void 0 : extraExtension.title),\n\n    ___EmotionJSX(\"p\", { className: \"helper\" },\n    ___EmotionJSX(ExtensionDescription, null))),\n\n    key: extraExtension == null ? void 0 : extraExtension.title, collapsible: extraExtension.enabled != null && extraExtension.enabled() ? 'header' : 'disabled' },\n  ___EmotionJSX(StyledInputContainer, { css: no_margin_bottom },\n  ___EmotionJSX(ExtraExtensionComponent, { db: db, onEdit: extraExtension.onEdit }))),\n\n\n  ___EmotionJSX(Collapse.Panel, { header: ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(\"h4\", null, t('Other')),\n    ___EmotionJSX(\"p\", { className: \"helper\" }, t('Additional settings.'))),\n    key: \"4\" },\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Metadata Parameters')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(StyledJsonEditor, { name: \"metadata_params\", placeholder: t('Metadata Parameters'), onChange: (json) => onExtraEditorChange({ json, name: 'metadata_params' }), width: \"100%\", height: \"160px\", value: !Object.keys((extraJson == null ? void 0 : extraJson.metadata_params) || {}).length ?\n    '' :\n    extraJson == null ? void 0 : extraJson.metadata_params })),\n\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  ___EmotionJSX(\"div\", null,\n  t('The metadata_params object gets unpacked into the sqlalchemy.MetaData call.')))),\n\n\n\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Engine Parameters')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(StyledJsonEditor, { name: \"engine_params\", placeholder: t('Engine Parameters'), onChange: (json) => onExtraEditorChange({ json, name: 'engine_params' }), width: \"100%\", height: \"160px\", value: !Object.keys((extraJson == null ? void 0 : extraJson.engine_params) || {}).length ?\n    '' :\n    extraJson == null ? void 0 : extraJson.engine_params })),\n\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  ___EmotionJSX(\"div\", null,\n  t('The engine_params object gets unpacked into the sqlalchemy.create_engine call.')))),\n\n\n\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\", \"data-test\": \"version-label-test\" },\n  t('Version')),\n\n  ___EmotionJSX(\"div\", { className: \"input-container\", \"data-test\": \"version-spinbutton-test\" },\n  ___EmotionJSX(\"input\", { type: \"number\", name: \"version\", placeholder: t('Version number'), onChange: onExtraInputChange, value: (extraJson == null ? void 0 : extraJson.version) || '' })),\n\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('Specify the database version. This should be used with ' +\n  'Presto in order to enable query cost estimation.')))));\n\n\n\n\n};const _default =\nExtraOptions;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ExtraOptions, \"ExtraOptions\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/databases/DatabaseModal/ExtraOptions.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/databases/DatabaseModal/ExtraOptions.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","cx","t","InfoTooltip","IndeterminateCheckbox","Collapse","StyledInputContainer","StyledJsonEditor","StyledExpandableForm","antdCollapseStyles","no_margin_bottom","ExtraOptions","db","onInputChange","onTextChange","onEditorChange","onExtraInputChange","onExtraEditorChange","extraExtension","expandableModalIsOpen","expose_in_sqllab","createAsOpen","allow_ctas","allow_cvas","isFileUploadSupportedByEngine","engine_information","supports_file_upload","extraJson","JSON","parse","extra","key","value","stringify","ExtraExtensionComponent","component","ExtraExtensionLogo","logo","ExtensionDescription","description","theme","open","force_ctas_schema","allow_dml","cost_estimate_enabled","allows_virtual_table_explore","disable_data_preview","cache_timeout","metadata_cache_timeout","schema_cache_timeout","table_cache_timeout","allow_run_async","cancel_query_on_windows_unload","masked_encrypted_extra","json","name","server_cert","impersonate_user","allow_file_upload","schemas_allowed_for_file_upload","join","fontSize","typography","sizes","l","fontWeight","weights","bold","title","enabled","onEdit","Object","keys","metadata_params","length","engine_params","version"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/databases/DatabaseModal/ExtraOptions.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ChangeEvent, EventHandler } from 'react';\nimport cx from 'classnames';\nimport {\n  t,\n  SupersetTheme,\n  DatabaseConnectionExtension,\n} from '@superset-ui/core';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport IndeterminateCheckbox from 'src/components/IndeterminateCheckbox';\nimport Collapse from 'src/components/Collapse';\nimport {\n  StyledInputContainer,\n  StyledJsonEditor,\n  StyledExpandableForm,\n  antdCollapseStyles,\n  no_margin_bottom,\n} from './styles';\nimport { DatabaseObject, ExtraJson } from '../types';\n\nconst ExtraOptions = ({\n  db,\n  onInputChange,\n  onTextChange,\n  onEditorChange,\n  onExtraInputChange,\n  onExtraEditorChange,\n  extraExtension,\n}: {\n  db: DatabaseObject | null;\n  onInputChange: EventHandler<ChangeEvent<HTMLInputElement>>;\n  onTextChange: EventHandler<ChangeEvent<HTMLTextAreaElement>>;\n  onEditorChange: Function;\n  onExtraInputChange: EventHandler<ChangeEvent<HTMLInputElement>>;\n  onExtraEditorChange: Function;\n  extraExtension: DatabaseConnectionExtension | undefined;\n}) => {\n  const expandableModalIsOpen = !!db?.expose_in_sqllab;\n  const createAsOpen = !!(db?.allow_ctas || db?.allow_cvas);\n  const isFileUploadSupportedByEngine =\n    db?.engine_information?.supports_file_upload;\n\n  // JSON.parse will deep parse engine_params\n  // if it's an object, and we want to keep it a string\n  const extraJson: ExtraJson = JSON.parse(db?.extra || '{}', (key, value) => {\n    if (key === 'engine_params' && typeof value === 'object') {\n      // keep this as a string\n      return JSON.stringify(value);\n    }\n    return value;\n  });\n\n  const ExtraExtensionComponent = extraExtension?.component;\n  const ExtraExtensionLogo = extraExtension?.logo;\n  const ExtensionDescription = extraExtension?.description;\n\n  return (\n    <Collapse\n      expandIconPosition=\"right\"\n      accordion\n      css={(theme: SupersetTheme) => antdCollapseStyles(theme)}\n    >\n      <Collapse.Panel\n        header={\n          <div>\n            <h4>{t('SQL Lab')}</h4>\n            <p className=\"helper\">\n              {t('Adjust how this database will interact with SQL Lab.')}\n            </p>\n          </div>\n        }\n        key=\"1\"\n      >\n        <StyledInputContainer css={no_margin_bottom}>\n          <div className=\"input-container\">\n            <IndeterminateCheckbox\n              id=\"expose_in_sqllab\"\n              indeterminate={false}\n              checked={!!db?.expose_in_sqllab}\n              onChange={onInputChange}\n              labelText={t('Expose database in SQL Lab')}\n            />\n            <InfoTooltip\n              tooltip={t('Allow this database to be queried in SQL Lab')}\n            />\n          </div>\n          <StyledExpandableForm\n            className={cx('expandable', {\n              open: expandableModalIsOpen,\n              'ctas-open': createAsOpen,\n            })}\n          >\n            <StyledInputContainer css={no_margin_bottom}>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"allow_ctas\"\n                  indeterminate={false}\n                  checked={!!db?.allow_ctas}\n                  onChange={onInputChange}\n                  labelText={t('Allow CREATE TABLE AS')}\n                />\n                <InfoTooltip\n                  tooltip={t('Allow creation of new tables based on queries')}\n                />\n              </div>\n            </StyledInputContainer>\n            <StyledInputContainer css={no_margin_bottom}>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"allow_cvas\"\n                  indeterminate={false}\n                  checked={!!db?.allow_cvas}\n                  onChange={onInputChange}\n                  labelText={t('Allow CREATE VIEW AS')}\n                />\n                <InfoTooltip\n                  tooltip={t('Allow creation of new views based on queries')}\n                />\n              </div>\n              <StyledInputContainer\n                className={cx('expandable', { open: createAsOpen })}\n              >\n                <div className=\"control-label\">{t('CTAS & CVAS SCHEMA')}</div>\n                <div className=\"input-container\">\n                  <input\n                    type=\"text\"\n                    name=\"force_ctas_schema\"\n                    placeholder={t('Create or select schema...')}\n                    onChange={onInputChange}\n                    value={db?.force_ctas_schema || ''}\n                  />\n                </div>\n                <div className=\"helper\">\n                  {t(\n                    'Force all tables and views to be created in this schema when clicking CTAS or CVAS in SQL Lab.',\n                  )}\n                </div>\n              </StyledInputContainer>\n            </StyledInputContainer>\n            <StyledInputContainer css={no_margin_bottom}>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"allow_dml\"\n                  indeterminate={false}\n                  checked={!!db?.allow_dml}\n                  onChange={onInputChange}\n                  labelText={t('Allow DML')}\n                />\n                <InfoTooltip\n                  tooltip={t(\n                    'Allow manipulation of the database using non-SELECT statements such as UPDATE, DELETE, CREATE, etc.',\n                  )}\n                />\n              </div>\n            </StyledInputContainer>\n            <StyledInputContainer css={no_margin_bottom}>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"cost_estimate_enabled\"\n                  indeterminate={false}\n                  checked={!!extraJson?.cost_estimate_enabled}\n                  onChange={onExtraInputChange}\n                  labelText={t('Enable query cost estimation')}\n                />\n                <InfoTooltip\n                  tooltip={t(\n                    'For Bigquery, Presto and Postgres, shows a button to compute cost before running a query.',\n                  )}\n                />\n              </div>\n            </StyledInputContainer>\n            <StyledInputContainer css={no_margin_bottom}>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"allows_virtual_table_explore\"\n                  indeterminate={false}\n                  checked={!!extraJson?.allows_virtual_table_explore}\n                  onChange={onExtraInputChange}\n                  labelText={t('Allow this database to be explored')}\n                />\n                <InfoTooltip\n                  tooltip={t(\n                    'When enabled, users are able to visualize SQL Lab results in Explore.',\n                  )}\n                />\n              </div>\n            </StyledInputContainer>\n            <StyledInputContainer>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"disable_data_preview\"\n                  indeterminate={false}\n                  checked={!!extraJson?.disable_data_preview}\n                  onChange={onExtraInputChange}\n                  labelText={t('Disable SQL Lab data preview queries')}\n                />\n                <InfoTooltip\n                  tooltip={t(\n                    'Disable data preview when fetching table metadata in SQL Lab. ' +\n                      ' Useful to avoid browser performance issues when using ' +\n                      ' databases with very wide tables.',\n                  )}\n                />\n              </div>\n            </StyledInputContainer>\n          </StyledExpandableForm>\n        </StyledInputContainer>\n      </Collapse.Panel>\n      <Collapse.Panel\n        header={\n          <div>\n            <h4>{t('Performance')}</h4>\n            <p className=\"helper\">\n              {t('Adjust performance settings of this database.')}\n            </p>\n          </div>\n        }\n        key=\"2\"\n      >\n        <StyledInputContainer className=\"mb-8\">\n          <div className=\"control-label\">{t('Chart cache timeout')}</div>\n          <div className=\"input-container\">\n            <input\n              type=\"number\"\n              name=\"cache_timeout\"\n              value={db?.cache_timeout || ''}\n              placeholder={t('Enter duration in seconds')}\n              onChange={onInputChange}\n            />\n          </div>\n          <div className=\"helper\">\n            {t(\n              'Duration (in seconds) of the caching timeout for charts of this database.' +\n                ' A timeout of 0 indicates that the cache never expires, and -1 bypasses the cache.' +\n                ' Note this defaults to the global timeout if undefined.',\n            )}\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Schema cache timeout')}</div>\n          <div className=\"input-container\">\n            <input\n              type=\"number\"\n              name=\"schema_cache_timeout\"\n              value={\n                extraJson?.metadata_cache_timeout?.schema_cache_timeout || ''\n              }\n              placeholder={t('Enter duration in seconds')}\n              onChange={onExtraInputChange}\n              data-test=\"schema-cache-timeout-test\"\n            />\n          </div>\n          <div className=\"helper\">\n            {t(\n              'Duration (in seconds) of the metadata caching timeout for schemas of ' +\n                'this database. If left unset, the cache never expires.',\n            )}\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Table cache timeout')}</div>\n          <div className=\"input-container\">\n            <input\n              type=\"number\"\n              name=\"table_cache_timeout\"\n              value={\n                extraJson?.metadata_cache_timeout?.table_cache_timeout || ''\n              }\n              placeholder={t('Enter duration in seconds')}\n              onChange={onExtraInputChange}\n              data-test=\"table-cache-timeout-test\"\n            />\n          </div>\n          <div className=\"helper\">\n            {t(\n              'Duration (in seconds) of the metadata caching timeout for tables of ' +\n                'this database. If left unset, the cache never expires. ',\n            )}\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer css={{ no_margin_bottom }}>\n          <div className=\"input-container\">\n            <IndeterminateCheckbox\n              id=\"allow_run_async\"\n              indeterminate={false}\n              checked={!!db?.allow_run_async}\n              onChange={onInputChange}\n              labelText={t('Asynchronous query execution')}\n            />\n            <InfoTooltip\n              tooltip={t(\n                'Operate the database in asynchronous mode, meaning that the queries ' +\n                  'are executed on remote workers as opposed to on the web server itself. ' +\n                  'This assumes that you have a Celery worker setup as well as a results ' +\n                  'backend. Refer to the installation docs for more information.',\n              )}\n            />\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer css={{ no_margin_bottom }}>\n          <div className=\"input-container\">\n            <IndeterminateCheckbox\n              id=\"cancel_query_on_windows_unload\"\n              indeterminate={false}\n              checked={!!extraJson?.cancel_query_on_windows_unload}\n              onChange={onExtraInputChange}\n              labelText={t('Cancel query on window unload event')}\n            />\n            <InfoTooltip\n              tooltip={t(\n                'Terminate running queries when browser window closed or navigated ' +\n                  'to another page. Available for Presto, Hive, MySQL, Postgres and ' +\n                  'Snowflake databases.',\n              )}\n            />\n          </div>\n        </StyledInputContainer>\n      </Collapse.Panel>\n      <Collapse.Panel\n        header={\n          <div>\n            <h4>{t('Security')}</h4>\n            <p className=\"helper\">{t('Add extra connection information.')}</p>\n          </div>\n        }\n        key=\"3\"\n      >\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Secure extra')}</div>\n          <div className=\"input-container\">\n            <StyledJsonEditor\n              name=\"masked_encrypted_extra\"\n              value={db?.masked_encrypted_extra || ''}\n              placeholder={t('Secure extra')}\n              onChange={(json: string) =>\n                onEditorChange({ json, name: 'masked_encrypted_extra' })\n              }\n              width=\"100%\"\n              height=\"160px\"\n            />\n          </div>\n          <div className=\"helper\">\n            <div>\n              {t(\n                'JSON string containing additional connection configuration. ' +\n                  'This is used to provide connection information for systems ' +\n                  'like Hive, Presto and BigQuery which do not conform to the ' +\n                  'username:password syntax normally used by SQLAlchemy.',\n              )}\n            </div>\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Root certificate')}</div>\n          <div className=\"input-container\">\n            <textarea\n              name=\"server_cert\"\n              value={db?.server_cert || ''}\n              placeholder={t('Enter CA_BUNDLE')}\n              onChange={onTextChange}\n            />\n          </div>\n          <div className=\"helper\">\n            {t(\n              'Optional CA_BUNDLE contents to validate HTTPS requests. Only ' +\n                'available on certain database engines.',\n            )}\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer\n          css={!isFileUploadSupportedByEngine ? no_margin_bottom : {}}\n        >\n          <div className=\"input-container\">\n            <IndeterminateCheckbox\n              id=\"impersonate_user\"\n              indeterminate={false}\n              checked={!!db?.impersonate_user}\n              onChange={onInputChange}\n              labelText={t(\n                'Impersonate logged in user (Presto, Trino, Drill, Hive, and GSheets)',\n              )}\n            />\n            <InfoTooltip\n              tooltip={t(\n                'If Presto or Trino, all the queries in SQL Lab are going to be executed as the ' +\n                  'currently logged on user who must have permission to run them. If Hive ' +\n                  'and hive.server2.enable.doAs is enabled, will run the queries as ' +\n                  'service account, but impersonate the currently logged on user via ' +\n                  'hive.server2.proxy.user property.',\n              )}\n            />\n          </div>\n        </StyledInputContainer>\n        {isFileUploadSupportedByEngine && (\n          <StyledInputContainer\n            css={!db?.allow_file_upload ? no_margin_bottom : {}}\n          >\n            <div className=\"input-container\">\n              <IndeterminateCheckbox\n                id=\"allow_file_upload\"\n                indeterminate={false}\n                checked={!!db?.allow_file_upload}\n                onChange={onInputChange}\n                labelText={t('Allow file uploads to database')}\n              />\n            </div>\n          </StyledInputContainer>\n        )}\n        {isFileUploadSupportedByEngine && !!db?.allow_file_upload && (\n          <StyledInputContainer css={no_margin_bottom}>\n            <div className=\"control-label\">\n              {t('Schemas allowed for File upload')}\n            </div>\n            <div className=\"input-container\">\n              <input\n                type=\"text\"\n                name=\"schemas_allowed_for_file_upload\"\n                value={(extraJson?.schemas_allowed_for_file_upload || []).join(\n                  ',',\n                )}\n                placeholder=\"schema1,schema2\"\n                onChange={onExtraInputChange}\n              />\n            </div>\n            <div className=\"helper\">\n              {t(\n                'A comma-separated list of schemas that files are allowed to upload to.',\n              )}\n            </div>\n          </StyledInputContainer>\n        )}\n      </Collapse.Panel>\n      {extraExtension && ExtraExtensionComponent && ExtensionDescription && (\n        <Collapse.Panel\n          header={\n            <div>\n              {ExtraExtensionLogo && <ExtraExtensionLogo />}\n              <span\n                css={(theme: SupersetTheme) => ({\n                  fontSize: theme.typography.sizes.l,\n                  fontWeight: theme.typography.weights.bold,\n                })}\n              >\n                {extraExtension?.title}\n              </span>\n              <p className=\"helper\">\n                <ExtensionDescription />\n              </p>\n            </div>\n          }\n          key={extraExtension?.title}\n          collapsible={extraExtension.enabled?.() ? 'header' : 'disabled'}\n        >\n          <StyledInputContainer css={no_margin_bottom}>\n            <ExtraExtensionComponent db={db} onEdit={extraExtension.onEdit} />\n          </StyledInputContainer>\n        </Collapse.Panel>\n      )}\n      <Collapse.Panel\n        header={\n          <div>\n            <h4>{t('Other')}</h4>\n            <p className=\"helper\">{t('Additional settings.')}</p>\n          </div>\n        }\n        key=\"4\"\n      >\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Metadata Parameters')}</div>\n          <div className=\"input-container\">\n            <StyledJsonEditor\n              name=\"metadata_params\"\n              placeholder={t('Metadata Parameters')}\n              onChange={(json: string) =>\n                onExtraEditorChange({ json, name: 'metadata_params' })\n              }\n              width=\"100%\"\n              height=\"160px\"\n              value={\n                !Object.keys(extraJson?.metadata_params || {}).length\n                  ? ''\n                  : extraJson?.metadata_params\n              }\n            />\n          </div>\n          <div className=\"helper\">\n            <div>\n              {t(\n                'The metadata_params object gets unpacked into the sqlalchemy.MetaData call.',\n              )}\n            </div>\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Engine Parameters')}</div>\n          <div className=\"input-container\">\n            <StyledJsonEditor\n              name=\"engine_params\"\n              placeholder={t('Engine Parameters')}\n              onChange={(json: string) =>\n                onExtraEditorChange({ json, name: 'engine_params' })\n              }\n              width=\"100%\"\n              height=\"160px\"\n              value={\n                !Object.keys(extraJson?.engine_params || {}).length\n                  ? ''\n                  : extraJson?.engine_params\n              }\n            />\n          </div>\n          <div className=\"helper\">\n            <div>\n              {t(\n                'The engine_params object gets unpacked into the sqlalchemy.create_engine call.',\n              )}\n            </div>\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer>\n          <div className=\"control-label\" data-test=\"version-label-test\">\n            {t('Version')}\n          </div>\n          <div className=\"input-container\" data-test=\"version-spinbutton-test\">\n            <input\n              type=\"number\"\n              name=\"version\"\n              placeholder={t('Version number')}\n              onChange={onExtraInputChange}\n              value={extraJson?.version || ''}\n            />\n          </div>\n          <div className=\"helper\">\n            {t(\n              'Specify the database version. This should be used with ' +\n                'Presto in order to enable query cost estimation.',\n            )}\n          </div>\n        </StyledInputContainer>\n      </Collapse.Panel>\n    </Collapse>\n  );\n};\n\nexport default ExtraOptions;\n"]},"metadata":{},"sourceType":"module"}