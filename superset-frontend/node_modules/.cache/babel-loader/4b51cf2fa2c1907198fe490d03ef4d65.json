{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { sections } from '@superset-ui/chart-controls';\nimport { t, validateNonEmpty, legacyValidateInteger } from '@superset-ui/core';\nimport timeGrainSqlaAnimationOverrides, { columnChoices, PRIMARY_COLOR } from '../../utilities/controls';\nimport { formatSelectOptions } from '../../utilities/utils';\nimport { filterNulls, autozoom, dimension, jsColumns, jsDataMutator, jsTooltip, jsOnclickHref, legendFormat, legendPosition, viewport, mapboxStyle } from '../../utilities/Shared_DeckGL';\nconst config = {\n  controlPanelSections: [\n  sections.legacyRegularTime,\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'start_spatial',\n      config: {\n        type: 'SpatialControl',\n        label: t('Start Longitude & Latitude'),\n        validators: [validateNonEmpty],\n        description: t('Point to your spatial columns'),\n        mapStateToProps: (state) => ({\n          choices: columnChoices(state.datasource) }) } },\n\n\n\n    {\n      name: 'end_spatial',\n      config: {\n        type: 'SpatialControl',\n        label: t('End Longitude & Latitude'),\n        validators: [validateNonEmpty],\n        description: t('Point to your spatial columns'),\n        mapStateToProps: (state) => ({\n          choices: columnChoices(state.datasource) }) } }],\n\n\n\n\n    ['row_limit', filterNulls],\n    ['adhoc_filters']] },\n\n\n  {\n    label: t('Map'),\n    controlSetRows: [\n    [mapboxStyle, viewport],\n    [autozoom, null]] },\n\n\n  {\n    label: t('Arc'),\n    controlSetRows: [\n    [\n    'color_picker',\n    {\n      name: 'target_color_picker',\n      config: {\n        label: t('Target Color'),\n        description: t('Color of the target location'),\n        type: 'ColorPickerControl',\n        default: PRIMARY_COLOR,\n        renderTrigger: true } }],\n\n\n\n    [\n    {\n      name: dimension.name,\n      config: {\n        ...dimension.config,\n        label: t('Categorical Color'),\n        description: t('Pick a dimension from which categorical colors are defined') } },\n\n\n    'color_scheme'],\n\n    [\n    {\n      name: 'stroke_width',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Stroke Width'),\n        validators: [legacyValidateInteger],\n        default: null,\n        renderTrigger: true,\n        choices: formatSelectOptions([1, 2, 3, 4, 5]) } },\n\n\n    legendPosition],\n\n    [legendFormat, null]] },\n\n\n  {\n    label: t('Advanced'),\n    controlSetRows: [\n    [jsColumns],\n    [jsDataMutator],\n    [jsTooltip],\n    [jsOnclickHref]] }],\n\n\n\n  controlOverrides: {\n    size: {\n      validators: [] },\n\n    time_grain_sqla: timeGrainSqlaAnimationOverrides } };\n\n\nexport default config;","map":{"version":3,"mappings":"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","names":["sections","t","validateNonEmpty","legacyValidateInteger","timeGrainSqlaAnimationOverrides","columnChoices","PRIMARY_COLOR","formatSelectOptions","filterNulls","autozoom","dimension","jsColumns","jsDataMutator","jsTooltip","jsOnclickHref","legendFormat","legendPosition","viewport","mapboxStyle","config","controlPanelSections","legacyRegularTime","label","expanded","controlSetRows","name","type","validators","description","mapStateToProps","choices","state","datasource","default","renderTrigger","freeForm","controlOverrides","size","time_grain_sqla"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Arc/controlPanel.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ControlPanelConfig, sections } from '@superset-ui/chart-controls';\nimport { t, validateNonEmpty, legacyValidateInteger } from '@superset-ui/core';\nimport timeGrainSqlaAnimationOverrides, {\n  columnChoices,\n  PRIMARY_COLOR,\n} from '../../utilities/controls';\nimport { formatSelectOptions } from '../../utilities/utils';\nimport {\n  filterNulls,\n  autozoom,\n  dimension,\n  jsColumns,\n  jsDataMutator,\n  jsTooltip,\n  jsOnclickHref,\n  legendFormat,\n  legendPosition,\n  viewport,\n  mapboxStyle,\n} from '../../utilities/Shared_DeckGL';\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.legacyRegularTime,\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'start_spatial',\n            config: {\n              type: 'SpatialControl',\n              label: t('Start Longitude & Latitude'),\n              validators: [validateNonEmpty],\n              description: t('Point to your spatial columns'),\n              mapStateToProps: state => ({\n                choices: columnChoices(state.datasource),\n              }),\n            },\n          },\n          {\n            name: 'end_spatial',\n            config: {\n              type: 'SpatialControl',\n              label: t('End Longitude & Latitude'),\n              validators: [validateNonEmpty],\n              description: t('Point to your spatial columns'),\n              mapStateToProps: state => ({\n                choices: columnChoices(state.datasource),\n              }),\n            },\n          },\n        ],\n        ['row_limit', filterNulls],\n        ['adhoc_filters'],\n      ],\n    },\n    {\n      label: t('Map'),\n      controlSetRows: [\n        [mapboxStyle, viewport],\n        [autozoom, null],\n      ],\n    },\n    {\n      label: t('Arc'),\n      controlSetRows: [\n        [\n          'color_picker',\n          {\n            name: 'target_color_picker',\n            config: {\n              label: t('Target Color'),\n              description: t('Color of the target location'),\n              type: 'ColorPickerControl',\n              default: PRIMARY_COLOR,\n              renderTrigger: true,\n            },\n          },\n        ],\n        [\n          {\n            name: dimension.name,\n            config: {\n              ...dimension.config,\n              label: t('Categorical Color'),\n              description: t(\n                'Pick a dimension from which categorical colors are defined',\n              ),\n            },\n          },\n          'color_scheme',\n        ],\n        [\n          {\n            name: 'stroke_width',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Stroke Width'),\n              validators: [legacyValidateInteger],\n              default: null,\n              renderTrigger: true,\n              choices: formatSelectOptions([1, 2, 3, 4, 5]),\n            },\n          },\n          legendPosition,\n        ],\n        [legendFormat, null],\n      ],\n    },\n    {\n      label: t('Advanced'),\n      controlSetRows: [\n        [jsColumns],\n        [jsDataMutator],\n        [jsTooltip],\n        [jsOnclickHref],\n      ],\n    },\n  ],\n  controlOverrides: {\n    size: {\n      validators: [],\n    },\n    time_grain_sqla: timeGrainSqlaAnimationOverrides,\n  },\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}