{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect } from 'react';\nimport { FAST_DEBOUNCE } from 'src/constants';\nexport function useDebounceValue(value, delay) {if (delay === void 0) {delay = FAST_DEBOUNCE;}\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n  return debouncedValue;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,eAA9B;AAEA,OAAM,SAAUC,gBAAV,CAA2BC,KAA3B,EAA0CC,KAA1C,EAA+D,KAArBA,KAAqB,cAArBA,KAAqB,GAAbH,aAAa;EACnE,MAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAACI,KAAD,CAApD;EAEAH,SAAS,CAAC,MAAK;IACb,MAAMO,OAAO,GAAmBC,UAAU,CAAC,MAAK;MAC9CF,iBAAiB,CAACH,KAAD,CAAjB;IACD,CAFyC,EAEvCC,KAFuC,CAA1C;IAIA;IACA,OAAO,MAAK;MACVK,YAAY,CAACF,OAAD,CAAZ;IACD,CAFD;EAGD,CATQ,EASN,CAACJ,KAAD,EAAQC,KAAR,CATM,CAAT;EAWA,OAAOC,cAAP;AACD","names":["useState","useEffect","FAST_DEBOUNCE","useDebounceValue","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/hooks/useDebounceValue.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect } from 'react';\nimport { FAST_DEBOUNCE } from 'src/constants';\n\nexport function useDebounceValue(value: string, delay = FAST_DEBOUNCE) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler: NodeJS.Timeout = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n"]},"metadata":{},"sourceType":"module"}