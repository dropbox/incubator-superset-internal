{"ast":null,"code":"import _isInteger from \"lodash/isInteger\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { t } from '@superset-ui/core';\n\n// @ts-ignore\nimport { locales } from 'antd/dist/antd-with-locales';\nimport { Col, Row } from 'src/components';\nimport { InputNumber } from 'src/components/Input';\nimport { DatePicker } from 'src/components/DatePicker';\nimport { Radio } from 'src/components/Radio';\nimport Select from 'src/components/Select/Select';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { SINCE_GRAIN_OPTIONS, SINCE_MODE_OPTIONS, UNTIL_GRAIN_OPTIONS, UNTIL_MODE_OPTIONS, MOMENT_FORMAT, MIDNIGHT, customTimeRangeDecode, customTimeRangeEncode, dttmToMoment, LOCALE_MAPPING } from 'src/explore/components/controls/DateFilterControl/utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport function CustomFrame(props) {var _locales$LOCALE_MAPPI;\n  const { customRange, matchedFlag } = customTimeRangeDecode(props.value);\n  if (!matchedFlag) {\n    props.onChange(customTimeRangeEncode(customRange));\n  }\n  const { sinceDatetime, sinceMode, sinceGrain, sinceGrainValue, untilDatetime, untilMode, untilGrain, untilGrainValue, anchorValue, anchorMode } = { ...customRange };\n  function onChange(control, value) {\n    props.onChange(customTimeRangeEncode({\n      ...customRange,\n      [control]: value }));\n\n  }\n  function onGrainValue(control, value) {\n    // only positive values in grainValue controls\n    if (_isInteger(value) && value > 0) {\n      props.onChange(customTimeRangeEncode({\n        ...customRange,\n        [control]: value }));\n\n    }\n  }\n  function onAnchorMode(option) {\n    const radioValue = option.target.value;\n    if (radioValue === 'now') {\n      props.onChange(customTimeRangeEncode({\n        ...customRange,\n        anchorValue: 'now',\n        anchorMode: radioValue }));\n\n    } else\n    {\n      props.onChange(customTimeRangeEncode({\n        ...customRange,\n        anchorValue: MIDNIGHT,\n        anchorMode: radioValue }));\n\n    }\n  }\n  // check if there is a locale defined for explore\n  const localFromFlaskBabel = useSelector((state) => {var _state$common;return state == null ? void 0 : (_state$common = state.common) == null ? void 0 : _state$common.locale;});\n  // An undefined datePickerLocale is acceptable if no match is found in the LOCALE_MAPPING[localFromFlaskBabel] lookup\n  // and will fall back to antd's default locale when the antd DataPicker's prop locale === undefined\n  // This also protects us from the case where state is populated with a locale that antd locales does not recognize\n  const datePickerLocale = (_locales$LOCALE_MAPPI = locales[LOCALE_MAPPING[localFromFlaskBabel]]) == null ? void 0 : _locales$LOCALE_MAPPI.DatePicker;\n  return ___EmotionJSX(\"div\", null,\n  ___EmotionJSX(\"div\", { className: \"section-title\" }, t('Configure custom time range')),\n  ___EmotionJSX(Row, { gutter: 24 },\n  ___EmotionJSX(Col, { span: 12 },\n  ___EmotionJSX(\"div\", { className: \"control-label\" },\n  t('START (INCLUSIVE)'), ' ',\n  ___EmotionJSX(InfoTooltipWithTrigger, { tooltip: t('Start date included in time range'), placement: \"right\" })),\n\n  ___EmotionJSX(Select, { ariaLabel: t('START (INCLUSIVE)'), options: SINCE_MODE_OPTIONS, value: sinceMode, onChange: (value) => onChange('sinceMode', value) }),\n  sinceMode === 'specific' && ___EmotionJSX(Row, null,\n  ___EmotionJSX(DatePicker, { showTime: true, defaultValue: dttmToMoment(sinceDatetime), onChange: (datetime) => onChange('sinceDatetime', datetime.format(MOMENT_FORMAT)), allowClear: false, locale: datePickerLocale })),\n\n  sinceMode === 'relative' && ___EmotionJSX(Row, { gutter: 8 },\n  ___EmotionJSX(Col, { span: 11 },\n\n  ___EmotionJSX(InputNumber, { placeholder: t('Relative quantity'), value: Math.abs(sinceGrainValue), min: 1, defaultValue: 1, onChange: (value) => onGrainValue('sinceGrainValue', value || 1), onStep: (value) => onGrainValue('sinceGrainValue', value || 1) })),\n\n  ___EmotionJSX(Col, { span: 13 },\n  ___EmotionJSX(Select, { ariaLabel: t('Relative period'), options: SINCE_GRAIN_OPTIONS, value: sinceGrain, onChange: (value) => onChange('sinceGrain', value) })))),\n\n\n\n  ___EmotionJSX(Col, { span: 12 },\n  ___EmotionJSX(\"div\", { className: \"control-label\" },\n  t('END (EXCLUSIVE)'), ' ',\n  ___EmotionJSX(InfoTooltipWithTrigger, { tooltip: t('End date excluded from time range'), placement: \"right\" })),\n\n  ___EmotionJSX(Select, { ariaLabel: t('END (EXCLUSIVE)'), options: UNTIL_MODE_OPTIONS, value: untilMode, onChange: (value) => onChange('untilMode', value) }),\n  untilMode === 'specific' && ___EmotionJSX(Row, null,\n  ___EmotionJSX(DatePicker, { showTime: true, defaultValue: dttmToMoment(untilDatetime), onChange: (datetime) => onChange('untilDatetime', datetime.format(MOMENT_FORMAT)), allowClear: false, locale: datePickerLocale })),\n\n  untilMode === 'relative' && ___EmotionJSX(Row, { gutter: 8 },\n  ___EmotionJSX(Col, { span: 11 },\n  ___EmotionJSX(InputNumber, { placeholder: t('Relative quantity'), value: untilGrainValue, min: 1, defaultValue: 1, onChange: (value) => onGrainValue('untilGrainValue', value || 1), onStep: (value) => onGrainValue('untilGrainValue', value || 1) })),\n\n  ___EmotionJSX(Col, { span: 13 },\n  ___EmotionJSX(Select, { ariaLabel: t('Relative period'), options: UNTIL_GRAIN_OPTIONS, value: untilGrain, onChange: (value) => onChange('untilGrain', value) }))))),\n\n\n\n\n  sinceMode === 'relative' && untilMode === 'relative' && ___EmotionJSX(\"div\", { className: \"control-anchor-to\" },\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Anchor to')),\n  ___EmotionJSX(Row, { align: \"middle\" },\n  ___EmotionJSX(Col, null,\n  ___EmotionJSX(Radio.Group, { onChange: onAnchorMode, defaultValue: \"now\", value: anchorMode },\n  ___EmotionJSX(Radio, { key: \"now\", value: \"now\" },\n  t('NOW')),\n\n  ___EmotionJSX(Radio, { key: \"specific\", value: \"specific\" },\n  t('Date/Time')))),\n\n\n\n  anchorMode !== 'now' && ___EmotionJSX(Col, null,\n  ___EmotionJSX(DatePicker, { showTime: true, defaultValue: dttmToMoment(anchorValue), onChange: (datetime) => onChange('anchorValue', datetime.format(MOMENT_FORMAT)), allowClear: false, className: \"control-anchor-to-datetime\", locale: datePickerLocale })))));\n\n\n\n\n}","map":{"version":3,"mappings":"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","names":["React","useSelector","t","locales","Col","Row","InputNumber","DatePicker","Radio","Select","InfoTooltipWithTrigger","SINCE_GRAIN_OPTIONS","SINCE_MODE_OPTIONS","UNTIL_GRAIN_OPTIONS","UNTIL_MODE_OPTIONS","MOMENT_FORMAT","MIDNIGHT","customTimeRangeDecode","customTimeRangeEncode","dttmToMoment","LOCALE_MAPPING","CustomFrame","props","customRange","matchedFlag","value","onChange","sinceDatetime","sinceMode","sinceGrain","sinceGrainValue","untilDatetime","untilMode","untilGrain","untilGrainValue","anchorValue","anchorMode","control","onGrainValue","onAnchorMode","option","radioValue","target","localFromFlaskBabel","state","common","locale","datePickerLocale","datetime","format","Math","abs"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/DateFilterControl/components/CustomFrame.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { t } from '@superset-ui/core';\nimport { Moment } from 'moment';\nimport { isInteger } from 'lodash';\n// @ts-ignore\nimport { locales } from 'antd/dist/antd-with-locales';\nimport { Col, Row } from 'src/components';\nimport { InputNumber } from 'src/components/Input';\nimport { DatePicker } from 'src/components/DatePicker';\nimport { Radio } from 'src/components/Radio';\nimport Select from 'src/components/Select/Select';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport {\n  SINCE_GRAIN_OPTIONS,\n  SINCE_MODE_OPTIONS,\n  UNTIL_GRAIN_OPTIONS,\n  UNTIL_MODE_OPTIONS,\n  MOMENT_FORMAT,\n  MIDNIGHT,\n  customTimeRangeDecode,\n  customTimeRangeEncode,\n  dttmToMoment,\n  LOCALE_MAPPING,\n} from 'src/explore/components/controls/DateFilterControl/utils';\nimport {\n  CustomRangeKey,\n  FrameComponentProps,\n} from 'src/explore/components/controls/DateFilterControl/types';\nimport { ExplorePageState } from 'src/explore/types';\n\nexport function CustomFrame(props: FrameComponentProps) {\n  const { customRange, matchedFlag } = customTimeRangeDecode(props.value);\n  if (!matchedFlag) {\n    props.onChange(customTimeRangeEncode(customRange));\n  }\n  const {\n    sinceDatetime,\n    sinceMode,\n    sinceGrain,\n    sinceGrainValue,\n    untilDatetime,\n    untilMode,\n    untilGrain,\n    untilGrainValue,\n    anchorValue,\n    anchorMode,\n  } = { ...customRange };\n\n  function onChange(control: CustomRangeKey, value: string) {\n    props.onChange(\n      customTimeRangeEncode({\n        ...customRange,\n        [control]: value,\n      }),\n    );\n  }\n\n  function onGrainValue(\n    control: 'sinceGrainValue' | 'untilGrainValue',\n    value: string | number,\n  ) {\n    // only positive values in grainValue controls\n    if (isInteger(value) && value > 0) {\n      props.onChange(\n        customTimeRangeEncode({\n          ...customRange,\n          [control]: value,\n        }),\n      );\n    }\n  }\n\n  function onAnchorMode(option: any) {\n    const radioValue = option.target.value;\n    if (radioValue === 'now') {\n      props.onChange(\n        customTimeRangeEncode({\n          ...customRange,\n          anchorValue: 'now',\n          anchorMode: radioValue,\n        }),\n      );\n    } else {\n      props.onChange(\n        customTimeRangeEncode({\n          ...customRange,\n          anchorValue: MIDNIGHT,\n          anchorMode: radioValue,\n        }),\n      );\n    }\n  }\n\n  // check if there is a locale defined for explore\n  const localFromFlaskBabel = useSelector(\n    (state: ExplorePageState) => state?.common?.locale,\n  );\n  // An undefined datePickerLocale is acceptable if no match is found in the LOCALE_MAPPING[localFromFlaskBabel] lookup\n  // and will fall back to antd's default locale when the antd DataPicker's prop locale === undefined\n  // This also protects us from the case where state is populated with a locale that antd locales does not recognize\n  const datePickerLocale =\n    locales[LOCALE_MAPPING[localFromFlaskBabel]]?.DatePicker;\n\n  return (\n    <div data-test=\"custom-frame\">\n      <div className=\"section-title\">{t('Configure custom time range')}</div>\n      <Row gutter={24}>\n        <Col span={12}>\n          <div className=\"control-label\">\n            {t('START (INCLUSIVE)')}{' '}\n            <InfoTooltipWithTrigger\n              tooltip={t('Start date included in time range')}\n              placement=\"right\"\n            />\n          </div>\n          <Select\n            ariaLabel={t('START (INCLUSIVE)')}\n            options={SINCE_MODE_OPTIONS}\n            value={sinceMode}\n            onChange={(value: string) => onChange('sinceMode', value)}\n          />\n          {sinceMode === 'specific' && (\n            <Row>\n              <DatePicker\n                showTime\n                defaultValue={dttmToMoment(sinceDatetime)}\n                onChange={(datetime: Moment) =>\n                  onChange('sinceDatetime', datetime.format(MOMENT_FORMAT))\n                }\n                allowClear={false}\n                locale={datePickerLocale}\n              />\n            </Row>\n          )}\n          {sinceMode === 'relative' && (\n            <Row gutter={8}>\n              <Col span={11}>\n                {/* Make sure sinceGrainValue looks like a positive integer */}\n                <InputNumber\n                  placeholder={t('Relative quantity')}\n                  value={Math.abs(sinceGrainValue)}\n                  min={1}\n                  defaultValue={1}\n                  onChange={value =>\n                    onGrainValue('sinceGrainValue', value || 1)\n                  }\n                  onStep={value => onGrainValue('sinceGrainValue', value || 1)}\n                />\n              </Col>\n              <Col span={13}>\n                <Select\n                  ariaLabel={t('Relative period')}\n                  options={SINCE_GRAIN_OPTIONS}\n                  value={sinceGrain}\n                  onChange={(value: string) => onChange('sinceGrain', value)}\n                />\n              </Col>\n            </Row>\n          )}\n        </Col>\n        <Col span={12}>\n          <div className=\"control-label\">\n            {t('END (EXCLUSIVE)')}{' '}\n            <InfoTooltipWithTrigger\n              tooltip={t('End date excluded from time range')}\n              placement=\"right\"\n            />\n          </div>\n          <Select\n            ariaLabel={t('END (EXCLUSIVE)')}\n            options={UNTIL_MODE_OPTIONS}\n            value={untilMode}\n            onChange={(value: string) => onChange('untilMode', value)}\n          />\n          {untilMode === 'specific' && (\n            <Row>\n              <DatePicker\n                showTime\n                defaultValue={dttmToMoment(untilDatetime)}\n                onChange={(datetime: Moment) =>\n                  onChange('untilDatetime', datetime.format(MOMENT_FORMAT))\n                }\n                allowClear={false}\n                locale={datePickerLocale}\n              />\n            </Row>\n          )}\n          {untilMode === 'relative' && (\n            <Row gutter={8}>\n              <Col span={11}>\n                <InputNumber\n                  placeholder={t('Relative quantity')}\n                  value={untilGrainValue}\n                  min={1}\n                  defaultValue={1}\n                  onChange={value =>\n                    onGrainValue('untilGrainValue', value || 1)\n                  }\n                  onStep={value => onGrainValue('untilGrainValue', value || 1)}\n                />\n              </Col>\n              <Col span={13}>\n                <Select\n                  ariaLabel={t('Relative period')}\n                  options={UNTIL_GRAIN_OPTIONS}\n                  value={untilGrain}\n                  onChange={(value: string) => onChange('untilGrain', value)}\n                />\n              </Col>\n            </Row>\n          )}\n        </Col>\n      </Row>\n      {sinceMode === 'relative' && untilMode === 'relative' && (\n        <div className=\"control-anchor-to\">\n          <div className=\"control-label\">{t('Anchor to')}</div>\n          <Row align=\"middle\">\n            <Col>\n              <Radio.Group\n                onChange={onAnchorMode}\n                defaultValue=\"now\"\n                value={anchorMode}\n              >\n                <Radio key=\"now\" value=\"now\">\n                  {t('NOW')}\n                </Radio>\n                <Radio key=\"specific\" value=\"specific\">\n                  {t('Date/Time')}\n                </Radio>\n              </Radio.Group>\n            </Col>\n            {anchorMode !== 'now' && (\n              <Col>\n                <DatePicker\n                  showTime\n                  defaultValue={dttmToMoment(anchorValue)}\n                  onChange={(datetime: Moment) =>\n                    onChange('anchorValue', datetime.format(MOMENT_FORMAT))\n                  }\n                  allowClear={false}\n                  className=\"control-anchor-to-datetime\"\n                  locale={datePickerLocale}\n                />\n              </Col>\n            )}\n          </Row>\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}