{"ast":null,"code":"/* eslint-disable react/sort-prop-types */\n/* eslint-disable react/require-default-props */\n/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable camelcase */\n/* eslint-disable no-prototype-builtins */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CategoricalColorNamespace } from '@superset-ui/core';\nimport AnimatableDeckGLContainer from './AnimatableDeckGLContainer';\nimport Legend from './components/Legend';\nimport { hexToRGB } from './utils/colors';\nimport { getPlaySliderParams } from './utils/time';\nimport sandboxedEval from './utils/sandbox';\n// eslint-disable-next-line import/extensions\nimport fitViewport from './utils/fitViewport';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst { getScale } = CategoricalColorNamespace;\n\nfunction getCategories(fd, data) {\n  const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n  const fixedColor = [c.r, c.g, c.b, 255 * c.a];\n  const colorFn = getScale(fd.color_scheme);\n  const categories = {};\n  data.forEach((d) => {\n    if (d.cat_color != null && !categories.hasOwnProperty(d.cat_color)) {\n      let color;\n      if (fd.dimension) {\n        color = hexToRGB(colorFn(d.cat_color, fd.sliceId), c.a * 255);\n      } else {\n        color = fixedColor;\n      }\n      categories[d.cat_color] = { color, enabled: true };\n    }\n  });\n\n  return categories;\n}\n\nconst propTypes = {\n  datasource: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  getLayer: PropTypes.func.isRequired,\n  getPoints: PropTypes.func.isRequired,\n  height: PropTypes.number.isRequired,\n  mapboxApiKey: PropTypes.string.isRequired,\n  onAddFilter: PropTypes.func,\n  payload: PropTypes.object.isRequired,\n  setControlValue: PropTypes.func.isRequired,\n  viewport: PropTypes.object.isRequired,\n  width: PropTypes.number.isRequired };\n\n\nexport default class CategoricalDeckGLContainer extends React.PureComponent {\n\n\n  /*\n   * A Deck.gl container that handles categories.\n   *\n   * The container will have an interactive legend, populated from the\n   * categories present in the data.\n   */\n  constructor(props) {\n    super(props);this.containerRef = /*#__PURE__*/React.createRef();this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    setTooltip = (tooltip) => {\n      const { current } = this.containerRef;\n      if (current) {\n        current.setTooltip(tooltip);\n      }\n    };this.state = this.getStateFromProps(props);this.getLayers = this.getLayers.bind(this);this.onValuesChange = this.onValuesChange.bind(this);this.toggleCategory = this.toggleCategory.bind(this);this.showSingleCategory = this.showSingleCategory.bind(this);}UNSAFE_componentWillReceiveProps(nextProps) {if (nextProps.payload.form_data !== this.state.formData) {this.setState({ ...this.getStateFromProps(nextProps) });}}onValuesChange(values) {this.setState({ values: Array.isArray(values) ? values : [values, values + this.state.getStep(values)] });} // eslint-disable-next-line class-methods-use-this\n  getStateFromProps(props, state) {const features = props.payload.data.features || [];const timestamps = features.map((f) => f.__timestamp);const categories = getCategories(props.formData, features); // the state is computed only from the payload; if it hasn't changed, do\n    // not recompute state since this would reset selections and/or the play\n    // slider position due to changes in form controls\n    if (state && props.payload.form_data === state.formData) {return { ...state, categories };} // the granularity has to be read from the payload form_data, not the\n    // props formData which comes from the instantaneous controls state\n    const granularity = props.payload.form_data.time_grain_sqla || props.payload.form_data.granularity || 'P1D';const { start, end, getStep, values, disabled } = getPlaySliderParams(timestamps, granularity);const { width, height, formData } = props;let { viewport } = props;if (formData.autozoom) {viewport = fitViewport(viewport, { width, height, points: props.getPoints(features) });}if (viewport.zoom < 0) {viewport.zoom = 0;}return { start, end, getStep, values, disabled, viewport, selected: [], lastClick: 0, formData: props.payload.form_data, categories };}getLayers(values) {const { getLayer, payload, formData: fd, onAddFilter } = this.props;let features = payload.data.features ? [...payload.data.features] : []; // Add colors from categories or fixed color\n    features = this.addColor(features, fd); // Apply user defined data mutator if defined\n    if (fd.js_data_mutator) {const jsFnMutator = sandboxedEval(fd.js_data_mutator);features = jsFnMutator(features);} // Filter by time\n    if (values[0] === values[1] || values[1] === this.end) {features = features.filter((d) => d.__timestamp >= values[0] && d.__timestamp <= values[1]);} else {features = features.filter((d) => d.__timestamp >= values[0] && d.__timestamp < values[1]);} // Show only categories selected in the legend\n    const cats = this.state.categories;if (fd.dimension) {features = features.filter((d) => cats[d.cat_color] && cats[d.cat_color].enabled);}const filteredPayload = { ...payload, data: { ...payload.data, features } };return [getLayer(fd, filteredPayload, onAddFilter, this.setTooltip, this.props.datasource)];} // eslint-disable-next-line class-methods-use-this\n  addColor(data, fd) {const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };const colorFn = getScale(fd.color_scheme);return data.map((d) => {let color;if (fd.dimension) {color = hexToRGB(colorFn(d.cat_color, fd.sliceId), c.a * 255);return { ...d, color };}return d;});}toggleCategory(category) {const categoryState = this.state.categories[category];const categories = { ...this.state.categories, [category]: { ...categoryState, enabled: !categoryState.enabled } }; // if all categories are disabled, enable all -- similar to nvd3\n    if (Object.values(categories).every((v) => !v.enabled)) {/* eslint-disable no-param-reassign */Object.values(categories).forEach((v) => {v.enabled = true;});}this.setState({ categories });}showSingleCategory(category) {const categories = { ...this.state.categories }; /* eslint-disable no-param-reassign */Object.values(categories).forEach((v) => {v.enabled = false;});categories[category].enabled = true;this.setState({ categories });}render() {return ___EmotionJSX(\"div\", { style: { position: 'relative' } }, ___EmotionJSX(AnimatableDeckGLContainer, { ref: this.containerRef, getLayers: this.getLayers, start: this.state.start, end: this.state.end, getStep: this.state.getStep, values: this.state.values, disabled: this.state.disabled,\n      viewport: this.state.viewport,\n      mapboxApiAccessToken: this.props.mapboxApiKey,\n      mapStyle: this.props.formData.mapbox_style,\n      setControlValue: this.props.setControlValue,\n      width: this.props.width,\n      height: this.props.height },\n\n    ___EmotionJSX(Legend, {\n      forceCategorical: true,\n      categories: this.state.categories,\n      format: this.props.formData.legend_format,\n      position: this.props.formData.legend_position,\n      showSingleCategory: this.showSingleCategory,\n      toggleCategory: this.toggleCategory })));\n\n\n\n\n  }}\n\n\nCategoricalDeckGLContainer.propTypes = propTypes;","map":{"version":3,"names":["React","PropTypes","CategoricalColorNamespace","AnimatableDeckGLContainer","Legend","hexToRGB","getPlaySliderParams","sandboxedEval","fitViewport","getScale","getCategories","fd","data","c","color_picker","r","g","b","a","fixedColor","colorFn","color_scheme","categories","forEach","d","cat_color","hasOwnProperty","color","dimension","sliceId","enabled","propTypes","datasource","object","isRequired","formData","getLayer","func","getPoints","height","number","mapboxApiKey","string","onAddFilter","payload","setControlValue","viewport","width","CategoricalDeckGLContainer","PureComponent","constructor","props","containerRef","createRef","setTooltip","tooltip","current","state","getStateFromProps","getLayers","bind","onValuesChange","toggleCategory","showSingleCategory","UNSAFE_componentWillReceiveProps","nextProps","form_data","setState","values","Array","isArray","getStep","features","timestamps","map","f","__timestamp","granularity","time_grain_sqla","start","end","disabled","autozoom","points","zoom","selected","lastClick","addColor","js_data_mutator","jsFnMutator","filter","cats","filteredPayload","category","categoryState","Object","every","v","render","position","mapbox_style","legend_format","legend_position"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/legacy-preset-chart-deckgl/src/CategoricalDeckGLContainer.jsx"],"sourcesContent":["/* eslint-disable react/sort-prop-types */\n/* eslint-disable react/require-default-props */\n/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable camelcase */\n/* eslint-disable no-prototype-builtins */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CategoricalColorNamespace } from '@superset-ui/core';\nimport AnimatableDeckGLContainer from './AnimatableDeckGLContainer';\nimport Legend from './components/Legend';\nimport { hexToRGB } from './utils/colors';\nimport { getPlaySliderParams } from './utils/time';\nimport sandboxedEval from './utils/sandbox';\n// eslint-disable-next-line import/extensions\nimport fitViewport from './utils/fitViewport';\n\nconst { getScale } = CategoricalColorNamespace;\n\nfunction getCategories(fd, data) {\n  const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n  const fixedColor = [c.r, c.g, c.b, 255 * c.a];\n  const colorFn = getScale(fd.color_scheme);\n  const categories = {};\n  data.forEach(d => {\n    if (d.cat_color != null && !categories.hasOwnProperty(d.cat_color)) {\n      let color;\n      if (fd.dimension) {\n        color = hexToRGB(colorFn(d.cat_color, fd.sliceId), c.a * 255);\n      } else {\n        color = fixedColor;\n      }\n      categories[d.cat_color] = { color, enabled: true };\n    }\n  });\n\n  return categories;\n}\n\nconst propTypes = {\n  datasource: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  getLayer: PropTypes.func.isRequired,\n  getPoints: PropTypes.func.isRequired,\n  height: PropTypes.number.isRequired,\n  mapboxApiKey: PropTypes.string.isRequired,\n  onAddFilter: PropTypes.func,\n  payload: PropTypes.object.isRequired,\n  setControlValue: PropTypes.func.isRequired,\n  viewport: PropTypes.object.isRequired,\n  width: PropTypes.number.isRequired,\n};\n\nexport default class CategoricalDeckGLContainer extends React.PureComponent {\n  containerRef = React.createRef();\n\n  /*\n   * A Deck.gl container that handles categories.\n   *\n   * The container will have an interactive legend, populated from the\n   * categories present in the data.\n   */\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps(props);\n\n    this.getLayers = this.getLayers.bind(this);\n    this.onValuesChange = this.onValuesChange.bind(this);\n    this.toggleCategory = this.toggleCategory.bind(this);\n    this.showSingleCategory = this.showSingleCategory.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.payload.form_data !== this.state.formData) {\n      this.setState({ ...this.getStateFromProps(nextProps) });\n    }\n  }\n\n  onValuesChange(values) {\n    this.setState({\n      values: Array.isArray(values)\n        ? values\n        : [values, values + this.state.getStep(values)],\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getStateFromProps(props, state) {\n    const features = props.payload.data.features || [];\n    const timestamps = features.map(f => f.__timestamp);\n    const categories = getCategories(props.formData, features);\n\n    // the state is computed only from the payload; if it hasn't changed, do\n    // not recompute state since this would reset selections and/or the play\n    // slider position due to changes in form controls\n    if (state && props.payload.form_data === state.formData) {\n      return { ...state, categories };\n    }\n\n    // the granularity has to be read from the payload form_data, not the\n    // props formData which comes from the instantaneous controls state\n    const granularity =\n      props.payload.form_data.time_grain_sqla ||\n      props.payload.form_data.granularity ||\n      'P1D';\n\n    const { start, end, getStep, values, disabled } = getPlaySliderParams(\n      timestamps,\n      granularity,\n    );\n\n    const { width, height, formData } = props;\n    let { viewport } = props;\n    if (formData.autozoom) {\n      viewport = fitViewport(viewport, {\n        width,\n        height,\n        points: props.getPoints(features),\n      });\n    }\n    if (viewport.zoom < 0) {\n      viewport.zoom = 0;\n    }\n\n    return {\n      start,\n      end,\n      getStep,\n      values,\n      disabled,\n      viewport,\n      selected: [],\n      lastClick: 0,\n      formData: props.payload.form_data,\n      categories,\n    };\n  }\n\n  getLayers(values) {\n    const { getLayer, payload, formData: fd, onAddFilter } = this.props;\n    let features = payload.data.features ? [...payload.data.features] : [];\n\n    // Add colors from categories or fixed color\n    features = this.addColor(features, fd);\n\n    // Apply user defined data mutator if defined\n    if (fd.js_data_mutator) {\n      const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n      features = jsFnMutator(features);\n    }\n\n    // Filter by time\n    if (values[0] === values[1] || values[1] === this.end) {\n      features = features.filter(\n        d => d.__timestamp >= values[0] && d.__timestamp <= values[1],\n      );\n    } else {\n      features = features.filter(\n        d => d.__timestamp >= values[0] && d.__timestamp < values[1],\n      );\n    }\n\n    // Show only categories selected in the legend\n    const cats = this.state.categories;\n    if (fd.dimension) {\n      features = features.filter(\n        d => cats[d.cat_color] && cats[d.cat_color].enabled,\n      );\n    }\n\n    const filteredPayload = {\n      ...payload,\n      data: { ...payload.data, features },\n    };\n\n    return [\n      getLayer(\n        fd,\n        filteredPayload,\n        onAddFilter,\n        this.setTooltip,\n        this.props.datasource,\n      ),\n    ];\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  addColor(data, fd) {\n    const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n    const colorFn = getScale(fd.color_scheme);\n\n    return data.map(d => {\n      let color;\n      if (fd.dimension) {\n        color = hexToRGB(colorFn(d.cat_color, fd.sliceId), c.a * 255);\n\n        return { ...d, color };\n      }\n\n      return d;\n    });\n  }\n\n  toggleCategory(category) {\n    const categoryState = this.state.categories[category];\n    const categories = {\n      ...this.state.categories,\n      [category]: {\n        ...categoryState,\n        enabled: !categoryState.enabled,\n      },\n    };\n\n    // if all categories are disabled, enable all -- similar to nvd3\n    if (Object.values(categories).every(v => !v.enabled)) {\n      /* eslint-disable no-param-reassign */\n      Object.values(categories).forEach(v => {\n        v.enabled = true;\n      });\n    }\n    this.setState({ categories });\n  }\n\n  showSingleCategory(category) {\n    const categories = { ...this.state.categories };\n    /* eslint-disable no-param-reassign */\n    Object.values(categories).forEach(v => {\n      v.enabled = false;\n    });\n    categories[category].enabled = true;\n    this.setState({ categories });\n  }\n\n  setTooltip = tooltip => {\n    const { current } = this.containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  };\n\n  render() {\n    return (\n      <div style={{ position: 'relative' }}>\n        <AnimatableDeckGLContainer\n          ref={this.containerRef}\n          getLayers={this.getLayers}\n          start={this.state.start}\n          end={this.state.end}\n          getStep={this.state.getStep}\n          values={this.state.values}\n          disabled={this.state.disabled}\n          viewport={this.state.viewport}\n          mapboxApiAccessToken={this.props.mapboxApiKey}\n          mapStyle={this.props.formData.mapbox_style}\n          setControlValue={this.props.setControlValue}\n          width={this.props.width}\n          height={this.props.height}\n        >\n          <Legend\n            forceCategorical\n            categories={this.state.categories}\n            format={this.props.formData.legend_format}\n            position={this.props.formData.legend_position}\n            showSingleCategory={this.showSingleCategory}\n            toggleCategory={this.toggleCategory}\n          />\n        </AnimatableDeckGLContainer>\n      </div>\n    );\n  }\n}\n\nCategoricalDeckGLContainer.propTypes = propTypes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}