{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { css, styled, t } from '@superset-ui/core';\nimport throttle from 'lodash/throttle';\nimport ToastContainer from 'src/components/MessageToasts/ToastContainer';\nimport {\nLOCALSTORAGE_MAX_USAGE_KB,\nLOCALSTORAGE_WARNING_THRESHOLD,\nLOCALSTORAGE_WARNING_MESSAGE_THROTTLE_MS } from\n'src/SqlLab/constants';\nimport * as Actions from 'src/SqlLab/actions/sqlLab';\nimport { logEvent } from 'src/logger/actions';\nimport {\nLOG_ACTIONS_SQLLAB_WARN_LOCAL_STORAGE_USAGE,\nLOG_ACTIONS_SQLLAB_MONITOR_LOCAL_STORAGE_USAGE } from\n'src/logger/LogUtils';\nimport TabbedSqlEditors from '../TabbedSqlEditors';\nimport QueryAutoRefresh from '../QueryAutoRefresh';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst SqlLabStyles = styled.div`\n  ${(_ref) => {let { theme } = _ref;return css`\n    &.SqlLab {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      padding: 0 ${theme.gridUnit * 2}px;\n\n      pre {\n        padding: 0 !important;\n        margin: 0;\n        border: none;\n        font-size: ${theme.typography.sizes.s}px;\n        background: transparent !important;\n      }\n\n      .north-pane {\n        display: flex;\n        flex-direction: column;\n      }\n\n      .ace_editor {\n        flex-grow: 1;\n      }\n\n      .ace_content {\n        height: 100%;\n      }\n\n      .ant-tabs-content-holder {\n        /* This is needed for Safari */\n        height: 100%;\n      }\n\n      .ant-tabs-content {\n        height: 100%;\n        position: relative;\n        background-color: ${theme.colors.grayscale.light5};\n        overflow-x: auto;\n        overflow-y: auto;\n\n        > .ant-tabs-tabpane {\n          position: absolute;\n          top: 0;\n          right: 0;\n          bottom: 0;\n          left: 0;\n        }\n      }\n\n      .ResultsModal .ant-modal-body {\n        min-height: ${theme.gridUnit * 140}px;\n      }\n\n      .ant-modal-body {\n        overflow: auto;\n      }\n    }\n  `;}};\n`;\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hash: window.location.hash };\n\n\n    this.showLocalStorageUsageWarning = throttle(\n    this.showLocalStorageUsageWarning,\n    LOCALSTORAGE_WARNING_MESSAGE_THROTTLE_MS,\n    { trailing: false });\n\n  }\n\n  componentDidMount() {\n    window.addEventListener('hashchange', this.onHashChanged.bind(this));\n\n    // Horrible hack to disable side swipe navigation when in SQL Lab. Even though the\n    // docs say setting this style on any div will prevent it, turns out it only works\n    // when set on the body element.\n    document.body.style.overscrollBehaviorX = 'none';\n  }\n\n  componentDidUpdate() {\n    const { localStorageUsageInKilobytes, actions, queries } = this.props;\n    const queryCount = (queries == null ? void 0 : queries.lenghth) || 0;\n    if (\n    localStorageUsageInKilobytes >=\n    LOCALSTORAGE_WARNING_THRESHOLD * LOCALSTORAGE_MAX_USAGE_KB)\n    {\n      this.showLocalStorageUsageWarning(\n      localStorageUsageInKilobytes,\n      queryCount);\n\n    }\n    if (localStorageUsageInKilobytes > 0 && !this.hasLoggedLocalStorageUsage) {\n      const eventData = {\n        current_usage: localStorageUsageInKilobytes,\n        query_count: queryCount };\n\n      actions.logEvent(\n      LOG_ACTIONS_SQLLAB_MONITOR_LOCAL_STORAGE_USAGE,\n      eventData);\n\n      this.hasLoggedLocalStorageUsage = true;\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('hashchange', this.onHashChanged.bind(this));\n\n    // And now we need to reset the overscroll behavior back to the default.\n    document.body.style.overscrollBehaviorX = 'auto';\n  }\n\n  onHashChanged() {\n    this.setState({ hash: window.location.hash });\n  }\n\n  showLocalStorageUsageWarning(currentUsage, queryCount) {\n    this.props.actions.addDangerToast(\n    t(\n    \"SQL Lab uses your browser's local storage to store queries and results.\" +\n    '\\nCurrently, you are using %(currentUsage)s KB out of %(maxStorage)d KB storage space.' +\n    '\\nTo keep SQL Lab from crashing, please delete some query tabs.' +\n    '\\nYou can re-access these queries by using the Save feature before you delete the tab.' +\n    '\\nNote that you will need to close other SQL Lab windows before you do this.',\n    {\n      currentUsage: currentUsage.toFixed(2),\n      maxStorage: LOCALSTORAGE_MAX_USAGE_KB }));\n\n\n\n    const eventData = {\n      current_usage: currentUsage,\n      query_count: queryCount };\n\n    this.props.actions.logEvent(\n    LOG_ACTIONS_SQLLAB_WARN_LOCAL_STORAGE_USAGE,\n    eventData);\n\n  }\n\n  render() {\n    const { queries, queriesLastUpdate } = this.props;\n    if (this.state.hash && this.state.hash === '#search') {\n      return window.location.replace('/superset/sqllab/history/');\n    }\n    return (\n      ___EmotionJSX(SqlLabStyles, { className: \"App SqlLab\" },\n      ___EmotionJSX(QueryAutoRefresh, {\n        queries: queries,\n        queriesLastUpdate: queriesLastUpdate }),\n\n      ___EmotionJSX(TabbedSqlEditors, null),\n      ___EmotionJSX(ToastContainer, null)));\n\n\n  }}\n\n\nApp.propTypes = {\n  actions: PropTypes.object,\n  common: PropTypes.object,\n  localStorageUsageInKilobytes: PropTypes.number.isRequired };\n\n\nfunction mapStateToProps(state) {\n  const { common, localStorageUsageInKilobytes, sqlLab } = state;\n  return {\n    common,\n    localStorageUsageInKilobytes,\n    queries: sqlLab == null ? void 0 : sqlLab.queries,\n    queriesLastUpdate: sqlLab == null ? void 0 : sqlLab.queriesLastUpdate };\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({ ...Actions, logEvent }, dispatch) };\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"names":["React","PropTypes","bindActionCreators","connect","css","styled","t","throttle","ToastContainer","LOCALSTORAGE_MAX_USAGE_KB","LOCALSTORAGE_WARNING_THRESHOLD","LOCALSTORAGE_WARNING_MESSAGE_THROTTLE_MS","Actions","logEvent","LOG_ACTIONS_SQLLAB_WARN_LOCAL_STORAGE_USAGE","LOG_ACTIONS_SQLLAB_MONITOR_LOCAL_STORAGE_USAGE","TabbedSqlEditors","QueryAutoRefresh","SqlLabStyles","div","theme","gridUnit","typography","sizes","s","colors","grayscale","light5","App","PureComponent","constructor","props","state","hash","window","location","showLocalStorageUsageWarning","trailing","componentDidMount","addEventListener","onHashChanged","bind","document","body","style","overscrollBehaviorX","componentDidUpdate","localStorageUsageInKilobytes","actions","queries","queryCount","lenghth","hasLoggedLocalStorageUsage","eventData","current_usage","query_count","componentWillUnmount","removeEventListener","setState","currentUsage","addDangerToast","toFixed","maxStorage","render","queriesLastUpdate","replace","propTypes","object","common","number","isRequired","mapStateToProps","sqlLab","mapDispatchToProps","dispatch"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/SqlLab/components/App/index.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { css, styled, t } from '@superset-ui/core';\nimport throttle from 'lodash/throttle';\nimport ToastContainer from 'src/components/MessageToasts/ToastContainer';\nimport {\n  LOCALSTORAGE_MAX_USAGE_KB,\n  LOCALSTORAGE_WARNING_THRESHOLD,\n  LOCALSTORAGE_WARNING_MESSAGE_THROTTLE_MS,\n} from 'src/SqlLab/constants';\nimport * as Actions from 'src/SqlLab/actions/sqlLab';\nimport { logEvent } from 'src/logger/actions';\nimport {\n  LOG_ACTIONS_SQLLAB_WARN_LOCAL_STORAGE_USAGE,\n  LOG_ACTIONS_SQLLAB_MONITOR_LOCAL_STORAGE_USAGE,\n} from 'src/logger/LogUtils';\nimport TabbedSqlEditors from '../TabbedSqlEditors';\nimport QueryAutoRefresh from '../QueryAutoRefresh';\n\nconst SqlLabStyles = styled.div`\n  ${({ theme }) => css`\n    &.SqlLab {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      padding: 0 ${theme.gridUnit * 2}px;\n\n      pre {\n        padding: 0 !important;\n        margin: 0;\n        border: none;\n        font-size: ${theme.typography.sizes.s}px;\n        background: transparent !important;\n      }\n\n      .north-pane {\n        display: flex;\n        flex-direction: column;\n      }\n\n      .ace_editor {\n        flex-grow: 1;\n      }\n\n      .ace_content {\n        height: 100%;\n      }\n\n      .ant-tabs-content-holder {\n        /* This is needed for Safari */\n        height: 100%;\n      }\n\n      .ant-tabs-content {\n        height: 100%;\n        position: relative;\n        background-color: ${theme.colors.grayscale.light5};\n        overflow-x: auto;\n        overflow-y: auto;\n\n        > .ant-tabs-tabpane {\n          position: absolute;\n          top: 0;\n          right: 0;\n          bottom: 0;\n          left: 0;\n        }\n      }\n\n      .ResultsModal .ant-modal-body {\n        min-height: ${theme.gridUnit * 140}px;\n      }\n\n      .ant-modal-body {\n        overflow: auto;\n      }\n    }\n  `};\n`;\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hash: window.location.hash,\n    };\n\n    this.showLocalStorageUsageWarning = throttle(\n      this.showLocalStorageUsageWarning,\n      LOCALSTORAGE_WARNING_MESSAGE_THROTTLE_MS,\n      { trailing: false },\n    );\n  }\n\n  componentDidMount() {\n    window.addEventListener('hashchange', this.onHashChanged.bind(this));\n\n    // Horrible hack to disable side swipe navigation when in SQL Lab. Even though the\n    // docs say setting this style on any div will prevent it, turns out it only works\n    // when set on the body element.\n    document.body.style.overscrollBehaviorX = 'none';\n  }\n\n  componentDidUpdate() {\n    const { localStorageUsageInKilobytes, actions, queries } = this.props;\n    const queryCount = queries?.lenghth || 0;\n    if (\n      localStorageUsageInKilobytes >=\n      LOCALSTORAGE_WARNING_THRESHOLD * LOCALSTORAGE_MAX_USAGE_KB\n    ) {\n      this.showLocalStorageUsageWarning(\n        localStorageUsageInKilobytes,\n        queryCount,\n      );\n    }\n    if (localStorageUsageInKilobytes > 0 && !this.hasLoggedLocalStorageUsage) {\n      const eventData = {\n        current_usage: localStorageUsageInKilobytes,\n        query_count: queryCount,\n      };\n      actions.logEvent(\n        LOG_ACTIONS_SQLLAB_MONITOR_LOCAL_STORAGE_USAGE,\n        eventData,\n      );\n      this.hasLoggedLocalStorageUsage = true;\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('hashchange', this.onHashChanged.bind(this));\n\n    // And now we need to reset the overscroll behavior back to the default.\n    document.body.style.overscrollBehaviorX = 'auto';\n  }\n\n  onHashChanged() {\n    this.setState({ hash: window.location.hash });\n  }\n\n  showLocalStorageUsageWarning(currentUsage, queryCount) {\n    this.props.actions.addDangerToast(\n      t(\n        \"SQL Lab uses your browser's local storage to store queries and results.\" +\n          '\\nCurrently, you are using %(currentUsage)s KB out of %(maxStorage)d KB storage space.' +\n          '\\nTo keep SQL Lab from crashing, please delete some query tabs.' +\n          '\\nYou can re-access these queries by using the Save feature before you delete the tab.' +\n          '\\nNote that you will need to close other SQL Lab windows before you do this.',\n        {\n          currentUsage: currentUsage.toFixed(2),\n          maxStorage: LOCALSTORAGE_MAX_USAGE_KB,\n        },\n      ),\n    );\n    const eventData = {\n      current_usage: currentUsage,\n      query_count: queryCount,\n    };\n    this.props.actions.logEvent(\n      LOG_ACTIONS_SQLLAB_WARN_LOCAL_STORAGE_USAGE,\n      eventData,\n    );\n  }\n\n  render() {\n    const { queries, queriesLastUpdate } = this.props;\n    if (this.state.hash && this.state.hash === '#search') {\n      return window.location.replace('/superset/sqllab/history/');\n    }\n    return (\n      <SqlLabStyles data-test=\"SqlLabApp\" className=\"App SqlLab\">\n        <QueryAutoRefresh\n          queries={queries}\n          queriesLastUpdate={queriesLastUpdate}\n        />\n        <TabbedSqlEditors />\n        <ToastContainer />\n      </SqlLabStyles>\n    );\n  }\n}\n\nApp.propTypes = {\n  actions: PropTypes.object,\n  common: PropTypes.object,\n  localStorageUsageInKilobytes: PropTypes.number.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  const { common, localStorageUsageInKilobytes, sqlLab } = state;\n  return {\n    common,\n    localStorageUsageInKilobytes,\n    queries: sqlLab?.queries,\n    queriesLastUpdate: sqlLab?.queriesLastUpdate,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({ ...Actions, logEvent }, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}