{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled } from '@superset-ui/core';\nimport AntdTag from 'antd/lib/tag';\nimport React, { useMemo } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledTag = styled(AntdTag)`\n  ${(_ref) => {let { theme } = _ref;return `\n  margin-top: ${theme.gridUnit}px;\n  margin-bottom: ${theme.gridUnit}px;\n  font-size: ${theme.typography.sizes.s}px;\n  `;}};\n`;\nconst Tag = (_ref2) => {let { name, id, index = undefined, onDelete = undefined, editable = false, onClick = undefined } = _ref2;\n  const isLongTag = useMemo(() => name.length > 20, [name]);\n  const handleClose = () => index ? onDelete == null ? void 0 : onDelete(index) : null;\n  const tagElem = ___EmotionJSX(React.Fragment, null,\n  editable ? ___EmotionJSX(StyledTag, { key: id, closable: editable, onClose: handleClose, color: \"blue\" },\n  isLongTag ? `${name.slice(0, 20)}...` : name) :\n  ___EmotionJSX(StyledTag, { role: \"link\", key: id, onClick: onClick },\n  id ? ___EmotionJSX(\"a\", { href: `/superset/tags/?tags=${name}`, target: \"_blank\", rel: \"noreferrer\" },\n  isLongTag ? `${name.slice(0, 20)}...` : name) :\n  isLongTag ? `${name.slice(0, 20)}...` : name));\n\n\n  return isLongTag ? ___EmotionJSX(Tooltip, { title: name, key: name },\n  tagElem) :\n  tagElem;\n};\nexport default Tag;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,MAAT,QAAuB,mBAAvB;AAEA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,wBAAxB,C;AAEA,MAAMC,SAAS,GAAGL,MAAM,CAACC,OAAD,CAAS;IAC7B,eAAC,EAAEK,KAAF,EAAD,eAAe;gBACHA,KAAK,CAACC,QAAQ;mBACXD,KAAK,CAACC,QAAQ;eAClBD,KAAK,CAACE,UAAN,CAAiBC,KAAjB,CAAuBC,CAAC;GAHnC,EAID;CALH;AAQA,MAAMC,GAAG,GAAG,WAOE,KAPD,EACXC,IADW,EAEXC,EAFW,EAGXC,KAAK,GAAGC,SAHG,EAIXC,QAAQ,GAAGD,SAJA,EAKXE,QAAQ,GAAG,KALA,EAMXC,OAAO,GAAGH,SANC,EAOC;EACZ,MAAMI,SAAS,GAAGhB,OAAO,CAAC,MAAMS,IAAI,CAACQ,MAAL,GAAc,EAArB,EAAyB,CAACR,IAAD,CAAzB,CAAzB;EAEA,MAAMS,WAAW,GAAG,MAAOP,KAAK,GAAGE,QAAH,oBAAGA,QAAQ,CAAGF,KAAH,CAAX,GAAuB,IAAvD;EAEA,MAAMQ,OAAO,GACX;EACGL,QAAQ,GACP,cAAC,SAAD,IACE,GAAG,EAAEJ,EADP,EAEE,QAAQ,EAAEI,QAFZ,EAGE,OAAO,EAAEI,WAHX,EAIE,KAAK,EAAC,MAJR;EAMGF,SAAS,GAAG,GAAGP,IAAI,CAACW,KAAL,CAAW,CAAX,EAAc,EAAd,CAAiB,KAAvB,GAA+BX,IAN3C,CADO;EAUP,cAAC,SAAD,IAAW,IAAI,EAAC,MAAhB,EAAuB,GAAG,EAAEC,EAA5B,EAAgC,OAAO,EAAEK,OAAzC;EACGL,EAAE,GACD,qBACE,IAAI,EAAE,wBAAwBD,IAAI,EADpC,EAEE,MAAM,EAAC,QAFT,EAGE,GAAG,EAAC,YAHN;EAKGO,SAAS,GAAG,GAAGP,IAAI,CAACW,KAAL,CAAW,CAAX,EAAc,EAAd,CAAiB,KAAvB,GAA+BX,IAL3C,CADC;EAQCO,SAAS,GACX,GAAGP,IAAI,CAACW,KAAL,CAAW,CAAX,EAAc,EAAd,CAAiB,KADT,GAGXX,IAZJ,CAXJ,CADF;;;EA+BA,OAAOO,SAAS,GACd,cAAC,OAAD,IAAS,KAAK,EAAEP,IAAhB,EAAsB,GAAG,EAAEA,IAA3B;EACGU,OADH,CADc;EAKdA,OALF;AAOD,CAlDD;AAoDA,eAAeX,GAAf","names":["styled","AntdTag","React","useMemo","Tooltip","StyledTag","theme","gridUnit","typography","sizes","s","Tag","name","id","index","undefined","onDelete","editable","onClick","isLongTag","length","handleClose","tagElem","slice"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Tags/Tag.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport AntdTag from 'antd/lib/tag';\nimport React, { useMemo } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\n\nconst StyledTag = styled(AntdTag)`\n  ${({ theme }) => `\n  margin-top: ${theme.gridUnit}px;\n  margin-bottom: ${theme.gridUnit}px;\n  font-size: ${theme.typography.sizes.s}px;\n  `};\n`;\n\nconst Tag = ({\n  name,\n  id,\n  index = undefined,\n  onDelete = undefined,\n  editable = false,\n  onClick = undefined,\n}: TagType) => {\n  const isLongTag = useMemo(() => name.length > 20, [name]);\n\n  const handleClose = () => (index ? onDelete?.(index) : null);\n\n  const tagElem = (\n    <>\n      {editable ? (\n        <StyledTag\n          key={id}\n          closable={editable}\n          onClose={handleClose}\n          color=\"blue\"\n        >\n          {isLongTag ? `${name.slice(0, 20)}...` : name}\n        </StyledTag>\n      ) : (\n        <StyledTag role=\"link\" key={id} onClick={onClick}>\n          {id ? (\n            <a\n              href={`/superset/tags/?tags=${name}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {isLongTag ? `${name.slice(0, 20)}...` : name}\n            </a>\n          ) : isLongTag ? (\n            `${name.slice(0, 20)}...`\n          ) : (\n            name\n          )}\n        </StyledTag>\n      )}\n    </>\n  );\n\n  return isLongTag ? (\n    <Tooltip title={name} key={name}>\n      {tagElem}\n    </Tooltip>\n  ) : (\n    tagElem\n  );\n};\n\nexport default Tag;\n"]},"metadata":{},"sourceType":"module"}