{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetClient, logging } from '@superset-ui/core';\nconst assembleEndpoint = (dashId, key, tabId) => {\n  let endpoint = `api/v1/dashboard/${dashId}/filter_state`;\n  if (key) {\n    endpoint = endpoint.concat(`/${key}`);\n  }\n  if (tabId) {\n    endpoint = endpoint.concat(`?tab_id=${tabId}`);\n  }\n  return endpoint;\n};\nexport const updateFilterKey = (dashId, value, key, tabId) => SupersetClient.put({\n  endpoint: assembleEndpoint(dashId, key, tabId),\n  jsonPayload: { value } }).\n\nthen((r) => r.json.message).\ncatch((err) => {\n  logging.error(err);\n  return null;\n});\nexport const createFilterKey = (dashId, value, tabId) => SupersetClient.post({\n  endpoint: assembleEndpoint(dashId, undefined, tabId),\n  jsonPayload: { value } }).\n\nthen((r) => r.json.key).\ncatch((err) => {\n  logging.error(err);\n  return null;\n});\nexport const getFilterValue = (dashId, key) => SupersetClient.get({\n  endpoint: assembleEndpoint(dashId, key) }).\n\nthen((_ref) => {let { json } = _ref;return JSON.parse(json.value);}).\ncatch((err) => {\n  logging.error(err);\n  return null;\n});\nexport const getPermalinkValue = (key) => SupersetClient.get({\n  endpoint: `/api/v1/dashboard/permalink/${key}` }).\n\nthen((_ref2) => {let { json } = _ref2;return json;}).\ncatch((err) => {\n  logging.error(err);\n  return null;\n});;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(assembleEndpoint, \"assembleEndpoint\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/keyValue.tsx\");reactHotLoader.register(updateFilterKey, \"updateFilterKey\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/keyValue.tsx\");reactHotLoader.register(createFilterKey, \"createFilterKey\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/keyValue.tsx\");reactHotLoader.register(getFilterValue, \"getFilterValue\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/keyValue.tsx\");reactHotLoader.register(getPermalinkValue, \"getPermalinkValue\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/keyValue.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,cAAT,EAAyBC,OAAzB,QAAwC,mBAAxC;AAGA,MAAMC,gBAAgB,GAAG,CACvBC,MADuB,EAEvBC,GAFuB,EAGvBC,KAHuB,KAIrB;EACF,IAAIC,QAAQ,GAAG,oBAAoBH,MAAM,eAAzC;EACA,IAAIC,GAAJ,EAAS;IACPE,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAgB,IAAIH,GAAG,EAAvB,CAAX;EACD;EACD,IAAIC,KAAJ,EAAW;IACTC,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAgB,WAAWF,KAAK,EAAhC,CAAX;EACD;EACD,OAAOC,QAAP;AACD,CAbD;AAeA,OAAO,MAAME,eAAe,GAAG,CAC7BL,MAD6B,EAE7BM,KAF6B,EAG7BL,GAH6B,EAI7BC,KAJ6B,KAM7BL,cAAc,CAACU,GAAf,CAAmB;EACjBJ,QAAQ,EAAEJ,gBAAgB,CAACC,MAAD,EAASC,GAAT,EAAcC,KAAd,CADT;EAEjBM,WAAW,EAAE,EAAEF,KAAF,EAFI,EAAnB;;AAIGG,IAJH,CAIQ,EAAC,KAAIC,CAAC,CAACC,IAAF,CAAOC,OAJpB;AAKGC,KALH,CAKS,IAAG,KAAG;EACXf,OAAO,CAACgB,KAAR,CAAcC,GAAd;EACA,OAAO,IAAP;AACD,CARH,CANK;AAgBP,OAAO,MAAMC,eAAe,GAAG,CAC7BhB,MAD6B,EAE7BM,KAF6B,EAG7BJ,KAH6B,KAK7BL,cAAc,CAACoB,IAAf,CAAoB;EAClBd,QAAQ,EAAEJ,gBAAgB,CAACC,MAAD,EAASkB,SAAT,EAAoBhB,KAApB,CADR;EAElBM,WAAW,EAAE,EAAEF,KAAF,EAFK,EAApB;;AAIGG,IAJH,CAIQ,EAAC,KAAIC,CAAC,CAACC,IAAF,CAAOV,GAJpB;AAKGY,KALH,CAKS,IAAG,KAAG;EACXf,OAAO,CAACgB,KAAR,CAAcC,GAAd;EACA,OAAO,IAAP;AACD,CARH,CALK;AAeP,OAAO,MAAMI,cAAc,GAAG,CAACnB,MAAD,EAA0BC,GAA1B,KAC5BJ,cAAc,CAACuB,GAAf,CAAmB;EACjBjB,QAAQ,EAAEJ,gBAAgB,CAACC,MAAD,EAASC,GAAT,CADT,EAAnB;;AAGGQ,IAHH,CAGQ,eAAC,EAAEE,IAAF,EAAD,eAAcU,IAAI,CAACC,KAAL,CAAWX,IAAI,CAACL,KAAhB,CAAd,EAHR;AAIGO,KAJH,CAIS,IAAG,KAAG;EACXf,OAAO,CAACgB,KAAR,CAAcC,GAAd;EACA,OAAO,IAAP;AACD,CAPH,CADK;AAUP,OAAO,MAAMQ,iBAAiB,GAAG,CAACtB,GAAD,KAC/BJ,cAAc,CAACuB,GAAf,CAAmB;EACjBjB,QAAQ,EAAE,+BAA+BF,GAAG,EAD3B,EAAnB;;AAGGQ,IAHH,CAGQ,gBAAC,EAAEE,IAAF,EAAD,gBAAcA,IAAd,EAHR;AAIGE,KAJH,CAIS,IAAG,KAAG;EACXf,OAAO,CAACgB,KAAR,CAAcC,GAAd;EACA,OAAO,IAAP;AACD,CAPH,CADK,C,iLAxDDhB,gB,gLAeOM,e,+KAgBAW,e,+KAeAG,c,8KAUAI,iB","names":["SupersetClient","logging","assembleEndpoint","dashId","key","tabId","endpoint","concat","updateFilterKey","value","put","jsonPayload","then","r","json","message","catch","error","err","createFilterKey","post","undefined","getFilterValue","get","JSON","parse","getPermalinkValue"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/keyValue.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetClient, logging } from '@superset-ui/core';\nimport { DashboardPermalinkValue } from 'src/dashboard/types';\n\nconst assembleEndpoint = (\n  dashId: string | number,\n  key?: string | null,\n  tabId?: string,\n) => {\n  let endpoint = `api/v1/dashboard/${dashId}/filter_state`;\n  if (key) {\n    endpoint = endpoint.concat(`/${key}`);\n  }\n  if (tabId) {\n    endpoint = endpoint.concat(`?tab_id=${tabId}`);\n  }\n  return endpoint;\n};\n\nexport const updateFilterKey = (\n  dashId: string,\n  value: string,\n  key: string,\n  tabId?: string,\n) =>\n  SupersetClient.put({\n    endpoint: assembleEndpoint(dashId, key, tabId),\n    jsonPayload: { value },\n  })\n    .then(r => r.json.message)\n    .catch(err => {\n      logging.error(err);\n      return null;\n    });\n\nexport const createFilterKey = (\n  dashId: string | number,\n  value: string,\n  tabId?: string,\n) =>\n  SupersetClient.post({\n    endpoint: assembleEndpoint(dashId, undefined, tabId),\n    jsonPayload: { value },\n  })\n    .then(r => r.json.key as string)\n    .catch(err => {\n      logging.error(err);\n      return null;\n    });\n\nexport const getFilterValue = (dashId: string | number, key?: string | null) =>\n  SupersetClient.get({\n    endpoint: assembleEndpoint(dashId, key),\n  })\n    .then(({ json }) => JSON.parse(json.value))\n    .catch(err => {\n      logging.error(err);\n      return null;\n    });\n\nexport const getPermalinkValue = (key: string) =>\n  SupersetClient.get({\n    endpoint: `/api/v1/dashboard/permalink/${key}`,\n  })\n    .then(({ json }) => json as DashboardPermalinkValue)\n    .catch(err => {\n      logging.error(err);\n      return null;\n    });\n"]},"metadata":{},"sourceType":"module"}