{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { t } from '@superset-ui/core';\nimport { createCtasDatasource, addInfoToast, addDangerToast } from 'src/SqlLab/actions/sqlLab';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport Button from 'src/components/Button';\nimport { exploreChart } from 'src/explore/exploreUtils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst ExploreCtasResultsButton = (_ref) => {let { table, schema, dbId, templateParams } = _ref;\n  const errorMessage = useSelector((state) => state.sqlLab.errorMessage);\n  const dispatch = useDispatch();\n  const buildVizOptions = {\n    table_name: table,\n    schema,\n    database_id: dbId,\n    template_params: templateParams };\n\n  const visualize = () => {\n    dispatch(createCtasDatasource(buildVizOptions)).\n    then((data) => {\n      const formData = {\n        datasource: `${data.table_id}__table`,\n        metrics: ['count'],\n        groupby: [],\n        viz_type: 'table',\n        since: '100 years ago',\n        all_columns: [],\n        row_limit: 1000 };\n\n      dispatch(addInfoToast(t('Creating a data source and creating a new tab')));\n      // open new window for data visualization\n      exploreChart(formData);\n    }).\n    catch(() => {\n      dispatch(addDangerToast(errorMessage || t('An error occurred')));\n    });\n  };\n  return ___EmotionJSX(Button, { buttonSize: \"small\", onClick: visualize, tooltip: t('Explore the result set in the data exploration view') },\n  ___EmotionJSX(InfoTooltipWithTrigger, { icon: \"line-chart\", placement: \"top\", label: t('explore') }), ' ',\n  t('Explore'));\n\n};__signature__(ExploreCtasResultsButton, \"useSelector{errorMessage}\\nuseDispatch{dispatch}\", () => [useSelector, useDispatch]);const _default =\nExploreCtasResultsButton;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ExploreCtasResultsButton, \"ExploreCtasResultsButton\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/ExploreCtasResultsButton/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/ExploreCtasResultsButton/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,CAAT,QAA8B,mBAA9B;AACA,SACEC,oBADF,EAEEC,YAFF,EAGEC,cAHF,QAIO,2BAJP;AAKA,SAASC,sBAAT,QAAuC,6BAAvC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,YAAT,QAA6B,0BAA7B,C;AAUA,MAAMC,wBAAwB,GAAG,UAKG,KALF,EAChCC,KADgC,EAEhCC,MAFgC,EAGhCC,IAHgC,EAIhCC,cAJgC,EAKE;EAClC,MAAMC,YAAY,GAAGd,WAAW,CAC9B,CAACe,KAAD,KAA4BA,KAAK,CAACC,MAAN,CAAaF,YADX,CAAhC;EAGA,MAAMG,QAAQ,GAAGhB,WAAW,EAA5B;EAEA,MAAMiB,eAAe,GAAG;IACtBC,UAAU,EAAET,KADU;IAEtBC,MAFsB;IAGtBS,WAAW,EAAER,IAHS;IAItBS,eAAe,EAAER,cAJK,EAAxB;;EAOA,MAAMS,SAAS,GAAG,MAAK;IACrBL,QAAQ,CAACd,oBAAoB,CAACe,eAAD,CAArB,CAAR;IACGK,IADH,CACQ,CAACC,IAAD,KAA+B;MACnC,MAAMC,QAAQ,GAAG;QACfC,UAAU,EAAE,GAAGF,IAAI,CAACG,QAAQ,SADb;QAEfC,OAAO,EAAE,CAAC,OAAD,CAFM;QAGfC,OAAO,EAAE,EAHM;QAIfC,QAAQ,EAAE,OAJK;QAKfC,KAAK,EAAE,eALQ;QAMfC,WAAW,EAAE,EANE;QAOfC,SAAS,EAAE,IAPI,EAAjB;;MASAhB,QAAQ,CACNb,YAAY,CAACF,CAAC,CAAC,+CAAD,CAAF,CADN,CAAR;MAGA;MACAM,YAAY,CAACiB,QAAD,CAAZ;IACD,CAhBH;IAiBGS,KAjBH,CAiBS,MAAK;MACVjB,QAAQ,CAACZ,cAAc,CAACS,YAAY,IAAIZ,CAAC,CAAC,mBAAD,CAAlB,CAAf,CAAR;IACD,CAnBH;EAoBD,CArBD;EAuBA,OACE,cAAC,MAAD,IACE,UAAU,EAAC,OADb,EAEE,OAAO,EAAEoB,SAFX,EAGE,OAAO,EAAEpB,CAAC,CAAC,qDAAD,CAHZ;EAKE,cAAC,sBAAD,IACE,IAAI,EAAC,YADP,EAEE,SAAS,EAAC,KAFZ,EAGE,KAAK,EAAEA,CAAC,CAAC,SAAD,CAHV,GALF,EASK,GATL;EAUGA,CAAC,CAAC,SAAD,CAVJ,CADF;;AAcD,CAvDD,C,cAAMO,wB,6DAMiBT,W,EAGJC,W;AAgDJQ,wB,CAAf,wB,iLAzDMA,wB","names":["React","useSelector","useDispatch","t","createCtasDatasource","addInfoToast","addDangerToast","InfoTooltipWithTrigger","Button","exploreChart","ExploreCtasResultsButton","table","schema","dbId","templateParams","errorMessage","state","sqlLab","dispatch","buildVizOptions","table_name","database_id","template_params","visualize","then","data","formData","datasource","table_id","metrics","groupby","viz_type","since","all_columns","row_limit","catch"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/ExploreCtasResultsButton/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { t, JsonObject } from '@superset-ui/core';\nimport {\n  createCtasDatasource,\n  addInfoToast,\n  addDangerToast,\n} from 'src/SqlLab/actions/sqlLab';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport Button from 'src/components/Button';\nimport { exploreChart } from 'src/explore/exploreUtils';\nimport { SqlLabRootState } from 'src/SqlLab/types';\n\nexport interface ExploreCtasResultsButtonProps {\n  table: string;\n  schema?: string | null;\n  dbId: number;\n  templateParams?: string;\n}\n\nconst ExploreCtasResultsButton = ({\n  table,\n  schema,\n  dbId,\n  templateParams,\n}: ExploreCtasResultsButtonProps) => {\n  const errorMessage = useSelector(\n    (state: SqlLabRootState) => state.sqlLab.errorMessage,\n  );\n  const dispatch = useDispatch<(dispatch: any) => Promise<JsonObject>>();\n\n  const buildVizOptions = {\n    table_name: table,\n    schema,\n    database_id: dbId,\n    template_params: templateParams,\n  };\n\n  const visualize = () => {\n    dispatch(createCtasDatasource(buildVizOptions))\n      .then((data: { table_id: number }) => {\n        const formData = {\n          datasource: `${data.table_id}__table`,\n          metrics: ['count'],\n          groupby: [],\n          viz_type: 'table',\n          since: '100 years ago',\n          all_columns: [],\n          row_limit: 1000,\n        };\n        dispatch(\n          addInfoToast(t('Creating a data source and creating a new tab')),\n        );\n        // open new window for data visualization\n        exploreChart(formData);\n      })\n      .catch(() => {\n        dispatch(addDangerToast(errorMessage || t('An error occurred')));\n      });\n  };\n\n  return (\n    <Button\n      buttonSize=\"small\"\n      onClick={visualize}\n      tooltip={t('Explore the result set in the data exploration view')}\n    >\n      <InfoTooltipWithTrigger\n        icon=\"line-chart\"\n        placement=\"top\"\n        label={t('explore')}\n      />{' '}\n      {t('Explore')}\n    </Button>\n  );\n};\n\nexport default ExploreCtasResultsButton;\n"]},"metadata":{},"sourceType":"module"}