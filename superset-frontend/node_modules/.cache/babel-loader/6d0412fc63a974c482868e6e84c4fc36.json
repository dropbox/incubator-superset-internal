{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { registryDelete, registryGet, registryGetAll, registrySetComponent } from '../../utils/functionalRegistry';\n/*\n  This is registry that contains list of dynamic dashboard components that can be added in addition to main components\n */\nconst DashboardComponentsRegistry = function (initComponents) {if (initComponents === void 0) {initComponents = [];}\n  const state = {\n    registry: {},\n    registryKeys: [] };\n\n  const set = registrySetComponent(state);\n  initComponents.forEach((_ref) => {let { key, item } = _ref;\n    set(key, item);\n  });\n  return {\n    set,\n    get: registryGet(state),\n    delete: registryDelete(state),\n    getAll: registryGetAll(state) };\n\n};const _default =\nDashboardComponentsRegistry;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DashboardComponentsRegistry, \"DashboardComponentsRegistry\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/visualizations/dashboardComponents/DashboardComponentsRegistry.ts\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/visualizations/dashboardComponents/DashboardComponentsRegistry.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAIEA,cAJF,EAKEC,WALF,EAMEC,cANF,EAQEC,oBARF,QASO,gCATP;AAeA;;;AAIA,MAAMC,2BAA2B,GAAG,UAClCC,cADkC,EAEhC,KADFA,cACE,cADFA,cACE,GADuD,EACvD;EACF,MAAMC,KAAK,GAEP;IACFC,QAAQ,EAAE,EADR;IAEFC,YAAY,EAAE,EAFZ,EAFJ;;EAOA,MAAMC,GAAG,GAAGN,oBAAoB,CAACG,KAAD,CAAhC;EAEAD,cAAc,CAACK,OAAf,CAAuB,UAAkB,KAAjB,EAAEC,GAAF,EAAOC,IAAP,EAAiB;IACvCH,GAAG,CAACE,GAAD,EAAMC,IAAN,CAAH;EACD,CAFD;EAIA,OAAO;IACLH,GADK;IAELI,GAAG,EAAEZ,WAAW,CAACK,KAAD,CAFX;IAGLQ,MAAM,EAAEd,cAAc,CAACM,KAAD,CAHjB;IAILS,MAAM,EAAEb,cAAc,CAACI,KAAD,CAJjB,EAAP;;AAMD,CAtBD,C;AAwBeF,2B,CAAf,wB,iLAxBMA,2B","names":["registryDelete","registryGet","registryGetAll","registrySetComponent","DashboardComponentsRegistry","initComponents","state","registry","registryKeys","set","forEach","key","item","get","delete","getAll"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/visualizations/dashboardComponents/DashboardComponentsRegistry.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ComponentItem,\n  ComponentRegistry,\n  FunctionalRegistryState,\n  registryDelete,\n  registryGet,\n  registryGetAll,\n  RegistryMetadata,\n  registrySetComponent,\n} from '../../utils/functionalRegistry';\n\nexport interface DashboardComponentsRegistryMetadata extends RegistryMetadata {\n  iconName: string;\n}\n\n/*\n  This is registry that contains list of dynamic dashboard components that can be added in addition to main components\n */\n\nconst DashboardComponentsRegistry = (\n  initComponents: { key: string; item: ComponentItem }[] = [],\n) => {\n  const state: FunctionalRegistryState<\n    ComponentRegistry<DashboardComponentsRegistryMetadata>\n  > = {\n    registry: {},\n    registryKeys: [],\n  };\n\n  const set = registrySetComponent(state);\n\n  initComponents.forEach(({ key, item }) => {\n    set(key, item);\n  });\n\n  return {\n    set,\n    get: registryGet(state),\n    delete: registryDelete(state),\n    getAll: registryGetAll(state),\n  };\n};\n\nexport default DashboardComponentsRegistry;\n"]},"metadata":{},"sourceType":"module"}