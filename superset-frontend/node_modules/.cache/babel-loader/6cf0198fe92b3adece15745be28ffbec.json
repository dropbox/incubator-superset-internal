{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo, useRef } from 'react';\nimport { Global } from '@emotion/react';\nimport { useHistory } from 'react-router-dom';\nimport { CategoricalColorNamespace, FeatureFlag, getSharedLabelColor, isFeatureEnabled, SharedLabelColorSource, t, useTheme } from '@superset-ui/core';\nimport pick from 'lodash/pick';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport Loading from 'src/components/Loading';\nimport { useDashboard, useDashboardCharts, useDashboardDatasets } from 'src/hooks/apiResources';\nimport { hydrateDashboard } from 'src/dashboard/actions/hydrate';\nimport { setDatasources } from 'src/dashboard/actions/datasources';\nimport injectCustomCss from 'src/dashboard/util/injectCustomCss';\nimport setupPlugins from 'src/setup/setupPlugins';\nimport { getItem, LocalStorageKeys, setItem } from 'src/utils/localStorageHelpers';\nimport { URL_PARAMS } from 'src/constants';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { getFilterSets } from 'src/dashboard/actions/nativeFilters';\nimport { setDatasetsStatus } from 'src/dashboard/actions/dashboardState';\nimport { getFilterValue, getPermalinkValue } from 'src/dashboard/components/nativeFilters/FilterBar/keyValue';\nimport shortid from 'shortid';\nimport { getActiveFilters } from '../util/activeDashboardFilters';\nimport { chartContextMenuStyles, filterCardPopoverStyle, headerStyles } from '../styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const DashboardPageIdContext = /*#__PURE__*/React.createContext('');\nsetupPlugins();\nconst DashboardContainer = /*#__PURE__*/React.lazy(() => import(\n/* webpackChunkName: \"DashboardContainer\" */\n/* webpackPreload: true */\n'src/dashboard/containers/Dashboard'));\nconst originalDocumentTitle = document.title;\nconst getDashboardContextLocalStorage = () => {\n  const dashboardsContexts = getItem(LocalStorageKeys.dashboard__explore_context, {});\n  // A new dashboard tab id is generated on each dashboard page opening.\n  // We mark ids as redundant when user leaves the dashboard, because they won't be reused.\n  // Then we remove redundant dashboard contexts from local storage in order not to clutter it\n  return Object.fromEntries(Object.entries(dashboardsContexts).filter((_ref) => {let [, value] = _ref;return !value.isRedundant;}));\n};\nconst updateDashboardTabLocalStorage = (dashboardPageId, dashboardContext) => {\n  const dashboardsContexts = getDashboardContextLocalStorage();\n  setItem(LocalStorageKeys.dashboard__explore_context, {\n    ...dashboardsContexts,\n    [dashboardPageId]: dashboardContext });\n\n};\nconst useSyncDashboardStateWithLocalStorage = () => {\n  const dashboardPageId = useMemo(() => shortid.generate(), []);\n  const dashboardContextForExplore = useSelector((_ref2) => {var _dashboardInfo$metada, _dashboardInfo$metada2, _dashboardInfo$metada3;let { dashboardInfo, dashboardState, nativeFilters, dataMask } = _ref2;return {\n      labelColors: ((_dashboardInfo$metada = dashboardInfo.metadata) == null ? void 0 : _dashboardInfo$metada.label_colors) || {},\n      sharedLabelColors: ((_dashboardInfo$metada2 = dashboardInfo.metadata) == null ? void 0 : _dashboardInfo$metada2.shared_label_colors) || {},\n      colorScheme: dashboardState == null ? void 0 : dashboardState.colorScheme,\n      chartConfiguration: ((_dashboardInfo$metada3 = dashboardInfo.metadata) == null ? void 0 : _dashboardInfo$metada3.chart_configuration) || {},\n      nativeFilters: Object.entries(nativeFilters.filters).reduce((acc, _ref3) => {let [key, filterValue] = _ref3;return {\n          ...acc,\n          [key]: pick(filterValue, ['chartsInScope']) };},\n      {}),\n      dataMask,\n      dashboardId: dashboardInfo.id,\n      filterBoxFilters: getActiveFilters(),\n      dashboardPageId };});\n\n  useEffect(() => {\n    updateDashboardTabLocalStorage(dashboardPageId, dashboardContextForExplore);\n    return () => {\n      // mark tab id as redundant when dashboard unmounts - case when user opens\n      // Explore in the same tab\n      updateDashboardTabLocalStorage(dashboardPageId, {\n        ...dashboardContextForExplore,\n        isRedundant: true });\n\n    };\n  }, [dashboardContextForExplore, dashboardPageId]);\n  return dashboardPageId;\n};\nexport const DashboardPage = (_ref4) => {let { idOrSlug } = _ref4;\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const dashboardPageId = useSyncDashboardStateWithLocalStorage();\n  const { addDangerToast } = useToasts();\n  const { result: dashboard, error: dashboardApiError } = useDashboard(idOrSlug);\n  const { result: charts, error: chartsApiError } = useDashboardCharts(idOrSlug);\n  const { result: datasets, error: datasetsApiError, status } = useDashboardDatasets(idOrSlug);\n  const isDashboardHydrated = useRef(false);\n  const error = dashboardApiError || chartsApiError;\n  const readyToRender = Boolean(dashboard && charts);\n  const { dashboard_title, css, metadata, id = 0 } = dashboard || {};\n  // Filter sets depend on native filters\n  const filterSetEnabled = isFeatureEnabled(FeatureFlag.DASHBOARD_NATIVE_FILTERS_SET) &&\n  isFeatureEnabled(FeatureFlag.DASHBOARD_NATIVE_FILTERS);\n  useEffect(() => {\n    // mark tab id as redundant when user closes browser tab - a new id will be\n    // generated next time user opens a dashboard and the old one won't be reused\n    const handleTabClose = () => {\n      const dashboardsContexts = getDashboardContextLocalStorage();\n      setItem(LocalStorageKeys.dashboard__explore_context, {\n        ...dashboardsContexts,\n        [dashboardPageId]: {\n          ...dashboardsContexts[dashboardPageId],\n          isRedundant: true } });\n\n\n    };\n    window.addEventListener('beforeunload', handleTabClose);\n    return () => {\n      window.removeEventListener('beforeunload', handleTabClose);\n    };\n  }, [dashboardPageId]);\n  useEffect(() => {\n    dispatch(setDatasetsStatus(status));\n  }, [dispatch, status]);\n  useEffect(() => {\n    // eslint-disable-next-line consistent-return\n    async function getDataMaskApplied() {\n      const permalinkKey = getUrlParam(URL_PARAMS.permalinkKey);\n      const nativeFilterKeyValue = getUrlParam(URL_PARAMS.nativeFiltersKey);\n      const isOldRison = getUrlParam(URL_PARAMS.nativeFilters);\n      let dataMask = nativeFilterKeyValue || {};\n      // activeTabs is initialized with undefined so that it doesn't override\n      // the currently stored value when hydrating\n      let activeTabs;\n      if (permalinkKey) {\n        const permalinkValue = await getPermalinkValue(permalinkKey);\n        if (permalinkValue) {\n          ({ dataMask, activeTabs } = permalinkValue.state);\n        }\n      } else\n      if (nativeFilterKeyValue) {\n        dataMask = await getFilterValue(id, nativeFilterKeyValue);\n      }\n      if (isOldRison) {\n        dataMask = isOldRison;\n      }\n      if (readyToRender) {\n        if (!isDashboardHydrated.current) {\n          isDashboardHydrated.current = true;\n          if (filterSetEnabled) {\n            // only initialize filterset once\n            dispatch(getFilterSets(id));\n          }\n        }\n        dispatch(hydrateDashboard({\n          history,\n          dashboard,\n          charts,\n          activeTabs,\n          dataMask }));\n\n      }\n      return null;\n    }\n    if (id)\n    getDataMaskApplied();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [readyToRender]);\n  useEffect(() => {\n    if (dashboard_title) {\n      document.title = dashboard_title;\n    }\n    return () => {\n      document.title = originalDocumentTitle;\n    };\n  }, [dashboard_title]);\n  useEffect(() => {\n    if (typeof css === 'string') {\n      // returning will clean up custom css\n      // when dashboard unmounts or changes\n      return injectCustomCss(css);\n    }\n    return () => {};\n  }, [css]);\n  useEffect(() => {\n    const sharedLabelColor = getSharedLabelColor();\n    sharedLabelColor.source = SharedLabelColorSource.dashboard;\n    return () => {\n      // clean up label color\n      const categoricalNamespace = CategoricalColorNamespace.getNamespace(metadata == null ? void 0 : metadata.color_namespace);\n      categoricalNamespace.resetColors();\n      sharedLabelColor.clear();\n    };\n  }, [metadata == null ? void 0 : metadata.color_namespace]);\n  useEffect(() => {\n    if (datasetsApiError) {\n      addDangerToast(t('Error loading chart datasources. Filters may not work correctly.'));\n    } else\n    {\n      dispatch(setDatasources(datasets));\n    }\n  }, [addDangerToast, datasets, datasetsApiError, dispatch]);\n  if (error)\n  throw error; // caught in error boundary\n  if (!readyToRender || !isDashboardHydrated.current)\n  return ___EmotionJSX(Loading, null);\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Global, { styles: [\n    filterCardPopoverStyle(theme),\n    headerStyles(theme),\n    chartContextMenuStyles(theme), process.env.NODE_ENV === \"production\" ? \"\" : \";label:DashboardPage;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"] }),\n\n  ___EmotionJSX(DashboardPageIdContext.Provider, { value: dashboardPageId },\n  ___EmotionJSX(DashboardContainer, null)));\n\n\n};\nexport default DashboardPage;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAAoBC,SAApB,EAA+BC,OAA/B,EAAwCC,MAAxC,QAAsD,OAAtD;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SACEC,yBADF,EAEEC,WAFF,EAGEC,mBAHF,EAIEC,gBAJF,EAKEC,sBALF,EAMEC,CANF,EAOEC,QAPF,QAQO,mBARP;AASA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,yCAA1B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SACEC,YADF,EAEEC,kBAFF,EAGEC,oBAHF,QAIO,wBAJP;AAKA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,cAAT,QAA+B,mCAA/B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,SACEC,OADF,EAEEC,gBAFF,EAGEC,OAHF,QAIO,+BAJP;AAKA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,iBAAT,QAAkC,sCAAlC;AACA,SACEC,cADF,EAEEC,iBAFF,QAGO,2DAHP;AAKA,OAAOC,OAAP,MAAoB,SAApB;AAEA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SACEC,sBADF,EAEEC,sBAFF,EAGEC,YAHF,QAIO,WAJP,C;AAMA,OAAO,MAAMC,sBAAsB,gBAAGvC,KAAK,CAACwC,aAAN,CAAoB,EAApB,CAA/B;AAEPhB,YAAY;AACZ,MAAMiB,kBAAkB,gBAAGzC,KAAK,CAAC0C,IAAN,CACzB,MACE;AACE;AACA;AACA,oCAHF,CAFuB,CAA3B;AASA,MAAMC,qBAAqB,GAAGC,QAAQ,CAACC,KAAvC;AAMA,MAAMC,+BAA+B,GAAG,MAAK;EAC3C,MAAMC,kBAAkB,GAAGtB,OAAO,CAChCC,gBAAgB,CAACsB,0BADe,EAEhC,EAFgC,CAAlC;EAIA;EACA;EACA;EACA,OAAOC,MAAM,CAACC,WAAP,CACLD,MAAM,CAACE,OAAP,CAAeJ,kBAAf,EAAmCK,MAAnC,CACE,eAAC,GAAGC,KAAH,CAAD,eAAe,CAACA,KAAK,CAACC,WAAtB,EADF,CADK,CAAP;AAKD,CAbD;AAeA,MAAMC,8BAA8B,GAAG,CACrCC,eADqC,EAErCC,gBAFqC,KAGnC;EACF,MAAMV,kBAAkB,GAAGD,+BAA+B,EAA1D;EACAnB,OAAO,CAACD,gBAAgB,CAACsB,0BAAlB,EAA8C;IACnD,GAAGD,kBADgD;IAEnD,CAACS,eAAD,GAAmBC,gBAFgC,EAA9C,CAAP;;AAID,CATD;AAWA,MAAMC,qCAAqC,GAAG,MAAK;EACjD,MAAMF,eAAe,GAAGtD,OAAO,CAAC,MAAMgC,OAAO,CAACyB,QAAR,EAAP,EAA2B,EAA3B,CAA/B;EACA,MAAMC,0BAA0B,GAAG7C,WAAW,CAG5C,0FAAC,EAAE8C,aAAF,EAAiBC,cAAjB,EAAiCC,aAAjC,EAAgDC,QAAhD,EAAD,gBAAiE;MACjEC,WAAW,EAAE,uCAAa,CAACC,QAAd,2CAAwBC,YAAxB,KAAwC,EADY;MAEjEC,iBAAiB,EAAE,wCAAa,CAACF,QAAd,4CAAwBG,mBAAxB,KAA+C,EAFD;MAGjEC,WAAW,EAAER,cAAF,oBAAEA,cAAc,CAAEQ,WAHoC;MAIjEC,kBAAkB,EAAE,wCAAa,CAACL,QAAd,4CAAwBM,mBAAxB,KAA+C,EAJF;MAKjET,aAAa,EAAEd,MAAM,CAACE,OAAP,CAAeY,aAAa,CAACU,OAA7B,EAAsCC,MAAtC,CACb,CAACC,GAAD,iBAAM,CAACC,GAAD,EAAMC,WAAN,CAAN,gBAA8B;UAC5B,GAAGF,GADyB;UAE5B,CAACC,GAAD,GAAO/D,IAAI,CAACgE,WAAD,EAAc,CAAC,eAAD,CAAd,CAFiB,EAA9B,EADa;MAKb,EALa,CALkD;MAYjEb,QAZiE;MAajEc,WAAW,EAAEjB,aAAa,CAACkB,EAbsC;MAcjEC,gBAAgB,EAAE7C,gBAAgB,EAd+B;MAejEqB,eAfiE,EAAjE,EAH4C,CAA9C;;EAqBAvD,SAAS,CAAC,MAAK;IACbsD,8BAA8B,CAACC,eAAD,EAAkBI,0BAAlB,CAA9B;IACA,OAAO,MAAK;MACV;MACA;MACAL,8BAA8B,CAACC,eAAD,EAAkB;QAC9C,GAAGI,0BAD2C;QAE9CN,WAAW,EAAE,IAFiC,EAAlB,CAA9B;;IAID,CAPD;EAQD,CAVQ,EAUN,CAACM,0BAAD,EAA6BJ,eAA7B,CAVM,CAAT;EAWA,OAAOA,eAAP;AACD,CAnCD;AAqCA,OAAO,MAAMyB,aAAa,GAAkB,WAA4B,KAA3B,EAAEC,QAAF,EAA2B;EACtE,MAAMC,KAAK,GAAGvE,QAAQ,EAAtB;EACA,MAAMwE,QAAQ,GAAGtE,WAAW,EAA5B;EACA,MAAMuE,OAAO,GAAGhF,UAAU,EAA1B;EACA,MAAMmD,eAAe,GAAGE,qCAAqC,EAA7D;EACA,MAAM,EAAE4B,cAAF,KAAqBtE,SAAS,EAApC;EACA,MAAM,EAAEuE,MAAM,EAAEC,SAAV,EAAqBC,KAAK,EAAEC,iBAA5B,KACJxE,YAAY,CAACgE,QAAD,CADd;EAEA,MAAM,EAAEK,MAAM,EAAEI,MAAV,EAAkBF,KAAK,EAAEG,cAAzB,KACJzE,kBAAkB,CAAC+D,QAAD,CADpB;EAEA,MAAM,EACJK,MAAM,EAAEM,QADJ,EAEJJ,KAAK,EAAEK,gBAFH,EAGJC,MAHI,KAIF3E,oBAAoB,CAAC8D,QAAD,CAJxB;EAKA,MAAMc,mBAAmB,GAAG7F,MAAM,CAAC,KAAD,CAAlC;EAEA,MAAMsF,KAAK,GAAGC,iBAAiB,IAAIE,cAAnC;EACA,MAAMK,aAAa,GAAGC,OAAO,CAACV,SAAS,IAAIG,MAAd,CAA7B;EACA,MAAM,EAAEQ,eAAF,EAAmBC,GAAnB,EAAwBlC,QAAxB,EAAkCa,EAAE,GAAG,CAAvC,KAA6CS,SAAS,IAAI,EAAhE;EAEA;EACA,MAAMa,gBAAgB,GACpB5F,gBAAgB,CAACF,WAAW,CAAC+F,4BAAb,CAAhB;EACA7F,gBAAgB,CAACF,WAAW,CAACgG,wBAAb,CAFlB;EAIAtG,SAAS,CAAC,MAAK;IACb;IACA;IACA,MAAMuG,cAAc,GAAG,MAAK;MAC1B,MAAMzD,kBAAkB,GAAGD,+BAA+B,EAA1D;MACAnB,OAAO,CAACD,gBAAgB,CAACsB,0BAAlB,EAA8C;QACnD,GAAGD,kBADgD;QAEnD,CAACS,eAAD,GAAmB;UACjB,GAAGT,kBAAkB,CAACS,eAAD,CADJ;UAEjBF,WAAW,EAAE,IAFI,EAFgC,EAA9C,CAAP;;;IAOD,CATD;IAUAmD,MAAM,CAACC,gBAAP,CAAwB,cAAxB,EAAwCF,cAAxC;IACA,OAAO,MAAK;MACVC,MAAM,CAACE,mBAAP,CAA2B,cAA3B,EAA2CH,cAA3C;IACD,CAFD;EAGD,CAjBQ,EAiBN,CAAChD,eAAD,CAjBM,CAAT;EAmBAvD,SAAS,CAAC,MAAK;IACbmF,QAAQ,CAACrD,iBAAiB,CAACgE,MAAD,CAAlB,CAAR;EACD,CAFQ,EAEN,CAACX,QAAD,EAAWW,MAAX,CAFM,CAAT;EAIA9F,SAAS,CAAC,MAAK;IACb;IACA,eAAe2G,kBAAf,GAAiC;MAC/B,MAAMC,YAAY,GAAGhF,WAAW,CAACD,UAAU,CAACiF,YAAZ,CAAhC;MACA,MAAMC,oBAAoB,GAAGjF,WAAW,CAACD,UAAU,CAACmF,gBAAZ,CAAxC;MACA,MAAMC,UAAU,GAAGnF,WAAW,CAACD,UAAU,CAACmC,aAAZ,CAA9B;MAEA,IAAIC,QAAQ,GAAG8C,oBAAoB,IAAI,EAAvC;MACA;MACA;MACA,IAAIG,UAAJ;MACA,IAAIJ,YAAJ,EAAkB;QAChB,MAAMK,cAAc,GAAG,MAAMjF,iBAAiB,CAAC4E,YAAD,CAA9C;QACA,IAAIK,cAAJ,EAAoB;UAClB,CAAC,EAAElD,QAAF,EAAYiD,UAAZ,KAA2BC,cAAc,CAACC,KAA3C;QACD;MACF,CALD;MAKO,IAAIL,oBAAJ,EAA0B;QAC/B9C,QAAQ,GAAG,MAAMhC,cAAc,CAAC+C,EAAD,EAAK+B,oBAAL,CAA/B;MACD;MACD,IAAIE,UAAJ,EAAgB;QACdhD,QAAQ,GAAGgD,UAAX;MACD;MAED,IAAIf,aAAJ,EAAmB;QACjB,IAAI,CAACD,mBAAmB,CAACoB,OAAzB,EAAkC;UAChCpB,mBAAmB,CAACoB,OAApB,GAA8B,IAA9B;UACA,IAAIf,gBAAJ,EAAsB;YACpB;YACAjB,QAAQ,CAACtD,aAAa,CAACiD,EAAD,CAAd,CAAR;UACD;QACF;QACDK,QAAQ,CACN/D,gBAAgB,CAAC;UACfgE,OADe;UAEfG,SAFe;UAGfG,MAHe;UAIfsB,UAJe;UAKfjD,QALe,EAAD,CADV,CAAR;;MASD;MACD,OAAO,IAAP;IACD;IACD,IAAIe,EAAJ;IAAQ6B,kBAAkB;IAC1B;EACD,CA7CQ,EA6CN,CAACX,aAAD,CA7CM,CAAT;EA+CAhG,SAAS,CAAC,MAAK;IACb,IAAIkG,eAAJ,EAAqB;MACnBvD,QAAQ,CAACC,KAAT,GAAiBsD,eAAjB;IACD;IACD,OAAO,MAAK;MACVvD,QAAQ,CAACC,KAAT,GAAiBF,qBAAjB;IACD,CAFD;EAGD,CAPQ,EAON,CAACwD,eAAD,CAPM,CAAT;EASAlG,SAAS,CAAC,MAAK;IACb,IAAI,OAAOmG,GAAP,KAAe,QAAnB,EAA6B;MAC3B;MACA;MACA,OAAO7E,eAAe,CAAC6E,GAAD,CAAtB;IACD;IACD,OAAO,MAAK,CAAG,CAAf;EACD,CAPQ,EAON,CAACA,GAAD,CAPM,CAAT;EASAnG,SAAS,CAAC,MAAK;IACb,MAAMoH,gBAAgB,GAAG7G,mBAAmB,EAA5C;IACA6G,gBAAgB,CAACC,MAAjB,GAA0B5G,sBAAsB,CAAC8E,SAAjD;IACA,OAAO,MAAK;MACV;MACA,MAAM+B,oBAAoB,GAAGjH,yBAAyB,CAACkH,YAA1B,CAC3BtD,QAD2B,oBAC3BA,QAAQ,CAAEuD,eADiB,CAA7B;MAGAF,oBAAoB,CAACG,WAArB;MACAL,gBAAgB,CAACM,KAAjB;IACD,CAPD;EAQD,CAXQ,EAWN,CAACzD,QAAD,oBAACA,QAAQ,CAAEuD,eAAX,CAXM,CAAT;EAaAxH,SAAS,CAAC,MAAK;IACb,IAAI6F,gBAAJ,EAAsB;MACpBR,cAAc,CACZ3E,CAAC,CAAC,kEAAD,CADW,CAAd;IAGD,CAJD;IAIO;MACLyE,QAAQ,CAAC9D,cAAc,CAACuE,QAAD,CAAf,CAAR;IACD;EACF,CARQ,EAQN,CAACP,cAAD,EAAiBO,QAAjB,EAA2BC,gBAA3B,EAA6CV,QAA7C,CARM,CAAT;EAUA,IAAIK,KAAJ;EAAW,MAAMA,KAAN,CAzI2D,CAyI9C;EACxB,IAAI,CAACQ,aAAD,IAAkB,CAACD,mBAAmB,CAACoB,OAA3C;EAAoD,OAAO,cAAC,OAAD,OAAP;EAEpD,OACE;EACE,cAAC,MAAD,IACE,MAAM;IACJ/E,sBAAsB,CAAC8C,KAAD,CADlB;IAEJ7C,YAAY,CAAC6C,KAAD,CAFR;IAGJ/C,sBAAsB,CAAC+C,KAAD,CAHlB,2/bADR,GADF;;EAQE,cAAC,sBAAD,CAAwB,QAAxB,IAAiC,KAAK,EAAE3B,eAAxC;EACE,cAAC,kBAAD,OADF,CARF,CADF;;;AAcD,CA1JM;AA4JP,eAAeyB,aAAf","names":["React","useEffect","useMemo","useRef","Global","useHistory","CategoricalColorNamespace","FeatureFlag","getSharedLabelColor","isFeatureEnabled","SharedLabelColorSource","t","useTheme","pick","useDispatch","useSelector","useToasts","Loading","useDashboard","useDashboardCharts","useDashboardDatasets","hydrateDashboard","setDatasources","injectCustomCss","setupPlugins","getItem","LocalStorageKeys","setItem","URL_PARAMS","getUrlParam","getFilterSets","setDatasetsStatus","getFilterValue","getPermalinkValue","shortid","getActiveFilters","chartContextMenuStyles","filterCardPopoverStyle","headerStyles","DashboardPageIdContext","createContext","DashboardContainer","lazy","originalDocumentTitle","document","title","getDashboardContextLocalStorage","dashboardsContexts","dashboard__explore_context","Object","fromEntries","entries","filter","value","isRedundant","updateDashboardTabLocalStorage","dashboardPageId","dashboardContext","useSyncDashboardStateWithLocalStorage","generate","dashboardContextForExplore","dashboardInfo","dashboardState","nativeFilters","dataMask","labelColors","metadata","label_colors","sharedLabelColors","shared_label_colors","colorScheme","chartConfiguration","chart_configuration","filters","reduce","acc","key","filterValue","dashboardId","id","filterBoxFilters","DashboardPage","idOrSlug","theme","dispatch","history","addDangerToast","result","dashboard","error","dashboardApiError","charts","chartsApiError","datasets","datasetsApiError","status","isDashboardHydrated","readyToRender","Boolean","dashboard_title","css","filterSetEnabled","DASHBOARD_NATIVE_FILTERS_SET","DASHBOARD_NATIVE_FILTERS","handleTabClose","window","addEventListener","removeEventListener","getDataMaskApplied","permalinkKey","nativeFilterKeyValue","nativeFiltersKey","isOldRison","activeTabs","permalinkValue","state","current","sharedLabelColor","source","categoricalNamespace","getNamespace","color_namespace","resetColors","clear"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/containers/DashboardPage.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FC, useEffect, useMemo, useRef } from 'react';\nimport { Global } from '@emotion/react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  CategoricalColorNamespace,\n  FeatureFlag,\n  getSharedLabelColor,\n  isFeatureEnabled,\n  SharedLabelColorSource,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport pick from 'lodash/pick';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport Loading from 'src/components/Loading';\nimport {\n  useDashboard,\n  useDashboardCharts,\n  useDashboardDatasets,\n} from 'src/hooks/apiResources';\nimport { hydrateDashboard } from 'src/dashboard/actions/hydrate';\nimport { setDatasources } from 'src/dashboard/actions/datasources';\nimport injectCustomCss from 'src/dashboard/util/injectCustomCss';\nimport setupPlugins from 'src/setup/setupPlugins';\n\nimport {\n  getItem,\n  LocalStorageKeys,\n  setItem,\n} from 'src/utils/localStorageHelpers';\nimport { URL_PARAMS } from 'src/constants';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { getFilterSets } from 'src/dashboard/actions/nativeFilters';\nimport { setDatasetsStatus } from 'src/dashboard/actions/dashboardState';\nimport {\n  getFilterValue,\n  getPermalinkValue,\n} from 'src/dashboard/components/nativeFilters/FilterBar/keyValue';\nimport { DashboardContextForExplore } from 'src/types/DashboardContextForExplore';\nimport shortid from 'shortid';\nimport { RootState } from '../types';\nimport { getActiveFilters } from '../util/activeDashboardFilters';\nimport {\n  chartContextMenuStyles,\n  filterCardPopoverStyle,\n  headerStyles,\n} from '../styles';\n\nexport const DashboardPageIdContext = React.createContext('');\n\nsetupPlugins();\nconst DashboardContainer = React.lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"DashboardContainer\" */\n      /* webpackPreload: true */\n      'src/dashboard/containers/Dashboard'\n    ),\n);\n\nconst originalDocumentTitle = document.title;\n\ntype PageProps = {\n  idOrSlug: string;\n};\n\nconst getDashboardContextLocalStorage = () => {\n  const dashboardsContexts = getItem(\n    LocalStorageKeys.dashboard__explore_context,\n    {},\n  );\n  // A new dashboard tab id is generated on each dashboard page opening.\n  // We mark ids as redundant when user leaves the dashboard, because they won't be reused.\n  // Then we remove redundant dashboard contexts from local storage in order not to clutter it\n  return Object.fromEntries(\n    Object.entries(dashboardsContexts).filter(\n      ([, value]) => !value.isRedundant,\n    ),\n  );\n};\n\nconst updateDashboardTabLocalStorage = (\n  dashboardPageId: string,\n  dashboardContext: DashboardContextForExplore,\n) => {\n  const dashboardsContexts = getDashboardContextLocalStorage();\n  setItem(LocalStorageKeys.dashboard__explore_context, {\n    ...dashboardsContexts,\n    [dashboardPageId]: dashboardContext,\n  });\n};\n\nconst useSyncDashboardStateWithLocalStorage = () => {\n  const dashboardPageId = useMemo(() => shortid.generate(), []);\n  const dashboardContextForExplore = useSelector<\n    RootState,\n    DashboardContextForExplore\n  >(({ dashboardInfo, dashboardState, nativeFilters, dataMask }) => ({\n    labelColors: dashboardInfo.metadata?.label_colors || {},\n    sharedLabelColors: dashboardInfo.metadata?.shared_label_colors || {},\n    colorScheme: dashboardState?.colorScheme,\n    chartConfiguration: dashboardInfo.metadata?.chart_configuration || {},\n    nativeFilters: Object.entries(nativeFilters.filters).reduce(\n      (acc, [key, filterValue]) => ({\n        ...acc,\n        [key]: pick(filterValue, ['chartsInScope']),\n      }),\n      {},\n    ),\n    dataMask,\n    dashboardId: dashboardInfo.id,\n    filterBoxFilters: getActiveFilters(),\n    dashboardPageId,\n  }));\n\n  useEffect(() => {\n    updateDashboardTabLocalStorage(dashboardPageId, dashboardContextForExplore);\n    return () => {\n      // mark tab id as redundant when dashboard unmounts - case when user opens\n      // Explore in the same tab\n      updateDashboardTabLocalStorage(dashboardPageId, {\n        ...dashboardContextForExplore,\n        isRedundant: true,\n      });\n    };\n  }, [dashboardContextForExplore, dashboardPageId]);\n  return dashboardPageId;\n};\n\nexport const DashboardPage: FC<PageProps> = ({ idOrSlug }: PageProps) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const dashboardPageId = useSyncDashboardStateWithLocalStorage();\n  const { addDangerToast } = useToasts();\n  const { result: dashboard, error: dashboardApiError } =\n    useDashboard(idOrSlug);\n  const { result: charts, error: chartsApiError } =\n    useDashboardCharts(idOrSlug);\n  const {\n    result: datasets,\n    error: datasetsApiError,\n    status,\n  } = useDashboardDatasets(idOrSlug);\n  const isDashboardHydrated = useRef(false);\n\n  const error = dashboardApiError || chartsApiError;\n  const readyToRender = Boolean(dashboard && charts);\n  const { dashboard_title, css, metadata, id = 0 } = dashboard || {};\n\n  // Filter sets depend on native filters\n  const filterSetEnabled =\n    isFeatureEnabled(FeatureFlag.DASHBOARD_NATIVE_FILTERS_SET) &&\n    isFeatureEnabled(FeatureFlag.DASHBOARD_NATIVE_FILTERS);\n\n  useEffect(() => {\n    // mark tab id as redundant when user closes browser tab - a new id will be\n    // generated next time user opens a dashboard and the old one won't be reused\n    const handleTabClose = () => {\n      const dashboardsContexts = getDashboardContextLocalStorage();\n      setItem(LocalStorageKeys.dashboard__explore_context, {\n        ...dashboardsContexts,\n        [dashboardPageId]: {\n          ...dashboardsContexts[dashboardPageId],\n          isRedundant: true,\n        },\n      });\n    };\n    window.addEventListener('beforeunload', handleTabClose);\n    return () => {\n      window.removeEventListener('beforeunload', handleTabClose);\n    };\n  }, [dashboardPageId]);\n\n  useEffect(() => {\n    dispatch(setDatasetsStatus(status));\n  }, [dispatch, status]);\n\n  useEffect(() => {\n    // eslint-disable-next-line consistent-return\n    async function getDataMaskApplied() {\n      const permalinkKey = getUrlParam(URL_PARAMS.permalinkKey);\n      const nativeFilterKeyValue = getUrlParam(URL_PARAMS.nativeFiltersKey);\n      const isOldRison = getUrlParam(URL_PARAMS.nativeFilters);\n\n      let dataMask = nativeFilterKeyValue || {};\n      // activeTabs is initialized with undefined so that it doesn't override\n      // the currently stored value when hydrating\n      let activeTabs: string[] | undefined;\n      if (permalinkKey) {\n        const permalinkValue = await getPermalinkValue(permalinkKey);\n        if (permalinkValue) {\n          ({ dataMask, activeTabs } = permalinkValue.state);\n        }\n      } else if (nativeFilterKeyValue) {\n        dataMask = await getFilterValue(id, nativeFilterKeyValue);\n      }\n      if (isOldRison) {\n        dataMask = isOldRison;\n      }\n\n      if (readyToRender) {\n        if (!isDashboardHydrated.current) {\n          isDashboardHydrated.current = true;\n          if (filterSetEnabled) {\n            // only initialize filterset once\n            dispatch(getFilterSets(id));\n          }\n        }\n        dispatch(\n          hydrateDashboard({\n            history,\n            dashboard,\n            charts,\n            activeTabs,\n            dataMask,\n          }),\n        );\n      }\n      return null;\n    }\n    if (id) getDataMaskApplied();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [readyToRender]);\n\n  useEffect(() => {\n    if (dashboard_title) {\n      document.title = dashboard_title;\n    }\n    return () => {\n      document.title = originalDocumentTitle;\n    };\n  }, [dashboard_title]);\n\n  useEffect(() => {\n    if (typeof css === 'string') {\n      // returning will clean up custom css\n      // when dashboard unmounts or changes\n      return injectCustomCss(css);\n    }\n    return () => {};\n  }, [css]);\n\n  useEffect(() => {\n    const sharedLabelColor = getSharedLabelColor();\n    sharedLabelColor.source = SharedLabelColorSource.dashboard;\n    return () => {\n      // clean up label color\n      const categoricalNamespace = CategoricalColorNamespace.getNamespace(\n        metadata?.color_namespace,\n      );\n      categoricalNamespace.resetColors();\n      sharedLabelColor.clear();\n    };\n  }, [metadata?.color_namespace]);\n\n  useEffect(() => {\n    if (datasetsApiError) {\n      addDangerToast(\n        t('Error loading chart datasources. Filters may not work correctly.'),\n      );\n    } else {\n      dispatch(setDatasources(datasets));\n    }\n  }, [addDangerToast, datasets, datasetsApiError, dispatch]);\n\n  if (error) throw error; // caught in error boundary\n  if (!readyToRender || !isDashboardHydrated.current) return <Loading />;\n\n  return (\n    <>\n      <Global\n        styles={[\n          filterCardPopoverStyle(theme),\n          headerStyles(theme),\n          chartContextMenuStyles(theme),\n        ]}\n      />\n      <DashboardPageIdContext.Provider value={dashboardPageId}>\n        <DashboardContainer />\n      </DashboardPageIdContext.Provider>\n    </>\n  );\n};\n\nexport default DashboardPage;\n"]},"metadata":{},"sourceType":"module"}