{"ast":null,"code":"import { SUPERSET_TABLE_COLUMN } from 'src/components/Table';\nimport { withinRange } from './utils';\nexport default class InteractiveTableUtils {\n\n\n\n\n\n\n\n\n  constructor(tableRef, derivedColumns, setDerivedColumns) {var _this = this;this.tableRef = void 0;this.columnRef = void 0;this.setDerivedColumns = void 0;this.isDragging = void 0;this.resizable = void 0;this.reorderable = void 0;this.derivedColumns = void 0;this.RESIZE_INDICATOR_THRESHOLD = void 0;this.\n\n\n\n\n\n\n\n\n\n    clearListeners = () => {\n      document.removeEventListener('mouseup', this.handleMouseup);\n      this.initializeResizableColumns(false, this.tableRef);\n      this.initializeDragDropColumns(false, this.tableRef);\n    };this.\n    setTableRef = (table) => {\n      this.tableRef = table;\n    };this.\n    getColumnIndex = () => {var _this$columnRef;\n      let index = -1;\n      const parent = (_this$columnRef = this.columnRef) == null ? void 0 : _this$columnRef.parentNode;\n      if (parent) {\n        index = Array.prototype.indexOf.call(parent.children, this.columnRef);\n      }\n      return index;\n    };this.\n    handleColumnDragStart = (ev) => {var _ev$dataTransfer;\n      const target = ev == null ? void 0 : ev.currentTarget;\n      if (target) {\n        this.columnRef = target;\n      }\n      this.isDragging = true;\n      const index = this.getColumnIndex();\n      const columnData = this.derivedColumns[index];\n      const dragData = { index, columnData };\n      ev == null ? void 0 : (_ev$dataTransfer = ev.dataTransfer) == null ? void 0 : _ev$dataTransfer.setData(SUPERSET_TABLE_COLUMN, JSON.stringify(dragData));\n    };this.\n    handleDragDrop = (ev) => {var _ev$dataTransfer2;\n      const data = (_ev$dataTransfer2 = ev.dataTransfer) == null ? void 0 : _ev$dataTransfer2.getData == null ? void 0 : _ev$dataTransfer2.getData(SUPERSET_TABLE_COLUMN);\n      if (data) {var _ev$currentTarget;\n        ev.preventDefault();\n        const parent = (_ev$currentTarget = ev.currentTarget) == null ? void 0 : _ev$currentTarget.\n        parentNode;\n        const dropIndex = Array.prototype.indexOf.call(parent.children, ev.currentTarget);\n        const dragIndex = this.getColumnIndex();\n        const columnsCopy = [...this.derivedColumns];\n        const removedItem = columnsCopy.slice(dragIndex, dragIndex + 1);\n        columnsCopy.splice(dragIndex, 1);\n        columnsCopy.splice(dropIndex, 0, removedItem[0]);\n        this.derivedColumns = [...columnsCopy];\n        this.setDerivedColumns(columnsCopy);\n      }\n    };this.\n    allowDrop = (ev) => {\n      ev.preventDefault();\n    };this.\n    handleMouseDown = (event) => {\n      const target = event == null ? void 0 : event.currentTarget;\n      if (target) {\n        this.columnRef = target;\n        if (event &&\n        withinRange(event.offsetX, target.offsetWidth, this.RESIZE_INDICATOR_THRESHOLD)) {\n          target.mouseDown = true;\n          target.oldX = event.x;\n          target.oldWidth = target.offsetWidth;\n          target.draggable = false;\n        } else\n        if (this.reorderable) {\n          target.draggable = true;\n        }\n      }\n    };this.\n    handleMouseMove = (event) => {\n      if (this.resizable === true && !this.isDragging) {\n        const target = event.currentTarget;\n        if (event &&\n        withinRange(event.offsetX, target.offsetWidth, this.RESIZE_INDICATOR_THRESHOLD)) {\n          target.style.cursor = 'col-resize';\n        } else\n        {\n          target.style.cursor = 'default';\n        }\n        const column = this.columnRef;\n        if (column != null && column.mouseDown) {\n          let width = column.oldWidth;\n          const diff = event.x - column.oldX;\n          if (column.oldWidth + (event.x - column.oldX) > 0) {\n            width = column.oldWidth + diff;\n          }\n          const colIndex = this.getColumnIndex();\n          if (!Number.isNaN(colIndex)) {\n            const columnDef = { ...this.derivedColumns[colIndex] };\n            columnDef.width = width;\n            this.derivedColumns[colIndex] = columnDef;\n            this.setDerivedColumns([...this.derivedColumns]);\n          }\n        }\n      }\n    };this.\n    handleMouseup = () => {\n      if (this.columnRef) {\n        this.columnRef.mouseDown = false;\n        this.columnRef.style.cursor = 'default';\n        this.columnRef.draggable = false;\n      }\n      this.isDragging = false;\n    };this.\n    initializeResizableColumns = function (resizable, table) {var _this$tableRef, _this$tableRef$rows;if (resizable === void 0) {resizable = false;}\n      _this.tableRef = table;\n      const header = (_this$tableRef = _this.tableRef) == null ? void 0 : (_this$tableRef$rows = _this$tableRef.rows) == null ? void 0 : _this$tableRef$rows[0];\n      if (header) {\n        const { cells } = header;\n        const len = cells.length;\n        for (let i = 0; i < len; i += 1) {\n          const cell = cells[i];\n          if (resizable === true) {\n            _this.resizable = true;\n            cell.addEventListener('mousedown', _this.handleMouseDown);\n            cell.addEventListener('mousemove', _this.handleMouseMove, true);\n          } else\n          {\n            _this.resizable = false;\n            cell.removeEventListener('mousedown', _this.handleMouseDown);\n            cell.removeEventListener('mousemove', _this.handleMouseMove, true);\n          }\n        }\n      }\n    };this.\n    initializeDragDropColumns = function (reorderable, table) {var _this$tableRef2, _this$tableRef2$rows;if (reorderable === void 0) {reorderable = false;}\n      _this.tableRef = table;\n      const header = (_this$tableRef2 = _this.tableRef) == null ? void 0 : (_this$tableRef2$rows = _this$tableRef2.rows) == null ? void 0 : _this$tableRef2$rows[0];\n      if (header) {\n        const { cells } = header;\n        const len = cells.length;\n        for (let i = 0; i < len; i += 1) {\n          const cell = cells[i];\n          if (reorderable === true) {\n            _this.reorderable = true;\n            cell.addEventListener('mousedown', _this.handleMouseDown);\n            cell.addEventListener('dragover', _this.allowDrop);\n            cell.addEventListener('dragstart', _this.handleColumnDragStart);\n            cell.addEventListener('drop', _this.handleDragDrop);\n          } else\n          {\n            _this.reorderable = false;\n            cell.draggable = false;\n            cell.removeEventListener('mousedown', _this.handleMouseDown);\n            cell.removeEventListener('dragover', _this.allowDrop);\n            cell.removeEventListener('dragstart', _this.handleColumnDragStart);\n            cell.removeEventListener('drop', _this.handleDragDrop);\n          }\n        }\n      }\n    };this.setDerivedColumns = setDerivedColumns;this.tableRef = tableRef;this.isDragging = false;this.RESIZE_INDICATOR_THRESHOLD = 8;this.resizable = false;this.reorderable = false;this.derivedColumns = [...derivedColumns];document.addEventListener('mouseup', this.handleMouseup);}}","map":{"version":3,"mappings":"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","names":["SUPERSET_TABLE_COLUMN","withinRange","InteractiveTableUtils","constructor","tableRef","derivedColumns","setDerivedColumns","columnRef","isDragging","resizable","reorderable","RESIZE_INDICATOR_THRESHOLD","clearListeners","document","removeEventListener","handleMouseup","initializeResizableColumns","initializeDragDropColumns","setTableRef","table","getColumnIndex","index","parent","parentNode","Array","prototype","indexOf","call","children","handleColumnDragStart","ev","target","currentTarget","columnData","dragData","dataTransfer","setData","JSON","stringify","handleDragDrop","data","getData","preventDefault","dropIndex","dragIndex","columnsCopy","removedItem","slice","splice","allowDrop","handleMouseDown","event","offsetX","offsetWidth","mouseDown","oldX","x","oldWidth","draggable","handleMouseMove","style","cursor","column","width","diff","colIndex","Number","isNaN","columnDef","header","rows","cells","len","length","i","cell","addEventListener"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Table/utils/InteractiveTableUtils.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport type { ColumnsType } from 'antd/es/table';\nimport { SUPERSET_TABLE_COLUMN } from 'src/components/Table';\nimport { withinRange } from './utils';\n\ninterface IInteractiveColumn extends HTMLElement {\n  mouseDown: boolean;\n  oldX: number;\n  oldWidth: number;\n  draggable: boolean;\n}\nexport default class InteractiveTableUtils {\n  tableRef: HTMLTableElement | null;\n\n  columnRef: IInteractiveColumn | null;\n\n  setDerivedColumns: Function;\n\n  isDragging: boolean;\n\n  resizable: boolean;\n\n  reorderable: boolean;\n\n  derivedColumns: ColumnsType<any>;\n\n  RESIZE_INDICATOR_THRESHOLD: number;\n\n  constructor(\n    tableRef: HTMLTableElement,\n    derivedColumns: ColumnsType<any>,\n    setDerivedColumns: Function,\n  ) {\n    this.setDerivedColumns = setDerivedColumns;\n    this.tableRef = tableRef;\n    this.isDragging = false;\n    this.RESIZE_INDICATOR_THRESHOLD = 8;\n    this.resizable = false;\n    this.reorderable = false;\n    this.derivedColumns = [...derivedColumns];\n    document.addEventListener('mouseup', this.handleMouseup);\n  }\n\n  clearListeners = () => {\n    document.removeEventListener('mouseup', this.handleMouseup);\n    this.initializeResizableColumns(false, this.tableRef);\n    this.initializeDragDropColumns(false, this.tableRef);\n  };\n\n  setTableRef = (table: HTMLTableElement) => {\n    this.tableRef = table;\n  };\n\n  getColumnIndex = (): number => {\n    let index = -1;\n    const parent = this.columnRef?.parentNode;\n    if (parent) {\n      index = Array.prototype.indexOf.call(parent.children, this.columnRef);\n    }\n    return index;\n  };\n\n  handleColumnDragStart = (ev: DragEvent): void => {\n    const target = ev?.currentTarget as IInteractiveColumn;\n    if (target) {\n      this.columnRef = target;\n    }\n    this.isDragging = true;\n    const index = this.getColumnIndex();\n    const columnData = this.derivedColumns[index];\n    const dragData = { index, columnData };\n    ev?.dataTransfer?.setData(SUPERSET_TABLE_COLUMN, JSON.stringify(dragData));\n  };\n\n  handleDragDrop = (ev: DragEvent): void => {\n    const data = ev.dataTransfer?.getData?.(SUPERSET_TABLE_COLUMN);\n    if (data) {\n      ev.preventDefault();\n      const parent = (ev.currentTarget as HTMLElement)\n        ?.parentNode as HTMLElement;\n      const dropIndex = Array.prototype.indexOf.call(\n        parent.children,\n        ev.currentTarget,\n      );\n      const dragIndex = this.getColumnIndex();\n      const columnsCopy = [...this.derivedColumns];\n      const removedItem = columnsCopy.slice(dragIndex, dragIndex + 1);\n      columnsCopy.splice(dragIndex, 1);\n      columnsCopy.splice(dropIndex, 0, removedItem[0]);\n      this.derivedColumns = [...columnsCopy];\n      this.setDerivedColumns(columnsCopy);\n    }\n  };\n\n  allowDrop = (ev: DragEvent): void => {\n    ev.preventDefault();\n  };\n\n  handleMouseDown = (event: MouseEvent) => {\n    const target = event?.currentTarget as IInteractiveColumn;\n    if (target) {\n      this.columnRef = target;\n      if (\n        event &&\n        withinRange(\n          event.offsetX,\n          target.offsetWidth,\n          this.RESIZE_INDICATOR_THRESHOLD,\n        )\n      ) {\n        target.mouseDown = true;\n        target.oldX = event.x;\n        target.oldWidth = target.offsetWidth;\n        target.draggable = false;\n      } else if (this.reorderable) {\n        target.draggable = true;\n      }\n    }\n  };\n\n  handleMouseMove = (event: MouseEvent) => {\n    if (this.resizable === true && !this.isDragging) {\n      const target = event.currentTarget as IInteractiveColumn;\n      if (\n        event &&\n        withinRange(\n          event.offsetX,\n          target.offsetWidth,\n          this.RESIZE_INDICATOR_THRESHOLD,\n        )\n      ) {\n        target.style.cursor = 'col-resize';\n      } else {\n        target.style.cursor = 'default';\n      }\n\n      const column = this.columnRef;\n      if (column?.mouseDown) {\n        let width = column.oldWidth;\n        const diff = event.x - column.oldX;\n        if (column.oldWidth + (event.x - column.oldX) > 0) {\n          width = column.oldWidth + diff;\n        }\n        const colIndex = this.getColumnIndex();\n        if (!Number.isNaN(colIndex)) {\n          const columnDef = { ...this.derivedColumns[colIndex] };\n          columnDef.width = width;\n          this.derivedColumns[colIndex] = columnDef;\n          this.setDerivedColumns([...this.derivedColumns]);\n        }\n      }\n    }\n  };\n\n  handleMouseup = () => {\n    if (this.columnRef) {\n      this.columnRef.mouseDown = false;\n      this.columnRef.style.cursor = 'default';\n      this.columnRef.draggable = false;\n    }\n    this.isDragging = false;\n  };\n\n  initializeResizableColumns = (\n    resizable = false,\n    table: HTMLTableElement | null,\n  ) => {\n    this.tableRef = table;\n    const header: HTMLTableRowElement | undefined = this.tableRef?.rows?.[0];\n    if (header) {\n      const { cells } = header;\n      const len = cells.length;\n      for (let i = 0; i < len; i += 1) {\n        const cell = cells[i];\n        if (resizable === true) {\n          this.resizable = true;\n          cell.addEventListener('mousedown', this.handleMouseDown);\n          cell.addEventListener('mousemove', this.handleMouseMove, true);\n        } else {\n          this.resizable = false;\n          cell.removeEventListener('mousedown', this.handleMouseDown);\n          cell.removeEventListener('mousemove', this.handleMouseMove, true);\n        }\n      }\n    }\n  };\n\n  initializeDragDropColumns = (\n    reorderable = false,\n    table: HTMLTableElement | null,\n  ) => {\n    this.tableRef = table;\n    const header: HTMLTableRowElement | undefined = this.tableRef?.rows?.[0];\n    if (header) {\n      const { cells } = header;\n      const len = cells.length;\n      for (let i = 0; i < len; i += 1) {\n        const cell = cells[i];\n        if (reorderable === true) {\n          this.reorderable = true;\n          cell.addEventListener('mousedown', this.handleMouseDown);\n          cell.addEventListener('dragover', this.allowDrop);\n          cell.addEventListener('dragstart', this.handleColumnDragStart);\n          cell.addEventListener('drop', this.handleDragDrop);\n        } else {\n          this.reorderable = false;\n          cell.draggable = false;\n          cell.removeEventListener('mousedown', this.handleMouseDown);\n          cell.removeEventListener('dragover', this.allowDrop);\n          cell.removeEventListener('dragstart', this.handleColumnDragStart);\n          cell.removeEventListener('drop', this.handleDragDrop);\n        }\n      }\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}