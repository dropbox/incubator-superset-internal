{"ast":null,"code":"import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Button from 'src/components/Button';\nimport { t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\nimport { logEvent } from 'src/logger/actions';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { LOG_ACTIONS_DATASET_CREATION_EMPTY_CANCELLATION, LOG_ACTIONS_DATASET_CREATION_DATABASE_CANCELLATION, LOG_ACTIONS_DATASET_CREATION_SCHEMA_CANCELLATION, LOG_ACTIONS_DATASET_CREATION_TABLE_CANCELLATION, LOG_ACTIONS_DATASET_CREATION_SUCCESS } from 'src/logger/LogUtils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst INPUT_FIELDS = ['db', 'schema', 'table_name'];\nconst LOG_ACTIONS = [\nLOG_ACTIONS_DATASET_CREATION_EMPTY_CANCELLATION,\nLOG_ACTIONS_DATASET_CREATION_DATABASE_CANCELLATION,\nLOG_ACTIONS_DATASET_CREATION_SCHEMA_CANCELLATION,\nLOG_ACTIONS_DATASET_CREATION_TABLE_CANCELLATION];\n\nfunction Footer(_ref) {let { datasetObject, addDangerToast, hasColumns = false, datasets } = _ref;\n  const history = useHistory();\n  const { createResource } = useSingleViewResource('dataset', t('dataset'), addDangerToast);\n  const createLogAction = (dataset) => {\n    let totalCount = 0;\n    const value = Object.keys(dataset).reduce((total, key) => {\n      if (_includesInstanceProperty(INPUT_FIELDS).call(INPUT_FIELDS, key) && dataset[key]) {\n        totalCount += 1;\n      }\n      return totalCount;\n    }, 0);\n    return LOG_ACTIONS[value];\n  };\n  const cancelButtonOnClick = () => {\n    if (!datasetObject) {\n      logEvent(LOG_ACTIONS_DATASET_CREATION_EMPTY_CANCELLATION, {});\n    } else\n    {\n      const logAction = createLogAction(datasetObject);\n      logEvent(logAction, datasetObject);\n    }\n    history.goBack();\n  };\n  const tooltipText = t('Select a database table.');\n  const onSave = () => {\n    if (datasetObject) {var _datasetObject$db;\n      const data = {\n        database: (_datasetObject$db = datasetObject.db) == null ? void 0 : _datasetObject$db.id,\n        schema: datasetObject.schema,\n        table_name: datasetObject.table_name };\n\n      createResource(data).then((response) => {\n        if (!response) {\n          return;\n        }\n        if (typeof response === 'number') {\n          logEvent(LOG_ACTIONS_DATASET_CREATION_SUCCESS, datasetObject);\n          // When a dataset is created the response we get is its ID number\n          history.push(`/chart/add/?dataset=${datasetObject.table_name}`);\n        }\n      });\n    }\n  };\n  const CREATE_DATASET_TEXT = t('Create dataset and create chart');\n  const disabledCheck = !(datasetObject != null && datasetObject.table_name) ||\n  !hasColumns || (\n  datasets == null ? void 0 : _includesInstanceProperty(datasets).call(datasets, datasetObject == null ? void 0 : datasetObject.table_name));\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Button, { onClick: cancelButtonOnClick }, t('Cancel')),\n  ___EmotionJSX(Button, { buttonStyle: \"primary\", disabled: disabledCheck, tooltip: !(datasetObject != null && datasetObject.table_name) ? tooltipText : undefined, onClick: onSave },\n  CREATE_DATASET_TEXT));\n\n\n}\nexport default withToasts(Footer);","map":{"version":3,"mappings":"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","names":["React","useHistory","Button","t","useSingleViewResource","logEvent","withToasts","LOG_ACTIONS_DATASET_CREATION_EMPTY_CANCELLATION","LOG_ACTIONS_DATASET_CREATION_DATABASE_CANCELLATION","LOG_ACTIONS_DATASET_CREATION_SCHEMA_CANCELLATION","LOG_ACTIONS_DATASET_CREATION_TABLE_CANCELLATION","LOG_ACTIONS_DATASET_CREATION_SUCCESS","INPUT_FIELDS","LOG_ACTIONS","Footer","datasetObject","addDangerToast","hasColumns","datasets","history","createResource","createLogAction","dataset","totalCount","value","Object","keys","reduce","total","key","cancelButtonOnClick","logAction","goBack","tooltipText","onSave","data","database","db","id","schema","table_name","then","response","push","CREATE_DATASET_TEXT","disabledCheck","undefined"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/features/datasets/AddDataset/Footer/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Button from 'src/components/Button';\nimport { t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\nimport { logEvent } from 'src/logger/actions';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport {\n  LOG_ACTIONS_DATASET_CREATION_EMPTY_CANCELLATION,\n  LOG_ACTIONS_DATASET_CREATION_DATABASE_CANCELLATION,\n  LOG_ACTIONS_DATASET_CREATION_SCHEMA_CANCELLATION,\n  LOG_ACTIONS_DATASET_CREATION_TABLE_CANCELLATION,\n  LOG_ACTIONS_DATASET_CREATION_SUCCESS,\n} from 'src/logger/LogUtils';\nimport { DatasetObject } from '../types';\n\ninterface FooterProps {\n  url: string;\n  addDangerToast: () => void;\n  datasetObject?: Partial<DatasetObject> | null;\n  onDatasetAdd?: (dataset: DatasetObject) => void;\n  hasColumns?: boolean;\n  datasets?: (string | null | undefined)[] | undefined;\n}\n\nconst INPUT_FIELDS = ['db', 'schema', 'table_name'];\nconst LOG_ACTIONS = [\n  LOG_ACTIONS_DATASET_CREATION_EMPTY_CANCELLATION,\n  LOG_ACTIONS_DATASET_CREATION_DATABASE_CANCELLATION,\n  LOG_ACTIONS_DATASET_CREATION_SCHEMA_CANCELLATION,\n  LOG_ACTIONS_DATASET_CREATION_TABLE_CANCELLATION,\n];\n\nfunction Footer({\n  datasetObject,\n  addDangerToast,\n  hasColumns = false,\n  datasets,\n}: FooterProps) {\n  const history = useHistory();\n  const { createResource } = useSingleViewResource<Partial<DatasetObject>>(\n    'dataset',\n    t('dataset'),\n    addDangerToast,\n  );\n\n  const createLogAction = (dataset: Partial<DatasetObject>) => {\n    let totalCount = 0;\n    const value = Object.keys(dataset).reduce((total, key) => {\n      if (INPUT_FIELDS.includes(key) && dataset[key]) {\n        totalCount += 1;\n      }\n      return totalCount;\n    }, 0);\n\n    return LOG_ACTIONS[value];\n  };\n\n  const cancelButtonOnClick = () => {\n    if (!datasetObject) {\n      logEvent(LOG_ACTIONS_DATASET_CREATION_EMPTY_CANCELLATION, {});\n    } else {\n      const logAction = createLogAction(datasetObject);\n      logEvent(logAction, datasetObject);\n    }\n    history.goBack();\n  };\n\n  const tooltipText = t('Select a database table.');\n\n  const onSave = () => {\n    if (datasetObject) {\n      const data = {\n        database: datasetObject.db?.id,\n        schema: datasetObject.schema,\n        table_name: datasetObject.table_name,\n      };\n      createResource(data).then(response => {\n        if (!response) {\n          return;\n        }\n        if (typeof response === 'number') {\n          logEvent(LOG_ACTIONS_DATASET_CREATION_SUCCESS, datasetObject);\n          // When a dataset is created the response we get is its ID number\n          history.push(`/chart/add/?dataset=${datasetObject.table_name}`);\n        }\n      });\n    }\n  };\n\n  const CREATE_DATASET_TEXT = t('Create dataset and create chart');\n  const disabledCheck =\n    !datasetObject?.table_name ||\n    !hasColumns ||\n    datasets?.includes(datasetObject?.table_name);\n\n  return (\n    <>\n      <Button onClick={cancelButtonOnClick}>{t('Cancel')}</Button>\n      <Button\n        buttonStyle=\"primary\"\n        disabled={disabledCheck}\n        tooltip={!datasetObject?.table_name ? tooltipText : undefined}\n        onClick={onSave}\n      >\n        {CREATE_DATASET_TEXT}\n      </Button>\n    </>\n  );\n}\n\nexport default withToasts(Footer);\n"]},"metadata":{},"sourceType":"module"}