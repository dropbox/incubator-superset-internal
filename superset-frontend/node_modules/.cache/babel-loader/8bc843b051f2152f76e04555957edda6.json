{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { getNumberFormatter, t, tn } from '@superset-ui/core';\nimport Label from 'src/components/Label';\nimport { Tooltip } from 'src/components/Tooltip';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function RowCountLabel(props) {\n  const { rowcount = 0, limit, loading } = props;\n  const limitReached = rowcount === limit;\n  const type = limitReached || rowcount === 0 && !loading ? 'danger' : 'default';\n  const formattedRowCount = getNumberFormatter()(rowcount);\n  const label = ___EmotionJSX(Label, { type: type },\n  loading ? t('Loading...') : ___EmotionJSX(\"span\", null,\n  tn('%s row', '%s rows', rowcount, formattedRowCount)));\n\n\n  return limitReached ? ___EmotionJSX(Tooltip, { id: \"tt-rowcount-tooltip\", title: ___EmotionJSX(\"span\", null, t('Limit reached')) },\n  label) :\n  label;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,EAA6BC,CAA7B,EAAgCC,EAAhC,QAA0C,mBAA1C;AAEA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,OAAT,QAAwB,wBAAxB,C;AAQA,eAAc,SAAUC,aAAV,CAAwBC,KAAxB,EAAiD;EAC7D,MAAM,EAAEC,QAAQ,GAAG,CAAb,EAAgBC,KAAhB,EAAuBC,OAAvB,KAAmCH,KAAzC;EACA,MAAMI,YAAY,GAAGH,QAAQ,KAAKC,KAAlC;EACA,MAAMG,IAAI,GACRD,YAAY,IAAKH,QAAQ,KAAK,CAAb,IAAkB,CAACE,OAApC,GAA+C,QAA/C,GAA0D,SAD5D;EAEA,MAAMG,iBAAiB,GAAGZ,kBAAkB,GAAGO,QAAH,CAA5C;EACA,MAAMM,KAAK,GACT,cAAC,KAAD,IAAO,IAAI,EAAEF,IAAb;EACGF,OAAO,GACNR,CAAC,CAAC,YAAD,CADK,GAGN;EACGC,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsBK,QAAtB,EAAgCK,iBAAhC,CADL,CAJJ,CADF;;;EAWA,OAAOF,YAAY,GACjB,cAAC,OAAD,IAAS,EAAE,EAAC,qBAAZ,EAAkC,KAAK,EAAE,4BAAOT,CAAC,CAAC,eAAD,CAAR,CAAzC;EACGY,KADH,CADiB;EAKjBA,KALF;AAOD","names":["React","getNumberFormatter","t","tn","Label","Tooltip","RowCountLabel","props","rowcount","limit","loading","limitReached","type","formattedRowCount","label"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/explore/components/RowCountLabel/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { getNumberFormatter, t, tn } from '@superset-ui/core';\n\nimport Label from 'src/components/Label';\nimport { Tooltip } from 'src/components/Tooltip';\n\ntype RowCountLabelProps = {\n  rowcount?: number;\n  limit?: number;\n  loading?: boolean;\n};\n\nexport default function RowCountLabel(props: RowCountLabelProps) {\n  const { rowcount = 0, limit, loading } = props;\n  const limitReached = rowcount === limit;\n  const type =\n    limitReached || (rowcount === 0 && !loading) ? 'danger' : 'default';\n  const formattedRowCount = getNumberFormatter()(rowcount);\n  const label = (\n    <Label type={type}>\n      {loading ? (\n        t('Loading...')\n      ) : (\n        <span data-test=\"row-count-label\">\n          {tn('%s row', '%s rows', rowcount, formattedRowCount)}\n        </span>\n      )}\n    </Label>\n  );\n  return limitReached ? (\n    <Tooltip id=\"tt-rowcount-tooltip\" title={<span>{t('Limit reached')}</span>}>\n      {label}\n    </Tooltip>\n  ) : (\n    label\n  );\n}\n\nexport type { RowCountLabelProps };\n"]},"metadata":{},"sourceType":"module"}