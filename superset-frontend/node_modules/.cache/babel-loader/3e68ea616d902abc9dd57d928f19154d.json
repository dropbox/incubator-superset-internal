{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SET_FILTER_CONFIG_COMPLETE, SET_IN_SCOPE_STATUS_OF_FILTERS, SET_FILTER_SETS_COMPLETE, SET_FOCUSED_NATIVE_FILTER, UNSET_FOCUSED_NATIVE_FILTER, SET_HOVERED_NATIVE_FILTER, UNSET_HOVERED_NATIVE_FILTER, UPDATE_CASCADE_PARENT_IDS } from 'src/dashboard/actions/nativeFilters';\nimport { HYDRATE_DASHBOARD } from '../actions/hydrate';\nexport function getInitialState(_ref) {let { filterSetsConfig, filterConfig, state: prevState } = _ref;\n  const state = {};\n  const filters = {};\n  if (filterConfig) {\n    filterConfig.forEach((filter) => {\n      const { id } = filter;\n      filters[id] = filter;\n    });\n    state.filters = filters;\n  } else\n  {var _prevState$filters;\n    state.filters = (_prevState$filters = prevState == null ? void 0 : prevState.filters) != null ? _prevState$filters : {};\n  }\n  if (filterSetsConfig) {\n    const filterSets = {};\n    filterSetsConfig.forEach((filtersSet) => {\n      const { id } = filtersSet;\n      filterSets[id] = filtersSet;\n    });\n    state.filterSets = filterSets;\n  } else\n  {var _prevState$filterSets;\n    state.filterSets = (_prevState$filterSets = prevState == null ? void 0 : prevState.filterSets) != null ? _prevState$filterSets : {};\n  }\n  state.focusedFilterId = undefined;\n  return state;\n}\nexport default function nativeFilterReducer(state,\n\n\naction) {if (state === void 0) {state = { filters: {}, filterSets: {} };}\n  switch (action.type) {\n    case HYDRATE_DASHBOARD:\n      return {\n        filters: action.data.nativeFilters.filters,\n        filterSets: action.data.nativeFilters.filterSets };\n\n    case SET_FILTER_CONFIG_COMPLETE:\n    case SET_IN_SCOPE_STATUS_OF_FILTERS:\n      return getInitialState({ filterConfig: action.filterConfig, state });\n    case SET_FILTER_SETS_COMPLETE:\n      return getInitialState({\n        filterSetsConfig: action.filterSets,\n        state });\n\n    case SET_FOCUSED_NATIVE_FILTER:\n      return {\n        ...state,\n        focusedFilterId: action.id };\n\n    case UNSET_FOCUSED_NATIVE_FILTER:\n      return {\n        ...state,\n        focusedFilterId: undefined };\n\n    case SET_HOVERED_NATIVE_FILTER:\n      return {\n        ...state,\n        hoveredFilterId: action.id };\n\n    case UNSET_HOVERED_NATIVE_FILTER:\n      return {\n        ...state,\n        hoveredFilterId: undefined };\n\n    case UPDATE_CASCADE_PARENT_IDS:\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [action.id]: {\n            ...state.filters[action.id],\n            cascadeParentIds: action.parentIds } } };\n\n\n\n    // TODO handle SET_FILTER_CONFIG_FAIL action\n    default:\n      return state;}\n\n}","map":{"version":3,"mappings":"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","names":["SET_FILTER_CONFIG_COMPLETE","SET_IN_SCOPE_STATUS_OF_FILTERS","SET_FILTER_SETS_COMPLETE","SET_FOCUSED_NATIVE_FILTER","UNSET_FOCUSED_NATIVE_FILTER","SET_HOVERED_NATIVE_FILTER","UNSET_HOVERED_NATIVE_FILTER","UPDATE_CASCADE_PARENT_IDS","HYDRATE_DASHBOARD","getInitialState","filterSetsConfig","filterConfig","state","prevState","filters","forEach","id","filter","filterSets","filtersSet","focusedFilterId","undefined","nativeFilterReducer","action","type","data","nativeFilters","hoveredFilterId","cascadeParentIds","parentIds"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/reducers/nativeFilters.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  AnyFilterAction,\n  SET_FILTER_CONFIG_COMPLETE,\n  SET_IN_SCOPE_STATUS_OF_FILTERS,\n  SET_FILTER_SETS_COMPLETE,\n  SET_FOCUSED_NATIVE_FILTER,\n  UNSET_FOCUSED_NATIVE_FILTER,\n  SET_HOVERED_NATIVE_FILTER,\n  UNSET_HOVERED_NATIVE_FILTER,\n  UPDATE_CASCADE_PARENT_IDS,\n} from 'src/dashboard/actions/nativeFilters';\nimport {\n  FilterSet,\n  FilterConfiguration,\n  NativeFiltersState,\n} from '@superset-ui/core';\nimport { HYDRATE_DASHBOARD } from '../actions/hydrate';\n\nexport function getInitialState({\n  filterSetsConfig,\n  filterConfig,\n  state: prevState,\n}: {\n  filterSetsConfig?: FilterSet[];\n  filterConfig?: FilterConfiguration;\n  state?: NativeFiltersState;\n}): NativeFiltersState {\n  const state: Partial<NativeFiltersState> = {};\n\n  const filters = {};\n  if (filterConfig) {\n    filterConfig.forEach(filter => {\n      const { id } = filter;\n      filters[id] = filter;\n    });\n    state.filters = filters;\n  } else {\n    state.filters = prevState?.filters ?? {};\n  }\n\n  if (filterSetsConfig) {\n    const filterSets = {};\n    filterSetsConfig.forEach(filtersSet => {\n      const { id } = filtersSet;\n      filterSets[id] = filtersSet;\n    });\n    state.filterSets = filterSets;\n  } else {\n    state.filterSets = prevState?.filterSets ?? {};\n  }\n  state.focusedFilterId = undefined;\n  return state as NativeFiltersState;\n}\n\nexport default function nativeFilterReducer(\n  state: NativeFiltersState = {\n    filters: {},\n    filterSets: {},\n  },\n  action: AnyFilterAction,\n) {\n  switch (action.type) {\n    case HYDRATE_DASHBOARD:\n      return {\n        filters: action.data.nativeFilters.filters,\n        filterSets: action.data.nativeFilters.filterSets,\n      };\n\n    case SET_FILTER_CONFIG_COMPLETE:\n    case SET_IN_SCOPE_STATUS_OF_FILTERS:\n      return getInitialState({ filterConfig: action.filterConfig, state });\n\n    case SET_FILTER_SETS_COMPLETE:\n      return getInitialState({\n        filterSetsConfig: action.filterSets,\n        state,\n      });\n\n    case SET_FOCUSED_NATIVE_FILTER:\n      return {\n        ...state,\n        focusedFilterId: action.id,\n      };\n\n    case UNSET_FOCUSED_NATIVE_FILTER:\n      return {\n        ...state,\n        focusedFilterId: undefined,\n      };\n\n    case SET_HOVERED_NATIVE_FILTER:\n      return {\n        ...state,\n        hoveredFilterId: action.id,\n      };\n\n    case UNSET_HOVERED_NATIVE_FILTER:\n      return {\n        ...state,\n        hoveredFilterId: undefined,\n      };\n\n    case UPDATE_CASCADE_PARENT_IDS:\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [action.id]: {\n            ...state.filters[action.id],\n            cascadeParentIds: action.parentIds,\n          },\n        },\n      };\n    // TODO handle SET_FILTER_CONFIG_FAIL action\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}