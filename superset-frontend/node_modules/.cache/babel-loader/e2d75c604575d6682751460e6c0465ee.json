{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Behavior, ChartMetadata, ChartPlugin, t } from '@superset-ui/core';\nimport transformProps from './transformProps';\nimport thumbnail from './images/thumbnail.png';\nimport example1 from './images/Table.jpg';\nimport example2 from './images/Table2.jpg';\nimport example3 from './images/Table3.jpg';\nimport controlPanel from './controlPanel';\nimport buildQuery from './buildQuery';\n// must export something for the module to be exist in dev mode\nexport { default as __hack__ } from './types';\nexport * from './types';\nconst metadata = new ChartMetadata({\n  behaviors: [\n  Behavior.INTERACTIVE_CHART,\n  Behavior.DRILL_TO_DETAIL,\n  Behavior.DRILL_BY],\n\n  category: t('Table'),\n  canBeAnnotationTypes: ['EVENT', 'INTERVAL'],\n  description: t('Classic row-by-column spreadsheet like view of a dataset. Use tables to showcase a view into the underlying data or to show aggregated metrics.'),\n  exampleGallery: [{ url: example1 }, { url: example2 }, { url: example3 }],\n  name: t('Table'),\n  tags: [\n  t('Additive'),\n  t('Business'),\n  t('Pattern'),\n  t('Popular'),\n  t('Report'),\n  t('Sequential'),\n  t('Tabular'),\n  t('Description')],\n\n  thumbnail });\n\nexport default class TableChartPlugin extends ChartPlugin {\n  constructor() {\n    super({\n      loadChart: () => import('./TableChart'),\n      metadata,\n      transformProps,\n      controlPanel,\n      buildQuery });\n\n  }}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,WAAlC,EAA+CC,CAA/C,QAAwD,mBAAxD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAGA;AACA,SAASC,OAAO,IAAIC,QAApB,QAAoC,SAApC;AACA,cAAc,SAAd;AAEA,MAAMC,QAAQ,GAAG,IAAIZ,aAAJ,CAAkB;EACjCa,SAAS,EAAE;EACTd,QAAQ,CAACe,iBADA;EAETf,QAAQ,CAACgB,eAFA;EAGThB,QAAQ,CAACiB,QAHA,CADsB;;EAMjCC,QAAQ,EAAEf,CAAC,CAAC,OAAD,CANsB;EAOjCgB,oBAAoB,EAAE,CAAC,OAAD,EAAU,UAAV,CAPW;EAQjCC,WAAW,EAAEjB,CAAC,CACZ,iJADY,CARmB;EAWjCkB,cAAc,EAAE,CAAC,EAAEC,GAAG,EAAEhB,QAAP,EAAD,EAAoB,EAAEgB,GAAG,EAAEf,QAAP,EAApB,EAAuC,EAAEe,GAAG,EAAEd,QAAP,EAAvC,CAXiB;EAYjCe,IAAI,EAAEpB,CAAC,CAAC,OAAD,CAZ0B;EAajCqB,IAAI,EAAE;EACJrB,CAAC,CAAC,UAAD,CADG;EAEJA,CAAC,CAAC,UAAD,CAFG;EAGJA,CAAC,CAAC,SAAD,CAHG;EAIJA,CAAC,CAAC,SAAD,CAJG;EAKJA,CAAC,CAAC,QAAD,CALG;EAMJA,CAAC,CAAC,YAAD,CANG;EAOJA,CAAC,CAAC,SAAD,CAPG;EAQJA,CAAC,CAAC,aAAD,CARG,CAb2B;;EAuBjCE,SAvBiC,EAAlB,CAAjB;;AA0BA,eAAc,MAAOoB,gBAAP,SAAgCvB,WAAhC,CAGb;EACCwB;IACE,MAAM;MACJC,SAAS,EAAE,MAAM,OAAO,cAAP,CADb;MAEJd,QAFI;MAGJT,cAHI;MAIJK,YAJI;MAKJC,UALI,EAAN;;EAOD,CATF","names":["Behavior","ChartMetadata","ChartPlugin","t","transformProps","thumbnail","example1","example2","example3","controlPanel","buildQuery","default","__hack__","metadata","behaviors","INTERACTIVE_CHART","DRILL_TO_DETAIL","DRILL_BY","category","canBeAnnotationTypes","description","exampleGallery","url","name","tags","TableChartPlugin","constructor","loadChart"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/plugin-chart-table/src/index.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Behavior, ChartMetadata, ChartPlugin, t } from '@superset-ui/core';\nimport transformProps from './transformProps';\nimport thumbnail from './images/thumbnail.png';\nimport example1 from './images/Table.jpg';\nimport example2 from './images/Table2.jpg';\nimport example3 from './images/Table3.jpg';\nimport controlPanel from './controlPanel';\nimport buildQuery from './buildQuery';\nimport { TableChartFormData, TableChartProps } from './types';\n\n// must export something for the module to be exist in dev mode\nexport { default as __hack__ } from './types';\nexport * from './types';\n\nconst metadata = new ChartMetadata({\n  behaviors: [\n    Behavior.INTERACTIVE_CHART,\n    Behavior.DRILL_TO_DETAIL,\n    Behavior.DRILL_BY,\n  ],\n  category: t('Table'),\n  canBeAnnotationTypes: ['EVENT', 'INTERVAL'],\n  description: t(\n    'Classic row-by-column spreadsheet like view of a dataset. Use tables to showcase a view into the underlying data or to show aggregated metrics.',\n  ),\n  exampleGallery: [{ url: example1 }, { url: example2 }, { url: example3 }],\n  name: t('Table'),\n  tags: [\n    t('Additive'),\n    t('Business'),\n    t('Pattern'),\n    t('Popular'),\n    t('Report'),\n    t('Sequential'),\n    t('Tabular'),\n    t('Description'),\n  ],\n  thumbnail,\n});\n\nexport default class TableChartPlugin extends ChartPlugin<\n  TableChartFormData,\n  TableChartProps\n> {\n  constructor() {\n    super({\n      loadChart: () => import('./TableChart'),\n      metadata,\n      transformProps,\n      controlPanel,\n      buildQuery,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}