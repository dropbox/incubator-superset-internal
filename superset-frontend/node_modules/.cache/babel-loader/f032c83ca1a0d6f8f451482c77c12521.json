{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { styled, SupersetClient, t, useTheme } from '@superset-ui/core';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport sql from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport { LoadingCards } from 'src/pages/Home';\nimport { TableTab } from 'src/views/CRUD/types';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { AntdDropdown } from 'src/components';\nimport { Menu } from 'src/components/Menu';\nimport { copyQueryLink, useListViewResource } from 'src/views/CRUD/hooks';\nimport ListViewCard from 'src/components/ListViewCard';\nimport DeleteModal from 'src/components/DeleteModal';\nimport Icons from 'src/components/Icons';\nimport { CardContainer, createErrorHandler, getFilterValues, PAGE_SIZE, shortenSQL } from 'src/views/CRUD/utils';\nimport SubMenu from './SubMenu';\nimport EmptyState from './EmptyState';\nimport { WelcomeTable } from './types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nSyntaxHighlighter.registerLanguage('sql', sql);\nexport const CardStyles = styled.div`\n  cursor: pointer;\n  a {\n    text-decoration: none;\n  }\n  .ant-card-cover {\n    border-bottom: 1px solid ${(_ref) => {let { theme } = _ref;return theme.colors.grayscale.light2;}};\n    & > div {\n      height: 171px;\n    }\n  }\n  .gradient-container > div {\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-color: ${(_ref2) => {let { theme } = _ref2;return theme.colors.secondary.light3;}};\n    display: inline-block;\n    width: 100%;\n    height: 179px;\n    background-repeat: no-repeat;\n    vertical-align: middle;\n  }\n`;\nconst QueryData = styled.div`\n  svg {\n    margin-left: ${(_ref3) => {let { theme } = _ref3;return theme.gridUnit * 10;}}px;\n  }\n  .query-title {\n    padding: ${(_ref4) => {let { theme } = _ref4;return theme.gridUnit * 2 + 2;}}px;\n    font-size: ${(_ref5) => {let { theme } = _ref5;return theme.typography.sizes.l;}}px;\n  }\n`;\nconst QueryContainer = styled.div`\n  pre {\n    height: ${(_ref6) => {let { theme } = _ref6;return theme.gridUnit * 40;}}px;\n    border: none !important;\n    background-color: ${(_ref7) => {let { theme } = _ref7;return theme.colors.grayscale.light5;}} !important;\n    overflow: hidden;\n    padding: ${(_ref8) => {let { theme } = _ref8;return theme.gridUnit * 4;}}px !important;\n  }\n`;\nconst SavedQueries = (_ref9) => {let { user, addDangerToast, addSuccessToast, mine, showThumbnails, featureFlag } = _ref9;\n  const { state: { loading, resourceCollection: queries }, hasPerm, fetchData, refreshData } = useListViewResource('saved_query', t('query'), addDangerToast, true, mine, [], false);\n  const [activeTab, setActiveTab] = useState(TableTab.Mine);\n  const [queryDeleteModal, setQueryDeleteModal] = useState(false);\n  const [currentlyEdited, setCurrentlyEdited] = useState({});\n  const [ifMine, setMine] = useState(true);\n  const canEdit = hasPerm('can_edit');\n  const canDelete = hasPerm('can_delete');\n  const theme = useTheme();\n  const handleQueryDelete = (_ref10) => {let { id, label } = _ref10;\n    SupersetClient.delete({\n      endpoint: `/api/v1/saved_query/${id}` }).\n    then(() => {\n      const queryParams = {\n        filters: getFilterValues(TableTab.Created, WelcomeTable.SavedQueries, user),\n        pageSize: PAGE_SIZE,\n        sortBy: [\n        {\n          id: 'changed_on_delta_humanized',\n          desc: true }],\n\n\n        pageIndex: 0 };\n\n      // if mine is default there refresh data with current filters\n      const filter = ifMine ? queryParams : undefined;\n      refreshData(filter);\n      setMine(false);\n      setQueryDeleteModal(false);\n      addSuccessToast(t('Deleted: %s', label));\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting %s: %s', label, errMsg))));\n  };\n  const getData = (tab) => fetchData({\n    pageIndex: 0,\n    pageSize: PAGE_SIZE,\n    sortBy: [\n    {\n      id: 'changed_on_delta_humanized',\n      desc: true }],\n\n\n    filters: getFilterValues(tab, WelcomeTable.SavedQueries, user) });\n\n  const renderMenu = (query) => ___EmotionJSX(Menu, null,\n  canEdit && ___EmotionJSX(Menu.Item, { onClick: () => {\n      window.location.href = `/superset/sqllab?savedQueryId=${query.id}`;\n    } },\n  t('Edit')),\n\n  ___EmotionJSX(Menu.Item, { onClick: () => {\n      if (query.id) {\n        copyQueryLink(query.id, addDangerToast, addSuccessToast);\n      }\n    } },\n  t('Share')),\n\n  canDelete && ___EmotionJSX(Menu.Item, { onClick: () => {\n      setQueryDeleteModal(true);\n      setCurrentlyEdited(query);\n    } },\n  t('Delete')));\n\n\n  if (loading)\n  return ___EmotionJSX(LoadingCards, { cover: showThumbnails });\n  return ___EmotionJSX(React.Fragment, null,\n  queryDeleteModal && ___EmotionJSX(DeleteModal, { description: t('This action will permanently delete the saved query.'), onConfirm: () => {\n      if (queryDeleteModal) {\n        handleQueryDelete(currentlyEdited);\n      }\n    }, onHide: () => {\n      setQueryDeleteModal(false);\n    }, open: true, title: t('Delete Query?') }),\n  ___EmotionJSX(SubMenu, { activeChild: activeTab, tabs: [\n    {\n      name: TableTab.Mine,\n      label: t('Mine'),\n      onClick: () => getData(TableTab.Mine).then(() => setActiveTab(TableTab.Mine)) }],\n\n    buttons: [\n    {\n      name: ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }),\n      t('SQL Query')),\n\n      buttonStyle: 'tertiary',\n      onClick: () => {\n        window.location.href = '/superset/sqllab?new=true';\n      } },\n\n    {\n      name: t('View All Â»'),\n      buttonStyle: 'link',\n      onClick: () => {\n        window.location.href = '/savedqueryview/list';\n      } }] }),\n\n\n  queries.length > 0 ? ___EmotionJSX(CardContainer, { showThumbnails: showThumbnails },\n  queries.map((q) => {var _q$sql, _q$sql2;return ___EmotionJSX(CardStyles, { onClick: () => {\n        window.location.href = `/superset/sqllab?savedQueryId=${q.id}`;\n      }, key: q.id },\n    ___EmotionJSX(ListViewCard, { imgURL: \"\", url: `/superset/sqllab?savedQueryId=${q.id}`, title: q.label, imgFallbackURL: \"/static/assets/images/empty-query.svg\", description: t('Ran %s', q.changed_on_delta_humanized), cover: q != null && (_q$sql = q.sql) != null && _q$sql.length && showThumbnails && featureFlag ? ___EmotionJSX(QueryContainer, null,\n      ___EmotionJSX(SyntaxHighlighter, { language: \"sql\", lineProps: {\n          style: {\n            color: theme.colors.grayscale.dark2,\n            wordBreak: 'break-all',\n            whiteSpace: 'pre-wrap' } },\n\n        style: github, wrapLines: true, lineNumberStyle: {\n          display: 'none' },\n        showLineNumbers: false },\n      shortenSQL(q.sql, 25))) :\n\n      showThumbnails && !(q != null && (_q$sql2 = q.sql) != null && _q$sql2.length) ? false : ___EmotionJSX(React.Fragment, null), actions: ___EmotionJSX(QueryData, null,\n      ___EmotionJSX(ListViewCard.Actions, { onClick: (e) => {\n          e.stopPropagation();\n          e.preventDefault();\n        } },\n      ___EmotionJSX(AntdDropdown, { overlay: renderMenu(q) },\n      ___EmotionJSX(Icons.MoreVert, { iconColor: theme.colors.grayscale.base })))) }));})) :\n\n\n\n\n  ___EmotionJSX(EmptyState, { tableName: WelcomeTable.SavedQueries, tab: activeTab }));\n\n};\nexport default withToasts(SavedQueries);","map":{"version":3,"mappings":"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","names":["React","useState","styled","SupersetClient","t","useTheme","SyntaxHighlighter","sql","github","LoadingCards","TableTab","withToasts","AntdDropdown","Menu","copyQueryLink","useListViewResource","ListViewCard","DeleteModal","Icons","CardContainer","createErrorHandler","getFilterValues","PAGE_SIZE","shortenSQL","SubMenu","EmptyState","WelcomeTable","registerLanguage","CardStyles","div","theme","colors","grayscale","light2","secondary","light3","QueryData","gridUnit","typography","sizes","l","QueryContainer","light5","SavedQueries","user","addDangerToast","addSuccessToast","mine","showThumbnails","featureFlag","state","loading","resourceCollection","queries","hasPerm","fetchData","refreshData","activeTab","setActiveTab","Mine","queryDeleteModal","setQueryDeleteModal","currentlyEdited","setCurrentlyEdited","ifMine","setMine","canEdit","canDelete","handleQueryDelete","id","label","delete","endpoint","then","queryParams","filters","Created","pageSize","sortBy","desc","pageIndex","filter","undefined","errMsg","getData","tab","renderMenu","query","window","location","href","name","onClick","buttonStyle","length","map","q","changed_on_delta_humanized","style","color","dark2","wordBreak","whiteSpace","display","e","stopPropagation","preventDefault","base"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/home/SavedQueries.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { styled, SupersetClient, t, useTheme } from '@superset-ui/core';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport sql from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport { LoadingCards } from 'src/pages/Home';\nimport { TableTab } from 'src/views/CRUD/types';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { AntdDropdown } from 'src/components';\nimport { Menu } from 'src/components/Menu';\nimport { copyQueryLink, useListViewResource } from 'src/views/CRUD/hooks';\nimport ListViewCard from 'src/components/ListViewCard';\nimport DeleteModal from 'src/components/DeleteModal';\nimport Icons from 'src/components/Icons';\nimport { User } from 'src/types/bootstrapTypes';\nimport {\n  CardContainer,\n  createErrorHandler,\n  getFilterValues,\n  PAGE_SIZE,\n  shortenSQL,\n} from 'src/views/CRUD/utils';\nimport SubMenu from './SubMenu';\nimport EmptyState from './EmptyState';\nimport { WelcomeTable } from './types';\n\nSyntaxHighlighter.registerLanguage('sql', sql);\n\ninterface Query {\n  id?: number;\n  sql_tables?: Array<any>;\n  database?: {\n    database_name: string;\n  };\n  rows?: string;\n  description?: string;\n  end_time?: string;\n  label?: string;\n  changed_on_delta_humanized?: string;\n  sql?: string | null;\n}\n\ninterface SavedQueriesProps {\n  user: User;\n  queryFilter: string;\n  addDangerToast: (arg0: string) => void;\n  addSuccessToast: (arg0: string) => void;\n  mine: Array<Query>;\n  showThumbnails: boolean;\n  featureFlag: boolean;\n}\n\nexport const CardStyles = styled.div`\n  cursor: pointer;\n  a {\n    text-decoration: none;\n  }\n  .ant-card-cover {\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    & > div {\n      height: 171px;\n    }\n  }\n  .gradient-container > div {\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-color: ${({ theme }) => theme.colors.secondary.light3};\n    display: inline-block;\n    width: 100%;\n    height: 179px;\n    background-repeat: no-repeat;\n    vertical-align: middle;\n  }\n`;\n\nconst QueryData = styled.div`\n  svg {\n    margin-left: ${({ theme }) => theme.gridUnit * 10}px;\n  }\n  .query-title {\n    padding: ${({ theme }) => theme.gridUnit * 2 + 2}px;\n    font-size: ${({ theme }) => theme.typography.sizes.l}px;\n  }\n`;\n\nconst QueryContainer = styled.div`\n  pre {\n    height: ${({ theme }) => theme.gridUnit * 40}px;\n    border: none !important;\n    background-color: ${({ theme }) =>\n      theme.colors.grayscale.light5} !important;\n    overflow: hidden;\n    padding: ${({ theme }) => theme.gridUnit * 4}px !important;\n  }\n`;\n\nconst SavedQueries = ({\n  user,\n  addDangerToast,\n  addSuccessToast,\n  mine,\n  showThumbnails,\n  featureFlag,\n}: SavedQueriesProps) => {\n  const {\n    state: { loading, resourceCollection: queries },\n    hasPerm,\n    fetchData,\n    refreshData,\n  } = useListViewResource<Query>(\n    'saved_query',\n    t('query'),\n    addDangerToast,\n    true,\n    mine,\n    [],\n    false,\n  );\n  const [activeTab, setActiveTab] = useState(TableTab.Mine);\n  const [queryDeleteModal, setQueryDeleteModal] = useState(false);\n  const [currentlyEdited, setCurrentlyEdited] = useState<Query>({});\n  const [ifMine, setMine] = useState(true);\n  const canEdit = hasPerm('can_edit');\n  const canDelete = hasPerm('can_delete');\n\n  const theme = useTheme();\n\n  const handleQueryDelete = ({ id, label }: Query) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/saved_query/${id}`,\n    }).then(\n      () => {\n        const queryParams = {\n          filters: getFilterValues(\n            TableTab.Created,\n            WelcomeTable.SavedQueries,\n            user,\n          ),\n          pageSize: PAGE_SIZE,\n          sortBy: [\n            {\n              id: 'changed_on_delta_humanized',\n              desc: true,\n            },\n          ],\n          pageIndex: 0,\n        };\n        // if mine is default there refresh data with current filters\n        const filter = ifMine ? queryParams : undefined;\n        refreshData(filter);\n        setMine(false);\n        setQueryDeleteModal(false);\n        addSuccessToast(t('Deleted: %s', label));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', label, errMsg)),\n      ),\n    );\n  };\n\n  const getData = (tab: TableTab) =>\n    fetchData({\n      pageIndex: 0,\n      pageSize: PAGE_SIZE,\n      sortBy: [\n        {\n          id: 'changed_on_delta_humanized',\n          desc: true,\n        },\n      ],\n      filters: getFilterValues(tab, WelcomeTable.SavedQueries, user),\n    });\n\n  const renderMenu = (query: Query) => (\n    <Menu>\n      {canEdit && (\n        <Menu.Item\n          onClick={() => {\n            window.location.href = `/superset/sqllab?savedQueryId=${query.id}`;\n          }}\n        >\n          {t('Edit')}\n        </Menu.Item>\n      )}\n      <Menu.Item\n        onClick={() => {\n          if (query.id) {\n            copyQueryLink(query.id, addDangerToast, addSuccessToast);\n          }\n        }}\n      >\n        {t('Share')}\n      </Menu.Item>\n      {canDelete && (\n        <Menu.Item\n          onClick={() => {\n            setQueryDeleteModal(true);\n            setCurrentlyEdited(query);\n          }}\n        >\n          {t('Delete')}\n        </Menu.Item>\n      )}\n    </Menu>\n  );\n\n  if (loading) return <LoadingCards cover={showThumbnails} />;\n  return (\n    <>\n      {queryDeleteModal && (\n        <DeleteModal\n          description={t(\n            'This action will permanently delete the saved query.',\n          )}\n          onConfirm={() => {\n            if (queryDeleteModal) {\n              handleQueryDelete(currentlyEdited);\n            }\n          }}\n          onHide={() => {\n            setQueryDeleteModal(false);\n          }}\n          open\n          title={t('Delete Query?')}\n        />\n      )}\n      <SubMenu\n        activeChild={activeTab}\n        tabs={[\n          {\n            name: TableTab.Mine,\n            label: t('Mine'),\n            onClick: () =>\n              getData(TableTab.Mine).then(() => setActiveTab(TableTab.Mine)),\n          },\n        ]}\n        buttons={[\n          {\n            name: (\n              <>\n                <i className=\"fa fa-plus\" />\n                {t('SQL Query')}\n              </>\n            ),\n            buttonStyle: 'tertiary',\n            onClick: () => {\n              window.location.href = '/superset/sqllab?new=true';\n            },\n          },\n          {\n            name: t('View All Â»'),\n            buttonStyle: 'link',\n            onClick: () => {\n              window.location.href = '/savedqueryview/list';\n            },\n          },\n        ]}\n      />\n      {queries.length > 0 ? (\n        <CardContainer showThumbnails={showThumbnails}>\n          {queries.map(q => (\n            <CardStyles\n              onClick={() => {\n                window.location.href = `/superset/sqllab?savedQueryId=${q.id}`;\n              }}\n              key={q.id}\n            >\n              <ListViewCard\n                imgURL=\"\"\n                url={`/superset/sqllab?savedQueryId=${q.id}`}\n                title={q.label}\n                imgFallbackURL=\"/static/assets/images/empty-query.svg\"\n                description={t('Ran %s', q.changed_on_delta_humanized)}\n                cover={\n                  q?.sql?.length && showThumbnails && featureFlag ? (\n                    <QueryContainer>\n                      <SyntaxHighlighter\n                        language=\"sql\"\n                        lineProps={{\n                          style: {\n                            color: theme.colors.grayscale.dark2,\n                            wordBreak: 'break-all',\n                            whiteSpace: 'pre-wrap',\n                          },\n                        }}\n                        style={github}\n                        wrapLines\n                        lineNumberStyle={{\n                          display: 'none',\n                        }}\n                        showLineNumbers={false}\n                      >\n                        {shortenSQL(q.sql, 25)}\n                      </SyntaxHighlighter>\n                    </QueryContainer>\n                  ) : showThumbnails && !q?.sql?.length ? (\n                    false\n                  ) : (\n                    <></>\n                  )\n                }\n                actions={\n                  <QueryData>\n                    <ListViewCard.Actions\n                      onClick={e => {\n                        e.stopPropagation();\n                        e.preventDefault();\n                      }}\n                    >\n                      <AntdDropdown overlay={renderMenu(q)}>\n                        <Icons.MoreVert\n                          iconColor={theme.colors.grayscale.base}\n                        />\n                      </AntdDropdown>\n                    </ListViewCard.Actions>\n                  </QueryData>\n                }\n              />\n            </CardStyles>\n          ))}\n        </CardContainer>\n      ) : (\n        <EmptyState tableName={WelcomeTable.SavedQueries} tab={activeTab} />\n      )}\n    </>\n  );\n};\n\nexport default withToasts(SavedQueries);\n"]},"metadata":{},"sourceType":"module"}