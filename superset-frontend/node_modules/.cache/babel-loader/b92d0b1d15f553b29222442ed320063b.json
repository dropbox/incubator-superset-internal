{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useCallback, useRef } from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\nexport default function useResizeDetectorByObserver() {\n  const ref = useRef();\n  const [{ width, height }, setChartPanelSize] = useState({});\n  const onResize = useCallback(() => {\n    if (ref.current) {\n      const { width, height } = (ref.current.getBoundingClientRect == null ? void 0 : ref.current.getBoundingClientRect()) || {};\n      setChartPanelSize({ width, height });\n    }\n  }, []);\n  const { ref: observerRef } = useResizeDetector({\n    refreshMode: 'debounce',\n    refreshRate: 300,\n    onResize });\n\n  return {\n    ref,\n    observerRef,\n    width,\n    height };\n\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,MAAhC,QAA8C,OAA9C;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AAEA,eAAc,SAAUC,2BAAV,GAAqC;EACjD,MAAMC,GAAG,GAAGH,MAAM,EAAlB;EACA,MAAM,CAAC,EAAEI,KAAF,EAASC,MAAT,EAAD,EAAoBC,iBAApB,IAAyCR,QAAQ,CAGpD,EAHoD,CAAvD;EAIA,MAAMS,QAAQ,GAAGR,WAAW,CAAC,MAAK;IAChC,IAAII,GAAG,CAACK,OAAR,EAAiB;MACf,MAAM,EAAEJ,KAAF,EAASC,MAAT,KAAoB,IAAG,CAACG,OAAJ,CAAYC,qBAAZ,uBAAG,CAACD,OAAJ,CAAYC,qBAAZ,OAAyC,EAAnE;MACAH,iBAAiB,CAAC,EAAEF,KAAF,EAASC,MAAT,EAAD,CAAjB;IACD;EACF,CAL2B,EAKzB,EALyB,CAA5B;EAMA,MAAM,EAAEF,GAAG,EAAEO,WAAP,KAAuBT,iBAAiB,CAAC;IAC7CU,WAAW,EAAE,UADgC;IAE7CC,WAAW,EAAE,GAFgC;IAG7CL,QAH6C,EAAD,CAA9C;;EAMA,OAAO;IACLJ,GADK;IAELO,WAFK;IAGLN,KAHK;IAILC,MAJK,EAAP;;AAMD","names":["useState","useCallback","useRef","useResizeDetector","useResizeDetectorByObserver","ref","width","height","setChartPanelSize","onResize","current","getBoundingClientRect","observerRef","refreshMode","refreshRate"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/explore/components/ExploreChartPanel/useResizeDetectorByObserver.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useCallback, useRef } from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\n\nexport default function useResizeDetectorByObserver() {\n  const ref = useRef<HTMLDivElement>();\n  const [{ width, height }, setChartPanelSize] = useState<{\n    width?: number;\n    height?: number;\n  }>({});\n  const onResize = useCallback(() => {\n    if (ref.current) {\n      const { width, height } = ref.current.getBoundingClientRect?.() || {};\n      setChartPanelSize({ width, height });\n    }\n  }, []);\n  const { ref: observerRef } = useResizeDetector({\n    refreshMode: 'debounce',\n    refreshRate: 300,\n    onResize,\n  });\n\n  return {\n    ref,\n    observerRef,\n    width,\n    height,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}