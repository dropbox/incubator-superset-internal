{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { createFilterSet, deleteFilterSet, updateFilterSet } from 'src/dashboard/actions/nativeFilters';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport { findExistingFilterSet } from './utils';\nimport { useFilters, useNativeFiltersDataMask, useFilterSets } from '../state';\nimport Footer from './Footer';\nimport FilterSetUnit from './FilterSetUnit';\nimport { getFilterBarTestId } from '../utils';\nimport { TabIds } from '../types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst FilterSetsWrapper = styled.div`\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  grid-template-columns: 1fr;\n  // 108px padding to make room for buttons with position: absolute\n  padding-bottom: ${(_ref) => {let { theme } = _ref;return theme.gridUnit * 27;}}px;\n\n  & button.superset-button {\n    margin-left: 0;\n  }\n  & input {\n    width: 100%;\n  }\n`;\nconst FilterSetUnitWrapper = styled.div`\n  ${(_ref2) => {let { theme, 'data-selected': selected, onClick } = _ref2;return `\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    grid-template-columns: 1fr;\n    grid-gap: ${theme.gridUnit}px;\n    border-bottom: 1px solid ${theme.colors.grayscale.light2};\n    padding: ${theme.gridUnit * 2}px ${theme.gridUnit * 4}px;\n    cursor: ${!onClick ? 'auto' : 'pointer'};\n    background: ${selected ? theme.colors.primary.light5 : 'transparent'};\n  `;}}\n`;\nconst DEFAULT_FILTER_SET_NAME = t('New filter set');\nconst FilterSets = (_ref3) => {let { dataMaskSelected, onEditFilterSet, disabled, onFilterSelectionChange, tab } = _ref3;\n  const dispatch = useDispatch();\n  const [filterSetName, setFilterSetName] = useState(DEFAULT_FILTER_SET_NAME);\n  const [editMode, setEditMode] = useState(false);\n  const dataMaskApplied = useNativeFiltersDataMask();\n  const filterSets = useFilterSets();\n  const filterSetFilterValues = Object.values(filterSets);\n  const filters = useFilters();\n  const filterValues = Object.values(filters);\n  const [selectedFiltersSetId, setSelectedFiltersSetId] = useState(null);\n  useEffect(() => {var _foundFilterSet$id;\n    if (tab === TabIds.AllFilters) {\n      return;\n    }\n    if (!filterSetFilterValues.length) {\n      setSelectedFiltersSetId(null);\n      return;\n    }\n    const foundFilterSet = findExistingFilterSet({\n      dataMaskSelected,\n      filterSetFilterValues });\n\n    setSelectedFiltersSetId((_foundFilterSet$id = foundFilterSet == null ? void 0 : foundFilterSet.id) != null ? _foundFilterSet$id : null);\n  }, [tab, dataMaskSelected, filterSetFilterValues]);\n  const isFilterMissingOrContainsInvalidMetadata = (id, filterSet) => {var _filters$id, _filterSet$nativeFilt, _filterSet$nativeFilt2;return !filterValues.find((filter) => (filter == null ? void 0 : filter.id) === id) ||\n    !areObjectsEqual((_filters$id = filters[id]) == null ? void 0 : _filters$id.controlValues, filterSet == null ? void 0 : (_filterSet$nativeFilt = filterSet.nativeFilters) == null ? void 0 : (_filterSet$nativeFilt2 = _filterSet$nativeFilt[id]) == null ? void 0 : _filterSet$nativeFilt2.controlValues, {\n      ignoreUndefined: true });};\n\n  const takeFilterSet = (id, event) => {var _Object$values;\n    const localTarget = event == null ? void 0 : event.target;\n    if (localTarget) {var _parent$querySelector;\n      const parent = localTarget.closest(`[data-anchor=${getFilterBarTestId('filter-set-wrapper', true)}]`);\n      if (parent != null && (_parent$querySelector = parent.querySelector('.ant-collapse-header')) != null && _parent$querySelector.contains(localTarget) ||\n      localTarget != null && localTarget.closest('.ant-dropdown')) {\n        return;\n      }\n    }\n    setSelectedFiltersSetId(id);\n    if (!id) {\n      return;\n    }\n    const filterSet = filterSets[id];\n    ((_Object$values = Object.values(filterSet == null ? void 0 : filterSet.dataMask)) != null ? _Object$values : []).forEach((dataMask) => {\n      const { extraFormData, filterState, id } = dataMask;\n      if (isFilterMissingOrContainsInvalidMetadata(id, filterSet)) {\n        return;\n      }\n      onFilterSelectionChange({ id }, { extraFormData, filterState });\n    });\n  };\n  const handleRebuild = (id) => {var _filterSet$dataMask;\n    const filterSet = filterSets[id];\n    // We need remove invalid filters from filter set\n    const newFilters = Object.values((_filterSet$dataMask = filterSet == null ? void 0 : filterSet.dataMask) != null ? _filterSet$dataMask : {}).\n    filter((dataMask) => {\n      const { id } = dataMask;\n      return !isFilterMissingOrContainsInvalidMetadata(id, filterSet);\n    }).\n    reduce((prev, next) => ({\n      ...prev,\n      [next.id]: filters[next.id] }),\n    {});\n    const updatedFilterSet = {\n      ...filterSet,\n      nativeFilters: newFilters,\n      dataMask: Object.keys(newFilters).reduce((prev, nextFilterId) => {var _filterSet$dataMask2;return {\n          ...prev,\n          [nextFilterId]: (_filterSet$dataMask2 = filterSet.dataMask) == null ? void 0 : _filterSet$dataMask2[nextFilterId] };},\n      {}) };\n\n    dispatch(updateFilterSet(updatedFilterSet));\n  };\n  const handleEdit = (id) => {\n    takeFilterSet(id);\n    onEditFilterSet(id);\n  };\n  const handleDeleteFilterSet = (filterSetId) => {\n    dispatch(deleteFilterSet(filterSetId));\n    if (filterSetId === selectedFiltersSetId) {\n      setSelectedFiltersSetId(null);\n    }\n  };\n  const handleCancel = () => {\n    setEditMode(false);\n    setFilterSetName(DEFAULT_FILTER_SET_NAME);\n  };\n  const handleCreateFilterSet = () => {\n    const newFilterSet = {\n      name: filterSetName.trim(),\n      nativeFilters: filters,\n      dataMask: Object.keys(filters).reduce((prev, nextFilterId) => ({\n        ...prev,\n        [nextFilterId]: dataMaskApplied[nextFilterId] }),\n      {}) };\n\n    dispatch(createFilterSet(newFilterSet));\n    setEditMode(false);\n    setFilterSetName(DEFAULT_FILTER_SET_NAME);\n  };\n  return ___EmotionJSX(FilterSetsWrapper, null,\n  !selectedFiltersSetId && ___EmotionJSX(FilterSetUnitWrapper, null,\n  ___EmotionJSX(FilterSetUnit, { dataMaskSelected: dataMaskSelected, editMode: editMode, setFilterSetName: setFilterSetName, filterSetName: filterSetName }),\n  ___EmotionJSX(Footer, { filterSetName: filterSetName.trim(), disabled: disabled, onCancel: handleCancel, editMode: editMode, onEdit: () => setEditMode(true), onCreate: handleCreateFilterSet })),\n\n  filterSetFilterValues.map((filterSet) => ___EmotionJSX(FilterSetUnitWrapper, _extends({}, getFilterBarTestId('filter-set-wrapper'), { \"data-anchor\": getFilterBarTestId('filter-set-wrapper', true), \"data-selected\": filterSet.id === selectedFiltersSetId, onClick: (e) => takeFilterSet(filterSet.id, e), key: filterSet.id }),\n  ___EmotionJSX(FilterSetUnit, { isApplied: filterSet.id === selectedFiltersSetId && !disabled, onDelete: () => handleDeleteFilterSet(filterSet.id), onEdit: () => handleEdit(filterSet.id), onRebuild: () => handleRebuild(filterSet.id), dataMaskSelected: dataMaskSelected, filterSet: filterSet }))));\n\n\n};\nexport default FilterSets;","map":{"version":3,"mappings":"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","names":["React","useEffect","useState","styled","t","useDispatch","createFilterSet","deleteFilterSet","updateFilterSet","areObjectsEqual","findExistingFilterSet","useFilters","useNativeFiltersDataMask","useFilterSets","Footer","FilterSetUnit","getFilterBarTestId","TabIds","FilterSetsWrapper","div","theme","gridUnit","FilterSetUnitWrapper","selected","onClick","colors","grayscale","light2","primary","light5","DEFAULT_FILTER_SET_NAME","FilterSets","dataMaskSelected","onEditFilterSet","disabled","onFilterSelectionChange","tab","dispatch","filterSetName","setFilterSetName","editMode","setEditMode","dataMaskApplied","filterSets","filterSetFilterValues","Object","values","filters","filterValues","selectedFiltersSetId","setSelectedFiltersSetId","AllFilters","length","foundFilterSet","id","isFilterMissingOrContainsInvalidMetadata","filterSet","find","controlValues","nativeFilters","ignoreUndefined","takeFilterSet","event","localTarget","target","parent","closest","querySelector","contains","dataMask","forEach","extraFormData","filterState","handleRebuild","newFilters","filter","reduce","prev","next","updatedFilterSet","keys","nextFilterId","handleEdit","handleDeleteFilterSet","filterSetId","handleCancel","handleCreateFilterSet","newFilterSet","name","trim","map","e"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport {\n  DataMask,\n  DataMaskState,\n  DataMaskWithId,\n  Filter,\n  Filters,\n  FilterSet,\n  HandlerFunction,\n  styled,\n  t,\n} from '@superset-ui/core';\nimport { useDispatch } from 'react-redux';\nimport {\n  createFilterSet,\n  deleteFilterSet,\n  updateFilterSet,\n} from 'src/dashboard/actions/nativeFilters';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport { findExistingFilterSet } from './utils';\nimport { useFilters, useNativeFiltersDataMask, useFilterSets } from '../state';\nimport Footer from './Footer';\nimport FilterSetUnit from './FilterSetUnit';\nimport { getFilterBarTestId } from '../utils';\nimport { TabIds } from '../types';\n\nconst FilterSetsWrapper = styled.div`\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  grid-template-columns: 1fr;\n  // 108px padding to make room for buttons with position: absolute\n  padding-bottom: ${({ theme }) => theme.gridUnit * 27}px;\n\n  & button.superset-button {\n    margin-left: 0;\n  }\n  & input {\n    width: 100%;\n  }\n`;\n\nconst FilterSetUnitWrapper = styled.div<{\n  onClick?: HandlerFunction;\n  'data-selected'?: boolean;\n}>`\n  ${({ theme, 'data-selected': selected, onClick }) => `\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    grid-template-columns: 1fr;\n    grid-gap: ${theme.gridUnit}px;\n    border-bottom: 1px solid ${theme.colors.grayscale.light2};\n    padding: ${theme.gridUnit * 2}px ${theme.gridUnit * 4}px;\n    cursor: ${!onClick ? 'auto' : 'pointer'};\n    background: ${selected ? theme.colors.primary.light5 : 'transparent'};\n  `}\n`;\n\nexport type FilterSetsProps = {\n  disabled: boolean;\n  tab: TabIds;\n  dataMaskSelected: DataMaskState;\n  onEditFilterSet: (id: number) => void;\n  onFilterSelectionChange: (\n    filter: Pick<Filter, 'id'> & Partial<Filter>,\n    dataMask: Partial<DataMask>,\n  ) => void;\n};\n\nconst DEFAULT_FILTER_SET_NAME = t('New filter set');\n\nconst FilterSets: React.FC<FilterSetsProps> = ({\n  dataMaskSelected,\n  onEditFilterSet,\n  disabled,\n  onFilterSelectionChange,\n  tab,\n}) => {\n  const dispatch = useDispatch();\n  const [filterSetName, setFilterSetName] = useState(DEFAULT_FILTER_SET_NAME);\n  const [editMode, setEditMode] = useState(false);\n  const dataMaskApplied = useNativeFiltersDataMask();\n  const filterSets = useFilterSets();\n  const filterSetFilterValues = Object.values(filterSets);\n  const filters = useFilters();\n  const filterValues = Object.values(filters) as Filter[];\n  const [selectedFiltersSetId, setSelectedFiltersSetId] = useState<\n    number | null\n  >(null);\n\n  useEffect(() => {\n    if (tab === TabIds.AllFilters) {\n      return;\n    }\n    if (!filterSetFilterValues.length) {\n      setSelectedFiltersSetId(null);\n      return;\n    }\n\n    const foundFilterSet = findExistingFilterSet({\n      dataMaskSelected,\n      filterSetFilterValues,\n    });\n\n    setSelectedFiltersSetId(foundFilterSet?.id ?? null);\n  }, [tab, dataMaskSelected, filterSetFilterValues]);\n\n  const isFilterMissingOrContainsInvalidMetadata = (\n    id: string,\n    filterSet?: FilterSet,\n  ) =>\n    !filterValues.find(filter => filter?.id === id) ||\n    !areObjectsEqual(\n      filters[id]?.controlValues,\n      filterSet?.nativeFilters?.[id]?.controlValues,\n      {\n        ignoreUndefined: true,\n      },\n    );\n\n  const takeFilterSet = (id: number, event?: MouseEvent) => {\n    const localTarget = event?.target as HTMLDivElement;\n    if (localTarget) {\n      const parent = localTarget.closest(\n        `[data-anchor=${getFilterBarTestId('filter-set-wrapper', true)}]`,\n      );\n      if (\n        parent?.querySelector('.ant-collapse-header')?.contains(localTarget) ||\n        localTarget?.closest('.ant-dropdown')\n      ) {\n        return;\n      }\n    }\n    setSelectedFiltersSetId(id);\n    if (!id) {\n      return;\n    }\n\n    const filterSet = filterSets[id];\n\n    (Object.values(filterSet?.dataMask) ?? []).forEach(\n      (dataMask: DataMaskWithId) => {\n        const { extraFormData, filterState, id } = dataMask;\n        if (isFilterMissingOrContainsInvalidMetadata(id, filterSet)) {\n          return;\n        }\n        onFilterSelectionChange({ id }, { extraFormData, filterState });\n      },\n    );\n  };\n\n  const handleRebuild = (id: number) => {\n    const filterSet = filterSets[id];\n    // We need remove invalid filters from filter set\n    const newFilters = Object.values(filterSet?.dataMask ?? {})\n      .filter(dataMask => {\n        const { id } = dataMask as DataMaskWithId;\n        return !isFilterMissingOrContainsInvalidMetadata(id, filterSet);\n      })\n      .reduce(\n        (prev, next: DataMaskWithId) => ({\n          ...prev,\n          [next.id]: filters[next.id],\n        }),\n        {},\n      );\n\n    const updatedFilterSet: FilterSet = {\n      ...filterSet,\n      nativeFilters: newFilters as Filters,\n      dataMask: Object.keys(newFilters).reduce(\n        (prev, nextFilterId) => ({\n          ...prev,\n          [nextFilterId]: filterSet.dataMask?.[nextFilterId],\n        }),\n        {},\n      ),\n    };\n    dispatch(updateFilterSet(updatedFilterSet));\n  };\n\n  const handleEdit = (id: number) => {\n    takeFilterSet(id);\n    onEditFilterSet(id);\n  };\n\n  const handleDeleteFilterSet = (filterSetId: number) => {\n    dispatch(deleteFilterSet(filterSetId));\n    if (filterSetId === selectedFiltersSetId) {\n      setSelectedFiltersSetId(null);\n    }\n  };\n\n  const handleCancel = () => {\n    setEditMode(false);\n    setFilterSetName(DEFAULT_FILTER_SET_NAME);\n  };\n\n  const handleCreateFilterSet = () => {\n    const newFilterSet: Omit<FilterSet, 'id'> = {\n      name: filterSetName.trim(),\n      nativeFilters: filters,\n      dataMask: Object.keys(filters).reduce(\n        (prev, nextFilterId) => ({\n          ...prev,\n          [nextFilterId]: dataMaskApplied[nextFilterId],\n        }),\n        {},\n      ),\n    };\n    dispatch(createFilterSet(newFilterSet));\n    setEditMode(false);\n    setFilterSetName(DEFAULT_FILTER_SET_NAME);\n  };\n\n  return (\n    <FilterSetsWrapper>\n      {!selectedFiltersSetId && (\n        <FilterSetUnitWrapper>\n          <FilterSetUnit\n            dataMaskSelected={dataMaskSelected}\n            editMode={editMode}\n            setFilterSetName={setFilterSetName}\n            filterSetName={filterSetName}\n          />\n          <Footer\n            filterSetName={filterSetName.trim()}\n            disabled={disabled}\n            onCancel={handleCancel}\n            editMode={editMode}\n            onEdit={() => setEditMode(true)}\n            onCreate={handleCreateFilterSet}\n          />\n        </FilterSetUnitWrapper>\n      )}\n      {filterSetFilterValues.map(filterSet => (\n        <FilterSetUnitWrapper\n          {...getFilterBarTestId('filter-set-wrapper')}\n          data-anchor={getFilterBarTestId('filter-set-wrapper', true)}\n          data-selected={filterSet.id === selectedFiltersSetId}\n          onClick={\n            (e =>\n              takeFilterSet(filterSet.id, e as MouseEvent)) as HandlerFunction\n          }\n          key={filterSet.id}\n        >\n          <FilterSetUnit\n            isApplied={filterSet.id === selectedFiltersSetId && !disabled}\n            onDelete={() => handleDeleteFilterSet(filterSet.id)}\n            onEdit={() => handleEdit(filterSet.id)}\n            onRebuild={() => handleRebuild(filterSet.id)}\n            dataMaskSelected={dataMaskSelected}\n            filterSet={filterSet}\n          />\n        </FilterSetUnitWrapper>\n      ))}\n    </FilterSetsWrapper>\n  );\n};\n\nexport default FilterSets;\n"]},"metadata":{},"sourceType":"module"}