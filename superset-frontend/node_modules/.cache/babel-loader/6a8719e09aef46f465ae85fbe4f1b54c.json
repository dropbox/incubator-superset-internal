{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\nisDefined,\nt,\nstyled,\nensureIsArray,\nDatasourceType } from\n'@superset-ui/core';\nimport Tabs from 'src/components/Tabs';\nimport Button from 'src/components/Button';\nimport { Select } from 'src/components';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { EmptyStateSmall } from 'src/components/EmptyState';\nimport { Form, FormItem } from 'src/components/Form';\nimport { SQLEditor } from 'src/components/AsyncAceEditor';\nimport sqlKeywords from 'src/SqlLab/utils/sqlKeywords';\nimport { noOp } from 'src/utils/common';\nimport {\nAGGREGATES_OPTIONS,\nPOPOVER_INITIAL_HEIGHT,\nPOPOVER_INITIAL_WIDTH } from\n'src/explore/constants';\nimport columnType from 'src/explore/components/controls/MetricControl/columnType';\nimport savedMetricType from 'src/explore/components/controls/MetricControl/savedMetricType';\nimport AdhocMetric, {\nEXPRESSION_TYPES } from\n'src/explore/components/controls/MetricControl/AdhocMetric';\nimport {\nStyledMetricOption,\nStyledColumnOption } from\n'src/explore/components/optionRenderers';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  getCurrentTab: PropTypes.func,\n  getCurrentLabel: PropTypes.func,\n  adhocMetric: PropTypes.instanceOf(AdhocMetric).isRequired,\n  columns: PropTypes.arrayOf(columnType),\n  savedMetricsOptions: PropTypes.arrayOf(savedMetricType),\n  savedMetric: savedMetricType,\n  datasource: PropTypes.object,\n  isNewMetric: PropTypes.bool,\n  isLabelModified: PropTypes.bool };\n\n\nconst defaultProps = {\n  columns: [],\n  getCurrentTab: noOp,\n  isNewMetric: false };\n\n\nconst StyledSelect = styled(Select)`\n  .metric-option {\n    & > svg {\n      min-width: ${(_ref) => {let { theme } = _ref;return `${theme.gridUnit * 4}px`;}};\n    }\n    & > .option-label {\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n`;\n\nexport const SAVED_TAB_KEY = 'SAVED';\n\nexport default class AdhocMetricEditPopover extends React.PureComponent {\n  // \"Saved\" is a default tab unless there are no saved metrics for dataset\n\n\n  constructor(props) {\n    super(props);this.defaultActiveTabKey = this.getDefaultTab();\n    this.onSave = this.onSave.bind(this);\n    this.onResetStateAndClose = this.onResetStateAndClose.bind(this);\n    this.onColumnChange = this.onColumnChange.bind(this);\n    this.onAggregateChange = this.onAggregateChange.bind(this);\n    this.onSavedMetricChange = this.onSavedMetricChange.bind(this);\n    this.onSqlExpressionChange = this.onSqlExpressionChange.bind(this);\n    this.onDragDown = this.onDragDown.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.onTabChange = this.onTabChange.bind(this);\n    this.handleAceEditorRef = this.handleAceEditorRef.bind(this);\n    this.refreshAceEditor = this.refreshAceEditor.bind(this);\n    this.getDefaultTab = this.getDefaultTab.bind(this);\n\n    this.state = {\n      adhocMetric: this.props.adhocMetric,\n      savedMetric: this.props.savedMetric,\n      width: POPOVER_INITIAL_WIDTH,\n      height: POPOVER_INITIAL_HEIGHT };\n\n    document.addEventListener('mouseup', this.onMouseUp);\n  }\n\n  componentDidMount() {\n    this.props.getCurrentTab(this.defaultActiveTabKey);\n  }\n\n  componentDidUpdate(prevProps, prevState) {var _prevState$adhocMetri, _this$state$adhocMetr, _prevState$adhocMetri2, _this$state$adhocMetr2, _prevState$adhocMetri3, _prevState$adhocMetri4, _this$state$adhocMetr3, _this$state$adhocMetr4, _prevState$savedMetri, _this$state$savedMetr;\n    if (\n    ((_prevState$adhocMetri = prevState.adhocMetric) == null ? void 0 : _prevState$adhocMetri.sqlExpression) !== ((_this$state$adhocMetr =\n    this.state.adhocMetric) == null ? void 0 : _this$state$adhocMetr.sqlExpression) ||\n    ((_prevState$adhocMetri2 = prevState.adhocMetric) == null ? void 0 : _prevState$adhocMetri2.aggregate) !== ((_this$state$adhocMetr2 = this.state.adhocMetric) == null ? void 0 : _this$state$adhocMetr2.aggregate) ||\n    ((_prevState$adhocMetri3 = prevState.adhocMetric) == null ? void 0 : (_prevState$adhocMetri4 = _prevState$adhocMetri3.column) == null ? void 0 : _prevState$adhocMetri4.column_name) !== ((_this$state$adhocMetr3 =\n    this.state.adhocMetric) == null ? void 0 : (_this$state$adhocMetr4 = _this$state$adhocMetr3.column) == null ? void 0 : _this$state$adhocMetr4.column_name) ||\n    ((_prevState$savedMetri = prevState.savedMetric) == null ? void 0 : _prevState$savedMetri.metric_name) !== ((_this$state$savedMetr = this.state.savedMetric) == null ? void 0 : _this$state$savedMetr.metric_name))\n    {var _this$state$savedMetr2, _this$state$savedMetr3, _this$state$adhocMetr5;\n      this.props.getCurrentLabel({\n        savedMetricLabel:\n        ((_this$state$savedMetr2 = this.state.savedMetric) == null ? void 0 : _this$state$savedMetr2.verbose_name) || ((_this$state$savedMetr3 =\n        this.state.savedMetric) == null ? void 0 : _this$state$savedMetr3.metric_name),\n        adhocMetricLabel: (_this$state$adhocMetr5 = this.state.adhocMetric) == null ? void 0 : _this$state$adhocMetr5.getDefaultLabel() });\n\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mouseup', this.onMouseUp);\n    document.removeEventListener('mousemove', this.onMouseMove);\n  }\n\n  getDefaultTab() {\n    const { adhocMetric, savedMetric, savedMetricsOptions, isNewMetric } =\n    this.props;\n    if (isDefined(adhocMetric.column) || isDefined(adhocMetric.sqlExpression)) {\n      return adhocMetric.expressionType;\n    }\n    if (\n    (isNewMetric || savedMetric.metric_name) &&\n    Array.isArray(savedMetricsOptions) &&\n    savedMetricsOptions.length > 0)\n    {\n      return SAVED_TAB_KEY;\n    }\n    return adhocMetric.expressionType;\n  }\n\n  onSave() {var _this$props$savedMetr;\n    const { adhocMetric, savedMetric } = this.state;\n\n    const metric = savedMetric != null && savedMetric.metric_name ? savedMetric : adhocMetric;\n    const oldMetric = (_this$props$savedMetr = this.props.savedMetric) != null && _this$props$savedMetr.metric_name ?\n    this.props.savedMetric :\n    this.props.adhocMetric;\n    this.props.onChange(\n    {\n      ...metric },\n\n    oldMetric);\n\n    this.props.onClose();\n  }\n\n  onResetStateAndClose() {\n    this.setState(\n    {\n      adhocMetric: this.props.adhocMetric,\n      savedMetric: this.props.savedMetric },\n\n    this.props.onClose);\n\n  }\n\n  onColumnChange(columnName) {\n    const column = this.props.columns.find(\n    (column) => column.column_name === columnName);\n\n    this.setState((prevState) => ({\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        column,\n        expressionType: EXPRESSION_TYPES.SIMPLE }),\n\n      savedMetric: undefined }));\n\n  }\n\n  onAggregateChange(aggregate) {\n    // we construct this object explicitly to overwrite the value in the case aggregate is null\n    this.setState((prevState) => ({\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        aggregate,\n        expressionType: EXPRESSION_TYPES.SIMPLE }),\n\n      savedMetric: undefined }));\n\n  }\n\n  onSavedMetricChange(savedMetricName) {\n    const savedMetric = this.props.savedMetricsOptions.find(\n    (metric) => metric.metric_name === savedMetricName);\n\n    this.setState((prevState) => ({\n      savedMetric,\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        column: undefined,\n        aggregate: undefined,\n        sqlExpression: undefined,\n        expressionType: EXPRESSION_TYPES.SIMPLE }) }));\n\n\n  }\n\n  onSqlExpressionChange(sqlExpression) {\n    this.setState((prevState) => ({\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        sqlExpression,\n        expressionType: EXPRESSION_TYPES.SQL }),\n\n      savedMetric: undefined }));\n\n  }\n\n  onDragDown(e) {\n    this.dragStartX = e.clientX;\n    this.dragStartY = e.clientY;\n    this.dragStartWidth = this.state.width;\n    this.dragStartHeight = this.state.height;\n    document.addEventListener('mousemove', this.onMouseMove);\n  }\n\n  onMouseMove(e) {\n    this.props.onResize();\n    this.setState({\n      width: Math.max(\n      this.dragStartWidth + (e.clientX - this.dragStartX),\n      POPOVER_INITIAL_WIDTH),\n\n      height: Math.max(\n      this.dragStartHeight + (e.clientY - this.dragStartY),\n      POPOVER_INITIAL_HEIGHT) });\n\n\n  }\n\n  onMouseUp() {\n    document.removeEventListener('mousemove', this.onMouseMove);\n  }\n\n  onTabChange(tab) {\n    this.refreshAceEditor();\n    this.props.getCurrentTab(tab);\n  }\n\n  handleAceEditorRef(ref) {\n    if (ref) {\n      this.aceEditorRef = ref;\n    }\n  }\n\n  refreshAceEditor() {\n    setTimeout(() => {\n      if (this.aceEditorRef) {\n        this.aceEditorRef.editor.resize();\n      }\n    }, 0);\n  }\n\n  renderColumnOption(option) {\n    const column = { ...option };\n    if (column.metric_name && !column.verbose_name) {\n      column.verbose_name = column.metric_name;\n    }\n    return ___EmotionJSX(StyledColumnOption, { column: column, showType: true });\n  }\n\n  renderMetricOption(savedMetric) {\n    return ___EmotionJSX(StyledMetricOption, { metric: savedMetric, showType: true });\n  }\n\n  render() {var _savedMetricsOptions$;\n    const {\n      adhocMetric: propsAdhocMetric,\n      savedMetric: propsSavedMetric,\n      columns,\n      savedMetricsOptions,\n      onChange,\n      onClose,\n      onResize,\n      datasource,\n      isNewMetric,\n      isLabelModified,\n      ...popoverProps } =\n    this.props;\n    const { adhocMetric, savedMetric } = this.state;\n    const keywords = sqlKeywords.concat(\n    columns.map((column) => ({\n      name: column.column_name,\n      value: column.column_name,\n      score: 50,\n      meta: 'column' })));\n\n\n\n    const columnValue =\n    adhocMetric.column && adhocMetric.column.column_name ||\n    adhocMetric.inferSqlExpressionColumn();\n\n    // autofocus on column if there's no value in column; otherwise autofocus on aggregate\n    const columnSelectProps = {\n      ariaLabel: t('Select column'),\n      placeholder: t('%s column(s)', columns.length),\n      value: columnValue,\n      onChange: this.onColumnChange,\n      allowClear: true,\n      autoFocus: !columnValue };\n\n\n    const aggregateSelectProps = {\n      ariaLabel: t('Select aggregate options'),\n      placeholder: t('%s aggregates(s)', AGGREGATES_OPTIONS.length),\n      value: adhocMetric.aggregate || adhocMetric.inferSqlExpressionAggregate(),\n      onChange: this.onAggregateChange,\n      allowClear: true,\n      autoFocus: !!columnValue };\n\n\n    const savedSelectProps = {\n      ariaLabel: t('Select saved metrics'),\n      placeholder: t('%s saved metric(s)', (_savedMetricsOptions$ = savedMetricsOptions == null ? void 0 : savedMetricsOptions.length) != null ? _savedMetricsOptions$ : 0),\n      value: savedMetric == null ? void 0 : savedMetric.metric_name,\n      onChange: this.onSavedMetricChange,\n      allowClear: true,\n      autoFocus: true };\n\n\n    const stateIsValid = adhocMetric.isValid() || (savedMetric == null ? void 0 : savedMetric.metric_name);\n    const hasUnsavedChanges =\n    isLabelModified ||\n    isNewMetric ||\n    !adhocMetric.equals(propsAdhocMetric) ||\n    !(\n    typeof (savedMetric == null ? void 0 : savedMetric.metric_name) === 'undefined' &&\n    typeof (propsSavedMetric == null ? void 0 : propsSavedMetric.metric_name) === 'undefined') &&\n\n    (savedMetric == null ? void 0 : savedMetric.metric_name) !== (propsSavedMetric == null ? void 0 : propsSavedMetric.metric_name);\n\n    let extra = {};\n    if (datasource != null && datasource.extra) {\n      try {\n        extra = JSON.parse(datasource.extra);\n      } catch {} // eslint-disable-line no-empty\n    }\n\n    return (\n      ___EmotionJSX(Form, _extends({\n        layout: \"vertical\",\n        id: \"metrics-edit-popover\" },\n\n      popoverProps),\n\n      ___EmotionJSX(Tabs, {\n        id: \"adhoc-metric-edit-tabs\",\n\n        defaultActiveKey: this.defaultActiveTabKey,\n        className: \"adhoc-metric-edit-tabs\",\n        style: { height: this.state.height, width: this.state.width },\n        onChange: this.onTabChange,\n        allowOverflow: true },\n\n      ___EmotionJSX(Tabs.TabPane, { key: SAVED_TAB_KEY, tab: t('Saved') },\n      ensureIsArray(savedMetricsOptions).length > 0 ?\n      ___EmotionJSX(FormItem, { label: t('Saved metric') },\n      ___EmotionJSX(StyledSelect, _extends({\n        options: ensureIsArray(savedMetricsOptions).map(\n        (savedMetric) => ({\n          value: savedMetric.metric_name,\n          label: savedMetric.metric_name,\n          customLabel: this.renderMetricOption(savedMetric),\n          key: savedMetric.id })) },\n\n\n      savedSelectProps))) :\n\n\n      datasource.type === DatasourceType.Table ?\n      ___EmotionJSX(EmptyStateSmall, {\n        image: \"empty.svg\",\n        title: t('No saved metrics found'),\n        description: t(\n        'Add metrics to dataset in \"Edit datasource\" modal') }) :\n\n\n\n      ___EmotionJSX(EmptyStateSmall, {\n        image: \"empty.svg\",\n        title: t('No saved metrics found'),\n        description:\n        ___EmotionJSX(React.Fragment, null,\n        ___EmotionJSX(\"span\", {\n          tabIndex: 0,\n          role: \"button\",\n          onClick: () => {\n            this.props.handleDatasetModal(true);\n            this.props.onClose();\n          } },\n\n        t('Create a dataset')),\n\n        t(' to add metrics')) })),\n\n\n\n\n\n      ___EmotionJSX(Tabs.TabPane, {\n        key: EXPRESSION_TYPES.SIMPLE,\n        tab:\n        extra.disallow_adhoc_metrics ?\n        ___EmotionJSX(Tooltip, {\n          title: t(\n          'Simple ad-hoc metrics are not enabled for this dataset') },\n\n\n        t('Simple')) :\n\n\n        t('Simple'),\n\n\n        disabled: extra.disallow_adhoc_metrics },\n\n      ___EmotionJSX(FormItem, { label: t('column') },\n      ___EmotionJSX(Select, _extends({\n        options: columns.map((column) => ({\n          value: column.column_name,\n          label: column.verbose_name || column.column_name,\n          key: column.id,\n          customLabel: this.renderColumnOption(column) })) },\n\n      columnSelectProps))),\n\n\n      ___EmotionJSX(FormItem, { label: t('aggregate') },\n      ___EmotionJSX(Select, _extends({\n        options: AGGREGATES_OPTIONS.map((option) => ({\n          value: option,\n          label: option,\n          key: option })) },\n\n      aggregateSelectProps)))),\n\n\n\n      ___EmotionJSX(Tabs.TabPane, {\n        key: EXPRESSION_TYPES.SQL,\n        tab:\n        extra.disallow_adhoc_metrics ?\n        ___EmotionJSX(Tooltip, {\n          title: t(\n          'Custom SQL ad-hoc metrics are not enabled for this dataset') },\n\n\n        t('Custom SQL')) :\n\n\n        t('Custom SQL'),\n\n\n\n        disabled: extra.disallow_adhoc_metrics },\n\n      ___EmotionJSX(SQLEditor, {\n\n        showLoadingForImport: true,\n        ref: this.handleAceEditorRef,\n        keywords: keywords,\n        height: `${this.state.height - 80}px`,\n        onChange: this.onSqlExpressionChange,\n        width: \"100%\",\n        showGutter: false,\n        value:\n        adhocMetric.sqlExpression ||\n        adhocMetric.translateToSql({ transformCountDistinct: true }),\n\n        editorProps: { $blockScrolling: true },\n        enableLiveAutocompletion: true,\n        className: \"filter-sql-editor\",\n        wrapEnabled: true }))),\n\n\n\n      ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(Button, {\n        buttonSize: \"small\",\n        onClick: this.onResetStateAndClose,\n\n        cta: true },\n\n      t('Close')),\n\n      ___EmotionJSX(Button, {\n        disabled: !stateIsValid || !hasUnsavedChanges,\n        buttonStyle: \"primary\",\n        buttonSize: \"small\",\n\n        onClick: this.onSave,\n        cta: true },\n\n      t('Save')),\n\n      ___EmotionJSX(\"i\", {\n        role: \"button\",\n        \"aria-label\": \"Resize\",\n        tabIndex: 0,\n        onMouseDown: this.onDragDown,\n        className: \"fa fa-expand edit-popover-resize text-muted\" }))));\n\n\n\n\n  }}\n\nAdhocMetricEditPopover.propTypes = propTypes;\nAdhocMetricEditPopover.defaultProps = defaultProps;","map":{"version":3,"names":["React","PropTypes","isDefined","t","styled","ensureIsArray","DatasourceType","Tabs","Button","Select","Tooltip","EmptyStateSmall","Form","FormItem","SQLEditor","sqlKeywords","noOp","AGGREGATES_OPTIONS","POPOVER_INITIAL_HEIGHT","POPOVER_INITIAL_WIDTH","columnType","savedMetricType","AdhocMetric","EXPRESSION_TYPES","StyledMetricOption","StyledColumnOption","propTypes","onChange","func","isRequired","onClose","onResize","getCurrentTab","getCurrentLabel","adhocMetric","instanceOf","columns","arrayOf","savedMetricsOptions","savedMetric","datasource","object","isNewMetric","bool","isLabelModified","defaultProps","StyledSelect","theme","gridUnit","SAVED_TAB_KEY","AdhocMetricEditPopover","PureComponent","constructor","props","defaultActiveTabKey","getDefaultTab","onSave","bind","onResetStateAndClose","onColumnChange","onAggregateChange","onSavedMetricChange","onSqlExpressionChange","onDragDown","onMouseMove","onMouseUp","onTabChange","handleAceEditorRef","refreshAceEditor","state","width","height","document","addEventListener","componentDidMount","componentDidUpdate","prevProps","prevState","sqlExpression","aggregate","column","column_name","metric_name","savedMetricLabel","verbose_name","adhocMetricLabel","getDefaultLabel","componentWillUnmount","removeEventListener","expressionType","Array","isArray","length","metric","oldMetric","setState","columnName","find","duplicateWith","SIMPLE","undefined","savedMetricName","SQL","e","dragStartX","clientX","dragStartY","clientY","dragStartWidth","dragStartHeight","Math","max","tab","ref","aceEditorRef","setTimeout","editor","resize","renderColumnOption","option","renderMetricOption","render","propsAdhocMetric","propsSavedMetric","popoverProps","keywords","concat","map","name","value","score","meta","columnValue","inferSqlExpressionColumn","columnSelectProps","ariaLabel","placeholder","allowClear","autoFocus","aggregateSelectProps","inferSqlExpressionAggregate","savedSelectProps","stateIsValid","isValid","hasUnsavedChanges","equals","extra","JSON","parse","label","customLabel","key","id","type","Table","handleDatasetModal","disallow_adhoc_metrics","translateToSql","transformCountDistinct","$blockScrolling"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricEditPopover/index.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  isDefined,\n  t,\n  styled,\n  ensureIsArray,\n  DatasourceType,\n} from '@superset-ui/core';\nimport Tabs from 'src/components/Tabs';\nimport Button from 'src/components/Button';\nimport { Select } from 'src/components';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { EmptyStateSmall } from 'src/components/EmptyState';\nimport { Form, FormItem } from 'src/components/Form';\nimport { SQLEditor } from 'src/components/AsyncAceEditor';\nimport sqlKeywords from 'src/SqlLab/utils/sqlKeywords';\nimport { noOp } from 'src/utils/common';\nimport {\n  AGGREGATES_OPTIONS,\n  POPOVER_INITIAL_HEIGHT,\n  POPOVER_INITIAL_WIDTH,\n} from 'src/explore/constants';\nimport columnType from 'src/explore/components/controls/MetricControl/columnType';\nimport savedMetricType from 'src/explore/components/controls/MetricControl/savedMetricType';\nimport AdhocMetric, {\n  EXPRESSION_TYPES,\n} from 'src/explore/components/controls/MetricControl/AdhocMetric';\nimport {\n  StyledMetricOption,\n  StyledColumnOption,\n} from 'src/explore/components/optionRenderers';\n\nconst propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  getCurrentTab: PropTypes.func,\n  getCurrentLabel: PropTypes.func,\n  adhocMetric: PropTypes.instanceOf(AdhocMetric).isRequired,\n  columns: PropTypes.arrayOf(columnType),\n  savedMetricsOptions: PropTypes.arrayOf(savedMetricType),\n  savedMetric: savedMetricType,\n  datasource: PropTypes.object,\n  isNewMetric: PropTypes.bool,\n  isLabelModified: PropTypes.bool,\n};\n\nconst defaultProps = {\n  columns: [],\n  getCurrentTab: noOp,\n  isNewMetric: false,\n};\n\nconst StyledSelect = styled(Select)`\n  .metric-option {\n    & > svg {\n      min-width: ${({ theme }) => `${theme.gridUnit * 4}px`};\n    }\n    & > .option-label {\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n`;\n\nexport const SAVED_TAB_KEY = 'SAVED';\n\nexport default class AdhocMetricEditPopover extends React.PureComponent {\n  // \"Saved\" is a default tab unless there are no saved metrics for dataset\n  defaultActiveTabKey = this.getDefaultTab();\n\n  constructor(props) {\n    super(props);\n    this.onSave = this.onSave.bind(this);\n    this.onResetStateAndClose = this.onResetStateAndClose.bind(this);\n    this.onColumnChange = this.onColumnChange.bind(this);\n    this.onAggregateChange = this.onAggregateChange.bind(this);\n    this.onSavedMetricChange = this.onSavedMetricChange.bind(this);\n    this.onSqlExpressionChange = this.onSqlExpressionChange.bind(this);\n    this.onDragDown = this.onDragDown.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.onTabChange = this.onTabChange.bind(this);\n    this.handleAceEditorRef = this.handleAceEditorRef.bind(this);\n    this.refreshAceEditor = this.refreshAceEditor.bind(this);\n    this.getDefaultTab = this.getDefaultTab.bind(this);\n\n    this.state = {\n      adhocMetric: this.props.adhocMetric,\n      savedMetric: this.props.savedMetric,\n      width: POPOVER_INITIAL_WIDTH,\n      height: POPOVER_INITIAL_HEIGHT,\n    };\n    document.addEventListener('mouseup', this.onMouseUp);\n  }\n\n  componentDidMount() {\n    this.props.getCurrentTab(this.defaultActiveTabKey);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.adhocMetric?.sqlExpression !==\n        this.state.adhocMetric?.sqlExpression ||\n      prevState.adhocMetric?.aggregate !== this.state.adhocMetric?.aggregate ||\n      prevState.adhocMetric?.column?.column_name !==\n        this.state.adhocMetric?.column?.column_name ||\n      prevState.savedMetric?.metric_name !== this.state.savedMetric?.metric_name\n    ) {\n      this.props.getCurrentLabel({\n        savedMetricLabel:\n          this.state.savedMetric?.verbose_name ||\n          this.state.savedMetric?.metric_name,\n        adhocMetricLabel: this.state.adhocMetric?.getDefaultLabel(),\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mouseup', this.onMouseUp);\n    document.removeEventListener('mousemove', this.onMouseMove);\n  }\n\n  getDefaultTab() {\n    const { adhocMetric, savedMetric, savedMetricsOptions, isNewMetric } =\n      this.props;\n    if (isDefined(adhocMetric.column) || isDefined(adhocMetric.sqlExpression)) {\n      return adhocMetric.expressionType;\n    }\n    if (\n      (isNewMetric || savedMetric.metric_name) &&\n      Array.isArray(savedMetricsOptions) &&\n      savedMetricsOptions.length > 0\n    ) {\n      return SAVED_TAB_KEY;\n    }\n    return adhocMetric.expressionType;\n  }\n\n  onSave() {\n    const { adhocMetric, savedMetric } = this.state;\n\n    const metric = savedMetric?.metric_name ? savedMetric : adhocMetric;\n    const oldMetric = this.props.savedMetric?.metric_name\n      ? this.props.savedMetric\n      : this.props.adhocMetric;\n    this.props.onChange(\n      {\n        ...metric,\n      },\n      oldMetric,\n    );\n    this.props.onClose();\n  }\n\n  onResetStateAndClose() {\n    this.setState(\n      {\n        adhocMetric: this.props.adhocMetric,\n        savedMetric: this.props.savedMetric,\n      },\n      this.props.onClose,\n    );\n  }\n\n  onColumnChange(columnName) {\n    const column = this.props.columns.find(\n      column => column.column_name === columnName,\n    );\n    this.setState(prevState => ({\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        column,\n        expressionType: EXPRESSION_TYPES.SIMPLE,\n      }),\n      savedMetric: undefined,\n    }));\n  }\n\n  onAggregateChange(aggregate) {\n    // we construct this object explicitly to overwrite the value in the case aggregate is null\n    this.setState(prevState => ({\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        aggregate,\n        expressionType: EXPRESSION_TYPES.SIMPLE,\n      }),\n      savedMetric: undefined,\n    }));\n  }\n\n  onSavedMetricChange(savedMetricName) {\n    const savedMetric = this.props.savedMetricsOptions.find(\n      metric => metric.metric_name === savedMetricName,\n    );\n    this.setState(prevState => ({\n      savedMetric,\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        column: undefined,\n        aggregate: undefined,\n        sqlExpression: undefined,\n        expressionType: EXPRESSION_TYPES.SIMPLE,\n      }),\n    }));\n  }\n\n  onSqlExpressionChange(sqlExpression) {\n    this.setState(prevState => ({\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        sqlExpression,\n        expressionType: EXPRESSION_TYPES.SQL,\n      }),\n      savedMetric: undefined,\n    }));\n  }\n\n  onDragDown(e) {\n    this.dragStartX = e.clientX;\n    this.dragStartY = e.clientY;\n    this.dragStartWidth = this.state.width;\n    this.dragStartHeight = this.state.height;\n    document.addEventListener('mousemove', this.onMouseMove);\n  }\n\n  onMouseMove(e) {\n    this.props.onResize();\n    this.setState({\n      width: Math.max(\n        this.dragStartWidth + (e.clientX - this.dragStartX),\n        POPOVER_INITIAL_WIDTH,\n      ),\n      height: Math.max(\n        this.dragStartHeight + (e.clientY - this.dragStartY),\n        POPOVER_INITIAL_HEIGHT,\n      ),\n    });\n  }\n\n  onMouseUp() {\n    document.removeEventListener('mousemove', this.onMouseMove);\n  }\n\n  onTabChange(tab) {\n    this.refreshAceEditor();\n    this.props.getCurrentTab(tab);\n  }\n\n  handleAceEditorRef(ref) {\n    if (ref) {\n      this.aceEditorRef = ref;\n    }\n  }\n\n  refreshAceEditor() {\n    setTimeout(() => {\n      if (this.aceEditorRef) {\n        this.aceEditorRef.editor.resize();\n      }\n    }, 0);\n  }\n\n  renderColumnOption(option) {\n    const column = { ...option };\n    if (column.metric_name && !column.verbose_name) {\n      column.verbose_name = column.metric_name;\n    }\n    return <StyledColumnOption column={column} showType />;\n  }\n\n  renderMetricOption(savedMetric) {\n    return <StyledMetricOption metric={savedMetric} showType />;\n  }\n\n  render() {\n    const {\n      adhocMetric: propsAdhocMetric,\n      savedMetric: propsSavedMetric,\n      columns,\n      savedMetricsOptions,\n      onChange,\n      onClose,\n      onResize,\n      datasource,\n      isNewMetric,\n      isLabelModified,\n      ...popoverProps\n    } = this.props;\n    const { adhocMetric, savedMetric } = this.state;\n    const keywords = sqlKeywords.concat(\n      columns.map(column => ({\n        name: column.column_name,\n        value: column.column_name,\n        score: 50,\n        meta: 'column',\n      })),\n    );\n\n    const columnValue =\n      (adhocMetric.column && adhocMetric.column.column_name) ||\n      adhocMetric.inferSqlExpressionColumn();\n\n    // autofocus on column if there's no value in column; otherwise autofocus on aggregate\n    const columnSelectProps = {\n      ariaLabel: t('Select column'),\n      placeholder: t('%s column(s)', columns.length),\n      value: columnValue,\n      onChange: this.onColumnChange,\n      allowClear: true,\n      autoFocus: !columnValue,\n    };\n\n    const aggregateSelectProps = {\n      ariaLabel: t('Select aggregate options'),\n      placeholder: t('%s aggregates(s)', AGGREGATES_OPTIONS.length),\n      value: adhocMetric.aggregate || adhocMetric.inferSqlExpressionAggregate(),\n      onChange: this.onAggregateChange,\n      allowClear: true,\n      autoFocus: !!columnValue,\n    };\n\n    const savedSelectProps = {\n      ariaLabel: t('Select saved metrics'),\n      placeholder: t('%s saved metric(s)', savedMetricsOptions?.length ?? 0),\n      value: savedMetric?.metric_name,\n      onChange: this.onSavedMetricChange,\n      allowClear: true,\n      autoFocus: true,\n    };\n\n    const stateIsValid = adhocMetric.isValid() || savedMetric?.metric_name;\n    const hasUnsavedChanges =\n      isLabelModified ||\n      isNewMetric ||\n      !adhocMetric.equals(propsAdhocMetric) ||\n      (!(\n        typeof savedMetric?.metric_name === 'undefined' &&\n        typeof propsSavedMetric?.metric_name === 'undefined'\n      ) &&\n        savedMetric?.metric_name !== propsSavedMetric?.metric_name);\n\n    let extra = {};\n    if (datasource?.extra) {\n      try {\n        extra = JSON.parse(datasource.extra);\n      } catch {} // eslint-disable-line no-empty\n    }\n\n    return (\n      <Form\n        layout=\"vertical\"\n        id=\"metrics-edit-popover\"\n        data-test=\"metrics-edit-popover\"\n        {...popoverProps}\n      >\n        <Tabs\n          id=\"adhoc-metric-edit-tabs\"\n          data-test=\"adhoc-metric-edit-tabs\"\n          defaultActiveKey={this.defaultActiveTabKey}\n          className=\"adhoc-metric-edit-tabs\"\n          style={{ height: this.state.height, width: this.state.width }}\n          onChange={this.onTabChange}\n          allowOverflow\n        >\n          <Tabs.TabPane key={SAVED_TAB_KEY} tab={t('Saved')}>\n            {ensureIsArray(savedMetricsOptions).length > 0 ? (\n              <FormItem label={t('Saved metric')}>\n                <StyledSelect\n                  options={ensureIsArray(savedMetricsOptions).map(\n                    savedMetric => ({\n                      value: savedMetric.metric_name,\n                      label: savedMetric.metric_name,\n                      customLabel: this.renderMetricOption(savedMetric),\n                      key: savedMetric.id,\n                    }),\n                  )}\n                  {...savedSelectProps}\n                />\n              </FormItem>\n            ) : datasource.type === DatasourceType.Table ? (\n              <EmptyStateSmall\n                image=\"empty.svg\"\n                title={t('No saved metrics found')}\n                description={t(\n                  'Add metrics to dataset in \"Edit datasource\" modal',\n                )}\n              />\n            ) : (\n              <EmptyStateSmall\n                image=\"empty.svg\"\n                title={t('No saved metrics found')}\n                description={\n                  <>\n                    <span\n                      tabIndex={0}\n                      role=\"button\"\n                      onClick={() => {\n                        this.props.handleDatasetModal(true);\n                        this.props.onClose();\n                      }}\n                    >\n                      {t('Create a dataset')}\n                    </span>\n                    {t(' to add metrics')}\n                  </>\n                }\n              />\n            )}\n          </Tabs.TabPane>\n          <Tabs.TabPane\n            key={EXPRESSION_TYPES.SIMPLE}\n            tab={\n              extra.disallow_adhoc_metrics ? (\n                <Tooltip\n                  title={t(\n                    'Simple ad-hoc metrics are not enabled for this dataset',\n                  )}\n                >\n                  {t('Simple')}\n                </Tooltip>\n              ) : (\n                t('Simple')\n              )\n            }\n            disabled={extra.disallow_adhoc_metrics}\n          >\n            <FormItem label={t('column')}>\n              <Select\n                options={columns.map(column => ({\n                  value: column.column_name,\n                  label: column.verbose_name || column.column_name,\n                  key: column.id,\n                  customLabel: this.renderColumnOption(column),\n                }))}\n                {...columnSelectProps}\n              />\n            </FormItem>\n            <FormItem label={t('aggregate')}>\n              <Select\n                options={AGGREGATES_OPTIONS.map(option => ({\n                  value: option,\n                  label: option,\n                  key: option,\n                }))}\n                {...aggregateSelectProps}\n              />\n            </FormItem>\n          </Tabs.TabPane>\n          <Tabs.TabPane\n            key={EXPRESSION_TYPES.SQL}\n            tab={\n              extra.disallow_adhoc_metrics ? (\n                <Tooltip\n                  title={t(\n                    'Custom SQL ad-hoc metrics are not enabled for this dataset',\n                  )}\n                >\n                  {t('Custom SQL')}\n                </Tooltip>\n              ) : (\n                t('Custom SQL')\n              )\n            }\n            data-test=\"adhoc-metric-edit-tab#custom\"\n            disabled={extra.disallow_adhoc_metrics}\n          >\n            <SQLEditor\n              data-test=\"sql-editor\"\n              showLoadingForImport\n              ref={this.handleAceEditorRef}\n              keywords={keywords}\n              height={`${this.state.height - 80}px`}\n              onChange={this.onSqlExpressionChange}\n              width=\"100%\"\n              showGutter={false}\n              value={\n                adhocMetric.sqlExpression ||\n                adhocMetric.translateToSql({ transformCountDistinct: true })\n              }\n              editorProps={{ $blockScrolling: true }}\n              enableLiveAutocompletion\n              className=\"filter-sql-editor\"\n              wrapEnabled\n            />\n          </Tabs.TabPane>\n        </Tabs>\n        <div>\n          <Button\n            buttonSize=\"small\"\n            onClick={this.onResetStateAndClose}\n            data-test=\"AdhocMetricEdit#cancel\"\n            cta\n          >\n            {t('Close')}\n          </Button>\n          <Button\n            disabled={!stateIsValid || !hasUnsavedChanges}\n            buttonStyle=\"primary\"\n            buttonSize=\"small\"\n            data-test=\"AdhocMetricEdit#save\"\n            onClick={this.onSave}\n            cta\n          >\n            {t('Save')}\n          </Button>\n          <i\n            role=\"button\"\n            aria-label=\"Resize\"\n            tabIndex={0}\n            onMouseDown={this.onDragDown}\n            className=\"fa fa-expand edit-popover-resize text-muted\"\n          />\n        </div>\n      </Form>\n    );\n  }\n}\nAdhocMetricEditPopover.propTypes = propTypes;\nAdhocMetricEditPopover.defaultProps = defaultProps;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}