{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport shortid from 'shortid';\nimport { ToastType } from './types';\nexport function getToastUuid(type) {\n  return `${type}-${shortid.generate()}`;\n}\nexport const ADD_TOAST = 'ADD_TOAST';\nexport function addToast(_ref) {let { toastType, text, duration = 8000, noDuplicate = false } = _ref;\n  return {\n    type: ADD_TOAST,\n    payload: {\n      id: getToastUuid(toastType),\n      toastType,\n      text,\n      duration,\n      noDuplicate } };\n\n\n}\nexport const REMOVE_TOAST = 'REMOVE_TOAST';\nexport function removeToast(id) {\n  return {\n    type: REMOVE_TOAST,\n    payload: {\n      id } };\n\n\n}\n// Different types of toasts\nexport const ADD_INFO_TOAST = 'ADD_INFO_TOAST';\nexport function addInfoToast(text, options) {\n  return addToast({\n    text,\n    toastType: ToastType.INFO,\n    duration: 4000,\n    ...options });\n\n}\nexport const ADD_SUCCESS_TOAST = 'ADD_SUCCESS_TOAST';\nexport function addSuccessToast(text, options) {\n  return addToast({\n    text,\n    toastType: ToastType.SUCCESS,\n    duration: 4000,\n    ...options });\n\n}\nexport const ADD_WARNING_TOAST = 'ADD_WARNING_TOAST';\nexport function addWarningToast(text, options) {\n  return addToast({\n    text,\n    toastType: ToastType.WARNING,\n    duration: 6000,\n    ...options });\n\n}\nexport const ADD_DANGER_TOAST = 'ADD_DANGER_TOAST';\nexport function addDangerToast(text, options) {\n  return addToast({\n    text,\n    toastType: ToastType.DANGER,\n    duration: 8000,\n    ...options });\n\n}\nexport const toastActions = {\n  addInfoToast,\n  addSuccessToast,\n  addWarningToast,\n  addDangerToast };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getToastUuid, \"getToastUuid\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(ADD_TOAST, \"ADD_TOAST\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(addToast, \"addToast\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(REMOVE_TOAST, \"REMOVE_TOAST\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(removeToast, \"removeToast\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(ADD_INFO_TOAST, \"ADD_INFO_TOAST\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(addInfoToast, \"addInfoToast\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(ADD_SUCCESS_TOAST, \"ADD_SUCCESS_TOAST\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(addSuccessToast, \"addSuccessToast\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(ADD_WARNING_TOAST, \"ADD_WARNING_TOAST\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(addWarningToast, \"addWarningToast\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(ADD_DANGER_TOAST, \"ADD_DANGER_TOAST\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(addDangerToast, \"addDangerToast\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(toastActions, \"toastActions\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/actions.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,SAAT,QAAqC,SAArC;AAIA,OAAM,SAAUC,YAAV,CAAuBC,IAAvB,EAAsC;EAC1C,OAAO,GAAGA,IAAI,IAAIH,OAAO,CAACI,QAAR,EAAkB,EAApC;AACD;AAED,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAM,SAAUC,QAAV,OAKkB,KALC,EACvBC,SADuB,EAEvBC,IAFuB,EAGvBC,QAAQ,GAAG,IAHY,EAIvBC,WAAW,GAAG,KAJS,EAKD;EACtB,OAAO;IACLP,IAAI,EAAEE,SADD;IAELM,OAAO,EAAE;MACPC,EAAE,EAAEV,YAAY,CAACK,SAAD,CADT;MAEPA,SAFO;MAGPC,IAHO;MAIPC,QAJO;MAKPC,WALO,EAFJ,EAAP;;;AAUD;AAED,OAAO,MAAMG,YAAY,GAAG,cAArB;AACP,OAAM,SAAUC,WAAV,CAAsBF,EAAtB,EAAgC;EACpC,OAAO;IACLT,IAAI,EAAEU,YADD;IAELF,OAAO,EAAE;MACPC,EADO,EAFJ,EAAP;;;AAMD;AAED;AACA,OAAO,MAAMG,cAAc,GAAG,gBAAvB;AACP,OAAM,SAAUC,YAAV,CAAuBR,IAAvB,EAAqCS,OAArC,EAA2D;EAC/D,OAAOX,QAAQ,CAAC;IACdE,IADc;IAEdD,SAAS,EAAEN,SAAS,CAACiB,IAFP;IAGdT,QAAQ,EAAE,IAHI;IAId,GAAGQ,OAJW,EAAD,CAAf;;AAMD;AAED,OAAO,MAAME,iBAAiB,GAAG,mBAA1B;AACP,OAAM,SAAUC,eAAV,CAA0BZ,IAA1B,EAAwCS,OAAxC,EAA8D;EAClE,OAAOX,QAAQ,CAAC;IACdE,IADc;IAEdD,SAAS,EAAEN,SAAS,CAACoB,OAFP;IAGdZ,QAAQ,EAAE,IAHI;IAId,GAAGQ,OAJW,EAAD,CAAf;;AAMD;AAED,OAAO,MAAMK,iBAAiB,GAAG,mBAA1B;AACP,OAAM,SAAUC,eAAV,CAA0Bf,IAA1B,EAAwCS,OAAxC,EAA8D;EAClE,OAAOX,QAAQ,CAAC;IACdE,IADc;IAEdD,SAAS,EAAEN,SAAS,CAACuB,OAFP;IAGdf,QAAQ,EAAE,IAHI;IAId,GAAGQ,OAJW,EAAD,CAAf;;AAMD;AAED,OAAO,MAAMQ,gBAAgB,GAAG,kBAAzB;AACP,OAAM,SAAUC,cAAV,CAAyBlB,IAAzB,EAAuCS,OAAvC,EAA6D;EACjE,OAAOX,QAAQ,CAAC;IACdE,IADc;IAEdD,SAAS,EAAEN,SAAS,CAAC0B,MAFP;IAGdlB,QAAQ,EAAE,IAHI;IAId,GAAGQ,OAJW,EAAD,CAAf;;AAMD;AAED,OAAO,MAAMW,YAAY,GAAG;EAC1BZ,YAD0B;EAE1BI,eAF0B;EAG1BG,eAH0B;EAI1BG,cAJ0B,EAArB,C,iLA1ESxB,Y,sJAIHG,S,mJACGC,Q,kJAkBHO,Y,sJACGC,W,qJAUHC,c,wJACGC,Y,sJASHG,iB,2JACGC,e,yJASHE,iB,2JACGC,e,yJASHE,gB,0JACGC,c,wJASHE,Y","names":["shortid","ToastType","getToastUuid","type","generate","ADD_TOAST","addToast","toastType","text","duration","noDuplicate","payload","id","REMOVE_TOAST","removeToast","ADD_INFO_TOAST","addInfoToast","options","INFO","ADD_SUCCESS_TOAST","addSuccessToast","SUCCESS","ADD_WARNING_TOAST","addWarningToast","WARNING","ADD_DANGER_TOAST","addDangerToast","DANGER","toastActions"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/actions.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport shortid from 'shortid';\nimport { ToastType, ToastMeta } from './types';\n\ntype ToastOptions = Partial<Omit<ToastMeta, 'id' | 'toastType' | 'text'>>;\n\nexport function getToastUuid(type: ToastType) {\n  return `${type}-${shortid.generate()}`;\n}\n\nexport const ADD_TOAST = 'ADD_TOAST';\nexport function addToast({\n  toastType,\n  text,\n  duration = 8000,\n  noDuplicate = false,\n}: Omit<ToastMeta, 'id'>) {\n  return {\n    type: ADD_TOAST,\n    payload: {\n      id: getToastUuid(toastType),\n      toastType,\n      text,\n      duration,\n      noDuplicate,\n    },\n  };\n}\n\nexport const REMOVE_TOAST = 'REMOVE_TOAST';\nexport function removeToast(id: string) {\n  return {\n    type: REMOVE_TOAST,\n    payload: {\n      id,\n    },\n  };\n}\n\n// Different types of toasts\nexport const ADD_INFO_TOAST = 'ADD_INFO_TOAST';\nexport function addInfoToast(text: string, options?: ToastOptions) {\n  return addToast({\n    text,\n    toastType: ToastType.INFO,\n    duration: 4000,\n    ...options,\n  });\n}\n\nexport const ADD_SUCCESS_TOAST = 'ADD_SUCCESS_TOAST';\nexport function addSuccessToast(text: string, options?: ToastOptions) {\n  return addToast({\n    text,\n    toastType: ToastType.SUCCESS,\n    duration: 4000,\n    ...options,\n  });\n}\n\nexport const ADD_WARNING_TOAST = 'ADD_WARNING_TOAST';\nexport function addWarningToast(text: string, options?: ToastOptions) {\n  return addToast({\n    text,\n    toastType: ToastType.WARNING,\n    duration: 6000,\n    ...options,\n  });\n}\n\nexport const ADD_DANGER_TOAST = 'ADD_DANGER_TOAST';\nexport function addDangerToast(text: string, options?: ToastOptions) {\n  return addToast({\n    text,\n    toastType: ToastType.DANGER,\n    duration: 8000,\n    ...options,\n  });\n}\n\nexport const toastActions = {\n  addInfoToast,\n  addSuccessToast,\n  addWarningToast,\n  addDangerToast,\n};\n"]},"metadata":{},"sourceType":"module"}