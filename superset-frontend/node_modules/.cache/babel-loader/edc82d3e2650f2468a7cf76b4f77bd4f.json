{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport default class Preset {\n\n\n\n\n  constructor(config) {if (config === void 0) {config = {};}this.name = void 0;this.description = void 0;this.presets = void 0;this.plugins = void 0;\n    const { name = '', description = '', presets = [], plugins = [] } = config;\n    this.name = name;\n    this.description = description;\n    this.presets = presets;\n    this.plugins = plugins;\n  }\n  register() {\n    this.presets.forEach((preset) => {\n      preset.register();\n    });\n    this.plugins.forEach((plugin) => {\n      plugin.register();\n    });\n    return this;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Preset, \"Preset\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/models/Preset.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAqBA,eAAc,MAAOA,MAAP,CAAa;;;;;EASzBC,YACEC,MADF,EAMQ,KALNA,MAKM,cALNA,MAKM,GAAF,EAAE,OAdRC,IAcQ,eAZRC,WAYQ,eAVRC,OAUQ,eARRC,OAQQ;IAEN,MAAM,EAAEH,IAAI,GAAG,EAAT,EAAaC,WAAW,GAAG,EAA3B,EAA+BC,OAAO,GAAG,EAAzC,EAA6CC,OAAO,GAAG,EAAvD,KAA8DJ,MAApE;IACA,KAAKC,IAAL,GAAYA,IAAZ;IACA,KAAKC,WAAL,GAAmBA,WAAnB;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKC,OAAL,GAAeA,OAAf;EACD;EAEDC,QAAQ;IACN,KAAKF,OAAL,CAAaG,OAAb,CAAqB,OAAM,KAAG;MAC5BC,MAAM,CAACF,QAAP;IACD,CAFD;IAGA,KAAKD,OAAL,CAAaE,OAAb,CAAqB,OAAM,KAAG;MAC5BE,MAAM,CAACH,QAAP;IACD,CAFD;IAIA,OAAO,IAAP;EACD,CAjCwB;EAAA;IAAA,yB,iLAANP,M","names":["Preset","constructor","config","name","description","presets","plugins","register","forEach","preset","plugin"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/models/Preset.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Plugin from './Plugin';\n\nexport default class Preset {\n  name: string;\n\n  description: string;\n\n  presets: Preset[];\n\n  plugins: Plugin[];\n\n  constructor(\n    config: {\n      name?: string;\n      description?: string;\n      presets?: Preset[];\n      plugins?: Plugin[];\n    } = {},\n  ) {\n    const { name = '', description = '', presets = [], plugins = [] } = config;\n    this.name = name;\n    this.description = description;\n    this.presets = presets;\n    this.plugins = plugins;\n  }\n\n  register() {\n    this.presets.forEach(preset => {\n      preset.register();\n    });\n    this.plugins.forEach(plugin => {\n      plugin.register();\n    });\n\n    return this;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}