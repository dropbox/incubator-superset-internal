{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { PureComponent } from 'react';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst defaultProps = {\n  className: '',\n  data: [] };\n\nconst VALUE_CELL_STYLE = { paddingLeft: 8, textAlign: 'right' };\nexport default class TooltipTable extends PureComponent {\n\n  render() {\n    const { className, data } = this.props;\n    return ___EmotionJSX(\"table\", { className: className },\n    ___EmotionJSX(\"tbody\", null,\n    data.map((_ref) => {let { key, keyColumn, keyStyle, valueColumn, valueStyle } = _ref;return ___EmotionJSX(\"tr\", { key: key },\n      ___EmotionJSX(\"td\", { style: keyStyle }, keyColumn != null ? keyColumn : key),\n      ___EmotionJSX(\"td\", { style: valueStyle ?\n        { ...VALUE_CELL_STYLE, ...valueStyle } :\n        VALUE_CELL_STYLE },\n      valueColumn));})));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}TooltipTable.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(defaultProps, \"defaultProps\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/chart-composition/tooltip/TooltipTable.tsx\");reactHotLoader.register(VALUE_CELL_STYLE, \"VALUE_CELL_STYLE\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/chart-composition/tooltip/TooltipTable.tsx\");reactHotLoader.register(TooltipTable, \"TooltipTable\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/chart-composition/tooltip/TooltipTable.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,KAAP,IAA+BC,aAA/B,QAA+D,OAA/D,C;AAUA,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,EADQ;EAEnBC,IAAI,EAAE,EAFa,EAArB;;AAUA,MAAMC,gBAAgB,GAAkB,EAAEC,WAAW,EAAE,CAAf,EAAkBC,SAAS,EAAE,OAA7B,EAAxC;AAEA,eAAc,MAAOC,YAAP,SAA4BP,aAA5B,CAAoD;;EAGhEQ,MAAM;IACJ,MAAM,EAAEN,SAAF,EAAaC,IAAb,KAAsB,KAAKM,KAAjC;IAEA,OACE,yBAAO,SAAS,EAAEP,SAAlB;IACE;IACGC,IAAI,CAACO,GAAL,CAAS,eAAC,EAAEC,GAAF,EAAOC,SAAP,EAAkBC,QAAlB,EAA4BC,WAA5B,EAAyCC,UAAzC,EAAD,eACR,sBAAI,GAAG,EAAEJ,GAAT;MACE,sBAAI,KAAK,EAAEE,QAAX,IAAsBD,SAAtB,WAAsBA,SAAtB,GAAmCD,GAAnC,CADF;MAEE,sBACE,KAAK,EACHI,UAAU;QACN,EAAE,GAAGX,gBAAL,EAAuB,GAAGW,UAA1B,EADM;QAENX,gBAJR;MAOGU,WAPH,CAFF,CADQ,EAAT,CADH,CADF,CADF;;;;;EAoBD,CA1B+D;EAAA;IAAA,yBAA7CP,Y,CACZN,Y,GAAeA,Y,kLAblBA,Y,uLAUAG,gB,2LAEeG,Y","names":["React","PureComponent","defaultProps","className","data","VALUE_CELL_STYLE","paddingLeft","textAlign","TooltipTable","render","props","map","key","keyColumn","keyStyle","valueColumn","valueStyle"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/chart-composition/tooltip/TooltipTable.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { CSSProperties, PureComponent, ReactNode } from 'react';\n\ninterface TooltipRowData {\n  key: string | number;\n  keyColumn?: ReactNode;\n  keyStyle?: CSSProperties;\n  valueColumn: ReactNode;\n  valueStyle?: CSSProperties;\n}\n\nconst defaultProps = {\n  className: '',\n  data: [] as TooltipRowData[],\n};\n\ntype Props = {\n  className?: string;\n  data: TooltipRowData[];\n} & Readonly<typeof defaultProps>;\n\nconst VALUE_CELL_STYLE: CSSProperties = { paddingLeft: 8, textAlign: 'right' };\n\nexport default class TooltipTable extends PureComponent<Props, {}> {\n  static defaultProps = defaultProps;\n\n  render() {\n    const { className, data } = this.props;\n\n    return (\n      <table className={className}>\n        <tbody>\n          {data.map(({ key, keyColumn, keyStyle, valueColumn, valueStyle }) => (\n            <tr key={key}>\n              <td style={keyStyle}>{keyColumn ?? key}</td>\n              <td\n                style={\n                  valueStyle\n                    ? { ...VALUE_CELL_STYLE, ...valueStyle }\n                    : VALUE_CELL_STYLE\n                }\n              >\n                {valueColumn}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}