{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { Dropdown } from 'src/components/Dropdown';\nimport { Menu } from 'src/components/Menu';\nimport { styled, t } from '@superset-ui/core';\nimport { removeQueryEditor, removeAllOtherQueryEditors, queryEditorSetTitle, cloneQueryToNewTab, toggleLeftBar } from 'src/SqlLab/actions/sqlLab';\nimport TabStatusIcon from '../TabStatusIcon';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst TabTitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst TabTitle = styled.span`\n  margin-right: ${(_ref) => {let { theme } = _ref;return theme.gridUnit * 2;}}px;\n  text-transform: none;\n`;\nconst IconContainer = styled.div`\n  display: inline-block;\n  width: ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit * 8;}}px;\n  text-align: center;\n`;\nconst SqlEditorTabHeader = (_ref3) => {let { queryEditor } = _ref3;\n  const qe = useSelector((_ref4) => {let { sqlLab: { unsavedQueryEditor } } = _ref4;return {\n      ...queryEditor,\n      ...(queryEditor.id === unsavedQueryEditor.id && unsavedQueryEditor) };},\n  shallowEqual);\n  const queryState = useSelector((_ref5) => {var _sqlLab$queries;let { sqlLab } = _ref5;return ((_sqlLab$queries = sqlLab.queries[qe.latestQueryId || '']) == null ? void 0 : _sqlLab$queries.state) || '';});\n  const dispatch = useDispatch();\n  const actions = useMemo(() => bindActionCreators({\n    removeQueryEditor,\n    removeAllOtherQueryEditors,\n    queryEditorSetTitle,\n    cloneQueryToNewTab,\n    toggleLeftBar },\n  dispatch), [dispatch]);\n  function renameTab() {\n    const newTitle = prompt(t('Enter a new title for the tab'));\n    if (newTitle) {\n      actions.queryEditorSetTitle(qe, newTitle, qe.id);\n    }\n  }\n  return ___EmotionJSX(TabTitleWrapper, null,\n  ___EmotionJSX(Dropdown, { trigger: ['click'], overlay: ___EmotionJSX(Menu, { style: { width: 176 } },\n    ___EmotionJSX(Menu.Item, { className: \"close-btn\", key: \"1\", onClick: () => actions.removeQueryEditor(qe), \"data-test\": \"close-tab-menu-option\" },\n    ___EmotionJSX(IconContainer, null,\n    ___EmotionJSX(\"i\", { className: \"fa fa-close\" })),\n\n    t('Close tab')),\n\n    ___EmotionJSX(Menu.Item, { key: \"2\", onClick: renameTab, \"data-test\": \"rename-tab-menu-option\" },\n    ___EmotionJSX(IconContainer, null,\n    ___EmotionJSX(\"i\", { className: \"fa fa-i-cursor\" })),\n\n    t('Rename tab')),\n\n    ___EmotionJSX(Menu.Item, { key: \"3\", onClick: () => actions.toggleLeftBar(qe), \"data-test\": \"toggle-menu-option\" },\n    ___EmotionJSX(IconContainer, null,\n    ___EmotionJSX(\"i\", { className: \"fa fa-cogs\" })),\n\n    qe.hideLeftBar ? t('Expand tool bar') : t('Hide tool bar')),\n\n    ___EmotionJSX(Menu.Item, { key: \"4\", onClick: () => actions.removeAllOtherQueryEditors(qe), \"data-test\": \"close-all-other-menu-option\" },\n    ___EmotionJSX(IconContainer, null,\n    ___EmotionJSX(\"i\", { className: \"fa fa-times-circle-o\" })),\n\n    t('Close all other tabs')),\n\n    ___EmotionJSX(Menu.Item, { key: \"5\", onClick: () => actions.cloneQueryToNewTab(qe, false), \"data-test\": \"clone-tab-menu-option\" },\n    ___EmotionJSX(IconContainer, null,\n    ___EmotionJSX(\"i\", { className: \"fa fa-files-o\" })),\n\n    t('Duplicate tab'))) }),\n\n\n  ___EmotionJSX(TabTitle, null, qe.name), \" \", ___EmotionJSX(TabStatusIcon, { tabState: queryState }), ' ');\n\n};__signature__(SqlEditorTabHeader, \"useSelector{qe}\\nuseSelector{queryState}\\nuseDispatch{dispatch}\\nuseMemo{actions}\", () => [useSelector, useSelector, useDispatch]);const _default =\nSqlEditorTabHeader;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TabTitleWrapper, \"TabTitleWrapper\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/SqlEditorTabHeader/index.tsx\");reactHotLoader.register(TabTitle, \"TabTitle\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/SqlEditorTabHeader/index.tsx\");reactHotLoader.register(IconContainer, \"IconContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/SqlEditorTabHeader/index.tsx\");reactHotLoader.register(SqlEditorTabHeader, \"SqlEditorTabHeader\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/SqlEditorTabHeader/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/SqlEditorTabHeader/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useMemo","bindActionCreators","useSelector","useDispatch","shallowEqual","Dropdown","Menu","styled","t","removeQueryEditor","removeAllOtherQueryEditors","queryEditorSetTitle","cloneQueryToNewTab","toggleLeftBar","TabStatusIcon","TabTitleWrapper","div","TabTitle","span","theme","gridUnit","IconContainer","SqlEditorTabHeader","queryEditor","qe","sqlLab","unsavedQueryEditor","id","queryState","queries","latestQueryId","state","dispatch","actions","renameTab","newTitle","prompt","width","hideLeftBar","name"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/SqlEditorTabHeader/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { Dropdown } from 'src/components/Dropdown';\nimport { Menu } from 'src/components/Menu';\nimport { styled, t, QueryState } from '@superset-ui/core';\nimport {\n  removeQueryEditor,\n  removeAllOtherQueryEditors,\n  queryEditorSetTitle,\n  cloneQueryToNewTab,\n  toggleLeftBar,\n} from 'src/SqlLab/actions/sqlLab';\nimport { QueryEditor, SqlLabRootState } from 'src/SqlLab/types';\nimport TabStatusIcon from '../TabStatusIcon';\n\nconst TabTitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst TabTitle = styled.span`\n  margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n  text-transform: none;\n`;\n\nconst IconContainer = styled.div`\n  display: inline-block;\n  width: ${({ theme }) => theme.gridUnit * 8}px;\n  text-align: center;\n`;\n\ninterface Props {\n  queryEditor: QueryEditor;\n}\n\nconst SqlEditorTabHeader: React.FC<Props> = ({ queryEditor }) => {\n  const qe = useSelector<SqlLabRootState, QueryEditor>(\n    ({ sqlLab: { unsavedQueryEditor } }) => ({\n      ...queryEditor,\n      ...(queryEditor.id === unsavedQueryEditor.id && unsavedQueryEditor),\n    }),\n    shallowEqual,\n  );\n  const queryState = useSelector<SqlLabRootState, QueryState>(\n    ({ sqlLab }) => sqlLab.queries[qe.latestQueryId || '']?.state || '',\n  );\n  const dispatch = useDispatch();\n  const actions = useMemo(\n    () =>\n      bindActionCreators(\n        {\n          removeQueryEditor,\n          removeAllOtherQueryEditors,\n          queryEditorSetTitle,\n          cloneQueryToNewTab,\n          toggleLeftBar,\n        },\n        dispatch,\n      ),\n    [dispatch],\n  );\n\n  function renameTab() {\n    const newTitle = prompt(t('Enter a new title for the tab'));\n    if (newTitle) {\n      actions.queryEditorSetTitle(qe, newTitle, qe.id);\n    }\n  }\n\n  return (\n    <TabTitleWrapper>\n      <Dropdown\n        trigger={['click']}\n        overlay={\n          <Menu style={{ width: 176 }}>\n            <Menu.Item\n              className=\"close-btn\"\n              key=\"1\"\n              onClick={() => actions.removeQueryEditor(qe)}\n              data-test=\"close-tab-menu-option\"\n            >\n              <IconContainer>\n                <i className=\"fa fa-close\" />\n              </IconContainer>\n              {t('Close tab')}\n            </Menu.Item>\n            <Menu.Item\n              key=\"2\"\n              onClick={renameTab}\n              data-test=\"rename-tab-menu-option\"\n            >\n              <IconContainer>\n                <i className=\"fa fa-i-cursor\" />\n              </IconContainer>\n              {t('Rename tab')}\n            </Menu.Item>\n            <Menu.Item\n              key=\"3\"\n              onClick={() => actions.toggleLeftBar(qe)}\n              data-test=\"toggle-menu-option\"\n            >\n              <IconContainer>\n                <i className=\"fa fa-cogs\" />\n              </IconContainer>\n              {qe.hideLeftBar ? t('Expand tool bar') : t('Hide tool bar')}\n            </Menu.Item>\n            <Menu.Item\n              key=\"4\"\n              onClick={() => actions.removeAllOtherQueryEditors(qe)}\n              data-test=\"close-all-other-menu-option\"\n            >\n              <IconContainer>\n                <i className=\"fa fa-times-circle-o\" />\n              </IconContainer>\n              {t('Close all other tabs')}\n            </Menu.Item>\n            <Menu.Item\n              key=\"5\"\n              onClick={() => actions.cloneQueryToNewTab(qe, false)}\n              data-test=\"clone-tab-menu-option\"\n            >\n              <IconContainer>\n                <i className=\"fa fa-files-o\" />\n              </IconContainer>\n              {t('Duplicate tab')}\n            </Menu.Item>\n          </Menu>\n        }\n      />\n      <TabTitle>{qe.name}</TabTitle> <TabStatusIcon tabState={queryState} />{' '}\n    </TabTitleWrapper>\n  );\n};\n\nexport default SqlEditorTabHeader;\n"]},"metadata":{},"sourceType":"module"}