{"ast":null,"code":"import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { formatSelectOptions } from '@superset-ui/chart-controls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction DefaultSelectRenderer(_ref) {let { current, options, onChange } = _ref;\n  return ___EmotionJSX(\"span\", { className: \"dt-select-page-size form-inline\" },\n  t('Show'), ' ',\n  ___EmotionJSX(\"select\", { className: \"form-control input-sm\", value: current, onBlur: () => {}, onChange: (e) => {\n      onChange(Number(e.target.value));\n    } },\n  options.map((option) => {\n    const [size, text] = Array.isArray(option) ?\n    option :\n    [option, option];\n    return ___EmotionJSX(\"option\", { key: size, value: size },\n    text);\n\n  })),\n  ' ',\n  t('entries'));\n\n}\nfunction getOptionValue(x) {\n  return Array.isArray(x) ? x[0] : x;\n}\nexport default /*#__PURE__*/React.memo(function SelectPageSize(_ref2) {let { total, options: sizeOptions, current: currentSize, selectRenderer, onChange } = _ref2;\n  const sizeOptionValues = sizeOptions.map(getOptionValue);\n  let options = [...sizeOptions];\n  // insert current size to list\n  if (currentSize !== undefined && (\n  currentSize !== total || !_includesInstanceProperty(sizeOptionValues).call(sizeOptionValues, 0)) &&\n  !_includesInstanceProperty(sizeOptionValues).call(sizeOptionValues, currentSize)) {\n    options = [...sizeOptions];\n    options.splice(sizeOptionValues.findIndex((x) => x > currentSize), 0, formatSelectOptions([currentSize])[0]);\n  }\n  const current = currentSize === undefined ? sizeOptionValues[0] : currentSize;\n  const SelectRenderer = selectRenderer || DefaultSelectRenderer;\n  return ___EmotionJSX(SelectRenderer, { current: current, options: options, onChange: onChange });\n});","map":{"version":3,"mappings":"iGAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,CAAT,QAAkB,mBAAlB;AACA,SAASC,mBAAT,QAAoC,6BAApC,C;AAUA,SAASC,qBAAT,OAI8B,KAJC,EAC7BC,OAD6B,EAE7BC,OAF6B,EAG7BC,QAH6B,EAID;EAC5B,OACE,wBAAM,SAAS,EAAC,iCAAhB;EACGL,CAAC,CAAC,MAAD,CADJ,EACc,GADd;EAEE,0BACE,SAAS,EAAC,uBADZ,EAEE,KAAK,EAAEG,OAFT,EAGE,MAAM,EAAE,MAAK,CAAG,CAHlB,EAIE,QAAQ,EAAE,EAAC,KAAG;MACZE,QAAQ,CAACC,MAAM,CAAEC,CAAC,CAACC,MAAF,CAA+BC,KAAjC,CAAP,CAAR;IACD,CANH;EAQGL,OAAO,CAACM,GAAR,CAAY,OAAM,KAAG;IACpB,MAAM,CAACC,IAAD,EAAOC,IAAP,IAAeC,KAAK,CAACC,OAAN,CAAcC,MAAd;IACjBA,MADiB;IAEjB,CAACA,MAAD,EAASA,MAAT,CAFJ;IAGA,OACE,0BAAQ,GAAG,EAAEJ,IAAb,EAAmB,KAAK,EAAEA,IAA1B;IACGC,IADH,CADF;;EAKD,CATA,CARH,CAFF;EAoBY,GApBZ;EAqBGZ,CAAC,CAAC,SAAD,CArBJ,CADF;;AAyBD;AAQD,SAASgB,cAAT,CAAwBC,CAAxB,EAAqC;EACnC,OAAOJ,KAAK,CAACC,OAAN,CAAcG,CAAd,IAAmBA,CAAC,CAAC,CAAD,CAApB,GAA0BA,CAAjC;AACD;AAED,4BAAelB,KAAK,CAACmB,IAAN,CAAW,SAASC,cAAT,QAMJ,KAN4B,EAChDC,KADgD,EAEhDhB,OAAO,EAAEiB,WAFuC,EAGhDlB,OAAO,EAAEmB,WAHuC,EAIhDC,cAJgD,EAKhDlB,QALgD,EAM5B;EACpB,MAAMmB,gBAAgB,GAAGH,WAAW,CAACX,GAAZ,CAAgBM,cAAhB,CAAzB;EACA,IAAIZ,OAAO,GAAG,CAAC,GAAGiB,WAAJ,CAAd;EACA;EACA,IACEC,WAAW,KAAKG,SAAhB;EACCH,WAAW,KAAKF,KAAhB,IAAyB,CAAC,0CAAgB,MAAhB,iBAAgB,EAAU,CAAV,CAD3C;EAEA,CAAC,0CAAgB,MAAhB,iBAAgB,EAAUE,WAAV,CAHnB,EAIE;IACAlB,OAAO,GAAG,CAAC,GAAGiB,WAAJ,CAAV;IACAjB,OAAO,CAACsB,MAAR,CACEF,gBAAgB,CAACG,SAAjB,CAA2B,EAAC,KAAIV,CAAC,GAAGK,WAApC,CADF,EAEE,CAFF,EAGErB,mBAAmB,CAAC,CAACqB,WAAD,CAAD,CAAnB,CAAmC,CAAnC,CAHF;EAKD;EACD,MAAMnB,OAAO,GAAGmB,WAAW,KAAKG,SAAhB,GAA4BD,gBAAgB,CAAC,CAAD,CAA5C,GAAkDF,WAAlE;EACA,MAAMM,cAAc,GAAGL,cAAc,IAAIrB,qBAAzC;EACA,OACE,cAAC,cAAD,IAAgB,OAAO,EAAEC,OAAzB,EAAkC,OAAO,EAAEC,OAA3C,EAAoD,QAAQ,EAAEC,QAA9D,GADF;AAGD,CA3Bc,CAAf","names":["React","t","formatSelectOptions","DefaultSelectRenderer","current","options","onChange","Number","e","target","value","map","size","text","Array","isArray","option","getOptionValue","x","memo","SelectPageSize","total","sizeOptions","currentSize","selectRenderer","sizeOptionValues","undefined","splice","findIndex","SelectRenderer"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/plugin-chart-table/src/DataTable/components/SelectPageSize.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { formatSelectOptions } from '@superset-ui/chart-controls';\n\nexport type SizeOption = [number, string];\n\nexport interface SelectPageSizeRendererProps {\n  current: number;\n  options: SizeOption[];\n  onChange: SelectPageSizeProps['onChange'];\n}\n\nfunction DefaultSelectRenderer({\n  current,\n  options,\n  onChange,\n}: SelectPageSizeRendererProps) {\n  return (\n    <span className=\"dt-select-page-size form-inline\">\n      {t('Show')}{' '}\n      <select\n        className=\"form-control input-sm\"\n        value={current}\n        onBlur={() => {}}\n        onChange={e => {\n          onChange(Number((e.target as HTMLSelectElement).value));\n        }}\n      >\n        {options.map(option => {\n          const [size, text] = Array.isArray(option)\n            ? option\n            : [option, option];\n          return (\n            <option key={size} value={size}>\n              {text}\n            </option>\n          );\n        })}\n      </select>{' '}\n      {t('entries')}\n    </span>\n  );\n}\n\nexport interface SelectPageSizeProps extends SelectPageSizeRendererProps {\n  total?: number;\n  selectRenderer?: typeof DefaultSelectRenderer;\n  onChange: (pageSize: number) => void;\n}\n\nfunction getOptionValue(x: SizeOption) {\n  return Array.isArray(x) ? x[0] : x;\n}\n\nexport default React.memo(function SelectPageSize({\n  total,\n  options: sizeOptions,\n  current: currentSize,\n  selectRenderer,\n  onChange,\n}: SelectPageSizeProps) {\n  const sizeOptionValues = sizeOptions.map(getOptionValue);\n  let options = [...sizeOptions];\n  // insert current size to list\n  if (\n    currentSize !== undefined &&\n    (currentSize !== total || !sizeOptionValues.includes(0)) &&\n    !sizeOptionValues.includes(currentSize)\n  ) {\n    options = [...sizeOptions];\n    options.splice(\n      sizeOptionValues.findIndex(x => x > currentSize),\n      0,\n      formatSelectOptions([currentSize])[0],\n    );\n  }\n  const current = currentSize === undefined ? sizeOptionValues[0] : currentSize;\n  const SelectRenderer = selectRenderer || DefaultSelectRenderer;\n  return (\n    <SelectRenderer current={current} options={options} onChange={onChange} />\n  );\n});\n"]},"metadata":{},"sourceType":"module"}