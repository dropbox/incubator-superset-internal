{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { fetchSlices, updateSlices } from '../actions/sliceEntities';\nimport SliceAdder from '../components/SliceAdder';\n\nfunction mapStateToProps(_ref,\n\nownProps)\n{let { sliceEntities, dashboardInfo, dashboardState } = _ref;\n  return {\n    height: ownProps.height,\n    userId: +dashboardInfo.userId,\n    dashboardId: dashboardInfo.id,\n    selectedSliceIds: dashboardState.sliceIds,\n    slices: sliceEntities.slices,\n    isLoading: sliceEntities.isLoading,\n    errorMessage: sliceEntities.errorMessage,\n    lastUpdated: sliceEntities.lastUpdated,\n    editMode: dashboardState.editMode };\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n  {\n    fetchSlices,\n    updateSlices },\n\n  dispatch);\n\n}const _default =\n\nconnect(mapStateToProps, mapDispatchToProps)(SliceAdder);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/containers/SliceAdder.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/containers/SliceAdder.jsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/containers/SliceAdder.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["bindActionCreators","connect","fetchSlices","updateSlices","SliceAdder","mapStateToProps","ownProps","sliceEntities","dashboardInfo","dashboardState","height","userId","dashboardId","id","selectedSliceIds","sliceIds","slices","isLoading","errorMessage","lastUpdated","editMode","mapDispatchToProps","dispatch"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/containers/SliceAdder.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { fetchSlices, updateSlices } from '../actions/sliceEntities';\nimport SliceAdder from '../components/SliceAdder';\n\nfunction mapStateToProps(\n  { sliceEntities, dashboardInfo, dashboardState },\n  ownProps,\n) {\n  return {\n    height: ownProps.height,\n    userId: +dashboardInfo.userId,\n    dashboardId: dashboardInfo.id,\n    selectedSliceIds: dashboardState.sliceIds,\n    slices: sliceEntities.slices,\n    isLoading: sliceEntities.isLoading,\n    errorMessage: sliceEntities.errorMessage,\n    lastUpdated: sliceEntities.lastUpdated,\n    editMode: dashboardState.editMode,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      fetchSlices,\n      updateSlices,\n    },\n    dispatch,\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SliceAdder);\n"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,0BAA1C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,SAASC,eAAT;;AAEEC,QAFF;AAGE,KAFA,EAAEC,aAAF,EAAiBC,aAAjB,EAAgCC,cAAhC,EAEA;EACA,OAAO;IACLC,MAAM,EAAEJ,QAAQ,CAACI,MADZ;IAELC,MAAM,EAAE,CAACH,aAAa,CAACG,MAFlB;IAGLC,WAAW,EAAEJ,aAAa,CAACK,EAHtB;IAILC,gBAAgB,EAAEL,cAAc,CAACM,QAJ5B;IAKLC,MAAM,EAAET,aAAa,CAACS,MALjB;IAMLC,SAAS,EAAEV,aAAa,CAACU,SANpB;IAOLC,YAAY,EAAEX,aAAa,CAACW,YAPvB;IAQLC,WAAW,EAAEZ,aAAa,CAACY,WARtB;IASLC,QAAQ,EAAEX,cAAc,CAACW,QATpB,EAAP;;AAWD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;EACpC,OAAOtB,kBAAkB;EACvB;IACEE,WADF;IAEEC,YAFF,EADuB;;EAKvBmB,QALuB,CAAzB;;AAOD,C;;AAEcrB,OAAO,CAACI,eAAD,EAAkBgB,kBAAlB,CAAP,CAA6CjB,UAA7C,C,CAAf,wB,iLA3BSC,e,yJAiBAgB,kB"},"metadata":{},"sourceType":"module"}