{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Behavior, ChartMetadata, ChartPlugin, t } from '@superset-ui/core';\nimport buildQuery from './buildQuery';\nimport controlPanel from './controlPanel';\nimport transformProps from './transformProps';\nimport thumbnail from '../images/thumbnail.png';\nimport example from '../images/example.jpg';\nexport default class PivotTableChartPlugin extends ChartPlugin {\n  /**\n   * The constructor is used to pass relevant metadata and callbacks that get\n   * registered in respective registries that are used throughout the library\n   * and application. A more thorough description of each property is given in\n   * the respective imported file.\n   *\n   * It is worth noting that `buildQuery` and is optional, and only needed for\n   * advanced visualizations that require either post processing operations\n   * (pivoting, rolling aggregations, sorting etc) or submitting multiple queries.\n   */\n  constructor() {\n    const metadata = new ChartMetadata({\n      behaviors: [\n      Behavior.INTERACTIVE_CHART,\n      Behavior.DRILL_TO_DETAIL,\n      Behavior.DRILL_BY],\n\n      category: t('Table'),\n      description: t('Used to summarize a set of data by grouping together multiple statistics along two axes. Examples: Sales numbers by region and month, tasks by status and assignee, active users by age and location. Not the most visually stunning visualization, but highly informative and versatile.'),\n      exampleGallery: [{ url: example }],\n      name: t('Pivot Table'),\n      tags: [t('Additive'), t('Report'), t('Tabular'), t('Popular')],\n      thumbnail });\n\n    super({\n      buildQuery,\n      controlPanel,\n      loadChart: () => import('../PivotTableChart'),\n      metadata,\n      transformProps });\n\n  }}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,QADF,EAEEC,aAFF,EAGEC,WAHF,EAMEC,CANF,QAOO,mBAPP;AAQA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAGA,eAAc,MAAOC,qBAAP,SAAqCP,WAArC,CAGb;EACC;;;;;;;;;;EAUAQ;IACE,MAAMC,QAAQ,GAAG,IAAIV,aAAJ,CAAkB;MACjCW,SAAS,EAAE;MACTZ,QAAQ,CAACa,iBADA;MAETb,QAAQ,CAACc,eAFA;MAGTd,QAAQ,CAACe,QAHA,CADsB;;MAMjCC,QAAQ,EAAEb,CAAC,CAAC,OAAD,CANsB;MAOjCc,WAAW,EAAEd,CAAC,CACZ,2RADY,CAPmB;MAUjCe,cAAc,EAAE,CAAC,EAAEC,GAAG,EAAEX,OAAP,EAAD,CAViB;MAWjCY,IAAI,EAAEjB,CAAC,CAAC,aAAD,CAX0B;MAYjCkB,IAAI,EAAE,CAAClB,CAAC,CAAC,UAAD,CAAF,EAAgBA,CAAC,CAAC,QAAD,CAAjB,EAA6BA,CAAC,CAAC,SAAD,CAA9B,EAA2CA,CAAC,CAAC,SAAD,CAA5C,CAZ2B;MAajCI,SAbiC,EAAlB,CAAjB;;IAgBA,MAAM;MACJH,UADI;MAEJC,YAFI;MAGJiB,SAAS,EAAE,MAAM,OAAO,oBAAP,CAHb;MAIJX,QAJI;MAKJL,cALI,EAAN;;EAOD,CAnCF","names":["Behavior","ChartMetadata","ChartPlugin","t","buildQuery","controlPanel","transformProps","thumbnail","example","PivotTableChartPlugin","constructor","metadata","behaviors","INTERACTIVE_CHART","DRILL_TO_DETAIL","DRILL_BY","category","description","exampleGallery","url","name","tags","loadChart"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/plugin-chart-pivot-table/src/plugin/index.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  Behavior,\n  ChartMetadata,\n  ChartPlugin,\n  ChartProps,\n  QueryFormData,\n  t,\n} from '@superset-ui/core';\nimport buildQuery from './buildQuery';\nimport controlPanel from './controlPanel';\nimport transformProps from './transformProps';\nimport thumbnail from '../images/thumbnail.png';\nimport example from '../images/example.jpg';\nimport { PivotTableQueryFormData } from '../types';\n\nexport default class PivotTableChartPlugin extends ChartPlugin<\n  PivotTableQueryFormData,\n  ChartProps<QueryFormData>\n> {\n  /**\n   * The constructor is used to pass relevant metadata and callbacks that get\n   * registered in respective registries that are used throughout the library\n   * and application. A more thorough description of each property is given in\n   * the respective imported file.\n   *\n   * It is worth noting that `buildQuery` and is optional, and only needed for\n   * advanced visualizations that require either post processing operations\n   * (pivoting, rolling aggregations, sorting etc) or submitting multiple queries.\n   */\n  constructor() {\n    const metadata = new ChartMetadata({\n      behaviors: [\n        Behavior.INTERACTIVE_CHART,\n        Behavior.DRILL_TO_DETAIL,\n        Behavior.DRILL_BY,\n      ],\n      category: t('Table'),\n      description: t(\n        'Used to summarize a set of data by grouping together multiple statistics along two axes. Examples: Sales numbers by region and month, tasks by status and assignee, active users by age and location. Not the most visually stunning visualization, but highly informative and versatile.',\n      ),\n      exampleGallery: [{ url: example }],\n      name: t('Pivot Table'),\n      tags: [t('Additive'), t('Report'), t('Tabular'), t('Popular')],\n      thumbnail,\n    });\n\n    super({\n      buildQuery,\n      controlPanel,\n      loadChart: () => import('../PivotTableChart'),\n      metadata,\n      transformProps,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}