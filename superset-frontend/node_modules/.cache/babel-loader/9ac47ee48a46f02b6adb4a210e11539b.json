{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};export var FilterOperator;\n(function (FilterOperator) {\n  FilterOperator[\"startsWith\"] = \"sw\";\n  FilterOperator[\"endsWith\"] = \"ew\";\n  FilterOperator[\"contains\"] = \"ct\";\n  FilterOperator[\"equals\"] = \"eq\";\n  FilterOperator[\"notStartsWith\"] = \"nsw\";\n  FilterOperator[\"notEndsWith\"] = \"new\";\n  FilterOperator[\"notContains\"] = \"nct\";\n  FilterOperator[\"notEquals\"] = \"neq\";\n  FilterOperator[\"greaterThan\"] = \"gt\";\n  FilterOperator[\"lessThan\"] = \"lt\";\n  FilterOperator[\"relationManyMany\"] = \"rel_m_m\";\n  FilterOperator[\"relationOneMany\"] = \"rel_o_m\";\n  FilterOperator[\"titleOrSlug\"] = \"title_or_slug\";\n  FilterOperator[\"nameOrDescription\"] = \"name_or_description\";\n  FilterOperator[\"allText\"] = \"all_text\";\n  FilterOperator[\"chartAllText\"] = \"chart_all_text\";\n  FilterOperator[\"datasetIsNullOrEmpty\"] = \"dataset_is_null_or_empty\";\n  FilterOperator[\"between\"] = \"between\";\n  FilterOperator[\"dashboardIsFav\"] = \"dashboard_is_favorite\";\n  FilterOperator[\"chartIsFav\"] = \"chart_is_favorite\";\n  FilterOperator[\"chartIsCertified\"] = \"chart_is_certified\";\n  FilterOperator[\"dashboardIsCertified\"] = \"dashboard_is_certified\";\n  FilterOperator[\"datasetIsCertified\"] = \"dataset_is_certified\";\n  FilterOperator[\"dashboardHasCreatedBy\"] = \"dashboard_has_created_by\";\n  FilterOperator[\"chartHasCreatedBy\"] = \"chart_has_created_by\";\n  FilterOperator[\"dashboardTags\"] = \"dashboard_tags\";\n  FilterOperator[\"chartTags\"] = \"chart_tags\";\n  FilterOperator[\"savedQueryTags\"] = \"saved_query_tags\";\n})(FilterOperator || (FilterOperator = {}));;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(FilterOperator, \"FilterOperator\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ListView/types.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"uSA8FA,WAAYA,cAAZ;AAAA,WAAYA,cAAZ,EAA0B;EACxBA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;AACD,CA7BD,EAAYA,cAAc,KAAdA,cAAc,MAA1B,E,iLAAYA,c","names":["FilterOperator"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ListView/types.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ReactNode } from 'react';\n\nexport interface SortColumn {\n  id: string;\n  desc?: boolean;\n}\n\nexport type SortColumns = SortColumn[];\n\nexport interface SelectOption {\n  label: string;\n  value: any;\n}\n\nexport interface CardSortSelectOption {\n  desc: boolean;\n  id: any;\n  label: string;\n  value: any;\n}\n\nexport interface Filter {\n  Header: ReactNode;\n  key: string;\n  id: string;\n  urlDisplay?: string;\n  operator?: FilterOperator;\n  input?:\n    | 'text'\n    | 'textarea'\n    | 'select'\n    | 'checkbox'\n    | 'search'\n    | 'datetime_range';\n  unfilteredLabel?: string;\n  selects?: SelectOption[];\n  onFilterOpen?: () => void;\n  onFilterUpdate?: (value?: any) => void;\n  fetchSelects?: (\n    filterValue: string,\n    page: number,\n    pageSize: number,\n  ) => Promise<{ data: SelectOption[]; totalCount: number }>;\n  paginate?: boolean;\n}\n\nexport type Filters = Filter[];\n\nexport type ViewModeType = 'card' | 'table';\n\nexport interface FilterValue {\n  id: string;\n  urlDisplay?: string;\n  operator?: string;\n  value:\n    | string\n    | boolean\n    | number\n    | null\n    | undefined\n    | string[]\n    | number[]\n    | { label: string; value: string | number };\n}\n\nexport interface FetchDataConfig {\n  pageIndex: number;\n  pageSize: number;\n  sortBy: SortColumns;\n  filters: FilterValue[];\n}\n\nexport interface InternalFilter extends FilterValue {\n  Header?: string;\n}\n\nexport enum FilterOperator {\n  startsWith = 'sw',\n  endsWith = 'ew',\n  contains = 'ct',\n  equals = 'eq',\n  notStartsWith = 'nsw',\n  notEndsWith = 'new',\n  notContains = 'nct',\n  notEquals = 'neq',\n  greaterThan = 'gt',\n  lessThan = 'lt',\n  relationManyMany = 'rel_m_m',\n  relationOneMany = 'rel_o_m',\n  titleOrSlug = 'title_or_slug',\n  nameOrDescription = 'name_or_description',\n  allText = 'all_text',\n  chartAllText = 'chart_all_text',\n  datasetIsNullOrEmpty = 'dataset_is_null_or_empty',\n  between = 'between',\n  dashboardIsFav = 'dashboard_is_favorite',\n  chartIsFav = 'chart_is_favorite',\n  chartIsCertified = 'chart_is_certified',\n  dashboardIsCertified = 'dashboard_is_certified',\n  datasetIsCertified = 'dataset_is_certified',\n  dashboardHasCreatedBy = 'dashboard_has_created_by',\n  chartHasCreatedBy = 'chart_has_created_by',\n  dashboardTags = 'dashboard_tags',\n  chartTags = 'chart_tags',\n  savedQueryTags = 'saved_query_tags',\n}\n"]},"metadata":{},"sourceType":"module"}