{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isBinaryAdhocFilter, isUnaryAdhocFilter } from './types/Filter';\nexport default function convertFilter(filter) {\n  const { subject } = filter;\n  if (isUnaryAdhocFilter(filter)) {\n    const { operator } = filter;\n    return {\n      col: subject,\n      op: operator };\n\n  }\n  if (isBinaryAdhocFilter(filter)) {\n    const { operator } = filter;\n    return {\n      col: subject,\n      op: operator,\n      val: filter.comparator };\n\n  }\n  const { operator } = filter;\n  return {\n    col: subject,\n    op: operator,\n    val: filter.comparator };\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(convertFilter, \"convertFilter\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/query/convertFilter.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,SAEEA,mBAFF,EAGEC,kBAHF,QAIO,gBAJP;AAOA,eAAc,SAAUC,aAAV,CACZC,MADY,EACa;EAEzB,MAAM,EAAEC,OAAF,KAAcD,MAApB;EACA,IAAIF,kBAAkB,CAACE,MAAD,CAAtB,EAAgC;IAC9B,MAAM,EAAEE,QAAF,KAAeF,MAArB;IAEA,OAAO;MACLG,GAAG,EAAEF,OADA;MAELG,EAAE,EAAEF,QAFC,EAAP;;EAID;EACD,IAAIL,mBAAmB,CAACG,MAAD,CAAvB,EAAiC;IAC/B,MAAM,EAAEE,QAAF,KAAeF,MAArB;IAEA,OAAO;MACLG,GAAG,EAAEF,OADA;MAELG,EAAE,EAAEF,QAFC;MAGLG,GAAG,EAAEL,MAAM,CAACM,UAHP,EAAP;;EAKD;EAED,MAAM,EAAEJ,QAAF,KAAeF,MAArB;EAEA,OAAO;IACLG,GAAG,EAAEF,OADA;IAELG,EAAE,EAAEF,QAFC;IAGLG,GAAG,EAAEL,MAAM,CAACM,UAHP,EAAP;;AAKD,C,iLA7BuBP,a","names":["isBinaryAdhocFilter","isUnaryAdhocFilter","convertFilter","filter","subject","operator","col","op","val","comparator"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/query/convertFilter.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  SimpleAdhocFilter,\n  isBinaryAdhocFilter,\n  isUnaryAdhocFilter,\n} from './types/Filter';\nimport { QueryObjectFilterClause } from './types/Query';\n\nexport default function convertFilter(\n  filter: SimpleAdhocFilter,\n): QueryObjectFilterClause {\n  const { subject } = filter;\n  if (isUnaryAdhocFilter(filter)) {\n    const { operator } = filter;\n\n    return {\n      col: subject,\n      op: operator,\n    };\n  }\n  if (isBinaryAdhocFilter(filter)) {\n    const { operator } = filter;\n\n    return {\n      col: subject,\n      op: operator,\n      val: filter.comparator,\n    };\n  }\n\n  const { operator } = filter;\n\n  return {\n    col: subject,\n    op: operator,\n    val: filter.comparator,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}