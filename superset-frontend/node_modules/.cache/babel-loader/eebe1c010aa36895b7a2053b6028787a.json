{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useMemo, forwardRef, useImperativeHandle } from 'react';\nimport moment from 'moment';\nimport { styled, t } from '@superset-ui/core';\nimport { RangePicker } from 'src/components/DatePicker';\nimport { FormLabel } from 'src/components/Form';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst RangeFilterContainer = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  width: 360px;\n`;\nfunction DateRangeFilter(_ref, ref) {let { Header, initialValue, onSubmit } = _ref;\n  const [value, setValue] = useState(initialValue != null ? initialValue : null);\n  const momentValue = useMemo(() => {\n    if (!value || Array.isArray(value) && !value.length)\n    return null;\n    return [moment(value[0]), moment(value[1])];\n  }, [value]);\n  useImperativeHandle(ref, () => ({\n    clearFilter: () => {\n      setValue(null);\n      onSubmit([]);\n    } }));\n\n  return ___EmotionJSX(RangeFilterContainer, null,\n  ___EmotionJSX(FormLabel, null, Header),\n  ___EmotionJSX(RangePicker, { placeholder: [t('Start date'), t('End date')], showTime: true, value: momentValue, onChange: (momentRange) => {var _momentRange$0$valueO, _momentRange$, _momentRange$1$valueO, _momentRange$2;\n      if (!momentRange) {\n        setValue(null);\n        onSubmit([]);\n        return;\n      }\n      const changeValue = [(_momentRange$0$valueO = (_momentRange$ =\n      momentRange[0]) == null ? void 0 : _momentRange$.valueOf()) != null ? _momentRange$0$valueO : 0, (_momentRange$1$valueO = (_momentRange$2 =\n      momentRange[1]) == null ? void 0 : _momentRange$2.valueOf()) != null ? _momentRange$1$valueO : 0];\n\n      setValue(changeValue);\n      onSubmit(changeValue);\n    } }));\n\n}\nexport default /*#__PURE__*/forwardRef(DateRangeFilter);","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IACEC,QADF,EAEEC,OAFF,EAGEC,UAHF,EAIEC,mBAJF,QAKO,OALP;AAMA,OAAOC,MAAP,MAA+B,QAA/B;AACA,SAASC,MAAT,EAAiBC,CAAjB,QAA0B,mBAA1B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,SAAT,QAA0B,qBAA1B,C;AAUA,MAAMC,oBAAoB,GAAGJ,MAAM,CAACK,GAAG;;;;;;CAAvC;AAQA,SAASC,eAAT,OAEEC,GAFF,EAEqC,KADnC,EAAEC,MAAF,EAAUC,YAAV,EAAwBC,QAAxB,EACmC;EAEnC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAoBc,YAApB,WAAoBA,YAApB,GAAoC,IAApC,CAAlC;EACA,MAAMI,WAAW,GAAGjB,OAAO,CAAC,MAA8B;IACxD,IAAI,CAACe,KAAD,IAAWG,KAAK,CAACC,OAAN,CAAcJ,KAAd,KAAwB,CAACA,KAAK,CAACK,MAA9C;IAAuD,OAAO,IAAP;IACvD,OAAO,CAACjB,MAAM,CAACY,KAAK,CAAC,CAAD,CAAN,CAAP,EAAmBZ,MAAM,CAACY,KAAK,CAAC,CAAD,CAAN,CAAzB,CAAP;EACD,CAH0B,EAGxB,CAACA,KAAD,CAHwB,CAA3B;EAKAb,mBAAmB,CAACS,GAAD,EAAM,OAAO;IAC9BU,WAAW,EAAE,MAAK;MAChBL,QAAQ,CAAC,IAAD,CAAR;MACAF,QAAQ,CAAC,EAAD,CAAR;IACD,CAJ6B,EAAP,CAAN,CAAnB;;EAOA,OACE,cAAC,oBAAD;EACE,cAAC,SAAD,QAAYF,MAAZ,CADF;EAEE,cAAC,WAAD,IACE,WAAW,EAAE,CAACP,CAAC,CAAC,YAAD,CAAF,EAAkBA,CAAC,CAAC,UAAD,CAAnB,CADf,EAEE,QAAQ,MAFV,EAGE,KAAK,EAAEY,WAHT,EAIE,QAAQ,EAAE,YAAW,KAAG;MACtB,IAAI,CAACK,WAAL,EAAkB;QAChBN,QAAQ,CAAC,IAAD,CAAR;QACAF,QAAQ,CAAC,EAAD,CAAR;QACA;MACD;MACD,MAAMS,WAAW,GAAG;MAClBD,WAAW,CAAC,CAAD,CADO,qBAClB,cAAgBE,OAAhB,EADkB,oCACW,CADX;MAElBF,WAAW,CAAC,CAAD,CAFO,qBAElB,eAAgBE,OAAhB,EAFkB,oCAEW,CAFX,CAApB;;MAIAR,QAAQ,CAACO,WAAD,CAAR;MACAT,QAAQ,CAACS,WAAD,CAAR;IACD,CAhBH,GAFF,CADF;;AAuBD;AAED,4BAAetB,UAAU,CAACS,eAAD,CAAzB","names":["React","useState","useMemo","forwardRef","useImperativeHandle","moment","styled","t","RangePicker","FormLabel","RangeFilterContainer","div","DateRangeFilter","ref","Header","initialValue","onSubmit","value","setValue","momentValue","Array","isArray","length","clearFilter","momentRange","changeValue","valueOf"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/components/ListView/Filters/DateRange.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  useState,\n  useMemo,\n  forwardRef,\n  useImperativeHandle,\n} from 'react';\nimport moment, { Moment } from 'moment';\nimport { styled, t } from '@superset-ui/core';\nimport { RangePicker } from 'src/components/DatePicker';\nimport { FormLabel } from 'src/components/Form';\nimport { BaseFilter, FilterHandler } from './Base';\n\ninterface DateRangeFilterProps extends BaseFilter {\n  onSubmit: (val: number[]) => void;\n  name: string;\n}\n\ntype ValueState = [number, number];\n\nconst RangeFilterContainer = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  width: 360px;\n`;\n\nfunction DateRangeFilter(\n  { Header, initialValue, onSubmit }: DateRangeFilterProps,\n  ref: React.RefObject<FilterHandler>,\n) {\n  const [value, setValue] = useState<ValueState | null>(initialValue ?? null);\n  const momentValue = useMemo((): [Moment, Moment] | null => {\n    if (!value || (Array.isArray(value) && !value.length)) return null;\n    return [moment(value[0]), moment(value[1])];\n  }, [value]);\n\n  useImperativeHandle(ref, () => ({\n    clearFilter: () => {\n      setValue(null);\n      onSubmit([]);\n    },\n  }));\n\n  return (\n    <RangeFilterContainer>\n      <FormLabel>{Header}</FormLabel>\n      <RangePicker\n        placeholder={[t('Start date'), t('End date')]}\n        showTime\n        value={momentValue}\n        onChange={momentRange => {\n          if (!momentRange) {\n            setValue(null);\n            onSubmit([]);\n            return;\n          }\n          const changeValue = [\n            momentRange[0]?.valueOf() ?? 0,\n            momentRange[1]?.valueOf() ?? 0,\n          ] as ValueState;\n          setValue(changeValue);\n          onSubmit(changeValue);\n        }}\n      />\n    </RangeFilterContainer>\n  );\n}\n\nexport default forwardRef(DateRangeFilter);\n"]},"metadata":{},"sourceType":"module"}