{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Tag as AntdTag } from 'antd';\nimport { styled, useCSSTextTruncation } from '@superset-ui/core';\nimport { Tooltip } from '../Tooltip';\nimport { SELECT_ALL_VALUE } from './utils';\nimport { NoElement } from './styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledTag = styled(AntdTag)`\n  & .ant-tag-close-icon {\n    display: inline-flex;\n    align-items: center;\n    margin-left: ${(_ref) => {let { theme } = _ref;return theme.gridUnit;}}px;\n  }\n\n  & .tag-content {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n// TODO: use antd Tag props instead of any. Currently it's causing a typescript error\nconst Tag = (props) => {\n  const [tagRef, tagIsTruncated] = useCSSTextTruncation();\n  return ___EmotionJSX(Tooltip, { title: tagIsTruncated ? props.children : null },\n  ___EmotionJSX(StyledTag, _extends({}, props, { className: \"ant-select-selection-item\" }),\n  ___EmotionJSX(\"span\", { className: \"tag-content\", ref: tagRef },\n  props.children)));\n\n\n\n};\n/**\n * Custom tag renderer\n */__signature__(Tag, \"useCSSTextTruncation{[tagRef, tagIsTruncated]}\", () => [useCSSTextTruncation]);\nexport const customTagRender = (props) => {\n  const { label, value } = props;\n  const onPreventMouseDown = (event) => {var _context;\n    // if close icon is clicked, stop propagation to avoid opening the dropdown\n    const target = event.target;\n    if (target.tagName === 'svg' ||\n    target.tagName === 'path' ||\n    target.tagName === 'span' &&\n    _includesInstanceProperty(_context = target.className).call(_context, 'ant-tag-close-icon')) {\n      event.stopPropagation();\n    }\n  };\n  if (value !== SELECT_ALL_VALUE) {\n    return ___EmotionJSX(Tag, _extends({ onMouseDown: onPreventMouseDown }, props),\n    label);\n\n  }\n  return ___EmotionJSX(NoElement, null);\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledTag, \"StyledTag\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Select/CustomTag.tsx\");reactHotLoader.register(Tag, \"Tag\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Select/CustomTag.tsx\");reactHotLoader.register(customTagRender, \"customTagRender\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Select/CustomTag.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"scAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAG,IAAIC,OAAhB,QAA+B,MAA/B;AACA,SAASC,MAAT,EAAiBC,oBAAjB,QAA6C,mBAA7C;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,SAASC,gBAAT,QAAiC,SAAjC;AACA,SAASC,SAAT,QAA0B,UAA1B,C;AAEA,MAAMC,SAAS,GAAGL,MAAM,CAACD,OAAD,CAAS;;;;mBAId,eAAC,EAAEO,KAAF,EAAD,eAAeA,KAAK,CAACC,QAArB,EAA6B;;;;;;;CAJhD;AAaA;AACA,MAAMT,GAAG,GAAG,CAACU,KAAD,KAAe;EACzB,MAAM,CAACC,MAAD,EAASC,cAAT,IAA2BT,oBAAoB,EAArD;EACA,OACE,cAAC,OAAD,IAAS,KAAK,EAAES,cAAc,GAAGF,KAAK,CAACG,QAAT,GAAoB,IAAlD;EACE,cAAC,SAAD,eAAeH,KAAf,IAAsB,SAAS,EAAC,2BAAhC;EACE,wBAAM,SAAS,EAAC,aAAhB,EAA8B,GAAG,EAAEC,MAAnC;EACGD,KAAK,CAACG,QADT,CADF,CADF,CADF;;;;AASD,CAXD;AAaA;;iBAbMb,G,2DAC6BG,oB;AAenC,OAAO,MAAMW,eAAe,GAAG,CAACJ,KAAD,KAA0B;EACvD,MAAM,EAAEK,KAAF,EAASC,KAAT,KAAmBN,KAAzB;EAEA,MAAMO,kBAAkB,GAAG,CAACC,KAAD,KAAyC;IAClE;IACA,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;IACA,IACEA,MAAM,CAACC,OAAP,KAAmB,KAAnB;IACAD,MAAM,CAACC,OAAP,KAAmB,MADnB;IAECD,MAAM,CAACC,OAAP,KAAmB,MAAnB;IACC,2CAAM,CAACC,SAAP,iBAA0B,oBAA1B,CAJJ,EAKE;MACAH,KAAK,CAACI,eAAN;IACD;EACF,CAXD;EAaA,IAAIN,KAAK,KAAKX,gBAAd,EAAgC;IAC9B,OACE,cAAC,GAAD,aAAK,WAAW,EAAEY,kBAAlB,IAA2CP,KAA3C;IACGK,KADH,CADF;;EAKD;EACD,OAAO,cAAC,SAAD,OAAP;AACD,CAxBM,C,iLA9BDR,S,+IAcAP,G,yIAgBOc,e","names":["React","Tag","AntdTag","styled","useCSSTextTruncation","Tooltip","SELECT_ALL_VALUE","NoElement","StyledTag","theme","gridUnit","props","tagRef","tagIsTruncated","children","customTagRender","label","value","onPreventMouseDown","event","target","tagName","className","stopPropagation"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Select/CustomTag.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Tag as AntdTag } from 'antd';\nimport { styled, useCSSTextTruncation } from '@superset-ui/core';\nimport { Tooltip } from '../Tooltip';\nimport { CustomTagProps } from './types';\nimport { SELECT_ALL_VALUE } from './utils';\nimport { NoElement } from './styles';\n\nconst StyledTag = styled(AntdTag)`\n  & .ant-tag-close-icon {\n    display: inline-flex;\n    align-items: center;\n    margin-left: ${({ theme }) => theme.gridUnit}px;\n  }\n\n  & .tag-content {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\n// TODO: use antd Tag props instead of any. Currently it's causing a typescript error\nconst Tag = (props: any) => {\n  const [tagRef, tagIsTruncated] = useCSSTextTruncation<HTMLSpanElement>();\n  return (\n    <Tooltip title={tagIsTruncated ? props.children : null}>\n      <StyledTag {...props} className=\"ant-select-selection-item\">\n        <span className=\"tag-content\" ref={tagRef}>\n          {props.children}\n        </span>\n      </StyledTag>\n    </Tooltip>\n  );\n};\n\n/**\n * Custom tag renderer\n */\nexport const customTagRender = (props: CustomTagProps) => {\n  const { label, value } = props;\n\n  const onPreventMouseDown = (event: React.MouseEvent<HTMLElement>) => {\n    // if close icon is clicked, stop propagation to avoid opening the dropdown\n    const target = event.target as HTMLElement;\n    if (\n      target.tagName === 'svg' ||\n      target.tagName === 'path' ||\n      (target.tagName === 'span' &&\n        target.className.includes('ant-tag-close-icon'))\n    ) {\n      event.stopPropagation();\n    }\n  };\n\n  if (value !== SELECT_ALL_VALUE) {\n    return (\n      <Tag onMouseDown={onPreventMouseDown} {...(props as object)}>\n        {label}\n      </Tag>\n    );\n  }\n  return <NoElement />;\n};\n"]},"metadata":{},"sourceType":"module"}