{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";import _debounce from \"lodash/debounce\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, t, logging } from '@superset-ui/core';\n\nimport { withRouter } from 'react-router-dom';\n\nimport { exportChart, mountExploreUrl } from 'src/explore/exploreUtils';\nimport ChartContainer from 'src/components/Chart/ChartContainer';\nimport {\nLOG_ACTIONS_CHANGE_DASHBOARD_FILTER,\nLOG_ACTIONS_EXPLORE_DASHBOARD_CHART,\nLOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART,\nLOG_ACTIONS_EXPORT_XLSX_DASHBOARD_CHART,\nLOG_ACTIONS_FORCE_REFRESH_CHART } from\n'src/logger/LogUtils';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport { postFormData } from 'src/explore/exploreUtils/formData';\nimport { URL_PARAMS } from 'src/constants';\n\nimport SliceHeader from '../SliceHeader';\nimport MissingChart from '../MissingChart';\nimport { slicePropShape, chartPropShape } from '../../util/propShapes';\n\nimport { isFilterBox } from '../../util/activeDashboardFilters';\nimport getFilterValuesByFilterId from '../../util/getFilterValuesByFilterId';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  id: PropTypes.number.isRequired,\n  componentId: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  updateSliceName: PropTypes.func.isRequired,\n  isComponentVisible: PropTypes.bool,\n  handleToggleFullSize: PropTypes.func.isRequired,\n  setControlValue: PropTypes.func,\n\n  // from redux\n  chart: chartPropShape.isRequired,\n  formData: PropTypes.object.isRequired,\n  labelColors: PropTypes.object,\n  sharedLabelColors: PropTypes.object,\n  datasource: PropTypes.object,\n  slice: slicePropShape.isRequired,\n  sliceName: PropTypes.string.isRequired,\n  timeout: PropTypes.number.isRequired,\n  maxRows: PropTypes.number.isRequired,\n  // all active filter fields in dashboard\n  filters: PropTypes.object.isRequired,\n  refreshChart: PropTypes.func.isRequired,\n  logEvent: PropTypes.func.isRequired,\n  toggleExpandSlice: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n  setFocusedFilterField: PropTypes.func.isRequired,\n  unsetFocusedFilterField: PropTypes.func.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  isExpanded: PropTypes.bool.isRequired,\n  isCached: PropTypes.bool,\n  supersetCanExplore: PropTypes.bool.isRequired,\n  supersetCanShare: PropTypes.bool.isRequired,\n  supersetCanCSV: PropTypes.bool.isRequired,\n  addSuccessToast: PropTypes.func.isRequired,\n  addDangerToast: PropTypes.func.isRequired,\n  ownState: PropTypes.object,\n  filterState: PropTypes.object,\n  postTransformProps: PropTypes.func,\n  datasetsStatus: PropTypes.oneOf(['loading', 'error', 'complete']),\n  isInView: PropTypes.bool,\n  emitCrossFilters: PropTypes.bool };\n\n\nconst defaultProps = {\n  isCached: false,\n  isComponentVisible: true };\n\n\n// we use state + shouldComponentUpdate() logic to prevent perf-wrecking\n// resizing across all slices on a dashboard on every update\nconst RESIZE_TIMEOUT = 500;\nconst SHOULD_UPDATE_ON_PROP_CHANGES = Object.keys(propTypes).filter(\n(prop) =>\nprop !== 'width' && prop !== 'height' && prop !== 'isComponentVisible');\n\nconst OVERFLOWABLE_VIZ_TYPES = new Set(['filter_box']);\nconst DEFAULT_HEADER_HEIGHT = 22;\n\nconst ChartWrapper = styled.div`\n  overflow: hidden;\n  position: relative;\n\n  &.dashboard-chart--overflowable {\n    overflow: visible;\n  }\n`;\n\nconst ChartOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 5;\n`;\n\nconst SliceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-height: 100%;\n`;\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    logExploreChart = () => {\n      this.props.logEvent(LOG_ACTIONS_EXPLORE_DASHBOARD_CHART, {\n        slice_id: this.props.slice.slice_id,\n        is_cached: this.props.isCached });\n\n    };this.\n\n    onExploreChart = async (clickEvent) => {\n      const isOpenInNewTab =\n      clickEvent.shiftKey || clickEvent.ctrlKey || clickEvent.metaKey;\n      try {\n        const lastTabId = window.localStorage.getItem('last_tab_id');\n        const nextTabId = lastTabId ?\n        String(Number.parseInt(lastTabId, 10) + 1) :\n        undefined;\n        const key = await postFormData(\n        this.props.datasource.id,\n        this.props.datasource.type,\n        this.props.formData,\n        this.props.slice.slice_id,\n        nextTabId);\n\n        const url = mountExploreUrl(null, {\n          [URL_PARAMS.formDataKey.name]: key,\n          [URL_PARAMS.sliceId.name]: this.props.slice.slice_id });\n\n        if (isOpenInNewTab) {\n          window.open(url, '_blank', 'noreferrer');\n        } else {\n          this.props.history.push(url);\n        }\n      } catch (error) {\n        logging.error(error);\n        this.props.addDangerToast(t('An error occurred while opening Explore'));\n      }\n    };this.state = { width: props.width, height: props.height, descriptionHeight: 0 };this.changeFilter = this.changeFilter.bind(this);this.handleFilterMenuOpen = this.handleFilterMenuOpen.bind(this);this.handleFilterMenuClose = this.handleFilterMenuClose.bind(this);this.exportCSV = this.exportCSV.bind(this);this.exportFullCSV = this.exportFullCSV.bind(this);this.exportXLSX = this.exportXLSX.bind(this);this.exportFullXLSX = this.exportFullXLSX.bind(this);this.forceRefresh = this.forceRefresh.bind(this);this.resize = _debounce(this.resize.bind(this), RESIZE_TIMEOUT);this.setDescriptionRef = this.setDescriptionRef.bind(this);this.setHeaderRef = this.setHeaderRef.bind(this);this.getChartHeight = this.getChartHeight.bind(this);this.getDescriptionHeight = this.getDescriptionHeight.bind(this);}shouldComponentUpdate(nextProps, nextState) {var _this$props, _this$props$chart, _nextProps$chart, _this$props2, _this$props2$chart, _nextProps$formData, _this$props$formData, _nextProps$formData2, _this$props$formData2; // this logic mostly pertains to chart resizing. we keep a copy of the dimensions in\n    // state so that we can buffer component size updates and only update on the final call\n    // which improves performance significantly\n    if (nextState.width !== this.state.width || nextState.height !== this.state.height || nextState.descriptionHeight !== this.state.descriptionHeight || !_isEqual(nextProps.datasource, this.props.datasource)) {return true;} // allow chart to update if the status changed and the previous status was loading.\n    if (((_this$props = this.props) == null ? void 0 : (_this$props$chart = _this$props.chart) == null ? void 0 : _this$props$chart.chartStatus) !== (nextProps == null ? void 0 : (_nextProps$chart = nextProps.chart) == null ? void 0 : _nextProps$chart.chartStatus) && ((_this$props2 = this.props) == null ? void 0 : (_this$props2$chart = _this$props2.chart) == null ? void 0 : _this$props2$chart.chartStatus) === 'loading') {return true;} // allow chart update/re-render only if visible:\n    // under selected tab or no tab layout\n    if (nextProps.isComponentVisible) {if (nextProps.chart.triggerQuery) {return true;}if (nextProps.isFullSize !== this.props.isFullSize) {this.resize();return false;}if (nextProps.width !== this.props.width || nextProps.height !== this.props.height || nextProps.width !== this.state.width || nextProps.height !== this.state.height) {this.resize();}for (let i = 0; i < SHOULD_UPDATE_ON_PROP_CHANGES.length; i += 1) {const prop = SHOULD_UPDATE_ON_PROP_CHANGES[i]; // use deep objects equality comparison to prevent\n        // unnecessary updates when objects references change\n        if (!areObjectsEqual(nextProps[prop], this.props[prop])) {return true;}}} else if ( // chart should re-render if color scheme or label color was changed\n    ((_nextProps$formData = nextProps.formData) == null ? void 0 : _nextProps$formData.color_scheme) !== ((_this$props$formData = this.props.formData) == null ? void 0 : _this$props$formData.color_scheme) || !areObjectsEqual((_nextProps$formData2 = nextProps.formData) == null ? void 0 : _nextProps$formData2.label_colors, (_this$props$formData2 = this.props.formData) == null ? void 0 : _this$props$formData2.label_colors)) {return true;} // `cacheBusterProp` is jected by react-hot-loader\n    return this.props.cacheBusterProp !== nextProps.cacheBusterProp;}componentDidMount() {if (this.props.isExpanded) {const descriptionHeight = this.getDescriptionHeight();this.setState({ descriptionHeight });}}componentWillUnmount() {this.resize.cancel();}componentDidUpdate(prevProps) {if (this.props.isExpanded !== prevProps.isExpanded) {const descriptionHeight = this.getDescriptionHeight(); // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ descriptionHeight });}}getDescriptionHeight() {return this.props.isExpanded && this.descriptionRef ? this.descriptionRef.offsetHeight : 0;}getChartHeight() {const headerHeight = this.getHeaderHeight();return Math.max(this.state.height - headerHeight - this.state.descriptionHeight, 20);}getHeaderHeight() {if (this.headerRef) {const computedStyle = getComputedStyle(this.headerRef).getPropertyValue('margin-bottom');const marginBottom = parseInt(computedStyle, 10) || 0;return this.headerRef.offsetHeight + marginBottom;}return DEFAULT_HEADER_HEIGHT;}setDescriptionRef(ref) {this.descriptionRef = ref;}setHeaderRef(ref) {this.headerRef = ref;}resize() {const { width, height } = this.props;this.setState(() => ({ width, height }));}changeFilter(newSelectedValues) {if (newSelectedValues === void 0) {newSelectedValues = {};}this.props.logEvent(LOG_ACTIONS_CHANGE_DASHBOARD_FILTER, { id: this.props.chart.id, columns: Object.keys(newSelectedValues) });this.props.changeFilter(this.props.chart.id, newSelectedValues);}handleFilterMenuOpen(chartId, column) {this.props.setFocusedFilterField(chartId, column);}handleFilterMenuClose(chartId, column) {this.props.unsetFocusedFilterField(chartId, column);}exportFullCSV() {this.exportCSV(true);}exportCSV(isFullCSV) {if (isFullCSV === void 0) {isFullCSV = false;}this.exportTable('csv', isFullCSV);}exportXLSX() {this.exportTable('xlsx', false);\n  }\n\n  exportFullXLSX() {\n    this.exportTable('xlsx', true);\n  }\n\n  exportTable(format, isFullCSV) {\n    const logAction =\n    format === 'csv' ?\n    LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART :\n    LOG_ACTIONS_EXPORT_XLSX_DASHBOARD_CHART;\n    this.props.logEvent(logAction, {\n      slice_id: this.props.slice.slice_id,\n      is_cached: this.props.isCached });\n\n    exportChart({\n      formData: isFullCSV ?\n      { ...this.props.formData, row_limit: this.props.maxRows } :\n      this.props.formData,\n      resultType: 'full',\n      resultFormat: format,\n      force: true,\n      ownState: this.props.ownState });\n\n  }\n\n  forceRefresh() {\n    this.props.logEvent(LOG_ACTIONS_FORCE_REFRESH_CHART, {\n      slice_id: this.props.slice.slice_id,\n      is_cached: this.props.isCached });\n\n    return this.props.refreshChart(\n    this.props.chart.id,\n    true,\n    this.props.dashboardId);\n\n  }\n\n  render() {\n    const {\n      id,\n      componentId,\n      dashboardId,\n      chart,\n      slice,\n      datasource,\n      isExpanded,\n      editMode,\n      filters,\n      formData,\n      labelColors,\n      sharedLabelColors,\n      updateSliceName,\n      sliceName,\n      toggleExpandSlice,\n      timeout,\n      supersetCanExplore,\n      supersetCanShare,\n      supersetCanCSV,\n      addSuccessToast,\n      addDangerToast,\n      ownState,\n      filterState,\n      handleToggleFullSize,\n      isFullSize,\n      setControlValue,\n      postTransformProps,\n      datasetsStatus,\n      isInView,\n      emitCrossFilters,\n      logEvent } =\n    this.props;\n\n    const { width } = this.state;\n    // this prevents throwing in the case that a gridComponent\n    // references a chart that is not associated with the dashboard\n    if (!chart || !slice) {\n      return ___EmotionJSX(MissingChart, { height: this.getChartHeight() });\n    }\n\n    const { queriesResponse, chartUpdateEndTime, chartStatus } = chart;\n    const isLoading = chartStatus === 'loading';\n    // eslint-disable-next-line camelcase\n    const isCached = (queriesResponse == null ? void 0 : queriesResponse.map((_ref) => {let { is_cached } = _ref;return is_cached;})) || [];\n    const cachedDttm =\n    // eslint-disable-next-line camelcase\n    (queriesResponse == null ? void 0 : queriesResponse.map((_ref2) => {let { cached_dttm } = _ref2;return cached_dttm;})) || [];\n    const isOverflowable = OVERFLOWABLE_VIZ_TYPES.has(slice.viz_type);\n    const initialValues = isFilterBox(id) ?\n    getFilterValuesByFilterId({\n      activeFilters: filters,\n      filterId: id }) :\n\n    {};\n\n    return (\n      ___EmotionJSX(SliceContainer, {\n        className: \"chart-slice\",\n\n        \"data-test-chart-id\": id,\n        \"data-test-viz-type\": slice.viz_type,\n        \"data-test-chart-name\": slice.slice_name },\n\n      ___EmotionJSX(SliceHeader, {\n        innerRef: this.setHeaderRef,\n        slice: slice,\n        isExpanded: isExpanded,\n        isCached: isCached,\n        cachedDttm: cachedDttm,\n        updatedDttm: chartUpdateEndTime,\n        toggleExpandSlice: toggleExpandSlice,\n        forceRefresh: this.forceRefresh,\n        editMode: editMode,\n        annotationQuery: chart.annotationQuery,\n        logExploreChart: this.logExploreChart,\n        logEvent: logEvent,\n        onExploreChart: this.onExploreChart,\n        exportCSV: this.exportCSV,\n        exportXLSX: this.exportXLSX,\n        exportFullCSV: this.exportFullCSV,\n        exportFullXLSX: this.exportFullXLSX,\n        updateSliceName: updateSliceName,\n        sliceName: sliceName,\n        supersetCanExplore: supersetCanExplore,\n        supersetCanShare: supersetCanShare,\n        supersetCanCSV: supersetCanCSV,\n        componentId: componentId,\n        dashboardId: dashboardId,\n        filters: filters,\n        addSuccessToast: addSuccessToast,\n        addDangerToast: addDangerToast,\n        handleToggleFullSize: handleToggleFullSize,\n        isFullSize: isFullSize,\n        chartStatus: chart.chartStatus,\n        formData: formData,\n        width: width,\n        height: this.getHeaderHeight() }),\n\n\n\n\n\n\n\n\n\n      isExpanded && slice.description_markeddown &&\n      ___EmotionJSX(\"div\", {\n        className: \"slice_description bs-callout bs-callout-default\",\n        ref: this.setDescriptionRef\n        // eslint-disable-next-line react/no-danger\n        , dangerouslySetInnerHTML: { __html: slice.description_markeddown } }),\n\n\n\n      ___EmotionJSX(ChartWrapper, {\n        className: cx(\n        'dashboard-chart',\n        isOverflowable && 'dashboard-chart--overflowable') },\n\n\n      isLoading &&\n      ___EmotionJSX(ChartOverlay, {\n        style: {\n          width,\n          height: this.getChartHeight() } }),\n\n\n\n\n      ___EmotionJSX(ChartContainer, {\n        width: width,\n        height: this.getChartHeight(),\n        addFilter: this.changeFilter,\n        onFilterMenuOpen: this.handleFilterMenuOpen,\n        onFilterMenuClose: this.handleFilterMenuClose,\n        annotationData: chart.annotationData,\n        chartAlert: chart.chartAlert,\n        chartId: id,\n        chartStatus: chartStatus,\n        datasource: datasource,\n        dashboardId: dashboardId,\n        initialValues: initialValues,\n        formData: formData,\n        labelColors: labelColors,\n        sharedLabelColors: sharedLabelColors,\n        ownState: ownState,\n        filterState: filterState,\n        queriesResponse: chart.queriesResponse,\n        timeout: timeout,\n        triggerQuery: chart.triggerQuery,\n        vizType: slice.viz_type,\n        setControlValue: setControlValue,\n        postTransformProps: postTransformProps,\n        datasetsStatus: datasetsStatus,\n        isInView: isInView,\n        emitCrossFilters: emitCrossFilters }))));\n\n\n\n\n  }}\n\n\nChart.propTypes = propTypes;\nChart.defaultProps = defaultProps;\n\nexport default withRouter(Chart);","map":{"version":3,"names":["cx","React","PropTypes","styled","t","logging","withRouter","exportChart","mountExploreUrl","ChartContainer","LOG_ACTIONS_CHANGE_DASHBOARD_FILTER","LOG_ACTIONS_EXPLORE_DASHBOARD_CHART","LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART","LOG_ACTIONS_EXPORT_XLSX_DASHBOARD_CHART","LOG_ACTIONS_FORCE_REFRESH_CHART","areObjectsEqual","postFormData","URL_PARAMS","SliceHeader","MissingChart","slicePropShape","chartPropShape","isFilterBox","getFilterValuesByFilterId","propTypes","id","number","isRequired","componentId","string","dashboardId","width","height","updateSliceName","func","isComponentVisible","bool","handleToggleFullSize","setControlValue","chart","formData","object","labelColors","sharedLabelColors","datasource","slice","sliceName","timeout","maxRows","filters","refreshChart","logEvent","toggleExpandSlice","changeFilter","setFocusedFilterField","unsetFocusedFilterField","editMode","isExpanded","isCached","supersetCanExplore","supersetCanShare","supersetCanCSV","addSuccessToast","addDangerToast","ownState","filterState","postTransformProps","datasetsStatus","oneOf","isInView","emitCrossFilters","defaultProps","RESIZE_TIMEOUT","SHOULD_UPDATE_ON_PROP_CHANGES","Object","keys","filter","prop","OVERFLOWABLE_VIZ_TYPES","Set","DEFAULT_HEADER_HEIGHT","ChartWrapper","div","ChartOverlay","SliceContainer","Chart","Component","constructor","props","logExploreChart","slice_id","is_cached","onExploreChart","clickEvent","isOpenInNewTab","shiftKey","ctrlKey","metaKey","lastTabId","window","localStorage","getItem","nextTabId","String","Number","parseInt","undefined","key","type","url","formDataKey","name","sliceId","open","history","push","error","state","descriptionHeight","bind","handleFilterMenuOpen","handleFilterMenuClose","exportCSV","exportFullCSV","exportXLSX","exportFullXLSX","forceRefresh","resize","setDescriptionRef","setHeaderRef","getChartHeight","getDescriptionHeight","shouldComponentUpdate","nextProps","nextState","chartStatus","triggerQuery","isFullSize","i","length","color_scheme","label_colors","cacheBusterProp","componentDidMount","setState","componentWillUnmount","cancel","componentDidUpdate","prevProps","descriptionRef","offsetHeight","headerHeight","getHeaderHeight","Math","max","headerRef","computedStyle","getComputedStyle","getPropertyValue","marginBottom","ref","newSelectedValues","columns","chartId","column","isFullCSV","exportTable","format","logAction","row_limit","resultType","resultFormat","force","render","queriesResponse","chartUpdateEndTime","isLoading","map","cachedDttm","cached_dttm","isOverflowable","has","viz_type","initialValues","activeFilters","filterId","slice_name","annotationQuery","description_markeddown","__html","annotationData","chartAlert"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, t, logging } from '@superset-ui/core';\nimport { debounce, isEqual } from 'lodash';\nimport { withRouter } from 'react-router-dom';\n\nimport { exportChart, mountExploreUrl } from 'src/explore/exploreUtils';\nimport ChartContainer from 'src/components/Chart/ChartContainer';\nimport {\n  LOG_ACTIONS_CHANGE_DASHBOARD_FILTER,\n  LOG_ACTIONS_EXPLORE_DASHBOARD_CHART,\n  LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART,\n  LOG_ACTIONS_EXPORT_XLSX_DASHBOARD_CHART,\n  LOG_ACTIONS_FORCE_REFRESH_CHART,\n} from 'src/logger/LogUtils';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport { postFormData } from 'src/explore/exploreUtils/formData';\nimport { URL_PARAMS } from 'src/constants';\n\nimport SliceHeader from '../SliceHeader';\nimport MissingChart from '../MissingChart';\nimport { slicePropShape, chartPropShape } from '../../util/propShapes';\n\nimport { isFilterBox } from '../../util/activeDashboardFilters';\nimport getFilterValuesByFilterId from '../../util/getFilterValuesByFilterId';\n\nconst propTypes = {\n  id: PropTypes.number.isRequired,\n  componentId: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  updateSliceName: PropTypes.func.isRequired,\n  isComponentVisible: PropTypes.bool,\n  handleToggleFullSize: PropTypes.func.isRequired,\n  setControlValue: PropTypes.func,\n\n  // from redux\n  chart: chartPropShape.isRequired,\n  formData: PropTypes.object.isRequired,\n  labelColors: PropTypes.object,\n  sharedLabelColors: PropTypes.object,\n  datasource: PropTypes.object,\n  slice: slicePropShape.isRequired,\n  sliceName: PropTypes.string.isRequired,\n  timeout: PropTypes.number.isRequired,\n  maxRows: PropTypes.number.isRequired,\n  // all active filter fields in dashboard\n  filters: PropTypes.object.isRequired,\n  refreshChart: PropTypes.func.isRequired,\n  logEvent: PropTypes.func.isRequired,\n  toggleExpandSlice: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n  setFocusedFilterField: PropTypes.func.isRequired,\n  unsetFocusedFilterField: PropTypes.func.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  isExpanded: PropTypes.bool.isRequired,\n  isCached: PropTypes.bool,\n  supersetCanExplore: PropTypes.bool.isRequired,\n  supersetCanShare: PropTypes.bool.isRequired,\n  supersetCanCSV: PropTypes.bool.isRequired,\n  addSuccessToast: PropTypes.func.isRequired,\n  addDangerToast: PropTypes.func.isRequired,\n  ownState: PropTypes.object,\n  filterState: PropTypes.object,\n  postTransformProps: PropTypes.func,\n  datasetsStatus: PropTypes.oneOf(['loading', 'error', 'complete']),\n  isInView: PropTypes.bool,\n  emitCrossFilters: PropTypes.bool,\n};\n\nconst defaultProps = {\n  isCached: false,\n  isComponentVisible: true,\n};\n\n// we use state + shouldComponentUpdate() logic to prevent perf-wrecking\n// resizing across all slices on a dashboard on every update\nconst RESIZE_TIMEOUT = 500;\nconst SHOULD_UPDATE_ON_PROP_CHANGES = Object.keys(propTypes).filter(\n  prop =>\n    prop !== 'width' && prop !== 'height' && prop !== 'isComponentVisible',\n);\nconst OVERFLOWABLE_VIZ_TYPES = new Set(['filter_box']);\nconst DEFAULT_HEADER_HEIGHT = 22;\n\nconst ChartWrapper = styled.div`\n  overflow: hidden;\n  position: relative;\n\n  &.dashboard-chart--overflowable {\n    overflow: visible;\n  }\n`;\n\nconst ChartOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 5;\n`;\n\nconst SliceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-height: 100%;\n`;\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: props.width,\n      height: props.height,\n      descriptionHeight: 0,\n    };\n\n    this.changeFilter = this.changeFilter.bind(this);\n    this.handleFilterMenuOpen = this.handleFilterMenuOpen.bind(this);\n    this.handleFilterMenuClose = this.handleFilterMenuClose.bind(this);\n    this.exportCSV = this.exportCSV.bind(this);\n    this.exportFullCSV = this.exportFullCSV.bind(this);\n    this.exportXLSX = this.exportXLSX.bind(this);\n    this.exportFullXLSX = this.exportFullXLSX.bind(this);\n    this.forceRefresh = this.forceRefresh.bind(this);\n    this.resize = debounce(this.resize.bind(this), RESIZE_TIMEOUT);\n    this.setDescriptionRef = this.setDescriptionRef.bind(this);\n    this.setHeaderRef = this.setHeaderRef.bind(this);\n    this.getChartHeight = this.getChartHeight.bind(this);\n    this.getDescriptionHeight = this.getDescriptionHeight.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // this logic mostly pertains to chart resizing. we keep a copy of the dimensions in\n    // state so that we can buffer component size updates and only update on the final call\n    // which improves performance significantly\n    if (\n      nextState.width !== this.state.width ||\n      nextState.height !== this.state.height ||\n      nextState.descriptionHeight !== this.state.descriptionHeight ||\n      !isEqual(nextProps.datasource, this.props.datasource)\n    ) {\n      return true;\n    }\n\n    // allow chart to update if the status changed and the previous status was loading.\n    if (\n      this.props?.chart?.chartStatus !== nextProps?.chart?.chartStatus &&\n      this.props?.chart?.chartStatus === 'loading'\n    ) {\n      return true;\n    }\n\n    // allow chart update/re-render only if visible:\n    // under selected tab or no tab layout\n    if (nextProps.isComponentVisible) {\n      if (nextProps.chart.triggerQuery) {\n        return true;\n      }\n\n      if (nextProps.isFullSize !== this.props.isFullSize) {\n        this.resize();\n        return false;\n      }\n\n      if (\n        nextProps.width !== this.props.width ||\n        nextProps.height !== this.props.height ||\n        nextProps.width !== this.state.width ||\n        nextProps.height !== this.state.height\n      ) {\n        this.resize();\n      }\n\n      for (let i = 0; i < SHOULD_UPDATE_ON_PROP_CHANGES.length; i += 1) {\n        const prop = SHOULD_UPDATE_ON_PROP_CHANGES[i];\n        // use deep objects equality comparison to prevent\n        // unnecessary updates when objects references change\n        if (!areObjectsEqual(nextProps[prop], this.props[prop])) {\n          return true;\n        }\n      }\n    } else if (\n      // chart should re-render if color scheme or label color was changed\n      nextProps.formData?.color_scheme !== this.props.formData?.color_scheme ||\n      !areObjectsEqual(\n        nextProps.formData?.label_colors,\n        this.props.formData?.label_colors,\n      )\n    ) {\n      return true;\n    }\n\n    // `cacheBusterProp` is jected by react-hot-loader\n    return this.props.cacheBusterProp !== nextProps.cacheBusterProp;\n  }\n\n  componentDidMount() {\n    if (this.props.isExpanded) {\n      const descriptionHeight = this.getDescriptionHeight();\n      this.setState({ descriptionHeight });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resize.cancel();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isExpanded !== prevProps.isExpanded) {\n      const descriptionHeight = this.getDescriptionHeight();\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ descriptionHeight });\n    }\n  }\n\n  getDescriptionHeight() {\n    return this.props.isExpanded && this.descriptionRef\n      ? this.descriptionRef.offsetHeight\n      : 0;\n  }\n\n  getChartHeight() {\n    const headerHeight = this.getHeaderHeight();\n    return Math.max(\n      this.state.height - headerHeight - this.state.descriptionHeight,\n      20,\n    );\n  }\n\n  getHeaderHeight() {\n    if (this.headerRef) {\n      const computedStyle = getComputedStyle(this.headerRef).getPropertyValue(\n        'margin-bottom',\n      );\n      const marginBottom = parseInt(computedStyle, 10) || 0;\n      return this.headerRef.offsetHeight + marginBottom;\n    }\n    return DEFAULT_HEADER_HEIGHT;\n  }\n\n  setDescriptionRef(ref) {\n    this.descriptionRef = ref;\n  }\n\n  setHeaderRef(ref) {\n    this.headerRef = ref;\n  }\n\n  resize() {\n    const { width, height } = this.props;\n    this.setState(() => ({ width, height }));\n  }\n\n  changeFilter(newSelectedValues = {}) {\n    this.props.logEvent(LOG_ACTIONS_CHANGE_DASHBOARD_FILTER, {\n      id: this.props.chart.id,\n      columns: Object.keys(newSelectedValues),\n    });\n    this.props.changeFilter(this.props.chart.id, newSelectedValues);\n  }\n\n  handleFilterMenuOpen(chartId, column) {\n    this.props.setFocusedFilterField(chartId, column);\n  }\n\n  handleFilterMenuClose(chartId, column) {\n    this.props.unsetFocusedFilterField(chartId, column);\n  }\n\n  logExploreChart = () => {\n    this.props.logEvent(LOG_ACTIONS_EXPLORE_DASHBOARD_CHART, {\n      slice_id: this.props.slice.slice_id,\n      is_cached: this.props.isCached,\n    });\n  };\n\n  onExploreChart = async clickEvent => {\n    const isOpenInNewTab =\n      clickEvent.shiftKey || clickEvent.ctrlKey || clickEvent.metaKey;\n    try {\n      const lastTabId = window.localStorage.getItem('last_tab_id');\n      const nextTabId = lastTabId\n        ? String(Number.parseInt(lastTabId, 10) + 1)\n        : undefined;\n      const key = await postFormData(\n        this.props.datasource.id,\n        this.props.datasource.type,\n        this.props.formData,\n        this.props.slice.slice_id,\n        nextTabId,\n      );\n      const url = mountExploreUrl(null, {\n        [URL_PARAMS.formDataKey.name]: key,\n        [URL_PARAMS.sliceId.name]: this.props.slice.slice_id,\n      });\n      if (isOpenInNewTab) {\n        window.open(url, '_blank', 'noreferrer');\n      } else {\n        this.props.history.push(url);\n      }\n    } catch (error) {\n      logging.error(error);\n      this.props.addDangerToast(t('An error occurred while opening Explore'));\n    }\n  };\n\n  exportFullCSV() {\n    this.exportCSV(true);\n  }\n\n  exportCSV(isFullCSV = false) {\n    this.exportTable('csv', isFullCSV);\n  }\n\n  exportXLSX() {\n    this.exportTable('xlsx', false);\n  }\n\n  exportFullXLSX() {\n    this.exportTable('xlsx', true);\n  }\n\n  exportTable(format, isFullCSV) {\n    const logAction =\n      format === 'csv'\n        ? LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART\n        : LOG_ACTIONS_EXPORT_XLSX_DASHBOARD_CHART;\n    this.props.logEvent(logAction, {\n      slice_id: this.props.slice.slice_id,\n      is_cached: this.props.isCached,\n    });\n    exportChart({\n      formData: isFullCSV\n        ? { ...this.props.formData, row_limit: this.props.maxRows }\n        : this.props.formData,\n      resultType: 'full',\n      resultFormat: format,\n      force: true,\n      ownState: this.props.ownState,\n    });\n  }\n\n  forceRefresh() {\n    this.props.logEvent(LOG_ACTIONS_FORCE_REFRESH_CHART, {\n      slice_id: this.props.slice.slice_id,\n      is_cached: this.props.isCached,\n    });\n    return this.props.refreshChart(\n      this.props.chart.id,\n      true,\n      this.props.dashboardId,\n    );\n  }\n\n  render() {\n    const {\n      id,\n      componentId,\n      dashboardId,\n      chart,\n      slice,\n      datasource,\n      isExpanded,\n      editMode,\n      filters,\n      formData,\n      labelColors,\n      sharedLabelColors,\n      updateSliceName,\n      sliceName,\n      toggleExpandSlice,\n      timeout,\n      supersetCanExplore,\n      supersetCanShare,\n      supersetCanCSV,\n      addSuccessToast,\n      addDangerToast,\n      ownState,\n      filterState,\n      handleToggleFullSize,\n      isFullSize,\n      setControlValue,\n      postTransformProps,\n      datasetsStatus,\n      isInView,\n      emitCrossFilters,\n      logEvent,\n    } = this.props;\n\n    const { width } = this.state;\n    // this prevents throwing in the case that a gridComponent\n    // references a chart that is not associated with the dashboard\n    if (!chart || !slice) {\n      return <MissingChart height={this.getChartHeight()} />;\n    }\n\n    const { queriesResponse, chartUpdateEndTime, chartStatus } = chart;\n    const isLoading = chartStatus === 'loading';\n    // eslint-disable-next-line camelcase\n    const isCached = queriesResponse?.map(({ is_cached }) => is_cached) || [];\n    const cachedDttm =\n      // eslint-disable-next-line camelcase\n      queriesResponse?.map(({ cached_dttm }) => cached_dttm) || [];\n    const isOverflowable = OVERFLOWABLE_VIZ_TYPES.has(slice.viz_type);\n    const initialValues = isFilterBox(id)\n      ? getFilterValuesByFilterId({\n          activeFilters: filters,\n          filterId: id,\n        })\n      : {};\n\n    return (\n      <SliceContainer\n        className=\"chart-slice\"\n        data-test=\"chart-grid-component\"\n        data-test-chart-id={id}\n        data-test-viz-type={slice.viz_type}\n        data-test-chart-name={slice.slice_name}\n      >\n        <SliceHeader\n          innerRef={this.setHeaderRef}\n          slice={slice}\n          isExpanded={isExpanded}\n          isCached={isCached}\n          cachedDttm={cachedDttm}\n          updatedDttm={chartUpdateEndTime}\n          toggleExpandSlice={toggleExpandSlice}\n          forceRefresh={this.forceRefresh}\n          editMode={editMode}\n          annotationQuery={chart.annotationQuery}\n          logExploreChart={this.logExploreChart}\n          logEvent={logEvent}\n          onExploreChart={this.onExploreChart}\n          exportCSV={this.exportCSV}\n          exportXLSX={this.exportXLSX}\n          exportFullCSV={this.exportFullCSV}\n          exportFullXLSX={this.exportFullXLSX}\n          updateSliceName={updateSliceName}\n          sliceName={sliceName}\n          supersetCanExplore={supersetCanExplore}\n          supersetCanShare={supersetCanShare}\n          supersetCanCSV={supersetCanCSV}\n          componentId={componentId}\n          dashboardId={dashboardId}\n          filters={filters}\n          addSuccessToast={addSuccessToast}\n          addDangerToast={addDangerToast}\n          handleToggleFullSize={handleToggleFullSize}\n          isFullSize={isFullSize}\n          chartStatus={chart.chartStatus}\n          formData={formData}\n          width={width}\n          height={this.getHeaderHeight()}\n        />\n\n        {/*\n          This usage of dangerouslySetInnerHTML is safe since it is being used to render\n          markdown that is sanitized with bleach. See:\n             https://github.com/apache/superset/pull/4390\n          and\n             https://github.com/apache/superset/commit/b6fcc22d5a2cb7a5e92599ed5795a0169385a825\n        */}\n        {isExpanded && slice.description_markeddown && (\n          <div\n            className=\"slice_description bs-callout bs-callout-default\"\n            ref={this.setDescriptionRef}\n            // eslint-disable-next-line react/no-danger\n            dangerouslySetInnerHTML={{ __html: slice.description_markeddown }}\n          />\n        )}\n\n        <ChartWrapper\n          className={cx(\n            'dashboard-chart',\n            isOverflowable && 'dashboard-chart--overflowable',\n          )}\n        >\n          {isLoading && (\n            <ChartOverlay\n              style={{\n                width,\n                height: this.getChartHeight(),\n              }}\n            />\n          )}\n\n          <ChartContainer\n            width={width}\n            height={this.getChartHeight()}\n            addFilter={this.changeFilter}\n            onFilterMenuOpen={this.handleFilterMenuOpen}\n            onFilterMenuClose={this.handleFilterMenuClose}\n            annotationData={chart.annotationData}\n            chartAlert={chart.chartAlert}\n            chartId={id}\n            chartStatus={chartStatus}\n            datasource={datasource}\n            dashboardId={dashboardId}\n            initialValues={initialValues}\n            formData={formData}\n            labelColors={labelColors}\n            sharedLabelColors={sharedLabelColors}\n            ownState={ownState}\n            filterState={filterState}\n            queriesResponse={chart.queriesResponse}\n            timeout={timeout}\n            triggerQuery={chart.triggerQuery}\n            vizType={slice.viz_type}\n            setControlValue={setControlValue}\n            postTransformProps={postTransformProps}\n            datasetsStatus={datasetsStatus}\n            isInView={isInView}\n            emitCrossFilters={emitCrossFilters}\n          />\n        </ChartWrapper>\n      </SliceContainer>\n    );\n  }\n}\n\nChart.propTypes = propTypes;\nChart.defaultProps = defaultProps;\n\nexport default withRouter(Chart);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}