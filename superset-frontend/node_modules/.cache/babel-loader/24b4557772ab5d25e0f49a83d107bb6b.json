{"ast":null,"code":"import { css as _css } from \"@emotion/react\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { css, GenericDataType, getTimeFormatter, styled, t, TimeFormats, useTheme } from '@superset-ui/core';\nimport { Global } from '@emotion/react';\nimport debounce from 'lodash/debounce';\nimport { Space } from 'src/components';\nimport { Input } from 'src/components/Input';\nimport { BOOL_FALSE_DISPLAY, BOOL_TRUE_DISPLAY, NULL_DISPLAY, SLOW_DEBOUNCE } from 'src/constants';\nimport { Radio } from 'src/components/Radio';\nimport Icons from 'src/components/Icons';\nimport Button from 'src/components/Button';\nimport Popover from 'src/components/Popover';\nimport { prepareCopyToClipboardTabularData } from 'src/utils/common';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport RowCountLabel from 'src/explore/components/RowCountLabel';\nimport { getTimeColumns, setTimeColumns } from './utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const CellNull = styled('span')`\n  color: ${(_ref) => {let { theme } = _ref;return theme.colors.grayscale.light1;}};\n`;\nexport const CopyButton = styled(Button)`\n  font-size: ${(_ref2) => {let { theme } = _ref2;return theme.typography.sizes.s;}}px;\n\n  // needed to override button's first-of-type margin: 0\n  && {\n    margin: 0 ${(_ref3) => {let { theme } = _ref3;return theme.gridUnit * 2;}}px;\n  }\n\n  i {\n    padding: 0 ${(_ref4) => {let { theme } = _ref4;return theme.gridUnit;}}px;\n  }\n`;\nexport const CopyToClipboardButton = (_ref5) => {let { data, columns } = _ref5;\n  const theme = useTheme();\n  return ___EmotionJSX(CopyToClipboard, { text: data && columns ? prepareCopyToClipboardTabularData(data, columns) : '', wrapped: false, copyNode: ___EmotionJSX(Icons.CopyOutlined, { iconColor: theme.colors.grayscale.base, iconSize: \"l\", \"aria-label\": t('Copy'), role: \"button\", css: css`\n            &.anticon > * {\n              line-height: 0;\n            }\n          ` }) });\n};\nexport const FilterInput = (_ref6) => {let { onChangeHandler } = _ref6;\n  const theme = useTheme();\n  const debouncedChangeHandler = debounce(onChangeHandler, SLOW_DEBOUNCE);\n  return ___EmotionJSX(Input, { prefix: ___EmotionJSX(Icons.Search, { iconColor: theme.colors.grayscale.base }), placeholder: t('Search'), onChange: (event) => {\n      const filterText = event.target.value;\n      debouncedChangeHandler(filterText);\n    }, css: css`\n        width: 200px;\n        margin-right: ${theme.gridUnit * 2}px;\n      ` });\n};\nexport const RowCount = (_ref7) => {var _data$length;let { data, loading } = _ref7;return ___EmotionJSX(RowCountLabel, { rowcount: (_data$length = data == null ? void 0 : data.length) != null ? _data$length : 0, loading: loading });};\nvar FormatPickerValue;\n(function (FormatPickerValue) {\n  FormatPickerValue[\"Formatted\"] = \"formatted\";\n  FormatPickerValue[\"Original\"] = \"original\";\n})(FormatPickerValue || (FormatPickerValue = {}));\nconst FormatPicker = (_ref8) => {let { onChange, value } = _ref8;return ___EmotionJSX(Radio.Group, { value: value, onChange: onChange },\n  ___EmotionJSX(Space, { direction: \"vertical\" },\n  ___EmotionJSX(Radio, { value: FormatPickerValue.Formatted }, t('Formatted date')),\n  ___EmotionJSX(Radio, { value: FormatPickerValue.Original }, t('Original value'))));};\n\n\nconst FormatPickerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  padding: ${(_ref9) => {let { theme } = _ref9;return `${theme.gridUnit * 4}px`;}};\n`;\nconst FormatPickerLabel = styled.span`\n  font-size: ${(_ref10) => {let { theme } = _ref10;return theme.typography.sizes.s;}}px;\n  color: ${(_ref11) => {let { theme } = _ref11;return theme.colors.grayscale.base;}};\n  margin-bottom: ${(_ref12) => {let { theme } = _ref12;return theme.gridUnit * 2;}}px;\n  text-transform: uppercase;\n`;\nconst DataTableTemporalHeaderCell = (_ref13) => {let { columnName, onTimeColumnChange, datasourceId, isOriginalTimeColumn } = _ref13;\n  const theme = useTheme();\n  const onChange = (e) => {\n    onTimeColumnChange(columnName, e.target.value);\n  };\n  const overlayContent = useMemo(() => datasourceId ? // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n  ___EmotionJSX(FormatPickerContainer, { onClick: (e) => e.stopPropagation() },\n\n  ___EmotionJSX(Global, { styles: css`\n              .column-formatting-popover .ant-popover-inner-content {\n                padding: 0;\n              }\n            ` }),\n  ___EmotionJSX(FormatPickerLabel, null, t('Column Formatting')),\n  ___EmotionJSX(FormatPicker, { onChange: onChange, value: isOriginalTimeColumn ?\n    FormatPickerValue.Original :\n    FormatPickerValue.Formatted })) :\n  null, [datasourceId, isOriginalTimeColumn]);\n  return datasourceId ? ___EmotionJSX(\"span\", null,\n  ___EmotionJSX(Popover, { overlayClassName: \"column-formatting-popover\", trigger: \"click\", content: overlayContent, placement: \"bottomLeft\", arrowPointAtCenter: true },\n  ___EmotionJSX(Icons.SettingOutlined, { iconSize: \"m\", iconColor: theme.colors.grayscale.light1, css: /*#__PURE__*/_css({ marginRight: `${theme.gridUnit}px` }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:DataTableTemporalHeaderCell;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), onClick: (e) => e.stopPropagation() })),\n\n  columnName) :\n  ___EmotionJSX(\"span\", null, columnName);\n};\nexport const useFilteredTableData = (filterText, data) => {\n  const rowsAsStrings = useMemo(() => {var _data$map;return (_data$map = data == null ? void 0 : data.map((row) => Object.values(row).map((value) => value ? value.toString().toLowerCase() : t('N/A')))) != null ? _data$map : [];}, [data]);\n  return useMemo(() => {\n    if (!(data != null && data.length)) {\n      return [];\n    }\n    return data.filter((_, index) => rowsAsStrings[index].some((value) => value == null ? void 0 : _includesInstanceProperty(value).call(value, filterText.toLowerCase())));\n  }, [data, filterText, rowsAsStrings]);\n};\nconst timeFormatter = getTimeFormatter(TimeFormats.DATABASE_DATETIME);\nexport const useTableColumns = (colnames, coltypes, data, datasourceId, isVisible, moreConfigs) => {\n  const [originalFormattedTimeColumns, setOriginalFormattedTimeColumns] = useState(getTimeColumns(datasourceId));\n  const onTimeColumnChange = (columnName, columnType) => {\n    if (!datasourceId) {\n      return;\n    }\n    if (columnType === FormatPickerValue.Original &&\n    !_includesInstanceProperty(originalFormattedTimeColumns).call(originalFormattedTimeColumns, columnName)) {\n      const cols = getTimeColumns(datasourceId);\n      cols.push(columnName);\n      setTimeColumns(datasourceId, cols);\n      setOriginalFormattedTimeColumns(cols);\n    } else\n    if (columnType === FormatPickerValue.Formatted &&\n    _includesInstanceProperty(originalFormattedTimeColumns).call(originalFormattedTimeColumns, columnName)) {\n      const cols = getTimeColumns(datasourceId);\n      cols.splice(cols.indexOf(columnName), 1);\n      setTimeColumns(datasourceId, cols);\n      setOriginalFormattedTimeColumns(cols);\n    }\n  };\n  useEffect(() => {\n    if (isVisible) {\n      setOriginalFormattedTimeColumns(getTimeColumns(datasourceId));\n    }\n  }, [datasourceId, isVisible]);\n  return useMemo(() => colnames && data != null && data.length ?\n  colnames.\n  filter((column) => {var _context;return _includesInstanceProperty(_context = Object.keys(data[0])).call(_context, column);}).\n  map((key, index) => {\n    const colType = coltypes == null ? void 0 : coltypes[index];\n    const firstValue = data[0][key];\n    const originalFormattedTimeColumnIndex = colType === GenericDataType.TEMPORAL ?\n    originalFormattedTimeColumns.indexOf(key) :\n    -1;\n    const isOriginalTimeColumn = _includesInstanceProperty(originalFormattedTimeColumns).call(originalFormattedTimeColumns, key);\n    return {\n      // react-table requires a non-empty id, therefore we introduce a fallback value in case the key is empty\n      id: key || index,\n      accessor: (row) => row[key],\n      Header: colType === GenericDataType.TEMPORAL &&\n      typeof firstValue !== 'string' ? ___EmotionJSX(DataTableTemporalHeaderCell, { columnName: key, datasourceId: datasourceId, onTimeColumnChange: onTimeColumnChange, isOriginalTimeColumn: isOriginalTimeColumn }) : key,\n      Cell: (_ref14) => {let { value } = _ref14;\n        if (value === true) {\n          return BOOL_TRUE_DISPLAY;\n        }\n        if (value === false) {\n          return BOOL_FALSE_DISPLAY;\n        }\n        if (value === null) {\n          return ___EmotionJSX(CellNull, null, NULL_DISPLAY);\n        }\n        if (colType === GenericDataType.TEMPORAL &&\n        originalFormattedTimeColumnIndex === -1 &&\n        typeof value === 'number') {\n          return timeFormatter(value);\n        }\n        return String(value);\n      },\n      ...(moreConfigs == null ? void 0 : moreConfigs[key]) };\n\n  }) :\n  [], [\n  colnames,\n  data,\n  coltypes,\n  datasourceId,\n  moreConfigs,\n  originalFormattedTimeColumns]);\n\n};","map":{"version":3,"mappings":"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","names":["React","useMemo","useState","useEffect","css","GenericDataType","getTimeFormatter","styled","t","TimeFormats","useTheme","Global","debounce","Space","Input","BOOL_FALSE_DISPLAY","BOOL_TRUE_DISPLAY","NULL_DISPLAY","SLOW_DEBOUNCE","Radio","Icons","Button","Popover","prepareCopyToClipboardTabularData","CopyToClipboard","RowCountLabel","getTimeColumns","setTimeColumns","CellNull","theme","colors","grayscale","light1","CopyButton","typography","sizes","s","gridUnit","CopyToClipboardButton","data","columns","base","FilterInput","onChangeHandler","debouncedChangeHandler","event","filterText","target","value","RowCount","loading","length","FormatPickerValue","FormatPicker","onChange","Formatted","Original","FormatPickerContainer","div","FormatPickerLabel","span","DataTableTemporalHeaderCell","columnName","onTimeColumnChange","datasourceId","isOriginalTimeColumn","e","overlayContent","stopPropagation","marginRight","useFilteredTableData","rowsAsStrings","map","row","Object","values","toString","toLowerCase","filter","_","index","some","timeFormatter","DATABASE_DATETIME","useTableColumns","colnames","coltypes","isVisible","moreConfigs","originalFormattedTimeColumns","setOriginalFormattedTimeColumns","columnType","cols","push","splice","indexOf","column","keys","key","colType","firstValue","originalFormattedTimeColumnIndex","TEMPORAL","id","accessor","Header","Cell","String"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState, useEffect } from 'react';\nimport {\n  css,\n  GenericDataType,\n  getTimeFormatter,\n  styled,\n  t,\n  TimeFormats,\n  useTheme,\n} from '@superset-ui/core';\nimport { Global } from '@emotion/react';\nimport { Column } from 'react-table';\nimport debounce from 'lodash/debounce';\nimport { Space } from 'src/components';\nimport { Input } from 'src/components/Input';\nimport {\n  BOOL_FALSE_DISPLAY,\n  BOOL_TRUE_DISPLAY,\n  NULL_DISPLAY,\n  SLOW_DEBOUNCE,\n} from 'src/constants';\nimport { Radio } from 'src/components/Radio';\nimport Icons from 'src/components/Icons';\nimport Button from 'src/components/Button';\nimport Popover from 'src/components/Popover';\nimport { prepareCopyToClipboardTabularData } from 'src/utils/common';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport RowCountLabel from 'src/explore/components/RowCountLabel';\nimport { getTimeColumns, setTimeColumns } from './utils';\n\nexport const CellNull = styled('span')`\n  color: ${({ theme }) => theme.colors.grayscale.light1};\n`;\n\nexport const CopyButton = styled(Button)`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n\n  // needed to override button's first-of-type margin: 0\n  && {\n    margin: 0 ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  i {\n    padding: 0 ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nexport const CopyToClipboardButton = ({\n  data,\n  columns,\n}: {\n  data?: Record<string, any>;\n  columns?: string[];\n}) => {\n  const theme = useTheme();\n  return (\n    <CopyToClipboard\n      text={\n        data && columns ? prepareCopyToClipboardTabularData(data, columns) : ''\n      }\n      wrapped={false}\n      copyNode={\n        <Icons.CopyOutlined\n          iconColor={theme.colors.grayscale.base}\n          iconSize=\"l\"\n          aria-label={t('Copy')}\n          role=\"button\"\n          css={css`\n            &.anticon > * {\n              line-height: 0;\n            }\n          `}\n        />\n      }\n    />\n  );\n};\n\nexport const FilterInput = ({\n  onChangeHandler,\n}: {\n  onChangeHandler(filterText: string): void;\n}) => {\n  const theme = useTheme();\n  const debouncedChangeHandler = debounce(onChangeHandler, SLOW_DEBOUNCE);\n  return (\n    <Input\n      prefix={<Icons.Search iconColor={theme.colors.grayscale.base} />}\n      placeholder={t('Search')}\n      onChange={(event: any) => {\n        const filterText = event.target.value;\n        debouncedChangeHandler(filterText);\n      }}\n      css={css`\n        width: 200px;\n        margin-right: ${theme.gridUnit * 2}px;\n      `}\n    />\n  );\n};\n\nexport const RowCount = ({\n  data,\n  loading,\n}: {\n  data?: Record<string, any>[];\n  loading: boolean;\n}) => <RowCountLabel rowcount={data?.length ?? 0} loading={loading} />;\n\nenum FormatPickerValue {\n  Formatted = 'formatted',\n  Original = 'original',\n}\n\nconst FormatPicker = ({\n  onChange,\n  value,\n}: {\n  onChange: any;\n  value: FormatPickerValue;\n}) => (\n  <Radio.Group value={value} onChange={onChange}>\n    <Space direction=\"vertical\">\n      <Radio value={FormatPickerValue.Formatted}>{t('Formatted date')}</Radio>\n      <Radio value={FormatPickerValue.Original}>{t('Original value')}</Radio>\n    </Space>\n  </Radio.Group>\n);\n\nconst FormatPickerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  padding: ${({ theme }) => `${theme.gridUnit * 4}px`};\n`;\n\nconst FormatPickerLabel = styled.span`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  text-transform: uppercase;\n`;\n\nconst DataTableTemporalHeaderCell = ({\n  columnName,\n  onTimeColumnChange,\n  datasourceId,\n  isOriginalTimeColumn,\n}: {\n  columnName: string;\n  onTimeColumnChange: (\n    columnName: string,\n    columnType: FormatPickerValue,\n  ) => void;\n  datasourceId?: string;\n  isOriginalTimeColumn: boolean;\n}) => {\n  const theme = useTheme();\n\n  const onChange = (e: any) => {\n    onTimeColumnChange(columnName, e.target.value);\n  };\n\n  const overlayContent = useMemo(\n    () =>\n      datasourceId ? ( // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n        <FormatPickerContainer onClick={e => e.stopPropagation()}>\n          {/* hack to disable click propagation from popover content to table header, which triggers sorting column */}\n          <Global\n            styles={css`\n              .column-formatting-popover .ant-popover-inner-content {\n                padding: 0;\n              }\n            `}\n          />\n          <FormatPickerLabel>{t('Column Formatting')}</FormatPickerLabel>\n          <FormatPicker\n            onChange={onChange}\n            value={\n              isOriginalTimeColumn\n                ? FormatPickerValue.Original\n                : FormatPickerValue.Formatted\n            }\n          />\n        </FormatPickerContainer>\n      ) : null,\n    [datasourceId, isOriginalTimeColumn],\n  );\n\n  return datasourceId ? (\n    <span>\n      <Popover\n        overlayClassName=\"column-formatting-popover\"\n        trigger=\"click\"\n        content={overlayContent}\n        placement=\"bottomLeft\"\n        arrowPointAtCenter\n      >\n        <Icons.SettingOutlined\n          iconSize=\"m\"\n          iconColor={theme.colors.grayscale.light1}\n          css={{ marginRight: `${theme.gridUnit}px` }}\n          onClick={e => e.stopPropagation()}\n        />\n      </Popover>\n      {columnName}\n    </span>\n  ) : (\n    <span>{columnName}</span>\n  );\n};\n\nexport const useFilteredTableData = (\n  filterText: string,\n  data?: Record<string, any>[],\n) => {\n  const rowsAsStrings = useMemo(\n    () =>\n      data?.map((row: Record<string, any>) =>\n        Object.values(row).map(value =>\n          value ? value.toString().toLowerCase() : t('N/A'),\n        ),\n      ) ?? [],\n    [data],\n  );\n\n  return useMemo(() => {\n    if (!data?.length) {\n      return [];\n    }\n    return data.filter((_, index: number) =>\n      rowsAsStrings[index].some(value =>\n        value?.includes(filterText.toLowerCase()),\n      ),\n    );\n  }, [data, filterText, rowsAsStrings]);\n};\n\nconst timeFormatter = getTimeFormatter(TimeFormats.DATABASE_DATETIME);\n\nexport const useTableColumns = (\n  colnames?: string[],\n  coltypes?: GenericDataType[],\n  data?: Record<string, any>[],\n  datasourceId?: string,\n  isVisible?: boolean,\n  moreConfigs?: { [key: string]: Partial<Column> },\n) => {\n  const [originalFormattedTimeColumns, setOriginalFormattedTimeColumns] =\n    useState<string[]>(getTimeColumns(datasourceId));\n\n  const onTimeColumnChange = (\n    columnName: string,\n    columnType: FormatPickerValue,\n  ) => {\n    if (!datasourceId) {\n      return;\n    }\n    if (\n      columnType === FormatPickerValue.Original &&\n      !originalFormattedTimeColumns.includes(columnName)\n    ) {\n      const cols = getTimeColumns(datasourceId);\n      cols.push(columnName);\n      setTimeColumns(datasourceId, cols);\n      setOriginalFormattedTimeColumns(cols);\n    } else if (\n      columnType === FormatPickerValue.Formatted &&\n      originalFormattedTimeColumns.includes(columnName)\n    ) {\n      const cols = getTimeColumns(datasourceId);\n      cols.splice(cols.indexOf(columnName), 1);\n      setTimeColumns(datasourceId, cols);\n      setOriginalFormattedTimeColumns(cols);\n    }\n  };\n\n  useEffect(() => {\n    if (isVisible) {\n      setOriginalFormattedTimeColumns(getTimeColumns(datasourceId));\n    }\n  }, [datasourceId, isVisible]);\n\n  return useMemo(\n    () =>\n      colnames && data?.length\n        ? colnames\n            .filter((column: string) => Object.keys(data[0]).includes(column))\n            .map((key, index) => {\n              const colType = coltypes?.[index];\n              const firstValue = data[0][key];\n              const originalFormattedTimeColumnIndex =\n                colType === GenericDataType.TEMPORAL\n                  ? originalFormattedTimeColumns.indexOf(key)\n                  : -1;\n              const isOriginalTimeColumn =\n                originalFormattedTimeColumns.includes(key);\n              return {\n                // react-table requires a non-empty id, therefore we introduce a fallback value in case the key is empty\n                id: key || index,\n                accessor: row => row[key],\n                Header:\n                  colType === GenericDataType.TEMPORAL &&\n                  typeof firstValue !== 'string' ? (\n                    <DataTableTemporalHeaderCell\n                      columnName={key}\n                      datasourceId={datasourceId}\n                      onTimeColumnChange={onTimeColumnChange}\n                      isOriginalTimeColumn={isOriginalTimeColumn}\n                    />\n                  ) : (\n                    key\n                  ),\n                Cell: ({ value }) => {\n                  if (value === true) {\n                    return BOOL_TRUE_DISPLAY;\n                  }\n                  if (value === false) {\n                    return BOOL_FALSE_DISPLAY;\n                  }\n                  if (value === null) {\n                    return <CellNull>{NULL_DISPLAY}</CellNull>;\n                  }\n                  if (\n                    colType === GenericDataType.TEMPORAL &&\n                    originalFormattedTimeColumnIndex === -1 &&\n                    typeof value === 'number'\n                  ) {\n                    return timeFormatter(value);\n                  }\n                  return String(value);\n                },\n                ...moreConfigs?.[key],\n              } as Column;\n            })\n        : [],\n    [\n      colnames,\n      data,\n      coltypes,\n      datasourceId,\n      moreConfigs,\n      originalFormattedTimeColumns,\n    ],\n  );\n};\n"]},"metadata":{},"sourceType":"module"}