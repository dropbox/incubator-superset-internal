{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport querystring from 'query-string';\nconst reservedQueryParams = new Set(['standalone', 'edit']);\n/**\n * Returns the url params that are used to customize queries\n */\nexport default function extractUrlParams(urlParamType) {\n  const queryParams = querystring.parse(window.location.search);\n  return Object.entries(queryParams).reduce((acc, _ref) => {let [key, value] = _ref;\n    if (urlParamType === 'regular' && reservedQueryParams.has(key) ||\n    urlParamType === 'reserved' && !reservedQueryParams.has(key))\n    return acc;\n    // if multiple url params share the same key (?foo=bar&foo=baz), they will appear as an array.\n    // Only one value can be used for a given query param, so we just take the first one.\n    if (Array.isArray(value)) {\n      return {\n        ...acc,\n        [key]: value[0] };\n\n    }\n    return { ...acc, [key]: value };\n  }, {});\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,WAAP,MAAwB,cAAxB;AAGA,MAAMC,mBAAmB,GAAG,IAAIC,GAAJ,CAAQ,CAAC,YAAD,EAAe,MAAf,CAAR,CAA5B;AAIA;;;AAGA,eAAc,SAAUC,gBAAV,CACZC,YADY,EACc;EAE1B,MAAMC,WAAW,GAAGL,WAAW,CAACM,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAApB;EACA,OAAOC,MAAM,CAACC,OAAP,CAAeN,WAAf,EAA4BO,MAA5B,CAAmC,CAACC,GAAD,WAAsB,KAAhB,CAACC,GAAD,EAAMC,KAAN,CAAgB;IAC9D,IACGX,YAAY,KAAK,SAAjB,IAA8BH,mBAAmB,CAACe,GAApB,CAAwBF,GAAxB,CAA/B;IACCV,YAAY,KAAK,UAAjB,IAA+B,CAACH,mBAAmB,CAACe,GAApB,CAAwBF,GAAxB,CAFnC;IAIE,OAAOD,GAAP;IACF;IACA;IACA,IAAII,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAJ,EAA0B;MACxB,OAAO;QACL,GAAGF,GADE;QAEL,CAACC,GAAD,GAAOC,KAAK,CAAC,CAAD,CAFP,EAAP;;IAID;IACD,OAAO,EAAE,GAAGF,GAAL,EAAU,CAACC,GAAD,GAAOC,KAAjB,EAAP;EACD,CAfM,EAeJ,EAfI,CAAP;AAgBD","names":["querystring","reservedQueryParams","Set","extractUrlParams","urlParamType","queryParams","parse","window","location","search","Object","entries","reduce","acc","key","value","has","Array","isArray"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/util/extractUrlParams.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport querystring from 'query-string';\nimport { JsonObject } from '@superset-ui/core';\n\nconst reservedQueryParams = new Set(['standalone', 'edit']);\n\nexport type UrlParamType = 'reserved' | 'regular' | 'all';\n\n/**\n * Returns the url params that are used to customize queries\n */\nexport default function extractUrlParams(\n  urlParamType: UrlParamType,\n): JsonObject {\n  const queryParams = querystring.parse(window.location.search);\n  return Object.entries(queryParams).reduce((acc, [key, value]) => {\n    if (\n      (urlParamType === 'regular' && reservedQueryParams.has(key)) ||\n      (urlParamType === 'reserved' && !reservedQueryParams.has(key))\n    )\n      return acc;\n    // if multiple url params share the same key (?foo=bar&foo=baz), they will appear as an array.\n    // Only one value can be used for a given query param, so we just take the first one.\n    if (Array.isArray(value)) {\n      return {\n        ...acc,\n        [key]: value[0],\n      };\n    }\n    return { ...acc, [key]: value };\n  }, {});\n}\n"]},"metadata":{},"sourceType":"module"}