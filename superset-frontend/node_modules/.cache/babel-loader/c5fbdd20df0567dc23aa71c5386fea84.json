{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { CategoricalScheme, getCategoricalSchemeRegistry, getSequentialSchemeRegistry, SequentialScheme, CategoricalAirbnb, CategoricalD3, CategoricalEcharts, CategoricalGoogle, CategoricalLyft, CategoricalPreset, CategoricalSuperset, SequentialCommon, SequentialD3 } from '@superset-ui/core';\nfunction registerColorSchemes(registry, colorSchemes, standardDefaultKey) {var _colorSchemes$find;\n  colorSchemes.forEach((scheme) => {\n    registry.registerValue(scheme.id, scheme);\n  });\n  const defaultKey = ((_colorSchemes$find = colorSchemes.find((scheme) => scheme.isDefault)) == null ? void 0 : _colorSchemes$find.id) || standardDefaultKey;\n  registry.setDefaultKey(defaultKey);\n}\nexport default function setupColors(extraCategoricalColorSchemeConfigs, extraSequentialColorSchemeConfigs) {if (extraCategoricalColorSchemeConfigs === void 0) {extraCategoricalColorSchemeConfigs = [];}if (extraSequentialColorSchemeConfigs === void 0) {extraSequentialColorSchemeConfigs = [];}\n  const extraCategoricalColorSchemes = extraCategoricalColorSchemeConfigs.map((config) => new CategoricalScheme(config));\n  const extraSequentialColorSchemes = extraSequentialColorSchemeConfigs.map((config) => new SequentialScheme(config));\n  registerColorSchemes(\n  // @ts-ignore\n  getCategoricalSchemeRegistry(), [\n  ...CategoricalAirbnb,\n  ...CategoricalD3,\n  ...CategoricalEcharts,\n  ...CategoricalGoogle,\n  ...CategoricalLyft,\n  ...CategoricalPreset,\n  ...CategoricalSuperset,\n  ...extraCategoricalColorSchemes],\n  'supersetColors');\n  registerColorSchemes(\n  // @ts-ignore\n  getSequentialSchemeRegistry(), [...SequentialCommon, ...SequentialD3, ...extraSequentialColorSchemes], 'superset_seq_1');\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(registerColorSchemes, \"registerColorSchemes\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/setup/setupColors.ts\");reactHotLoader.register(setupColors, \"setupColors\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/setup/setupColors.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,iBADF,EAIEC,4BAJF,EAKEC,2BALF,EAMEC,gBANF,EAQEC,iBARF,EASEC,aATF,EAUEC,kBAVF,EAWEC,iBAXF,EAYEC,eAZF,EAaEC,iBAbF,EAcEC,mBAdF,EAeEC,gBAfF,EAgBEC,YAhBF,QAkBO,mBAlBP;AAoBA,SAASC,oBAAT,CACEC,QADF,EAEEC,YAFF,EAGEC,kBAHF,EAG4B;EAE1BD,YAAY,CAACE,OAAb,CAAqB,OAAM,KAAG;IAC5BH,QAAQ,CAACI,aAAT,CAAuBC,MAAM,CAACC,EAA9B,EAAkCD,MAAlC;EACD,CAFD;EAIA,MAAME,UAAU,GACd,mCAAY,CAACC,IAAb,CAAkB,OAAM,KAAIH,MAAM,CAACI,SAAnC,yCAA+CH,EAA/C,KAAqDJ,kBADvD;EAEAF,QAAQ,CAACU,aAAT,CAAuBH,UAAvB;AACD;AAED,eAAc,SAAUI,WAAV,CACZC,kCADY,EAEZC,iCAFY,EAEoD,KADhED,kCACgE,cADhEA,kCACgE,GADN,EACM,MAAhEC,iCAAgE,cAAhEA,iCAAgE,GAAF,EAAE;EAEhE,MAAMC,4BAA4B,GAAGF,kCAAkC,CAACG,GAAnC,CACnC,OAAM,KAAI,IAAI7B,iBAAJ,CAAsB8B,MAAtB,CADyB,CAArC;EAGA,MAAMC,2BAA2B,GAAGJ,iCAAiC,CAACE,GAAlC,CAClC,OAAM,KAAI,IAAI1B,gBAAJ,CAAqB2B,MAArB,CADwB,CAApC;EAGAjB,oBAAoB;EAClB;EACAZ,4BAA4B,EAFV,EAGlB;EACE,GAAGG,iBADL;EAEE,GAAGC,aAFL;EAGE,GAAGC,kBAHL;EAIE,GAAGC,iBAJL;EAKE,GAAGC,eALL;EAME,GAAGC,iBANL;EAOE,GAAGC,mBAPL;EAQE,GAAGkB,4BARL,CAHkB;EAalB,gBAbkB,CAApB;EAeAf,oBAAoB;EAClB;EACAX,2BAA2B,EAFT,EAGlB,CAAC,GAAGS,gBAAJ,EAAsB,GAAGC,YAAzB,EAAuC,GAAGmB,2BAA1C,CAHkB,EAIlB,gBAJkB,CAApB;AAMD,C,iLA7CQlB,oB,+IAceY,W","names":["CategoricalScheme","getCategoricalSchemeRegistry","getSequentialSchemeRegistry","SequentialScheme","CategoricalAirbnb","CategoricalD3","CategoricalEcharts","CategoricalGoogle","CategoricalLyft","CategoricalPreset","CategoricalSuperset","SequentialCommon","SequentialD3","registerColorSchemes","registry","colorSchemes","standardDefaultKey","forEach","registerValue","scheme","id","defaultKey","find","isDefault","setDefaultKey","setupColors","extraCategoricalColorSchemeConfigs","extraSequentialColorSchemeConfigs","extraCategoricalColorSchemes","map","config","extraSequentialColorSchemes"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/setup/setupColors.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  CategoricalScheme,\n  ColorScheme,\n  ColorSchemeConfig,\n  getCategoricalSchemeRegistry,\n  getSequentialSchemeRegistry,\n  SequentialScheme,\n  SequentialSchemeConfig,\n  CategoricalAirbnb,\n  CategoricalD3,\n  CategoricalEcharts,\n  CategoricalGoogle,\n  CategoricalLyft,\n  CategoricalPreset,\n  CategoricalSuperset,\n  SequentialCommon,\n  SequentialD3,\n  ColorSchemeRegistry,\n} from '@superset-ui/core';\n\nfunction registerColorSchemes<T extends ColorScheme>(\n  registry: ColorSchemeRegistry<T>,\n  colorSchemes: T[],\n  standardDefaultKey: string,\n) {\n  colorSchemes.forEach(scheme => {\n    registry.registerValue(scheme.id, scheme);\n  });\n\n  const defaultKey =\n    colorSchemes.find(scheme => scheme.isDefault)?.id || standardDefaultKey;\n  registry.setDefaultKey(defaultKey);\n}\n\nexport default function setupColors(\n  extraCategoricalColorSchemeConfigs: ColorSchemeConfig[] = [],\n  extraSequentialColorSchemeConfigs: SequentialSchemeConfig[] = [],\n) {\n  const extraCategoricalColorSchemes = extraCategoricalColorSchemeConfigs.map(\n    config => new CategoricalScheme(config),\n  );\n  const extraSequentialColorSchemes = extraSequentialColorSchemeConfigs.map(\n    config => new SequentialScheme(config),\n  );\n  registerColorSchemes(\n    // @ts-ignore\n    getCategoricalSchemeRegistry(),\n    [\n      ...CategoricalAirbnb,\n      ...CategoricalD3,\n      ...CategoricalEcharts,\n      ...CategoricalGoogle,\n      ...CategoricalLyft,\n      ...CategoricalPreset,\n      ...CategoricalSuperset,\n      ...extraCategoricalColorSchemes,\n    ],\n    'supersetColors',\n  );\n  registerColorSchemes(\n    // @ts-ignore\n    getSequentialSchemeRegistry(),\n    [...SequentialCommon, ...SequentialD3, ...extraSequentialColorSchemes],\n    'superset_seq_1',\n  );\n}\n"]},"metadata":{},"sourceType":"module"}