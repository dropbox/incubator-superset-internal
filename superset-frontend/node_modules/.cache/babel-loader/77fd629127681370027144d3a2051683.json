{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { sharedControls } from '@superset-ui/chart-controls';\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport React from 'react';\nimport { CodeEditor } from '../../components/CodeEditor/CodeEditor';\nimport { ControlHeader } from '../../components/ControlHeader/controlHeader';\nimport { debounceFunc } from '../../consts';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst HandlebarsTemplateControl = (props) => {\n  const val = String(props != null && props.value ? props == null ? void 0 : props.value : props != null && props.default ? props == null ? void 0 : props.default : '');\n  return ___EmotionJSX(\"div\", null,\n  ___EmotionJSX(ControlHeader, null, props.label),\n  ___EmotionJSX(CodeEditor, { theme: \"dark\", value: val, onChange: (source) => {\n      debounceFunc(props.onChange, source || '');\n    } }));\n\n};\nexport const handlebarsTemplateControlSetItem = {\n  name: 'handlebarsTemplate',\n  config: {\n    ...sharedControls.entity,\n    type: HandlebarsTemplateControl,\n    label: t('Handlebars Template'),\n    description: t('A handlebars template that is applied to the data'),\n    default: `<ul class=\"data-list\">\n  {{#each data}}\n    <li>{{stringify this}}</li>\n  {{/each}}\n</ul>`,\n    isInt: false,\n    renderTrigger: true,\n    validators: [validateNonEmpty],\n    mapStateToProps: (_ref) => {var _controls$handlebars_;let { controls } = _ref;return {\n        value: controls == null ? void 0 : (_controls$handlebars_ = controls.handlebars_template) == null ? void 0 : _controls$handlebars_.value };} } };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAGEA,cAHF,QAIO,6BAJP;AAKA,SAASC,CAAT,EAAYC,gBAAZ,QAAoC,mBAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,wCAA3B;AACA,SAASC,aAAT,QAA8B,8CAA9B;AACA,SAASC,YAAT,QAA6B,cAA7B,C;AAMA,MAAMC,yBAAyB,GAAG,CAChCC,KADgC,KAE9B;EACF,MAAMC,GAAG,GAAGC,MAAM,CAChBF,KAAK,QAAL,SAAK,CAAEG,KAAP,GAAeH,KAAf,oBAAeA,KAAK,CAAEG,KAAtB,GAA8BH,KAAK,QAAL,SAAK,CAAEI,OAAP,GAAiBJ,KAAjB,oBAAiBA,KAAK,CAAEI,OAAxB,GAAkC,EADhD,CAAlB;EAIA,OACE;EACE,cAAC,aAAD,QAAgBJ,KAAK,CAACK,KAAtB,CADF;EAEE,cAAC,UAAD,IACE,KAAK,EAAC,MADR,EAEE,KAAK,EAAEJ,GAFT,EAGE,QAAQ,EAAE,OAAM,KAAG;MACjBH,YAAY,CAACE,KAAK,CAACM,QAAP,EAAiBC,MAAM,IAAI,EAA3B,CAAZ;IACD,CALH,GAFF,CADF;;AAYD,CAnBD;AAqBA,OAAO,MAAMC,gCAAgC,GAAmB;EAC9DC,IAAI,EAAE,oBADwD;EAE9DC,MAAM,EAAE;IACN,GAAGlB,cAAc,CAACmB,MADZ;IAENC,IAAI,EAAEb,yBAFA;IAGNM,KAAK,EAAEZ,CAAC,CAAC,qBAAD,CAHF;IAINoB,WAAW,EAAEpB,CAAC,CAAC,mDAAD,CAJR;IAKNW,OAAO,EAAE;;;;MALH;IAUNU,KAAK,EAAE,KAVD;IAWNC,aAAa,EAAE,IAXT;IAaNC,UAAU,EAAE,CAACtB,gBAAD,CAbN;IAcNuB,eAAe,EAAE,yCAAC,EAAEC,QAAF,EAAD,eAAmB;QAClCf,KAAK,EAAEe,QAAF,6CAAEA,QAAQ,CAAEC,mBAAZ,qBAAE,sBAA+BhB,KADJ,EAAnB,EAdX,EAFsD,EAAzD","names":["sharedControls","t","validateNonEmpty","React","CodeEditor","ControlHeader","debounceFunc","HandlebarsTemplateControl","props","val","String","value","default","label","onChange","source","handlebarsTemplateControlSetItem","name","config","entity","type","description","isInt","renderTrigger","validators","mapStateToProps","controls","handlebars_template"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/plugin-chart-handlebars/src/plugin/controls/handlebarTemplate.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ControlSetItem,\n  CustomControlConfig,\n  sharedControls,\n} from '@superset-ui/chart-controls';\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport React from 'react';\nimport { CodeEditor } from '../../components/CodeEditor/CodeEditor';\nimport { ControlHeader } from '../../components/ControlHeader/controlHeader';\nimport { debounceFunc } from '../../consts';\n\ninterface HandlebarsCustomControlProps {\n  value: string;\n}\n\nconst HandlebarsTemplateControl = (\n  props: CustomControlConfig<HandlebarsCustomControlProps>,\n) => {\n  const val = String(\n    props?.value ? props?.value : props?.default ? props?.default : '',\n  );\n\n  return (\n    <div>\n      <ControlHeader>{props.label}</ControlHeader>\n      <CodeEditor\n        theme=\"dark\"\n        value={val}\n        onChange={source => {\n          debounceFunc(props.onChange, source || '');\n        }}\n      />\n    </div>\n  );\n};\n\nexport const handlebarsTemplateControlSetItem: ControlSetItem = {\n  name: 'handlebarsTemplate',\n  config: {\n    ...sharedControls.entity,\n    type: HandlebarsTemplateControl,\n    label: t('Handlebars Template'),\n    description: t('A handlebars template that is applied to the data'),\n    default: `<ul class=\"data-list\">\n  {{#each data}}\n    <li>{{stringify this}}</li>\n  {{/each}}\n</ul>`,\n    isInt: false,\n    renderTrigger: true,\n\n    validators: [validateNonEmpty],\n    mapStateToProps: ({ controls }) => ({\n      value: controls?.handlebars_template?.value,\n    }),\n  },\n};\n"]},"metadata":{},"sourceType":"module"}