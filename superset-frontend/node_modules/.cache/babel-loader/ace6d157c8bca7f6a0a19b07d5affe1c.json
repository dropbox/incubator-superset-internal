{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetClient, t } from '@superset-ui/core';\nimport rison from 'rison';\nimport { cacheWrapper } from 'src/utils/cacheWrapper';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nconst localCache = new Map();\nconst cachedSupersetGet = cacheWrapper(SupersetClient.get, localCache, (_ref) => {let { endpoint } = _ref;return endpoint || '';});\nexport const tagToSelectOption = (item) => ({\n  value: item.name,\n  label: item.name,\n  key: item.name });\n\nexport const loadTags = async (search, page, pageSize) => {\n  const searchColumn = 'name';\n  const query = rison.encode({\n    filters: [{ col: searchColumn, opr: 'ct', value: search }],\n    page,\n    page_size: pageSize,\n    order_column: searchColumn,\n    order_direction: 'asc' });\n\n  const getErrorMessage = (_ref2) => {let { error, message } = _ref2;\n    let errorText = message || error || t('An error has occurred');\n    if (message === 'Forbidden') {\n      errorText = t('You do not have permission to edit this dashboard');\n    }\n    return errorText;\n  };\n  return cachedSupersetGet({\n    endpoint: `/api/v1/tag/?q=${query}` }).\n\n  then((response) => {\n    const data = response.json.result.\n    filter((item) => item.type === 1).\n    map(tagToSelectOption);\n    return {\n      data,\n      totalCount: response.json.count };\n\n  }).\n  catch(async (error) => {\n    const errorMessage = getErrorMessage(await getClientErrorObject(error));\n    throw new Error(errorMessage);\n  });\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(localCache, \"localCache\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Tags/utils.tsx\");reactHotLoader.register(cachedSupersetGet, \"cachedSupersetGet\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Tags/utils.tsx\");reactHotLoader.register(tagToSelectOption, \"tagToSelectOption\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Tags/utils.tsx\");reactHotLoader.register(loadTags, \"loadTags\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Tags/utils.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,cAAT,EAAyBC,CAAzB,QAAkC,mBAAlC;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAEEC,oBAFF,QAGO,gCAHP;AAKA,MAAMC,UAAU,GAAG,IAAIC,GAAJ,EAAnB;AAEA,MAAMC,iBAAiB,GAAGJ,YAAY,CACpCH,cAAc,CAACQ,GADqB,EAEpCH,UAFoC,EAGpC,eAAC,EAAEI,QAAF,EAAD,eAAkBA,QAAQ,IAAI,EAA9B,EAHoC,CAAtC;AAYA,OAAO,MAAMC,iBAAiB,GAAG,CAC/BC,IAD+B,MAEV;EACrBC,KAAK,EAAED,IAAI,CAACE,IADS;EAErBC,KAAK,EAAEH,IAAI,CAACE,IAFS;EAGrBE,GAAG,EAAEJ,IAAI,CAACE,IAHW,EAFU,CAA1B;;AAQP,OAAO,MAAMG,QAAQ,GAAG,OACtBC,MADsB,EAEtBC,IAFsB,EAGtBC,QAHsB,KAIpB;EACF,MAAMC,YAAY,GAAG,MAArB;EACA,MAAMC,KAAK,GAAGnB,KAAK,CAACoB,MAAN,CAAa;IACzBC,OAAO,EAAE,CAAC,EAAEC,GAAG,EAAEJ,YAAP,EAAqBK,GAAG,EAAE,IAA1B,EAAgCb,KAAK,EAAEK,MAAvC,EAAD,CADgB;IAEzBC,IAFyB;IAGzBQ,SAAS,EAAEP,QAHc;IAIzBQ,YAAY,EAAEP,YAJW;IAKzBQ,eAAe,EAAE,KALQ,EAAb,CAAd;;EAQA,MAAMC,eAAe,GAAG,WAA0C,KAAzC,EAAEC,KAAF,EAASC,OAAT,EAAyC;IAChE,IAAIC,SAAS,GAAGD,OAAO,IAAID,KAAX,IAAoB7B,CAAC,CAAC,uBAAD,CAArC;IACA,IAAI8B,OAAO,KAAK,WAAhB,EAA6B;MAC3BC,SAAS,GAAG/B,CAAC,CAAC,mDAAD,CAAb;IACD;IACD,OAAO+B,SAAP;EACD,CAND;EAQA,OAAOzB,iBAAiB,CAAC;IACvBE,QAAQ,EAAE,kBAAkBY,KAAK,EADV,EAAD,CAAjB;;EAGJY,IAHI,CAGC,SAAQ,KAAG;IACf,MAAMC,IAAI,GAGJC,QAAQ,CAACC,IAAT,CAAcC,MAAd;IACHC,MADG,CACI,CAAC3B,IAAD,KAAwCA,IAAI,CAAC4B,IAAL,KAAc,CAD1D;IAEHC,GAFG,CAEC9B,iBAFD,CAHN;IAMA,OAAO;MACLwB,IADK;MAELO,UAAU,EAAEN,QAAQ,CAACC,IAAT,CAAcM,KAFrB,EAAP;;EAID,CAdI;EAeJC,KAfI,CAeE,OAAMb,KAAN,KAAc;IACnB,MAAMc,YAAY,GAAGf,eAAe,CAAC,MAAMzB,oBAAoB,CAAC0B,KAAD,CAA3B,CAApC;IACA,MAAM,IAAIe,KAAJ,CAAUD,YAAV,CAAN;EACD,CAlBI,CAAP;AAmBD,CAzCM,C,iLAtBDvC,U,0IAEAE,iB,iJAYOG,iB,iJAQAM,Q","names":["SupersetClient","t","rison","cacheWrapper","getClientErrorObject","localCache","Map","cachedSupersetGet","get","endpoint","tagToSelectOption","item","value","name","label","key","loadTags","search","page","pageSize","searchColumn","query","encode","filters","col","opr","page_size","order_column","order_direction","getErrorMessage","error","message","errorText","then","data","response","json","result","filter","type","map","totalCount","count","catch","errorMessage","Error"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Tags/utils.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { SupersetClient, t } from '@superset-ui/core';\nimport Tag from 'src/types/TagType';\n\nimport rison from 'rison';\nimport { cacheWrapper } from 'src/utils/cacheWrapper';\nimport {\n  ClientErrorObject,\n  getClientErrorObject,\n} from 'src/utils/getClientErrorObject';\n\nconst localCache = new Map<string, any>();\n\nconst cachedSupersetGet = cacheWrapper(\n  SupersetClient.get,\n  localCache,\n  ({ endpoint }) => endpoint || '',\n);\n\ntype SelectTagsValue = {\n  value: string | number | undefined;\n  label: string;\n  key: string | number | undefined;\n};\n\nexport const tagToSelectOption = (\n  item: Tag & { table_name: string },\n): SelectTagsValue => ({\n  value: item.name,\n  label: item.name,\n  key: item.name,\n});\n\nexport const loadTags = async (\n  search: string,\n  page: number,\n  pageSize: number,\n) => {\n  const searchColumn = 'name';\n  const query = rison.encode({\n    filters: [{ col: searchColumn, opr: 'ct', value: search }],\n    page,\n    page_size: pageSize,\n    order_column: searchColumn,\n    order_direction: 'asc',\n  });\n\n  const getErrorMessage = ({ error, message }: ClientErrorObject) => {\n    let errorText = message || error || t('An error has occurred');\n    if (message === 'Forbidden') {\n      errorText = t('You do not have permission to edit this dashboard');\n    }\n    return errorText;\n  };\n\n  return cachedSupersetGet({\n    endpoint: `/api/v1/tag/?q=${query}`,\n  })\n    .then(response => {\n      const data: {\n        label: string;\n        value: string | number;\n      }[] = response.json.result\n        .filter((item: Tag & { table_name: string }) => item.type === 1)\n        .map(tagToSelectOption);\n      return {\n        data,\n        totalCount: response.json.count,\n      };\n    })\n    .catch(async error => {\n      const errorMessage = getErrorMessage(await getClientErrorObject(error));\n      throw new Error(errorMessage);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}