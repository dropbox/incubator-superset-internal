{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getChartIdAndColumnFromFilterKey } from './getDashboardFilterKey';\n\n// input: { [id_column1]: values, [id_column2]: values }\n// output: { column1: values, column2: values }\nexport default function getFilterValuesByFilterId(_ref)\n\n\n{let { activeFilters = {}, filterId } = _ref;\n  return Object.entries(activeFilters).reduce((map, entry) => {\n    const [filterKey, { values }] = entry;\n    const { chartId, column } = getChartIdAndColumnFromFilterKey(filterKey);\n    if (chartId === filterId) {\n      return {\n        ...map,\n        [column]: values };\n\n    }\n    return map;\n  }, {});\n}","map":{"version":3,"names":["getChartIdAndColumnFromFilterKey","getFilterValuesByFilterId","activeFilters","filterId","Object","entries","reduce","map","entry","filterKey","values","chartId","column"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/util/getFilterValuesByFilterId.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getChartIdAndColumnFromFilterKey } from './getDashboardFilterKey';\n\n// input: { [id_column1]: values, [id_column2]: values }\n// output: { column1: values, column2: values }\nexport default function getFilterValuesByFilterId({\n  activeFilters = {},\n  filterId,\n}) {\n  return Object.entries(activeFilters).reduce((map, entry) => {\n    const [filterKey, { values }] = entry;\n    const { chartId, column } = getChartIdAndColumnFromFilterKey(filterKey);\n    if (chartId === filterId) {\n      return {\n        ...map,\n        [column]: values,\n      };\n    }\n    return map;\n  }, {});\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,gCAAT,QAAiD,yBAAjD;;AAEA;AACA;AACA,eAAe,SAASC,yBAAT;;;AAGZ,KAH+C,EAChDC,aAAa,GAAG,EADgC,EAEhDC,QAFgD,EAG/C;EACD,OAAOC,MAAM,CAACC,OAAP,CAAeH,aAAf,EAA8BI,MAA9B,CAAqC,CAACC,GAAD,EAAMC,KAAN,KAAgB;IAC1D,MAAM,CAACC,SAAD,EAAY,EAAEC,MAAF,EAAZ,IAA0BF,KAAhC;IACA,MAAM,EAAEG,OAAF,EAAWC,MAAX,KAAsBZ,gCAAgC,CAACS,SAAD,CAA5D;IACA,IAAIE,OAAO,KAAKR,QAAhB,EAA0B;MACxB,OAAO;QACL,GAAGI,GADE;QAEL,CAACK,MAAD,GAAUF,MAFL,EAAP;;IAID;IACD,OAAOH,GAAP;EACD,CAVM,EAUJ,EAVI,CAAP;AAWD"},"metadata":{},"sourceType":"module"}