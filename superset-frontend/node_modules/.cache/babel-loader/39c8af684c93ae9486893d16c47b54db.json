{"ast":null,"code":"import { css as _css } from \"@emotion/react\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _isEqual from \"lodash/isEqual\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react-hooks/rules-of-hooks */\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { Behavior, isFeatureEnabled, FeatureFlag, GenericDataType, getChartMetadataRegistry, NativeFilterType, styled, t } from '@superset-ui/core';\n\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useState } from 'react';\nimport rison from 'rison';\nimport { useSelector } from 'react-redux';\nimport { getChartDataRequest } from 'src/components/Chart/chartAction';\nimport { Input, TextArea } from 'src/components/Input';\nimport { Select } from 'src/components';\nimport Collapse from 'src/components/Collapse';\nimport BasicErrorAlert from 'src/components/ErrorMessage/BasicErrorAlert';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\nimport { FormItem } from 'src/components/Form';\nimport Icons from 'src/components/Icons';\nimport Loading from 'src/components/Loading';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { Radio } from 'src/components/Radio';\nimport Tabs from 'src/components/Tabs';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { cachedSupersetGet } from 'src/utils/cachedSupersetGet';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport AdhocFilterControl from 'src/explore/components/controls/FilterControl/AdhocFilterControl';\nimport { waitForAsyncData } from 'src/middleware/asyncEvent';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport { SingleValueType } from 'src/filters/components/Range/SingleValueType';\nimport { getFormData, mergeExtraFormData } from 'src/dashboard/components/nativeFilters/utils';\nimport { ALLOW_DEPENDENCIES as TYPES_SUPPORT_DEPENDENCIES, getFiltersConfigModalTestId } from '../FiltersConfigModal';\nimport { CollapsibleControl } from './CollapsibleControl';\nimport { ColumnSelect } from './ColumnSelect';\nimport DatasetSelect from './DatasetSelect';\nimport DefaultValue from './DefaultValue';\nimport FilterScope from './FilterScope/FilterScope';\nimport getControlItemsMap from './getControlItemsMap';\nimport RemovedFilter from './RemovedFilter';\nimport { useBackendFormUpdate, useDefaultValue } from './state';\nimport { hasTemporalColumns, mostUsedDataset, setNativeFilterFieldValues, useForceUpdate } from './utils';\nimport { FILTER_SUPPORTED_TYPES, INPUT_WIDTH } from './constants';\nimport DependencyList from './DependencyList';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst TabPane = styled(Tabs.TabPane)`\n  padding: ${(_ref) => {let { theme } = _ref;return theme.gridUnit * 4;}}px 0px;\n`;\nconst StyledContainer = styled.div`\n  ${(_ref2) => {let { theme } = _ref2;return `\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    padding: 0px ${theme.gridUnit * 4}px;\n  `;}}\n`;\nconst StyledRowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  padding: 0px ${(_ref3) => {let { theme } = _ref3;return theme.gridUnit * 4;}}px;\n`;\nconst controlsOrder = [\n'enableEmptyFilter',\n'defaultToFirstItem',\n'multiSelect',\n'searchAllOptions',\n'inverseSelection'];\n\nexport const StyledFormItem = styled(FormItem)`\n  width: 49%;\n  margin-bottom: ${(_ref4) => {let { theme } = _ref4;return theme.gridUnit * 4;}}px;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${(_ref5) => {let { theme } = _ref5;return theme.gridUnit * 10;}}px;\n  }\n`;\nexport const StyledRowFormItem = styled(FormItem)`\n  margin-bottom: 0;\n  padding-bottom: 0;\n  min-width: 50%;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  .ant-form-item-control-input-content > div > div {\n    height: auto;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${(_ref6) => {let { theme } = _ref6;return theme.gridUnit * 10;}}px;\n  }\n`;\nexport const StyledRowSubFormItem = styled(FormItem)`\n  min-width: 50%;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  .ant-form-item {\n    margin-bottom: 0;\n  }\n\n  .ant-form-item-control-input-content > div > div {\n    height: auto;\n  }\n\n  .ant-form-item-extra {\n    display: none;\n  }\n\n  & .ant-form-item-control-input {\n    height: auto;\n  }\n`;\nexport const StyledLabel = styled.span`\n  color: ${(_ref7) => {let { theme } = _ref7;return theme.colors.grayscale.base;}};\n  font-size: ${(_ref8) => {let { theme } = _ref8;return theme.typography.sizes.s;}}px;\n  text-transform: uppercase;\n`;\nconst CleanFormItem = styled(FormItem)`\n  margin-bottom: 0;\n`;\nconst DefaultValueContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst RefreshIcon = styled(Icons.Refresh)`\n  margin-left: ${(_ref9) => {let { theme } = _ref9;return theme.gridUnit * 2;}}px;\n  color: ${(_ref10) => {let { theme } = _ref10;return theme.colors.primary.base;}};\n`;\nconst StyledCollapse = styled(Collapse)`\n  border-left: 0;\n  border-top: 1px solid ${(_ref11) => {let { theme } = _ref11;return theme.colors.grayscale.light2;}};\n  border-radius: 0;\n\n  .ant-collapse-header {\n    border-bottom: 1px solid ${(_ref12) => {let { theme } = _ref12;return theme.colors.grayscale.light2;}};\n    border-top: 1px solid ${(_ref13) => {let { theme } = _ref13;return theme.colors.grayscale.light2;}};\n    margin-top: -1px;\n    border-radius: 0;\n  }\n\n  .ant-collapse-content {\n    border: 0;\n  }\n\n  .ant-collapse-content-box {\n    padding-top: ${(_ref14) => {let { theme } = _ref14;return theme.gridUnit * 2;}}px;\n  }\n\n  &.ant-collapse > .ant-collapse-item {\n    border: 0;\n    border-radius: 0;\n  }\n`;\nconst StyledTabs = styled(Tabs)`\n  .ant-tabs-nav {\n    position: sticky;\n    top: 0;\n    background: ${(_ref15) => {let { theme } = _ref15;return theme.colors.grayscale.light5;}};\n    z-index: 1;\n  }\n\n  .ant-tabs-nav-list {\n    padding: 0;\n  }\n\n  .ant-form-item-label {\n    padding-bottom: 0;\n  }\n`;\nconst StyledAsterisk = styled.span`\n  color: ${(_ref16) => {let { theme } = _ref16;return theme.colors.error.base;}};\n  font-size: ${(_ref17) => {let { theme } = _ref17;return theme.typography.sizes.s;}}px;\n  margin-left: ${(_ref18) => {let { theme } = _ref18;return theme.gridUnit - 1;}}px;\n  &:before {\n    content: '*';\n  }\n`;\nconst FilterTypeInfo = styled.div`\n  ${(_ref19) => {let { theme } = _ref19;return `\n    width: 49%;\n    font-size: ${theme.typography.sizes.s}px;\n    color: ${theme.colors.grayscale.light1};\n    margin:\n      ${-theme.gridUnit * 2}px\n      0px\n      ${theme.gridUnit * 4}px\n      ${theme.gridUnit * 4}px;\n  `;}}\n`;\nconst FilterTabs = {\n  configuration: {\n    key: 'configuration',\n    name: t('Settings') },\n\n  scoping: {\n    key: 'scoping',\n    name: t('Scoping') } };\n\n\nexport const FilterPanels = {\n  configuration: {\n    key: 'configuration',\n    name: t('Filter Configuration') },\n\n  settings: {\n    key: 'settings',\n    name: t('Filter Settings') } };\n\n\nconst FILTERS_WITH_ADHOC_FILTERS = ['filter_select', 'filter_range'];\n// TODO: Rename the filter plugins and remove this mapping\nconst FILTER_TYPE_NAME_MAPPING = {\n  [t('Select filter')]: t('Value'),\n  [t('Range filter')]: t('Numerical range'),\n  [t('Time filter')]: t('Time range'),\n  [t('Time column')]: t('Time column'),\n  [t('Time grain')]: t('Time grain'),\n  [t('Group By')]: t('Group by') };\n\n/**\n * The configuration form for a specific filter.\n * Assigns field values to `filters[filterId]` in the form.\n */\nconst FiltersConfigForm = (_ref20, ref) => {var _formFilter$dataset2, _nativeFilterItems$fo, _nativeFilterItems$fo2, _ref25, _formFilter$dataset$v, _formFilter$dataset3, _filterToEdit$targets, _nativeFilterItems$fo3, _nativeFilterItem$val, _formFilter$isDataDir, _formFilter$dataset6, _filterToEdit$adhoc_f, _formFilter$controlVa, _filterToEdit$control, _filterToEdit$control2, _formFilter$controlVa2, _formFilter$controlVa3, _filterToEdit$control3, _filterToEdit$control4, _formFilter$controlVa4, _formFilter$adhoc_fil, _formFilter$controlVa5, _formFilter$dataset9, _datasetDetails$colum, _error$errors;let { filterId, filterToEdit, removedFilters, form, getAvailableFilters, activeFilterPanelKeys, restoreFilter, handleActiveFilterPanelChange, setErroredFilters, validateDependencies, getDependencySuggestion, isActive } = _ref20;\n  const isRemoved = !!removedFilters[filterId];\n  const [error, setError] = useState();\n  const [metrics, setMetrics] = useState([]);\n  const [activeTabKey, setActiveTabKey] = useState(FilterTabs.configuration.key);\n  const dashboardId = useSelector((state) => state.dashboardInfo.id);\n  const [undoFormValues, setUndoFormValues] = useState(null);\n  const forceUpdate = useForceUpdate(isActive);\n  const [datasetDetails, setDatasetDetails] = useState();\n  const defaultFormFilter = useMemo(() => ({}), []);\n  const filters = form.getFieldValue('filters');\n  const formValues = filters == null ? void 0 : filters[filterId];\n  const formFilter = formValues || undoFormValues || defaultFormFilter;\n  const dependencies = (formFilter == null ? void 0 : formFilter.dependencies) || (filterToEdit == null ? void 0 : filterToEdit.cascadeParentIds) || [];\n  const nativeFilterItems = getChartMetadataRegistry().items;\n  const nativeFilterVizTypes = Object.entries(nativeFilterItems)\n  // @ts-ignore\n  .filter((_ref21) => {var _value$behaviors;let [, { value }] = _ref21;return (_value$behaviors = value.behaviors) == null ? void 0 : _includesInstanceProperty(_value$behaviors).call(_value$behaviors, Behavior.NATIVE_FILTER);}).\n  map((_ref22) => {let [key] = _ref22;return key;});\n  const loadedDatasets = useSelector((_ref23) => {let { datasources } = _ref23;return datasources;});\n  const charts = useSelector((_ref24) => {let { charts } = _ref24;return charts;});\n  const doLoadedDatasetsHaveTemporalColumns = useMemo(() => Object.values(loadedDatasets).some((dataset) => hasTemporalColumns(dataset)), [loadedDatasets]);\n  const showTimeRangePicker = useMemo(() => {\n    const currentDataset = Object.values(loadedDatasets).find((dataset) => {var _formFilter$dataset;return dataset.id === (formFilter == null ? void 0 : (_formFilter$dataset = formFilter.dataset) == null ? void 0 : _formFilter$dataset.value);});\n    return currentDataset ? hasTemporalColumns(currentDataset) : true;\n  }, [formFilter == null ? void 0 : (_formFilter$dataset2 = formFilter.dataset) == null ? void 0 : _formFilter$dataset2.value, loadedDatasets]);\n  const hasDataset =\n  // @ts-ignore\n  !!((_nativeFilterItems$fo = nativeFilterItems[formFilter == null ? void 0 : formFilter.filterType]) != null && (_nativeFilterItems$fo2 = _nativeFilterItems$fo.value) != null && _nativeFilterItems$fo2.datasourceCount);\n  const datasetId = (_ref25 = (_formFilter$dataset$v = formFilter == null ? void 0 : (_formFilter$dataset3 = formFilter.dataset) == null ? void 0 : _formFilter$dataset3.value) != null ? _formFilter$dataset$v :\n  filterToEdit == null ? void 0 : (_filterToEdit$targets = filterToEdit.targets[0]) == null ? void 0 : _filterToEdit$targets.datasetId) != null ? _ref25 :\n  mostUsedDataset(loadedDatasets, charts);\n  const { controlItems = {}, mainControlItems = {} } = formFilter ?\n  getControlItemsMap({\n    datasetId,\n    disabled: false,\n    forceUpdate,\n    form,\n    filterId,\n    filterType: formFilter == null ? void 0 : formFilter.filterType,\n    filterToEdit,\n    formFilter,\n    removed: isRemoved }) :\n\n  {};\n  const hasColumn = !!mainControlItems.groupby;\n  const nativeFilterItem = (_nativeFilterItems$fo3 = nativeFilterItems[formFilter == null ? void 0 : formFilter.filterType]) != null ? _nativeFilterItems$fo3 : {};\n  // @ts-ignore\n  const enableNoResults = !!((_nativeFilterItem$val = nativeFilterItem.value) != null && _nativeFilterItem$val.enableNoResults);\n  const hasMetrics = hasColumn && !!metrics.length;\n  const hasFilledDataset = !hasDataset || datasetId && ((formFilter == null ? void 0 : formFilter.column) || !hasColumn);\n  const hasAdditionalFilters = _includesInstanceProperty(FILTERS_WITH_ADHOC_FILTERS).call(FILTERS_WITH_ADHOC_FILTERS, formFilter == null ? void 0 : formFilter.filterType);\n  const canDependOnOtherFilters = _includesInstanceProperty(TYPES_SUPPORT_DEPENDENCIES).call(TYPES_SUPPORT_DEPENDENCIES, formFilter == null ? void 0 : formFilter.filterType);\n  const isDataDirty = (_formFilter$isDataDir = formFilter == null ? void 0 : formFilter.isDataDirty) != null ? _formFilter$isDataDir : true;\n  const setNativeFilterFieldValuesWrapper = (values) => {\n    setNativeFilterFieldValues(form, filterId, values);\n    setError(undefined);\n    forceUpdate();\n  };\n  const setErrorWrapper = (error) => {\n    setNativeFilterFieldValues(form, filterId, {\n      defaultValueQueriesData: null });\n\n    setError(error);\n    forceUpdate();\n  };\n  // Calculates the dependencies default values to be used\n  // to extract the available values to the filter\n  let dependenciesDefaultValues = {};\n  if (dependencies && dependencies.length > 0 && filters) {\n    dependencies.forEach((dependency) => {var _filters$dependency, _filters$dependency$d;\n      const extraFormData = (_filters$dependency = filters[dependency]) == null ? void 0 : (_filters$dependency$d = _filters$dependency.defaultDataMask) == null ? void 0 : _filters$dependency$d.extraFormData;\n      dependenciesDefaultValues = mergeExtraFormData(dependenciesDefaultValues, extraFormData);\n    });\n  }\n  const dependenciesText = JSON.stringify(dependenciesDefaultValues);\n  const refreshHandler = useCallback(function (force) {var _formFilter$dataset4, _formFilter$dataset5;if (force === void 0) {force = false;}\n    if (!hasDataset || !(formFilter != null && (_formFilter$dataset4 = formFilter.dataset) != null && _formFilter$dataset4.value)) {\n      forceUpdate();\n      return;\n    }\n    const formData = getFormData({\n      datasetId: formFilter == null ? void 0 : (_formFilter$dataset5 = formFilter.dataset) == null ? void 0 : _formFilter$dataset5.value,\n      dashboardId,\n      groupby: formFilter == null ? void 0 : formFilter.column,\n      ...formFilter });\n\n    formData.extra_form_data = dependenciesDefaultValues;\n    setNativeFilterFieldValuesWrapper({\n      defaultValueQueriesData: null,\n      isDataDirty: false });\n\n    getChartDataRequest({\n      formData,\n      force }).\n\n    then((_ref26) => {let { response, json } = _ref26;\n      if (isFeatureEnabled(FeatureFlag.GLOBAL_ASYNC_QUERIES)) {\n        // deal with getChartDataRequest transforming the response data\n        const result = 'result' in json ? json.result[0] : json;\n        if (response.status === 200) {\n          setNativeFilterFieldValuesWrapper({\n            defaultValueQueriesData: [result] });\n\n        } else\n        if (response.status === 202) {\n          waitForAsyncData(result).\n          then((asyncResult) => {\n            setNativeFilterFieldValuesWrapper({\n              defaultValueQueriesData: asyncResult });\n\n          }).\n          catch((error) => {\n            getClientErrorObject(error).then((clientErrorObject) => {\n              setErrorWrapper(clientErrorObject);\n            });\n          });\n        } else\n        {\n          throw new Error(`Received unexpected response status (${response.status}) while fetching chart data`);\n        }\n      } else\n      {\n        setNativeFilterFieldValuesWrapper({\n          defaultValueQueriesData: json.result });\n\n      }\n    }).\n    catch((error) => {\n      getClientErrorObject(error).then((clientErrorObject) => {\n        setError(clientErrorObject);\n      });\n    });\n  }, [filterId, forceUpdate, form, formFilter, hasDataset, dependenciesText]);\n  // TODO: refreshHandler changes itself because of the dependencies. Needs refactor.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => refreshHandler(), [dependenciesText]);\n  const newFormData = getFormData({\n    datasetId,\n    groupby: hasColumn ? formFilter == null ? void 0 : formFilter.column : undefined,\n    ...formFilter });\n\n  newFormData.extra_form_data = dependenciesDefaultValues;\n  const [hasDefaultValue, isRequired, defaultValueTooltip, setHasDefaultValue] = useDefaultValue(formFilter, filterToEdit);\n  const showDataset = !datasetId || datasetDetails || (formFilter == null ? void 0 : (_formFilter$dataset6 = formFilter.dataset) == null ? void 0 : _formFilter$dataset6.label);\n  const formChanged = useCallback(() => {\n    form.setFields([\n    {\n      name: 'changed',\n      value: true }]);\n\n\n  }, [form]);\n  const updateFormValues = useCallback((values) => {\n    setNativeFilterFieldValues(form, filterId, values);\n    formChanged();\n  }, [filterId, form, formChanged]);\n  const hasPreFilter = !!(formFilter != null && formFilter.adhoc_filters) ||\n  !!(formFilter != null && formFilter.time_range) ||\n  !!(filterToEdit != null && (_filterToEdit$adhoc_f = filterToEdit.adhoc_filters) != null && _filterToEdit$adhoc_f.length) ||\n  !!(filterToEdit != null && filterToEdit.time_range);\n  const hasEnableSingleValue = (formFilter == null ? void 0 : (_formFilter$controlVa = formFilter.controlValues) == null ? void 0 : _formFilter$controlVa.enableSingleValue) !== undefined ||\n  (filterToEdit == null ? void 0 : (_filterToEdit$control = filterToEdit.controlValues) == null ? void 0 : _filterToEdit$control.enableSingleValue) !== undefined;\n  let enableSingleValue = filterToEdit == null ? void 0 : (_filterToEdit$control2 = filterToEdit.controlValues) == null ? void 0 : _filterToEdit$control2.enableSingleValue;\n  if ((formFilter == null ? void 0 : (_formFilter$controlVa2 = formFilter.controlValues) == null ? void 0 : _formFilter$controlVa2.enableSingleMaxValue) !== undefined) {\n    ({ enableSingleValue } = formFilter.controlValues);\n  }\n  const hasSorting = typeof (formFilter == null ? void 0 : (_formFilter$controlVa3 = formFilter.controlValues) == null ? void 0 : _formFilter$controlVa3.sortAscending) === 'boolean' ||\n  typeof (filterToEdit == null ? void 0 : (_filterToEdit$control3 = filterToEdit.controlValues) == null ? void 0 : _filterToEdit$control3.sortAscending) === 'boolean';\n  let sort = filterToEdit == null ? void 0 : (_filterToEdit$control4 = filterToEdit.controlValues) == null ? void 0 : _filterToEdit$control4.sortAscending;\n  if (typeof (formFilter == null ? void 0 : (_formFilter$controlVa4 = formFilter.controlValues) == null ? void 0 : _formFilter$controlVa4.sortAscending) === 'boolean') {\n    sort = formFilter.controlValues.sortAscending;\n  }\n  const showDefaultValue = !hasDataset ||\n  !isDataDirty && hasFilledDataset ||\n  !mainControlItems.groupby;\n  const onSortChanged = (value) => {var _form$getFieldValue;\n    const previous = (_form$getFieldValue = form.getFieldValue('filters')) == null ? void 0 : _form$getFieldValue[filterId].controlValues;\n    setNativeFilterFieldValues(form, filterId, {\n      controlValues: {\n        ...previous,\n        sortAscending: value } });\n\n\n    forceUpdate();\n  };\n  const onEnableSingleValueChanged = (value) => {var _form$getFieldValue2;\n    const previous = (_form$getFieldValue2 = form.getFieldValue('filters')) == null ? void 0 : _form$getFieldValue2[filterId].controlValues;\n    setNativeFilterFieldValues(form, filterId, {\n      controlValues: {\n        ...previous,\n        enableSingleValue: value } });\n\n\n    forceUpdate();\n  };\n  const validatePreFilter = () => setTimeout(() => form.validateFields([\n  ['filters', filterId, 'adhoc_filters'],\n  ['filters', filterId, 'time_range']]),\n  0);\n  const hasTimeRange = (formFilter == null ? void 0 : formFilter.time_range) && formFilter.time_range !== 'No filter';\n  const hasAdhoc = (formFilter == null ? void 0 : (_formFilter$adhoc_fil = formFilter.adhoc_filters) == null ? void 0 : _formFilter$adhoc_fil.length) > 0;\n  const defaultToFirstItem = formFilter == null ? void 0 : (_formFilter$controlVa5 = formFilter.controlValues) == null ? void 0 : _formFilter$controlVa5.defaultToFirstItem;\n  const initialDefaultValue = (formFilter == null ? void 0 : formFilter.filterType) === (filterToEdit == null ? void 0 : filterToEdit.filterType) ?\n  filterToEdit == null ? void 0 : filterToEdit.defaultDataMask :\n  null;\n  const preFilterValidator = () => {\n    if (hasTimeRange || hasAdhoc) {\n      return Promise.resolve();\n    }\n    return Promise.reject(new Error(t('Pre-filter is required')));\n  };\n  const availableFilters = getAvailableFilters(filterId);\n  const hasAvailableFilters = availableFilters.length > 0;\n  const hasTimeDependency = availableFilters.\n  filter((filter) => filter.type === 'filter_time').\n  some((filter) => dependencies == null ? void 0 : _includesInstanceProperty(dependencies).call(dependencies, filter.value));\n  useEffect(() => {\n    if (datasetId) {\n      cachedSupersetGet({\n        endpoint: `/api/v1/dataset/${datasetId}?q=${rison.encode({\n          columns: [\n          'columns.column_name',\n          'columns.expression',\n          'columns.filterable',\n          'columns.is_dttm',\n          'columns.type',\n          'columns.verbose_name',\n          'database.id',\n          'database.database_name',\n          'datasource_type',\n          'filter_select_enabled',\n          'id',\n          'is_sqllab_view',\n          'main_dttm_col',\n          'metrics.metric_name',\n          'metrics.verbose_name',\n          'schema',\n          'sql',\n          'table_name'] })\n\n        }` }).\n\n      then((response) => {var _response$json, _response$json$result, _response$json2;\n        setMetrics((_response$json = response.json) == null ? void 0 : (_response$json$result = _response$json.result) == null ? void 0 : _response$json$result.metrics);\n        const dataset = (_response$json2 = response.json) == null ? void 0 : _response$json2.result;\n        // modify the response to fit structure expected by AdhocFilterControl\n        dataset.type = dataset.datasource_type;\n        dataset.filter_select = true;\n        setDatasetDetails(dataset);\n      }).\n      catch((response) => {\n        addDangerToast(response.message);\n      });\n    }\n  }, [datasetId]);\n  useImperativeHandle(ref, () => ({\n    changeTab(tab) {\n      setActiveTabKey(tab);\n    } }));\n\n  useBackendFormUpdate(form, filterId);\n  useEffect(() => {\n    if (hasDataset && hasFilledDataset && hasDefaultValue && isDataDirty) {\n      refreshHandler();\n    }\n  }, [\n  hasDataset,\n  hasFilledDataset,\n  hasDefaultValue,\n  isDataDirty,\n  refreshHandler,\n  showDataset]);\n\n  const initiallyExcludedCharts = useMemo(() => {var _formFilter$dataset7;\n    const excluded = [];\n    if ((formFilter == null ? void 0 : (_formFilter$dataset7 = formFilter.dataset) == null ? void 0 : _formFilter$dataset7.value) === undefined) {\n      return [];\n    }\n    Object.values(charts).forEach((chart) => {var _chart$form_data, _loadedDatasets$chart, _formFilter$dataset8;\n      const chartDatasetUid = (_chart$form_data = chart.form_data) == null ? void 0 : _chart$form_data.datasource;\n      if (chartDatasetUid === undefined) {\n        return;\n      }\n      if (((_loadedDatasets$chart = loadedDatasets[chartDatasetUid]) == null ? void 0 : _loadedDatasets$chart.id) !== (formFilter == null ? void 0 : (_formFilter$dataset8 = formFilter.dataset) == null ? void 0 : _formFilter$dataset8.value)) {\n        excluded.push(chart.id);\n      }\n    });\n    return excluded;\n  }, [\n  JSON.stringify(charts),\n  formFilter == null ? void 0 : (_formFilter$dataset9 = formFilter.dataset) == null ? void 0 : _formFilter$dataset9.value,\n  JSON.stringify(loadedDatasets)]);\n\n  useEffect(() => {\n    // just removed, saving current form items for eventual undo\n    if (isRemoved) {\n      setUndoFormValues(formValues);\n    }\n  }, [isRemoved]);\n  useEffect(() => {\n    // the filter was just restored after undo\n    if (undoFormValues && !isRemoved) {\n      setNativeFilterFieldValues(form, filterId, undoFormValues);\n      setUndoFormValues(null);\n    }\n  }, [formValues, filterId, form, isRemoved, undoFormValues]);\n  if (isRemoved) {\n    return ___EmotionJSX(RemovedFilter, { onClick: () => restoreFilter(filterId) });\n  }\n  const timeColumn = ___EmotionJSX(StyledRowFormItem, { name: ['filters', filterId, 'granularity_sqla'], label: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(StyledLabel, null, t('Time column')), \"\\xA0\",\n    ___EmotionJSX(InfoTooltipWithTrigger, { placement: \"top\", tooltip: hasTimeDependency ?\n      t('Time column to apply dependent temporal filter to') :\n      t('Time column to apply time range to') })),\n    initialValue: filterToEdit == null ? void 0 : filterToEdit.granularity_sqla },\n  ___EmotionJSX(ColumnSelect, { allowClear: true, form: form, formField: \"granularity_sqla\", filterId: filterId, filterValues: (column) => !!column.is_dttm, datasetId: datasetId, onChange: (column) => {\n      // We need reset default value when when column changed\n      setNativeFilterFieldValues(form, filterId, {\n        granularity_sqla: column });\n\n      forceUpdate();\n    } }));\n\n  return ___EmotionJSX(StyledTabs, { activeKey: activeTabKey, onChange: (activeKey) => setActiveTabKey(activeKey), centered: true },\n  ___EmotionJSX(TabPane, { tab: FilterTabs.configuration.name, key: FilterTabs.configuration.key, forceRender: true },\n  ___EmotionJSX(StyledContainer, null,\n  ___EmotionJSX(StyledFormItem, { name: ['filters', filterId, 'type'], hidden: true, initialValue: NativeFilterType.NATIVE_FILTER },\n  ___EmotionJSX(Input, null)),\n\n  ___EmotionJSX(StyledFormItem, { name: ['filters', filterId, 'name'], label: ___EmotionJSX(StyledLabel, null, t('Filter name')), initialValue: filterToEdit == null ? void 0 : filterToEdit.name, rules: [{ required: !isRemoved, message: t('Name is required') }] },\n  ___EmotionJSX(Input, getFiltersConfigModalTestId('name-input'))),\n\n  ___EmotionJSX(StyledFormItem, _extends({ name: ['filters', filterId, 'filterType'], rules: [{ required: !isRemoved, message: t('Name is required') }], initialValue: (filterToEdit == null ? void 0 : filterToEdit.filterType) || 'filter_select', label: ___EmotionJSX(StyledLabel, null, t('Filter Type')) }, getFiltersConfigModalTestId('filter-type')),\n  ___EmotionJSX(Select, { ariaLabel: t('Filter type'), options: nativeFilterVizTypes.map((filterType) => {var _nativeFilterItems$fi, _FILTER_SUPPORTED_TYP, _FILTER_SUPPORTED_TYP2;\n      // @ts-ignore\n      const name = (_nativeFilterItems$fi = nativeFilterItems[filterType]) == null ? void 0 : _nativeFilterItems$fi.value.name;\n      const mappedName = name ?\n      FILTER_TYPE_NAME_MAPPING[name] :\n      undefined;\n      const isDisabled = ((_FILTER_SUPPORTED_TYP = FILTER_SUPPORTED_TYPES[filterType]) == null ? void 0 : _FILTER_SUPPORTED_TYP.length) === 1 && ((_FILTER_SUPPORTED_TYP2 =\n      FILTER_SUPPORTED_TYPES[filterType]) == null ? void 0 : _includesInstanceProperty(_FILTER_SUPPORTED_TYP2).call(_FILTER_SUPPORTED_TYP2, GenericDataType.TEMPORAL)) &&\n      !doLoadedDatasetsHaveTemporalColumns;\n      return {\n        value: filterType,\n        label: mappedName || name,\n        customLabel: isDisabled ? ___EmotionJSX(Tooltip, { title: t('Datasets do not contain a temporal column') },\n        mappedName || name) :\n        undefined,\n        disabled: isDisabled };\n\n    }), onChange: (value) => {\n      setNativeFilterFieldValues(form, filterId, {\n        filterType: value,\n        defaultDataMask: null,\n        column: null });\n\n      forceUpdate();\n    } }))),\n\n\n  (formFilter == null ? void 0 : formFilter.filterType) === 'filter_time' && ___EmotionJSX(FilterTypeInfo, null,\n  t(`Dashboard time range filters apply to temporal columns defined in\n          the filter section of each chart. Add temporal columns to the chart\n          filters to have this dashboard filter impact those charts.`)),\n\n  hasDataset && ___EmotionJSX(StyledRowContainer, null,\n  showDataset ? ___EmotionJSX(StyledFormItem, _extends({ name: ['filters', filterId, 'dataset'], label: ___EmotionJSX(StyledLabel, null, t('Dataset')), initialValue: datasetDetails ?\n    {\n      label: datasetDetails.table_name,\n      value: datasetDetails.id } :\n\n    undefined, rules: [\n    { required: !isRemoved, message: t('Dataset is required') }] },\n  getFiltersConfigModalTestId('datasource-input')),\n  ___EmotionJSX(DatasetSelect, { onChange: (value) => {\n      // We need to reset the column when the dataset has changed\n      if (value.value !== datasetId) {\n        setNativeFilterFieldValues(form, filterId, {\n          dataset: value,\n          defaultDataMask: null,\n          column: null });\n\n      }\n      forceUpdate();\n    } })) :\n  ___EmotionJSX(StyledFormItem, { label: ___EmotionJSX(StyledLabel, null, t('Dataset')) },\n  ___EmotionJSX(Loading, { position: \"inline-centered\" })),\n\n  hasDataset &&\n  Object.keys(mainControlItems).map((key) => mainControlItems[key].element)),\n\n  ___EmotionJSX(StyledCollapse, { defaultActiveKey: activeFilterPanelKeys, onChange: (key) => {\n      handleActiveFilterPanelChange(key);\n    }, expandIconPosition: \"right\", key: `native-filter-config-${filterId}` },\n  (formFilter == null ? void 0 : formFilter.filterType) !== 'filter_time' && ___EmotionJSX(Collapse.Panel, { forceRender: true, header: FilterPanels.configuration.name, key: `${filterId}-${FilterPanels.configuration.key}` },\n  canDependOnOtherFilters && hasAvailableFilters && ___EmotionJSX(StyledRowFormItem, { name: ['filters', filterId, 'dependencies'], initialValue: dependencies },\n  ___EmotionJSX(DependencyList, { availableFilters: availableFilters, dependencies: dependencies, onDependenciesChange: (dependencies) => {\n      setNativeFilterFieldValues(form, filterId, {\n        dependencies });\n\n      forceUpdate();\n      validateDependencies();\n      formChanged();\n    }, getDependencySuggestion: () => getDependencySuggestion(filterId) },\n  hasTimeDependency ? timeColumn : undefined)),\n\n\n  hasDataset && hasAdditionalFilters && ___EmotionJSX(CleanFormItem, { name: ['filters', filterId, 'preFilter'] },\n  ___EmotionJSX(CollapsibleControl, { initialValue: hasPreFilter, title: t('Pre-filter available values'), tooltip: t(`Add filter clauses to control the filter's source query,\n                    though only in the context of the autocomplete i.e., these conditions\n                    do not impact how the filter is applied to the dashboard. This is useful\n                    when you want to improve the query's performance by only scanning a subset\n                    of the underlying data or limit the available values displayed in the filter.`), onChange: (checked) => {\n      formChanged();\n      if (checked) {\n        validatePreFilter();\n      }\n    } },\n  ___EmotionJSX(StyledRowSubFormItem, { name: ['filters', filterId, 'adhoc_filters'], css: /*#__PURE__*/_css({ width: INPUT_WIDTH }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:FiltersConfigForm;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), initialValue: filterToEdit == null ? void 0 : filterToEdit.adhoc_filters, required: true, rules: [\n    {\n      validator: preFilterValidator }] },\n\n\n  ___EmotionJSX(AdhocFilterControl, { columns: (datasetDetails == null ? void 0 : (_datasetDetails$colum = datasetDetails.columns) == null ? void 0 : _datasetDetails$colum.filter((c) => c.filterable)) || [], savedMetrics: (datasetDetails == null ? void 0 : datasetDetails.metrics) || [], datasource: datasetDetails, onChange: (filters) => {\n      setNativeFilterFieldValues(form, filterId, {\n        adhoc_filters: filters });\n\n      forceUpdate();\n      validatePreFilter();\n    }, label: ___EmotionJSX(\"span\", null,\n    ___EmotionJSX(StyledLabel, null, t('Pre-filter')),\n    !hasTimeRange && ___EmotionJSX(StyledAsterisk, null)) })),\n\n\n  showTimeRangePicker && ___EmotionJSX(StyledRowFormItem, { name: ['filters', filterId, 'time_range'], label: ___EmotionJSX(StyledLabel, null, t('Time range')), initialValue: (filterToEdit == null ? void 0 : filterToEdit.time_range) || t('No filter'), required: !hasAdhoc, rules: [\n    {\n      validator: preFilterValidator }] },\n\n\n  ___EmotionJSX(DateFilterControl, { name: \"time_range\", onChange: (timeRange) => {\n      setNativeFilterFieldValues(form, filterId, {\n        time_range: timeRange });\n\n      forceUpdate();\n      validatePreFilter();\n    } })),\n\n  hasTimeRange && !hasTimeDependency ?\n  timeColumn :\n  undefined)),\n\n\n  (formFilter == null ? void 0 : formFilter.filterType) !== 'filter_range' ? ___EmotionJSX(CleanFormItem, { name: ['filters', filterId, 'sortFilter'] },\n  ___EmotionJSX(CollapsibleControl, { initialValue: hasSorting, title: t('Sort filter values'), onChange: (checked) => {\n      onSortChanged(checked || undefined);\n      formChanged();\n    } },\n  ___EmotionJSX(StyledRowFormItem, { name: [\n    'filters',\n    filterId,\n    'controlValues',\n    'sortAscending'],\n    initialValue: sort, label: ___EmotionJSX(StyledLabel, null, t('Sort type')) },\n  ___EmotionJSX(Radio.Group, { onChange: (value) => {\n      onSortChanged(value.target.value);\n    } },\n  ___EmotionJSX(Radio, { value: true }, t('Sort ascending')),\n  ___EmotionJSX(Radio, { value: false }, t('Sort descending')))),\n\n\n  hasMetrics && ___EmotionJSX(StyledRowSubFormItem, { name: ['filters', filterId, 'sortMetric'], initialValue: filterToEdit == null ? void 0 : filterToEdit.sortMetric, label: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(StyledLabel, null, t('Sort Metric')), \"\\xA0\",\n    ___EmotionJSX(InfoTooltipWithTrigger, { placement: \"top\", tooltip: t('If a metric is specified, sorting will be done based on the metric value') })) },\n\n  ___EmotionJSX(Select, { allowClear: true, ariaLabel: t('Sort metric'), name: \"sortMetric\", options: metrics.map((metric) => {var _metric$verbose_name;return {\n        value: metric.metric_name,\n        label: (_metric$verbose_name = metric.verbose_name) != null ? _metric$verbose_name : metric.metric_name };}),\n    onChange: (value) => {\n      if (value !== undefined) {\n        setNativeFilterFieldValues(form, filterId, {\n          sortMetric: value });\n\n        forceUpdate();\n      }\n    } })))) :\n\n\n  ___EmotionJSX(CleanFormItem, { name: ['filters', filterId, 'rangeFilter'] },\n  ___EmotionJSX(CollapsibleControl, { initialValue: hasEnableSingleValue, title: t('Single Value'), onChange: (checked) => {\n      onEnableSingleValueChanged(checked ? SingleValueType.Exact : undefined);\n      formChanged();\n    } },\n  ___EmotionJSX(StyledRowFormItem, { name: [\n    'filters',\n    filterId,\n    'controlValues',\n    'enableSingleValue'],\n    initialValue: enableSingleValue, label: ___EmotionJSX(StyledLabel, null, t('Single value type')) },\n  ___EmotionJSX(Radio.Group, { onChange: (value) => onEnableSingleValueChanged(value.target.value) },\n  ___EmotionJSX(Radio, { value: SingleValueType.Minimum },\n  t('Minimum')),\n\n  ___EmotionJSX(Radio, { value: SingleValueType.Exact },\n  t('Exact')),\n\n  ___EmotionJSX(Radio, { value: SingleValueType.Maximum },\n  t('Maximum'))))))),\n\n\n\n\n\n\n  ___EmotionJSX(Collapse.Panel, { forceRender: true, header: FilterPanels.settings.name, key: `${filterId}-${FilterPanels.settings.key}` },\n  ___EmotionJSX(StyledFormItem, { name: ['filters', filterId, 'description'], initialValue: filterToEdit == null ? void 0 : filterToEdit.description, label: ___EmotionJSX(StyledLabel, null, t('Description')) },\n  ___EmotionJSX(TextArea, null)),\n\n  ___EmotionJSX(CleanFormItem, { name: ['filters', filterId, 'defaultValueQueriesData'], hidden: true, initialValue: null }),\n  ___EmotionJSX(CleanFormItem, { name: ['filters', filterId, 'defaultValue'] },\n  ___EmotionJSX(CollapsibleControl, { checked: hasDefaultValue, disabled: isRequired || defaultToFirstItem, initialValue: hasDefaultValue, title: t('Filter has default value'), tooltip: defaultValueTooltip, onChange: (value) => {\n      setHasDefaultValue(value);\n      if (!value) {\n        setNativeFilterFieldValues(form, filterId, {\n          defaultDataMask: null });\n\n      }\n      formChanged();\n    } },\n  !isRemoved && ___EmotionJSX(StyledRowSubFormItem, { name: ['filters', filterId, 'defaultDataMask'], initialValue: initialDefaultValue, label: ___EmotionJSX(StyledLabel, null, t('Default Value')), required: hasDefaultValue, rules: [\n    {\n      validator: () => {var _formFilter$defaultDa, _formFilter$defaultDa2;\n        if (formFilter != null && (_formFilter$defaultDa = formFilter.defaultDataMask) != null && (_formFilter$defaultDa2 = _formFilter$defaultDa.filterState) != null && _formFilter$defaultDa2.value) {\n          // requires managing the error as the DefaultValue\n          // component does not use an Antdesign compatible input\n          const formValidationFields = form.getFieldsError();\n          setErroredFilters((prevErroredFilters) => {\n            if (prevErroredFilters.length &&\n            !formValidationFields.find((f) => f.errors.length > 0)) {\n              return [];\n            }\n            return prevErroredFilters;\n          });\n          return Promise.resolve();\n        }\n        setErroredFilters((prevErroredFilters) => {\n          if (_includesInstanceProperty(prevErroredFilters).call(prevErroredFilters, filterId)) {\n            return prevErroredFilters;\n          }\n          return [...prevErroredFilters, filterId];\n        });\n        return Promise.reject(new Error(t('Default value is required')));\n      } }] },\n\n\n  error || showDefaultValue ? ___EmotionJSX(DefaultValueContainer, null,\n  error ? ___EmotionJSX(ErrorMessageWithStackTrace, { error: (_error$errors = error.errors) == null ? void 0 : _error$errors[0], fallback: ___EmotionJSX(BasicErrorAlert, { title: t('Cannot load filter'), body: error.error, level: \"error\" }) }) : ___EmotionJSX(DefaultValue, { setDataMask: (dataMask) => {var _initialDefaultValue$, _dataMask$filterState;\n      if (!_isEqual(initialDefaultValue == null ? void 0 : (_initialDefaultValue$ = initialDefaultValue.filterState) == null ? void 0 : _initialDefaultValue$.value, dataMask == null ? void 0 : (_dataMask$filterState = dataMask.filterState) == null ? void 0 : _dataMask$filterState.value)) {\n        formChanged();\n      }\n      setNativeFilterFieldValues(form, filterId, {\n        defaultDataMask: dataMask });\n\n      form.validateFields([\n      ['filters', filterId, 'defaultDataMask']]);\n\n      forceUpdate();\n    }, hasDefaultValue: hasDefaultValue, filterId: filterId, hasDataset: hasDataset, form: form, formData: newFormData, enableNoResults: enableNoResults }),\n  hasDataset && datasetId && ___EmotionJSX(Tooltip, { title: t('Refresh the default values') },\n  ___EmotionJSX(RefreshIcon, { onClick: () => refreshHandler(true) }))) :\n\n  t('Fill all required fields to enable \"Default Value\"')))),\n\n\n\n  Object.keys(controlItems).\n  sort((a, b) => controlsOrder.indexOf(a) -\n  controlsOrder.indexOf(b)).\n  map((key) => controlItems[key].element)))),\n\n\n\n  ___EmotionJSX(TabPane, { tab: FilterTabs.scoping.name, key: FilterTabs.scoping.key, forceRender: true },\n  ___EmotionJSX(FilterScope, { updateFormValues: updateFormValues, pathToFormValue: ['filters', filterId], forceUpdate: forceUpdate, filterScope: filterToEdit == null ? void 0 : filterToEdit.scope, formFilterScope: formFilter == null ? void 0 : formFilter.scope, formScopingType: formFilter == null ? void 0 : formFilter.scoping, initiallyExcludedCharts: initiallyExcludedCharts })));\n\n\n};\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/forwardRef(FiltersConfigForm));","map":{"version":3,"mappings":"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","names":["InfoTooltipWithTrigger","Behavior","isFeatureEnabled","FeatureFlag","GenericDataType","getChartMetadataRegistry","NativeFilterType","styled","t","React","forwardRef","useCallback","useEffect","useImperativeHandle","useMemo","useState","rison","useSelector","getChartDataRequest","Input","TextArea","Select","Collapse","BasicErrorAlert","ErrorMessageWithStackTrace","FormItem","Icons","Loading","addDangerToast","Radio","Tabs","Tooltip","cachedSupersetGet","DateFilterControl","AdhocFilterControl","waitForAsyncData","getClientErrorObject","SingleValueType","getFormData","mergeExtraFormData","ALLOW_DEPENDENCIES","TYPES_SUPPORT_DEPENDENCIES","getFiltersConfigModalTestId","CollapsibleControl","ColumnSelect","DatasetSelect","DefaultValue","FilterScope","getControlItemsMap","RemovedFilter","useBackendFormUpdate","useDefaultValue","hasTemporalColumns","mostUsedDataset","setNativeFilterFieldValues","useForceUpdate","FILTER_SUPPORTED_TYPES","INPUT_WIDTH","DependencyList","TabPane","theme","gridUnit","StyledContainer","div","StyledRowContainer","controlsOrder","StyledFormItem","StyledRowFormItem","StyledRowSubFormItem","StyledLabel","span","colors","grayscale","base","typography","sizes","s","CleanFormItem","DefaultValueContainer","RefreshIcon","Refresh","primary","StyledCollapse","light2","StyledTabs","light5","StyledAsterisk","error","FilterTypeInfo","light1","FilterTabs","configuration","key","name","scoping","FilterPanels","settings","FILTERS_WITH_ADHOC_FILTERS","FILTER_TYPE_NAME_MAPPING","FiltersConfigForm","ref","filterId","filterToEdit","removedFilters","form","getAvailableFilters","activeFilterPanelKeys","restoreFilter","handleActiveFilterPanelChange","setErroredFilters","validateDependencies","getDependencySuggestion","isActive","isRemoved","setError","metrics","setMetrics","activeTabKey","setActiveTabKey","dashboardId","state","dashboardInfo","id","undoFormValues","setUndoFormValues","forceUpdate","datasetDetails","setDatasetDetails","defaultFormFilter","filters","getFieldValue","formValues","formFilter","dependencies","cascadeParentIds","nativeFilterItems","items","nativeFilterVizTypes","Object","entries","filter","value","behaviors","NATIVE_FILTER","map","loadedDatasets","datasources","charts","doLoadedDatasetsHaveTemporalColumns","values","some","dataset","showTimeRangePicker","currentDataset","find","hasDataset","filterType","datasourceCount","datasetId","targets","controlItems","mainControlItems","disabled","removed","hasColumn","groupby","nativeFilterItem","enableNoResults","hasMetrics","length","hasFilledDataset","column","hasAdditionalFilters","canDependOnOtherFilters","isDataDirty","setNativeFilterFieldValuesWrapper","undefined","setErrorWrapper","defaultValueQueriesData","dependenciesDefaultValues","forEach","extraFormData","dependency","defaultDataMask","dependenciesText","JSON","stringify","refreshHandler","force","formData","extra_form_data","then","response","json","GLOBAL_ASYNC_QUERIES","result","status","asyncResult","catch","clientErrorObject","Error","newFormData","hasDefaultValue","isRequired","defaultValueTooltip","setHasDefaultValue","showDataset","label","formChanged","setFields","updateFormValues","hasPreFilter","adhoc_filters","time_range","hasEnableSingleValue","controlValues","enableSingleValue","enableSingleMaxValue","hasSorting","sortAscending","sort","showDefaultValue","onSortChanged","previous","onEnableSingleValueChanged","validatePreFilter","setTimeout","validateFields","hasTimeRange","hasAdhoc","defaultToFirstItem","initialDefaultValue","preFilterValidator","Promise","resolve","reject","availableFilters","hasAvailableFilters","hasTimeDependency","type","endpoint","encode","columns","datasource_type","filter_select","message","changeTab","tab","initiallyExcludedCharts","excluded","chart","chartDatasetUid","form_data","datasource","push","timeColumn","granularity_sqla","is_dttm","activeKey","required","mappedName","isDisabled","TEMPORAL","customLabel","table_name","keys","element","checked","width","validator","c","filterable","timeRange","target","sortMetric","metric","metric_name","verbose_name","Exact","Minimum","Maximum","description","filterState","formValidationFields","getFieldsError","prevErroredFilters","f","errors","dataMask","a","b","indexOf","scope","memo"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n  ColumnMeta,\n  InfoTooltipWithTrigger,\n  Metric,\n} from '@superset-ui/chart-controls';\nimport {\n  AdhocFilter,\n  Behavior,\n  ChartDataResponseResult,\n  Column,\n  isFeatureEnabled,\n  FeatureFlag,\n  Filter,\n  GenericDataType,\n  getChartMetadataRegistry,\n  JsonResponse,\n  NativeFilterType,\n  styled,\n  SupersetApiError,\n  t,\n} from '@superset-ui/core';\nimport { isEqual } from 'lodash';\nimport React, {\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useState,\n} from 'react';\nimport rison from 'rison';\nimport { PluginFilterSelectCustomizeProps } from 'src/filters/components/Select/types';\nimport { useSelector } from 'react-redux';\nimport { getChartDataRequest } from 'src/components/Chart/chartAction';\nimport { Input, TextArea } from 'src/components/Input';\nimport { Select, FormInstance } from 'src/components';\nimport Collapse from 'src/components/Collapse';\nimport BasicErrorAlert from 'src/components/ErrorMessage/BasicErrorAlert';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\nimport { FormItem } from 'src/components/Form';\nimport Icons from 'src/components/Icons';\nimport Loading from 'src/components/Loading';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { Radio } from 'src/components/Radio';\nimport Tabs from 'src/components/Tabs';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { cachedSupersetGet } from 'src/utils/cachedSupersetGet';\nimport {\n  Chart,\n  ChartsState,\n  DatasourcesState,\n  RootState,\n} from 'src/dashboard/types';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport AdhocFilterControl from 'src/explore/components/controls/FilterControl/AdhocFilterControl';\nimport { waitForAsyncData } from 'src/middleware/asyncEvent';\nimport {\n  ClientErrorObject,\n  getClientErrorObject,\n} from 'src/utils/getClientErrorObject';\nimport { SingleValueType } from 'src/filters/components/Range/SingleValueType';\nimport {\n  getFormData,\n  mergeExtraFormData,\n} from 'src/dashboard/components/nativeFilters/utils';\nimport {\n  ALLOW_DEPENDENCIES as TYPES_SUPPORT_DEPENDENCIES,\n  getFiltersConfigModalTestId,\n} from '../FiltersConfigModal';\nimport { FilterRemoval, NativeFiltersForm } from '../types';\nimport { CollapsibleControl } from './CollapsibleControl';\nimport { ColumnSelect } from './ColumnSelect';\nimport DatasetSelect from './DatasetSelect';\nimport DefaultValue from './DefaultValue';\nimport FilterScope from './FilterScope/FilterScope';\nimport getControlItemsMap from './getControlItemsMap';\nimport RemovedFilter from './RemovedFilter';\nimport { useBackendFormUpdate, useDefaultValue } from './state';\nimport {\n  hasTemporalColumns,\n  mostUsedDataset,\n  setNativeFilterFieldValues,\n  useForceUpdate,\n} from './utils';\nimport { FILTER_SUPPORTED_TYPES, INPUT_WIDTH } from './constants';\nimport DependencyList from './DependencyList';\n\nconst TabPane = styled(Tabs.TabPane)`\n  padding: ${({ theme }) => theme.gridUnit * 4}px 0px;\n`;\n\nconst StyledContainer = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    padding: 0px ${theme.gridUnit * 4}px;\n  `}\n`;\n\nconst StyledRowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  padding: 0px ${({ theme }) => theme.gridUnit * 4}px;\n`;\n\ntype ControlKey = keyof PluginFilterSelectCustomizeProps;\n\nconst controlsOrder: ControlKey[] = [\n  'enableEmptyFilter',\n  'defaultToFirstItem',\n  'multiSelect',\n  'searchAllOptions',\n  'inverseSelection',\n];\n\nexport const StyledFormItem = styled(FormItem)`\n  width: 49%;\n  margin-bottom: ${({ theme }) => theme.gridUnit * 4}px;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  }\n`;\n\nexport const StyledRowFormItem = styled(FormItem)`\n  margin-bottom: 0;\n  padding-bottom: 0;\n  min-width: 50%;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  .ant-form-item-control-input-content > div > div {\n    height: auto;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  }\n`;\n\nexport const StyledRowSubFormItem = styled(FormItem)`\n  min-width: 50%;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  .ant-form-item {\n    margin-bottom: 0;\n  }\n\n  .ant-form-item-control-input-content > div > div {\n    height: auto;\n  }\n\n  .ant-form-item-extra {\n    display: none;\n  }\n\n  & .ant-form-item-control-input {\n    height: auto;\n  }\n`;\n\nexport const StyledLabel = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  text-transform: uppercase;\n`;\n\nconst CleanFormItem = styled(FormItem)`\n  margin-bottom: 0;\n`;\n\nconst DefaultValueContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst RefreshIcon = styled(Icons.Refresh)`\n  margin-left: ${({ theme }) => theme.gridUnit * 2}px;\n  color: ${({ theme }) => theme.colors.primary.base};\n`;\n\nconst StyledCollapse = styled(Collapse)`\n  border-left: 0;\n  border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  border-radius: 0;\n\n  .ant-collapse-header {\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    margin-top: -1px;\n    border-radius: 0;\n  }\n\n  .ant-collapse-content {\n    border: 0;\n  }\n\n  .ant-collapse-content-box {\n    padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  &.ant-collapse > .ant-collapse-item {\n    border: 0;\n    border-radius: 0;\n  }\n`;\n\nconst StyledTabs = styled(Tabs)`\n  .ant-tabs-nav {\n    position: sticky;\n    top: 0;\n    background: ${({ theme }) => theme.colors.grayscale.light5};\n    z-index: 1;\n  }\n\n  .ant-tabs-nav-list {\n    padding: 0;\n  }\n\n  .ant-form-item-label {\n    padding-bottom: 0;\n  }\n`;\n\nconst StyledAsterisk = styled.span`\n  color: ${({ theme }) => theme.colors.error.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-left: ${({ theme }) => theme.gridUnit - 1}px;\n  &:before {\n    content: '*';\n  }\n`;\n\nconst FilterTypeInfo = styled.div`\n  ${({ theme }) => `\n    width: 49%;\n    font-size: ${theme.typography.sizes.s}px;\n    color: ${theme.colors.grayscale.light1};\n    margin:\n      ${-theme.gridUnit * 2}px\n      0px\n      ${theme.gridUnit * 4}px\n      ${theme.gridUnit * 4}px;\n  `}\n`;\n\nconst FilterTabs = {\n  configuration: {\n    key: 'configuration',\n    name: t('Settings'),\n  },\n  scoping: {\n    key: 'scoping',\n    name: t('Scoping'),\n  },\n};\n\nexport const FilterPanels = {\n  configuration: {\n    key: 'configuration',\n    name: t('Filter Configuration'),\n  },\n  settings: {\n    key: 'settings',\n    name: t('Filter Settings'),\n  },\n};\n\nexport interface FiltersConfigFormProps {\n  filterId: string;\n  filterToEdit?: Filter;\n  removedFilters: Record<string, FilterRemoval>;\n  restoreFilter: (filterId: string) => void;\n  form: FormInstance<NativeFiltersForm>;\n  getAvailableFilters: (\n    filterId: string,\n  ) => { label: string; value: string; type: string | undefined }[];\n  handleActiveFilterPanelChange: (activeFilterPanel: string | string[]) => void;\n  activeFilterPanelKeys: string | string[];\n  isActive: boolean;\n  setErroredFilters: (f: (filters: string[]) => string[]) => void;\n  validateDependencies: () => void;\n  getDependencySuggestion: (filterId: string) => string;\n}\n\nconst FILTERS_WITH_ADHOC_FILTERS = ['filter_select', 'filter_range'];\n\n// TODO: Rename the filter plugins and remove this mapping\nconst FILTER_TYPE_NAME_MAPPING = {\n  [t('Select filter')]: t('Value'),\n  [t('Range filter')]: t('Numerical range'),\n  [t('Time filter')]: t('Time range'),\n  [t('Time column')]: t('Time column'),\n  [t('Time grain')]: t('Time grain'),\n  [t('Group By')]: t('Group by'),\n};\n\n/**\n * The configuration form for a specific filter.\n * Assigns field values to `filters[filterId]` in the form.\n */\nconst FiltersConfigForm = (\n  {\n    filterId,\n    filterToEdit,\n    removedFilters,\n    form,\n    getAvailableFilters,\n    activeFilterPanelKeys,\n    restoreFilter,\n    handleActiveFilterPanelChange,\n    setErroredFilters,\n    validateDependencies,\n    getDependencySuggestion,\n    isActive,\n  }: FiltersConfigFormProps,\n  ref: React.RefObject<any>,\n) => {\n  const isRemoved = !!removedFilters[filterId];\n  const [error, setError] = useState<ClientErrorObject>();\n  const [metrics, setMetrics] = useState<Metric[]>([]);\n  const [activeTabKey, setActiveTabKey] = useState<string>(\n    FilterTabs.configuration.key,\n  );\n  const dashboardId = useSelector<RootState, number>(\n    state => state.dashboardInfo.id,\n  );\n  const [undoFormValues, setUndoFormValues] = useState<Record<\n    string,\n    any\n  > | null>(null);\n  const forceUpdate = useForceUpdate(isActive);\n  const [datasetDetails, setDatasetDetails] = useState<Record<string, any>>();\n  const defaultFormFilter = useMemo(() => ({}), []);\n  const filters = form.getFieldValue('filters');\n  const formValues = filters?.[filterId];\n  const formFilter = formValues || undoFormValues || defaultFormFilter;\n\n  const dependencies: string[] =\n    formFilter?.dependencies || filterToEdit?.cascadeParentIds || [];\n\n  const nativeFilterItems = getChartMetadataRegistry().items;\n  const nativeFilterVizTypes = Object.entries(nativeFilterItems)\n    // @ts-ignore\n    .filter(([, { value }]) =>\n      value.behaviors?.includes(Behavior.NATIVE_FILTER),\n    )\n    .map(([key]) => key);\n\n  const loadedDatasets = useSelector<RootState, DatasourcesState>(\n    ({ datasources }) => datasources,\n  );\n\n  const charts = useSelector<RootState, ChartsState>(({ charts }) => charts);\n\n  const doLoadedDatasetsHaveTemporalColumns = useMemo(\n    () =>\n      Object.values(loadedDatasets).some(dataset =>\n        hasTemporalColumns(dataset),\n      ),\n    [loadedDatasets],\n  );\n\n  const showTimeRangePicker = useMemo(() => {\n    const currentDataset = Object.values(loadedDatasets).find(\n      dataset => dataset.id === formFilter?.dataset?.value,\n    );\n\n    return currentDataset ? hasTemporalColumns(currentDataset) : true;\n  }, [formFilter?.dataset?.value, loadedDatasets]);\n\n  const hasDataset =\n    // @ts-ignore\n    !!nativeFilterItems[formFilter?.filterType]?.value?.datasourceCount;\n\n  const datasetId =\n    formFilter?.dataset?.value ??\n    filterToEdit?.targets[0]?.datasetId ??\n    mostUsedDataset(loadedDatasets, charts);\n\n  const { controlItems = {}, mainControlItems = {} } = formFilter\n    ? getControlItemsMap({\n        datasetId,\n        disabled: false,\n        forceUpdate,\n        form,\n        filterId,\n        filterType: formFilter?.filterType,\n        filterToEdit,\n        formFilter,\n        removed: isRemoved,\n      })\n    : {};\n  const hasColumn = !!mainControlItems.groupby;\n\n  const nativeFilterItem = nativeFilterItems[formFilter?.filterType] ?? {};\n  // @ts-ignore\n  const enableNoResults = !!nativeFilterItem.value?.enableNoResults;\n\n  const hasMetrics = hasColumn && !!metrics.length;\n\n  const hasFilledDataset =\n    !hasDataset || (datasetId && (formFilter?.column || !hasColumn));\n\n  const hasAdditionalFilters = FILTERS_WITH_ADHOC_FILTERS.includes(\n    formFilter?.filterType,\n  );\n\n  const canDependOnOtherFilters = TYPES_SUPPORT_DEPENDENCIES.includes(\n    formFilter?.filterType,\n  );\n\n  const isDataDirty = formFilter?.isDataDirty ?? true;\n\n  const setNativeFilterFieldValuesWrapper = (values: object) => {\n    setNativeFilterFieldValues(form, filterId, values);\n    setError(undefined);\n    forceUpdate();\n  };\n\n  const setErrorWrapper = (error: ClientErrorObject) => {\n    setNativeFilterFieldValues(form, filterId, {\n      defaultValueQueriesData: null,\n    });\n    setError(error);\n    forceUpdate();\n  };\n\n  // Calculates the dependencies default values to be used\n  // to extract the available values to the filter\n  let dependenciesDefaultValues = {};\n  if (dependencies && dependencies.length > 0 && filters) {\n    dependencies.forEach(dependency => {\n      const extraFormData = filters[dependency]?.defaultDataMask?.extraFormData;\n      dependenciesDefaultValues = mergeExtraFormData(\n        dependenciesDefaultValues,\n        extraFormData,\n      );\n    });\n  }\n\n  const dependenciesText = JSON.stringify(dependenciesDefaultValues);\n\n  const refreshHandler = useCallback(\n    (force = false) => {\n      if (!hasDataset || !formFilter?.dataset?.value) {\n        forceUpdate();\n        return;\n      }\n      const formData = getFormData({\n        datasetId: formFilter?.dataset?.value,\n        dashboardId,\n        groupby: formFilter?.column,\n        ...formFilter,\n      });\n\n      formData.extra_form_data = dependenciesDefaultValues;\n\n      setNativeFilterFieldValuesWrapper({\n        defaultValueQueriesData: null,\n        isDataDirty: false,\n      });\n      getChartDataRequest({\n        formData,\n        force,\n      })\n        .then(({ response, json }) => {\n          if (isFeatureEnabled(FeatureFlag.GLOBAL_ASYNC_QUERIES)) {\n            // deal with getChartDataRequest transforming the response data\n            const result = 'result' in json ? json.result[0] : json;\n\n            if (response.status === 200) {\n              setNativeFilterFieldValuesWrapper({\n                defaultValueQueriesData: [result],\n              });\n            } else if (response.status === 202) {\n              waitForAsyncData(result)\n                .then((asyncResult: ChartDataResponseResult[]) => {\n                  setNativeFilterFieldValuesWrapper({\n                    defaultValueQueriesData: asyncResult,\n                  });\n                })\n                .catch((error: Response) => {\n                  getClientErrorObject(error).then(clientErrorObject => {\n                    setErrorWrapper(clientErrorObject);\n                  });\n                });\n            } else {\n              throw new Error(\n                `Received unexpected response status (${response.status}) while fetching chart data`,\n              );\n            }\n          } else {\n            setNativeFilterFieldValuesWrapper({\n              defaultValueQueriesData: json.result,\n            });\n          }\n        })\n        .catch((error: Response) => {\n          getClientErrorObject(error).then(clientErrorObject => {\n            setError(clientErrorObject);\n          });\n        });\n    },\n    [filterId, forceUpdate, form, formFilter, hasDataset, dependenciesText],\n  );\n\n  // TODO: refreshHandler changes itself because of the dependencies. Needs refactor.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => refreshHandler(), [dependenciesText]);\n\n  const newFormData = getFormData({\n    datasetId,\n    groupby: hasColumn ? formFilter?.column : undefined,\n    ...formFilter,\n  });\n  newFormData.extra_form_data = dependenciesDefaultValues;\n\n  const [hasDefaultValue, isRequired, defaultValueTooltip, setHasDefaultValue] =\n    useDefaultValue(formFilter, filterToEdit);\n\n  const showDataset =\n    !datasetId || datasetDetails || formFilter?.dataset?.label;\n\n  const formChanged = useCallback(() => {\n    form.setFields([\n      {\n        name: 'changed',\n        value: true,\n      },\n    ]);\n  }, [form]);\n\n  const updateFormValues = useCallback(\n    (values: any) => {\n      setNativeFilterFieldValues(form, filterId, values);\n      formChanged();\n    },\n    [filterId, form, formChanged],\n  );\n\n  const hasPreFilter =\n    !!formFilter?.adhoc_filters ||\n    !!formFilter?.time_range ||\n    !!filterToEdit?.adhoc_filters?.length ||\n    !!filterToEdit?.time_range;\n\n  const hasEnableSingleValue =\n    formFilter?.controlValues?.enableSingleValue !== undefined ||\n    filterToEdit?.controlValues?.enableSingleValue !== undefined;\n\n  let enableSingleValue = filterToEdit?.controlValues?.enableSingleValue;\n  if (formFilter?.controlValues?.enableSingleMaxValue !== undefined) {\n    ({ enableSingleValue } = formFilter.controlValues);\n  }\n\n  const hasSorting =\n    typeof formFilter?.controlValues?.sortAscending === 'boolean' ||\n    typeof filterToEdit?.controlValues?.sortAscending === 'boolean';\n\n  let sort = filterToEdit?.controlValues?.sortAscending;\n  if (typeof formFilter?.controlValues?.sortAscending === 'boolean') {\n    sort = formFilter.controlValues.sortAscending;\n  }\n\n  const showDefaultValue =\n    !hasDataset ||\n    (!isDataDirty && hasFilledDataset) ||\n    !mainControlItems.groupby;\n\n  const onSortChanged = (value: boolean | undefined) => {\n    const previous = form.getFieldValue('filters')?.[filterId].controlValues;\n    setNativeFilterFieldValues(form, filterId, {\n      controlValues: {\n        ...previous,\n        sortAscending: value,\n      },\n    });\n    forceUpdate();\n  };\n\n  const onEnableSingleValueChanged = (value: SingleValueType | undefined) => {\n    const previous = form.getFieldValue('filters')?.[filterId].controlValues;\n    setNativeFilterFieldValues(form, filterId, {\n      controlValues: {\n        ...previous,\n        enableSingleValue: value,\n      },\n    });\n    forceUpdate();\n  };\n\n  const validatePreFilter = () =>\n    setTimeout(\n      () =>\n        form.validateFields([\n          ['filters', filterId, 'adhoc_filters'],\n          ['filters', filterId, 'time_range'],\n        ]),\n      0,\n    );\n\n  const hasTimeRange =\n    formFilter?.time_range && formFilter.time_range !== 'No filter';\n\n  const hasAdhoc = formFilter?.adhoc_filters?.length > 0;\n\n  const defaultToFirstItem = formFilter?.controlValues?.defaultToFirstItem;\n\n  const initialDefaultValue =\n    formFilter?.filterType === filterToEdit?.filterType\n      ? filterToEdit?.defaultDataMask\n      : null;\n\n  const preFilterValidator = () => {\n    if (hasTimeRange || hasAdhoc) {\n      return Promise.resolve();\n    }\n    return Promise.reject(new Error(t('Pre-filter is required')));\n  };\n\n  const availableFilters = getAvailableFilters(filterId);\n  const hasAvailableFilters = availableFilters.length > 0;\n  const hasTimeDependency = availableFilters\n    .filter(filter => filter.type === 'filter_time')\n    .some(filter => dependencies?.includes(filter.value));\n\n  useEffect(() => {\n    if (datasetId) {\n      cachedSupersetGet({\n        endpoint: `/api/v1/dataset/${datasetId}?q=${rison.encode({\n          columns: [\n            'columns.column_name',\n            'columns.expression',\n            'columns.filterable',\n            'columns.is_dttm',\n            'columns.type',\n            'columns.verbose_name',\n            'database.id',\n            'database.database_name',\n            'datasource_type',\n            'filter_select_enabled',\n            'id',\n            'is_sqllab_view',\n            'main_dttm_col',\n            'metrics.metric_name',\n            'metrics.verbose_name',\n            'schema',\n            'sql',\n            'table_name',\n          ],\n        })}`,\n      })\n        .then((response: JsonResponse) => {\n          setMetrics(response.json?.result?.metrics);\n          const dataset = response.json?.result;\n          // modify the response to fit structure expected by AdhocFilterControl\n          dataset.type = dataset.datasource_type;\n          dataset.filter_select = true;\n          setDatasetDetails(dataset);\n        })\n        .catch((response: SupersetApiError) => {\n          addDangerToast(response.message);\n        });\n    }\n  }, [datasetId]);\n\n  useImperativeHandle(ref, () => ({\n    changeTab(tab: 'configuration' | 'scoping') {\n      setActiveTabKey(tab);\n    },\n  }));\n\n  useBackendFormUpdate(form, filterId);\n\n  useEffect(() => {\n    if (hasDataset && hasFilledDataset && hasDefaultValue && isDataDirty) {\n      refreshHandler();\n    }\n  }, [\n    hasDataset,\n    hasFilledDataset,\n    hasDefaultValue,\n    isDataDirty,\n    refreshHandler,\n    showDataset,\n  ]);\n\n  const initiallyExcludedCharts = useMemo(() => {\n    const excluded: number[] = [];\n    if (formFilter?.dataset?.value === undefined) {\n      return [];\n    }\n\n    Object.values(charts).forEach((chart: Chart) => {\n      const chartDatasetUid = chart.form_data?.datasource;\n      if (chartDatasetUid === undefined) {\n        return;\n      }\n      if (loadedDatasets[chartDatasetUid]?.id !== formFilter?.dataset?.value) {\n        excluded.push(chart.id);\n      }\n    });\n    return excluded;\n  }, [\n    JSON.stringify(charts),\n    formFilter?.dataset?.value,\n    JSON.stringify(loadedDatasets),\n  ]);\n\n  useEffect(() => {\n    // just removed, saving current form items for eventual undo\n    if (isRemoved) {\n      setUndoFormValues(formValues);\n    }\n  }, [isRemoved]);\n\n  useEffect(() => {\n    // the filter was just restored after undo\n    if (undoFormValues && !isRemoved) {\n      setNativeFilterFieldValues(form, filterId, undoFormValues);\n      setUndoFormValues(null);\n    }\n  }, [formValues, filterId, form, isRemoved, undoFormValues]);\n\n  if (isRemoved) {\n    return <RemovedFilter onClick={() => restoreFilter(filterId)} />;\n  }\n\n  const timeColumn = (\n    <StyledRowFormItem\n      name={['filters', filterId, 'granularity_sqla']}\n      label={\n        <>\n          <StyledLabel>{t('Time column')}</StyledLabel>&nbsp;\n          <InfoTooltipWithTrigger\n            placement=\"top\"\n            tooltip={\n              hasTimeDependency\n                ? t('Time column to apply dependent temporal filter to')\n                : t('Time column to apply time range to')\n            }\n          />\n        </>\n      }\n      initialValue={filterToEdit?.granularity_sqla}\n    >\n      <ColumnSelect\n        allowClear\n        form={form}\n        formField=\"granularity_sqla\"\n        filterId={filterId}\n        filterValues={(column: Column) => !!column.is_dttm}\n        datasetId={datasetId}\n        onChange={column => {\n          // We need reset default value when when column changed\n          setNativeFilterFieldValues(form, filterId, {\n            granularity_sqla: column,\n          });\n          forceUpdate();\n        }}\n      />\n    </StyledRowFormItem>\n  );\n\n  return (\n    <StyledTabs\n      activeKey={activeTabKey}\n      onChange={activeKey => setActiveTabKey(activeKey)}\n      centered\n    >\n      <TabPane\n        tab={FilterTabs.configuration.name}\n        key={FilterTabs.configuration.key}\n        forceRender\n      >\n        <StyledContainer>\n          <StyledFormItem\n            name={['filters', filterId, 'type']}\n            hidden\n            initialValue={NativeFilterType.NATIVE_FILTER}\n          >\n            <Input />\n          </StyledFormItem>\n          <StyledFormItem\n            name={['filters', filterId, 'name']}\n            label={<StyledLabel>{t('Filter name')}</StyledLabel>}\n            initialValue={filterToEdit?.name}\n            rules={[{ required: !isRemoved, message: t('Name is required') }]}\n          >\n            <Input {...getFiltersConfigModalTestId('name-input')} />\n          </StyledFormItem>\n          <StyledFormItem\n            name={['filters', filterId, 'filterType']}\n            rules={[{ required: !isRemoved, message: t('Name is required') }]}\n            initialValue={filterToEdit?.filterType || 'filter_select'}\n            label={<StyledLabel>{t('Filter Type')}</StyledLabel>}\n            {...getFiltersConfigModalTestId('filter-type')}\n          >\n            <Select\n              ariaLabel={t('Filter type')}\n              options={nativeFilterVizTypes.map(filterType => {\n                // @ts-ignore\n                const name = nativeFilterItems[filterType]?.value.name;\n                const mappedName = name\n                  ? FILTER_TYPE_NAME_MAPPING[name]\n                  : undefined;\n                const isDisabled =\n                  FILTER_SUPPORTED_TYPES[filterType]?.length === 1 &&\n                  FILTER_SUPPORTED_TYPES[filterType]?.includes(\n                    GenericDataType.TEMPORAL,\n                  ) &&\n                  !doLoadedDatasetsHaveTemporalColumns;\n                return {\n                  value: filterType,\n                  label: mappedName || name,\n                  customLabel: isDisabled ? (\n                    <Tooltip\n                      title={t('Datasets do not contain a temporal column')}\n                    >\n                      {mappedName || name}\n                    </Tooltip>\n                  ) : undefined,\n                  disabled: isDisabled,\n                };\n              })}\n              onChange={value => {\n                setNativeFilterFieldValues(form, filterId, {\n                  filterType: value,\n                  defaultDataMask: null,\n                  column: null,\n                });\n                forceUpdate();\n              }}\n            />\n          </StyledFormItem>\n        </StyledContainer>\n        {formFilter?.filterType === 'filter_time' && (\n          <FilterTypeInfo>\n            {t(`Dashboard time range filters apply to temporal columns defined in\n          the filter section of each chart. Add temporal columns to the chart\n          filters to have this dashboard filter impact those charts.`)}\n          </FilterTypeInfo>\n        )}\n        {hasDataset && (\n          <StyledRowContainer>\n            {showDataset ? (\n              <StyledFormItem\n                name={['filters', filterId, 'dataset']}\n                label={<StyledLabel>{t('Dataset')}</StyledLabel>}\n                initialValue={\n                  datasetDetails\n                    ? {\n                        label: datasetDetails.table_name,\n                        value: datasetDetails.id,\n                      }\n                    : undefined\n                }\n                rules={[\n                  { required: !isRemoved, message: t('Dataset is required') },\n                ]}\n                {...getFiltersConfigModalTestId('datasource-input')}\n              >\n                <DatasetSelect\n                  onChange={(value: { label: string; value: number }) => {\n                    // We need to reset the column when the dataset has changed\n                    if (value.value !== datasetId) {\n                      setNativeFilterFieldValues(form, filterId, {\n                        dataset: value,\n                        defaultDataMask: null,\n                        column: null,\n                      });\n                    }\n                    forceUpdate();\n                  }}\n                />\n              </StyledFormItem>\n            ) : (\n              <StyledFormItem label={<StyledLabel>{t('Dataset')}</StyledLabel>}>\n                <Loading position=\"inline-centered\" />\n              </StyledFormItem>\n            )}\n            {hasDataset &&\n              Object.keys(mainControlItems).map(\n                key => mainControlItems[key].element,\n              )}\n          </StyledRowContainer>\n        )}\n        <StyledCollapse\n          defaultActiveKey={activeFilterPanelKeys}\n          onChange={key => {\n            handleActiveFilterPanelChange(key);\n          }}\n          expandIconPosition=\"right\"\n          key={`native-filter-config-${filterId}`}\n        >\n          {formFilter?.filterType !== 'filter_time' && (\n            <Collapse.Panel\n              forceRender\n              header={FilterPanels.configuration.name}\n              key={`${filterId}-${FilterPanels.configuration.key}`}\n            >\n              {canDependOnOtherFilters && hasAvailableFilters && (\n                <StyledRowFormItem\n                  name={['filters', filterId, 'dependencies']}\n                  initialValue={dependencies}\n                >\n                  <DependencyList\n                    availableFilters={availableFilters}\n                    dependencies={dependencies}\n                    onDependenciesChange={dependencies => {\n                      setNativeFilterFieldValues(form, filterId, {\n                        dependencies,\n                      });\n                      forceUpdate();\n                      validateDependencies();\n                      formChanged();\n                    }}\n                    getDependencySuggestion={() =>\n                      getDependencySuggestion(filterId)\n                    }\n                  >\n                    {hasTimeDependency ? timeColumn : undefined}\n                  </DependencyList>\n                </StyledRowFormItem>\n              )}\n              {hasDataset && hasAdditionalFilters && (\n                <CleanFormItem name={['filters', filterId, 'preFilter']}>\n                  <CollapsibleControl\n                    initialValue={hasPreFilter}\n                    title={t('Pre-filter available values')}\n                    tooltip={t(`Add filter clauses to control the filter's source query,\n                    though only in the context of the autocomplete i.e., these conditions\n                    do not impact how the filter is applied to the dashboard. This is useful\n                    when you want to improve the query's performance by only scanning a subset\n                    of the underlying data or limit the available values displayed in the filter.`)}\n                    onChange={checked => {\n                      formChanged();\n                      if (checked) {\n                        validatePreFilter();\n                      }\n                    }}\n                  >\n                    <StyledRowSubFormItem\n                      name={['filters', filterId, 'adhoc_filters']}\n                      css={{ width: INPUT_WIDTH }}\n                      initialValue={filterToEdit?.adhoc_filters}\n                      required\n                      rules={[\n                        {\n                          validator: preFilterValidator,\n                        },\n                      ]}\n                    >\n                      <AdhocFilterControl\n                        columns={\n                          datasetDetails?.columns?.filter(\n                            (c: ColumnMeta) => c.filterable,\n                          ) || []\n                        }\n                        savedMetrics={datasetDetails?.metrics || []}\n                        datasource={datasetDetails}\n                        onChange={(filters: AdhocFilter[]) => {\n                          setNativeFilterFieldValues(form, filterId, {\n                            adhoc_filters: filters,\n                          });\n                          forceUpdate();\n                          validatePreFilter();\n                        }}\n                        label={\n                          <span>\n                            <StyledLabel>{t('Pre-filter')}</StyledLabel>\n                            {!hasTimeRange && <StyledAsterisk />}\n                          </span>\n                        }\n                      />\n                    </StyledRowSubFormItem>\n                    {showTimeRangePicker && (\n                      <StyledRowFormItem\n                        name={['filters', filterId, 'time_range']}\n                        label={<StyledLabel>{t('Time range')}</StyledLabel>}\n                        initialValue={\n                          filterToEdit?.time_range || t('No filter')\n                        }\n                        required={!hasAdhoc}\n                        rules={[\n                          {\n                            validator: preFilterValidator,\n                          },\n                        ]}\n                      >\n                        <DateFilterControl\n                          name=\"time_range\"\n                          onChange={timeRange => {\n                            setNativeFilterFieldValues(form, filterId, {\n                              time_range: timeRange,\n                            });\n                            forceUpdate();\n                            validatePreFilter();\n                          }}\n                        />\n                      </StyledRowFormItem>\n                    )}\n                    {hasTimeRange && !hasTimeDependency\n                      ? timeColumn\n                      : undefined}\n                  </CollapsibleControl>\n                </CleanFormItem>\n              )}\n              {formFilter?.filterType !== 'filter_range' ? (\n                <CleanFormItem name={['filters', filterId, 'sortFilter']}>\n                  <CollapsibleControl\n                    initialValue={hasSorting}\n                    title={t('Sort filter values')}\n                    onChange={checked => {\n                      onSortChanged(checked || undefined);\n                      formChanged();\n                    }}\n                  >\n                    <StyledRowFormItem\n                      name={[\n                        'filters',\n                        filterId,\n                        'controlValues',\n                        'sortAscending',\n                      ]}\n                      initialValue={sort}\n                      label={<StyledLabel>{t('Sort type')}</StyledLabel>}\n                    >\n                      <Radio.Group\n                        onChange={value => {\n                          onSortChanged(value.target.value);\n                        }}\n                      >\n                        <Radio value>{t('Sort ascending')}</Radio>\n                        <Radio value={false}>{t('Sort descending')}</Radio>\n                      </Radio.Group>\n                    </StyledRowFormItem>\n                    {hasMetrics && (\n                      <StyledRowSubFormItem\n                        name={['filters', filterId, 'sortMetric']}\n                        initialValue={filterToEdit?.sortMetric}\n                        label={\n                          <>\n                            <StyledLabel>{t('Sort Metric')}</StyledLabel>&nbsp;\n                            <InfoTooltipWithTrigger\n                              placement=\"top\"\n                              tooltip={t(\n                                'If a metric is specified, sorting will be done based on the metric value',\n                              )}\n                            />\n                          </>\n                        }\n                        data-test=\"field-input\"\n                      >\n                        <Select\n                          allowClear\n                          ariaLabel={t('Sort metric')}\n                          name=\"sortMetric\"\n                          options={metrics.map((metric: Metric) => ({\n                            value: metric.metric_name,\n                            label: metric.verbose_name ?? metric.metric_name,\n                          }))}\n                          onChange={value => {\n                            if (value !== undefined) {\n                              setNativeFilterFieldValues(form, filterId, {\n                                sortMetric: value,\n                              });\n                              forceUpdate();\n                            }\n                          }}\n                        />\n                      </StyledRowSubFormItem>\n                    )}\n                  </CollapsibleControl>\n                </CleanFormItem>\n              ) : (\n                <CleanFormItem name={['filters', filterId, 'rangeFilter']}>\n                  <CollapsibleControl\n                    initialValue={hasEnableSingleValue}\n                    title={t('Single Value')}\n                    onChange={checked => {\n                      onEnableSingleValueChanged(\n                        checked ? SingleValueType.Exact : undefined,\n                      );\n                      formChanged();\n                    }}\n                  >\n                    <StyledRowFormItem\n                      name={[\n                        'filters',\n                        filterId,\n                        'controlValues',\n                        'enableSingleValue',\n                      ]}\n                      initialValue={enableSingleValue}\n                      label={\n                        <StyledLabel>{t('Single value type')}</StyledLabel>\n                      }\n                    >\n                      <Radio.Group\n                        onChange={value =>\n                          onEnableSingleValueChanged(value.target.value)\n                        }\n                      >\n                        <Radio value={SingleValueType.Minimum}>\n                          {t('Minimum')}\n                        </Radio>\n                        <Radio value={SingleValueType.Exact}>\n                          {t('Exact')}\n                        </Radio>\n                        <Radio value={SingleValueType.Maximum}>\n                          {t('Maximum')}\n                        </Radio>\n                      </Radio.Group>\n                    </StyledRowFormItem>\n                  </CollapsibleControl>\n                </CleanFormItem>\n              )}\n            </Collapse.Panel>\n          )}\n          <Collapse.Panel\n            forceRender\n            header={FilterPanels.settings.name}\n            key={`${filterId}-${FilterPanels.settings.key}`}\n          >\n            <StyledFormItem\n              name={['filters', filterId, 'description']}\n              initialValue={filterToEdit?.description}\n              label={<StyledLabel>{t('Description')}</StyledLabel>}\n            >\n              <TextArea />\n            </StyledFormItem>\n            <CleanFormItem\n              name={['filters', filterId, 'defaultValueQueriesData']}\n              hidden\n              initialValue={null}\n            />\n            <CleanFormItem name={['filters', filterId, 'defaultValue']}>\n              <CollapsibleControl\n                checked={hasDefaultValue}\n                disabled={isRequired || defaultToFirstItem}\n                initialValue={hasDefaultValue}\n                title={t('Filter has default value')}\n                tooltip={defaultValueTooltip}\n                onChange={value => {\n                  setHasDefaultValue(value);\n                  if (!value) {\n                    setNativeFilterFieldValues(form, filterId, {\n                      defaultDataMask: null,\n                    });\n                  }\n                  formChanged();\n                }}\n              >\n                {!isRemoved && (\n                  <StyledRowSubFormItem\n                    name={['filters', filterId, 'defaultDataMask']}\n                    initialValue={initialDefaultValue}\n                    data-test=\"default-input\"\n                    label={<StyledLabel>{t('Default Value')}</StyledLabel>}\n                    required={hasDefaultValue}\n                    rules={[\n                      {\n                        validator: () => {\n                          if (formFilter?.defaultDataMask?.filterState?.value) {\n                            // requires managing the error as the DefaultValue\n                            // component does not use an Antdesign compatible input\n                            const formValidationFields = form.getFieldsError();\n                            setErroredFilters(prevErroredFilters => {\n                              if (\n                                prevErroredFilters.length &&\n                                !formValidationFields.find(\n                                  f => f.errors.length > 0,\n                                )\n                              ) {\n                                return [];\n                              }\n                              return prevErroredFilters;\n                            });\n                            return Promise.resolve();\n                          }\n                          setErroredFilters(prevErroredFilters => {\n                            if (prevErroredFilters.includes(filterId)) {\n                              return prevErroredFilters;\n                            }\n                            return [...prevErroredFilters, filterId];\n                          });\n                          return Promise.reject(\n                            new Error(t('Default value is required')),\n                          );\n                        },\n                      },\n                    ]}\n                  >\n                    {error || showDefaultValue ? (\n                      <DefaultValueContainer>\n                        {error ? (\n                          <ErrorMessageWithStackTrace\n                            error={error.errors?.[0]}\n                            fallback={\n                              <BasicErrorAlert\n                                title={t('Cannot load filter')}\n                                body={error.error}\n                                level=\"error\"\n                              />\n                            }\n                          />\n                        ) : (\n                          <DefaultValue\n                            setDataMask={dataMask => {\n                              if (\n                                !isEqual(\n                                  initialDefaultValue?.filterState?.value,\n                                  dataMask?.filterState?.value,\n                                )\n                              ) {\n                                formChanged();\n                              }\n                              setNativeFilterFieldValues(form, filterId, {\n                                defaultDataMask: dataMask,\n                              });\n                              form.validateFields([\n                                ['filters', filterId, 'defaultDataMask'],\n                              ]);\n                              forceUpdate();\n                            }}\n                            hasDefaultValue={hasDefaultValue}\n                            filterId={filterId}\n                            hasDataset={hasDataset}\n                            form={form}\n                            formData={newFormData}\n                            enableNoResults={enableNoResults}\n                          />\n                        )}\n                        {hasDataset && datasetId && (\n                          <Tooltip title={t('Refresh the default values')}>\n                            <RefreshIcon onClick={() => refreshHandler(true)} />\n                          </Tooltip>\n                        )}\n                      </DefaultValueContainer>\n                    ) : (\n                      t('Fill all required fields to enable \"Default Value\"')\n                    )}\n                  </StyledRowSubFormItem>\n                )}\n              </CollapsibleControl>\n            </CleanFormItem>\n            {Object.keys(controlItems)\n              .sort(\n                (a, b) =>\n                  controlsOrder.indexOf(a as ControlKey) -\n                  controlsOrder.indexOf(b as ControlKey),\n              )\n              .map(key => controlItems[key].element)}\n          </Collapse.Panel>\n        </StyledCollapse>\n      </TabPane>\n      <TabPane\n        tab={FilterTabs.scoping.name}\n        key={FilterTabs.scoping.key}\n        forceRender\n      >\n        <FilterScope\n          updateFormValues={updateFormValues}\n          pathToFormValue={['filters', filterId]}\n          forceUpdate={forceUpdate}\n          filterScope={filterToEdit?.scope}\n          formFilterScope={formFilter?.scope}\n          formScopingType={formFilter?.scoping}\n          initiallyExcludedCharts={initiallyExcludedCharts}\n        />\n      </TabPane>\n    </StyledTabs>\n  );\n};\n\nexport default React.memo(\n  forwardRef<typeof FiltersConfigForm, FiltersConfigFormProps>(\n    FiltersConfigForm,\n  ),\n);\n"]},"metadata":{},"sourceType":"module"}