{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { buildQueryContext, ensureIsArray, isPhysicalColumn } from '@superset-ui/core';\nimport { boxplotOperator } from '@superset-ui/chart-controls';\nexport default function buildQuery(formData) {\n  return buildQueryContext(formData, (baseQueryObject) => [\n  {\n    ...baseQueryObject,\n    columns: [\n    ...(ensureIsArray(formData.columns).length === 0 &&\n    formData.granularity_sqla ?\n    [formData.granularity_sqla] // for backwards compatible: if columns control is empty and granularity_sqla was set, the time columns is default distributed column.\n    : ensureIsArray(formData.columns)).map((col) => {var _formData$temporal_co;\n      if (isPhysicalColumn(col) &&\n      formData.time_grain_sqla &&\n      formData != null && (_formData$temporal_co = formData.temporal_columns_lookup) != null && _formData$temporal_co[col]) {\n        return {\n          timeGrain: formData.time_grain_sqla,\n          columnType: 'BASE_AXIS',\n          sqlExpression: col,\n          label: col,\n          expressionType: 'SQL' };\n\n      }\n      return col;\n    }),\n    ...ensureIsArray(formData.groupby)],\n\n    series_columns: formData.groupby,\n    post_processing: [boxplotOperator(formData, baseQueryObject)] }]);\n\n\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAEEA,iBAFF,EAGEC,aAHF,EAIEC,gBAJF,QAKO,mBALP;AAMA,SAASC,eAAT,QAAgC,6BAAhC;AAGA,eAAc,SAAUC,UAAV,CAAqBC,QAArB,EAAmD;EAC/D,OAAOL,iBAAiB,CAACK,QAAD,EAAW,gBAAe,KAAI;EACpD;IACE,GAAGC,eADL;IAEEC,OAAO,EAAE;IACP,GAAG,CAACN,aAAa,CAACI,QAAQ,CAACE,OAAV,CAAb,CAAgCC,MAAhC,KAA2C,CAA3C;IACJH,QAAQ,CAACI,gBADL;IAEA,CAACJ,QAAQ,CAACI,gBAAV,CAFA,CAE4B;IAF5B,EAGAR,aAAa,CAACI,QAAQ,CAACE,OAAV,CAHd,EAIDG,GAJC,CAIG,IAAG,KAAG;MACV,IACER,gBAAgB,CAACS,GAAD,CAAhB;MACAN,QAAQ,CAACO,eADT;MAEAP,QAFA,qCAEAA,QAAQ,CAAEQ,uBAFV,aAEA,sBAAoCF,GAApC,CAHF,EAIE;QACA,OAAO;UACLG,SAAS,EAAET,QAAQ,CAACO,eADf;UAELG,UAAU,EAAE,WAFP;UAGLC,aAAa,EAAEL,GAHV;UAILM,KAAK,EAAEN,GAJF;UAKLO,cAAc,EAAE,KALX,EAAP;;MAOD;MACD,OAAOP,GAAP;IACD,CAnBE,CADI;IAqBP,GAAGV,aAAa,CAACI,QAAQ,CAACc,OAAV,CArBT,CAFX;;IAyBEC,cAAc,EAAEf,QAAQ,CAACc,OAzB3B;IA0BEE,eAAe,EAAE,CAAClB,eAAe,CAACE,QAAD,EAAWC,eAAX,CAAhB,CA1BnB,EADoD,CAA9B,CAAxB;;;AA8BD","names":["buildQueryContext","ensureIsArray","isPhysicalColumn","boxplotOperator","buildQuery","formData","baseQueryObject","columns","length","granularity_sqla","map","col","time_grain_sqla","temporal_columns_lookup","timeGrain","columnType","sqlExpression","label","expressionType","groupby","series_columns","post_processing"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/BoxPlot/buildQuery.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  AdhocColumn,\n  buildQueryContext,\n  ensureIsArray,\n  isPhysicalColumn,\n} from '@superset-ui/core';\nimport { boxplotOperator } from '@superset-ui/chart-controls';\nimport { BoxPlotQueryFormData } from './types';\n\nexport default function buildQuery(formData: BoxPlotQueryFormData) {\n  return buildQueryContext(formData, baseQueryObject => [\n    {\n      ...baseQueryObject,\n      columns: [\n        ...(ensureIsArray(formData.columns).length === 0 &&\n        formData.granularity_sqla\n          ? [formData.granularity_sqla] // for backwards compatible: if columns control is empty and granularity_sqla was set, the time columns is default distributed column.\n          : ensureIsArray(formData.columns)\n        ).map(col => {\n          if (\n            isPhysicalColumn(col) &&\n            formData.time_grain_sqla &&\n            formData?.temporal_columns_lookup?.[col]\n          ) {\n            return {\n              timeGrain: formData.time_grain_sqla,\n              columnType: 'BASE_AXIS',\n              sqlExpression: col,\n              label: col,\n              expressionType: 'SQL',\n            } as AdhocColumn;\n          }\n          return col;\n        }),\n        ...ensureIsArray(formData.groupby),\n      ],\n      series_columns: formData.groupby,\n      post_processing: [boxplotOperator(formData, baseQueryObject)],\n    },\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}