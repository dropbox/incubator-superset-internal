{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, t } from '@superset-ui/core';\nimport AntdSelect from 'antd/lib/select';\nimport React from 'react';\nimport Icons from 'src/components/Icons';\nimport { StyledHelperText, StyledLoadingText, StyledSpin } from './styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst { Option } = AntdSelect;\nexport const SELECT_ALL_VALUE = 'Select All';\nexport const selectAllOption = {\n  value: SELECT_ALL_VALUE,\n  label: String(SELECT_ALL_VALUE) };\n\nexport function isObject(value) {\n  return value !== null &&\n  typeof value === 'object' &&\n  Array.isArray(value) === false;\n}\nexport function isLabeledValue(value) {\n  return isObject(value) && 'value' in value && 'label' in value;\n}\nexport function getValue(option) {\n  return isLabeledValue(option) ? option.value : option;\n}\nexport function hasOption(value, options, checkLabel) {if (checkLabel === void 0) {checkLabel = false;}\n  const optionsArray = ensureIsArray(options);\n  // When comparing the values we use the equality\n  // operator to automatically convert different types\n  return optionsArray.find((x) =>\n  // eslint-disable-next-line eqeqeq\n  x == value ||\n  isObject(x) && (\n  // eslint-disable-next-line eqeqeq\n  'value' in x && x.value == value ||\n  checkLabel && 'label' in x && x.label === value)) !== undefined;\n}\n/**\n * It creates a comparator to check for a specific property.\n * Can be used with string and number property values.\n * */\nexport const propertyComparator = (property) => (a, b) => {\n  if (typeof a[property] === 'string' && typeof b[property] === 'string') {\n    return a[property].localeCompare(b[property]);\n  }\n  return a[property] - b[property];\n};\nexport const sortSelectedFirstHelper = (a, b, selectValue) => selectValue && a.value !== undefined && b.value !== undefined ?\nNumber(hasOption(b.value, selectValue)) -\nNumber(hasOption(a.value, selectValue)) :\n0;\nexport const sortComparatorWithSearchHelper = (a, b, inputValue, sortCallback, sortComparator) => sortCallback(a, b) || sortComparator(a, b, inputValue);\nexport const sortComparatorForNoSearchHelper = (a, b, sortCallback, sortComparator) => sortCallback(a, b) || sortComparator(a, b, '');\n// use a function instead of component since every rerender of the\n// Select component will create a new component\nexport const getSuffixIcon = (isLoading, showSearch, isDropdownVisible) => {\n  if (isLoading) {\n    return ___EmotionJSX(StyledSpin, { size: \"small\" });\n  }\n  if (showSearch && isDropdownVisible) {\n    return ___EmotionJSX(Icons.SearchOutlined, { iconSize: \"s\" });\n  }\n  return ___EmotionJSX(Icons.DownOutlined, { iconSize: \"s\" });\n};\nexport const dropDownRenderHelper = (originNode, isDropdownVisible, isLoading, optionsLength, helperText, errorComponent) => {\n  if (!isDropdownVisible) {var _originNode$ref, _originNode$ref$curre;\n    (_originNode$ref = originNode.ref) == null ? void 0 : (_originNode$ref$curre = _originNode$ref.current) == null ? void 0 : _originNode$ref$curre.scrollTo({ top: 0 });\n  }\n  if (isLoading && optionsLength === 0) {\n    return ___EmotionJSX(StyledLoadingText, null, t('Loading...'));\n  }\n  if (errorComponent) {\n    return errorComponent;\n  }\n  return ___EmotionJSX(React.Fragment, null,\n  helperText && ___EmotionJSX(StyledHelperText, { role: \"note\" }, helperText),\n  originNode);\n\n};\nexport const handleFilterOptionHelper = (search, option, optionFilterProps, filterOption) => {\n  if (typeof filterOption === 'function') {\n    return filterOption(search, option);\n  }\n  if (filterOption) {\n    const searchValue = search.trim().toLowerCase();\n    if (optionFilterProps != null && optionFilterProps.length) {\n      return optionFilterProps.some((prop) => {\n        const optionProp = option != null && option[prop] ?\n        String(option[prop]).trim().toLowerCase() :\n        '';\n        return _includesInstanceProperty(optionProp).call(optionProp, searchValue);\n      });\n    }\n  }\n  return false;\n};\nexport const hasCustomLabels = (options) => options == null ? void 0 : options.some((opt) => !!(opt != null && opt.customLabel));\nexport const renderSelectOptions = (options) => options.map((opt) => {\n  const isOptObject = typeof opt === 'object';\n  const label = isOptObject ? (opt == null ? void 0 : opt.label) || opt.value : opt;\n  const value = isOptObject ? opt.value : opt;\n  const { customLabel, ...optProps } = opt;\n  return ___EmotionJSX(Option, _extends({}, optProps, { key: value, label: label, value: value }),\n  isOptObject && customLabel ? customLabel : label);\n\n});\nexport const mapValues = (values, labelInValue) => labelInValue ?\nvalues.map((opt) => ({\n  key: opt.value,\n  value: opt.value,\n  label: opt.label })) :\n\nvalues.map((opt) => opt.value);\nexport const mapOptions = (values) => values.map((opt) => ({\n  children: opt.label,\n  key: opt.value,\n  value: opt.value,\n  label: opt.label,\n  disabled: opt.disabled }));","map":{"version":3,"mappings":"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","names":["ensureIsArray","t","AntdSelect","React","Icons","StyledHelperText","StyledLoadingText","StyledSpin","Option","SELECT_ALL_VALUE","selectAllOption","value","label","String","isObject","Array","isArray","isLabeledValue","getValue","option","hasOption","options","checkLabel","optionsArray","find","x","undefined","propertyComparator","property","a","b","localeCompare","sortSelectedFirstHelper","selectValue","Number","sortComparatorWithSearchHelper","inputValue","sortCallback","sortComparator","sortComparatorForNoSearchHelper","getSuffixIcon","isLoading","showSearch","isDropdownVisible","dropDownRenderHelper","originNode","optionsLength","helperText","errorComponent","ref","current","scrollTo","top","handleFilterOptionHelper","search","optionFilterProps","filterOption","searchValue","trim","toLowerCase","length","some","optionProp","prop","hasCustomLabels","opt","customLabel","renderSelectOptions","map","isOptObject","optProps","mapValues","values","labelInValue","key","mapOptions","children","disabled"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Select/utils.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, t } from '@superset-ui/core';\nimport AntdSelect, { LabeledValue as AntdLabeledValue } from 'antd/lib/select';\nimport React, { ReactElement, RefObject } from 'react';\nimport Icons from 'src/components/Icons';\nimport { StyledHelperText, StyledLoadingText, StyledSpin } from './styles';\nimport { LabeledValue, RawValue, SelectOptionsType, V } from './types';\n\nconst { Option } = AntdSelect;\n\nexport const SELECT_ALL_VALUE: RawValue = 'Select All';\nexport const selectAllOption = {\n  value: SELECT_ALL_VALUE,\n  label: String(SELECT_ALL_VALUE),\n};\n\nexport function isObject(value: unknown): value is Record<string, unknown> {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    Array.isArray(value) === false\n  );\n}\n\nexport function isLabeledValue(value: unknown): value is AntdLabeledValue {\n  return isObject(value) && 'value' in value && 'label' in value;\n}\n\nexport function getValue(\n  option: string | number | AntdLabeledValue | null | undefined,\n) {\n  return isLabeledValue(option) ? option.value : option;\n}\n\nexport function hasOption(\n  value: V,\n  options?: V | LabeledValue | (V | LabeledValue)[],\n  checkLabel = false,\n): boolean {\n  const optionsArray = ensureIsArray(options);\n  // When comparing the values we use the equality\n  // operator to automatically convert different types\n  return (\n    optionsArray.find(\n      x =>\n        // eslint-disable-next-line eqeqeq\n        x == value ||\n        (isObject(x) &&\n          // eslint-disable-next-line eqeqeq\n          (('value' in x && x.value == value) ||\n            (checkLabel && 'label' in x && x.label === value))),\n    ) !== undefined\n  );\n}\n\n/**\n * It creates a comparator to check for a specific property.\n * Can be used with string and number property values.\n * */\nexport const propertyComparator =\n  (property: string) => (a: AntdLabeledValue, b: AntdLabeledValue) => {\n    if (typeof a[property] === 'string' && typeof b[property] === 'string') {\n      return a[property].localeCompare(b[property]);\n    }\n    return (a[property] as number) - (b[property] as number);\n  };\n\nexport const sortSelectedFirstHelper = (\n  a: AntdLabeledValue,\n  b: AntdLabeledValue,\n  selectValue:\n    | string\n    | number\n    | RawValue[]\n    | AntdLabeledValue\n    | AntdLabeledValue[]\n    | undefined,\n) =>\n  selectValue && a.value !== undefined && b.value !== undefined\n    ? Number(hasOption(b.value, selectValue)) -\n      Number(hasOption(a.value, selectValue))\n    : 0;\n\nexport const sortComparatorWithSearchHelper = (\n  a: AntdLabeledValue,\n  b: AntdLabeledValue,\n  inputValue: string,\n  sortCallback: (a: AntdLabeledValue, b: AntdLabeledValue) => number,\n  sortComparator: (\n    a: AntdLabeledValue,\n    b: AntdLabeledValue,\n    search?: string | undefined,\n  ) => number,\n) => sortCallback(a, b) || sortComparator(a, b, inputValue);\n\nexport const sortComparatorForNoSearchHelper = (\n  a: AntdLabeledValue,\n  b: AntdLabeledValue,\n  sortCallback: (a: AntdLabeledValue, b: AntdLabeledValue) => number,\n  sortComparator: (\n    a: AntdLabeledValue,\n    b: AntdLabeledValue,\n    search?: string | undefined,\n  ) => number,\n) => sortCallback(a, b) || sortComparator(a, b, '');\n\n// use a function instead of component since every rerender of the\n// Select component will create a new component\nexport const getSuffixIcon = (\n  isLoading: boolean | undefined,\n  showSearch: boolean,\n  isDropdownVisible: boolean,\n) => {\n  if (isLoading) {\n    return <StyledSpin size=\"small\" />;\n  }\n  if (showSearch && isDropdownVisible) {\n    return <Icons.SearchOutlined iconSize=\"s\" />;\n  }\n  return <Icons.DownOutlined iconSize=\"s\" />;\n};\n\nexport const dropDownRenderHelper = (\n  originNode: ReactElement & { ref?: RefObject<HTMLElement> },\n  isDropdownVisible: boolean,\n  isLoading: boolean | undefined,\n  optionsLength: number,\n  helperText: string | undefined,\n  errorComponent?: JSX.Element,\n) => {\n  if (!isDropdownVisible) {\n    originNode.ref?.current?.scrollTo({ top: 0 });\n  }\n  if (isLoading && optionsLength === 0) {\n    return <StyledLoadingText>{t('Loading...')}</StyledLoadingText>;\n  }\n  if (errorComponent) {\n    return errorComponent;\n  }\n  return (\n    <>\n      {helperText && (\n        <StyledHelperText role=\"note\">{helperText}</StyledHelperText>\n      )}\n      {originNode}\n    </>\n  );\n};\n\nexport const handleFilterOptionHelper = (\n  search: string,\n  option: AntdLabeledValue,\n  optionFilterProps: string[],\n  filterOption: boolean | Function,\n) => {\n  if (typeof filterOption === 'function') {\n    return filterOption(search, option);\n  }\n\n  if (filterOption) {\n    const searchValue = search.trim().toLowerCase();\n    if (optionFilterProps?.length) {\n      return optionFilterProps.some(prop => {\n        const optionProp = option?.[prop]\n          ? String(option[prop]).trim().toLowerCase()\n          : '';\n        return optionProp.includes(searchValue);\n      });\n    }\n  }\n\n  return false;\n};\n\nexport const hasCustomLabels = (options: SelectOptionsType) =>\n  options?.some(opt => !!opt?.customLabel);\n\nexport const renderSelectOptions = (options: SelectOptionsType) =>\n  options.map(opt => {\n    const isOptObject = typeof opt === 'object';\n    const label = isOptObject ? opt?.label || opt.value : opt;\n    const value = isOptObject ? opt.value : opt;\n    const { customLabel, ...optProps } = opt;\n    return (\n      <Option {...optProps} key={value} label={label} value={value}>\n        {isOptObject && customLabel ? customLabel : label}\n      </Option>\n    );\n  });\n\nexport const mapValues = (values: SelectOptionsType, labelInValue: boolean) =>\n  labelInValue\n    ? values.map(opt => ({\n        key: opt.value,\n        value: opt.value,\n        label: opt.label,\n      }))\n    : values.map(opt => opt.value);\n\nexport const mapOptions = (values: SelectOptionsType) =>\n  values.map(opt => ({\n    children: opt.label,\n    key: opt.value,\n    value: opt.value,\n    label: opt.label,\n    disabled: opt.disabled,\n  }));\n"]},"metadata":{},"sourceType":"module"}