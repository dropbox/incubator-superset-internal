{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { forwardRef } from 'react';\nimport { css, styled, useTheme } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\n// This is the color that antd components (such as Select or Input) use on hover\n// TODO: use theme.colors.primary.base here and in antd components\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";const ACTIVE_BORDER_COLOR = '#45BED6';\nconst LabelContainer = styled.div`\n  ${(_ref) => {let { theme, isActive, isPlaceholder } = _ref;return css`\n    width: 100%;\n    height: ${theme.gridUnit * 8}px;\n\n    display: flex;\n    align-items: center;\n    flex-wrap: nowrap;\n\n    padding: 0 ${theme.gridUnit * 3}px;\n\n    background-color: ${theme.colors.grayscale.light5};\n\n    border: 1px solid\n      ${isActive ? ACTIVE_BORDER_COLOR : theme.colors.grayscale.light2};\n    border-radius: ${theme.borderRadius}px;\n\n    cursor: pointer;\n\n    transition: border-color 0.3s cubic-bezier(0.65, 0.05, 0.36, 1);\n    :hover,\n    :focus {\n      border-color: ${ACTIVE_BORDER_COLOR};\n    }\n\n    .date-label-content {\n      color: ${isPlaceholder ?\n  theme.colors.grayscale.light1 :\n  theme.colors.grayscale.dark1};\n      overflow: hidden;\n      text-overflow: ellipsis;\n      min-width: 0;\n      flex-shrink: 1;\n      white-space: nowrap;\n    }\n\n    span[role='img'] {\n      margin-left: auto;\n      padding-left: ${theme.gridUnit}px;\n\n      & > span[role='img'] {\n        line-height: 0;\n      }\n    }\n  `;}}\n`;\nexport const DateLabel = /*#__PURE__*/forwardRef((props, ref) => {\n  const theme = useTheme();\n  return ___EmotionJSX(LabelContainer, _extends({}, props, { tabIndex: 0 }),\n  ___EmotionJSX(\"span\", { className: \"date-label-content\", ref: ref },\n  props.label),\n\n  ___EmotionJSX(Icons.CalendarOutlined, { iconSize: \"s\", iconColor: theme.colors.grayscale.base }));\n\n});","map":{"version":3,"mappings":"+DAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,KAAP,IAAgBC,UAAhB,QAAwD,OAAxD;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,QAAtB,QAAsC,mBAAtC;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AASA;AACA;sDACA,MAAMC,mBAAmB,GAAG,SAA5B;AAEA,MAAMC,cAAc,GAAGJ,MAAM,CAACK,GAG5B;IACE,eAAC,EAAEC,KAAF,EAASC,QAAT,EAAmBC,aAAnB,EAAD,eAAwCT,GAAG;;cAEjCO,KAAK,CAACG,QAAN,GAAiB,CAAC;;;;;;iBAMfH,KAAK,CAACG,QAAN,GAAiB,CAAC;;wBAEXH,KAAK,CAACI,MAAN,CAAaC,SAAb,CAAuBC,MAAM;;;QAG7CL,QAAQ,GAAGJ,mBAAH,GAAyBG,KAAK,CAACI,MAAN,CAAaC,SAAb,CAAuBE,MAAM;qBACjDP,KAAK,CAACQ,YAAY;;;;;;;sBAOjBX,mBAAmB;;;;eAI1BK,aAAa;EAClBF,KAAK,CAACI,MAAN,CAAaC,SAAb,CAAuBI,MADL;EAElBT,KAAK,CAACI,MAAN,CAAaC,SAAb,CAAuBK,KAAK;;;;;;;;;;sBAUhBV,KAAK,CAACG,QAAQ;;;;;;GArChC,EA2CD;CA/CH;AAkDA,OAAO,MAAMQ,SAAS,gBAAGnB,UAAU,CACjC,CAACoB,KAAD,EAAwBC,GAAxB,KAA2D;EACzD,MAAMb,KAAK,GAAGL,QAAQ,EAAtB;EACA,OACE,cAAC,cAAD,eAAoBiB,KAApB,IAA2B,QAAQ,EAAE,CAArC;EACE,wBAAM,SAAS,EAAC,oBAAhB,EAAqC,GAAG,EAAEC,GAA1C;EACGD,KAAK,CAACE,KADT,CADF;;EAIE,cAAC,KAAD,CAAO,gBAAP,IACE,QAAQ,EAAC,GADX,EAEE,SAAS,EAAEd,KAAK,CAACI,MAAN,CAAaC,SAAb,CAAuBU,IAFpC,GAJF,CADF;;AAWD,CAdgC,CAA5B","names":["React","forwardRef","css","styled","useTheme","Icons","ACTIVE_BORDER_COLOR","LabelContainer","div","theme","isActive","isPlaceholder","gridUnit","colors","grayscale","light5","light2","borderRadius","light1","dark1","DateLabel","props","ref","label","base"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/DateFilterControl/components/DateLabel.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { forwardRef, ReactNode, RefObject } from 'react';\nimport { css, styled, useTheme } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\n\nexport type DateLabelProps = {\n  label: ReactNode;\n  isActive?: boolean;\n  isPlaceholder?: boolean;\n  onClick?: (event: React.MouseEvent) => void;\n};\n\n// This is the color that antd components (such as Select or Input) use on hover\n// TODO: use theme.colors.primary.base here and in antd components\nconst ACTIVE_BORDER_COLOR = '#45BED6';\n\nconst LabelContainer = styled.div<{\n  isActive?: boolean;\n  isPlaceholder?: boolean;\n}>`\n  ${({ theme, isActive, isPlaceholder }) => css`\n    width: 100%;\n    height: ${theme.gridUnit * 8}px;\n\n    display: flex;\n    align-items: center;\n    flex-wrap: nowrap;\n\n    padding: 0 ${theme.gridUnit * 3}px;\n\n    background-color: ${theme.colors.grayscale.light5};\n\n    border: 1px solid\n      ${isActive ? ACTIVE_BORDER_COLOR : theme.colors.grayscale.light2};\n    border-radius: ${theme.borderRadius}px;\n\n    cursor: pointer;\n\n    transition: border-color 0.3s cubic-bezier(0.65, 0.05, 0.36, 1);\n    :hover,\n    :focus {\n      border-color: ${ACTIVE_BORDER_COLOR};\n    }\n\n    .date-label-content {\n      color: ${isPlaceholder\n        ? theme.colors.grayscale.light1\n        : theme.colors.grayscale.dark1};\n      overflow: hidden;\n      text-overflow: ellipsis;\n      min-width: 0;\n      flex-shrink: 1;\n      white-space: nowrap;\n    }\n\n    span[role='img'] {\n      margin-left: auto;\n      padding-left: ${theme.gridUnit}px;\n\n      & > span[role='img'] {\n        line-height: 0;\n      }\n    }\n  `}\n`;\n\nexport const DateLabel = forwardRef(\n  (props: DateLabelProps, ref: RefObject<HTMLSpanElement>) => {\n    const theme = useTheme();\n    return (\n      <LabelContainer {...props} tabIndex={0}>\n        <span className=\"date-label-content\" ref={ref}>\n          {props.label}\n        </span>\n        <Icons.CalendarOutlined\n          iconSize=\"s\"\n          iconColor={theme.colors.grayscale.base}\n        />\n      </LabelContainer>\n    );\n  },\n);\n"]},"metadata":{},"sourceType":"module"}