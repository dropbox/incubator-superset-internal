{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { ControlSubSectionHeader, D3_FORMAT_DOCS, D3_FORMAT_OPTIONS, D3_TIME_FORMAT_OPTIONS, sections, getStandardizedControls } from '@superset-ui/chart-controls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst config = {\n  controlPanelSections: [\n  sections.legacyTimeseriesTime,\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    ['metrics'],\n    ['adhoc_filters'],\n    ['groupby'],\n    ['limit', 'timeseries_limit_metric'],\n    ['order_desc'],\n    [\n    {\n      name: 'contribution',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Contribution'),\n        default: false,\n        description: t('Compute the contribution to the total') } }],\n\n\n\n    ['row_limit', null]] },\n\n\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [\n    ['color_scheme'],\n    [\n    {\n      name: 'number_format',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Number format'),\n        renderTrigger: true,\n        default: 'SMART_NUMBER',\n        choices: D3_FORMAT_OPTIONS,\n        description: D3_FORMAT_DOCS } },\n\n\n    {\n      name: 'date_time_format',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Date Time Format'),\n        renderTrigger: true,\n        default: 'smart_date',\n        choices: D3_TIME_FORMAT_OPTIONS,\n        description: D3_FORMAT_DOCS } }],\n\n\n\n    [\n    {\n      name: 'rich_tooltip',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Rich Tooltip'),\n        renderTrigger: true,\n        default: true,\n        description: t('The rich tooltip shows a list of all series for that point in time') } },\n\n\n    {\n      name: 'rose_area_proportion',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Use Area Proportions'),\n        description: t('Check if the Rose Chart should use segment area instead of ' +\n        'segment radius for proportioning'),\n        default: false,\n        renderTrigger: true } }]] },\n\n\n\n\n\n  {\n    label: t('Advanced Analytics'),\n    tabOverride: 'data',\n    description: t('This section contains options ' +\n    'that allow for advanced analytical post processing ' +\n    'of query results'),\n    controlSetRows: [\n    // eslint-disable-next-line react/jsx-key\n    [\n    ___EmotionJSX(ControlSubSectionHeader, null,\n    t('Rolling Window'))],\n\n\n    [\n    {\n      name: 'rolling_type',\n      config: {\n        type: 'SelectControl',\n        label: t('Rolling Function'),\n        default: 'None',\n        choices: [\n        ['None', t('None')],\n        ['mean', t('mean')],\n        ['sum', t('sum')],\n        ['std', t('std')],\n        ['cumsum', t('cumsum')]],\n\n        description: t('Defines a rolling window function to apply, works along ' +\n        'with the [Periods] text box') } }],\n\n\n\n    [\n    {\n      name: 'rolling_periods',\n      config: {\n        type: 'TextControl',\n        label: t('Periods'),\n        isInt: true,\n        description: t('Defines the size of the rolling window function, ' +\n        'relative to the time granularity selected') } },\n\n\n    {\n      name: 'min_periods',\n      config: {\n        type: 'TextControl',\n        label: t('Min Periods'),\n        isInt: true,\n        description: t('The minimum number of rolling periods required to show ' +\n        'a value. For instance if you do a cumulative sum on 7 days ' +\n        'you may want your \"Min Period\" to be 7, so that all data points ' +\n        'shown are the total of 7 periods. This will hide the \"ramp up\" ' +\n        'taking place over the first 7 periods') } }],\n\n\n\n    // eslint-disable-next-line react/jsx-key\n    [\n    ___EmotionJSX(ControlSubSectionHeader, null,\n    t('Time Comparison'))],\n\n\n    [\n    {\n      name: 'time_compare',\n      config: {\n        type: 'SelectControl',\n        multi: true,\n        freeForm: true,\n        label: t('Time Shift'),\n        choices: [\n        ['1 day', t('1 day')],\n        ['1 week', t('1 week')],\n        ['28 days', t('28 days')],\n        ['30 days', t('30 days')],\n        ['52 weeks', t('52 weeks')],\n        ['1 year', t('1 year')],\n        ['104 weeks', t('104 weeks')],\n        ['2 years', t('2 years')],\n        ['156 weeks', t('156 weeks')],\n        ['3 years', t('3 years')]],\n\n        description: t('Overlay one or more timeseries from a ' +\n        'relative time period. Expects relative time deltas ' +\n        'in natural language (example:  24 hours, 7 days, ' +\n        '52 weeks, 365 days). Free text is supported.') } },\n\n\n    {\n      name: 'comparison_type',\n      config: {\n        type: 'SelectControl',\n        label: t('Calculation type'),\n        default: 'values',\n        choices: [\n        ['values', t('Actual Values')],\n        ['absolute', t('Difference')],\n        ['percentage', t('Percentage change')],\n        ['ratio', t('Ratio')]],\n\n        description: t('How to display time shifts: as individual lines; as the ' +\n        'difference between the main time series and each time shift; ' +\n        'as the percentage change; or as the ratio between series and time shifts.') } }],\n\n\n\n    [___EmotionJSX(ControlSubSectionHeader, null, t('Resample'))],\n    [\n    {\n      name: 'resample_rule',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Rule'),\n        default: null,\n        choices: [\n        ['1T', t('1T')],\n        ['1H', t('1H')],\n        ['1D', t('1D')],\n        ['7D', t('7D')],\n        ['1M', t('1M')],\n        ['1AS', t('1AS')]],\n\n        description: t('Pandas resample rule') } },\n\n\n    {\n      name: 'resample_method',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Method'),\n        default: null,\n        choices: [\n        ['asfreq', t('asfreq')],\n        ['bfill', t('bfill')],\n        ['ffill', t('ffill')],\n        ['median', t('median')],\n        ['mean', t('mean')],\n        ['sum', t('sum')]],\n\n        description: t('Pandas resample method') } }]] }],\n\n\n\n\n\n\n  formDataOverrides: (formData) => ({\n    ...formData,\n    groupby: getStandardizedControls().popAllColumns(),\n    metrics: getStandardizedControls().popAllMetrics() }) };\n\n\nexport default config;","map":{"version":3,"mappings":"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","names":["React","t","ControlSubSectionHeader","D3_FORMAT_DOCS","D3_FORMAT_OPTIONS","D3_TIME_FORMAT_OPTIONS","sections","getStandardizedControls","config","controlPanelSections","legacyTimeseriesTime","label","expanded","controlSetRows","name","type","default","description","freeForm","renderTrigger","choices","tabOverride","isInt","multi","formDataOverrides","formData","groupby","popAllColumns","metrics","popAllMetrics"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/legacy-plugin-chart-rose/src/controlPanel.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  ControlSubSectionHeader,\n  D3_FORMAT_DOCS,\n  D3_FORMAT_OPTIONS,\n  D3_TIME_FORMAT_OPTIONS,\n  sections,\n  getStandardizedControls,\n} from '@superset-ui/chart-controls';\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.legacyTimeseriesTime,\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        ['metrics'],\n        ['adhoc_filters'],\n        ['groupby'],\n        ['limit', 'timeseries_limit_metric'],\n        ['order_desc'],\n        [\n          {\n            name: 'contribution',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Contribution'),\n              default: false,\n              description: t('Compute the contribution to the total'),\n            },\n          },\n        ],\n        ['row_limit', null],\n      ],\n    },\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        ['color_scheme'],\n        [\n          {\n            name: 'number_format',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Number format'),\n              renderTrigger: true,\n              default: 'SMART_NUMBER',\n              choices: D3_FORMAT_OPTIONS,\n              description: D3_FORMAT_DOCS,\n            },\n          },\n          {\n            name: 'date_time_format',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Date Time Format'),\n              renderTrigger: true,\n              default: 'smart_date',\n              choices: D3_TIME_FORMAT_OPTIONS,\n              description: D3_FORMAT_DOCS,\n            },\n          },\n        ],\n        [\n          {\n            name: 'rich_tooltip',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Rich Tooltip'),\n              renderTrigger: true,\n              default: true,\n              description: t(\n                'The rich tooltip shows a list of all series for that point in time',\n              ),\n            },\n          },\n          {\n            name: 'rose_area_proportion',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Use Area Proportions'),\n              description: t(\n                'Check if the Rose Chart should use segment area instead of ' +\n                  'segment radius for proportioning',\n              ),\n              default: false,\n              renderTrigger: true,\n            },\n          },\n        ],\n      ],\n    },\n    {\n      label: t('Advanced Analytics'),\n      tabOverride: 'data',\n      description: t(\n        'This section contains options ' +\n          'that allow for advanced analytical post processing ' +\n          'of query results',\n      ),\n      controlSetRows: [\n        // eslint-disable-next-line react/jsx-key\n        [\n          <ControlSubSectionHeader>\n            {t('Rolling Window')}\n          </ControlSubSectionHeader>,\n        ],\n        [\n          {\n            name: 'rolling_type',\n            config: {\n              type: 'SelectControl',\n              label: t('Rolling Function'),\n              default: 'None',\n              choices: [\n                ['None', t('None')],\n                ['mean', t('mean')],\n                ['sum', t('sum')],\n                ['std', t('std')],\n                ['cumsum', t('cumsum')],\n              ],\n              description: t(\n                'Defines a rolling window function to apply, works along ' +\n                  'with the [Periods] text box',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'rolling_periods',\n            config: {\n              type: 'TextControl',\n              label: t('Periods'),\n              isInt: true,\n              description: t(\n                'Defines the size of the rolling window function, ' +\n                  'relative to the time granularity selected',\n              ),\n            },\n          },\n          {\n            name: 'min_periods',\n            config: {\n              type: 'TextControl',\n              label: t('Min Periods'),\n              isInt: true,\n              description: t(\n                'The minimum number of rolling periods required to show ' +\n                  'a value. For instance if you do a cumulative sum on 7 days ' +\n                  'you may want your \"Min Period\" to be 7, so that all data points ' +\n                  'shown are the total of 7 periods. This will hide the \"ramp up\" ' +\n                  'taking place over the first 7 periods',\n              ),\n            },\n          },\n        ],\n        // eslint-disable-next-line react/jsx-key\n        [\n          <ControlSubSectionHeader>\n            {t('Time Comparison')}\n          </ControlSubSectionHeader>,\n        ],\n        [\n          {\n            name: 'time_compare',\n            config: {\n              type: 'SelectControl',\n              multi: true,\n              freeForm: true,\n              label: t('Time Shift'),\n              choices: [\n                ['1 day', t('1 day')],\n                ['1 week', t('1 week')],\n                ['28 days', t('28 days')],\n                ['30 days', t('30 days')],\n                ['52 weeks', t('52 weeks')],\n                ['1 year', t('1 year')],\n                ['104 weeks', t('104 weeks')],\n                ['2 years', t('2 years')],\n                ['156 weeks', t('156 weeks')],\n                ['3 years', t('3 years')],\n              ],\n              description: t(\n                'Overlay one or more timeseries from a ' +\n                  'relative time period. Expects relative time deltas ' +\n                  'in natural language (example:  24 hours, 7 days, ' +\n                  '52 weeks, 365 days). Free text is supported.',\n              ),\n            },\n          },\n          {\n            name: 'comparison_type',\n            config: {\n              type: 'SelectControl',\n              label: t('Calculation type'),\n              default: 'values',\n              choices: [\n                ['values', t('Actual Values')],\n                ['absolute', t('Difference')],\n                ['percentage', t('Percentage change')],\n                ['ratio', t('Ratio')],\n              ],\n              description: t(\n                'How to display time shifts: as individual lines; as the ' +\n                  'difference between the main time series and each time shift; ' +\n                  'as the percentage change; or as the ratio between series and time shifts.',\n              ),\n            },\n          },\n        ],\n        [<ControlSubSectionHeader>{t('Resample')}</ControlSubSectionHeader>],\n        [\n          {\n            name: 'resample_rule',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Rule'),\n              default: null,\n              choices: [\n                ['1T', t('1T')],\n                ['1H', t('1H')],\n                ['1D', t('1D')],\n                ['7D', t('7D')],\n                ['1M', t('1M')],\n                ['1AS', t('1AS')],\n              ],\n              description: t('Pandas resample rule'),\n            },\n          },\n          {\n            name: 'resample_method',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Method'),\n              default: null,\n              choices: [\n                ['asfreq', t('asfreq')],\n                ['bfill', t('bfill')],\n                ['ffill', t('ffill')],\n                ['median', t('median')],\n                ['mean', t('mean')],\n                ['sum', t('sum')],\n              ],\n              description: t('Pandas resample method'),\n            },\n          },\n        ],\n      ],\n    },\n  ],\n  formDataOverrides: formData => ({\n    ...formData,\n    groupby: getStandardizedControls().popAllColumns(),\n    metrics: getStandardizedControls().popAllMetrics(),\n  }),\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}