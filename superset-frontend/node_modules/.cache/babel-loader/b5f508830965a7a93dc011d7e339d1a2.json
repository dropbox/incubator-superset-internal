{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\nimport {\nADD_SLICE,\nON_CHANGE,\nON_SAVE,\nREMOVE_SLICE,\nSET_COLOR_SCHEME,\nSET_EDIT_MODE,\nSET_MAX_UNDO_HISTORY_EXCEEDED,\nSET_UNSAVED_CHANGES,\nSHOW_BUILDER_PANE,\nTOGGLE_EXPAND_SLICE,\nTOGGLE_FAVE_STAR,\nTOGGLE_PUBLISHED,\nUPDATE_CSS,\nSET_REFRESH_FREQUENCY,\nON_REFRESH,\nON_REFRESH_SUCCESS,\nSET_DIRECT_PATH,\nSET_FOCUSED_FILTER_FIELD,\nUNSET_FOCUSED_FILTER_FIELD,\nSET_ACTIVE_TABS,\nSET_FULL_SIZE_CHART_ID,\nON_FILTERS_REFRESH,\nON_FILTERS_REFRESH_SUCCESS,\nSET_DATASETS_STATUS,\nSET_OVERRIDE_CONFIRM,\nSAVE_DASHBOARD_STARTED,\nSAVE_DASHBOARD_FINISHED } from\n'../actions/dashboardState';\nimport { HYDRATE_DASHBOARD } from '../actions/hydrate';\n\nexport default function dashboardStateReducer(state, action) {if (state === void 0) {state = {};}\n  const actionHandlers = {\n    [HYDRATE_DASHBOARD]() {\n      return { ...state, ...action.data.dashboardState };\n    },\n    [UPDATE_CSS]() {\n      return { ...state, css: action.css };\n    },\n    [ADD_SLICE]() {\n      const updatedSliceIds = new Set(state.sliceIds);\n      updatedSliceIds.add(action.slice.slice_id);\n      return {\n        ...state,\n        sliceIds: Array.from(updatedSliceIds) };\n\n    },\n    [REMOVE_SLICE]() {\n      const { sliceId } = action;\n      const updatedSliceIds = new Set(state.sliceIds);\n      updatedSliceIds.delete(sliceId);\n\n      return {\n        ...state,\n        sliceIds: Array.from(updatedSliceIds) };\n\n    },\n    [TOGGLE_FAVE_STAR]() {\n      return { ...state, isStarred: action.isStarred };\n    },\n    [TOGGLE_PUBLISHED]() {\n      return { ...state, isPublished: action.isPublished };\n    },\n    [SET_EDIT_MODE]() {\n      return {\n        ...state,\n        editMode: action.editMode };\n\n    },\n    [SET_MAX_UNDO_HISTORY_EXCEEDED]() {\n      const { maxUndoHistoryExceeded = true } = action.payload;\n      return { ...state, maxUndoHistoryExceeded };\n    },\n    [SHOW_BUILDER_PANE]() {\n      return { ...state };\n    },\n    [SET_COLOR_SCHEME]() {\n      return {\n        ...state,\n        colorScheme: action.colorScheme,\n        updatedColorScheme: true };\n\n    },\n    [TOGGLE_EXPAND_SLICE]() {\n      const updatedExpandedSlices = { ...state.expandedSlices };\n      const { sliceId } = action;\n      if (updatedExpandedSlices[sliceId]) {\n        delete updatedExpandedSlices[sliceId];\n      } else {\n        updatedExpandedSlices[sliceId] = true;\n      }\n      return { ...state, expandedSlices: updatedExpandedSlices };\n    },\n    [ON_CHANGE]() {\n      return { ...state, hasUnsavedChanges: true };\n    },\n    [SAVE_DASHBOARD_STARTED]() {\n      return {\n        ...state,\n        dashboardIsSaving: true };\n\n    },\n    [SAVE_DASHBOARD_FINISHED]() {\n      return {\n        ...state,\n        dashboardIsSaving: false };\n\n    },\n    [ON_SAVE]() {\n      return {\n        ...state,\n        hasUnsavedChanges: false,\n        maxUndoHistoryExceeded: false,\n        editMode: false,\n        updatedColorScheme: false,\n        // server-side returns last_modified_time for latest change\n        lastModifiedTime: action.lastModifiedTime };\n\n    },\n    [SET_UNSAVED_CHANGES]() {\n      const { hasUnsavedChanges } = action.payload;\n      return { ...state, hasUnsavedChanges };\n    },\n    [SET_REFRESH_FREQUENCY]() {\n      return {\n        ...state,\n        refreshFrequency: action.refreshFrequency,\n        shouldPersistRefreshFrequency: action.isPersistent,\n        hasUnsavedChanges: action.isPersistent };\n\n    },\n    [ON_REFRESH]() {\n      return {\n        ...state,\n        isRefreshing: true };\n\n    },\n    [ON_FILTERS_REFRESH]() {\n      return {\n        ...state,\n        isFiltersRefreshing: true };\n\n    },\n    [ON_FILTERS_REFRESH_SUCCESS]() {\n      return {\n        ...state,\n        isFiltersRefreshing: false };\n\n    },\n    [ON_REFRESH_SUCCESS]() {\n      return {\n        ...state,\n        isRefreshing: false };\n\n    },\n    [SET_DIRECT_PATH]() {\n      return {\n        ...state,\n        directPathToChild: action.path,\n        directPathLastUpdated: Date.now() };\n\n    },\n    [SET_ACTIVE_TABS]() {\n      const newActiveTabs = new Set(state.activeTabs);\n      newActiveTabs.delete(action.prevTabId);\n      newActiveTabs.add(action.tabId);\n      return {\n        ...state,\n        activeTabs: Array.from(newActiveTabs) };\n\n    },\n    [SET_OVERRIDE_CONFIRM]() {\n      return {\n        ...state,\n        overwriteConfirmMetadata: action.overwriteConfirmMetadata };\n\n    },\n    [SET_FOCUSED_FILTER_FIELD]() {\n      return {\n        ...state,\n        focusedFilterField: {\n          chartId: action.chartId,\n          column: action.column } };\n\n\n    },\n    [UNSET_FOCUSED_FILTER_FIELD]() {\n      // dashboard only has 1 focused filter field at a time,\n      // but when user switch different filter boxes,\n      // browser didn't always fire onBlur and onFocus events in order.\n      if (\n      !state.focusedFilterField ||\n      action.chartId !== state.focusedFilterField.chartId ||\n      action.column !== state.focusedFilterField.column)\n      {\n        return state;\n      }\n      return {\n        ...state,\n        focusedFilterField: null };\n\n    },\n    [SET_FULL_SIZE_CHART_ID]() {\n      return {\n        ...state,\n        fullSizeChartId: action.chartId };\n\n    },\n    [SET_DATASETS_STATUS]() {\n      return {\n        ...state,\n        datasetsStatus: action.status };\n\n    } };\n\n\n  if (action.type in actionHandlers) {\n    return actionHandlers[action.type]();\n  }\n  return state;\n}","map":{"version":3,"names":["ADD_SLICE","ON_CHANGE","ON_SAVE","REMOVE_SLICE","SET_COLOR_SCHEME","SET_EDIT_MODE","SET_MAX_UNDO_HISTORY_EXCEEDED","SET_UNSAVED_CHANGES","SHOW_BUILDER_PANE","TOGGLE_EXPAND_SLICE","TOGGLE_FAVE_STAR","TOGGLE_PUBLISHED","UPDATE_CSS","SET_REFRESH_FREQUENCY","ON_REFRESH","ON_REFRESH_SUCCESS","SET_DIRECT_PATH","SET_FOCUSED_FILTER_FIELD","UNSET_FOCUSED_FILTER_FIELD","SET_ACTIVE_TABS","SET_FULL_SIZE_CHART_ID","ON_FILTERS_REFRESH","ON_FILTERS_REFRESH_SUCCESS","SET_DATASETS_STATUS","SET_OVERRIDE_CONFIRM","SAVE_DASHBOARD_STARTED","SAVE_DASHBOARD_FINISHED","HYDRATE_DASHBOARD","dashboardStateReducer","state","action","actionHandlers","data","dashboardState","css","updatedSliceIds","Set","sliceIds","add","slice","slice_id","Array","from","sliceId","delete","isStarred","isPublished","editMode","maxUndoHistoryExceeded","payload","colorScheme","updatedColorScheme","updatedExpandedSlices","expandedSlices","hasUnsavedChanges","dashboardIsSaving","lastModifiedTime","refreshFrequency","shouldPersistRefreshFrequency","isPersistent","isRefreshing","isFiltersRefreshing","directPathToChild","path","directPathLastUpdated","Date","now","newActiveTabs","activeTabs","prevTabId","tabId","overwriteConfirmMetadata","focusedFilterField","chartId","column","fullSizeChartId","datasetsStatus","status","type"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/reducers/dashboardState.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\nimport {\n  ADD_SLICE,\n  ON_CHANGE,\n  ON_SAVE,\n  REMOVE_SLICE,\n  SET_COLOR_SCHEME,\n  SET_EDIT_MODE,\n  SET_MAX_UNDO_HISTORY_EXCEEDED,\n  SET_UNSAVED_CHANGES,\n  SHOW_BUILDER_PANE,\n  TOGGLE_EXPAND_SLICE,\n  TOGGLE_FAVE_STAR,\n  TOGGLE_PUBLISHED,\n  UPDATE_CSS,\n  SET_REFRESH_FREQUENCY,\n  ON_REFRESH,\n  ON_REFRESH_SUCCESS,\n  SET_DIRECT_PATH,\n  SET_FOCUSED_FILTER_FIELD,\n  UNSET_FOCUSED_FILTER_FIELD,\n  SET_ACTIVE_TABS,\n  SET_FULL_SIZE_CHART_ID,\n  ON_FILTERS_REFRESH,\n  ON_FILTERS_REFRESH_SUCCESS,\n  SET_DATASETS_STATUS,\n  SET_OVERRIDE_CONFIRM,\n  SAVE_DASHBOARD_STARTED,\n  SAVE_DASHBOARD_FINISHED,\n} from '../actions/dashboardState';\nimport { HYDRATE_DASHBOARD } from '../actions/hydrate';\n\nexport default function dashboardStateReducer(state = {}, action) {\n  const actionHandlers = {\n    [HYDRATE_DASHBOARD]() {\n      return { ...state, ...action.data.dashboardState };\n    },\n    [UPDATE_CSS]() {\n      return { ...state, css: action.css };\n    },\n    [ADD_SLICE]() {\n      const updatedSliceIds = new Set(state.sliceIds);\n      updatedSliceIds.add(action.slice.slice_id);\n      return {\n        ...state,\n        sliceIds: Array.from(updatedSliceIds),\n      };\n    },\n    [REMOVE_SLICE]() {\n      const { sliceId } = action;\n      const updatedSliceIds = new Set(state.sliceIds);\n      updatedSliceIds.delete(sliceId);\n\n      return {\n        ...state,\n        sliceIds: Array.from(updatedSliceIds),\n      };\n    },\n    [TOGGLE_FAVE_STAR]() {\n      return { ...state, isStarred: action.isStarred };\n    },\n    [TOGGLE_PUBLISHED]() {\n      return { ...state, isPublished: action.isPublished };\n    },\n    [SET_EDIT_MODE]() {\n      return {\n        ...state,\n        editMode: action.editMode,\n      };\n    },\n    [SET_MAX_UNDO_HISTORY_EXCEEDED]() {\n      const { maxUndoHistoryExceeded = true } = action.payload;\n      return { ...state, maxUndoHistoryExceeded };\n    },\n    [SHOW_BUILDER_PANE]() {\n      return { ...state };\n    },\n    [SET_COLOR_SCHEME]() {\n      return {\n        ...state,\n        colorScheme: action.colorScheme,\n        updatedColorScheme: true,\n      };\n    },\n    [TOGGLE_EXPAND_SLICE]() {\n      const updatedExpandedSlices = { ...state.expandedSlices };\n      const { sliceId } = action;\n      if (updatedExpandedSlices[sliceId]) {\n        delete updatedExpandedSlices[sliceId];\n      } else {\n        updatedExpandedSlices[sliceId] = true;\n      }\n      return { ...state, expandedSlices: updatedExpandedSlices };\n    },\n    [ON_CHANGE]() {\n      return { ...state, hasUnsavedChanges: true };\n    },\n    [SAVE_DASHBOARD_STARTED]() {\n      return {\n        ...state,\n        dashboardIsSaving: true,\n      };\n    },\n    [SAVE_DASHBOARD_FINISHED]() {\n      return {\n        ...state,\n        dashboardIsSaving: false,\n      };\n    },\n    [ON_SAVE]() {\n      return {\n        ...state,\n        hasUnsavedChanges: false,\n        maxUndoHistoryExceeded: false,\n        editMode: false,\n        updatedColorScheme: false,\n        // server-side returns last_modified_time for latest change\n        lastModifiedTime: action.lastModifiedTime,\n      };\n    },\n    [SET_UNSAVED_CHANGES]() {\n      const { hasUnsavedChanges } = action.payload;\n      return { ...state, hasUnsavedChanges };\n    },\n    [SET_REFRESH_FREQUENCY]() {\n      return {\n        ...state,\n        refreshFrequency: action.refreshFrequency,\n        shouldPersistRefreshFrequency: action.isPersistent,\n        hasUnsavedChanges: action.isPersistent,\n      };\n    },\n    [ON_REFRESH]() {\n      return {\n        ...state,\n        isRefreshing: true,\n      };\n    },\n    [ON_FILTERS_REFRESH]() {\n      return {\n        ...state,\n        isFiltersRefreshing: true,\n      };\n    },\n    [ON_FILTERS_REFRESH_SUCCESS]() {\n      return {\n        ...state,\n        isFiltersRefreshing: false,\n      };\n    },\n    [ON_REFRESH_SUCCESS]() {\n      return {\n        ...state,\n        isRefreshing: false,\n      };\n    },\n    [SET_DIRECT_PATH]() {\n      return {\n        ...state,\n        directPathToChild: action.path,\n        directPathLastUpdated: Date.now(),\n      };\n    },\n    [SET_ACTIVE_TABS]() {\n      const newActiveTabs = new Set(state.activeTabs);\n      newActiveTabs.delete(action.prevTabId);\n      newActiveTabs.add(action.tabId);\n      return {\n        ...state,\n        activeTabs: Array.from(newActiveTabs),\n      };\n    },\n    [SET_OVERRIDE_CONFIRM]() {\n      return {\n        ...state,\n        overwriteConfirmMetadata: action.overwriteConfirmMetadata,\n      };\n    },\n    [SET_FOCUSED_FILTER_FIELD]() {\n      return {\n        ...state,\n        focusedFilterField: {\n          chartId: action.chartId,\n          column: action.column,\n        },\n      };\n    },\n    [UNSET_FOCUSED_FILTER_FIELD]() {\n      // dashboard only has 1 focused filter field at a time,\n      // but when user switch different filter boxes,\n      // browser didn't always fire onBlur and onFocus events in order.\n      if (\n        !state.focusedFilterField ||\n        action.chartId !== state.focusedFilterField.chartId ||\n        action.column !== state.focusedFilterField.column\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        focusedFilterField: null,\n      };\n    },\n    [SET_FULL_SIZE_CHART_ID]() {\n      return {\n        ...state,\n        fullSizeChartId: action.chartId,\n      };\n    },\n    [SET_DATASETS_STATUS]() {\n      return {\n        ...state,\n        datasetsStatus: action.status,\n      };\n    },\n  };\n\n  if (action.type in actionHandlers) {\n    return actionHandlers[action.type]();\n  }\n  return state;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}