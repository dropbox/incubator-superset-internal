{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport columnType from './columnType';\nimport adhocMetricType from './adhocMetricType';\nimport { StyledColumnOption } from '../../optionRenderers';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  option: PropTypes.oneOfType([\n  columnType,\n  PropTypes.shape({ saved_metric_name: PropTypes.string.isRequired }),\n  adhocMetricType]).\n  isRequired };\n\n\nexport default function FilterDefinitionOption(_ref) {let { option } = _ref;\n  if (option.saved_metric_name) {\n    return (\n      ___EmotionJSX(StyledColumnOption, {\n        column: { column_name: option.saved_metric_name, type: 'expression' },\n        showType: true }));\n\n\n  }\n  if (option.column_name) {\n    return ___EmotionJSX(StyledColumnOption, { column: option, showType: true });\n  }\n  if (option.label) {\n    return (\n      ___EmotionJSX(StyledColumnOption, {\n        column: { column_name: option.label, type: 'expression' },\n        showType: true }));\n\n\n  }\n  return null;\n}\nFilterDefinitionOption.propTypes = propTypes;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/MetricControl/FilterDefinitionOption.jsx\");reactHotLoader.register(FilterDefinitionOption, \"FilterDefinitionOption\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/MetricControl/FilterDefinitionOption.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","PropTypes","columnType","adhocMetricType","StyledColumnOption","propTypes","option","oneOfType","shape","saved_metric_name","string","isRequired","FilterDefinitionOption","column_name","type","label"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/MetricControl/FilterDefinitionOption.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport columnType from './columnType';\nimport adhocMetricType from './adhocMetricType';\nimport { StyledColumnOption } from '../../optionRenderers';\n\nconst propTypes = {\n  option: PropTypes.oneOfType([\n    columnType,\n    PropTypes.shape({ saved_metric_name: PropTypes.string.isRequired }),\n    adhocMetricType,\n  ]).isRequired,\n};\n\nexport default function FilterDefinitionOption({ option }) {\n  if (option.saved_metric_name) {\n    return (\n      <StyledColumnOption\n        column={{ column_name: option.saved_metric_name, type: 'expression' }}\n        showType\n      />\n    );\n  }\n  if (option.column_name) {\n    return <StyledColumnOption column={option} showType />;\n  }\n  if (option.label) {\n    return (\n      <StyledColumnOption\n        column={{ column_name: option.label, type: 'expression' }}\n        showType\n      />\n    );\n  }\n  return null;\n}\nFilterDefinitionOption.propTypes = propTypes;\n"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,kBAAT,QAAmC,uBAAnC,C;;AAEA,MAAMC,SAAS,GAAG;EAChBC,MAAM,EAAEL,SAAS,CAACM,SAAV,CAAoB;EAC1BL,UAD0B;EAE1BD,SAAS,CAACO,KAAV,CAAgB,EAAEC,iBAAiB,EAAER,SAAS,CAACS,MAAV,CAAiBC,UAAtC,EAAhB,CAF0B;EAG1BR,eAH0B,CAApB;EAILQ,UALa,EAAlB;;;AAQA,eAAe,SAASC,sBAAT,OAA4C,KAAZ,EAAEN,MAAF,EAAY;EACzD,IAAIA,MAAM,CAACG,iBAAX,EAA8B;IAC5B;MACE,cAAC,kBAAD;QACE,MAAM,EAAE,EAAEI,WAAW,EAAEP,MAAM,CAACG,iBAAtB,EAAyCK,IAAI,EAAE,YAA/C,EADV;QAEE,QAAQ,MAFV,GADF;;;EAMD;EACD,IAAIR,MAAM,CAACO,WAAX,EAAwB;IACtB,OAAO,cAAC,kBAAD,IAAoB,MAAM,EAAEP,MAA5B,EAAoC,QAAQ,MAA5C,GAAP;EACD;EACD,IAAIA,MAAM,CAACS,KAAX,EAAkB;IAChB;MACE,cAAC,kBAAD;QACE,MAAM,EAAE,EAAEF,WAAW,EAAEP,MAAM,CAACS,KAAtB,EAA6BD,IAAI,EAAE,YAAnC,EADV;QAEE,QAAQ,MAFV,GADF;;;EAMD;EACD,OAAO,IAAP;AACD;AACDF,sBAAsB,CAACP,SAAvB,GAAmCA,SAAnC,C,iLA9BMA,S,oLAQkBO,sB"},"metadata":{},"sourceType":"module"}