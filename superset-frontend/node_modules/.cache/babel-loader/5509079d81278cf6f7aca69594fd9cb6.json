{"ast":null,"code":"export default function getEffectiveExtraFilters(filters) {\n  return Object.entries(filters).\n  map((_ref) => {let [column, values] = _ref;return {\n      col: column,\n      op: Array.isArray(values) ? 'IN' : '==',\n      val: values };}).\n\n  filter((filter) => filter.val !== null);\n}","map":{"version":3,"mappings":"AAoBA,eAAc,SAAUA,wBAAV,CAAmCC,OAAnC,EAA6D;EACzE,OAAOC,MAAM,CAACC,OAAP,CAAeF,OAAf;EACJG,GADI,CACA,eAAC,CAACC,MAAD,EAASC,MAAT,CAAD,eAAuB;MAC1BC,GAAG,EAAEF,MADqB;MAE1BG,EAAE,EAAEC,KAAK,CAACC,OAAN,CAAcJ,MAAd,IAAwB,IAAxB,GAA+B,IAFT;MAG1BK,GAAG,EAAEL,MAHqB,EAAvB,EADA;;EAMJM,MANI,CAMG,OAAM,KAAIA,MAAM,CAACD,GAAP,KAAe,IAN5B,CAAP;AAOD","names":["getEffectiveExtraFilters","filters","Object","entries","map","column","values","col","op","Array","isArray","val","filter"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/util/charts/getEffectiveExtraFilters.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { DataRecordFilters } from '@superset-ui/core';\n\nexport default function getEffectiveExtraFilters(filters: DataRecordFilters) {\n  return Object.entries(filters)\n    .map(([column, values]) => ({\n      col: column,\n      op: Array.isArray(values) ? 'IN' : '==',\n      val: values,\n    }))\n    .filter(filter => filter.val !== null);\n}\n"]},"metadata":{},"sourceType":"module"}