{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t, tn } from '@superset-ui/core';\nimport IssueCode from './IssueCode';\nimport ErrorAlert from './ErrorAlert';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction DatabaseErrorMessage(_ref) {var _context;let { error, source = 'dashboard', subtitle } = _ref;\n  const { extra, level, message } = error;\n  const isVisualization = _includesInstanceProperty(_context = ['dashboard', 'explore']).call(_context, source);\n  const body = extra && ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"p\", null,\n  t('This may be triggered by:'),\n  ___EmotionJSX(\"br\", null),\n  extra.issue_codes.\n  map((issueCode) => ___EmotionJSX(IssueCode, _extends({}, issueCode, { key: issueCode.code }))).\n  reduce((prev, curr) => [prev, ___EmotionJSX(\"br\", null), curr])),\n\n  isVisualization && extra.owners && ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"br\", null),\n  ___EmotionJSX(\"p\", null,\n  tn('Please reach out to the Chart Owner for assistance.', 'Please reach out to the Chart Owners for assistance.', extra.owners.length)),\n\n  ___EmotionJSX(\"p\", null,\n  tn('Chart Owner: %s', 'Chart Owners: %s', extra.owners.length, extra.owners.join(', ')))));\n\n\n\n  const copyText = extra != null && extra.issue_codes ?\n  t('%(message)s\\nThis may be triggered by: \\n%(issues)s', {\n    message,\n    issues: extra.issue_codes.\n    map((issueCode) => issueCode.message).\n    join('\\n') }) :\n\n  message;\n  return ___EmotionJSX(ErrorAlert, { title: t('%s Error', (extra == null ? void 0 : extra.engine_name) || t('DB engine')), subtitle: subtitle, level: level, source: source, copyText: copyText, body: body });\n}const _default =\nDatabaseErrorMessage;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DatabaseErrorMessage, \"DatabaseErrorMessage\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ErrorMessage/DatabaseErrorMessage.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ErrorMessage/DatabaseErrorMessage.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"scAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,CAAT,EAAYC,EAAZ,QAAsB,mBAAtB;AAGA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C;AAWA,SAASC,oBAAT,OAIiD,kBAJnB,EAC5BC,KAD4B,EAE5BC,MAAM,GAAG,WAFmB,EAG5BC,QAH4B,EAImB;EAC/C,MAAM,EAAEC,KAAF,EAASC,KAAT,EAAgBC,OAAhB,KAA4BL,KAAlC;EAEA,MAAMM,eAAe,GAAG,sCAAC,WAAD,EAAc,SAAd,kBAAkCL,MAAlC,CAAxB;EAEA,MAAMM,IAAI,GAAGJ,KAAK,IAChB;EACE;EACGR,CAAC,CAAC,2BAAD,CADJ;EAEE,yBAFF;EAGGQ,KAAK,CAACK,WAAN;EACEC,GADF,CACuB,UAAS,KAC7B,cAAC,SAAD,eAAeC,SAAf,IAA0B,GAAG,EAAEA,SAAS,CAACC,IAAzC,IAFH;EAIEC,MAJF,CAIS,CAACC,IAAD,EAAOC,IAAP,KAAgB,CAACD,IAAD,EAAO,yBAAP,EAAeC,IAAf,CAJzB,CAHH,CADF;;EAUGR,eAAe,IAAIH,KAAK,CAACY,MAAzB,IACC;EACE,yBADF;EAEE;EACGnB,EAAE,CACD,qDADC,EAED,sDAFC,EAGDO,KAAK,CAACY,MAAN,CAAaC,MAHZ,CADL,CAFF;;EASE;EACGpB,EAAE,CACD,iBADC,EAED,kBAFC,EAGDO,KAAK,CAACY,MAAN,CAAaC,MAHZ,EAIDb,KAAK,CAACY,MAAN,CAAaE,IAAb,CAAkB,IAAlB,CAJC,CADL,CATF,CAXJ,CADF;;;;EAkCA,MAAMC,QAAQ,GAAGf,KAAK,QAAL,SAAK,CAAEK,WAAP;EACbb,CAAC,CAAC,qDAAD,EAAwD;IACvDU,OADuD;IAEvDc,MAAM,EAAEhB,KAAK,CAACK,WAAN;IACLC,GADK,CACD,UAAS,KAAIC,SAAS,CAACL,OADtB;IAELY,IAFK,CAEA,IAFA,CAF+C,EAAxD,CADY;;EAObZ,OAPJ;EASA,OACE,cAAC,UAAD,IACE,KAAK,EAAEV,CAAC,CAAC,UAAD,EAAa,MAAK,QAAL,iBAAK,CAAEyB,WAAP,KAAsBzB,CAAC,CAAC,WAAD,CAApC,CADV,EAEE,QAAQ,EAAEO,QAFZ,EAGE,KAAK,EAAEE,KAHT,EAIE,MAAM,EAAEH,MAJV,EAKE,QAAQ,EAAEiB,QALZ,EAME,IAAI,EAAEX,IANR,GADF;AAUD,C;AAEcR,oB,CAAf,wB,iLAhESA,oB","names":["React","t","tn","IssueCode","ErrorAlert","DatabaseErrorMessage","error","source","subtitle","extra","level","message","isVisualization","body","issue_codes","map","issueCode","code","reduce","prev","curr","owners","length","join","copyText","issues","engine_name"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ErrorMessage/DatabaseErrorMessage.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t, tn } from '@superset-ui/core';\n\nimport { ErrorMessageComponentProps } from './types';\nimport IssueCode from './IssueCode';\nimport ErrorAlert from './ErrorAlert';\n\ninterface DatabaseErrorExtra {\n  owners?: string[];\n  issue_codes: {\n    code: number;\n    message: string;\n  }[];\n  engine_name: string | null;\n}\n\nfunction DatabaseErrorMessage({\n  error,\n  source = 'dashboard',\n  subtitle,\n}: ErrorMessageComponentProps<DatabaseErrorExtra>) {\n  const { extra, level, message } = error;\n\n  const isVisualization = ['dashboard', 'explore'].includes(source);\n\n  const body = extra && (\n    <>\n      <p>\n        {t('This may be triggered by:')}\n        <br />\n        {extra.issue_codes\n          .map<React.ReactNode>(issueCode => (\n            <IssueCode {...issueCode} key={issueCode.code} />\n          ))\n          .reduce((prev, curr) => [prev, <br />, curr])}\n      </p>\n      {isVisualization && extra.owners && (\n        <>\n          <br />\n          <p>\n            {tn(\n              'Please reach out to the Chart Owner for assistance.',\n              'Please reach out to the Chart Owners for assistance.',\n              extra.owners.length,\n            )}\n          </p>\n          <p>\n            {tn(\n              'Chart Owner: %s',\n              'Chart Owners: %s',\n              extra.owners.length,\n              extra.owners.join(', '),\n            )}\n          </p>\n        </>\n      )}\n    </>\n  );\n\n  const copyText = extra?.issue_codes\n    ? t('%(message)s\\nThis may be triggered by: \\n%(issues)s', {\n        message,\n        issues: extra.issue_codes\n          .map(issueCode => issueCode.message)\n          .join('\\n'),\n      })\n    : message;\n\n  return (\n    <ErrorAlert\n      title={t('%s Error', extra?.engine_name || t('DB engine'))}\n      subtitle={subtitle}\n      level={level}\n      source={source}\n      copyText={copyText}\n      body={body}\n    />\n  );\n}\n\nexport default DatabaseErrorMessage;\n"]},"metadata":{},"sourceType":"module"}