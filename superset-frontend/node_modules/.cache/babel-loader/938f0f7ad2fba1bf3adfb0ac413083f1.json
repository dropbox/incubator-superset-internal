{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { styled, t, useTheme } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { StyledMetricOption } from '../../optionRenderers';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const DragContainer = styled.div`\n  margin-bottom: ${(_ref) => {let { theme } = _ref;return theme.gridUnit;}}px;\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\nexport const OptionControlContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  font-size: ${(_ref2) => {let { theme } = _ref2;return theme.typography.sizes.s;}}px;\n  height: ${(_ref3) => {let { theme } = _ref3;return theme.gridUnit * 6;}}px;\n  background-color: ${(_ref4) => {let { theme } = _ref4;return theme.colors.grayscale.light3;}};\n  border-radius: 3px;\n  cursor: ${(_ref5) => {let { withCaret } = _ref5;return withCaret ? 'pointer' : 'default';}};\n`;\nexport const Label = styled.div`\n  ${(_ref6) => {let { theme } = _ref6;return `\n    display: flex;\n    width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    align-items: center;\n    white-space: nowrap;\n    padding-left: ${theme.gridUnit}px;\n    svg {\n      margin-right: ${theme.gridUnit}px;\n    }\n    .type-label {\n      margin-right: ${theme.gridUnit * 2}px;\n      margin-left: ${theme.gridUnit}px;\n      font-weight: ${theme.typography.weights.normal};\n      width: auto;\n    }\n    .option-label {\n      display: inline;\n    }\n  `;}}\n`;\nconst LabelText = styled.span`\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nexport const CaretContainer = styled.div`\n  height: 100%;\n  border-left: solid 1px ${(_ref7) => {let { theme } = _ref7;return theme.colors.grayscale.dark2;}}0C;\n  margin-left: auto;\n`;\nexport const CloseContainer = styled.div`\n  height: 100%;\n  width: ${(_ref8) => {let { theme } = _ref8;return theme.gridUnit * 6;}}px;\n  border-right: solid 1px ${(_ref9) => {let { theme } = _ref9;return theme.colors.grayscale.dark2;}}0C;\n  cursor: pointer;\n`;\nconst StyledInfoTooltipWithTrigger = styled(InfoTooltipWithTrigger)`\n  margin: 0 ${(_ref10) => {let { theme } = _ref10;return theme.gridUnit;}}px;\n`;\nexport const HeaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const LabelsContainer = styled.div`\n  padding: ${(_ref11) => {let { theme } = _ref11;return theme.gridUnit;}}px;\n  border: solid 1px ${(_ref12) => {let { theme } = _ref12;return theme.colors.grayscale.light2;}};\n  border-radius: ${(_ref13) => {let { theme } = _ref13;return theme.gridUnit;}}px;\n`;\nexport const DndLabelsContainer = styled.div`\n  padding: ${(_ref14) => {let { theme } = _ref14;return theme.gridUnit;}}px;\n  border: ${(_ref15) => {let { canDrop, isOver, theme } = _ref15;\n  if (canDrop) {\n    return `dashed 1px ${theme.colors.info.dark1}`;\n  }\n  if (isOver && !canDrop) {\n    return `dashed 1px ${theme.colors.error.dark1}`;\n  }\n  return `solid 1px ${theme.colors.grayscale.light2}`;\n}};\n  border-radius: ${(_ref16) => {let { theme } = _ref16;return theme.gridUnit;}}px;\n`;\nexport const AddControlLabel = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: ${(_ref17) => {let { theme } = _ref17;return theme.gridUnit * 6;}}px;\n  padding-left: ${(_ref18) => {let { theme } = _ref18;return theme.gridUnit;}}px;\n  font-size: ${(_ref19) => {let { theme } = _ref19;return theme.typography.sizes.s;}}px;\n  color: ${(_ref20) => {let { theme } = _ref20;return theme.colors.grayscale.light1;}};\n  border: dashed 1px ${(_ref21) => {let { theme } = _ref21;return theme.colors.grayscale.light2;}};\n  border-radius: ${(_ref22) => {let { theme } = _ref22;return theme.gridUnit;}}px;\n  cursor: ${(_ref23) => {let { cancelHover } = _ref23;return cancelHover ? 'inherit' : 'pointer';}};\n\n  :hover {\n    background-color: ${(_ref24) => {let { cancelHover, theme } = _ref24;return cancelHover ? 'inherit' : theme.colors.grayscale.light4;}};\n  }\n\n  :active {\n    background-color: ${(_ref25) => {let { cancelHover, theme } = _ref25;return cancelHover ? 'inherit' : theme.colors.grayscale.light3;}};\n  }\n`;\nexport const AddIconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: ${(_ref26) => {let { theme } = _ref26;return theme.gridUnit * 4;}}px;\n  width: ${(_ref27) => {let { theme } = _ref27;return theme.gridUnit * 4;}}px;\n  padding: 0;\n  background-color: ${(_ref28) => {let { theme } = _ref28;return theme.colors.primary.dark1;}};\n  border: none;\n  border-radius: 2px;\n\n  :disabled {\n    cursor: not-allowed;\n    background-color: ${(_ref29) => {let { theme } = _ref29;return theme.colors.grayscale.light1;}};\n  }\n`;\nexport const OptionControlLabel = (_ref30) => {let { label, savedMetric, adhocMetric, onRemove, onMoveLabel, onDropLabel, withCaret, isFunction, type, index, isExtra, datasourceWarningMessage, tooltipTitle, multi = true, ...props } = _ref30;\n  const theme = useTheme();\n  const ref = useRef(null);\n  const labelRef = useRef(null);\n  const hasMetricName = savedMetric == null ? void 0 : savedMetric.metric_name;\n  const [, drop] = useDrop({\n    accept: type,\n    drop() {\n      if (!multi) {\n        return;\n      }\n      onDropLabel == null ? void 0 : onDropLabel();\n    },\n    hover(item, monitor) {var _ref$current;\n      if (!multi) {\n        return;\n      }\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = (_ref$current = ref.current) == null ? void 0 : _ref$current.getBoundingClientRect();\n      // Get vertical middle\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n      // Get pixels to the top\n      const hoverClientY = clientOffset != null && clientOffset.y ?\n      (clientOffset == null ? void 0 : clientOffset.y) - hoverBoundingRect.top :\n      0;\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      // Time to actually perform the action\n      onMoveLabel == null ? void 0 : onMoveLabel(dragIndex, hoverIndex);\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      // eslint-disable-next-line no-param-reassign\n      item.index = hoverIndex;\n    } });\n\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      type,\n      index,\n      value: savedMetric != null && savedMetric.metric_name ? savedMetric : adhocMetric },\n\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging() }) });\n\n\n  const getLabelContent = () => {\n    const shouldShowTooltip = !isDragging &&\n    typeof label === 'string' &&\n    tooltipTitle &&\n    label &&\n    tooltipTitle !== label ||\n    !isDragging &&\n    labelRef &&\n    labelRef.current &&\n    labelRef.current.scrollWidth > labelRef.current.clientWidth;\n    if (savedMetric && hasMetricName) {\n      return ___EmotionJSX(StyledMetricOption, { metric: savedMetric, labelRef: labelRef, shouldShowTooltip: !isDragging });\n    }\n    if (!shouldShowTooltip) {\n      return ___EmotionJSX(LabelText, { ref: labelRef }, label);\n    }\n    return ___EmotionJSX(Tooltip, { title: tooltipTitle || label },\n    ___EmotionJSX(LabelText, { ref: labelRef }, label));\n\n  };\n  const getOptionControlContent = () => ___EmotionJSX(OptionControlContainer, _extends({ withCaret: withCaret, \"data-test\": \"option-label\" }, props),\n  ___EmotionJSX(CloseContainer, { role: \"button\", \"data-test\": \"remove-control-button\", onClick: onRemove },\n  ___EmotionJSX(Icons.XSmall, { iconColor: theme.colors.grayscale.light1 })),\n\n  ___EmotionJSX(Label, { \"data-test\": \"control-label\" },\n  isFunction && ___EmotionJSX(Icons.FieldDerived, null),\n  getLabelContent()),\n\n  (!!datasourceWarningMessage || isExtra) && ___EmotionJSX(StyledInfoTooltipWithTrigger, { icon: \"exclamation-triangle\", placement: \"top\", bsStyle: \"warning\", tooltip: datasourceWarningMessage ||\n    t(`\n                This filter was inherited from the dashboard's context.\n                It won't be saved when saving the chart.\n              `) }),\n  withCaret && ___EmotionJSX(CaretContainer, null,\n  ___EmotionJSX(Icons.CaretRight, { iconColor: theme.colors.grayscale.light1 })));\n\n\n  drag(drop(ref));\n  return ___EmotionJSX(DragContainer, { ref: ref }, getOptionControlContent());\n};__signature__(OptionControlLabel, \"useTheme{theme}\\nuseRef{ref}\\nuseRef{labelRef}\\nuseDrop{[, drop]}\\nuseDrag{[{ isDragging }, drag]}\", () => [useTheme, useDrop, useDrag]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DragContainer, \"DragContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/OptionControls/index.tsx\");reactHotLoader.register(OptionControlContainer, \"OptionControlContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/OptionControls/index.tsx\");reactHotLoader.register(Label, \"Label\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/OptionControls/index.tsx\");reactHotLoader.register(LabelText, \"LabelText\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/OptionControls/index.tsx\");reactHotLoader.register(CaretContainer, \"CaretContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/OptionControls/index.tsx\");reactHotLoader.register(CloseContainer, \"CloseContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/OptionControls/index.tsx\");reactHotLoader.register(StyledInfoTooltipWithTrigger, \"StyledInfoTooltipWithTrigger\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/OptionControls/index.tsx\");reactHotLoader.register(HeaderContainer, \"HeaderContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/OptionControls/index.tsx\");reactHotLoader.register(LabelsContainer, \"LabelsContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/OptionControls/index.tsx\");reactHotLoader.register(DndLabelsContainer, \"DndLabelsContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/OptionControls/index.tsx\");reactHotLoader.register(AddControlLabel, \"AddControlLabel\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/OptionControls/index.tsx\");reactHotLoader.register(AddIconButton, \"AddIconButton\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/OptionControls/index.tsx\");reactHotLoader.register(OptionControlLabel, \"OptionControlLabel\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/OptionControls/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useRef","useDrag","useDrop","styled","t","useTheme","InfoTooltipWithTrigger","Tooltip","Icons","StyledMetricOption","DragContainer","div","theme","gridUnit","OptionControlContainer","typography","sizes","s","colors","grayscale","light3","withCaret","Label","weights","normal","LabelText","span","CaretContainer","dark2","CloseContainer","StyledInfoTooltipWithTrigger","HeaderContainer","LabelsContainer","light2","DndLabelsContainer","canDrop","isOver","info","dark1","error","AddControlLabel","light1","cancelHover","light4","AddIconButton","button","primary","OptionControlLabel","label","savedMetric","adhocMetric","onRemove","onMoveLabel","onDropLabel","isFunction","type","index","isExtra","datasourceWarningMessage","tooltipTitle","multi","props","ref","labelRef","hasMetricName","metric_name","drop","accept","hover","item","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","isDragging","drag","value","collect","getLabelContent","shouldShowTooltip","scrollWidth","clientWidth","getOptionControlContent"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/OptionControls/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useRef } from 'react';\nimport { useDrag, useDrop, DropTargetMonitor } from 'react-dnd';\nimport { styled, t, useTheme } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { savedMetricType } from 'src/explore/components/controls/MetricControl/types';\nimport AdhocMetric from 'src/explore/components/controls/MetricControl/AdhocMetric';\nimport { StyledMetricOption } from '../../optionRenderers';\n\nexport const DragContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit}px;\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const OptionControlContainer = styled.div<{\n  withCaret?: boolean;\n}>`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  height: ${({ theme }) => theme.gridUnit * 6}px;\n  background-color: ${({ theme }) => theme.colors.grayscale.light3};\n  border-radius: 3px;\n  cursor: ${({ withCaret }) => (withCaret ? 'pointer' : 'default')};\n`;\nexport const Label = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    align-items: center;\n    white-space: nowrap;\n    padding-left: ${theme.gridUnit}px;\n    svg {\n      margin-right: ${theme.gridUnit}px;\n    }\n    .type-label {\n      margin-right: ${theme.gridUnit * 2}px;\n      margin-left: ${theme.gridUnit}px;\n      font-weight: ${theme.typography.weights.normal};\n      width: auto;\n    }\n    .option-label {\n      display: inline;\n    }\n  `}\n`;\n\nconst LabelText = styled.span`\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const CaretContainer = styled.div`\n  height: 100%;\n  border-left: solid 1px ${({ theme }) => theme.colors.grayscale.dark2}0C;\n  margin-left: auto;\n`;\n\nexport const CloseContainer = styled.div`\n  height: 100%;\n  width: ${({ theme }) => theme.gridUnit * 6}px;\n  border-right: solid 1px ${({ theme }) => theme.colors.grayscale.dark2}0C;\n  cursor: pointer;\n`;\n\nconst StyledInfoTooltipWithTrigger = styled(InfoTooltipWithTrigger)`\n  margin: 0 ${({ theme }) => theme.gridUnit}px;\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const LabelsContainer = styled.div`\n  padding: ${({ theme }) => theme.gridUnit}px;\n  border: solid 1px ${({ theme }) => theme.colors.grayscale.light2};\n  border-radius: ${({ theme }) => theme.gridUnit}px;\n`;\n\nexport const DndLabelsContainer = styled.div<{\n  canDrop?: boolean;\n  isOver?: boolean;\n}>`\n  padding: ${({ theme }) => theme.gridUnit}px;\n  border: ${({ canDrop, isOver, theme }) => {\n    if (canDrop) {\n      return `dashed 1px ${theme.colors.info.dark1}`;\n    }\n    if (isOver && !canDrop) {\n      return `dashed 1px ${theme.colors.error.dark1}`;\n    }\n    return `solid 1px ${theme.colors.grayscale.light2}`;\n  }};\n  border-radius: ${({ theme }) => theme.gridUnit}px;\n`;\n\nexport const AddControlLabel = styled.div<{\n  cancelHover?: boolean;\n}>`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: ${({ theme }) => theme.gridUnit * 6}px;\n  padding-left: ${({ theme }) => theme.gridUnit}px;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  color: ${({ theme }) => theme.colors.grayscale.light1};\n  border: dashed 1px ${({ theme }) => theme.colors.grayscale.light2};\n  border-radius: ${({ theme }) => theme.gridUnit}px;\n  cursor: ${({ cancelHover }) => (cancelHover ? 'inherit' : 'pointer')};\n\n  :hover {\n    background-color: ${({ cancelHover, theme }) =>\n      cancelHover ? 'inherit' : theme.colors.grayscale.light4};\n  }\n\n  :active {\n    background-color: ${({ cancelHover, theme }) =>\n      cancelHover ? 'inherit' : theme.colors.grayscale.light3};\n  }\n`;\n\nexport const AddIconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: ${({ theme }) => theme.gridUnit * 4}px;\n  width: ${({ theme }) => theme.gridUnit * 4}px;\n  padding: 0;\n  background-color: ${({ theme }) => theme.colors.primary.dark1};\n  border: none;\n  border-radius: 2px;\n\n  :disabled {\n    cursor: not-allowed;\n    background-color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n`;\n\ninterface DragItem {\n  index: number;\n  type: string;\n}\n\nexport const OptionControlLabel = ({\n  label,\n  savedMetric,\n  adhocMetric,\n  onRemove,\n  onMoveLabel,\n  onDropLabel,\n  withCaret,\n  isFunction,\n  type,\n  index,\n  isExtra,\n  datasourceWarningMessage,\n  tooltipTitle,\n  multi = true,\n  ...props\n}: {\n  label: string | React.ReactNode;\n  savedMetric?: savedMetricType;\n  adhocMetric?: AdhocMetric;\n  onRemove: () => void;\n  onMoveLabel: (dragIndex: number, hoverIndex: number) => void;\n  onDropLabel: () => void;\n  withCaret?: boolean;\n  isFunction?: boolean;\n  isDraggable?: boolean;\n  type: string;\n  index: number;\n  isExtra?: boolean;\n  datasourceWarningMessage?: string;\n  tooltipTitle?: string;\n  multi?: boolean;\n}) => {\n  const theme = useTheme();\n  const ref = useRef<HTMLDivElement>(null);\n  const labelRef = useRef<HTMLDivElement>(null);\n  const hasMetricName = savedMetric?.metric_name;\n  const [, drop] = useDrop({\n    accept: type,\n    drop() {\n      if (!multi) {\n        return;\n      }\n      onDropLabel?.();\n    },\n    hover(item: DragItem, monitor: DropTargetMonitor) {\n      if (!multi) {\n        return;\n      }\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n      // Get pixels to the top\n      const hoverClientY = clientOffset?.y\n        ? clientOffset?.y - hoverBoundingRect.top\n        : 0;\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      // Time to actually perform the action\n      onMoveLabel?.(dragIndex, hoverIndex);\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      // eslint-disable-next-line no-param-reassign\n      item.index = hoverIndex;\n    },\n  });\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      type,\n      index,\n      value: savedMetric?.metric_name ? savedMetric : adhocMetric,\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const getLabelContent = () => {\n    const shouldShowTooltip =\n      (!isDragging &&\n        typeof label === 'string' &&\n        tooltipTitle &&\n        label &&\n        tooltipTitle !== label) ||\n      (!isDragging &&\n        labelRef &&\n        labelRef.current &&\n        labelRef.current.scrollWidth > labelRef.current.clientWidth);\n\n    if (savedMetric && hasMetricName) {\n      return (\n        <StyledMetricOption\n          metric={savedMetric}\n          labelRef={labelRef}\n          shouldShowTooltip={!isDragging}\n        />\n      );\n    }\n    if (!shouldShowTooltip) {\n      return <LabelText ref={labelRef}>{label}</LabelText>;\n    }\n    return (\n      <Tooltip title={tooltipTitle || label}>\n        <LabelText ref={labelRef}>{label}</LabelText>\n      </Tooltip>\n    );\n  };\n\n  const getOptionControlContent = () => (\n    <OptionControlContainer\n      withCaret={withCaret}\n      data-test=\"option-label\"\n      {...props}\n    >\n      <CloseContainer\n        role=\"button\"\n        data-test=\"remove-control-button\"\n        onClick={onRemove}\n      >\n        <Icons.XSmall iconColor={theme.colors.grayscale.light1} />\n      </CloseContainer>\n      <Label data-test=\"control-label\">\n        {isFunction && <Icons.FieldDerived />}\n        {getLabelContent()}\n      </Label>\n      {(!!datasourceWarningMessage || isExtra) && (\n        <StyledInfoTooltipWithTrigger\n          icon=\"exclamation-triangle\"\n          placement=\"top\"\n          bsStyle=\"warning\"\n          tooltip={\n            datasourceWarningMessage ||\n            t(`\n                This filter was inherited from the dashboard's context.\n                It won't be saved when saving the chart.\n              `)\n          }\n        />\n      )}\n      {withCaret && (\n        <CaretContainer>\n          <Icons.CaretRight iconColor={theme.colors.grayscale.light1} />\n        </CaretContainer>\n      )}\n    </OptionControlContainer>\n  );\n\n  drag(drop(ref));\n  return <DragContainer ref={ref}>{getOptionControlContent()}</DragContainer>;\n};\n"]},"metadata":{},"sourceType":"module"}