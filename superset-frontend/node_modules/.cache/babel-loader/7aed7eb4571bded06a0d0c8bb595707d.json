{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t, styled } from '@superset-ui/core';\nimport Tabs from 'src/components/Tabs';\nimport { ResultTypes } from '../types';\nimport { useResultsPane } from './useResultsPane';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  .ant-tabs {\n    height: 100%;\n  }\n\n  .ant-tabs-content {\n    height: 100%;\n  }\n\n  .ant-tabs-tabpane {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .table-condensed {\n    overflow: auto;\n  }\n`;\nexport const ResultsPaneOnDashboard = (_ref) => {let { isRequest, queryFormData, queryForce, ownState, errorMessage, actions, isVisible, dataSize = 50 } = _ref;\n  const resultsPanes = useResultsPane({\n    errorMessage,\n    queryFormData,\n    queryForce,\n    ownState,\n    isRequest,\n    actions,\n    dataSize,\n    isVisible });\n\n  if (resultsPanes.length === 1) {\n    return ___EmotionJSX(Wrapper, null, resultsPanes[0]);\n  }\n  const panes = resultsPanes.map((pane, idx) => {\n    if (idx === 0) {\n      return ___EmotionJSX(Tabs.TabPane, { tab: t('Results'), key: ResultTypes.Results },\n      pane);\n\n    }\n    return ___EmotionJSX(Tabs.TabPane, { tab: t('Results %s', idx + 1), key: `${ResultTypes.Results} ${idx + 1}` },\n    pane);\n\n  });\n  return ___EmotionJSX(Wrapper, null,\n  ___EmotionJSX(Tabs, { fullWidth: false }, panes));\n\n};__signature__(ResultsPaneOnDashboard, \"useResultsPane{resultsPanes}\", () => [useResultsPane]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Wrapper, \"Wrapper\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/DataTablesPane/components/ResultsPaneOnDashboard.tsx\");reactHotLoader.register(ResultsPaneOnDashboard, \"ResultsPaneOnDashboard\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/DataTablesPane/components/ResultsPaneOnDashboard.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,CAAT,EAAYC,MAAZ,QAA0B,mBAA1B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,WAAT,QAA8C,UAA9C;AACA,SAASC,cAAT,QAA+B,kBAA/B,C;AAEA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAG;;;;;;;;;;;;;;;;;;;;;CAA1B;AAuBA,OAAO,MAAMC,sBAAsB,GAAG,UASf,KATgB,EACrCC,SADqC,EAErCC,aAFqC,EAGrCC,UAHqC,EAIrCC,QAJqC,EAKrCC,YALqC,EAMrCC,OANqC,EAOrCC,SAPqC,EAQrCC,QAAQ,GAAG,EAR0B,EAShB;EACrB,MAAMC,YAAY,GAAGZ,cAAc,CAAC;IAClCQ,YADkC;IAElCH,aAFkC;IAGlCC,UAHkC;IAIlCC,QAJkC;IAKlCH,SALkC;IAMlCK,OANkC;IAOlCE,QAPkC;IAQlCD,SARkC,EAAD,CAAnC;;EAWA,IAAIE,YAAY,CAACC,MAAb,KAAwB,CAA5B,EAA+B;IAC7B,OAAO,cAAC,OAAD,QAAUD,YAAY,CAAC,CAAD,CAAtB,CAAP;EACD;EAED,MAAME,KAAK,GAAGF,YAAY,CAACG,GAAb,CAAiB,CAACC,IAAD,EAAOC,GAAP,KAAc;IAC3C,IAAIA,GAAG,KAAK,CAAZ,EAAe;MACb,OACE,cAAC,IAAD,CAAM,OAAN,IAAc,GAAG,EAAErB,CAAC,CAAC,SAAD,CAApB,EAAiC,GAAG,EAAEG,WAAW,CAACmB,OAAlD;MACGF,IADH,CADF;;IAKD;IAED,OACE,cAAC,IAAD,CAAM,OAAN,IACE,GAAG,EAAEpB,CAAC,CAAC,YAAD,EAAeqB,GAAG,GAAG,CAArB,CADR,EAEE,GAAG,EAAE,GAAGlB,WAAW,CAACmB,OAAO,IAAID,GAAG,GAAG,CAAC,EAFxC;IAIGD,IAJH,CADF;;EAQD,CAjBa,CAAd;EAmBA,OACE,cAAC,OAAD;EACE,cAAC,IAAD,IAAM,SAAS,EAAE,KAAjB,IAAyBF,KAAzB,CADF,CADF;;AAKD,CAjDM,C,cAAMX,sB,yCAUUH,c,oLAjCjBC,O,qLAuBOE,sB","names":["React","t","styled","Tabs","ResultTypes","useResultsPane","Wrapper","div","ResultsPaneOnDashboard","isRequest","queryFormData","queryForce","ownState","errorMessage","actions","isVisible","dataSize","resultsPanes","length","panes","map","pane","idx","Results"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/DataTablesPane/components/ResultsPaneOnDashboard.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t, styled } from '@superset-ui/core';\nimport Tabs from 'src/components/Tabs';\nimport { ResultTypes, ResultsPaneProps } from '../types';\nimport { useResultsPane } from './useResultsPane';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  .ant-tabs {\n    height: 100%;\n  }\n\n  .ant-tabs-content {\n    height: 100%;\n  }\n\n  .ant-tabs-tabpane {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .table-condensed {\n    overflow: auto;\n  }\n`;\n\nexport const ResultsPaneOnDashboard = ({\n  isRequest,\n  queryFormData,\n  queryForce,\n  ownState,\n  errorMessage,\n  actions,\n  isVisible,\n  dataSize = 50,\n}: ResultsPaneProps) => {\n  const resultsPanes = useResultsPane({\n    errorMessage,\n    queryFormData,\n    queryForce,\n    ownState,\n    isRequest,\n    actions,\n    dataSize,\n    isVisible,\n  });\n\n  if (resultsPanes.length === 1) {\n    return <Wrapper>{resultsPanes[0]}</Wrapper>;\n  }\n\n  const panes = resultsPanes.map((pane, idx) => {\n    if (idx === 0) {\n      return (\n        <Tabs.TabPane tab={t('Results')} key={ResultTypes.Results}>\n          {pane}\n        </Tabs.TabPane>\n      );\n    }\n\n    return (\n      <Tabs.TabPane\n        tab={t('Results %s', idx + 1)}\n        key={`${ResultTypes.Results} ${idx + 1}`}\n      >\n        {pane}\n      </Tabs.TabPane>\n    );\n  });\n\n  return (\n    <Wrapper>\n      <Tabs fullWidth={false}>{panes}</Tabs>\n    </Wrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}