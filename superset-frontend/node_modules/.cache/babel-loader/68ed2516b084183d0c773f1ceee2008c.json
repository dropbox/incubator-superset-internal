{"ast":null,"code":"import _filter from \"lodash/filter\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { SupersetClient, t } from '@superset-ui/core';\n\nimport { useFavoriteStatus, useListViewResource } from 'src/views/CRUD/hooks';\nimport { TableTab } from 'src/views/CRUD/types';\nimport handleResourceExport from 'src/utils/export';\nimport { useHistory } from 'react-router-dom';\nimport { getItem, LocalStorageKeys, setItem } from 'src/utils/localStorageHelpers';\nimport { LoadingCards } from 'src/pages/Home';\nimport { CardContainer, createErrorHandler, getFilterValues, PAGE_SIZE, handleDashboardDelete } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport Loading from 'src/components/Loading';\nimport DeleteModal from 'src/components/DeleteModal';\nimport PropertiesModal from 'src/dashboard/components/PropertiesModal';\nimport DashboardCard from 'src/features/dashboards/DashboardCard';\nimport EmptyState from './EmptyState';\nimport SubMenu from './SubMenu';\nimport { WelcomeTable } from './types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction DashboardTable(_ref) {let { user, addDangerToast, addSuccessToast, mine, showThumbnails, otherTabData, otherTabFilters, otherTabTitle } = _ref;\n  const history = useHistory();\n  const defaultTab = getItem(LocalStorageKeys.homepage_dashboard_filter, TableTab.Other);\n  const filteredOtherTabData = _filter(otherTabData, (obj) => !('viz_type' in obj));\n  const { state: { loading, resourceCollection: dashboards }, setResourceCollection: setDashboards, hasPerm, refreshData, fetchData } = useListViewResource('dashboard', t('dashboard'), addDangerToast, true, defaultTab === TableTab.Mine ? mine : filteredOtherTabData, [], false);\n  const dashboardIds = useMemo(() => dashboards.map((c) => c.id), [dashboards]);\n  const [saveFavoriteStatus, favoriteStatus] = useFavoriteStatus('dashboard', dashboardIds, addDangerToast);\n  const [editModal, setEditModal] = useState();\n  const [activeTab, setActiveTab] = useState(defaultTab);\n  const [preparingExport, setPreparingExport] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [dashboardToDelete, setDashboardToDelete] = useState(null);\n  const getData = (tab) => fetchData({\n    pageIndex: 0,\n    pageSize: PAGE_SIZE,\n    sortBy: [\n    {\n      id: 'changed_on_delta_humanized',\n      desc: true }],\n\n\n    filters: getFilterValues(tab, WelcomeTable.Dashboards, user, otherTabFilters) });\n\n  useEffect(() => {\n    if (loaded || activeTab === TableTab.Favorite) {\n      getData(activeTab);\n    }\n    setLoaded(true);\n  }, [activeTab]);\n  const handleBulkDashboardExport = (dashboardsToExport) => {\n    const ids = dashboardsToExport.map((_ref2) => {let { id } = _ref2;return id;});\n    handleResourceExport('dashboard', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n  const handleDashboardEdit = (edits) => SupersetClient.get({\n    endpoint: `/api/v1/dashboard/${edits.id}` }).\n  then((_ref3) => {let { json = {} } = _ref3;\n    setDashboards(dashboards.map((dashboard) => {\n      if (dashboard.id === json.id) {\n        return json.result;\n      }\n      return dashboard;\n    }));\n  }, createErrorHandler((errMsg) => addDangerToast(t('An error occurred while fetching dashboards: %s', errMsg))));\n  const menuTabs = [\n  {\n    name: TableTab.Favorite,\n    label: t('Favorite'),\n    onClick: () => {\n      setActiveTab(TableTab.Favorite);\n      setItem(LocalStorageKeys.homepage_dashboard_filter, TableTab.Favorite);\n    } },\n\n  {\n    name: TableTab.Mine,\n    label: t('Mine'),\n    onClick: () => {\n      setActiveTab(TableTab.Mine);\n      setItem(LocalStorageKeys.homepage_dashboard_filter, TableTab.Mine);\n    } }];\n\n\n  if (otherTabData) {\n    menuTabs.push({\n      name: TableTab.Other,\n      label: otherTabTitle,\n      onClick: () => {\n        setActiveTab(TableTab.Other);\n        setItem(LocalStorageKeys.homepage_dashboard_filter, TableTab.Other);\n      } });\n\n  }\n  if (loading)\n  return ___EmotionJSX(LoadingCards, { cover: showThumbnails });\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, { activeChild: activeTab, tabs: menuTabs, buttons: [\n    {\n      name: ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }),\n      t('Dashboard')),\n\n      buttonStyle: 'tertiary',\n      onClick: () => {\n        window.location.assign('/dashboard/new');\n      } },\n\n    {\n      name: t('View All Â»'),\n      buttonStyle: 'link',\n      onClick: () => {\n        const target = activeTab === TableTab.Favorite ?\n        `/dashboard/list/?filters=(favorite:(label:${t('Yes')},value:!t))` :\n        '/dashboard/list/';\n        history.push(target);\n      } }] }),\n\n\n  editModal && ___EmotionJSX(PropertiesModal, { dashboardId: editModal == null ? void 0 : editModal.id, show: true, onHide: () => setEditModal(undefined), onSubmit: handleDashboardEdit }),\n  dashboardToDelete && ___EmotionJSX(DeleteModal, { description: ___EmotionJSX(React.Fragment, null,\n    t('Are you sure you want to delete'), ' ',\n    ___EmotionJSX(\"b\", null, dashboardToDelete.dashboard_title), \"?\"),\n    onConfirm: () => {\n      handleDashboardDelete(dashboardToDelete, refreshData, addSuccessToast, addDangerToast, activeTab, user == null ? void 0 : user.userId);\n      setDashboardToDelete(null);\n    }, onHide: () => setDashboardToDelete(null), open: !!dashboardToDelete, title: t('Please confirm') }),\n  dashboards.length > 0 && ___EmotionJSX(CardContainer, { showThumbnails: showThumbnails },\n  dashboards.map((e) => ___EmotionJSX(DashboardCard, { key: e.id, dashboard: e, hasPerm: hasPerm, bulkSelectEnabled: false, showThumbnails: showThumbnails, userId: user == null ? void 0 : user.userId, loading: loading, openDashboardEditModal: (dashboard) => setEditModal(dashboard), saveFavoriteStatus: saveFavoriteStatus, favoriteStatus: favoriteStatus[e.id], handleBulkDashboardExport: handleBulkDashboardExport, onDelete: (dashboard) => setDashboardToDelete(dashboard) }))),\n\n  dashboards.length === 0 && ___EmotionJSX(EmptyState, { tableName: WelcomeTable.Dashboards, tab: activeTab }),\n  preparingExport && ___EmotionJSX(Loading, null));\n\n}__signature__(DashboardTable, \"useHistory{history}\\nuseListViewResource{{ state: { loading, resourceCollection: dashboards }, setResourceCollection: setDashboards, hasPerm, refreshData, fetchData, }}\\nuseMemo{dashboardIds}\\nuseFavoriteStatus{[saveFavoriteStatus, favoriteStatus]}\\nuseState{[editModal, setEditModal]}\\nuseState{[activeTab, setActiveTab](defaultTab)}\\nuseState{[preparingExport, setPreparingExport](false)}\\nuseState{[loaded, setLoaded](false)}\\nuseState{[dashboardToDelete, setDashboardToDelete](null)}\\nuseEffect{}\", () => [useHistory, useListViewResource, useFavoriteStatus]);const _default =\nwithToasts(DashboardTable);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DashboardTable, \"DashboardTable\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/home/DashboardTable.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/home/DashboardTable.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useEffect","useMemo","useState","SupersetClient","t","useFavoriteStatus","useListViewResource","TableTab","handleResourceExport","useHistory","getItem","LocalStorageKeys","setItem","LoadingCards","CardContainer","createErrorHandler","getFilterValues","PAGE_SIZE","handleDashboardDelete","withToasts","Loading","DeleteModal","PropertiesModal","DashboardCard","EmptyState","SubMenu","WelcomeTable","DashboardTable","user","addDangerToast","addSuccessToast","mine","showThumbnails","otherTabData","otherTabFilters","otherTabTitle","history","defaultTab","homepage_dashboard_filter","Other","filteredOtherTabData","obj","state","loading","resourceCollection","dashboards","setResourceCollection","setDashboards","hasPerm","refreshData","fetchData","Mine","dashboardIds","map","c","id","saveFavoriteStatus","favoriteStatus","editModal","setEditModal","activeTab","setActiveTab","preparingExport","setPreparingExport","loaded","setLoaded","dashboardToDelete","setDashboardToDelete","getData","tab","pageIndex","pageSize","sortBy","desc","filters","Dashboards","Favorite","handleBulkDashboardExport","dashboardsToExport","ids","handleDashboardEdit","edits","get","endpoint","then","json","dashboard","result","errMsg","menuTabs","name","label","onClick","push","buttonStyle","window","location","assign","target","undefined","dashboard_title","userId","length","e"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/home/DashboardTable.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { SupersetClient, t } from '@superset-ui/core';\nimport { filter } from 'lodash';\nimport { useFavoriteStatus, useListViewResource } from 'src/views/CRUD/hooks';\nimport { Dashboard, DashboardTableProps, TableTab } from 'src/views/CRUD/types';\nimport handleResourceExport from 'src/utils/export';\nimport { useHistory } from 'react-router-dom';\nimport {\n  getItem,\n  LocalStorageKeys,\n  setItem,\n} from 'src/utils/localStorageHelpers';\nimport { LoadingCards } from 'src/pages/Home';\nimport {\n  CardContainer,\n  createErrorHandler,\n  getFilterValues,\n  PAGE_SIZE,\n  handleDashboardDelete,\n} from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport Loading from 'src/components/Loading';\nimport DeleteModal from 'src/components/DeleteModal';\nimport PropertiesModal from 'src/dashboard/components/PropertiesModal';\nimport DashboardCard from 'src/features/dashboards/DashboardCard';\nimport EmptyState from './EmptyState';\nimport SubMenu from './SubMenu';\nimport { WelcomeTable } from './types';\n\nfunction DashboardTable({\n  user,\n  addDangerToast,\n  addSuccessToast,\n  mine,\n  showThumbnails,\n  otherTabData,\n  otherTabFilters,\n  otherTabTitle,\n}: DashboardTableProps) {\n  const history = useHistory();\n  const defaultTab = getItem(\n    LocalStorageKeys.homepage_dashboard_filter,\n    TableTab.Other,\n  );\n\n  const filteredOtherTabData = filter(\n    otherTabData,\n    obj => !('viz_type' in obj),\n  );\n\n  const {\n    state: { loading, resourceCollection: dashboards },\n    setResourceCollection: setDashboards,\n    hasPerm,\n    refreshData,\n    fetchData,\n  } = useListViewResource<Dashboard>(\n    'dashboard',\n    t('dashboard'),\n    addDangerToast,\n    true,\n    defaultTab === TableTab.Mine ? mine : filteredOtherTabData,\n    [],\n    false,\n  );\n  const dashboardIds = useMemo(() => dashboards.map(c => c.id), [dashboards]);\n  const [saveFavoriteStatus, favoriteStatus] = useFavoriteStatus(\n    'dashboard',\n    dashboardIds,\n    addDangerToast,\n  );\n\n  const [editModal, setEditModal] = useState<Dashboard>();\n  const [activeTab, setActiveTab] = useState(defaultTab);\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n  const [loaded, setLoaded] = useState<boolean>(false);\n  const [dashboardToDelete, setDashboardToDelete] = useState<Dashboard | null>(\n    null,\n  );\n\n  const getData = (tab: TableTab) =>\n    fetchData({\n      pageIndex: 0,\n      pageSize: PAGE_SIZE,\n      sortBy: [\n        {\n          id: 'changed_on_delta_humanized',\n          desc: true,\n        },\n      ],\n      filters: getFilterValues(\n        tab,\n        WelcomeTable.Dashboards,\n        user,\n        otherTabFilters,\n      ),\n    });\n\n  useEffect(() => {\n    if (loaded || activeTab === TableTab.Favorite) {\n      getData(activeTab);\n    }\n    setLoaded(true);\n  }, [activeTab]);\n\n  const handleBulkDashboardExport = (dashboardsToExport: Dashboard[]) => {\n    const ids = dashboardsToExport.map(({ id }) => id);\n    handleResourceExport('dashboard', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n\n  const handleDashboardEdit = (edits: Dashboard) =>\n    SupersetClient.get({\n      endpoint: `/api/v1/dashboard/${edits.id}`,\n    }).then(\n      ({ json = {} }) => {\n        setDashboards(\n          dashboards.map(dashboard => {\n            if (dashboard.id === json.id) {\n              return json.result;\n            }\n            return dashboard;\n          }),\n        );\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('An error occurred while fetching dashboards: %s', errMsg),\n        ),\n      ),\n    );\n\n  const menuTabs = [\n    {\n      name: TableTab.Favorite,\n      label: t('Favorite'),\n      onClick: () => {\n        setActiveTab(TableTab.Favorite);\n        setItem(LocalStorageKeys.homepage_dashboard_filter, TableTab.Favorite);\n      },\n    },\n    {\n      name: TableTab.Mine,\n      label: t('Mine'),\n      onClick: () => {\n        setActiveTab(TableTab.Mine);\n        setItem(LocalStorageKeys.homepage_dashboard_filter, TableTab.Mine);\n      },\n    },\n  ];\n\n  if (otherTabData) {\n    menuTabs.push({\n      name: TableTab.Other,\n      label: otherTabTitle,\n      onClick: () => {\n        setActiveTab(TableTab.Other);\n        setItem(LocalStorageKeys.homepage_dashboard_filter, TableTab.Other);\n      },\n    });\n  }\n\n  if (loading) return <LoadingCards cover={showThumbnails} />;\n  return (\n    <>\n      <SubMenu\n        activeChild={activeTab}\n        tabs={menuTabs}\n        buttons={[\n          {\n            name: (\n              <>\n                <i className=\"fa fa-plus\" />\n                {t('Dashboard')}\n              </>\n            ),\n            buttonStyle: 'tertiary',\n            onClick: () => {\n              window.location.assign('/dashboard/new');\n            },\n          },\n          {\n            name: t('View All Â»'),\n            buttonStyle: 'link',\n            onClick: () => {\n              const target =\n                activeTab === TableTab.Favorite\n                  ? `/dashboard/list/?filters=(favorite:(label:${t(\n                      'Yes',\n                    )},value:!t))`\n                  : '/dashboard/list/';\n              history.push(target);\n            },\n          },\n        ]}\n      />\n      {editModal && (\n        <PropertiesModal\n          dashboardId={editModal?.id}\n          show\n          onHide={() => setEditModal(undefined)}\n          onSubmit={handleDashboardEdit}\n        />\n      )}\n      {dashboardToDelete && (\n        <DeleteModal\n          description={\n            <>\n              {t('Are you sure you want to delete')}{' '}\n              <b>{dashboardToDelete.dashboard_title}</b>?\n            </>\n          }\n          onConfirm={() => {\n            handleDashboardDelete(\n              dashboardToDelete,\n              refreshData,\n              addSuccessToast,\n              addDangerToast,\n              activeTab,\n              user?.userId,\n            );\n            setDashboardToDelete(null);\n          }}\n          onHide={() => setDashboardToDelete(null)}\n          open={!!dashboardToDelete}\n          title={t('Please confirm')}\n        />\n      )}\n      {dashboards.length > 0 && (\n        <CardContainer showThumbnails={showThumbnails}>\n          {dashboards.map(e => (\n            <DashboardCard\n              key={e.id}\n              dashboard={e}\n              hasPerm={hasPerm}\n              bulkSelectEnabled={false}\n              showThumbnails={showThumbnails}\n              userId={user?.userId}\n              loading={loading}\n              openDashboardEditModal={(dashboard: Dashboard) =>\n                setEditModal(dashboard)\n              }\n              saveFavoriteStatus={saveFavoriteStatus}\n              favoriteStatus={favoriteStatus[e.id]}\n              handleBulkDashboardExport={handleBulkDashboardExport}\n              onDelete={dashboard => setDashboardToDelete(dashboard)}\n            />\n          ))}\n        </CardContainer>\n      )}\n      {dashboards.length === 0 && (\n        <EmptyState tableName={WelcomeTable.Dashboards} tab={activeTab} />\n      )}\n      {preparingExport && <Loading />}\n    </>\n  );\n}\n\nexport default withToasts(DashboardTable);\n"]},"metadata":{},"sourceType":"module"}