{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { t, styled, useTheme } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport { DropdownButton } from 'src/components/DropdownButton';\nimport { detectOS } from 'src/utils/common';\nimport useQueryEditor from 'src/SqlLab/hooks/useQueryEditor';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst buildText = (shouldShowStopButton, selectedText) => {\n  if (shouldShowStopButton) {\n    return ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(\"i\", { className: \"fa fa-stop\" }), \" \", t('Stop'));\n\n  }\n  if (selectedText) {\n    return t('Run selection');\n  }\n  return t('Run');\n};\nconst onClick = function (shouldShowStopButton, allowAsync, runQuery, stopQuery) {if (runQuery === void 0) {runQuery = () => undefined;}if (stopQuery === void 0) {stopQuery = () => {};}\n  if (shouldShowStopButton)\n  return stopQuery();\n  if (allowAsync) {\n    return runQuery(true);\n  }\n  return runQuery(false);\n};\nconst StyledButton = styled.span`\n  button {\n    line-height: 13px;\n    // this is to over ride a previous transition built into the component\n    transition: background-color 0ms;\n    &:last-of-type {\n      margin-right: ${(_ref) => {let { theme } = _ref;return theme.gridUnit * 2;}}px;\n    }\n    span[name='caret-down'] {\n      display: flex;\n      margin-left: ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit * 1;}}px;\n    }\n  }\n`;\nconst RunQueryActionButton = (_ref3) => {let { allowAsync = false, queryEditorId, queryState, overlayCreateAsMenu, runQuery, stopQuery } = _ref3;\n  const theme = useTheme();\n  const userOS = detectOS();\n  const { selectedText, sql } = useQueryEditor(queryEditorId, [\n  'selectedText',\n  'sql']);\n\n  const shouldShowStopBtn = !!queryState && ['running', 'pending'].indexOf(queryState) > -1;\n  const ButtonComponent = overlayCreateAsMenu ?\n  DropdownButton :\n  Button;\n  const sqlContent = selectedText || sql || '';\n  const isDisabled = !sqlContent ||\n  !sqlContent.replace(/(\\/\\*[^*]*\\*\\/)|(\\/\\/[^*]*)|(--[^.].*)/gm, '').trim();\n  const stopButtonTooltipText = useMemo(() => userOS === 'MacOS' ?\n  t('Stop running (Ctrl + x)') :\n  t('Stop running (Ctrl + e)'), [userOS]);\n  return ___EmotionJSX(StyledButton, null,\n  ___EmotionJSX(ButtonComponent, _extends({ onClick: () => onClick(shouldShowStopBtn, allowAsync, runQuery, stopQuery), disabled: isDisabled, tooltip: !isDisabled && (\n    shouldShowStopBtn ?\n    stopButtonTooltipText :\n    t('Run query (Ctrl + Return)')), cta: true }, overlayCreateAsMenu ?\n  {\n    overlay: overlayCreateAsMenu,\n    icon: ___EmotionJSX(Icons.CaretDown, { iconColor: isDisabled ?\n      theme.colors.grayscale.base :\n      theme.colors.grayscale.light5, name: \"caret-down\" }),\n    trigger: 'click' } :\n\n  {\n    buttonStyle: shouldShowStopBtn ? 'warning' : 'primary' }),\n\n  buildText(shouldShowStopBtn, selectedText)));\n\n\n};\nexport default RunQueryActionButton;","map":{"version":3,"mappings":"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","names":["React","useMemo","t","styled","useTheme","Button","Icons","DropdownButton","detectOS","useQueryEditor","buildText","shouldShowStopButton","selectedText","onClick","allowAsync","runQuery","stopQuery","undefined","StyledButton","span","theme","gridUnit","RunQueryActionButton","queryEditorId","queryState","overlayCreateAsMenu","userOS","sql","shouldShowStopBtn","indexOf","ButtonComponent","sqlContent","isDisabled","replace","trim","stopButtonTooltipText","overlay","icon","colors","grayscale","base","light5","trigger","buttonStyle"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/SqlLab/components/RunQueryActionButton/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { t, styled, useTheme } from '@superset-ui/core';\n\nimport { Menu } from 'src/components/Menu';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport { DropdownButton } from 'src/components/DropdownButton';\nimport { detectOS } from 'src/utils/common';\nimport { QueryButtonProps } from 'src/SqlLab/types';\nimport useQueryEditor from 'src/SqlLab/hooks/useQueryEditor';\n\nexport interface RunQueryActionButtonProps {\n  queryEditorId: string;\n  allowAsync: boolean;\n  queryState?: string;\n  runQuery: (c?: boolean) => void;\n  stopQuery: () => void;\n  overlayCreateAsMenu: typeof Menu | null;\n}\n\nconst buildText = (\n  shouldShowStopButton: boolean,\n  selectedText: string | undefined,\n): string | JSX.Element => {\n  if (shouldShowStopButton) {\n    return (\n      <>\n        <i className=\"fa fa-stop\" /> {t('Stop')}\n      </>\n    );\n  }\n  if (selectedText) {\n    return t('Run selection');\n  }\n  return t('Run');\n};\n\nconst onClick = (\n  shouldShowStopButton: boolean,\n  allowAsync: boolean,\n  runQuery: (c?: boolean) => void = () => undefined,\n  stopQuery = () => {},\n): void => {\n  if (shouldShowStopButton) return stopQuery();\n  if (allowAsync) {\n    return runQuery(true);\n  }\n  return runQuery(false);\n};\n\nconst StyledButton = styled.span`\n  button {\n    line-height: 13px;\n    // this is to over ride a previous transition built into the component\n    transition: background-color 0ms;\n    &:last-of-type {\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n    span[name='caret-down'] {\n      display: flex;\n      margin-left: ${({ theme }) => theme.gridUnit * 1}px;\n    }\n  }\n`;\n\nconst RunQueryActionButton = ({\n  allowAsync = false,\n  queryEditorId,\n  queryState,\n  overlayCreateAsMenu,\n  runQuery,\n  stopQuery,\n}: RunQueryActionButtonProps) => {\n  const theme = useTheme();\n  const userOS = detectOS();\n\n  const { selectedText, sql } = useQueryEditor(queryEditorId, [\n    'selectedText',\n    'sql',\n  ]);\n\n  const shouldShowStopBtn =\n    !!queryState && ['running', 'pending'].indexOf(queryState) > -1;\n\n  const ButtonComponent: React.FC<QueryButtonProps> = overlayCreateAsMenu\n    ? (DropdownButton as React.FC)\n    : Button;\n\n  const sqlContent = selectedText || sql || '';\n  const isDisabled =\n    !sqlContent ||\n    !sqlContent.replace(/(\\/\\*[^*]*\\*\\/)|(\\/\\/[^*]*)|(--[^.].*)/gm, '').trim();\n\n  const stopButtonTooltipText = useMemo(\n    () =>\n      userOS === 'MacOS'\n        ? t('Stop running (Ctrl + x)')\n        : t('Stop running (Ctrl + e)'),\n    [userOS],\n  );\n\n  return (\n    <StyledButton>\n      <ButtonComponent\n        data-test=\"run-query-action\"\n        onClick={() =>\n          onClick(shouldShowStopBtn, allowAsync, runQuery, stopQuery)\n        }\n        disabled={isDisabled}\n        tooltip={\n          (!isDisabled &&\n            (shouldShowStopBtn\n              ? stopButtonTooltipText\n              : t('Run query (Ctrl + Return)'))) as string\n        }\n        cta\n        {...(overlayCreateAsMenu\n          ? {\n              overlay: overlayCreateAsMenu,\n              icon: (\n                <Icons.CaretDown\n                  iconColor={\n                    isDisabled\n                      ? theme.colors.grayscale.base\n                      : theme.colors.grayscale.light5\n                  }\n                  name=\"caret-down\"\n                />\n              ),\n              trigger: 'click',\n            }\n          : {\n              buttonStyle: shouldShowStopBtn ? 'warning' : 'primary',\n            })}\n      >\n        {buildText(shouldShowStopBtn, selectedText)}\n      </ButtonComponent>\n    </StyledButton>\n  );\n};\n\nexport default RunQueryActionButton;\n"]},"metadata":{},"sourceType":"module"}