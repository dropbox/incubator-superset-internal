{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport SupersetClientClass from './SupersetClientClass';\n// this is local to this file, don't expose it\nlet singletonClient;\nfunction getInstance() {\n  if (!singletonClient) {\n    throw new Error('You must call SupersetClient.configure(...) before calling other methods');\n  }\n  return singletonClient;\n}\nconst SupersetClient = {\n  configure: (config) => {\n    singletonClient = new SupersetClientClass(config);\n    return SupersetClient;\n  },\n  reset: () => {\n    singletonClient = undefined;\n  },\n  delete: (request) => getInstance().delete(request),\n  get: (request) => getInstance().get(request),\n  init: (force) => getInstance().init(force),\n  isAuthenticated: () => getInstance().isAuthenticated(),\n  getGuestToken: () => getInstance().getGuestToken(),\n  post: (request) => getInstance().post(request),\n  postForm: function () {return getInstance().postForm(...arguments);},\n  put: (request) => getInstance().put(request),\n  reAuthenticate: () => getInstance().reAuthenticate(),\n  request: (request) => getInstance().request(request) };\n\nexport default SupersetClient;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,mBAAP,MAAgC,uBAAhC;AAGA;AACA,IAAIC,eAAJ;AAEA,SAASC,WAAT,GAAoB;EAClB,IAAI,CAACD,eAAL,EAAsB;IACpB,MAAM,IAAIE,KAAJ,CACJ,0EADI,CAAN;EAGD;EACD,OAAOF,eAAP;AACD;AAED,MAAMG,cAAc,GAA4B;EAC9CC,SAAS,EAAE,OAAM,KAAG;IAClBJ,eAAe,GAAG,IAAID,mBAAJ,CAAwBM,MAAxB,CAAlB;IACA,OAAOF,cAAP;EACD,CAJ6C;EAK9CG,KAAK,EAAE,MAAK;IACVN,eAAe,GAAGO,SAAlB;EACD,CAP6C;EAQ9CC,MAAM,EAAE,QAAO,KAAIP,WAAW,GAAGO,MAAd,CAAqBC,OAArB,CAR2B;EAS9CC,GAAG,EAAE,QAAO,KAAIT,WAAW,GAAGS,GAAd,CAAkBD,OAAlB,CAT8B;EAU9CE,IAAI,EAAE,MAAK,KAAIV,WAAW,GAAGU,IAAd,CAAmBC,KAAnB,CAV+B;EAW9CC,eAAe,EAAE,MAAMZ,WAAW,GAAGY,eAAd,EAXuB;EAY9CC,aAAa,EAAE,MAAMb,WAAW,GAAGa,aAAd,EAZyB;EAa9CC,IAAI,EAAE,QAAO,KAAId,WAAW,GAAGc,IAAd,CAAmBN,OAAnB,CAb6B;EAc9CO,QAAQ,EAAE,oBAAaf,WAAW,GAAGe,QAAd,CAAuB,YAAvB,CAAb,EAdoC;EAe9CC,GAAG,EAAE,QAAO,KAAIhB,WAAW,GAAGgB,GAAd,CAAkBR,OAAlB,CAf8B;EAgB9CS,cAAc,EAAE,MAAMjB,WAAW,GAAGiB,cAAd,EAhBwB;EAiB9CT,OAAO,EAAE,QAAO,KAAIR,WAAW,GAAGQ,OAAd,CAAsBA,OAAtB,CAjB0B,EAAhD;;AAoBA,eAAeN,cAAf","names":["SupersetClientClass","singletonClient","getInstance","Error","SupersetClient","configure","config","reset","undefined","delete","request","get","init","force","isAuthenticated","getGuestToken","post","postForm","put","reAuthenticate"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/connection/SupersetClient.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport SupersetClientClass from './SupersetClientClass';\nimport { SupersetClientInterface } from './types';\n\n// this is local to this file, don't expose it\nlet singletonClient: SupersetClientClass | undefined;\n\nfunction getInstance(): SupersetClientClass {\n  if (!singletonClient) {\n    throw new Error(\n      'You must call SupersetClient.configure(...) before calling other methods',\n    );\n  }\n  return singletonClient;\n}\n\nconst SupersetClient: SupersetClientInterface = {\n  configure: config => {\n    singletonClient = new SupersetClientClass(config);\n    return SupersetClient;\n  },\n  reset: () => {\n    singletonClient = undefined;\n  },\n  delete: request => getInstance().delete(request),\n  get: request => getInstance().get(request),\n  init: force => getInstance().init(force),\n  isAuthenticated: () => getInstance().isAuthenticated(),\n  getGuestToken: () => getInstance().getGuestToken(),\n  post: request => getInstance().post(request),\n  postForm: (...args) => getInstance().postForm(...args),\n  put: request => getInstance().put(request),\n  reAuthenticate: () => getInstance().reAuthenticate(),\n  request: request => getInstance().request(request),\n};\n\nexport default SupersetClient;\n"]},"metadata":{},"sourceType":"module"}