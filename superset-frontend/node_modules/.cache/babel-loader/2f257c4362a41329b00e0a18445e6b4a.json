{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { sections } from '@superset-ui/chart-controls';\nimport { xAxisFormat, yAxis2Format, showLegend, yAxisBounds, yAxisShowMinmax, yAxis2Bounds, yAxis2ShowMinmax } from '../NVD3Controls';\nconst config = {\n  controlPanelSections: [\n  sections.legacyTimeseriesTime,\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [['color_scheme'], [showLegend], [xAxisFormat]] },\n\n  {\n    label: t('Y Axis 1'),\n    expanded: true,\n    controlSetRows: [\n    ['metric'],\n    ['y_axis_format'],\n    [yAxisShowMinmax],\n    [yAxisBounds]] },\n\n\n  {\n    label: t('Y Axis 2'),\n    expanded: true,\n    controlSetRows: [\n    ['metric_2'],\n    [yAxis2Format],\n    [yAxis2ShowMinmax],\n    [yAxis2Bounds]] },\n\n\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [['adhoc_filters']] },\n\n  sections.annotations],\n\n  controlOverrides: {\n    metric: {\n      label: t('Left Axis Metric'),\n      description: t('Choose a metric for left axis') },\n\n    y_axis_format: {\n      label: t('Left Axis Format') } } };const _default =\n\n\n\nconfig;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(config, \"config\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/DualLine/controlPanel.ts\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/DualLine/controlPanel.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,CAAT,QAAkB,mBAAlB;AACA,SAA6BC,QAA7B,QAA6C,6BAA7C;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,eALF,EAMEC,YANF,EAOEC,gBAPF,QAQO,iBARP;AAUA,MAAMC,MAAM,GAAuB;EACjCC,oBAAoB,EAAE;EACpBT,QAAQ,CAACU,oBADW;EAEpB;IACEC,KAAK,EAAEZ,CAAC,CAAC,eAAD,CADV;IAEEa,QAAQ,EAAE,IAFZ;IAGEC,cAAc,EAAE,CAAC,CAAC,cAAD,CAAD,EAAmB,CAACV,UAAD,CAAnB,EAAiC,CAACF,WAAD,CAAjC,CAHlB,EAFoB;;EAOpB;IACEU,KAAK,EAAEZ,CAAC,CAAC,UAAD,CADV;IAEEa,QAAQ,EAAE,IAFZ;IAGEC,cAAc,EAAE;IACd,CAAC,QAAD,CADc;IAEd,CAAC,eAAD,CAFc;IAGd,CAACR,eAAD,CAHc;IAId,CAACD,WAAD,CAJc,CAHlB,EAPoB;;;EAiBpB;IACEO,KAAK,EAAEZ,CAAC,CAAC,UAAD,CADV;IAEEa,QAAQ,EAAE,IAFZ;IAGEC,cAAc,EAAE;IACd,CAAC,UAAD,CADc;IAEd,CAACX,YAAD,CAFc;IAGd,CAACK,gBAAD,CAHc;IAId,CAACD,YAAD,CAJc,CAHlB,EAjBoB;;;EA2BpB;IACEK,KAAK,EAAEZ,CAAC,CAAC,OAAD,CADV;IAEEa,QAAQ,EAAE,IAFZ;IAGEC,cAAc,EAAE,CAAC,CAAC,eAAD,CAAD,CAHlB,EA3BoB;;EAgCpBb,QAAQ,CAACc,WAhCW,CADW;;EAmCjCC,gBAAgB,EAAE;IAChBC,MAAM,EAAE;MACNL,KAAK,EAAEZ,CAAC,CAAC,kBAAD,CADF;MAENkB,WAAW,EAAElB,CAAC,CAAC,+BAAD,CAFR,EADQ;;IAKhBmB,aAAa,EAAE;MACbP,KAAK,EAAEZ,CAAC,CAAC,kBAAD,CADK,EALC,EAnCe,EAAnC,C;;;;AA8CeS,M,CAAf,wB,iLA9CMA,M","names":["t","sections","xAxisFormat","yAxis2Format","showLegend","yAxisBounds","yAxisShowMinmax","yAxis2Bounds","yAxis2ShowMinmax","config","controlPanelSections","legacyTimeseriesTime","label","expanded","controlSetRows","annotations","controlOverrides","metric","description","y_axis_format"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/DualLine/controlPanel.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { ControlPanelConfig, sections } from '@superset-ui/chart-controls';\nimport {\n  xAxisFormat,\n  yAxis2Format,\n  showLegend,\n  yAxisBounds,\n  yAxisShowMinmax,\n  yAxis2Bounds,\n  yAxis2ShowMinmax,\n} from '../NVD3Controls';\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.legacyTimeseriesTime,\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [['color_scheme'], [showLegend], [xAxisFormat]],\n    },\n    {\n      label: t('Y Axis 1'),\n      expanded: true,\n      controlSetRows: [\n        ['metric'],\n        ['y_axis_format'],\n        [yAxisShowMinmax],\n        [yAxisBounds],\n      ],\n    },\n    {\n      label: t('Y Axis 2'),\n      expanded: true,\n      controlSetRows: [\n        ['metric_2'],\n        [yAxis2Format],\n        [yAxis2ShowMinmax],\n        [yAxis2Bounds],\n      ],\n    },\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [['adhoc_filters']],\n    },\n    sections.annotations,\n  ],\n  controlOverrides: {\n    metric: {\n      label: t('Left Axis Metric'),\n      description: t('Choose a metric for left axis'),\n    },\n    y_axis_format: {\n      label: t('Left Axis Format'),\n    },\n  },\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}