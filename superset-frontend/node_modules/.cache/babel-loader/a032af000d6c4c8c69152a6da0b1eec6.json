{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Button from 'src/components/Button';\nimport { Empty } from 'src/components';\nimport { TableTab } from 'src/views/CRUD/types';\nimport { styled, t } from '@superset-ui/core';\nimport { WelcomeTable } from './types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst welcomeTableLabels = {\n  [WelcomeTable.Charts]: t('charts'),\n  [WelcomeTable.Dashboards]: t('dashboards'),\n  [WelcomeTable.Recents]: t('recents'),\n  [WelcomeTable.SavedQueries]: t('saved queries') };\n\nconst welcomeTableEmpty = {\n  [WelcomeTable.Charts]: t('No charts yet'),\n  [WelcomeTable.Dashboards]: t('No dashboards yet'),\n  [WelcomeTable.Recents]: t('No recents yet'),\n  [WelcomeTable.SavedQueries]: t('No saved queries yet') };\n\nconst welcomeTableWillAppear = {\n  [WelcomeTable.Charts]: (other) => t('%(other)s charts will appear here', { other }),\n  [WelcomeTable.Dashboards]: (other) => t('%(other)s dashboards will appear here', { other }),\n  [WelcomeTable.Recents]: (other) => t('%(other)s recents will appear here', { other }),\n  [WelcomeTable.SavedQueries]: (other) => t('%(other)s saved queries will appear here', { other }) };\n\nconst EmptyContainer = styled.div`\n  min-height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\nconst ButtonContainer = styled.div`\n  Button {\n    svg {\n      color: ${(_ref) => {let { theme } = _ref;return theme.colors.grayscale.light5;}};\n    }\n  }\n`;\nexport default function EmptyState(_ref2) {let { tableName, tab, otherTabTitle } = _ref2;\n  const mineRedirects = {\n    [WelcomeTable.Charts]: '/chart/add',\n    [WelcomeTable.Dashboards]: '/dashboard/new',\n    [WelcomeTable.SavedQueries]: '/superset/sqllab?new=true' };\n\n  const favRedirects = {\n    [WelcomeTable.Charts]: '/chart/list',\n    [WelcomeTable.Dashboards]: '/dashboard/list/',\n    [WelcomeTable.SavedQueries]: '/savedqueryview/list/' };\n\n  const tableIcon = {\n    [WelcomeTable.Charts]: 'empty-charts.svg',\n    [WelcomeTable.Dashboards]: 'empty-dashboard.svg',\n    [WelcomeTable.Recents]: 'union.svg',\n    [WelcomeTable.SavedQueries]: 'empty-queries.svg' };\n\n  const mine = ___EmotionJSX(\"span\", null, welcomeTableEmpty[tableName]);\n  const recent = ___EmotionJSX(\"span\", { className: \"no-recents\" },\n  (() => {\n    if (tab === TableTab.Viewed) {\n      return t(`Recently viewed charts, dashboards, and saved queries will appear here`);\n    }\n    if (tab === TableTab.Created) {\n      return t('Recently created charts, dashboards, and saved queries will appear here');\n    }\n    if (tab === TableTab.Other) {\n      const other = otherTabTitle || t('Other');\n      return welcomeTableWillAppear[tableName](other);\n    }\n    if (tab === TableTab.Edited) {\n      return t(`Recently edited charts, dashboards, and saved queries will appear here`);\n    }\n    return null;\n  })());\n\n  // Mine and Recent Activity(all tabs) tab empty state\n  if (tab === TableTab.Mine ||\n  tableName === WelcomeTable.Recents ||\n  tab === TableTab.Other) {\n    return ___EmotionJSX(EmptyContainer, null,\n    ___EmotionJSX(Empty, { image: `/static/assets/images/${tableIcon[tableName]}`, description: tableName === WelcomeTable.Recents || tab === TableTab.Other ?\n      recent :\n      mine },\n    tableName !== WelcomeTable.Recents && ___EmotionJSX(ButtonContainer, null,\n    ___EmotionJSX(Button, { buttonStyle: \"primary\", onClick: () => {\n        window.location.href = mineRedirects[tableName];\n      } },\n    ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }),\n    tableName === WelcomeTable.SavedQueries ?\n    t('SQL query') :\n    tableName.\n    split('').\n    slice(0, tableName.length - 1).\n    join('')))));\n\n\n\n\n  }\n  // Favorite tab empty state\n  return ___EmotionJSX(EmptyContainer, null,\n  ___EmotionJSX(Empty, { image: \"/static/assets/images/star-circle.svg\", description: ___EmotionJSX(\"span\", { className: \"no-favorites\" },\n    t(\"You don't have any favorites yet!\")) },\n\n  ___EmotionJSX(Button, { buttonStyle: \"primary\", onClick: () => {\n      window.location.href = favRedirects[tableName];\n    } },\n  t('See all %(tableName)s', {\n    tableName: tableName === WelcomeTable.SavedQueries ?\n    t('SQL Lab queries') :\n    welcomeTableLabels[tableName] }))));\n\n\n\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(welcomeTableLabels, \"welcomeTableLabels\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/home/EmptyState.tsx\");reactHotLoader.register(welcomeTableEmpty, \"welcomeTableEmpty\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/home/EmptyState.tsx\");reactHotLoader.register(welcomeTableWillAppear, \"welcomeTableWillAppear\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/home/EmptyState.tsx\");reactHotLoader.register(EmptyContainer, \"EmptyContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/home/EmptyState.tsx\");reactHotLoader.register(ButtonContainer, \"ButtonContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/home/EmptyState.tsx\");reactHotLoader.register(EmptyState, \"EmptyState\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/home/EmptyState.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","Button","Empty","TableTab","styled","t","WelcomeTable","welcomeTableLabels","Charts","Dashboards","Recents","SavedQueries","welcomeTableEmpty","welcomeTableWillAppear","other","EmptyContainer","div","ButtonContainer","theme","colors","grayscale","light5","EmptyState","tableName","tab","otherTabTitle","mineRedirects","favRedirects","tableIcon","mine","recent","Viewed","Created","Other","Edited","Mine","window","location","href","split","slice","length","join"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/home/EmptyState.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Button from 'src/components/Button';\nimport { Empty } from 'src/components';\nimport { TableTab } from 'src/views/CRUD/types';\nimport { styled, t } from '@superset-ui/core';\nimport { WelcomeTable } from './types';\n\nconst welcomeTableLabels: Record<WelcomeTable, string> = {\n  [WelcomeTable.Charts]: t('charts'),\n  [WelcomeTable.Dashboards]: t('dashboards'),\n  [WelcomeTable.Recents]: t('recents'),\n  [WelcomeTable.SavedQueries]: t('saved queries'),\n};\n\nconst welcomeTableEmpty: Record<WelcomeTable, string> = {\n  [WelcomeTable.Charts]: t('No charts yet'),\n  [WelcomeTable.Dashboards]: t('No dashboards yet'),\n  [WelcomeTable.Recents]: t('No recents yet'),\n  [WelcomeTable.SavedQueries]: t('No saved queries yet'),\n};\n\nconst welcomeTableWillAppear: Record<WelcomeTable, (other: string) => string> =\n  {\n    [WelcomeTable.Charts]: (other: string) =>\n      t('%(other)s charts will appear here', { other }),\n    [WelcomeTable.Dashboards]: (other: string) =>\n      t('%(other)s dashboards will appear here', { other }),\n    [WelcomeTable.Recents]: (other: string) =>\n      t('%(other)s recents will appear here', { other }),\n    [WelcomeTable.SavedQueries]: (other: string) =>\n      t('%(other)s saved queries will appear here', { other }),\n  };\n\nexport interface EmptyStateProps {\n  tableName: WelcomeTable;\n  tab?: string;\n  otherTabTitle?: string;\n}\nconst EmptyContainer = styled.div`\n  min-height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\nconst ButtonContainer = styled.div`\n  Button {\n    svg {\n      color: ${({ theme }) => theme.colors.grayscale.light5};\n    }\n  }\n`;\n\ntype Redirects = Record<\n  WelcomeTable.Charts | WelcomeTable.Dashboards | WelcomeTable.SavedQueries,\n  string\n>;\n\nexport default function EmptyState({\n  tableName,\n  tab,\n  otherTabTitle,\n}: EmptyStateProps) {\n  const mineRedirects: Redirects = {\n    [WelcomeTable.Charts]: '/chart/add',\n    [WelcomeTable.Dashboards]: '/dashboard/new',\n    [WelcomeTable.SavedQueries]: '/superset/sqllab?new=true',\n  };\n  const favRedirects: Redirects = {\n    [WelcomeTable.Charts]: '/chart/list',\n    [WelcomeTable.Dashboards]: '/dashboard/list/',\n    [WelcomeTable.SavedQueries]: '/savedqueryview/list/',\n  };\n  const tableIcon: Record<WelcomeTable, string> = {\n    [WelcomeTable.Charts]: 'empty-charts.svg',\n    [WelcomeTable.Dashboards]: 'empty-dashboard.svg',\n    [WelcomeTable.Recents]: 'union.svg',\n    [WelcomeTable.SavedQueries]: 'empty-queries.svg',\n  };\n  const mine = <span>{welcomeTableEmpty[tableName]}</span>;\n  const recent = (\n    <span className=\"no-recents\">\n      {(() => {\n        if (tab === TableTab.Viewed) {\n          return t(\n            `Recently viewed charts, dashboards, and saved queries will appear here`,\n          );\n        }\n        if (tab === TableTab.Created) {\n          return t(\n            'Recently created charts, dashboards, and saved queries will appear here',\n          );\n        }\n        if (tab === TableTab.Other) {\n          const other = otherTabTitle || t('Other');\n          return welcomeTableWillAppear[tableName](other);\n        }\n        if (tab === TableTab.Edited) {\n          return t(\n            `Recently edited charts, dashboards, and saved queries will appear here`,\n          );\n        }\n        return null;\n      })()}\n    </span>\n  );\n\n  // Mine and Recent Activity(all tabs) tab empty state\n  if (\n    tab === TableTab.Mine ||\n    tableName === WelcomeTable.Recents ||\n    tab === TableTab.Other\n  ) {\n    return (\n      <EmptyContainer>\n        <Empty\n          image={`/static/assets/images/${tableIcon[tableName]}`}\n          description={\n            tableName === WelcomeTable.Recents || tab === TableTab.Other\n              ? recent\n              : mine\n          }\n        >\n          {tableName !== WelcomeTable.Recents && (\n            <ButtonContainer>\n              <Button\n                buttonStyle=\"primary\"\n                onClick={() => {\n                  window.location.href = mineRedirects[tableName];\n                }}\n              >\n                <i className=\"fa fa-plus\" />\n                {tableName === WelcomeTable.SavedQueries\n                  ? t('SQL query')\n                  : tableName\n                      .split('')\n                      .slice(0, tableName.length - 1)\n                      .join('')}\n              </Button>\n            </ButtonContainer>\n          )}\n        </Empty>\n      </EmptyContainer>\n    );\n  }\n  // Favorite tab empty state\n  return (\n    <EmptyContainer>\n      <Empty\n        image=\"/static/assets/images/star-circle.svg\"\n        description={\n          <span className=\"no-favorites\">\n            {t(\"You don't have any favorites yet!\")}\n          </span>\n        }\n      >\n        <Button\n          buttonStyle=\"primary\"\n          onClick={() => {\n            window.location.href = favRedirects[tableName];\n          }}\n        >\n          {t('See all %(tableName)s', {\n            tableName:\n              tableName === WelcomeTable.SavedQueries\n                ? t('SQL Lab queries')\n                : welcomeTableLabels[tableName],\n          })}\n        </Button>\n      </Empty>\n    </EmptyContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}