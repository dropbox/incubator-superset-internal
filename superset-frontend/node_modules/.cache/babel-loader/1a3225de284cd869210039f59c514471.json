{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// Log event names ------------------------------------------------------------\nexport const LOG_ACTIONS_LOAD_CHART = 'load_chart';\nexport const LOG_ACTIONS_RENDER_CHART = 'render_chart';\nexport const LOG_ACTIONS_HIDE_BROWSER_TAB = 'hide_browser_tab';\nexport const LOG_ACTIONS_MOUNT_DASHBOARD = 'mount_dashboard';\nexport const LOG_ACTIONS_MOUNT_EXPLORER = 'mount_explorer';\nexport const LOG_ACTIONS_SELECT_DASHBOARD_TAB = 'select_dashboard_tab';\nexport const LOG_ACTIONS_FORCE_REFRESH_CHART = 'force_refresh_chart';\nexport const LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS = 'change_explore_controls';\nexport const LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD = 'toggle_edit_dashboard';\nexport const LOG_ACTIONS_FORCE_REFRESH_DASHBOARD = 'force_refresh_dashboard';\nexport const LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD = 'periodic_render_dashboard';\nexport const LOG_ACTIONS_EXPLORE_DASHBOARD_CHART = 'explore_dashboard_chart';\nexport const LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART = 'export_csv_dashboard_chart';\nexport const LOG_ACTIONS_EXPORT_XLSX_DASHBOARD_CHART = 'export_csv_dashboard_chart';\nexport const LOG_ACTIONS_CHANGE_DASHBOARD_FILTER = 'change_dashboard_filter';\nexport const LOG_ACTIONS_DATASET_CREATION_EMPTY_CANCELLATION = 'dataset_creation_empty_cancellation';\nexport const LOG_ACTIONS_DATASET_CREATION_DATABASE_CANCELLATION = 'dataset_creation_database_cancellation';\nexport const LOG_ACTIONS_DATASET_CREATION_SCHEMA_CANCELLATION = 'dataset_creation_schema_cancellation';\nexport const LOG_ACTIONS_DATASET_CREATION_TABLE_CANCELLATION = 'dataset_creation_table_cancellation';\nexport const LOG_ACTIONS_DATASET_CREATION_SUCCESS = 'dataset_creation_success';\nexport const LOG_ACTIONS_SPA_NAVIGATION = 'spa_navigation';\nexport const LOG_ACTIONS_CONFIRM_OVERWRITE_DASHBOARD_METADATA = 'confirm_overwrite_dashboard_metadata';\nexport const LOG_ACTIONS_DASHBOARD_DOWNLOAD_AS_IMAGE = 'dashboard_download_as_image';\nexport const LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE = 'chart_download_as_image';\nexport const LOG_ACTIONS_SQLLAB_WARN_LOCAL_STORAGE_USAGE = 'sqllab_warn_local_storage_usage';\nexport const LOG_ACTIONS_SQLLAB_FETCH_FAILED_QUERY = 'sqllab_fetch_failed_query';\nexport const LOG_ACTIONS_DRILL_BY_MODAL_OPENED = 'drill_by_modal_opened';\nexport const LOG_ACTIONS_FURTHER_DRILL_BY = 'further_drill_by';\nexport const LOG_ACTIONS_DRILL_BY_EDIT_CHART = 'drill_by_edit_chart';\nexport const LOG_ACTIONS_DRILL_BY_BREADCRUMB_CLICKED = 'drill_by_breadcrumb_clicked';\n// Log event types --------------------------------------------------------------\nexport const LOG_EVENT_TYPE_TIMING = new Set([\nLOG_ACTIONS_LOAD_CHART,\nLOG_ACTIONS_RENDER_CHART,\nLOG_ACTIONS_HIDE_BROWSER_TAB,\nLOG_ACTIONS_SQLLAB_FETCH_FAILED_QUERY]);\n\nexport const LOG_EVENT_TYPE_USER = new Set([\nLOG_ACTIONS_MOUNT_DASHBOARD,\nLOG_ACTIONS_SELECT_DASHBOARD_TAB,\nLOG_ACTIONS_EXPLORE_DASHBOARD_CHART,\nLOG_ACTIONS_FORCE_REFRESH_CHART,\nLOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART,\nLOG_ACTIONS_CHANGE_DASHBOARD_FILTER,\nLOG_ACTIONS_CHANGE_EXPLORE_CONTROLS,\nLOG_ACTIONS_TOGGLE_EDIT_DASHBOARD,\nLOG_ACTIONS_FORCE_REFRESH_DASHBOARD,\nLOG_ACTIONS_PERIODIC_RENDER_DASHBOARD,\nLOG_ACTIONS_MOUNT_EXPLORER,\nLOG_ACTIONS_CONFIRM_OVERWRITE_DASHBOARD_METADATA,\nLOG_ACTIONS_DASHBOARD_DOWNLOAD_AS_IMAGE,\nLOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE]);\n\nexport const LOG_EVENT_DATASET_TYPE_DATASET_CREATION = [\nLOG_ACTIONS_DATASET_CREATION_EMPTY_CANCELLATION,\nLOG_ACTIONS_DATASET_CREATION_DATABASE_CANCELLATION,\nLOG_ACTIONS_DATASET_CREATION_SCHEMA_CANCELLATION,\nLOG_ACTIONS_DATASET_CREATION_TABLE_CANCELLATION,\nLOG_ACTIONS_DATASET_CREATION_SUCCESS];\n\nexport const Logger = {\n  timeOriginOffset: 0,\n  markTimeOrigin() {\n    this.timeOriginOffset = window.performance.now();\n  },\n  // note that this returns ms since last navigation, NOT ms since epoch\n  getTimestamp() {\n    return Math.round(window.performance.now() - this.timeOriginOffset);\n  } };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA;AACA,OAAO,MAAMA,sBAAsB,GAAG,YAA/B;AACP,OAAO,MAAMC,wBAAwB,GAAG,cAAjC;AACP,OAAO,MAAMC,4BAA4B,GAAG,kBAArC;AAEP,OAAO,MAAMC,2BAA2B,GAAG,iBAApC;AACP,OAAO,MAAMC,0BAA0B,GAAG,gBAAnC;AAEP,OAAO,MAAMC,gCAAgC,GAAG,sBAAzC;AACP,OAAO,MAAMC,+BAA+B,GAAG,qBAAxC;AACP,OAAO,MAAMC,mCAAmC,GAAG,yBAA5C;AACP,OAAO,MAAMC,iCAAiC,GAAG,uBAA1C;AACP,OAAO,MAAMC,mCAAmC,GAAG,yBAA5C;AACP,OAAO,MAAMC,qCAAqC,GAChD,2BADK;AAEP,OAAO,MAAMC,mCAAmC,GAAG,yBAA5C;AACP,OAAO,MAAMC,sCAAsC,GACjD,4BADK;AAEP,OAAO,MAAMC,uCAAuC,GAClD,4BADK;AAEP,OAAO,MAAMC,mCAAmC,GAAG,yBAA5C;AACP,OAAO,MAAMC,+CAA+C,GAC1D,qCADK;AAEP,OAAO,MAAMC,kDAAkD,GAC7D,wCADK;AAEP,OAAO,MAAMC,gDAAgD,GAC3D,sCADK;AAEP,OAAO,MAAMC,+CAA+C,GAC1D,qCADK;AAEP,OAAO,MAAMC,oCAAoC,GAAG,0BAA7C;AACP,OAAO,MAAMC,0BAA0B,GAAG,gBAAnC;AACP,OAAO,MAAMC,gDAAgD,GAC3D,sCADK;AAEP,OAAO,MAAMC,uCAAuC,GAClD,6BADK;AAEP,OAAO,MAAMC,mCAAmC,GAAG,yBAA5C;AACP,OAAO,MAAMC,2CAA2C,GACtD,iCADK;AAEP,OAAO,MAAMC,qCAAqC,GAChD,2BADK;AAEP,OAAO,MAAMC,iCAAiC,GAAG,uBAA1C;AACP,OAAO,MAAMC,4BAA4B,GAAG,kBAArC;AACP,OAAO,MAAMC,+BAA+B,GAAG,qBAAxC;AACP,OAAO,MAAMC,uCAAuC,GAClD,6BADK;AAGP;AACA,OAAO,MAAMC,qBAAqB,GAAG,IAAIC,GAAJ,CAAQ;AAC3C/B,sBAD2C;AAE3CC,wBAF2C;AAG3CC,4BAH2C;AAI3CuB,qCAJ2C,CAAR,CAA9B;;AAMP,OAAO,MAAMO,mBAAmB,GAAG,IAAID,GAAJ,CAAQ;AACzC5B,2BADyC;AAEzCE,gCAFyC;AAGzCM,mCAHyC;AAIzCL,+BAJyC;AAKzCM,sCALyC;AAMzCE,mCANyC;AAOzCP,mCAPyC;AAQzCC,iCARyC;AASzCC,mCATyC;AAUzCC,qCAVyC;AAWzCN,0BAXyC;AAYzCiB,gDAZyC;AAazCC,uCAbyC;AAczCC,mCAdyC,CAAR,CAA5B;;AAiBP,OAAO,MAAMU,uCAAuC,GAAG;AACrDlB,+CADqD;AAErDC,kDAFqD;AAGrDC,gDAHqD;AAIrDC,+CAJqD;AAKrDC,oCALqD,CAAhD;;AAQP,OAAO,MAAMe,MAAM,GAAG;EACpBC,gBAAgB,EAAE,CADE;EAGpBC,cAAc;IACZ,KAAKD,gBAAL,GAAwBE,MAAM,CAACC,WAAP,CAAmBC,GAAnB,EAAxB;EACD,CALmB;EAOpB;EACAC,YAAY;IACV,OAAOC,IAAI,CAACC,KAAL,CAAWL,MAAM,CAACC,WAAP,CAAmBC,GAAnB,KAA2B,KAAKJ,gBAA3C,CAAP;EACD,CAVmB,EAAf","names":["LOG_ACTIONS_LOAD_CHART","LOG_ACTIONS_RENDER_CHART","LOG_ACTIONS_HIDE_BROWSER_TAB","LOG_ACTIONS_MOUNT_DASHBOARD","LOG_ACTIONS_MOUNT_EXPLORER","LOG_ACTIONS_SELECT_DASHBOARD_TAB","LOG_ACTIONS_FORCE_REFRESH_CHART","LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS","LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD","LOG_ACTIONS_FORCE_REFRESH_DASHBOARD","LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD","LOG_ACTIONS_EXPLORE_DASHBOARD_CHART","LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART","LOG_ACTIONS_EXPORT_XLSX_DASHBOARD_CHART","LOG_ACTIONS_CHANGE_DASHBOARD_FILTER","LOG_ACTIONS_DATASET_CREATION_EMPTY_CANCELLATION","LOG_ACTIONS_DATASET_CREATION_DATABASE_CANCELLATION","LOG_ACTIONS_DATASET_CREATION_SCHEMA_CANCELLATION","LOG_ACTIONS_DATASET_CREATION_TABLE_CANCELLATION","LOG_ACTIONS_DATASET_CREATION_SUCCESS","LOG_ACTIONS_SPA_NAVIGATION","LOG_ACTIONS_CONFIRM_OVERWRITE_DASHBOARD_METADATA","LOG_ACTIONS_DASHBOARD_DOWNLOAD_AS_IMAGE","LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE","LOG_ACTIONS_SQLLAB_WARN_LOCAL_STORAGE_USAGE","LOG_ACTIONS_SQLLAB_FETCH_FAILED_QUERY","LOG_ACTIONS_DRILL_BY_MODAL_OPENED","LOG_ACTIONS_FURTHER_DRILL_BY","LOG_ACTIONS_DRILL_BY_EDIT_CHART","LOG_ACTIONS_DRILL_BY_BREADCRUMB_CLICKED","LOG_EVENT_TYPE_TIMING","Set","LOG_EVENT_TYPE_USER","LOG_EVENT_DATASET_TYPE_DATASET_CREATION","Logger","timeOriginOffset","markTimeOrigin","window","performance","now","getTimestamp","Math","round"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/logger/LogUtils.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// Log event names ------------------------------------------------------------\nexport const LOG_ACTIONS_LOAD_CHART = 'load_chart';\nexport const LOG_ACTIONS_RENDER_CHART = 'render_chart';\nexport const LOG_ACTIONS_HIDE_BROWSER_TAB = 'hide_browser_tab';\n\nexport const LOG_ACTIONS_MOUNT_DASHBOARD = 'mount_dashboard';\nexport const LOG_ACTIONS_MOUNT_EXPLORER = 'mount_explorer';\n\nexport const LOG_ACTIONS_SELECT_DASHBOARD_TAB = 'select_dashboard_tab';\nexport const LOG_ACTIONS_FORCE_REFRESH_CHART = 'force_refresh_chart';\nexport const LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS = 'change_explore_controls';\nexport const LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD = 'toggle_edit_dashboard';\nexport const LOG_ACTIONS_FORCE_REFRESH_DASHBOARD = 'force_refresh_dashboard';\nexport const LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD =\n  'periodic_render_dashboard';\nexport const LOG_ACTIONS_EXPLORE_DASHBOARD_CHART = 'explore_dashboard_chart';\nexport const LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART =\n  'export_csv_dashboard_chart';\nexport const LOG_ACTIONS_EXPORT_XLSX_DASHBOARD_CHART =\n  'export_csv_dashboard_chart';\nexport const LOG_ACTIONS_CHANGE_DASHBOARD_FILTER = 'change_dashboard_filter';\nexport const LOG_ACTIONS_DATASET_CREATION_EMPTY_CANCELLATION =\n  'dataset_creation_empty_cancellation';\nexport const LOG_ACTIONS_DATASET_CREATION_DATABASE_CANCELLATION =\n  'dataset_creation_database_cancellation';\nexport const LOG_ACTIONS_DATASET_CREATION_SCHEMA_CANCELLATION =\n  'dataset_creation_schema_cancellation';\nexport const LOG_ACTIONS_DATASET_CREATION_TABLE_CANCELLATION =\n  'dataset_creation_table_cancellation';\nexport const LOG_ACTIONS_DATASET_CREATION_SUCCESS = 'dataset_creation_success';\nexport const LOG_ACTIONS_SPA_NAVIGATION = 'spa_navigation';\nexport const LOG_ACTIONS_CONFIRM_OVERWRITE_DASHBOARD_METADATA =\n  'confirm_overwrite_dashboard_metadata';\nexport const LOG_ACTIONS_DASHBOARD_DOWNLOAD_AS_IMAGE =\n  'dashboard_download_as_image';\nexport const LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE = 'chart_download_as_image';\nexport const LOG_ACTIONS_SQLLAB_WARN_LOCAL_STORAGE_USAGE =\n  'sqllab_warn_local_storage_usage';\nexport const LOG_ACTIONS_SQLLAB_FETCH_FAILED_QUERY =\n  'sqllab_fetch_failed_query';\nexport const LOG_ACTIONS_DRILL_BY_MODAL_OPENED = 'drill_by_modal_opened';\nexport const LOG_ACTIONS_FURTHER_DRILL_BY = 'further_drill_by';\nexport const LOG_ACTIONS_DRILL_BY_EDIT_CHART = 'drill_by_edit_chart';\nexport const LOG_ACTIONS_DRILL_BY_BREADCRUMB_CLICKED =\n  'drill_by_breadcrumb_clicked';\n\n// Log event types --------------------------------------------------------------\nexport const LOG_EVENT_TYPE_TIMING = new Set([\n  LOG_ACTIONS_LOAD_CHART,\n  LOG_ACTIONS_RENDER_CHART,\n  LOG_ACTIONS_HIDE_BROWSER_TAB,\n  LOG_ACTIONS_SQLLAB_FETCH_FAILED_QUERY,\n]);\nexport const LOG_EVENT_TYPE_USER = new Set([\n  LOG_ACTIONS_MOUNT_DASHBOARD,\n  LOG_ACTIONS_SELECT_DASHBOARD_TAB,\n  LOG_ACTIONS_EXPLORE_DASHBOARD_CHART,\n  LOG_ACTIONS_FORCE_REFRESH_CHART,\n  LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART,\n  LOG_ACTIONS_CHANGE_DASHBOARD_FILTER,\n  LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS,\n  LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD,\n  LOG_ACTIONS_FORCE_REFRESH_DASHBOARD,\n  LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD,\n  LOG_ACTIONS_MOUNT_EXPLORER,\n  LOG_ACTIONS_CONFIRM_OVERWRITE_DASHBOARD_METADATA,\n  LOG_ACTIONS_DASHBOARD_DOWNLOAD_AS_IMAGE,\n  LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE,\n]);\n\nexport const LOG_EVENT_DATASET_TYPE_DATASET_CREATION = [\n  LOG_ACTIONS_DATASET_CREATION_EMPTY_CANCELLATION,\n  LOG_ACTIONS_DATASET_CREATION_DATABASE_CANCELLATION,\n  LOG_ACTIONS_DATASET_CREATION_SCHEMA_CANCELLATION,\n  LOG_ACTIONS_DATASET_CREATION_TABLE_CANCELLATION,\n  LOG_ACTIONS_DATASET_CREATION_SUCCESS,\n];\n\nexport const Logger = {\n  timeOriginOffset: 0,\n\n  markTimeOrigin() {\n    this.timeOriginOffset = window.performance.now();\n  },\n\n  // note that this returns ms since last navigation, NOT ms since epoch\n  getTimestamp() {\n    return Math.round(window.performance.now() - this.timeOriginOffset);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}