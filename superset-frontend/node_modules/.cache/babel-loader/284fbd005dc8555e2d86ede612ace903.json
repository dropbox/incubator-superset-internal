{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useRef, useMemo, useLayoutEffect, useCallback } from 'react';\nimport getScrollBarSize from '../utils/getScrollBarSize';\nimport needScrollBar from '../utils/needScrollBar';\nimport useMountedMemo from '../utils/useMountedMemo';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport var ReducerActions;\n(function (ReducerActions) {\n  ReducerActions[\"init\"] = \"init\";\n  ReducerActions[\"setStickyState\"] = \"setStickyState\";\n})(ReducerActions || (ReducerActions = {}));\nconst sum = (a, b) => a + b;\nconst mergeStyleProp = (node, style) => ({\n  style: {\n    ...node.props.style,\n    ...style } });\n\n\nconst fixedTableLayout = { tableLayout: 'fixed' };\n/**\n * An HOC for generating sticky header and fixed-height scrollable area\n */\nfunction StickyWrap(_ref) {let { sticky = {}, width: maxWidth, height: maxHeight, children: table, setStickyState } = _ref;\n  if (!table || table.type !== 'table') {\n    throw new Error('<StickyWrap> must have only one <table> element as child');\n  }\n  let thead;\n  let tbody;\n  let tfoot;\n  React.Children.forEach(table.props.children, (node) => {\n    if (!node) {\n      return;\n    }\n    if (node.type === 'thead') {\n      thead = node;\n    } else\n    if (node.type === 'tbody') {\n      tbody = node;\n    } else\n    if (node.type === 'tfoot') {\n      tfoot = node;\n    }\n  });\n  if (!thead || !tbody) {\n    throw new Error('<table> in <StickyWrap> must contain both thead and tbody.');\n  }\n  const columnCount = useMemo(() => {var _thead;\n    const headerRows = React.Children.toArray((_thead = thead) == null ? void 0 : _thead.props.children).pop();\n    return headerRows.props.children.length;\n  }, [thead]);\n  const theadRef = useRef(null); // original thead for layout computation\n  const tfootRef = useRef(null); // original tfoot for layout computation\n  const scrollHeaderRef = useRef(null); // fixed header\n  const scrollFooterRef = useRef(null); // fixed footer\n  const scrollBodyRef = useRef(null); // main body\n  const scrollBarSize = getScrollBarSize();\n  const { bodyHeight, columnWidths } = sticky;\n  const needSizer = !columnWidths ||\n  sticky.width !== maxWidth ||\n  sticky.height !== maxHeight ||\n  sticky.setStickyState !== setStickyState;\n  // update scrollable area and header column sizes when mounted\n  useLayoutEffect(() => {\n    if (!theadRef.current) {\n      return;\n    }\n    const bodyThead = theadRef.current;\n    const theadHeight = bodyThead.clientHeight;\n    const tfootHeight = tfootRef.current ? tfootRef.current.clientHeight : 0;\n    if (!theadHeight) {\n      return;\n    }\n    const fullTableHeight = bodyThead.parentNode.\n    clientHeight;\n    const ths = bodyThead.childNodes[0].\n    childNodes;\n    const widths = Array.from(ths).map((th) => {var _th$getBoundingClient;return ((_th$getBoundingClient = th.getBoundingClientRect()) == null ? void 0 : _th$getBoundingClient.width) || th.clientWidth;});\n    const [hasVerticalScroll, hasHorizontalScroll] = needScrollBar({\n      width: maxWidth,\n      height: maxHeight - theadHeight - tfootHeight,\n      innerHeight: fullTableHeight,\n      innerWidth: widths.reduce(sum),\n      scrollBarSize });\n\n    // real container height, include table header, footer and space for\n    // horizontal scroll bar\n    const realHeight = Math.min(maxHeight, hasHorizontalScroll ? fullTableHeight + scrollBarSize : fullTableHeight);\n    setStickyState({\n      hasVerticalScroll,\n      hasHorizontalScroll,\n      setStickyState,\n      width: maxWidth,\n      height: maxHeight,\n      realHeight,\n      tableHeight: fullTableHeight,\n      bodyHeight: realHeight - theadHeight - tfootHeight,\n      columnWidths: widths });\n\n  }, [maxWidth, maxHeight, setStickyState, scrollBarSize]);\n  let sizerTable;\n  let headerTable;\n  let footerTable;\n  let bodyTable;\n  if (needSizer) {\n    const theadWithRef = /*#__PURE__*/React.cloneElement(thead, { ref: theadRef });\n    const tfootWithRef = tfoot && /*#__PURE__*/React.cloneElement(tfoot, { ref: tfootRef });\n    sizerTable = ___EmotionJSX(\"div\", { key: \"sizer\", style: {\n        height: maxHeight,\n        overflow: 'auto',\n        visibility: 'hidden' } }, /*#__PURE__*/\n\n    React.cloneElement(table, {}, theadWithRef, tbody, tfootWithRef));\n\n  }\n  // reuse previously column widths, will be updated by `useLayoutEffect` above\n  const colWidths = columnWidths == null ? void 0 : columnWidths.slice(0, columnCount);\n  if (colWidths && bodyHeight) {\n    const colgroup = ___EmotionJSX(\"colgroup\", null,\n    colWidths.map((w, i) =>\n    // eslint-disable-next-line react/no-array-index-key\n    ___EmotionJSX(\"col\", { key: i, width: w })));\n\n    headerTable = ___EmotionJSX(\"div\", { key: \"header\", ref: scrollHeaderRef, style: {\n        overflow: 'hidden' } }, /*#__PURE__*/\n\n    React.cloneElement(table, mergeStyleProp(table, fixedTableLayout), colgroup, thead),\n    headerTable);\n\n    footerTable = tfoot && ___EmotionJSX(\"div\", { key: \"footer\", ref: scrollFooterRef, style: {\n        overflow: 'hidden' } }, /*#__PURE__*/\n\n    React.cloneElement(table, mergeStyleProp(table, fixedTableLayout), colgroup, tfoot),\n    footerTable);\n\n    const onScroll = (e) => {\n      if (scrollHeaderRef.current) {\n        scrollHeaderRef.current.scrollLeft = e.currentTarget.scrollLeft;\n      }\n      if (scrollFooterRef.current) {\n        scrollFooterRef.current.scrollLeft = e.currentTarget.scrollLeft;\n      }\n    };\n    bodyTable = ___EmotionJSX(\"div\", { key: \"body\", ref: scrollBodyRef, style: {\n        height: bodyHeight,\n        overflow: 'auto' },\n      onScroll: sticky.hasHorizontalScroll ? onScroll : undefined }, /*#__PURE__*/\n    React.cloneElement(table, mergeStyleProp(table, fixedTableLayout), colgroup, tbody));\n\n  }\n  return ___EmotionJSX(\"div\", { style: {\n      width: maxWidth,\n      height: sticky.realHeight || maxHeight,\n      overflow: 'hidden' } },\n\n  headerTable,\n  bodyTable,\n  footerTable,\n  sizerTable);\n\n}__signature__(StickyWrap, \"useMemo{columnCount}\\nuseRef{theadRef}\\nuseRef{tfootRef}\\nuseRef{scrollHeaderRef}\\nuseRef{scrollFooterRef}\\nuseRef{scrollBodyRef}\\nuseLayoutEffect{}\");\nfunction useInstance(instance) {\n  const { dispatch, state: { sticky }, data, page, rows, allColumns, getTableSize = () => undefined } = instance;\n  const setStickyState = useCallback((size) => {\n    dispatch({\n      type: ReducerActions.setStickyState,\n      size });\n\n  },\n  // turning pages would also trigger a resize\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [dispatch, getTableSize, page, rows]);\n  const useStickyWrap = (renderer) => {\n    const { width, height } = useMountedMemo(getTableSize, [getTableSize]) || sticky;\n    // only change of data should trigger re-render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const table = useMemo(renderer, [page, rows, allColumns]);\n    useLayoutEffect(() => {\n      if (!width || !height) {\n        setStickyState();\n      }\n    }, [width, height]);\n    if (!width || !height) {\n      return null;\n    }\n    if (data.length === 0) {\n      return table;\n    }\n    return ___EmotionJSX(StickyWrap, { width: width, height: height, sticky: sticky, setStickyState: setStickyState },\n    table);\n\n  };__signature__(useStickyWrap, \"useMountedMemo{}\\nuseMemo{table}\\nuseLayoutEffect{}\", () => [useMountedMemo]);\n  Object.assign(instance, {\n    setStickyState,\n    wrapStickyTable: useStickyWrap });\n\n}__signature__(useInstance, \"useCallback{setStickyState}\");\nexport default function useSticky(hooks) {\n  hooks.useInstance.push(useInstance);\n  hooks.stateReducers.push((newState, action_, prevState) => {\n    const action = action_;\n    if (action.type === ReducerActions.init) {\n      return {\n        ...newState,\n        sticky: {\n          ...(prevState == null ? void 0 : prevState.sticky) } };\n\n\n    }\n    if (action.type === ReducerActions.setStickyState) {\n      const { size } = action;\n      if (!size) {\n        return { ...newState };\n      }\n      return {\n        ...newState,\n        sticky: {\n          ...(prevState == null ? void 0 : prevState.sticky),\n          ...(newState == null ? void 0 : newState.sticky),\n          ...action.size } };\n\n\n    }\n    return newState;\n  });\n}\nuseSticky.pluginName = 'useSticky';;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ReducerActions, \"ReducerActions\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/DataTable/hooks/useSticky.tsx\");reactHotLoader.register(sum, \"sum\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/DataTable/hooks/useSticky.tsx\");reactHotLoader.register(mergeStyleProp, \"mergeStyleProp\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/DataTable/hooks/useSticky.tsx\");reactHotLoader.register(fixedTableLayout, \"fixedTableLayout\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/DataTable/hooks/useSticky.tsx\");reactHotLoader.register(StickyWrap, \"StickyWrap\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/DataTable/hooks/useSticky.tsx\");reactHotLoader.register(useInstance, \"useInstance\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/DataTable/hooks/useSticky.tsx\");reactHotLoader.register(useSticky, \"useSticky\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/DataTable/hooks/useSticky.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useRef","useMemo","useLayoutEffect","useCallback","getScrollBarSize","needScrollBar","useMountedMemo","ReducerActions","sum","a","b","mergeStyleProp","node","style","props","fixedTableLayout","tableLayout","StickyWrap","sticky","width","maxWidth","height","maxHeight","children","table","setStickyState","type","Error","thead","tbody","tfoot","Children","forEach","columnCount","headerRows","toArray","pop","length","theadRef","tfootRef","scrollHeaderRef","scrollFooterRef","scrollBodyRef","scrollBarSize","bodyHeight","columnWidths","needSizer","current","bodyThead","theadHeight","clientHeight","tfootHeight","fullTableHeight","parentNode","ths","childNodes","widths","Array","from","map","getBoundingClientRect","th","clientWidth","hasVerticalScroll","hasHorizontalScroll","innerHeight","innerWidth","reduce","realHeight","Math","min","tableHeight","sizerTable","headerTable","footerTable","bodyTable","theadWithRef","cloneElement","ref","tfootWithRef","overflow","visibility","colWidths","slice","colgroup","w","i","onScroll","scrollLeft","e","currentTarget","undefined","useInstance","instance","dispatch","state","data","page","rows","allColumns","getTableSize","size","useStickyWrap","renderer","Object","assign","wrapStickyTable","useSticky","hooks","push","stateReducers","newState","action_","prevState","action","init","pluginName"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/DataTable/hooks/useSticky.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  useRef,\n  useMemo,\n  useLayoutEffect,\n  useCallback,\n  ReactNode,\n  ReactElement,\n  ComponentPropsWithRef,\n  CSSProperties,\n  UIEventHandler,\n} from 'react';\nimport { TableInstance, Hooks } from 'react-table';\nimport getScrollBarSize from '../utils/getScrollBarSize';\nimport needScrollBar from '../utils/needScrollBar';\nimport useMountedMemo from '../utils/useMountedMemo';\n\ntype ReactElementWithChildren<\n  T extends keyof JSX.IntrinsicElements,\n  C extends ReactNode = ReactNode,\n> = ReactElement<ComponentPropsWithRef<T> & { children: C }, T>;\n\ntype Th = ReactElementWithChildren<'th'>;\ntype Td = ReactElementWithChildren<'td'>;\ntype TrWithTh = ReactElementWithChildren<'tr', Th[]>;\ntype TrWithTd = ReactElementWithChildren<'tr', Td[]>;\ntype Thead = ReactElementWithChildren<'thead', TrWithTh>;\ntype Tbody = ReactElementWithChildren<'tbody', TrWithTd>;\ntype Tfoot = ReactElementWithChildren<'tfoot', TrWithTd>;\ntype Col = ReactElementWithChildren<'col', null>;\ntype ColGroup = ReactElementWithChildren<'colgroup', Col>;\n\nexport type Table = ReactElementWithChildren<\n  'table',\n  (Thead | Tbody | Tfoot | ColGroup)[]\n>;\nexport type TableRenderer = () => Table;\nexport type GetTableSize = () => Partial<StickyState> | undefined;\nexport type SetStickyState = (size?: Partial<StickyState>) => void;\n\nexport enum ReducerActions {\n  init = 'init', // this is from global reducer\n  setStickyState = 'setStickyState',\n}\n\nexport type ReducerAction<\n  T extends string,\n  P extends Record<string, unknown>,\n> = P & { type: T };\n\nexport type ColumnWidths = number[];\n\nexport interface StickyState {\n  width?: number; // maximum full table width\n  height?: number; // maximum full table height\n  realHeight?: number; // actual table viewport height (header + scrollable area)\n  bodyHeight?: number; // scrollable area height\n  tableHeight?: number; // the full table height\n  columnWidths?: ColumnWidths;\n  hasHorizontalScroll?: boolean;\n  hasVerticalScroll?: boolean;\n  rendering?: boolean;\n  setStickyState?: SetStickyState;\n}\n\nexport interface UseStickyTableOptions {\n  getTableSize?: GetTableSize;\n}\n\nexport interface UseStickyInstanceProps {\n  // manipulate DOMs in <table> to make the header sticky\n  wrapStickyTable: (renderer: TableRenderer) => ReactNode;\n  // update or recompute the sticky table size\n  setStickyState: SetStickyState;\n}\n\nexport type UseStickyState = {\n  sticky: StickyState;\n};\n\nconst sum = (a: number, b: number) => a + b;\nconst mergeStyleProp = (\n  node: ReactElement<{ style?: CSSProperties }>,\n  style: CSSProperties,\n) => ({\n  style: {\n    ...node.props.style,\n    ...style,\n  },\n});\nconst fixedTableLayout: CSSProperties = { tableLayout: 'fixed' };\n\n/**\n * An HOC for generating sticky header and fixed-height scrollable area\n */\nfunction StickyWrap({\n  sticky = {},\n  width: maxWidth,\n  height: maxHeight,\n  children: table,\n  setStickyState,\n}: {\n  width: number;\n  height: number;\n  setStickyState: SetStickyState;\n  children: Table;\n  sticky?: StickyState; // current sticky element sizes\n}) {\n  if (!table || table.type !== 'table') {\n    throw new Error('<StickyWrap> must have only one <table> element as child');\n  }\n  let thead: Thead | undefined;\n  let tbody: Tbody | undefined;\n  let tfoot: Tfoot | undefined;\n\n  React.Children.forEach(table.props.children, node => {\n    if (!node) {\n      return;\n    }\n    if (node.type === 'thead') {\n      thead = node;\n    } else if (node.type === 'tbody') {\n      tbody = node;\n    } else if (node.type === 'tfoot') {\n      tfoot = node;\n    }\n  });\n  if (!thead || !tbody) {\n    throw new Error(\n      '<table> in <StickyWrap> must contain both thead and tbody.',\n    );\n  }\n  const columnCount = useMemo(() => {\n    const headerRows = React.Children.toArray(\n      thead?.props.children,\n    ).pop() as TrWithTh;\n    return headerRows.props.children.length;\n  }, [thead]);\n\n  const theadRef = useRef<HTMLTableSectionElement>(null); // original thead for layout computation\n  const tfootRef = useRef<HTMLTableSectionElement>(null); // original tfoot for layout computation\n  const scrollHeaderRef = useRef<HTMLDivElement>(null); // fixed header\n  const scrollFooterRef = useRef<HTMLDivElement>(null); // fixed footer\n  const scrollBodyRef = useRef<HTMLDivElement>(null); // main body\n\n  const scrollBarSize = getScrollBarSize();\n  const { bodyHeight, columnWidths } = sticky;\n  const needSizer =\n    !columnWidths ||\n    sticky.width !== maxWidth ||\n    sticky.height !== maxHeight ||\n    sticky.setStickyState !== setStickyState;\n\n  // update scrollable area and header column sizes when mounted\n  useLayoutEffect(() => {\n    if (!theadRef.current) {\n      return;\n    }\n    const bodyThead = theadRef.current;\n    const theadHeight = bodyThead.clientHeight;\n    const tfootHeight = tfootRef.current ? tfootRef.current.clientHeight : 0;\n    if (!theadHeight) {\n      return;\n    }\n    const fullTableHeight = (bodyThead.parentNode as HTMLTableElement)\n      .clientHeight;\n    const ths = bodyThead.childNodes[0]\n      .childNodes as NodeListOf<HTMLTableHeaderCellElement>;\n    const widths = Array.from(ths).map(\n      th => th.getBoundingClientRect()?.width || th.clientWidth,\n    );\n    const [hasVerticalScroll, hasHorizontalScroll] = needScrollBar({\n      width: maxWidth,\n      height: maxHeight - theadHeight - tfootHeight,\n      innerHeight: fullTableHeight,\n      innerWidth: widths.reduce(sum),\n      scrollBarSize,\n    });\n    // real container height, include table header, footer and space for\n    // horizontal scroll bar\n    const realHeight = Math.min(\n      maxHeight,\n      hasHorizontalScroll ? fullTableHeight + scrollBarSize : fullTableHeight,\n    );\n    setStickyState({\n      hasVerticalScroll,\n      hasHorizontalScroll,\n      setStickyState,\n      width: maxWidth,\n      height: maxHeight,\n      realHeight,\n      tableHeight: fullTableHeight,\n      bodyHeight: realHeight - theadHeight - tfootHeight,\n      columnWidths: widths,\n    });\n  }, [maxWidth, maxHeight, setStickyState, scrollBarSize]);\n\n  let sizerTable: ReactElement | undefined;\n  let headerTable: ReactElement | undefined;\n  let footerTable: ReactElement | undefined;\n  let bodyTable: ReactElement | undefined;\n  if (needSizer) {\n    const theadWithRef = React.cloneElement(thead, { ref: theadRef });\n    const tfootWithRef = tfoot && React.cloneElement(tfoot, { ref: tfootRef });\n    sizerTable = (\n      <div\n        key=\"sizer\"\n        style={{\n          height: maxHeight,\n          overflow: 'auto',\n          visibility: 'hidden',\n        }}\n      >\n        {React.cloneElement(table, {}, theadWithRef, tbody, tfootWithRef)}\n      </div>\n    );\n  }\n\n  // reuse previously column widths, will be updated by `useLayoutEffect` above\n  const colWidths = columnWidths?.slice(0, columnCount);\n\n  if (colWidths && bodyHeight) {\n    const colgroup = (\n      <colgroup>\n        {colWidths.map((w, i) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <col key={i} width={w} />\n        ))}\n      </colgroup>\n    );\n\n    headerTable = (\n      <div\n        key=\"header\"\n        ref={scrollHeaderRef}\n        style={{\n          overflow: 'hidden',\n        }}\n      >\n        {React.cloneElement(\n          table,\n          mergeStyleProp(table, fixedTableLayout),\n          colgroup,\n          thead,\n        )}\n        {headerTable}\n      </div>\n    );\n\n    footerTable = tfoot && (\n      <div\n        key=\"footer\"\n        ref={scrollFooterRef}\n        style={{\n          overflow: 'hidden',\n        }}\n      >\n        {React.cloneElement(\n          table,\n          mergeStyleProp(table, fixedTableLayout),\n          colgroup,\n          tfoot,\n        )}\n        {footerTable}\n      </div>\n    );\n\n    const onScroll: UIEventHandler<HTMLDivElement> = e => {\n      if (scrollHeaderRef.current) {\n        scrollHeaderRef.current.scrollLeft = e.currentTarget.scrollLeft;\n      }\n      if (scrollFooterRef.current) {\n        scrollFooterRef.current.scrollLeft = e.currentTarget.scrollLeft;\n      }\n    };\n    bodyTable = (\n      <div\n        key=\"body\"\n        ref={scrollBodyRef}\n        style={{\n          height: bodyHeight,\n          overflow: 'auto',\n        }}\n        onScroll={sticky.hasHorizontalScroll ? onScroll : undefined}\n      >\n        {React.cloneElement(\n          table,\n          mergeStyleProp(table, fixedTableLayout),\n          colgroup,\n          tbody,\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        width: maxWidth,\n        height: sticky.realHeight || maxHeight,\n        overflow: 'hidden',\n      }}\n    >\n      {headerTable}\n      {bodyTable}\n      {footerTable}\n      {sizerTable}\n    </div>\n  );\n}\n\nfunction useInstance<D extends object>(instance: TableInstance<D>) {\n  const {\n    dispatch,\n    state: { sticky },\n    data,\n    page,\n    rows,\n    allColumns,\n    getTableSize = () => undefined,\n  } = instance;\n\n  const setStickyState = useCallback(\n    (size?: Partial<StickyState>) => {\n      dispatch({\n        type: ReducerActions.setStickyState,\n        size,\n      });\n    },\n    // turning pages would also trigger a resize\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dispatch, getTableSize, page, rows],\n  );\n\n  const useStickyWrap = (renderer: TableRenderer) => {\n    const { width, height } =\n      useMountedMemo(getTableSize, [getTableSize]) || sticky;\n    // only change of data should trigger re-render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const table = useMemo(renderer, [page, rows, allColumns]);\n\n    useLayoutEffect(() => {\n      if (!width || !height) {\n        setStickyState();\n      }\n    }, [width, height]);\n\n    if (!width || !height) {\n      return null;\n    }\n    if (data.length === 0) {\n      return table;\n    }\n    return (\n      <StickyWrap\n        width={width}\n        height={height}\n        sticky={sticky}\n        setStickyState={setStickyState}\n      >\n        {table}\n      </StickyWrap>\n    );\n  };\n\n  Object.assign(instance, {\n    setStickyState,\n    wrapStickyTable: useStickyWrap,\n  });\n}\n\nexport default function useSticky<D extends object>(hooks: Hooks<D>) {\n  hooks.useInstance.push(useInstance);\n  hooks.stateReducers.push((newState, action_, prevState) => {\n    const action = action_ as ReducerAction<\n      ReducerActions,\n      { size: StickyState }\n    >;\n    if (action.type === ReducerActions.init) {\n      return {\n        ...newState,\n        sticky: {\n          ...prevState?.sticky,\n        },\n      };\n    }\n    if (action.type === ReducerActions.setStickyState) {\n      const { size } = action;\n      if (!size) {\n        return { ...newState };\n      }\n      return {\n        ...newState,\n        sticky: {\n          ...prevState?.sticky,\n          ...newState?.sticky,\n          ...action.size,\n        },\n      };\n    }\n    return newState;\n  });\n}\nuseSticky.pluginName = 'useSticky';\n"]},"metadata":{},"sourceType":"module"}