{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { makeSingleton } from '@superset-ui/core';\nimport { isStandardizedFormData } from '../types';\nclass StandardizedControlsManager {\n\n  constructor() {this.controls = void 0;\n    this.controls = {\n      metrics: [],\n      columns: [] };\n\n  }\n  setStandardizedControls(formData) {\n    if (isStandardizedFormData(formData)) {\n      const { controls } = formData.standardizedFormData;\n      this.controls = {\n        metrics: controls.metrics,\n        columns: controls.columns };\n\n    }\n  }\n  shiftMetric() {\n    return this.controls.metrics.shift();\n  }\n  shiftColumn() {\n    return this.controls.columns.shift();\n  }\n  popAllMetrics() {\n    return this.controls.metrics.splice(0, this.controls.metrics.length);\n  }\n  popAllColumns() {\n    return this.controls.columns.splice(0, this.controls.columns.length);\n  }\n  clear() {\n    this.controls = {\n      metrics: [],\n      columns: [] };\n\n  }}\n\nexport const getStandardizedControls = makeSingleton(StandardizedControlsManager);","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,aAAT,QAA6C,mBAA7C;AACA,SAASC,sBAAT,QAA6D,UAA7D;AAEA,MAAMC,2BAAN,CAAiC;;EAG/BC,oBAFAC,QAEA;IACE,KAAKA,QAAL,GAAgB;MACdC,OAAO,EAAE,EADK;MAEdC,OAAO,EAAE,EAFK,EAAhB;;EAID;EAEDC,uBAAuB,CAACC,QAAD,EAAwB;IAC7C,IAAIP,sBAAsB,CAACO,QAAD,CAA1B,EAAsC;MACpC,MAAM,EAAEJ,QAAF,KAAeI,QAAQ,CAACC,oBAA9B;MACA,KAAKL,QAAL,GAAgB;QACdC,OAAO,EAAED,QAAQ,CAACC,OADJ;QAEdC,OAAO,EAAEF,QAAQ,CAACE,OAFJ,EAAhB;;IAID;EACF;EAEDI,WAAW;IACT,OAAO,KAAKN,QAAL,CAAcC,OAAd,CAAsBM,KAAtB,EAAP;EACD;EAEDC,WAAW;IACT,OAAO,KAAKR,QAAL,CAAcE,OAAd,CAAsBK,KAAtB,EAAP;EACD;EAEDE,aAAa;IACX,OAAO,KAAKT,QAAL,CAAcC,OAAd,CAAsBS,MAAtB,CAA6B,CAA7B,EAAgC,KAAKV,QAAL,CAAcC,OAAd,CAAsBU,MAAtD,CAAP;EACD;EAEDC,aAAa;IACX,OAAO,KAAKZ,QAAL,CAAcE,OAAd,CAAsBQ,MAAtB,CAA6B,CAA7B,EAAgC,KAAKV,QAAL,CAAcE,OAAd,CAAsBS,MAAtD,CAAP;EACD;EAEDE,KAAK;IACH,KAAKb,QAAL,GAAgB;MACdC,OAAO,EAAE,EADK;MAEdC,OAAO,EAAE,EAFK,EAAhB;;EAID,CAzC8B;;AA4CjC,OAAO,MAAMY,uBAAuB,GAAGlB,aAAa,CAClDE,2BADkD,CAA7C","names":["makeSingleton","isStandardizedFormData","StandardizedControlsManager","constructor","controls","metrics","columns","setStandardizedControls","formData","standardizedFormData","shiftMetric","shift","shiftColumn","popAllMetrics","splice","length","popAllColumns","clear","getStandardizedControls"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/packages/superset-ui-chart-controls/src/utils/getStandardizedControls.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { makeSingleton, QueryFormData } from '@superset-ui/core';\nimport { isStandardizedFormData, StandardizedControls } from '../types';\n\nclass StandardizedControlsManager {\n  controls: StandardizedControls;\n\n  constructor() {\n    this.controls = {\n      metrics: [],\n      columns: [],\n    };\n  }\n\n  setStandardizedControls(formData: QueryFormData) {\n    if (isStandardizedFormData(formData)) {\n      const { controls } = formData.standardizedFormData;\n      this.controls = {\n        metrics: controls.metrics,\n        columns: controls.columns,\n      };\n    }\n  }\n\n  shiftMetric() {\n    return this.controls.metrics.shift();\n  }\n\n  shiftColumn() {\n    return this.controls.columns.shift();\n  }\n\n  popAllMetrics() {\n    return this.controls.metrics.splice(0, this.controls.metrics.length);\n  }\n\n  popAllColumns() {\n    return this.controls.columns.splice(0, this.controls.columns.length);\n  }\n\n  clear() {\n    this.controls = {\n      metrics: [],\n      columns: [],\n    };\n  }\n}\n\nexport const getStandardizedControls = makeSingleton(\n  StandardizedControlsManager,\n);\n"]},"metadata":{},"sourceType":"module"}