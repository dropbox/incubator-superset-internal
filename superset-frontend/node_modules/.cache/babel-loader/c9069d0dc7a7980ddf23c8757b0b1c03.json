{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport { store } from '../views/store';\nimport { getDashboardPermalink as getDashboardPermalinkUtil } from '../utils/urlUtils';\nconst bootstrapData = getBootstrapData();\nconst getScrollSize = () => ({\n  width: document.body.scrollWidth,\n  height: document.body.scrollHeight });\n\nconst getDashboardPermalink = async (_ref) => {var _state$dashboardInfo, _state$dashboardState;let { anchor } = _ref;\n  const state = store == null ? void 0 : store.getState();\n  const { dashboardId, dataMask, activeTabs } = {\n    dashboardId: (state == null ? void 0 : (_state$dashboardInfo = state.dashboardInfo) == null ? void 0 : _state$dashboardInfo.id) || (bootstrapData == null ? void 0 : bootstrapData.embedded.dashboard_id),\n    dataMask: state == null ? void 0 : state.dataMask,\n    activeTabs: (_state$dashboardState = state.dashboardState) == null ? void 0 : _state$dashboardState.activeTabs };\n\n  return getDashboardPermalinkUtil({\n    dashboardId,\n    dataMask,\n    activeTabs,\n    anchor });\n\n};\nconst getActiveTabs = () => {var _store$getState, _store$getState$dashb;return (store == null ? void 0 : (_store$getState = store.getState()) == null ? void 0 : (_store$getState$dashb = _store$getState.dashboardState) == null ? void 0 : _store$getState$dashb.activeTabs) || [];};\nexport const embeddedApi = {\n  getScrollSize,\n  getDashboardPermalink,\n  getActiveTabs };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,gBAAP,MAA6B,4BAA7B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,qBAAqB,IAAIC,yBAAlC,QAAmE,mBAAnE;AAEA,MAAMC,aAAa,GAAGJ,gBAAgB,EAAtC;AAaA,MAAMK,aAAa,GAAG,OAAa;EACjCC,KAAK,EAAEC,QAAQ,CAACC,IAAT,CAAcC,WADY;EAEjCC,MAAM,EAAEH,QAAQ,CAACC,IAAT,CAAcG,YAFW,EAAb,CAAtB;;AAKA,MAAMT,qBAAqB,GAAG,gBAIR,qDAJe,EACnCU,MADmC,EAIf;EACpB,MAAMC,KAAK,GAAGZ,KAAH,oBAAGA,KAAK,CAAEa,QAAP,EAAd;EACA,MAAM,EAAEC,WAAF,EAAeC,QAAf,EAAyBC,UAAzB,KAAwC;IAC5CF,WAAW,EACT,MAAK,QAAL,yCAAK,CAAEG,aAAP,0CAAsBC,EAAtB,MAA4Bf,aAA5B,oBAA4BA,aAAa,CAAEgB,QAAf,CAAyBC,YAArD,CAF0C;IAG5CL,QAAQ,EAAEH,KAAF,oBAAEA,KAAK,CAAEG,QAH2B;IAI5CC,UAAU,2BAAEJ,KAAK,CAACS,cAAR,qBAAE,sBAAsBL,UAJU,EAA9C;;EAOA,OAAOd,yBAAyB,CAAC;IAC/BY,WAD+B;IAE/BC,QAF+B;IAG/BC,UAH+B;IAI/BL,MAJ+B,EAAD,CAAhC;;AAMD,CAnBD;AAqBA,MAAMW,aAAa,GAAG,yDAAM,MAAK,QAAL,oCAAK,CAAET,QAAP,gEAAmBQ,cAAnB,2CAAmCL,UAAnC,KAAiD,EAAvD,EAAtB;AAEA,OAAO,MAAMO,WAAW,GAAwB;EAC9CnB,aAD8C;EAE9CH,qBAF8C;EAG9CqB,aAH8C,EAAzC","names":["getBootstrapData","store","getDashboardPermalink","getDashboardPermalinkUtil","bootstrapData","getScrollSize","width","document","body","scrollWidth","height","scrollHeight","anchor","state","getState","dashboardId","dataMask","activeTabs","dashboardInfo","id","embedded","dashboard_id","dashboardState","getActiveTabs","embeddedApi"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/embedded/api.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport { store } from '../views/store';\nimport { getDashboardPermalink as getDashboardPermalinkUtil } from '../utils/urlUtils';\n\nconst bootstrapData = getBootstrapData();\n\ntype Size = {\n  width: number;\n  height: number;\n};\n\ntype EmbeddedSupersetApi = {\n  getScrollSize: () => Size;\n  getDashboardPermalink: ({ anchor }: { anchor: string }) => Promise<string>;\n  getActiveTabs: () => string[];\n};\n\nconst getScrollSize = (): Size => ({\n  width: document.body.scrollWidth,\n  height: document.body.scrollHeight,\n});\n\nconst getDashboardPermalink = async ({\n  anchor,\n}: {\n  anchor: string;\n}): Promise<string> => {\n  const state = store?.getState();\n  const { dashboardId, dataMask, activeTabs } = {\n    dashboardId:\n      state?.dashboardInfo?.id || bootstrapData?.embedded!.dashboard_id,\n    dataMask: state?.dataMask,\n    activeTabs: state.dashboardState?.activeTabs,\n  };\n\n  return getDashboardPermalinkUtil({\n    dashboardId,\n    dataMask,\n    activeTabs,\n    anchor,\n  });\n};\n\nconst getActiveTabs = () => store?.getState()?.dashboardState?.activeTabs || [];\n\nexport const embeddedApi: EmbeddedSupersetApi = {\n  getScrollSize,\n  getDashboardPermalink,\n  getActiveTabs,\n};\n"]},"metadata":{},"sourceType":"module"}