{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { DatasourceType, t } from '@superset-ui/core';\nimport { ColumnOption } from '@superset-ui/chart-controls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const controlPanelSectionsChartOptions = [\nnull,\n{\n  label: t('Chart Options'),\n  expanded: true,\n  controlSetRows: [\n  [\n  'color_scheme',\n  {\n    name: 'rose_area_proportion',\n    config: {\n      type: 'CheckboxControl',\n      label: t('Use Area Proportions'),\n      description: t('Check if the Rose Chart should use segment area instead of ' +\n      'segment radius for proportioning'),\n      default: false,\n      renderTrigger: true } }],\n\n\n\n  [\n  {\n    name: 'stacked_style',\n    config: {\n      type: 'SelectControl',\n      label: t('Stacked Style'),\n      renderTrigger: true,\n      choices: [\n      ['stack', t('stack')],\n      ['stream', t('stream')],\n      ['expand', t('expand')]],\n\n      default: 'stack',\n      description: '' } }]] }];\n\n\n\n\n\n\nexport const controlPanelSectionsChartOptionsOnlyColorScheme = [\n{\n  label: t('Chart Options'),\n  expanded: true,\n  controlSetRows: [['color_scheme']] }];\n\n\nexport const controlPanelSectionsChartOptionsTable = [\n{\n  label: t('Chart Options'),\n  expanded: true,\n  controlSetRows: [\n  [\n  'metric',\n  'metrics',\n  {\n    name: 'all_columns',\n    config: {\n      type: 'SelectControl',\n      multi: true,\n      label: t('Columns'),\n      default: [],\n      description: t('Columns to display'),\n      optionRenderer: (c) => ___EmotionJSX(ColumnOption, { column: c, showType: true }),\n      valueKey: 'column_name',\n      mapStateToProps: (stateRef) => {var _stateRef$datasource;return {\n          options: ((_stateRef$datasource = stateRef.datasource) == null ? void 0 : _stateRef$datasource.columns) || [] };},\n\n      freeForm: true } }]] }];\n\n\n\n\n\n\nexport const exploreInitialData = {\n  form_data: {\n    datasource: '8__table',\n    metric: 'count',\n    slice_id: 371,\n    viz_type: 'table' },\n\n  slice: {\n    cache_timeout: null,\n    description: null,\n    slice_id: 371,\n    slice_name: 'Age distribution of respondents',\n    is_managed_externally: false,\n    form_data: {\n      datasource: '8__table',\n      metric: 'count',\n      slice_id: 371,\n      viz_type: 'table' } },\n\n\n  dataset: {\n    id: 8,\n    type: DatasourceType.Table,\n    columns: [{ column_name: 'a' }],\n    metrics: [{ metric_name: 'first' }, { metric_name: 'second' }],\n    column_formats: {},\n    verbose_map: {},\n    main_dttm_col: '',\n    datasource_name: '8__table',\n    description: null } };\n\n\nexport const fallbackExploreInitialData = {\n  form_data: {\n    datasource: '0__table',\n    viz_type: 'table' },\n\n  dataset: {\n    id: 0,\n    type: DatasourceType.Table,\n    columns: [],\n    metrics: [],\n    column_formats: {},\n    verbose_map: {},\n    main_dttm_col: '',\n    owners: [],\n    datasource_name: 'missing_datasource',\n    name: 'missing_datasource',\n    description: null },\n\n  slice: null };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(controlPanelSectionsChartOptions, \"controlPanelSectionsChartOptions\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/fixtures.tsx\");reactHotLoader.register(controlPanelSectionsChartOptionsOnlyColorScheme, \"controlPanelSectionsChartOptionsOnlyColorScheme\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/fixtures.tsx\");reactHotLoader.register(controlPanelSectionsChartOptionsTable, \"controlPanelSectionsChartOptionsTable\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/fixtures.tsx\");reactHotLoader.register(exploreInitialData, \"exploreInitialData\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/fixtures.tsx\");reactHotLoader.register(fallbackExploreInitialData, \"fallbackExploreInitialData\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/fixtures.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,CAAzB,QAAkC,mBAAlC;AACA,SAEEC,YAFF,QAKO,6BALP,C;AAQA,OAAO,MAAMC,gCAAgC,GAC3C;AACE,IADF;AAEE;EACEC,KAAK,EAAEH,CAAC,CAAC,eAAD,CADV;EAEEI,QAAQ,EAAE,IAFZ;EAGEC,cAAc,EAAE;EACd;EACE,cADF;EAEE;IACEC,IAAI,EAAE,sBADR;IAEEC,MAAM,EAAE;MACNC,IAAI,EAAE,iBADA;MAENL,KAAK,EAAEH,CAAC,CAAC,sBAAD,CAFF;MAGNS,WAAW,EAAET,CAAC,CACZ;MACE,kCAFU,CAHR;MAONU,OAAO,EAAE,KAPH;MAQNC,aAAa,EAAE,IART,EAFV,EAFF,CADc;;;;EAiBd;EACE;IACEL,IAAI,EAAE,eADR;IAEEC,MAAM,EAAE;MACNC,IAAI,EAAE,eADA;MAENL,KAAK,EAAEH,CAAC,CAAC,eAAD,CAFF;MAGNW,aAAa,EAAE,IAHT;MAINC,OAAO,EAAE;MACP,CAAC,OAAD,EAAUZ,CAAC,CAAC,OAAD,CAAX,CADO;MAEP,CAAC,QAAD,EAAWA,CAAC,CAAC,QAAD,CAAZ,CAFO;MAGP,CAAC,QAAD,EAAWA,CAAC,CAAC,QAAD,CAAZ,CAHO,CAJH;;MASNU,OAAO,EAAE,OATH;MAUND,WAAW,EAAE,EAVP,EAFV,EADF,CAjBc,CAHlB,EAFF,CADK;;;;;;;AA4CP,OAAO,MAAMI,+CAA+C,GAC1D;AACE;EACEV,KAAK,EAAEH,CAAC,CAAC,eAAD,CADV;EAEEI,QAAQ,EAAE,IAFZ;EAGEC,cAAc,EAAE,CAAC,CAAC,cAAD,CAAD,CAHlB,EADF,CADK;;;AASP,OAAO,MAAMS,qCAAqC,GAChD;AACE;EACEX,KAAK,EAAEH,CAAC,CAAC,eAAD,CADV;EAEEI,QAAQ,EAAE,IAFZ;EAGEC,cAAc,EAAE;EACd;EACE,QADF;EAEE,SAFF;EAGE;IACEC,IAAI,EAAE,aADR;IAEEC,MAAM,EAAE;MACNC,IAAI,EAAE,eADA;MAENO,KAAK,EAAE,IAFD;MAGNZ,KAAK,EAAEH,CAAC,CAAC,SAAD,CAHF;MAINU,OAAO,EAAE,EAJH;MAKND,WAAW,EAAET,CAAC,CAAC,oBAAD,CALR;MAMNgB,cAAc,EAAE,EAAC,KAAI,cAAC,YAAD,IAAc,MAAM,EAAEC,CAAtB,EAAyB,QAAQ,MAAjC,GANf;MAONC,QAAQ,EAAE,aAPJ;MAQNC,eAAe,EAAE,SAAQ,sCAAK;UAC5BC,OAAO,EAAE,iCAAQ,CAACC,UAAT,0CAAqBC,OAArB,KAAgC,EADb,EAAL,EARnB;;MAWNC,QAAQ,EAAE,IAXJ,EAFV,EAHF,CADc,CAHlB,EADF,CADK;;;;;;;AA8BP,OAAO,MAAMC,kBAAkB,GAA2B;EACxDC,SAAS,EAAE;IACTJ,UAAU,EAAE,UADH;IAETK,MAAM,EAAE,OAFC;IAGTC,QAAQ,EAAE,GAHD;IAITC,QAAQ,EAAE,OAJD,EAD6C;;EAOxDC,KAAK,EAAE;IACLC,aAAa,EAAE,IADV;IAELrB,WAAW,EAAE,IAFR;IAGLkB,QAAQ,EAAE,GAHL;IAILI,UAAU,EAAE,iCAJP;IAKLC,qBAAqB,EAAE,KALlB;IAMLP,SAAS,EAAE;MACTJ,UAAU,EAAE,UADH;MAETK,MAAM,EAAE,OAFC;MAGTC,QAAQ,EAAE,GAHD;MAITC,QAAQ,EAAE,OAJD,EANN,EAPiD;;;EAoBxDK,OAAO,EAAE;IACPC,EAAE,EAAE,CADG;IAEP1B,IAAI,EAAET,cAAc,CAACoC,KAFd;IAGPb,OAAO,EAAE,CAAC,EAAEc,WAAW,EAAE,GAAf,EAAD,CAHF;IAIPC,OAAO,EAAE,CAAC,EAAEC,WAAW,EAAE,OAAf,EAAD,EAA2B,EAAEA,WAAW,EAAE,QAAf,EAA3B,CAJF;IAKPC,cAAc,EAAE,EALT;IAMPC,WAAW,EAAE,EANN;IAOPC,aAAa,EAAE,EAPR;IAQPC,eAAe,EAAE,UARV;IASPjC,WAAW,EAAE,IATN,EApB+C,EAAnD;;;AAiCP,OAAO,MAAMkC,0BAA0B,GAA2B;EAChElB,SAAS,EAAE;IACTJ,UAAU,EAAE,UADH;IAETO,QAAQ,EAAE,OAFD,EADqD;;EAKhEK,OAAO,EAAE;IACPC,EAAE,EAAE,CADG;IAEP1B,IAAI,EAAET,cAAc,CAACoC,KAFd;IAGPb,OAAO,EAAE,EAHF;IAIPe,OAAO,EAAE,EAJF;IAKPE,cAAc,EAAE,EALT;IAMPC,WAAW,EAAE,EANN;IAOPC,aAAa,EAAE,EAPR;IAQPG,MAAM,EAAE,EARD;IASPF,eAAe,EAAE,oBATV;IAUPpC,IAAI,EAAE,oBAVC;IAWPG,WAAW,EAAE,IAXN,EALuD;;EAkBhEoB,KAAK,EAAE,IAlByD,EAA3D,C,iLApHM3B,gC,2JA4CAW,+C,0KASAC,qC,gKA8BAU,kB,6IAiCAmB,0B","names":["React","DatasourceType","t","ColumnOption","controlPanelSectionsChartOptions","label","expanded","controlSetRows","name","config","type","description","default","renderTrigger","choices","controlPanelSectionsChartOptionsOnlyColorScheme","controlPanelSectionsChartOptionsTable","multi","optionRenderer","c","valueKey","mapStateToProps","options","datasource","columns","freeForm","exploreInitialData","form_data","metric","slice_id","viz_type","slice","cache_timeout","slice_name","is_managed_externally","dataset","id","Table","column_name","metrics","metric_name","column_formats","verbose_map","main_dttm_col","datasource_name","fallbackExploreInitialData","owners"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/fixtures.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { DatasourceType, t } from '@superset-ui/core';\nimport {\n  ColumnMeta,\n  ColumnOption,\n  ControlConfig,\n  ControlPanelSectionConfig,\n} from '@superset-ui/chart-controls';\nimport { ExplorePageInitialData } from './types';\n\nexport const controlPanelSectionsChartOptions: (ControlPanelSectionConfig | null)[] =\n  [\n    null,\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        [\n          'color_scheme',\n          {\n            name: 'rose_area_proportion',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Use Area Proportions'),\n              description: t(\n                'Check if the Rose Chart should use segment area instead of ' +\n                  'segment radius for proportioning',\n              ),\n              default: false,\n              renderTrigger: true,\n            },\n          },\n        ],\n        [\n          {\n            name: 'stacked_style',\n            config: {\n              type: 'SelectControl',\n              label: t('Stacked Style'),\n              renderTrigger: true,\n              choices: [\n                ['stack', t('stack')],\n                ['stream', t('stream')],\n                ['expand', t('expand')],\n              ],\n              default: 'stack',\n              description: '',\n            },\n          },\n        ],\n      ],\n    },\n  ];\n\nexport const controlPanelSectionsChartOptionsOnlyColorScheme: ControlPanelSectionConfig[] =\n  [\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [['color_scheme']],\n    },\n  ];\n\nexport const controlPanelSectionsChartOptionsTable: ControlPanelSectionConfig[] =\n  [\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        [\n          'metric',\n          'metrics',\n          {\n            name: 'all_columns',\n            config: {\n              type: 'SelectControl',\n              multi: true,\n              label: t('Columns'),\n              default: [],\n              description: t('Columns to display'),\n              optionRenderer: c => <ColumnOption column={c} showType />,\n              valueKey: 'column_name',\n              mapStateToProps: stateRef => ({\n                options: stateRef.datasource?.columns || [],\n              }),\n              freeForm: true,\n            } as ControlConfig<'SelectControl', ColumnMeta>,\n          },\n        ],\n      ],\n    },\n  ];\n\nexport const exploreInitialData: ExplorePageInitialData = {\n  form_data: {\n    datasource: '8__table',\n    metric: 'count',\n    slice_id: 371,\n    viz_type: 'table',\n  },\n  slice: {\n    cache_timeout: null,\n    description: null,\n    slice_id: 371,\n    slice_name: 'Age distribution of respondents',\n    is_managed_externally: false,\n    form_data: {\n      datasource: '8__table',\n      metric: 'count',\n      slice_id: 371,\n      viz_type: 'table',\n    },\n  },\n  dataset: {\n    id: 8,\n    type: DatasourceType.Table,\n    columns: [{ column_name: 'a' }],\n    metrics: [{ metric_name: 'first' }, { metric_name: 'second' }],\n    column_formats: {},\n    verbose_map: {},\n    main_dttm_col: '',\n    datasource_name: '8__table',\n    description: null,\n  },\n};\n\nexport const fallbackExploreInitialData: ExplorePageInitialData = {\n  form_data: {\n    datasource: '0__table',\n    viz_type: 'table',\n  },\n  dataset: {\n    id: 0,\n    type: DatasourceType.Table,\n    columns: [],\n    metrics: [],\n    column_formats: {},\n    verbose_map: {},\n    main_dttm_col: '',\n    owners: [],\n    datasource_name: 'missing_datasource',\n    name: 'missing_datasource',\n    description: null,\n  },\n  slice: null,\n};\n"]},"metadata":{},"sourceType":"module"}