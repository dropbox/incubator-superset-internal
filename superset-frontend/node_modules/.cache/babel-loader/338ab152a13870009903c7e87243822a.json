{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled, NO_TIME_RANGE } from '@superset-ui/core';\nimport React, { useCallback, useEffect } from 'react';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport { FilterPluginStyle } from '../common';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst TimeFilterStyles = styled(FilterPluginStyle)`\n  display: flex;\n  align-items: center;\n  overflow-x: auto;\n\n  & .ant-tag {\n    margin-right: 0;\n  }\n`;\nconst ControlContainer = styled.div`\n  display: flex;\n  height: 100%;\n  max-width: 100%;\n  width: 100%;\n  & > div,\n  & > div:hover {\n    ${(_ref) => {var _theme$colors$validat;let { validateStatus, theme } = _ref;return validateStatus && `border-color: ${(_theme$colors$validat = theme.colors[validateStatus]) == null ? void 0 : _theme$colors$validat.base}`;}}\n  }\n`;\nexport default function TimeFilterPlugin(props) {var _props$formData;\n  const { setDataMask, setHoveredFilter, unsetHoveredFilter, setFocusedFilter, unsetFocusedFilter, setFilterActive, width, height, filterState, inputRef, isOverflowingFilterBar = false } = props;\n  const handleTimeRangeChange = useCallback((timeRange) => {\n    const isSet = timeRange && timeRange !== NO_TIME_RANGE;\n    setDataMask({\n      extraFormData: isSet ?\n      {\n        time_range: timeRange } :\n\n      {},\n      filterState: {\n        value: isSet ? timeRange : undefined } });\n\n\n  }, [setDataMask]);\n  useEffect(() => {\n    handleTimeRangeChange(filterState.value);\n  }, [filterState.value]);\n  return (_props$formData = props.formData) != null && _props$formData.inView ? ___EmotionJSX(TimeFilterStyles, { width: width, height: height },\n  ___EmotionJSX(ControlContainer, { ref: inputRef, validateStatus: filterState.validateStatus, onFocus: setFocusedFilter, onBlur: unsetFocusedFilter, onMouseEnter: setHoveredFilter, onMouseLeave: unsetHoveredFilter },\n  ___EmotionJSX(DateFilterControl, { value: filterState.value || NO_TIME_RANGE, name: \"time_range\", onChange: handleTimeRangeChange, onOpenPopover: () => setFilterActive(true), onClosePopover: () => {\n      setFilterActive(false);\n      unsetHoveredFilter();\n      unsetFocusedFilter();\n    }, isOverflowingFilterBar: isOverflowingFilterBar }))) :\n\n  null;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,MAAT,EAAiBC,aAAjB,QAAsC,mBAAtC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,iBAAP,MAA8B,mDAA9B;AAEA,SAASC,iBAAT,QAAkC,WAAlC,C;AAEA,MAAMC,gBAAgB,GAAGP,MAAM,CAACM,iBAAD,CAAmB;;;;;;;;CAAlD;AAUA,MAAME,gBAAgB,GAAGR,MAAM,CAACS,GAE9B;;;;;;;MAOI,yCAAC,EAAEC,cAAF,EAAkBC,KAAlB,EAAD,eACAD,cAAc,IAAI,0CAAiBC,KAAK,CAACC,MAAN,CAAaF,cAAb,CAAjB,qBAAiB,sBAA8BG,IAAI,EADrE,EACuE;;CAV7E;AAcA,eAAc,SAAUC,gBAAV,CAA2BC,KAA3B,EAAuD;EACnE,MAAM,EACJC,WADI,EAEJC,gBAFI,EAGJC,kBAHI,EAIJC,gBAJI,EAKJC,kBALI,EAMJC,eANI,EAOJC,KAPI,EAQJC,MARI,EASJC,WATI,EAUJC,QAVI,EAWJC,sBAAsB,GAAG,KAXrB,KAYFX,KAZJ;EAcA,MAAMY,qBAAqB,GAAGxB,WAAW,CACvC,CAACyB,SAAD,KAA6B;IAC3B,MAAMC,KAAK,GAAGD,SAAS,IAAIA,SAAS,KAAK3B,aAAzC;IACAe,WAAW,CAAC;MACVc,aAAa,EAAED,KAAK;MAChB;QACEE,UAAU,EAAEH,SADd,EADgB;;MAIhB,EALM;MAMVJ,WAAW,EAAE;QACXQ,KAAK,EAAEH,KAAK,GAAGD,SAAH,GAAeK,SADhB,EANH,EAAD,CAAX;;;EAUD,CAbsC,EAcvC,CAACjB,WAAD,CAduC,CAAzC;EAiBAZ,SAAS,CAAC,MAAK;IACbuB,qBAAqB,CAACH,WAAW,CAACQ,KAAb,CAArB;EACD,CAFQ,EAEN,CAACR,WAAW,CAACQ,KAAb,CAFM,CAAT;EAIA,OAAO,wBAAK,CAACE,QAAN,6BAAgBC,MAAhB,GACL,cAAC,gBAAD,IAAkB,KAAK,EAAEb,KAAzB,EAAgC,MAAM,EAAEC,MAAxC;EACE,cAAC,gBAAD,IACE,GAAG,EAAEE,QADP,EAEE,cAAc,EAAED,WAAW,CAACd,cAF9B,EAGE,OAAO,EAAES,gBAHX,EAIE,MAAM,EAAEC,kBAJV,EAKE,YAAY,EAAEH,gBALhB,EAME,YAAY,EAAEC,kBANhB;EAQE,cAAC,iBAAD,IACE,KAAK,EAAEM,WAAW,CAACQ,KAAZ,IAAqB/B,aAD9B,EAEE,IAAI,EAAC,YAFP,EAGE,QAAQ,EAAE0B,qBAHZ,EAIE,aAAa,EAAE,MAAMN,eAAe,CAAC,IAAD,CAJtC,EAKE,cAAc,EAAE,MAAK;MACnBA,eAAe,CAAC,KAAD,CAAf;MACAH,kBAAkB;MAClBE,kBAAkB;IACnB,CATH,EAUE,sBAAsB,EAAEM,sBAV1B,GARF,CADF,CADK;;EAwBH,IAxBJ;AAyBD","names":["styled","NO_TIME_RANGE","React","useCallback","useEffect","DateFilterControl","FilterPluginStyle","TimeFilterStyles","ControlContainer","div","validateStatus","theme","colors","base","TimeFilterPlugin","props","setDataMask","setHoveredFilter","unsetHoveredFilter","setFocusedFilter","unsetFocusedFilter","setFilterActive","width","height","filterState","inputRef","isOverflowingFilterBar","handleTimeRangeChange","timeRange","isSet","extraFormData","time_range","value","undefined","formData","inView"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/filters/components/Time/TimeFilterPlugin.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled, NO_TIME_RANGE } from '@superset-ui/core';\nimport React, { useCallback, useEffect } from 'react';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport { PluginFilterTimeProps } from './types';\nimport { FilterPluginStyle } from '../common';\n\nconst TimeFilterStyles = styled(FilterPluginStyle)`\n  display: flex;\n  align-items: center;\n  overflow-x: auto;\n\n  & .ant-tag {\n    margin-right: 0;\n  }\n`;\n\nconst ControlContainer = styled.div<{\n  validateStatus?: 'error' | 'warning' | 'info';\n}>`\n  display: flex;\n  height: 100%;\n  max-width: 100%;\n  width: 100%;\n  & > div,\n  & > div:hover {\n    ${({ validateStatus, theme }) =>\n      validateStatus && `border-color: ${theme.colors[validateStatus]?.base}`}\n  }\n`;\n\nexport default function TimeFilterPlugin(props: PluginFilterTimeProps) {\n  const {\n    setDataMask,\n    setHoveredFilter,\n    unsetHoveredFilter,\n    setFocusedFilter,\n    unsetFocusedFilter,\n    setFilterActive,\n    width,\n    height,\n    filterState,\n    inputRef,\n    isOverflowingFilterBar = false,\n  } = props;\n\n  const handleTimeRangeChange = useCallback(\n    (timeRange?: string): void => {\n      const isSet = timeRange && timeRange !== NO_TIME_RANGE;\n      setDataMask({\n        extraFormData: isSet\n          ? {\n              time_range: timeRange,\n            }\n          : {},\n        filterState: {\n          value: isSet ? timeRange : undefined,\n        },\n      });\n    },\n    [setDataMask],\n  );\n\n  useEffect(() => {\n    handleTimeRangeChange(filterState.value);\n  }, [filterState.value]);\n\n  return props.formData?.inView ? (\n    <TimeFilterStyles width={width} height={height}>\n      <ControlContainer\n        ref={inputRef}\n        validateStatus={filterState.validateStatus}\n        onFocus={setFocusedFilter}\n        onBlur={unsetFocusedFilter}\n        onMouseEnter={setHoveredFilter}\n        onMouseLeave={unsetHoveredFilter}\n      >\n        <DateFilterControl\n          value={filterState.value || NO_TIME_RANGE}\n          name=\"time_range\"\n          onChange={handleTimeRangeChange}\n          onOpenPopover={() => setFilterActive(true)}\n          onClosePopover={() => {\n            setFilterActive(false);\n            unsetHoveredFilter();\n            unsetFocusedFilter();\n          }}\n          isOverflowingFilterBar={isOverflowingFilterBar}\n        />\n      </ControlContainer>\n    </TimeFilterStyles>\n  ) : null;\n}\n"]},"metadata":{},"sourceType":"module"}