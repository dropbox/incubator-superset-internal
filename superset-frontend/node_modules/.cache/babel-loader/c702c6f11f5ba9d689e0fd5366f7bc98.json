{"ast":null,"code":"import _filter from \"lodash/filter\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { t } from '@superset-ui/core';\n\nimport { useChartEditModal, useFavoriteStatus, useListViewResource } from 'src/views/CRUD/hooks';\nimport { getItem, LocalStorageKeys, setItem } from 'src/utils/localStorageHelpers';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useHistory } from 'react-router-dom';\nimport { TableTab } from 'src/views/CRUD/types';\nimport PropertiesModal from 'src/explore/components/PropertiesModal';\nimport { CardContainer, getFilterValues, PAGE_SIZE } from 'src/views/CRUD/utils';\nimport { LoadingCards } from 'src/pages/Home';\nimport ChartCard from 'src/features/charts/ChartCard';\nimport handleResourceExport from 'src/utils/export';\nimport Loading from 'src/components/Loading';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport EmptyState from './EmptyState';\nimport { WelcomeTable } from './types';\nimport SubMenu from './SubMenu';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction ChartTable(_ref) {let { user, addDangerToast, addSuccessToast, mine, showThumbnails, otherTabData, otherTabFilters, otherTabTitle } = _ref;\n  const history = useHistory();\n  const initialTab = getItem(LocalStorageKeys.homepage_chart_filter, TableTab.Other);\n  const filteredOtherTabData = _filter(otherTabData, (obj) => 'viz_type' in obj);\n  const { state: { loading, resourceCollection: charts, bulkSelectEnabled }, setResourceCollection: setCharts, hasPerm, refreshData, fetchData } = useListViewResource('chart', t('chart'), addDangerToast, true, initialTab === TableTab.Mine ? mine : filteredOtherTabData, [], false);\n  const chartIds = useMemo(() => charts.map((c) => c.id), [charts]);\n  const [saveFavoriteStatus, favoriteStatus] = useFavoriteStatus('chart', chartIds, addDangerToast);\n  const { sliceCurrentlyEditing, openChartEditModal, handleChartUpdated, closeChartEditModal } = useChartEditModal(setCharts, charts);\n  const [activeTab, setActiveTab] = useState(initialTab);\n  const [preparingExport, setPreparingExport] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const getData = (tab) => fetchData({\n    pageIndex: 0,\n    pageSize: PAGE_SIZE,\n    sortBy: [\n    {\n      id: 'changed_on_delta_humanized',\n      desc: true }],\n\n\n    filters: getFilterValues(tab, WelcomeTable.Charts, user, otherTabFilters) });\n\n  useEffect(() => {\n    if (loaded || activeTab === TableTab.Favorite) {\n      getData(activeTab);\n    }\n    setLoaded(true);\n  }, [activeTab]);\n  const handleBulkChartExport = (chartsToExport) => {\n    const ids = chartsToExport.map((_ref2) => {let { id } = _ref2;return id;});\n    handleResourceExport('chart', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n  const menuTabs = [\n  {\n    name: TableTab.Favorite,\n    label: t('Favorite'),\n    onClick: () => {\n      setActiveTab(TableTab.Favorite);\n      setItem(LocalStorageKeys.homepage_chart_filter, TableTab.Favorite);\n    } },\n\n  {\n    name: TableTab.Mine,\n    label: t('Mine'),\n    onClick: () => {\n      setActiveTab(TableTab.Mine);\n      setItem(LocalStorageKeys.homepage_chart_filter, TableTab.Mine);\n    } }];\n\n\n  if (otherTabData) {\n    menuTabs.push({\n      name: TableTab.Other,\n      label: otherTabTitle,\n      onClick: () => {\n        setActiveTab(TableTab.Other);\n        setItem(LocalStorageKeys.homepage_chart_filter, TableTab.Other);\n      } });\n\n  }\n  if (loading)\n  return ___EmotionJSX(LoadingCards, { cover: showThumbnails });\n  return ___EmotionJSX(ErrorBoundary, null,\n  sliceCurrentlyEditing && ___EmotionJSX(PropertiesModal, { onHide: closeChartEditModal, onSave: handleChartUpdated, show: true, slice: sliceCurrentlyEditing }),\n\n  ___EmotionJSX(SubMenu, { activeChild: activeTab, tabs: menuTabs, buttons: [\n    {\n      name: ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }),\n      t('Chart')),\n\n      buttonStyle: 'tertiary',\n      onClick: () => {\n        window.location.assign('/chart/add');\n      } },\n\n    {\n      name: t('View All Â»'),\n      buttonStyle: 'link',\n      onClick: () => {\n        const target = activeTab === TableTab.Favorite ?\n        `/chart/list/?filters=(favorite:(label:${t('Yes')},value:!t))` :\n        '/chart/list/';\n        history.push(target);\n      } }] }),\n\n\n  charts != null && charts.length ? ___EmotionJSX(CardContainer, { showThumbnails: showThumbnails },\n  charts.map((e) => ___EmotionJSX(ChartCard, { key: `${e.id}`, openChartEditModal: openChartEditModal, chartFilter: activeTab, chart: e, userId: user == null ? void 0 : user.userId, hasPerm: hasPerm, showThumbnails: showThumbnails, bulkSelectEnabled: bulkSelectEnabled, refreshData: refreshData, addDangerToast: addDangerToast, addSuccessToast: addSuccessToast, favoriteStatus: favoriteStatus[e.id], saveFavoriteStatus: saveFavoriteStatus, handleBulkChartExport: handleBulkChartExport }))) :\n  ___EmotionJSX(EmptyState, { tableName: WelcomeTable.Charts, tab: activeTab, otherTabTitle: otherTabTitle }),\n  preparingExport && ___EmotionJSX(Loading, null));\n\n}__signature__(ChartTable, \"useHistory{history}\\nuseListViewResource{{ state: { loading, resourceCollection: charts, bulkSelectEnabled }, setResourceCollection: setCharts, hasPerm, refreshData, fetchData, }}\\nuseMemo{chartIds}\\nuseFavoriteStatus{[saveFavoriteStatus, favoriteStatus]}\\nuseChartEditModal{{ sliceCurrentlyEditing, openChartEditModal, handleChartUpdated, closeChartEditModal, }}\\nuseState{[activeTab, setActiveTab](initialTab)}\\nuseState{[preparingExport, setPreparingExport](false)}\\nuseState{[loaded, setLoaded](false)}\\nuseEffect{}\", () => [useHistory, useListViewResource, useFavoriteStatus, useChartEditModal]);const _default =\nwithToasts(ChartTable);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ChartTable, \"ChartTable\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/home/ChartTable.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/home/ChartTable.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useEffect","useMemo","useState","t","useChartEditModal","useFavoriteStatus","useListViewResource","getItem","LocalStorageKeys","setItem","withToasts","useHistory","TableTab","PropertiesModal","CardContainer","getFilterValues","PAGE_SIZE","LoadingCards","ChartCard","handleResourceExport","Loading","ErrorBoundary","EmptyState","WelcomeTable","SubMenu","ChartTable","user","addDangerToast","addSuccessToast","mine","showThumbnails","otherTabData","otherTabFilters","otherTabTitle","history","initialTab","homepage_chart_filter","Other","filteredOtherTabData","obj","state","loading","resourceCollection","charts","bulkSelectEnabled","setResourceCollection","setCharts","hasPerm","refreshData","fetchData","Mine","chartIds","map","c","id","saveFavoriteStatus","favoriteStatus","sliceCurrentlyEditing","openChartEditModal","handleChartUpdated","closeChartEditModal","activeTab","setActiveTab","preparingExport","setPreparingExport","loaded","setLoaded","getData","tab","pageIndex","pageSize","sortBy","desc","filters","Charts","Favorite","handleBulkChartExport","chartsToExport","ids","menuTabs","name","label","onClick","push","buttonStyle","window","location","assign","target","length","e","userId"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/home/ChartTable.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport { filter } from 'lodash';\nimport {\n  useChartEditModal,\n  useFavoriteStatus,\n  useListViewResource,\n} from 'src/views/CRUD/hooks';\nimport {\n  getItem,\n  LocalStorageKeys,\n  setItem,\n} from 'src/utils/localStorageHelpers';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useHistory } from 'react-router-dom';\nimport { Filter, TableTab } from 'src/views/CRUD/types';\nimport PropertiesModal from 'src/explore/components/PropertiesModal';\nimport { User } from 'src/types/bootstrapTypes';\nimport {\n  CardContainer,\n  getFilterValues,\n  PAGE_SIZE,\n} from 'src/views/CRUD/utils';\nimport { LoadingCards } from 'src/pages/Home';\nimport ChartCard from 'src/features/charts/ChartCard';\nimport Chart from 'src/types/Chart';\nimport handleResourceExport from 'src/utils/export';\nimport Loading from 'src/components/Loading';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport EmptyState from './EmptyState';\nimport { WelcomeTable } from './types';\nimport SubMenu from './SubMenu';\n\ninterface ChartTableProps {\n  addDangerToast: (message: string) => void;\n  addSuccessToast: (message: string) => void;\n  user?: User;\n  mine: Array<any>;\n  showThumbnails: boolean;\n  otherTabData?: Array<object>;\n  otherTabFilters: Filter[];\n  otherTabTitle: string;\n}\n\nfunction ChartTable({\n  user,\n  addDangerToast,\n  addSuccessToast,\n  mine,\n  showThumbnails,\n  otherTabData,\n  otherTabFilters,\n  otherTabTitle,\n}: ChartTableProps) {\n  const history = useHistory();\n  const initialTab = getItem(\n    LocalStorageKeys.homepage_chart_filter,\n    TableTab.Other,\n  );\n\n  const filteredOtherTabData = filter(otherTabData, obj => 'viz_type' in obj);\n\n  const {\n    state: { loading, resourceCollection: charts, bulkSelectEnabled },\n    setResourceCollection: setCharts,\n    hasPerm,\n    refreshData,\n    fetchData,\n  } = useListViewResource<Chart>(\n    'chart',\n    t('chart'),\n    addDangerToast,\n    true,\n    initialTab === TableTab.Mine ? mine : filteredOtherTabData,\n    [],\n    false,\n  );\n\n  const chartIds = useMemo(() => charts.map(c => c.id), [charts]);\n  const [saveFavoriteStatus, favoriteStatus] = useFavoriteStatus(\n    'chart',\n    chartIds,\n    addDangerToast,\n  );\n  const {\n    sliceCurrentlyEditing,\n    openChartEditModal,\n    handleChartUpdated,\n    closeChartEditModal,\n  } = useChartEditModal(setCharts, charts);\n\n  const [activeTab, setActiveTab] = useState(initialTab);\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n  const [loaded, setLoaded] = useState<boolean>(false);\n\n  const getData = (tab: TableTab) =>\n    fetchData({\n      pageIndex: 0,\n      pageSize: PAGE_SIZE,\n      sortBy: [\n        {\n          id: 'changed_on_delta_humanized',\n          desc: true,\n        },\n      ],\n      filters: getFilterValues(tab, WelcomeTable.Charts, user, otherTabFilters),\n    });\n\n  useEffect(() => {\n    if (loaded || activeTab === TableTab.Favorite) {\n      getData(activeTab);\n    }\n    setLoaded(true);\n  }, [activeTab]);\n\n  const handleBulkChartExport = (chartsToExport: Chart[]) => {\n    const ids = chartsToExport.map(({ id }) => id);\n    handleResourceExport('chart', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n\n  const menuTabs = [\n    {\n      name: TableTab.Favorite,\n      label: t('Favorite'),\n      onClick: () => {\n        setActiveTab(TableTab.Favorite);\n        setItem(LocalStorageKeys.homepage_chart_filter, TableTab.Favorite);\n      },\n    },\n    {\n      name: TableTab.Mine,\n      label: t('Mine'),\n      onClick: () => {\n        setActiveTab(TableTab.Mine);\n        setItem(LocalStorageKeys.homepage_chart_filter, TableTab.Mine);\n      },\n    },\n  ];\n  if (otherTabData) {\n    menuTabs.push({\n      name: TableTab.Other,\n      label: otherTabTitle,\n      onClick: () => {\n        setActiveTab(TableTab.Other);\n        setItem(LocalStorageKeys.homepage_chart_filter, TableTab.Other);\n      },\n    });\n  }\n\n  if (loading) return <LoadingCards cover={showThumbnails} />;\n  return (\n    <ErrorBoundary>\n      {sliceCurrentlyEditing && (\n        <PropertiesModal\n          onHide={closeChartEditModal}\n          onSave={handleChartUpdated}\n          show\n          slice={sliceCurrentlyEditing}\n        />\n      )}\n\n      <SubMenu\n        activeChild={activeTab}\n        tabs={menuTabs}\n        buttons={[\n          {\n            name: (\n              <>\n                <i className=\"fa fa-plus\" />\n                {t('Chart')}\n              </>\n            ),\n            buttonStyle: 'tertiary',\n            onClick: () => {\n              window.location.assign('/chart/add');\n            },\n          },\n          {\n            name: t('View All Â»'),\n            buttonStyle: 'link',\n            onClick: () => {\n              const target =\n                activeTab === TableTab.Favorite\n                  ? `/chart/list/?filters=(favorite:(label:${t(\n                      'Yes',\n                    )},value:!t))`\n                  : '/chart/list/';\n              history.push(target);\n            },\n          },\n        ]}\n      />\n      {charts?.length ? (\n        <CardContainer showThumbnails={showThumbnails}>\n          {charts.map(e => (\n            <ChartCard\n              key={`${e.id}`}\n              openChartEditModal={openChartEditModal}\n              chartFilter={activeTab}\n              chart={e}\n              userId={user?.userId}\n              hasPerm={hasPerm}\n              showThumbnails={showThumbnails}\n              bulkSelectEnabled={bulkSelectEnabled}\n              refreshData={refreshData}\n              addDangerToast={addDangerToast}\n              addSuccessToast={addSuccessToast}\n              favoriteStatus={favoriteStatus[e.id]}\n              saveFavoriteStatus={saveFavoriteStatus}\n              handleBulkChartExport={handleBulkChartExport}\n            />\n          ))}\n        </CardContainer>\n      ) : (\n        <EmptyState\n          tableName={WelcomeTable.Charts}\n          tab={activeTab}\n          otherTabTitle={otherTabTitle}\n        />\n      )}\n      {preparingExport && <Loading />}\n    </ErrorBoundary>\n  );\n}\n\nexport default withToasts(ChartTable);\n"]},"metadata":{},"sourceType":"module"}