{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useRef } from 'react';\nimport { styled, useTruncation } from '@superset-ui/core';\nimport { Link } from 'react-router-dom';\nimport CrossLinksTooltip from './CrossLinksTooltip';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledCrossLinks = styled.div`\n  ${(_ref) => {let { theme } = _ref;return `\n    & > span {\n      width: 100%;\n      display: flex;\n\n      .ant-tooltip-open {\n        display: inline;\n      }\n\n      .truncated {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        display: inline-block;\n        width: 100%;\n        vertical-align: bottom;\n      }\n\n      .count {\n        cursor: pointer;\n        color: ${theme.colors.grayscale.base};\n        font-weight: ${theme.typography.weights.bold};\n      }\n    }\n  `;}}\n`;\nexport default function CrossLinks(_ref2) {let { crossLinks, maxLinks = 20, linkPrefix = '/superset/dashboard/' } = _ref2;\n  const crossLinksRef = useRef(null);\n  const plusRef = useRef(null);\n  const [elementsTruncated, hasHiddenElements] = useTruncation(crossLinksRef, plusRef);\n  const hasMoreItems = useMemo(() => crossLinks.length > maxLinks ? crossLinks.length - maxLinks : undefined, [crossLinks, maxLinks]);\n  const links = useMemo(() => ___EmotionJSX(\"span\", { className: \"truncated\", ref: crossLinksRef, \"data-test\": \"crosslinks\" },\n  crossLinks.map((link, index) => ___EmotionJSX(Link, { key: link.id, to: linkPrefix + link.id, target: \"_blank\", rel: \"noreferer noopener\" },\n  index === 0 ? link.title : `, ${link.title}`))),\n\n  [crossLinks]);\n  const tooltipLinks = useMemo(() => crossLinks.slice(0, maxLinks).map((l) => ({\n    title: l.title,\n    to: linkPrefix + l.id })),\n  [crossLinks, maxLinks]);\n  return ___EmotionJSX(StyledCrossLinks, null,\n  ___EmotionJSX(CrossLinksTooltip, { moreItems: hasMoreItems, crossLinks: tooltipLinks, show: !!elementsTruncated },\n  links,\n  hasHiddenElements && ___EmotionJSX(\"span\", { ref: plusRef, className: \"count\", \"data-test\": \"count-crosslinks\" }, \"+\",\n  elementsTruncated)));\n\n\n\n}__signature__(CrossLinks, \"useRef{crossLinksRef}\\nuseRef{plusRef}\\nuseTruncation{[elementsTruncated, hasHiddenElements]}\\nuseMemo{hasMoreItems}\\nuseMemo{links}\\nuseMemo{tooltipLinks}\", () => [useTruncation]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledCrossLinks, \"StyledCrossLinks\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ListView/CrossLinks.tsx\");reactHotLoader.register(CrossLinks, \"CrossLinks\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ListView/CrossLinks.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,MAAzB,QAAuC,OAAvC;AACA,SAASC,MAAT,EAAiBC,aAAjB,QAAsC,mBAAtC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B,C;AAaA,MAAMC,gBAAgB,GAAGJ,MAAM,CAACK,GAAG;IAC/B,eAAC,EAAEC,KAAF,EAAD,eAAe;;;;;;;;;;;;;;;;;;;;iBAoBFA,KAAK,CAACC,MAAN,CAAaC,SAAb,CAAuBC,IAAI;uBACrBH,KAAK,CAACI,UAAN,CAAiBC,OAAjB,CAAyBC,IAAI;;;GArBhD,EAwBD;CAzBH;AA4BA,eAAc,SAAUC,UAAV,QAII,KAJiB,EACjCC,UADiC,EAEjCC,QAAQ,GAAG,EAFsB,EAGjCC,UAAU,GAAG,sBAHoB,EAIjB;EAChB,MAAMC,aAAa,GAAGlB,MAAM,CAAiB,IAAjB,CAA5B;EACA,MAAMmB,OAAO,GAAGnB,MAAM,CAAiB,IAAjB,CAAtB;EACA,MAAM,CAACoB,iBAAD,EAAoBC,iBAApB,IAAyCnB,aAAa,CAC1DgB,aAD0D,EAE1DC,OAF0D,CAA5D;EAIA,MAAMG,YAAY,GAAGvB,OAAO,CAC1B,MACEgB,UAAU,CAACQ,MAAX,GAAoBP,QAApB,GAA+BD,UAAU,CAACQ,MAAX,GAAoBP,QAAnD,GAA8DQ,SAFtC,EAG1B,CAACT,UAAD,EAAaC,QAAb,CAH0B,CAA5B;EAKA,MAAMS,KAAK,GAAG1B,OAAO,CACnB,MACE,wBAAM,SAAS,EAAC,WAAhB,EAA4B,GAAG,EAAEmB,aAAjC,EAAgD,aAAU,YAA1D;EACGH,UAAU,CAACW,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KACd,cAAC,IAAD,IACE,GAAG,EAAED,IAAI,CAACE,EADZ,EAEE,EAAE,EAAEZ,UAAU,GAAGU,IAAI,CAACE,EAFxB,EAGE,MAAM,EAAC,QAHT,EAIE,GAAG,EAAC,oBAJN;EAMGD,KAAK,KAAK,CAAV,GAAcD,IAAI,CAACG,KAAnB,GAA2B,KAAKH,IAAI,CAACG,KAAK,EAN7C,CADD,CADH,CAFiB;;EAenB,CAACf,UAAD,CAfmB,CAArB;EAiBA,MAAMgB,YAAY,GAAGhC,OAAO,CAC1B,MACEgB,UAAU,CAACiB,KAAX,CAAiB,CAAjB,EAAoBhB,QAApB,EAA8BU,GAA9B,CAAkC,EAAC,MAAK;IACtCI,KAAK,EAAEG,CAAC,CAACH,KAD6B;IAEtCI,EAAE,EAAEjB,UAAU,GAAGgB,CAAC,CAACJ,EAFmB,EAAL,CAAnC,CAFwB;EAM1B,CAACd,UAAD,EAAaC,QAAb,CAN0B,CAA5B;EASA,OACE,cAAC,gBAAD;EACE,cAAC,iBAAD,IACE,SAAS,EAAEM,YADb,EAEE,UAAU,EAAES,YAFd,EAGE,IAAI,EAAE,CAAC,CAACX,iBAHV;EAKGK,KALH;EAMGJ,iBAAiB,IAChB,wBAAM,GAAG,EAAEF,OAAX,EAAoB,SAAS,EAAC,OAA9B,EAAsC,aAAU,kBAAhD;EACIC,iBADJ,CAPJ,CADF,CADF;;;;AAgBD,C,cA1DuBN,U,wKAOyBZ,a,oLAnC3CG,gB,yJA4BkBS,U","names":["React","useMemo","useRef","styled","useTruncation","Link","CrossLinksTooltip","StyledCrossLinks","div","theme","colors","grayscale","base","typography","weights","bold","CrossLinks","crossLinks","maxLinks","linkPrefix","crossLinksRef","plusRef","elementsTruncated","hasHiddenElements","hasMoreItems","length","undefined","links","map","link","index","id","title","tooltipLinks","slice","l","to"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ListView/CrossLinks.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useRef } from 'react';\nimport { styled, useTruncation } from '@superset-ui/core';\nimport { Link } from 'react-router-dom';\nimport CrossLinksTooltip from './CrossLinksTooltip';\n\nexport type CrossLinkProps = {\n  title: string;\n  id: number;\n};\n\nexport type CrossLinksProps = {\n  crossLinks: Array<CrossLinkProps>;\n  maxLinks?: number;\n  linkPrefix?: string;\n};\n\nconst StyledCrossLinks = styled.div`\n  ${({ theme }) => `\n    & > span {\n      width: 100%;\n      display: flex;\n\n      .ant-tooltip-open {\n        display: inline;\n      }\n\n      .truncated {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        display: inline-block;\n        width: 100%;\n        vertical-align: bottom;\n      }\n\n      .count {\n        cursor: pointer;\n        color: ${theme.colors.grayscale.base};\n        font-weight: ${theme.typography.weights.bold};\n      }\n    }\n  `}\n`;\n\nexport default function CrossLinks({\n  crossLinks,\n  maxLinks = 20,\n  linkPrefix = '/superset/dashboard/',\n}: CrossLinksProps) {\n  const crossLinksRef = useRef<HTMLDivElement>(null);\n  const plusRef = useRef<HTMLDivElement>(null);\n  const [elementsTruncated, hasHiddenElements] = useTruncation(\n    crossLinksRef,\n    plusRef,\n  );\n  const hasMoreItems = useMemo(\n    () =>\n      crossLinks.length > maxLinks ? crossLinks.length - maxLinks : undefined,\n    [crossLinks, maxLinks],\n  );\n  const links = useMemo(\n    () => (\n      <span className=\"truncated\" ref={crossLinksRef} data-test=\"crosslinks\">\n        {crossLinks.map((link, index) => (\n          <Link\n            key={link.id}\n            to={linkPrefix + link.id}\n            target=\"_blank\"\n            rel=\"noreferer noopener\"\n          >\n            {index === 0 ? link.title : `, ${link.title}`}\n          </Link>\n        ))}\n      </span>\n    ),\n    [crossLinks],\n  );\n  const tooltipLinks = useMemo(\n    () =>\n      crossLinks.slice(0, maxLinks).map(l => ({\n        title: l.title,\n        to: linkPrefix + l.id,\n      })),\n    [crossLinks, maxLinks],\n  );\n\n  return (\n    <StyledCrossLinks>\n      <CrossLinksTooltip\n        moreItems={hasMoreItems}\n        crossLinks={tooltipLinks}\n        show={!!elementsTruncated}\n      >\n        {links}\n        {hasHiddenElements && (\n          <span ref={plusRef} className=\"count\" data-test=\"count-crosslinks\">\n            +{elementsTruncated}\n          </span>\n        )}\n      </CrossLinksTooltip>\n    </StyledCrossLinks>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}