{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getStandardizedControls, sections } from '@superset-ui/chart-controls';\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport timeGrainSqlaAnimationOverrides from '../../utilities/controls';\nimport { filterNulls, autozoom, jsColumns, jsDataMutator, jsTooltip, jsOnclickHref, gridSize, viewport, spatial, mapboxStyle } from '../../utilities/Shared_DeckGL';\nconst config = {\n  controlPanelSections: [\n  sections.legacyRegularTime,\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    [spatial],\n    ['size'],\n    ['row_limit'],\n    [filterNulls],\n    ['adhoc_filters']] },\n\n\n  {\n    label: t('Map'),\n    controlSetRows: [\n    [mapboxStyle, viewport],\n    [autozoom, null]] },\n\n\n  {\n    label: t('Grid'),\n    expanded: true,\n    controlSetRows: [[gridSize, 'color_picker']] },\n\n  {\n    label: t('Advanced'),\n    controlSetRows: [\n    [jsColumns],\n    [jsDataMutator],\n    [jsTooltip],\n    [jsOnclickHref]] }],\n\n\n\n  controlOverrides: {\n    size: {\n      label: t('Weight'),\n      description: t(\"Metric used as a weight for the grid's coloring\"),\n      validators: [validateNonEmpty] },\n\n    time_grain_sqla: timeGrainSqlaAnimationOverrides },\n\n  formDataOverrides: (formData) => ({\n    ...formData,\n    size: getStandardizedControls().shiftMetric() }) };\n\n\nexport default config;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAEEA,uBAFF,EAGEC,QAHF,QAIO,6BAJP;AAKA,SAASC,CAAT,EAAYC,gBAAZ,QAAoC,mBAApC;AACA,OAAOC,+BAAP,MAA4C,0BAA5C;AACA,SACEC,WADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,aAJF,EAKEC,SALF,EAMEC,aANF,EAOEC,QAPF,EAQEC,QARF,EASEC,OATF,EAUEC,WAVF,QAWO,+BAXP;AAaA,MAAMC,MAAM,GAAuB;EACjCC,oBAAoB,EAAE;EACpBf,QAAQ,CAACgB,iBADW;EAEpB;IACEC,KAAK,EAAEhB,CAAC,CAAC,OAAD,CADV;IAEEiB,QAAQ,EAAE,IAFZ;IAGEC,cAAc,EAAE;IACd,CAACP,OAAD,CADc;IAEd,CAAC,MAAD,CAFc;IAGd,CAAC,WAAD,CAHc;IAId,CAACR,WAAD,CAJc;IAKd,CAAC,eAAD,CALc,CAHlB,EAFoB;;;EAapB;IACEa,KAAK,EAAEhB,CAAC,CAAC,KAAD,CADV;IAEEkB,cAAc,EAAE;IACd,CAACN,WAAD,EAAcF,QAAd,CADc;IAEd,CAACN,QAAD,EAAW,IAAX,CAFc,CAFlB,EAboB;;;EAoBpB;IACEY,KAAK,EAAEhB,CAAC,CAAC,MAAD,CADV;IAEEiB,QAAQ,EAAE,IAFZ;IAGEC,cAAc,EAAE,CAAC,CAACT,QAAD,EAAW,cAAX,CAAD,CAHlB,EApBoB;;EAyBpB;IACEO,KAAK,EAAEhB,CAAC,CAAC,UAAD,CADV;IAEEkB,cAAc,EAAE;IACd,CAACb,SAAD,CADc;IAEd,CAACC,aAAD,CAFc;IAGd,CAACC,SAAD,CAHc;IAId,CAACC,aAAD,CAJc,CAFlB,EAzBoB,CADW;;;;EAoCjCW,gBAAgB,EAAE;IAChBC,IAAI,EAAE;MACJJ,KAAK,EAAEhB,CAAC,CAAC,QAAD,CADJ;MAEJqB,WAAW,EAAErB,CAAC,CAAC,iDAAD,CAFV;MAGJsB,UAAU,EAAE,CAACrB,gBAAD,CAHR,EADU;;IAMhBsB,eAAe,EAAErB,+BAND,EApCe;;EA4CjCsB,iBAAiB,EAAE,SAAQ,MAAK;IAC9B,GAAGC,QAD2B;IAE9BL,IAAI,EAAEtB,uBAAuB,GAAG4B,WAA1B,EAFwB,EAAL,CA5CM,EAAnC;;;AAkDA,eAAeb,MAAf","names":["getStandardizedControls","sections","t","validateNonEmpty","timeGrainSqlaAnimationOverrides","filterNulls","autozoom","jsColumns","jsDataMutator","jsTooltip","jsOnclickHref","gridSize","viewport","spatial","mapboxStyle","config","controlPanelSections","legacyRegularTime","label","expanded","controlSetRows","controlOverrides","size","description","validators","time_grain_sqla","formDataOverrides","formData","shiftMetric"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Screengrid/controlPanel.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ControlPanelConfig,\n  getStandardizedControls,\n  sections,\n} from '@superset-ui/chart-controls';\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport timeGrainSqlaAnimationOverrides from '../../utilities/controls';\nimport {\n  filterNulls,\n  autozoom,\n  jsColumns,\n  jsDataMutator,\n  jsTooltip,\n  jsOnclickHref,\n  gridSize,\n  viewport,\n  spatial,\n  mapboxStyle,\n} from '../../utilities/Shared_DeckGL';\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.legacyRegularTime,\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        [spatial],\n        ['size'],\n        ['row_limit'],\n        [filterNulls],\n        ['adhoc_filters'],\n      ],\n    },\n    {\n      label: t('Map'),\n      controlSetRows: [\n        [mapboxStyle, viewport],\n        [autozoom, null],\n      ],\n    },\n    {\n      label: t('Grid'),\n      expanded: true,\n      controlSetRows: [[gridSize, 'color_picker']],\n    },\n    {\n      label: t('Advanced'),\n      controlSetRows: [\n        [jsColumns],\n        [jsDataMutator],\n        [jsTooltip],\n        [jsOnclickHref],\n      ],\n    },\n  ],\n  controlOverrides: {\n    size: {\n      label: t('Weight'),\n      description: t(\"Metric used as a weight for the grid's coloring\"),\n      validators: [validateNonEmpty],\n    },\n    time_grain_sqla: timeGrainSqlaAnimationOverrides,\n  },\n  formDataOverrides: formData => ({\n    ...formData,\n    size: getStandardizedControls().shiftMetric(),\n  }),\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}