{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport default {};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAmDA,eAAe,EAAf","names":[],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/packages/superset-ui-core/src/chart/types/QueryResponse.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * Types for query response\n */\nimport {\n  DataRecordValue,\n  DataRecord,\n  ChartDataResponseResult,\n} from '../../types';\nimport { PlainObject } from './Base';\n\nexport interface TimeseriesDataRecord extends DataRecord {\n  __timestamp: number | string | Date | null;\n}\n\n// data record value filters from FilterBox\nexport interface DataRecordFilters {\n  [key: string]: DataRecordValue[];\n}\n\n/**\n * Legacy queried data for charts. List of arbitrary dictionaries generated\n * by `viz.py`.\n * TODO: clean this up when all charts have been migrated to v1 API.\n */\nexport type LegacyQueryData = PlainObject;\n\n/**\n * Ambiguous query data type. Reserved for the generic QueryFormData.\n * Don't use this for a specific chart (since you know which API it uses already).\n */\nexport type QueryData = LegacyQueryData | ChartDataResponseResult;\n\nexport default {};\n"]},"metadata":{},"sourceType":"module"}