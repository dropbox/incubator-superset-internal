{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-param-reassign */\nimport { css, styled, t, useTheme } from '@superset-ui/core';\nimport React, { useMemo } from 'react';\nimport Icons from 'src/components/Icons';\nimport Button from 'src/components/Button';\nimport { useSelector } from 'react-redux';\nimport FilterConfigurationLink from 'src/dashboard/components/nativeFilters/FilterBar/FilterConfigurationLink';\nimport { useFilters } from 'src/dashboard/components/nativeFilters/FilterBar/state';\nimport { getFilterBarTestId } from '../utils';\nimport FilterBarSettings from '../FilterBarSettings';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst TitleArea = styled.div`\n  ${(_ref) => {let { theme } = _ref;return css`\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n    justify-content: space-between;\n    margin: 0;\n    padding: 0 ${theme.gridUnit * 2}px ${theme.gridUnit * 2}px;\n\n    & > span {\n      font-size: ${theme.typography.sizes.l}px;\n      flex-grow: 1;\n      font-weight: ${theme.typography.weights.bold};\n    }\n\n    & > div:first-of-type {\n      line-height: 0;\n    }\n\n    & > button > span.anticon {\n      line-height: 0;\n    }\n  `;}}\n`;\nconst HeaderButton = styled(Button)`\n  padding: 0;\n`;\nconst Wrapper = styled.div`\n  ${(_ref2) => {let { theme } = _ref2;return `\n    padding: ${theme.gridUnit * 3}px ${theme.gridUnit * 2}px ${theme.gridUnit}px;\n\n    .ant-dropdown-trigger span {\n      padding-right: ${theme.gridUnit * 2}px;\n    }\n  `;}}\n`;\nconst AddFiltersButtonContainer = styled.div`\n  ${(_ref3) => {let { theme } = _ref3;return css`\n    margin-top: ${theme.gridUnit * 2}px;\n\n    & button > [role='img']:first-of-type {\n      margin-right: ${theme.gridUnit}px;\n      line-height: 0;\n    }\n\n    span[role='img'] {\n      padding-bottom: 1px;\n    }\n\n    .ant-btn > .anticon + span {\n      margin-left: 0;\n    }\n  `;}}\n`;\nconst Header = (_ref4) => {let { toggleFiltersBar } = _ref4;\n  const theme = useTheme();\n  const filters = useFilters();\n  const filterValues = useMemo(() => Object.values(filters), [filters]);\n  const canEdit = useSelector((_ref5) => {let { dashboardInfo } = _ref5;return dashboardInfo.dash_edit_perm;});\n  const dashboardId = useSelector((_ref6) => {let { dashboardInfo } = _ref6;return dashboardInfo.id;});\n  return ___EmotionJSX(Wrapper, null,\n  ___EmotionJSX(TitleArea, null,\n  ___EmotionJSX(\"span\", null, t('Filters')),\n  ___EmotionJSX(FilterBarSettings, null),\n  ___EmotionJSX(HeaderButton, _extends({}, getFilterBarTestId('collapse-button'), { buttonStyle: \"link\", buttonSize: \"xsmall\", onClick: () => toggleFiltersBar(false) }),\n  ___EmotionJSX(Icons.Expand, { iconColor: theme.colors.grayscale.base }))),\n\n\n  canEdit && ___EmotionJSX(AddFiltersButtonContainer, null,\n  ___EmotionJSX(FilterConfigurationLink, { dashboardId: dashboardId, createNewOnOpen: filterValues.length === 0 },\n  ___EmotionJSX(Icons.PlusSmall, null), \" \", t('Add/Edit Filters'))));\n\n\n\n};__signature__(Header, \"useTheme{theme}\\nuseFilters{filters}\\nuseMemo{filterValues}\\nuseSelector{canEdit}\\nuseSelector{dashboardId}\", () => [useTheme, useFilters, useSelector, useSelector]);const _default = /*#__PURE__*/\nReact.memo(Header);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TitleArea, \"TitleArea\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/Header/index.tsx\");reactHotLoader.register(HeaderButton, \"HeaderButton\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/Header/index.tsx\");reactHotLoader.register(Wrapper, \"Wrapper\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/Header/index.tsx\");reactHotLoader.register(AddFiltersButtonContainer, \"AddFiltersButtonContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/Header/index.tsx\");reactHotLoader.register(Header, \"Header\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/Header/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/Header/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["css","styled","t","useTheme","React","useMemo","Icons","Button","useSelector","FilterConfigurationLink","useFilters","getFilterBarTestId","FilterBarSettings","TitleArea","div","theme","gridUnit","typography","sizes","l","weights","bold","HeaderButton","Wrapper","AddFiltersButtonContainer","Header","toggleFiltersBar","filters","filterValues","Object","values","canEdit","dashboardInfo","dash_edit_perm","dashboardId","id","colors","grayscale","base","length","memo"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/Header/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-param-reassign */\nimport { css, styled, t, useTheme } from '@superset-ui/core';\nimport React, { FC, useMemo } from 'react';\nimport Icons from 'src/components/Icons';\nimport Button from 'src/components/Button';\nimport { useSelector } from 'react-redux';\nimport FilterConfigurationLink from 'src/dashboard/components/nativeFilters/FilterBar/FilterConfigurationLink';\nimport { useFilters } from 'src/dashboard/components/nativeFilters/FilterBar/state';\nimport { RootState } from 'src/dashboard/types';\nimport { getFilterBarTestId } from '../utils';\nimport FilterBarSettings from '../FilterBarSettings';\n\nconst TitleArea = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n    justify-content: space-between;\n    margin: 0;\n    padding: 0 ${theme.gridUnit * 2}px ${theme.gridUnit * 2}px;\n\n    & > span {\n      font-size: ${theme.typography.sizes.l}px;\n      flex-grow: 1;\n      font-weight: ${theme.typography.weights.bold};\n    }\n\n    & > div:first-of-type {\n      line-height: 0;\n    }\n\n    & > button > span.anticon {\n      line-height: 0;\n    }\n  `}\n`;\n\nconst HeaderButton = styled(Button)`\n  padding: 0;\n`;\n\nconst Wrapper = styled.div`\n  ${({ theme }) => `\n    padding: ${theme.gridUnit * 3}px ${theme.gridUnit * 2}px ${\n    theme.gridUnit\n  }px;\n\n    .ant-dropdown-trigger span {\n      padding-right: ${theme.gridUnit * 2}px;\n    }\n  `}\n`;\n\ntype HeaderProps = {\n  toggleFiltersBar: (arg0: boolean) => void;\n};\n\nconst AddFiltersButtonContainer = styled.div`\n  ${({ theme }) => css`\n    margin-top: ${theme.gridUnit * 2}px;\n\n    & button > [role='img']:first-of-type {\n      margin-right: ${theme.gridUnit}px;\n      line-height: 0;\n    }\n\n    span[role='img'] {\n      padding-bottom: 1px;\n    }\n\n    .ant-btn > .anticon + span {\n      margin-left: 0;\n    }\n  `}\n`;\n\nconst Header: FC<HeaderProps> = ({ toggleFiltersBar }) => {\n  const theme = useTheme();\n  const filters = useFilters();\n  const filterValues = useMemo(() => Object.values(filters), [filters]);\n  const canEdit = useSelector<RootState, boolean>(\n    ({ dashboardInfo }) => dashboardInfo.dash_edit_perm,\n  );\n  const dashboardId = useSelector<RootState, number>(\n    ({ dashboardInfo }) => dashboardInfo.id,\n  );\n\n  return (\n    <Wrapper>\n      <TitleArea>\n        <span>{t('Filters')}</span>\n        <FilterBarSettings />\n        <HeaderButton\n          {...getFilterBarTestId('collapse-button')}\n          buttonStyle=\"link\"\n          buttonSize=\"xsmall\"\n          onClick={() => toggleFiltersBar(false)}\n        >\n          <Icons.Expand iconColor={theme.colors.grayscale.base} />\n        </HeaderButton>\n      </TitleArea>\n      {canEdit && (\n        <AddFiltersButtonContainer>\n          <FilterConfigurationLink\n            dashboardId={dashboardId}\n            createNewOnOpen={filterValues.length === 0}\n          >\n            <Icons.PlusSmall /> {t('Add/Edit Filters')}\n          </FilterConfigurationLink>\n        </AddFiltersButtonContainer>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(Header);\n"]},"metadata":{},"sourceType":"module"}