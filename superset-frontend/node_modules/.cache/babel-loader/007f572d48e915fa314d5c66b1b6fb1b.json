{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport getErrorMessageComponentRegistry from './getErrorMessageComponentRegistry';\nimport ErrorAlert from './ErrorAlert';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DEFAULT_TITLE = t('Unexpected error');\nexport default function ErrorMessageWithStackTrace(_ref) {let { title = DEFAULT_TITLE, error, subtitle, copyText, link, stackTrace, source, description } = _ref;\n  // Check if a custom error message component was registered for this message\n  if (error) {\n    const ErrorMessageComponent = getErrorMessageComponentRegistry().get(error.error_type);\n    if (ErrorMessageComponent) {\n      return ___EmotionJSX(ErrorMessageComponent, { error: error, source: source, subtitle: subtitle });\n    }\n  }\n  return ___EmotionJSX(ErrorAlert, { level: \"warning\", title: title, subtitle: subtitle, copyText: copyText, description: description, source: source, body: link || stackTrace ? ___EmotionJSX(React.Fragment, null,\n    link && ___EmotionJSX(\"a\", { href: link, target: \"_blank\", rel: \"noopener noreferrer\" }, \"(Request Access)\"),\n\n\n    ___EmotionJSX(\"br\", null),\n    stackTrace && ___EmotionJSX(\"pre\", null, stackTrace)) :\n    undefined });\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,CAAT,QAAkB,mBAAlB;AACA,OAAOC,gCAAP,MAA6C,oCAA7C;AAEA,OAAOC,UAAP,MAAuB,cAAvB,C;AAEA,MAAMC,aAAa,GAAGH,CAAC,CAAC,kBAAD,CAAvB;AAcA,eAAc,SAAUI,0BAAV,OASN,KAT2C,EACjDC,KAAK,GAAGF,aADyC,EAEjDG,KAFiD,EAGjDC,QAHiD,EAIjDC,QAJiD,EAKjDC,IALiD,EAMjDC,UANiD,EAOjDC,MAPiD,EAQjDC,WARiD,EAS3C;EACN;EACA,IAAIN,KAAJ,EAAW;IACT,MAAMO,qBAAqB,GAAGZ,gCAAgC,GAAGa,GAAnC,CAC5BR,KAAK,CAACS,UADsB,CAA9B;IAGA,IAAIF,qBAAJ,EAA2B;MACzB,OACE,cAAC,qBAAD,IACE,KAAK,EAAEP,KADT,EAEE,MAAM,EAAEK,MAFV,EAGE,QAAQ,EAAEJ,QAHZ,GADF;IAOD;EACF;EAED,OACE,cAAC,UAAD,IACE,KAAK,EAAC,SADR,EAEE,KAAK,EAAEF,KAFT,EAGE,QAAQ,EAAEE,QAHZ,EAIE,QAAQ,EAAEC,QAJZ,EAKE,WAAW,EAAEI,WALf,EAME,MAAM,EAAED,MANV,EAOE,IAAI,EACFF,IAAI,IAAIC,UAAR,GACE;IACGD,IAAI,IACH,qBAAG,IAAI,EAAEA,IAAT,EAAe,MAAM,EAAC,QAAtB,EAA+B,GAAG,EAAC,qBAAnC,uBAFJ;;;IAME,yBANF;IAOGC,UAAU,IAAI,2BAAMA,UAAN,CAPjB,CADF;IAUIM,SAlBR,GADF;AAuBD","names":["React","t","getErrorMessageComponentRegistry","ErrorAlert","DEFAULT_TITLE","ErrorMessageWithStackTrace","title","error","subtitle","copyText","link","stackTrace","source","description","ErrorMessageComponent","get","error_type","undefined"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ErrorMessage/ErrorMessageWithStackTrace.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport getErrorMessageComponentRegistry from './getErrorMessageComponentRegistry';\nimport { SupersetError, ErrorSource } from './types';\nimport ErrorAlert from './ErrorAlert';\n\nconst DEFAULT_TITLE = t('Unexpected error');\n\ntype Props = {\n  title?: string;\n  error?: SupersetError;\n  link?: string;\n  subtitle?: React.ReactNode;\n  copyText?: string;\n  stackTrace?: string;\n  source?: ErrorSource;\n  description?: string;\n  errorMitigationFunction?: () => void;\n};\n\nexport default function ErrorMessageWithStackTrace({\n  title = DEFAULT_TITLE,\n  error,\n  subtitle,\n  copyText,\n  link,\n  stackTrace,\n  source,\n  description,\n}: Props) {\n  // Check if a custom error message component was registered for this message\n  if (error) {\n    const ErrorMessageComponent = getErrorMessageComponentRegistry().get(\n      error.error_type,\n    );\n    if (ErrorMessageComponent) {\n      return (\n        <ErrorMessageComponent\n          error={error}\n          source={source}\n          subtitle={subtitle}\n        />\n      );\n    }\n  }\n\n  return (\n    <ErrorAlert\n      level=\"warning\"\n      title={title}\n      subtitle={subtitle}\n      copyText={copyText}\n      description={description}\n      source={source}\n      body={\n        link || stackTrace ? (\n          <>\n            {link && (\n              <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n                (Request Access)\n              </a>\n            )}\n            <br />\n            {stackTrace && <pre>{stackTrace}</pre>}\n          </>\n        ) : undefined\n      }\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}