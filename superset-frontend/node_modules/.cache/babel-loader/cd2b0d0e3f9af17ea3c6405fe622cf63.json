{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Slider from 'src/components/Slider';\nimport ControlHeader from 'src/explore/components/ControlHeader';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function SliderControl(_ref) {let { default: defaultValue, name, label, description, renderTrigger, rightNode, leftNode, validationErrors, hovered, warning, danger, onClick, tooltipOnClick, onChange = () => {}, ...rest } = _ref;\n  const headerProps = {\n    name,\n    label,\n    description,\n    renderTrigger,\n    rightNode,\n    leftNode,\n    validationErrors,\n    onClick,\n    hovered,\n    tooltipOnClick,\n    warning,\n    danger };\n\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(ControlHeader, headerProps),\n  ___EmotionJSX(Slider, _extends({}, rest, { onChange: onChange, defaultValue: defaultValue })));\n\n}","map":{"version":3,"mappings":"+DAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,aAAP,MAEO,sCAFP,C;AAUA,eAAc,SAAUC,aAAV,OAgBO,KAhBiB,EACpCC,OAAO,EAAEC,YAD2B,EAEpCC,IAFoC,EAGpCC,KAHoC,EAIpCC,WAJoC,EAKpCC,aALoC,EAMpCC,SANoC,EAOpCC,QAPoC,EAQpCC,gBARoC,EASpCC,OAToC,EAUpCC,OAVoC,EAWpCC,MAXoC,EAYpCC,OAZoC,EAapCC,cAboC,EAcpCC,QAAQ,GAAG,MAAK,CAAG,CAdiB,EAepC,GAAGC,IAfiC,EAgBjB;EACnB,MAAMC,WAAW,GAAG;IAClBd,IADkB;IAElBC,KAFkB;IAGlBC,WAHkB;IAIlBC,aAJkB;IAKlBC,SALkB;IAMlBC,QANkB;IAOlBC,gBAPkB;IAQlBI,OARkB;IASlBH,OATkB;IAUlBI,cAVkB;IAWlBH,OAXkB;IAYlBC,MAZkB,EAApB;;EAcA,OACE;EACE,cAAC,aAAD,EAAmBK,WAAnB,CADF;EAEE,cAAC,MAAD,eAAYD,IAAZ,IAAkB,QAAQ,EAAED,QAA5B,EAAsC,YAAY,EAAEb,YAApD,IAFF,CADF;;AAMD","names":["React","Slider","ControlHeader","SliderControl","default","defaultValue","name","label","description","renderTrigger","rightNode","leftNode","validationErrors","hovered","warning","danger","onClick","tooltipOnClick","onChange","rest","headerProps"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/explore/components/controls/SliderControl.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Slider from 'src/components/Slider';\nimport ControlHeader, {\n  ControlHeaderProps,\n} from 'src/explore/components/ControlHeader';\n\ntype SliderControlProps = ControlHeaderProps & {\n  onChange: (value: number) => void;\n  value: number;\n  default?: number;\n};\n\nexport default function SliderControl({\n  default: defaultValue,\n  name,\n  label,\n  description,\n  renderTrigger,\n  rightNode,\n  leftNode,\n  validationErrors,\n  hovered,\n  warning,\n  danger,\n  onClick,\n  tooltipOnClick,\n  onChange = () => {},\n  ...rest\n}: SliderControlProps) {\n  const headerProps = {\n    name,\n    label,\n    description,\n    renderTrigger,\n    rightNode,\n    leftNode,\n    validationErrors,\n    onClick,\n    hovered,\n    tooltipOnClick,\n    warning,\n    danger,\n  };\n  return (\n    <>\n      <ControlHeader {...headerProps} />\n      <Slider {...rest} onChange={onChange} defaultValue={defaultValue} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}