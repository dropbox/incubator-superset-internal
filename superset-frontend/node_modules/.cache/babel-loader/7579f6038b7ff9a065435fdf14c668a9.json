{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport { D3_FORMAT_OPTIONS, D3_FORMAT_DOCS, sections, getStandardizedControls } from '@superset-ui/chart-controls';\nimport { countryOptions } from './countries';\nconst config = {\n  controlPanelSections: [\n  sections.legacyRegularTime,\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'select_country',\n      config: {\n        type: 'SelectControl',\n        label: t('Country'),\n        default: null,\n        choices: countryOptions,\n        description: t('Which country to plot the map for?'),\n        validators: [validateNonEmpty] } }],\n\n\n\n    ['entity'],\n    ['metric'],\n    ['adhoc_filters']] },\n\n\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    tabOverride: 'customize',\n    controlSetRows: [\n    [\n    {\n      name: 'number_format',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Number format'),\n        renderTrigger: true,\n        default: 'SMART_NUMBER',\n        choices: D3_FORMAT_OPTIONS,\n        description: D3_FORMAT_DOCS } }],\n\n\n\n    ['linear_color_scheme']] }],\n\n\n\n  controlOverrides: {\n    entity: {\n      label: t('ISO 3166-2 Codes'),\n      description: t('Column containing ISO 3166-2 codes of region/province/department in your table.') },\n\n    metric: {\n      label: t('Metric'),\n      description: t('Metric to display bottom title') },\n\n    linear_color_scheme: {\n      renderTrigger: false } },\n\n\n  formDataOverrides: (formData) => ({\n    ...formData,\n    entity: getStandardizedControls().shiftColumn(),\n    metric: getStandardizedControls().shiftMetric() }) };\n\n\nexport default config;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,CAAT,EAAYC,gBAAZ,QAAoC,mBAApC;AACA,SAEEC,iBAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,uBALF,QAMO,6BANP;AAOA,SAASC,cAAT,QAA+B,aAA/B;AAEA,MAAMC,MAAM,GAAuB;EACjCC,oBAAoB,EAAE;EACpBJ,QAAQ,CAACK,iBADW;EAEpB;IACEC,KAAK,EAAEV,CAAC,CAAC,OAAD,CADV;IAEEW,QAAQ,EAAE,IAFZ;IAGEC,cAAc,EAAE;IACd;IACE;MACEC,IAAI,EAAE,gBADR;MAEEN,MAAM,EAAE;QACNO,IAAI,EAAE,eADA;QAENJ,KAAK,EAAEV,CAAC,CAAC,SAAD,CAFF;QAGNe,OAAO,EAAE,IAHH;QAINC,OAAO,EAAEV,cAJH;QAKNW,WAAW,EAAEjB,CAAC,CAAC,oCAAD,CALR;QAMNkB,UAAU,EAAE,CAACjB,gBAAD,CANN,EAFV,EADF,CADc;;;;IAcd,CAAC,QAAD,CAdc;IAed,CAAC,QAAD,CAfc;IAgBd,CAAC,eAAD,CAhBc,CAHlB,EAFoB;;;EAwBpB;IACES,KAAK,EAAEV,CAAC,CAAC,eAAD,CADV;IAEEW,QAAQ,EAAE,IAFZ;IAGEQ,WAAW,EAAE,WAHf;IAIEP,cAAc,EAAE;IACd;IACE;MACEC,IAAI,EAAE,eADR;MAEEN,MAAM,EAAE;QACNO,IAAI,EAAE,eADA;QAENM,QAAQ,EAAE,IAFJ;QAGNV,KAAK,EAAEV,CAAC,CAAC,eAAD,CAHF;QAINqB,aAAa,EAAE,IAJT;QAKNN,OAAO,EAAE,cALH;QAMNC,OAAO,EAAEd,iBANH;QAONe,WAAW,EAAEd,cAPP,EAFV,EADF,CADc;;;;IAed,CAAC,qBAAD,CAfc,CAJlB,EAxBoB,CADW;;;;EAgDjCmB,gBAAgB,EAAE;IAChBC,MAAM,EAAE;MACNb,KAAK,EAAEV,CAAC,CAAC,kBAAD,CADF;MAENiB,WAAW,EAAEjB,CAAC,CACZ,iFADY,CAFR,EADQ;;IAOhBwB,MAAM,EAAE;MACNd,KAAK,EAAEV,CAAC,CAAC,QAAD,CADF;MAENiB,WAAW,EAAEjB,CAAC,CAAC,gCAAD,CAFR,EAPQ;;IAWhByB,mBAAmB,EAAE;MACnBJ,aAAa,EAAE,KADI,EAXL,EAhDe;;;EA+DjCK,iBAAiB,EAAE,SAAQ,MAAK;IAC9B,GAAGC,QAD2B;IAE9BJ,MAAM,EAAElB,uBAAuB,GAAGuB,WAA1B,EAFsB;IAG9BJ,MAAM,EAAEnB,uBAAuB,GAAGwB,WAA1B,EAHsB,EAAL,CA/DM,EAAnC;;;AAsEA,eAAetB,MAAf","names":["t","validateNonEmpty","D3_FORMAT_OPTIONS","D3_FORMAT_DOCS","sections","getStandardizedControls","countryOptions","config","controlPanelSections","legacyRegularTime","label","expanded","controlSetRows","name","type","default","choices","description","validators","tabOverride","freeForm","renderTrigger","controlOverrides","entity","metric","linear_color_scheme","formDataOverrides","formData","shiftColumn","shiftMetric"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-plugin-chart-country-map/src/controlPanel.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  D3_FORMAT_OPTIONS,\n  D3_FORMAT_DOCS,\n  sections,\n  getStandardizedControls,\n} from '@superset-ui/chart-controls';\nimport { countryOptions } from './countries';\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.legacyRegularTime,\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'select_country',\n            config: {\n              type: 'SelectControl',\n              label: t('Country'),\n              default: null,\n              choices: countryOptions,\n              description: t('Which country to plot the map for?'),\n              validators: [validateNonEmpty],\n            },\n          },\n        ],\n        ['entity'],\n        ['metric'],\n        ['adhoc_filters'],\n      ],\n    },\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      tabOverride: 'customize',\n      controlSetRows: [\n        [\n          {\n            name: 'number_format',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Number format'),\n              renderTrigger: true,\n              default: 'SMART_NUMBER',\n              choices: D3_FORMAT_OPTIONS,\n              description: D3_FORMAT_DOCS,\n            },\n          },\n        ],\n        ['linear_color_scheme'],\n      ],\n    },\n  ],\n  controlOverrides: {\n    entity: {\n      label: t('ISO 3166-2 Codes'),\n      description: t(\n        'Column containing ISO 3166-2 codes of region/province/department in your table.',\n      ),\n    },\n    metric: {\n      label: t('Metric'),\n      description: t('Metric to display bottom title'),\n    },\n    linear_color_scheme: {\n      renderTrigger: false,\n    },\n  },\n  formDataOverrides: formData => ({\n    ...formData,\n    entity: getStandardizedControls().shiftColumn(),\n    metric: getStandardizedControls().shiftMetric(),\n  }),\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}