{"ast":null,"code":"import _throttle from \"lodash/throttle\";import _kebabCase from \"lodash/kebabCase\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport d3 from 'd3';\nimport moment from 'moment';\nimport nv from 'nvd3-fork';\nimport PropTypes from 'prop-types';\nimport {\nCategoricalColorNamespace,\nevalExpression,\ngetNumberFormatter,\ngetTimeFormatter,\nisDefined,\nNumberFormats,\nsmartDateVerboseFormatter,\nt } from\n'@superset-ui/core';\n\nimport 'nvd3-fork/build/nv.d3.css';\n\n/* eslint-disable-next-line */\nimport ANNOTATION_TYPES, {\napplyNativeColumns } from\n'./vendor/superset/AnnotationTypes';\nimport isTruthy from './utils/isTruthy';\nimport {\ncleanColorInput,\ncomputeBarChartWidth,\ncomputeYDomain,\ncomputeStackedYDomain,\ndrawBarValues,\ngenerateBubbleTooltipContent,\ngenerateCompareTooltipContent,\ngenerateMultiLineTooltipContent,\ngenerateRichLineTooltipContent,\ngenerateTimePivotTooltip,\ngenerateTooltipClassName,\ngenerateAreaChartTooltipContent,\ngetMaxLabelSize,\ngetTimeOrNumberFormatter,\nhideTooltips,\ntipFactory,\ntryNumify,\nremoveTooltip,\nsetAxisShowMaxMin,\nstringifyTimeRange,\nwrapTooltip } from\n'./utils';\nimport {\nannotationLayerType,\nboxPlotValueType,\nbulletDataType,\ncategoryAndValueXYType,\nrgbObjectType,\nnumericXYType,\nnumberOrAutoType,\nstringOrObjectWithLabelType } from\n'./PropTypes';\n\nconst NO_DATA_RENDER_DATA = [\n{ text: 'No data', dy: '-.75em', class: 'header' },\n{\n  text: 'Adjust filters or check the Datasource.',\n  dy: '.75em',\n  class: 'body' }];\n\n\n\n// Override the noData render function to make a prettier UX\n// Code adapted from https://github.com/novus/nvd3/blob/master/src/utils.js#L653\nnv.utils.noData = function noData(chart, container) {\n  const opt = chart.options();\n  const margin = opt.margin();\n  const height = nv.utils.availableHeight(null, container, margin);\n  const width = nv.utils.availableWidth(null, container, margin);\n  const x = margin.left + width / 2;\n  const y = margin.top + height / 2;\n\n  // Remove any previously created chart components\n  container.selectAll('g').remove();\n\n  const noDataText = container.\n  selectAll('.nv-noData').\n  data(NO_DATA_RENDER_DATA);\n\n  noDataText.\n  enter().\n  append('text').\n  attr('class', (d) => `nvd3 nv-noData ${d.class}`).\n  attr('dy', (d) => d.dy).\n  style('text-anchor', 'middle');\n\n  noDataText.\n  attr('x', x).\n  attr('y', y).\n  text((d) => d.text);\n};\n\nconst { getColor, getScale } = CategoricalColorNamespace;\n\n// Limit on how large axes margins can grow as the chart window is resized\nconst MAX_MARGIN_PAD = 30;\nconst MIN_HEIGHT_FOR_BRUSH = 480;\nconst MAX_NO_CHARACTERS_IN_LABEL = 40;\n\nconst BREAKPOINTS = {\n  small: 340 };\n\n\nconst TIMESERIES_VIZ_TYPES = [\n'line',\n'dual_line',\n'line_multi',\n'area',\n'compare',\n'bar',\n'time_pivot'];\n\n\nconst CHART_ID_PREFIX = 'chart-id-';\n\nconst propTypes = {\n  data: PropTypes.oneOfType([\n  PropTypes.arrayOf(\n  PropTypes.oneOfType([\n  // pie\n  categoryAndValueXYType,\n  // dist-bar\n  PropTypes.shape({\n    key: PropTypes.string,\n    values: PropTypes.arrayOf(categoryAndValueXYType) }),\n\n  // area, line, compare, bar\n  PropTypes.shape({\n    key: PropTypes.arrayOf(PropTypes.string),\n    values: PropTypes.arrayOf(numericXYType) }),\n\n  // dual-line\n  PropTypes.shape({\n    classed: PropTypes.string,\n    key: PropTypes.string,\n    type: PropTypes.string,\n    values: PropTypes.arrayOf(numericXYType),\n    yAxis: PropTypes.number }),\n\n  // box-plot\n  PropTypes.shape({\n    label: PropTypes.string,\n    values: PropTypes.arrayOf(boxPlotValueType) }),\n\n  // bubble\n  PropTypes.shape({\n    key: PropTypes.string,\n    values: PropTypes.arrayOf(PropTypes.object) })])),\n\n\n\n  // bullet\n  bulletDataType]),\n\n  width: PropTypes.number,\n  height: PropTypes.number,\n  annotationData: PropTypes.object,\n  annotationLayers: PropTypes.arrayOf(annotationLayerType),\n  bottomMargin: numberOrAutoType,\n  colorScheme: PropTypes.string,\n  comparisonType: PropTypes.string,\n  contribution: PropTypes.bool,\n  leftMargin: numberOrAutoType,\n  onError: PropTypes.func,\n  showLegend: PropTypes.bool,\n  showMarkers: PropTypes.bool,\n  useRichTooltip: PropTypes.bool,\n  vizType: PropTypes.oneOf([\n  'area',\n  'bar',\n  'box_plot',\n  'bubble',\n  'bullet',\n  'compare',\n  'column',\n  'dist_bar',\n  'line',\n  'line_multi',\n  'time_pivot',\n  'pie',\n  'dual_line']),\n\n  xAxisFormat: PropTypes.string,\n  numberFormat: PropTypes.string,\n  xAxisLabel: PropTypes.string,\n  xAxisShowMinMax: PropTypes.bool,\n  xIsLogScale: PropTypes.bool,\n  xTicksLayout: PropTypes.oneOf(['auto', 'staggered', '45°']),\n  yAxisFormat: PropTypes.string,\n  yAxisBounds: PropTypes.arrayOf(PropTypes.number),\n  yAxisLabel: PropTypes.string,\n  yAxisShowMinMax: PropTypes.bool,\n  yIsLogScale: PropTypes.bool,\n  // 'dist-bar' only\n  orderBars: PropTypes.bool,\n  // 'bar' or 'dist-bar'\n  isBarStacked: PropTypes.bool,\n  showBarValue: PropTypes.bool,\n  // 'bar', 'dist-bar' or 'column'\n  reduceXTicks: PropTypes.bool,\n  // 'bar', 'dist-bar' or 'area'\n  showControls: PropTypes.bool,\n  // 'line' only\n  showBrush: PropTypes.oneOf([true, 'yes', false, 'no', 'auto']),\n  onBrushEnd: PropTypes.func,\n  // 'line-multi' or 'dual-line'\n  yAxis2Format: PropTypes.string,\n  // 'line', 'time-pivot', 'dual-line' or 'line-multi'\n  lineInterpolation: PropTypes.string,\n  // 'pie' only\n  isDonut: PropTypes.bool,\n  isPieLabelOutside: PropTypes.bool,\n  pieLabelType: PropTypes.oneOf([\n  'key',\n  'value',\n  'percent',\n  'key_value',\n  'key_percent',\n  'key_value_percent']),\n\n  showLabels: PropTypes.bool,\n  // 'area' only\n  areaStackedStyle: PropTypes.string,\n  // 'bubble' only\n  entity: PropTypes.string,\n  maxBubbleSize: PropTypes.number,\n  xField: stringOrObjectWithLabelType,\n  yField: stringOrObjectWithLabelType,\n  sizeField: stringOrObjectWithLabelType,\n  // time-pivot only\n  baseColor: rgbObjectType };\n\n\nconst NOOP = () => {};\nconst formatter = getNumberFormatter();\n\nfunction nvd3Vis(element, props) {\n  const {\n    data,\n    width: maxWidth,\n    height: maxHeight,\n    annotationData,\n    annotationLayers = [],\n    areaStackedStyle,\n    baseColor,\n    bottomMargin,\n    colorScheme,\n    comparisonType,\n    contribution,\n    entity,\n    isBarStacked,\n    isDonut,\n    isPieLabelOutside,\n    leftMargin,\n    lineInterpolation = 'linear',\n    markerLabels,\n    markerLines,\n    markerLineLabels,\n    markers,\n    maxBubbleSize,\n    onBrushEnd = NOOP,\n    onError = NOOP,\n    orderBars,\n    pieLabelType,\n    rangeLabels,\n    ranges,\n    reduceXTicks = false,\n    showBarValue,\n    showBrush,\n    showControls,\n    showLabels,\n    showLegend,\n    showMarkers,\n    sizeField,\n    useRichTooltip,\n    vizType,\n    xAxisFormat,\n    numberFormat,\n    xAxisLabel,\n    xAxisShowMinMax = false,\n    xField,\n    xIsLogScale,\n    xTicksLayout,\n    yAxisFormat,\n    yAxis2Format,\n    yAxisBounds,\n    yAxis2Bounds,\n    yAxisLabel,\n    yAxisShowMinMax = false,\n    yAxis2ShowMinMax = false,\n    yField,\n    yIsLogScale,\n    sliceId } =\n  props;\n\n  const isExplore = document.querySelector('#explorer-container') !== null;\n  const container = element;\n  container.innerHTML = '';\n  const activeAnnotationLayers = annotationLayers.filter((layer) => layer.show);\n\n  // Search for the chart id in a parent div from the nvd3 chart\n  let chartContainer = container;\n  let chartId = null;\n  while (chartContainer.parentElement) {\n    if (chartContainer.parentElement.id.startsWith(CHART_ID_PREFIX)) {\n      chartId = chartContainer.parentElement.id;\n      break;\n    }\n\n    chartContainer = chartContainer.parentElement;\n  }\n\n  let chart;\n  let width = maxWidth;\n  let colorKey = 'key';\n\n  container.style.width = `${maxWidth}px`;\n  container.style.height = `${maxHeight}px`;\n\n  function isVizTypes(types) {\n    return _includesInstanceProperty(types).call(types, vizType);\n  }\n\n  const drawGraph = function drawGraph() {var _context;\n    const d3Element = d3.select(element);\n    d3Element.classed('superset-legacy-chart-nvd3', true);\n    d3Element.classed(`superset-legacy-chart-nvd3-${_kebabCase(vizType)}`, true);\n    let svg = d3Element.select('svg');\n    if (svg.empty()) {\n      svg = d3Element.append('svg');\n    }\n    const height = vizType === 'bullet' ? Math.min(maxHeight, 50) : maxHeight;\n    const isTimeSeries = isVizTypes(TIMESERIES_VIZ_TYPES);\n\n    // Handling xAxis ticks settings\n    const staggerLabels = xTicksLayout === 'staggered';\n    const xLabelRotation =\n    xTicksLayout === 'auto' && isVizTypes(['column', 'dist_bar']) ||\n    xTicksLayout === '45°' ?\n    45 :\n    0;\n    if (xLabelRotation === 45 && isTruthy(showBrush)) {\n      onError(\n      t('You cannot use 45° tick layout along with the time range filter'));\n\n\n      return null;\n    }\n\n    const canShowBrush =\n    isTruthy(showBrush) ||\n    showBrush === 'auto' &&\n    maxHeight >= MIN_HEIGHT_FOR_BRUSH &&\n    xTicksLayout !== '45°';\n    const numberFormatter = getNumberFormatter(numberFormat);\n\n    switch (vizType) {\n      case 'line':\n        if (canShowBrush) {\n          chart = nv.models.lineWithFocusChart();\n          if (staggerLabels) {\n            // Give a bit more room to focus area if X axis ticks are staggered\n            chart.focus.margin({ bottom: 40 });\n            chart.focusHeight(80);\n          }\n          chart.focus.xScale(d3.time.scale.utc());\n        } else {\n          chart = nv.models.lineChart();\n        }\n        chart.xScale(d3.time.scale.utc());\n        chart.interpolate(lineInterpolation);\n        chart.clipEdge(false);\n        break;\n\n      case 'time_pivot':\n        chart = nv.models.lineChart();\n        chart.xScale(d3.time.scale.utc());\n        chart.interpolate(lineInterpolation);\n        break;\n\n      case 'dual_line':\n      case 'line_multi':\n        chart = nv.models.multiChart();\n        chart.interpolate(lineInterpolation);\n        chart.xScale(d3.time.scale.utc());\n        break;\n\n      case 'bar':\n        chart = nv.models.\n        multiBarChart().\n        showControls(showControls).\n        groupSpacing(0.1);\n\n        if (!reduceXTicks) {\n          width = computeBarChartWidth(data, isBarStacked, maxWidth);\n        }\n        chart.width(width);\n        chart.xAxis.showMaxMin(false);\n        chart.stacked(isBarStacked);\n        break;\n\n      case 'dist_bar':\n        chart = nv.models.\n        multiBarChart().\n        showControls(showControls).\n        reduceXTicks(reduceXTicks).\n        groupSpacing(0.1); // Distance between each group of bars.\n\n        chart.xAxis.showMaxMin(false);\n\n        chart.stacked(isBarStacked);\n        if (orderBars) {\n          data.forEach((d) => {\n            const newValues = [...d.values]; // need to copy values to avoid redux store changed.\n            // eslint-disable-next-line no-param-reassign\n            d.values = newValues.sort((a, b) =>\n            tryNumify(a.x) < tryNumify(b.x) ? -1 : 1);\n\n          });\n        }\n        if (!reduceXTicks) {\n          width = computeBarChartWidth(data, isBarStacked, maxWidth);\n        }\n        chart.width(width);\n        break;\n\n      case 'pie':\n        chart = nv.models.pieChart();\n        colorKey = 'x';\n        chart.valueFormat(numberFormatter);\n        if (isDonut) {\n          chart.donut(true);\n        }\n        chart.showLabels(showLabels);\n        chart.labelsOutside(isPieLabelOutside);\n        // Configure the minimum slice size for labels to show up\n        chart.labelThreshold(0.05);\n        chart.cornerRadius(true);\n\n        if (_includesInstanceProperty(_context = ['key', 'value', 'percent']).call(_context, pieLabelType)) {\n          chart.labelType(pieLabelType);\n        } else if (pieLabelType === 'key_value') {\n          chart.labelType((d) => `${d.data.x}: ${numberFormatter(d.data.y)}`);\n        } else {\n          // pieLabelType in ['key_percent', 'key_value_percent']\n          const total = d3.sum(data, (d) => d.y);\n          const percentFormatter = getNumberFormatter(\n          NumberFormats.PERCENT_2_POINT);\n\n          if (pieLabelType === 'key_percent') {\n            chart.tooltip.valueFormatter((d) => percentFormatter(d));\n            chart.labelType(\n            (d) => `${d.data.x}: ${percentFormatter(d.data.y / total)}`);\n\n          } else {\n            // pieLabelType === 'key_value_percent'\n            chart.tooltip.valueFormatter(\n            (d) => `${numberFormatter(d)} (${percentFormatter(d / total)})`);\n\n            chart.labelType(\n            (d) =>\n            `${d.data.x}: ${numberFormatter(d.data.y)} (${percentFormatter(\n            d.data.y / total)\n            })`);\n\n          }\n        }\n        // Pie chart does not need top margin\n        chart.margin({ top: 0 });\n        break;\n\n      case 'column':\n        chart = nv.models.multiBarChart().reduceXTicks(false);\n        break;\n\n      case 'compare':\n        chart = nv.models.cumulativeLineChart();\n        chart.xScale(d3.time.scale.utc());\n        chart.useInteractiveGuideline(true);\n        chart.xAxis.showMaxMin(false);\n        break;\n\n      case 'bubble':\n        chart = nv.models.scatterChart();\n        chart.showDistX(false);\n        chart.showDistY(false);\n        chart.tooltip.contentGenerator((d) =>\n        generateBubbleTooltipContent({\n          point: d.point,\n          entity,\n          xField,\n          yField,\n          sizeField,\n          xFormatter: getTimeOrNumberFormatter(xAxisFormat),\n          yFormatter: getTimeOrNumberFormatter(yAxisFormat),\n          sizeFormatter: formatter }));\n\n\n        chart.pointRange([5, maxBubbleSize ** 2]);\n        chart.pointDomain([\n        0,\n        d3.max(data, (d) => d3.max(d.values, (v) => v.size))]);\n\n        break;\n\n      case 'area':\n        chart = nv.models.stackedAreaChart();\n        chart.showControls(showControls);\n        chart.style(areaStackedStyle);\n        chart.xScale(d3.time.scale.utc());\n        break;\n\n      case 'box_plot':\n        colorKey = 'label';\n        chart = nv.models.boxPlotChart();\n        chart.x((d) => d.label);\n        chart.maxBoxWidth(75); // prevent boxes from being incredibly wide\n        break;\n\n      case 'bullet':\n        chart = nv.models.bulletChart();\n        data.rangeLabels = rangeLabels;\n        data.ranges = ranges;\n        data.markerLabels = markerLabels;\n        data.markerLines = markerLines;\n        data.markerLineLabels = markerLineLabels;\n        data.markers = markers;\n        break;\n\n      default:\n        throw new Error(`Unrecognized visualization for nvd3${vizType}`);}\n\n    // Assuming the container has padding already other than for top margin\n    chart.margin({ left: 0, bottom: 0 });\n\n    if (showBarValue) {\n      drawBarValues(svg, data, isBarStacked, yAxisFormat);\n      chart.dispatch.on('stateChange.drawBarValues', () => {\n        drawBarValues(svg, data, isBarStacked, yAxisFormat);\n      });\n    }\n\n    if (canShowBrush && onBrushEnd !== NOOP) {\n      if (chart.focus) {\n        chart.focus.dispatch.on('brush', (event) => {\n          const timeRange = stringifyTimeRange(event.extent);\n          if (timeRange) {\n            event.brush.on('brushend', () => {\n              onBrushEnd(timeRange);\n            });\n          }\n        });\n      }\n    }\n\n    if (chart.xAxis && chart.xAxis.staggerLabels) {\n      chart.xAxis.staggerLabels(staggerLabels);\n    }\n    if (chart.xAxis && chart.xAxis.rotateLabels) {\n      chart.xAxis.rotateLabels(xLabelRotation);\n    }\n    if (chart.x2Axis && chart.x2Axis.staggerLabels) {\n      chart.x2Axis.staggerLabels(staggerLabels);\n    }\n    if (chart.x2Axis && chart.x2Axis.rotateLabels) {\n      chart.x2Axis.rotateLabels(xLabelRotation);\n    }\n\n    if ('showLegend' in chart && typeof showLegend !== 'undefined') {\n      if (width < BREAKPOINTS.small && vizType !== 'pie') {\n        chart.showLegend(false);\n      } else {\n        chart.showLegend(showLegend);\n      }\n    }\n\n    if (yIsLogScale) {\n      chart.yScale(d3.scale.log());\n    }\n    if (xIsLogScale) {\n      chart.xScale(d3.scale.log());\n    }\n\n    let xAxisFormatter;\n    if (isTimeSeries) {\n      xAxisFormatter = getTimeFormatter(xAxisFormat);\n      // In tooltips, always use the verbose time format\n      chart.interactiveLayer.tooltip.headerFormatter(smartDateVerboseFormatter);\n    } else {\n      xAxisFormatter = getTimeOrNumberFormatter(xAxisFormat);\n    }\n    if (chart.x2Axis && chart.x2Axis.tickFormat) {\n      chart.x2Axis.tickFormat(xAxisFormatter);\n    }\n    if (chart.xAxis && chart.xAxis.tickFormat) {\n      const isXAxisString = isVizTypes(['dist_bar', 'box_plot']);\n      if (isXAxisString) {\n        chart.xAxis.tickFormat((d) =>\n        d.length > MAX_NO_CHARACTERS_IN_LABEL ?\n        `${d.slice(0, Math.max(0, MAX_NO_CHARACTERS_IN_LABEL))}…` :\n        d);\n\n      } else {\n        chart.xAxis.tickFormat(xAxisFormatter);\n      }\n    }\n\n    let yAxisFormatter = getTimeOrNumberFormatter(yAxisFormat);\n    if (chart.yAxis && chart.yAxis.tickFormat) {\n      if (\n      (contribution || comparisonType === 'percentage') && (\n      !yAxisFormat ||\n      yAxisFormat === NumberFormats.SMART_NUMBER ||\n      yAxisFormat === NumberFormats.SMART_NUMBER_SIGNED))\n      {\n        // When computing a \"Percentage\" or \"Contribution\" selected,\n        // force a percentage format if no custom formatting set\n        yAxisFormatter = getNumberFormatter(NumberFormats.PERCENT_1_POINT);\n      }\n      chart.yAxis.tickFormat(yAxisFormatter);\n    }\n    if (chart.y2Axis && chart.y2Axis.tickFormat) {\n      chart.y2Axis.tickFormat(yAxisFormatter);\n    }\n\n    if (chart.yAxis) {\n      chart.yAxis.ticks(5);\n    }\n    if (chart.y2Axis) {\n      chart.y2Axis.ticks(5);\n    }\n\n    // Set showMaxMin for all axis\n    setAxisShowMaxMin(chart.xAxis, xAxisShowMinMax);\n    setAxisShowMaxMin(chart.x2Axis, xAxisShowMinMax);\n    setAxisShowMaxMin(chart.yAxis, yAxisShowMinMax);\n    setAxisShowMaxMin(chart.y2Axis, yAxis2ShowMinMax || yAxisShowMinMax);\n\n    if (vizType === 'time_pivot') {\n      if (baseColor) {\n        const { r, g, b } = baseColor;\n        chart.color((d) => {\n          const alpha = d.rank > 0 ? d.perc * 0.5 : 1;\n\n          return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n        });\n      }\n\n      chart.useInteractiveGuideline(true);\n      chart.interactiveLayer.tooltip.contentGenerator((d) =>\n      generateTimePivotTooltip(d, xAxisFormatter, yAxisFormatter));\n\n    } else if (vizType !== 'bullet') {\n      const colorFn = getScale(colorScheme);\n      chart.color(\n      (d) => d.color || colorFn(cleanColorInput(d[colorKey]), sliceId));\n\n    }\n\n    if (isVizTypes(['line', 'area', 'bar', 'dist_bar']) && useRichTooltip) {\n      chart.useInteractiveGuideline(true);\n      if (vizType === 'line' || vizType === 'bar') {\n        chart.interactiveLayer.tooltip.contentGenerator((d) =>\n        generateRichLineTooltipContent(\n        d,\n        smartDateVerboseFormatter,\n        yAxisFormatter));\n\n\n      } else if (vizType === 'dist_bar') {\n        chart.interactiveLayer.tooltip.contentGenerator((d) =>\n        generateCompareTooltipContent(d, yAxisFormatter));\n\n      } else {\n        // area chart\n        chart.interactiveLayer.tooltip.contentGenerator((d) =>\n        generateAreaChartTooltipContent(\n        d,\n        smartDateVerboseFormatter,\n        yAxisFormatter,\n        chart));\n\n\n      }\n    }\n\n    if (isVizTypes(['compare'])) {\n      chart.interactiveLayer.tooltip.contentGenerator((d) =>\n      generateCompareTooltipContent(d, yAxisFormatter));\n\n    }\n\n    if (isVizTypes(['dual_line', 'line_multi'])) {\n      const yAxisFormatter1 = getNumberFormatter(yAxisFormat);\n      const yAxisFormatter2 = getNumberFormatter(yAxis2Format);\n      chart.yAxis1.tickFormat(yAxisFormatter1);\n      chart.yAxis2.tickFormat(yAxisFormatter2);\n      const yAxisFormatters = data.map((datum) =>\n      datum.yAxis === 1 ? yAxisFormatter1 : yAxisFormatter2);\n\n      chart.useInteractiveGuideline(true);\n      chart.interactiveLayer.tooltip.contentGenerator((d) =>\n      generateMultiLineTooltipContent(d, xAxisFormatter, yAxisFormatters));\n\n    }\n    // This is needed for correct chart dimensions if a chart is rendered in a hidden container\n    chart.width(width);\n    chart.height(height);\n\n    svg.\n    datum(data).\n    transition().\n    duration(500).\n    attr('height', height).\n    attr('width', width).\n    call(chart);\n\n    // For log scale, only show 1, 10, 100, 1000, ...\n    if (yIsLogScale) {\n      chart.yAxis.tickFormat((d) =>\n      d !== 0 && Math.log10(d) % 1 === 0 ? yAxisFormatter(d) : '');\n\n    }\n\n    if (xLabelRotation > 0) {\n      // shift labels to the left so they look better\n      const xTicks = svg.select('.nv-x.nv-axis > g').selectAll('g');\n      xTicks.selectAll('text').attr('dx', -6.5);\n    }\n\n    const applyYAxisBounds = () => {\n      if (\n      chart.yDomain &&\n      Array.isArray(yAxisBounds) &&\n      yAxisBounds.length === 2)\n      {\n        const [customMin, customMax] = yAxisBounds;\n        const hasCustomMin = isDefined(customMin) && !Number.isNaN(customMin);\n        const hasCustomMax = isDefined(customMax) && !Number.isNaN(customMax);\n\n        if (\n        (hasCustomMin || hasCustomMax) &&\n        vizType === 'area' &&\n        chart.style() === 'expand')\n        {\n          // Because there are custom bounds, we need to override them back to 0%-100% since this\n          // is an expanded area chart\n          chart.yDomain([0, 1]);\n        } else if (\n        (hasCustomMin || hasCustomMax) &&\n        vizType === 'area' &&\n        chart.style() === 'stream')\n        {\n          // Because there are custom bounds, we need to override them back to the domain of the\n          // data since this is a stream area chart\n          chart.yDomain(computeStackedYDomain(data));\n        } else if (hasCustomMin && hasCustomMax) {\n          // Override the y domain if there's both a custom min and max\n          chart.yDomain([customMin, customMax]);\n          chart.clipEdge(true);\n        } else if (hasCustomMin || hasCustomMax) {\n          // Only one of the bounds has been set, so we need to manually calculate the other one\n          let [trueMin, trueMax] = [0, 1];\n\n          // These viz types can be stacked\n          // They correspond to the nvd3 stackedAreaChart and multiBarChart\n          if (\n          vizType === 'area' ||\n          isVizTypes(['bar', 'dist_bar']) && chart.stacked())\n          {\n            // This is a stacked area chart or a stacked bar chart\n            [trueMin, trueMax] = computeStackedYDomain(data);\n          } else {\n            [trueMin, trueMax] = computeYDomain(data);\n          }\n\n          const min = hasCustomMin ? customMin : trueMin;\n          const max = hasCustomMax ? customMax : trueMax;\n          chart.yDomain([min, max]);\n          chart.clipEdge(true);\n        }\n      }\n    };\n    applyYAxisBounds();\n\n    // Also reapply on each state change to account for enabled/disabled series\n    if (chart.dispatch && chart.dispatch.stateChange) {\n      chart.dispatch.on('stateChange.applyYAxisBounds', applyYAxisBounds);\n    }\n\n    // align yAxis1 and yAxis2 ticks\n    if (isVizTypes(['dual_line', 'line_multi'])) {var _yAxisBounds$, _yAxisBounds$2, _yAxis2Bounds$, _yAxis2Bounds$2;\n      const count = chart.yAxis1.ticks();\n      const ticks1 = chart.yAxis1.\n      scale().\n      domain(chart.yAxis1.domain()).\n      nice(count).\n      ticks(count);\n      const ticks2 = chart.yAxis2.\n      scale().\n      domain(chart.yAxis2.domain()).\n      nice(count).\n      ticks(count);\n\n      // match number of ticks in both axes\n      const difference = ticks1.length - ticks2.length;\n      if (ticks1.length > 0 && ticks2.length > 0 && difference !== 0) {\n        const smallest = difference < 0 ? ticks1 : ticks2;\n        const delta = smallest[1] - smallest[0];\n        for (let i = 0; i < Math.abs(difference); i += 1) {\n          if (i % 2 === 0) {\n            smallest.unshift(smallest[0] - delta);\n          } else {\n            smallest.push(smallest[smallest.length - 1] + delta);\n          }\n        }\n        chart.yDomain1([ticks1[0], ticks1[ticks1.length - 1]]);\n        chart.yDomain2([ticks2[0], ticks2[ticks2.length - 1]]);\n        chart.yAxis1.tickValues(ticks1);\n        chart.yAxis2.tickValues(ticks2);\n      }\n\n      chart.yDomain1([(_yAxisBounds$ =\n      yAxisBounds[0]) != null ? _yAxisBounds$ : ticks1[0], (_yAxisBounds$2 =\n      yAxisBounds[1]) != null ? _yAxisBounds$2 : ticks1[ticks1.length - 1]]);\n\n      chart.yDomain2([(_yAxis2Bounds$ =\n      yAxis2Bounds[0]) != null ? _yAxis2Bounds$ : ticks2[0], (_yAxis2Bounds$2 =\n      yAxis2Bounds[1]) != null ? _yAxis2Bounds$2 : ticks2[ticks2.length - 1]]);\n\n    }\n\n    if (showMarkers) {\n      svg.\n      selectAll('.nv-point').\n      style('stroke-opacity', 1).\n      style('fill-opacity', 1);\n\n      // redo on legend toggle; nvd3 calls the callback *before* the line is\n      // drawn, so we need to add a small delay here\n      chart.dispatch.on('stateChange.showMarkers', () => {\n        setTimeout(() => {\n          svg.\n          selectAll('.nv-point').\n          style('stroke-opacity', 1).\n          style('fill-opacity', 1);\n        }, 10);\n      });\n    }\n\n    if (chart.yAxis !== undefined || chart.yAxis2 !== undefined) {\n      // Hack to adjust y axis left margin to accommodate long numbers\n      const marginPad = Math.ceil(\n      Math.min(maxWidth * (isExplore ? 0.01 : 0.03), MAX_MARGIN_PAD));\n\n      // Hack to adjust margins to accommodate long axis tick labels.\n      // - has to be done only after the chart has been rendered once\n      // - measure the width or height of the labels\n      // ---- (x axis labels are rotated 45 degrees so we use height),\n      // - adjust margins based on these measures and render again\n      const margins = chart.margin();\n      if (chart.xAxis) {\n        margins.bottom = 28;\n      }\n      const maxYAxisLabelWidth = getMaxLabelSize(\n      svg,\n      chart.yAxis2 ? 'nv-y1' : 'nv-y');\n\n      const maxXAxisLabelHeight = getMaxLabelSize(svg, 'nv-x');\n      margins.left = maxYAxisLabelWidth + marginPad;\n\n      if (yAxisLabel && yAxisLabel !== '') {\n        margins.left += 25;\n      }\n      if (showBarValue) {\n        // Add more margin to avoid label colliding with legend.\n        margins.top += 24;\n      }\n      if (xAxisShowMinMax) {\n        // If x bounds are shown, we need a right margin\n        margins.right = Math.max(20, maxXAxisLabelHeight / 2) + marginPad;\n      }\n      if (xLabelRotation === 45) {\n        margins.bottom =\n        maxXAxisLabelHeight * Math.sin(Math.PI * xLabelRotation / 180) +\n        marginPad +\n        30;\n        margins.right =\n        maxXAxisLabelHeight * Math.cos(Math.PI * xLabelRotation / 180) +\n        marginPad;\n      } else if (staggerLabels) {\n        margins.bottom = 40;\n      }\n\n      if (isVizTypes(['dual_line', 'line_multi'])) {\n        const maxYAxis2LabelWidth = getMaxLabelSize(svg, 'nv-y2');\n        margins.right = maxYAxis2LabelWidth + marginPad;\n      }\n      if (bottomMargin && bottomMargin !== 'auto') {\n        margins.bottom = parseInt(bottomMargin, 10);\n      }\n      if (leftMargin && leftMargin !== 'auto') {\n        margins.left = leftMargin;\n      }\n\n      if (xAxisLabel && xAxisLabel !== '' && chart.xAxis) {\n        margins.bottom += 25;\n        let distance = 0;\n        if (margins.bottom && !Number.isNaN(margins.bottom)) {\n          distance = margins.bottom - 45;\n        }\n        // nvd3 bug axisLabelDistance is disregarded on xAxis\n        // https://github.com/krispo/angular-nvd3/issues/90\n        chart.xAxis.axisLabel(xAxisLabel).axisLabelDistance(distance);\n      }\n\n      if (yAxisLabel && yAxisLabel !== '' && chart.yAxis) {\n        let distance = 0;\n        if (margins.left && !Number.isNaN(margins.left)) {\n          distance = margins.left - 70;\n        }\n        chart.yAxis.axisLabel(yAxisLabel).axisLabelDistance(distance);\n      }\n      if (isTimeSeries && annotationData && activeAnnotationLayers.length > 0) {\n        // Time series annotations add additional data\n        const timeSeriesAnnotations = activeAnnotationLayers.\n        filter(\n        (layer) => layer.annotationType === ANNOTATION_TYPES.TIME_SERIES).\n\n        reduce(\n        (bushel, a) =>\n        bushel.concat(\n        (annotationData[a.name] || []).map((series) => {\n          if (!series) {\n            return {};\n          }\n          const key = Array.isArray(series.key) ?\n          `${a.name}, ${series.key.join(', ')}` :\n          `${a.name}, ${series.key}`;\n\n          return {\n            ...series,\n            key,\n            color: a.color,\n            strokeWidth: a.width,\n            classed: `${a.opacity} ${a.style} nv-timeseries-annotation-layer showMarkers${a.showMarkers} hideLine${a.hideLine}` };\n\n        })),\n\n        []);\n\n        data.push(...timeSeriesAnnotations);\n      }\n\n      // Uniquely identify tooltips based on chartId so this chart instance only\n      // controls its own tooltips\n      if (chartId) {\n        if (chart && chart.interactiveLayer && chart.interactiveLayer.tooltip) {\n          chart.interactiveLayer.tooltip.classes([\n          generateTooltipClassName(chartId)]);\n\n        }\n\n        if (chart && chart.tooltip) {\n          chart.tooltip.classes([generateTooltipClassName(chartId)]);\n        }\n      }\n\n      // render chart\n      chart.margin(margins);\n      svg.\n      datum(data).\n      transition().\n      duration(500).\n      attr('width', width).\n      attr('height', height).\n      call(chart);\n\n      // On scroll, hide (not remove) tooltips so they can reappear on hover.\n      // Throttle to only 4x/second.\n      window.addEventListener(\n      'scroll',\n      _throttle(() => hideTooltips(false), 250));\n\n\n      // The below code should be run AFTER rendering because chart is updated in call()\n      if (isTimeSeries && activeAnnotationLayers.length > 0) {\n        // Formula annotations\n        const formulas = activeAnnotationLayers.filter(\n        (a) => a.annotationType === ANNOTATION_TYPES.FORMULA);\n\n\n        let xMax;\n        let xMin;\n        let xScale;\n        if (vizType === 'bar') {\n          xMin = d3.min(data[0].values, (d) => d.x);\n          xMax = d3.max(data[0].values, (d) => d.x);\n          xScale = d3.scale.\n          quantile().\n          domain([xMin, xMax]).\n          range(chart.xAxis.range());\n        } else {\n          xMin = chart.xAxis.scale().domain()[0].valueOf();\n          xMax = chart.xAxis.scale().domain()[1].valueOf();\n          if (chart.xScale) {\n            xScale = chart.xScale();\n          } else if (chart.xAxis.scale) {\n            xScale = chart.xAxis.scale();\n          } else {\n            xScale = d3.scale.linear();\n          }\n        }\n        if (xScale && xScale.clamp) {\n          xScale.clamp(true);\n        }\n\n        if (formulas.length > 0) {\n          const xValues = [];\n          if (vizType === 'bar') {\n            // For bar-charts we want one data point evaluated for every\n            // data point that will be displayed.\n            const distinct = data.reduce((xVals, d) => {\n              d.values.forEach((x) => xVals.add(x.x));\n\n              return xVals;\n            }, new Set());\n            xValues.push(...distinct.values());\n            xValues.sort();\n          } else {\n            // For every other time visualization it should be ok, to have a\n            // data points in even intervals.\n            let period = Math.min(\n            ...data.map((d) =>\n            Math.min(\n            ...d.values.slice(1).map((v, i) => v.x - d.values[i].x))));\n\n\n\n            const dataPoints = (xMax - xMin) / (period || 1);\n            // make sure that there are enough data points and not too many\n            period = dataPoints < 100 ? (xMax - xMin) / 100 : period;\n            period = dataPoints > 500 ? (xMax - xMin) / 500 : period;\n            xValues.push(xMin);\n            for (let x = xMin; x < xMax; x += period) {\n              xValues.push(x);\n            }\n            xValues.push(xMax);\n          }\n          const formulaData = formulas.map((fo) => {\n            const { value: expression } = fo;\n            return {\n              key: fo.name,\n              values: xValues.map((x) => ({\n                x,\n                y: evalExpression(expression, x) })),\n\n              color: fo.color,\n              strokeWidth: fo.width,\n              classed: `${fo.opacity} ${fo.style}` };\n\n          });\n          data.push(...formulaData);\n        }\n        const xAxis = chart.xAxis1 ? chart.xAxis1 : chart.xAxis;\n        const yAxis = chart.yAxis1 ? chart.yAxis1 : chart.yAxis;\n        const chartWidth = xAxis.scale().range()[1];\n        const annotationHeight = yAxis.scale().range()[0];\n\n        if (annotationData) {\n          // Event annotations\n          activeAnnotationLayers.\n          filter(\n          (x) =>\n          x.annotationType === ANNOTATION_TYPES.EVENT &&\n          annotationData &&\n          annotationData[x.name]).\n\n          forEach((config, index) => {\n            const e = applyNativeColumns(config);\n            // Add event annotation layer\n            const annotations = d3.\n            select(element).\n            select('.nv-wrap').\n            append('g').\n            attr('class', `nv-event-annotation-layer-${index}`);\n            const aColor =\n            e.color || getColor(cleanColorInput(e.name), colorScheme);\n\n            const tip = tipFactory({\n              ...e,\n              annotationTipClass: `arrow-down nv-event-annotation-layer-${config.sourceType}` });\n\n            const records = (annotationData[e.name].records || []).\n            map((r) => {\n              const timeValue = new Date(moment.utc(r[e.timeColumn]));\n\n              return {\n                ...r,\n                [e.timeColumn]: timeValue };\n\n            }).\n            filter(\n            (record) =>\n            !Number.isNaN(record[e.timeColumn].getMilliseconds()));\n\n\n            if (records.length > 0) {\n              annotations.\n              selectAll('line').\n              data(records).\n              enter().\n              append('line').\n              attr({\n                x1: (d) => xScale(new Date(d[e.timeColumn])),\n                y1: 0,\n                x2: (d) => xScale(new Date(d[e.timeColumn])),\n                y2: annotationHeight }).\n\n              attr('class', `${e.opacity} ${e.style}`).\n              style('stroke', aColor).\n              style('stroke-width', e.width).\n              on('mouseover', tip.show).\n              on('mouseout', tip.hide).\n              call(tip);\n            }\n\n            // update annotation positions on brush event\n            if (chart.focus) {\n              chart.focus.dispatch.on('onBrush.event-annotation', () => {\n                annotations.\n                selectAll('line').\n                data(records).\n                attr({\n                  x1: (d) => xScale(new Date(d[e.timeColumn])),\n                  y1: 0,\n                  x2: (d) => xScale(new Date(d[e.timeColumn])),\n                  y2: annotationHeight,\n                  opacity: (d) => {\n                    const x = xScale(new Date(d[e.timeColumn]));\n\n                    return x > 0 && x < chartWidth ? 1 : 0;\n                  } });\n\n              });\n            }\n          });\n\n          // Interval annotations\n          activeAnnotationLayers.\n          filter(\n          (x) =>\n          x.annotationType === ANNOTATION_TYPES.INTERVAL &&\n          annotationData &&\n          annotationData[x.name]).\n\n          forEach((config, index) => {\n            const e = applyNativeColumns(config);\n            // Add interval annotation layer\n            const annotations = d3.\n            select(element).\n            select('.nv-wrap').\n            append('g').\n            attr('class', `nv-interval-annotation-layer-${index}`);\n\n            const aColor =\n            e.color || getColor(cleanColorInput(e.name), colorScheme);\n            const tip = tipFactory(e);\n\n            const records = (annotationData[e.name].records || []).\n            map((r) => {\n              const timeValue = new Date(moment.utc(r[e.timeColumn]));\n              const intervalEndValue = new Date(\n              moment.utc(r[e.intervalEndColumn]));\n\n\n              return {\n                ...r,\n                [e.timeColumn]: timeValue,\n                [e.intervalEndColumn]: intervalEndValue };\n\n            }).\n            filter(\n            (record) =>\n            !Number.isNaN(record[e.timeColumn].getMilliseconds()) &&\n            !Number.isNaN(\n            record[e.intervalEndColumn].getMilliseconds()));\n\n\n\n            if (records.length > 0) {\n              annotations.\n              selectAll('rect').\n              data(records).\n              enter().\n              append('rect').\n              attr({\n                x: (d) =>\n                Math.min(\n                xScale(new Date(d[e.timeColumn])),\n                xScale(new Date(d[e.intervalEndColumn]))),\n\n                y: 0,\n                width: (d) =>\n                Math.max(\n                Math.abs(\n                xScale(new Date(d[e.intervalEndColumn])) -\n                xScale(new Date(d[e.timeColumn]))),\n\n                1),\n\n                height: annotationHeight }).\n\n              attr('class', `${e.opacity} ${e.style}`).\n              style('stroke-width', e.width).\n              style('stroke', aColor).\n              style('fill', aColor).\n              style('fill-opacity', 0.2).\n              on('mouseover', tip.show).\n              on('mouseout', tip.hide).\n              call(tip);\n            }\n\n            // update annotation positions on brush event\n            if (chart.focus) {\n              chart.focus.dispatch.on('onBrush.interval-annotation', () => {\n                annotations.\n                selectAll('rect').\n                data(records).\n                attr({\n                  x: (d) => xScale(new Date(d[e.timeColumn])),\n                  width: (d) => {\n                    const x1 = xScale(new Date(d[e.timeColumn]));\n                    const x2 = xScale(new Date(d[e.intervalEndColumn]));\n\n                    return x2 - x1;\n                  } });\n\n              });\n            }\n          });\n        }\n\n        // rerender chart appended with annotation layer\n        svg.datum(data).attr('height', height).attr('width', width).call(chart);\n\n        // Display styles for Time Series Annotations\n        chart.dispatch.on('renderEnd.timeseries-annotation', () => {\n          d3.selectAll(\n          '.slice_container .nv-timeseries-annotation-layer.showMarkerstrue .nv-point').\n\n          style('stroke-opacity', 1).\n          style('fill-opacity', 1);\n          d3.selectAll(\n          '.slice_container .nv-timeseries-annotation-layer.hideLinetrue').\n          style('stroke-width', 0);\n        });\n      }\n    }\n\n    wrapTooltip(chart);\n\n    return chart;\n  };\n\n  // Remove tooltips before rendering chart, if the chart is being re-rendered sometimes\n  // there are left over tooltips in the dom,\n  // this will clear them before rendering the chart again.\n  __signature__(drawGraph, \"useInteractiveGuideline{}\\nuseInteractiveGuideline{}\\nuseInteractiveGuideline{}\\nuseInteractiveGuideline{}\");if (chartId) {\n    removeTooltip(chartId);\n  } else {\n    hideTooltips(true);\n  }\n\n  nv.addGraph(drawGraph);\n}\n\nnvd3Vis.displayName = 'NVD3';\nnvd3Vis.propTypes = propTypes;const _default =\nnvd3Vis;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(NO_DATA_RENDER_DATA, \"NO_DATA_RENDER_DATA\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(getColor, \"getColor\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(getScale, \"getScale\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(MAX_MARGIN_PAD, \"MAX_MARGIN_PAD\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(MIN_HEIGHT_FOR_BRUSH, \"MIN_HEIGHT_FOR_BRUSH\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(MAX_NO_CHARACTERS_IN_LABEL, \"MAX_NO_CHARACTERS_IN_LABEL\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(BREAKPOINTS, \"BREAKPOINTS\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(TIMESERIES_VIZ_TYPES, \"TIMESERIES_VIZ_TYPES\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(CHART_ID_PREFIX, \"CHART_ID_PREFIX\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(propTypes, \"propTypes\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(NOOP, \"NOOP\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(formatter, \"formatter\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(nvd3Vis, \"nvd3Vis\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["d3","moment","nv","PropTypes","CategoricalColorNamespace","evalExpression","getNumberFormatter","getTimeFormatter","isDefined","NumberFormats","smartDateVerboseFormatter","t","ANNOTATION_TYPES","applyNativeColumns","isTruthy","cleanColorInput","computeBarChartWidth","computeYDomain","computeStackedYDomain","drawBarValues","generateBubbleTooltipContent","generateCompareTooltipContent","generateMultiLineTooltipContent","generateRichLineTooltipContent","generateTimePivotTooltip","generateTooltipClassName","generateAreaChartTooltipContent","getMaxLabelSize","getTimeOrNumberFormatter","hideTooltips","tipFactory","tryNumify","removeTooltip","setAxisShowMaxMin","stringifyTimeRange","wrapTooltip","annotationLayerType","boxPlotValueType","bulletDataType","categoryAndValueXYType","rgbObjectType","numericXYType","numberOrAutoType","stringOrObjectWithLabelType","NO_DATA_RENDER_DATA","text","dy","class","utils","noData","chart","container","opt","options","margin","height","availableHeight","width","availableWidth","x","left","y","top","selectAll","remove","noDataText","data","enter","append","attr","d","style","getColor","getScale","MAX_MARGIN_PAD","MIN_HEIGHT_FOR_BRUSH","MAX_NO_CHARACTERS_IN_LABEL","BREAKPOINTS","small","TIMESERIES_VIZ_TYPES","CHART_ID_PREFIX","propTypes","oneOfType","arrayOf","shape","key","string","values","classed","type","yAxis","number","label","object","annotationData","annotationLayers","bottomMargin","colorScheme","comparisonType","contribution","bool","leftMargin","onError","func","showLegend","showMarkers","useRichTooltip","vizType","oneOf","xAxisFormat","numberFormat","xAxisLabel","xAxisShowMinMax","xIsLogScale","xTicksLayout","yAxisFormat","yAxisBounds","yAxisLabel","yAxisShowMinMax","yIsLogScale","orderBars","isBarStacked","showBarValue","reduceXTicks","showControls","showBrush","onBrushEnd","yAxis2Format","lineInterpolation","isDonut","isPieLabelOutside","pieLabelType","showLabels","areaStackedStyle","entity","maxBubbleSize","xField","yField","sizeField","baseColor","NOOP","formatter","nvd3Vis","element","props","maxWidth","maxHeight","markerLabels","markerLines","markerLineLabels","markers","rangeLabels","ranges","yAxis2Bounds","yAxis2ShowMinMax","sliceId","isExplore","document","querySelector","innerHTML","activeAnnotationLayers","filter","layer","show","chartContainer","chartId","parentElement","id","startsWith","colorKey","isVizTypes","types","drawGraph","d3Element","select","svg","empty","Math","min","isTimeSeries","staggerLabels","xLabelRotation","canShowBrush","numberFormatter","models","lineWithFocusChart","focus","bottom","focusHeight","xScale","time","scale","utc","lineChart","interpolate","clipEdge","multiChart","multiBarChart","groupSpacing","xAxis","showMaxMin","stacked","forEach","newValues","sort","a","b","pieChart","valueFormat","donut","labelsOutside","labelThreshold","cornerRadius","labelType","total","sum","percentFormatter","PERCENT_2_POINT","tooltip","valueFormatter","cumulativeLineChart","useInteractiveGuideline","scatterChart","showDistX","showDistY","contentGenerator","point","xFormatter","yFormatter","sizeFormatter","pointRange","pointDomain","max","v","size","stackedAreaChart","boxPlotChart","maxBoxWidth","bulletChart","Error","dispatch","on","event","timeRange","extent","brush","rotateLabels","x2Axis","yScale","log","xAxisFormatter","interactiveLayer","headerFormatter","tickFormat","isXAxisString","length","slice","yAxisFormatter","SMART_NUMBER","SMART_NUMBER_SIGNED","PERCENT_1_POINT","y2Axis","ticks","r","g","color","alpha","rank","perc","colorFn","yAxisFormatter1","yAxisFormatter2","yAxis1","yAxis2","yAxisFormatters","map","datum","transition","duration","call","log10","xTicks","applyYAxisBounds","yDomain","Array","isArray","customMin","customMax","hasCustomMin","Number","isNaN","hasCustomMax","trueMin","trueMax","stateChange","count","ticks1","domain","nice","ticks2","difference","smallest","delta","i","abs","unshift","push","yDomain1","yDomain2","tickValues","setTimeout","undefined","marginPad","ceil","margins","maxYAxisLabelWidth","maxXAxisLabelHeight","right","sin","PI","cos","maxYAxis2LabelWidth","parseInt","distance","axisLabel","axisLabelDistance","timeSeriesAnnotations","annotationType","TIME_SERIES","reduce","bushel","concat","name","series","join","strokeWidth","opacity","hideLine","classes","window","addEventListener","formulas","FORMULA","xMax","xMin","quantile","range","valueOf","linear","clamp","xValues","distinct","xVals","add","Set","period","dataPoints","formulaData","fo","value","expression","xAxis1","chartWidth","annotationHeight","EVENT","config","index","e","annotations","aColor","tip","annotationTipClass","sourceType","records","timeValue","Date","timeColumn","record","getMilliseconds","x1","y1","x2","y2","hide","INTERVAL","intervalEndValue","intervalEndColumn","addGraph","displayName"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js"],"sourcesContent":["/* eslint-disable react/sort-prop-types */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { kebabCase, throttle } from 'lodash';\nimport d3 from 'd3';\nimport moment from 'moment';\nimport nv from 'nvd3-fork';\nimport PropTypes from 'prop-types';\nimport {\n  CategoricalColorNamespace,\n  evalExpression,\n  getNumberFormatter,\n  getTimeFormatter,\n  isDefined,\n  NumberFormats,\n  smartDateVerboseFormatter,\n  t,\n} from '@superset-ui/core';\n\nimport 'nvd3-fork/build/nv.d3.css';\n\n/* eslint-disable-next-line */\nimport ANNOTATION_TYPES, {\n  applyNativeColumns,\n} from './vendor/superset/AnnotationTypes';\nimport isTruthy from './utils/isTruthy';\nimport {\n  cleanColorInput,\n  computeBarChartWidth,\n  computeYDomain,\n  computeStackedYDomain,\n  drawBarValues,\n  generateBubbleTooltipContent,\n  generateCompareTooltipContent,\n  generateMultiLineTooltipContent,\n  generateRichLineTooltipContent,\n  generateTimePivotTooltip,\n  generateTooltipClassName,\n  generateAreaChartTooltipContent,\n  getMaxLabelSize,\n  getTimeOrNumberFormatter,\n  hideTooltips,\n  tipFactory,\n  tryNumify,\n  removeTooltip,\n  setAxisShowMaxMin,\n  stringifyTimeRange,\n  wrapTooltip,\n} from './utils';\nimport {\n  annotationLayerType,\n  boxPlotValueType,\n  bulletDataType,\n  categoryAndValueXYType,\n  rgbObjectType,\n  numericXYType,\n  numberOrAutoType,\n  stringOrObjectWithLabelType,\n} from './PropTypes';\n\nconst NO_DATA_RENDER_DATA = [\n  { text: 'No data', dy: '-.75em', class: 'header' },\n  {\n    text: 'Adjust filters or check the Datasource.',\n    dy: '.75em',\n    class: 'body',\n  },\n];\n\n// Override the noData render function to make a prettier UX\n// Code adapted from https://github.com/novus/nvd3/blob/master/src/utils.js#L653\nnv.utils.noData = function noData(chart, container) {\n  const opt = chart.options();\n  const margin = opt.margin();\n  const height = nv.utils.availableHeight(null, container, margin);\n  const width = nv.utils.availableWidth(null, container, margin);\n  const x = margin.left + width / 2;\n  const y = margin.top + height / 2;\n\n  // Remove any previously created chart components\n  container.selectAll('g').remove();\n\n  const noDataText = container\n    .selectAll('.nv-noData')\n    .data(NO_DATA_RENDER_DATA);\n\n  noDataText\n    .enter()\n    .append('text')\n    .attr('class', d => `nvd3 nv-noData ${d.class}`)\n    .attr('dy', d => d.dy)\n    .style('text-anchor', 'middle');\n\n  noDataText\n    .attr('x', x)\n    .attr('y', y)\n    .text(d => d.text);\n};\n\nconst { getColor, getScale } = CategoricalColorNamespace;\n\n// Limit on how large axes margins can grow as the chart window is resized\nconst MAX_MARGIN_PAD = 30;\nconst MIN_HEIGHT_FOR_BRUSH = 480;\nconst MAX_NO_CHARACTERS_IN_LABEL = 40;\n\nconst BREAKPOINTS = {\n  small: 340,\n};\n\nconst TIMESERIES_VIZ_TYPES = [\n  'line',\n  'dual_line',\n  'line_multi',\n  'area',\n  'compare',\n  'bar',\n  'time_pivot',\n];\n\nconst CHART_ID_PREFIX = 'chart-id-';\n\nconst propTypes = {\n  data: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        // pie\n        categoryAndValueXYType,\n        // dist-bar\n        PropTypes.shape({\n          key: PropTypes.string,\n          values: PropTypes.arrayOf(categoryAndValueXYType),\n        }),\n        // area, line, compare, bar\n        PropTypes.shape({\n          key: PropTypes.arrayOf(PropTypes.string),\n          values: PropTypes.arrayOf(numericXYType),\n        }),\n        // dual-line\n        PropTypes.shape({\n          classed: PropTypes.string,\n          key: PropTypes.string,\n          type: PropTypes.string,\n          values: PropTypes.arrayOf(numericXYType),\n          yAxis: PropTypes.number,\n        }),\n        // box-plot\n        PropTypes.shape({\n          label: PropTypes.string,\n          values: PropTypes.arrayOf(boxPlotValueType),\n        }),\n        // bubble\n        PropTypes.shape({\n          key: PropTypes.string,\n          values: PropTypes.arrayOf(PropTypes.object),\n        }),\n      ]),\n    ),\n    // bullet\n    bulletDataType,\n  ]),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  annotationData: PropTypes.object,\n  annotationLayers: PropTypes.arrayOf(annotationLayerType),\n  bottomMargin: numberOrAutoType,\n  colorScheme: PropTypes.string,\n  comparisonType: PropTypes.string,\n  contribution: PropTypes.bool,\n  leftMargin: numberOrAutoType,\n  onError: PropTypes.func,\n  showLegend: PropTypes.bool,\n  showMarkers: PropTypes.bool,\n  useRichTooltip: PropTypes.bool,\n  vizType: PropTypes.oneOf([\n    'area',\n    'bar',\n    'box_plot',\n    'bubble',\n    'bullet',\n    'compare',\n    'column',\n    'dist_bar',\n    'line',\n    'line_multi',\n    'time_pivot',\n    'pie',\n    'dual_line',\n  ]),\n  xAxisFormat: PropTypes.string,\n  numberFormat: PropTypes.string,\n  xAxisLabel: PropTypes.string,\n  xAxisShowMinMax: PropTypes.bool,\n  xIsLogScale: PropTypes.bool,\n  xTicksLayout: PropTypes.oneOf(['auto', 'staggered', '45°']),\n  yAxisFormat: PropTypes.string,\n  yAxisBounds: PropTypes.arrayOf(PropTypes.number),\n  yAxisLabel: PropTypes.string,\n  yAxisShowMinMax: PropTypes.bool,\n  yIsLogScale: PropTypes.bool,\n  // 'dist-bar' only\n  orderBars: PropTypes.bool,\n  // 'bar' or 'dist-bar'\n  isBarStacked: PropTypes.bool,\n  showBarValue: PropTypes.bool,\n  // 'bar', 'dist-bar' or 'column'\n  reduceXTicks: PropTypes.bool,\n  // 'bar', 'dist-bar' or 'area'\n  showControls: PropTypes.bool,\n  // 'line' only\n  showBrush: PropTypes.oneOf([true, 'yes', false, 'no', 'auto']),\n  onBrushEnd: PropTypes.func,\n  // 'line-multi' or 'dual-line'\n  yAxis2Format: PropTypes.string,\n  // 'line', 'time-pivot', 'dual-line' or 'line-multi'\n  lineInterpolation: PropTypes.string,\n  // 'pie' only\n  isDonut: PropTypes.bool,\n  isPieLabelOutside: PropTypes.bool,\n  pieLabelType: PropTypes.oneOf([\n    'key',\n    'value',\n    'percent',\n    'key_value',\n    'key_percent',\n    'key_value_percent',\n  ]),\n  showLabels: PropTypes.bool,\n  // 'area' only\n  areaStackedStyle: PropTypes.string,\n  // 'bubble' only\n  entity: PropTypes.string,\n  maxBubbleSize: PropTypes.number,\n  xField: stringOrObjectWithLabelType,\n  yField: stringOrObjectWithLabelType,\n  sizeField: stringOrObjectWithLabelType,\n  // time-pivot only\n  baseColor: rgbObjectType,\n};\n\nconst NOOP = () => {};\nconst formatter = getNumberFormatter();\n\nfunction nvd3Vis(element, props) {\n  const {\n    data,\n    width: maxWidth,\n    height: maxHeight,\n    annotationData,\n    annotationLayers = [],\n    areaStackedStyle,\n    baseColor,\n    bottomMargin,\n    colorScheme,\n    comparisonType,\n    contribution,\n    entity,\n    isBarStacked,\n    isDonut,\n    isPieLabelOutside,\n    leftMargin,\n    lineInterpolation = 'linear',\n    markerLabels,\n    markerLines,\n    markerLineLabels,\n    markers,\n    maxBubbleSize,\n    onBrushEnd = NOOP,\n    onError = NOOP,\n    orderBars,\n    pieLabelType,\n    rangeLabels,\n    ranges,\n    reduceXTicks = false,\n    showBarValue,\n    showBrush,\n    showControls,\n    showLabels,\n    showLegend,\n    showMarkers,\n    sizeField,\n    useRichTooltip,\n    vizType,\n    xAxisFormat,\n    numberFormat,\n    xAxisLabel,\n    xAxisShowMinMax = false,\n    xField,\n    xIsLogScale,\n    xTicksLayout,\n    yAxisFormat,\n    yAxis2Format,\n    yAxisBounds,\n    yAxis2Bounds,\n    yAxisLabel,\n    yAxisShowMinMax = false,\n    yAxis2ShowMinMax = false,\n    yField,\n    yIsLogScale,\n    sliceId,\n  } = props;\n\n  const isExplore = document.querySelector('#explorer-container') !== null;\n  const container = element;\n  container.innerHTML = '';\n  const activeAnnotationLayers = annotationLayers.filter(layer => layer.show);\n\n  // Search for the chart id in a parent div from the nvd3 chart\n  let chartContainer = container;\n  let chartId = null;\n  while (chartContainer.parentElement) {\n    if (chartContainer.parentElement.id.startsWith(CHART_ID_PREFIX)) {\n      chartId = chartContainer.parentElement.id;\n      break;\n    }\n\n    chartContainer = chartContainer.parentElement;\n  }\n\n  let chart;\n  let width = maxWidth;\n  let colorKey = 'key';\n\n  container.style.width = `${maxWidth}px`;\n  container.style.height = `${maxHeight}px`;\n\n  function isVizTypes(types) {\n    return types.includes(vizType);\n  }\n\n  const drawGraph = function drawGraph() {\n    const d3Element = d3.select(element);\n    d3Element.classed('superset-legacy-chart-nvd3', true);\n    d3Element.classed(`superset-legacy-chart-nvd3-${kebabCase(vizType)}`, true);\n    let svg = d3Element.select('svg');\n    if (svg.empty()) {\n      svg = d3Element.append('svg');\n    }\n    const height = vizType === 'bullet' ? Math.min(maxHeight, 50) : maxHeight;\n    const isTimeSeries = isVizTypes(TIMESERIES_VIZ_TYPES);\n\n    // Handling xAxis ticks settings\n    const staggerLabels = xTicksLayout === 'staggered';\n    const xLabelRotation =\n      (xTicksLayout === 'auto' && isVizTypes(['column', 'dist_bar'])) ||\n      xTicksLayout === '45°'\n        ? 45\n        : 0;\n    if (xLabelRotation === 45 && isTruthy(showBrush)) {\n      onError(\n        t('You cannot use 45° tick layout along with the time range filter'),\n      );\n\n      return null;\n    }\n\n    const canShowBrush =\n      isTruthy(showBrush) ||\n      (showBrush === 'auto' &&\n        maxHeight >= MIN_HEIGHT_FOR_BRUSH &&\n        xTicksLayout !== '45°');\n    const numberFormatter = getNumberFormatter(numberFormat);\n\n    switch (vizType) {\n      case 'line':\n        if (canShowBrush) {\n          chart = nv.models.lineWithFocusChart();\n          if (staggerLabels) {\n            // Give a bit more room to focus area if X axis ticks are staggered\n            chart.focus.margin({ bottom: 40 });\n            chart.focusHeight(80);\n          }\n          chart.focus.xScale(d3.time.scale.utc());\n        } else {\n          chart = nv.models.lineChart();\n        }\n        chart.xScale(d3.time.scale.utc());\n        chart.interpolate(lineInterpolation);\n        chart.clipEdge(false);\n        break;\n\n      case 'time_pivot':\n        chart = nv.models.lineChart();\n        chart.xScale(d3.time.scale.utc());\n        chart.interpolate(lineInterpolation);\n        break;\n\n      case 'dual_line':\n      case 'line_multi':\n        chart = nv.models.multiChart();\n        chart.interpolate(lineInterpolation);\n        chart.xScale(d3.time.scale.utc());\n        break;\n\n      case 'bar':\n        chart = nv.models\n          .multiBarChart()\n          .showControls(showControls)\n          .groupSpacing(0.1);\n\n        if (!reduceXTicks) {\n          width = computeBarChartWidth(data, isBarStacked, maxWidth);\n        }\n        chart.width(width);\n        chart.xAxis.showMaxMin(false);\n        chart.stacked(isBarStacked);\n        break;\n\n      case 'dist_bar':\n        chart = nv.models\n          .multiBarChart()\n          .showControls(showControls)\n          .reduceXTicks(reduceXTicks)\n          .groupSpacing(0.1); // Distance between each group of bars.\n\n        chart.xAxis.showMaxMin(false);\n\n        chart.stacked(isBarStacked);\n        if (orderBars) {\n          data.forEach(d => {\n            const newValues = [...d.values]; // need to copy values to avoid redux store changed.\n            // eslint-disable-next-line no-param-reassign\n            d.values = newValues.sort((a, b) =>\n              tryNumify(a.x) < tryNumify(b.x) ? -1 : 1,\n            );\n          });\n        }\n        if (!reduceXTicks) {\n          width = computeBarChartWidth(data, isBarStacked, maxWidth);\n        }\n        chart.width(width);\n        break;\n\n      case 'pie':\n        chart = nv.models.pieChart();\n        colorKey = 'x';\n        chart.valueFormat(numberFormatter);\n        if (isDonut) {\n          chart.donut(true);\n        }\n        chart.showLabels(showLabels);\n        chart.labelsOutside(isPieLabelOutside);\n        // Configure the minimum slice size for labels to show up\n        chart.labelThreshold(0.05);\n        chart.cornerRadius(true);\n\n        if (['key', 'value', 'percent'].includes(pieLabelType)) {\n          chart.labelType(pieLabelType);\n        } else if (pieLabelType === 'key_value') {\n          chart.labelType(d => `${d.data.x}: ${numberFormatter(d.data.y)}`);\n        } else {\n          // pieLabelType in ['key_percent', 'key_value_percent']\n          const total = d3.sum(data, d => d.y);\n          const percentFormatter = getNumberFormatter(\n            NumberFormats.PERCENT_2_POINT,\n          );\n          if (pieLabelType === 'key_percent') {\n            chart.tooltip.valueFormatter(d => percentFormatter(d));\n            chart.labelType(\n              d => `${d.data.x}: ${percentFormatter(d.data.y / total)}`,\n            );\n          } else {\n            // pieLabelType === 'key_value_percent'\n            chart.tooltip.valueFormatter(\n              d => `${numberFormatter(d)} (${percentFormatter(d / total)})`,\n            );\n            chart.labelType(\n              d =>\n                `${d.data.x}: ${numberFormatter(d.data.y)} (${percentFormatter(\n                  d.data.y / total,\n                )})`,\n            );\n          }\n        }\n        // Pie chart does not need top margin\n        chart.margin({ top: 0 });\n        break;\n\n      case 'column':\n        chart = nv.models.multiBarChart().reduceXTicks(false);\n        break;\n\n      case 'compare':\n        chart = nv.models.cumulativeLineChart();\n        chart.xScale(d3.time.scale.utc());\n        chart.useInteractiveGuideline(true);\n        chart.xAxis.showMaxMin(false);\n        break;\n\n      case 'bubble':\n        chart = nv.models.scatterChart();\n        chart.showDistX(false);\n        chart.showDistY(false);\n        chart.tooltip.contentGenerator(d =>\n          generateBubbleTooltipContent({\n            point: d.point,\n            entity,\n            xField,\n            yField,\n            sizeField,\n            xFormatter: getTimeOrNumberFormatter(xAxisFormat),\n            yFormatter: getTimeOrNumberFormatter(yAxisFormat),\n            sizeFormatter: formatter,\n          }),\n        );\n        chart.pointRange([5, maxBubbleSize ** 2]);\n        chart.pointDomain([\n          0,\n          d3.max(data, d => d3.max(d.values, v => v.size)),\n        ]);\n        break;\n\n      case 'area':\n        chart = nv.models.stackedAreaChart();\n        chart.showControls(showControls);\n        chart.style(areaStackedStyle);\n        chart.xScale(d3.time.scale.utc());\n        break;\n\n      case 'box_plot':\n        colorKey = 'label';\n        chart = nv.models.boxPlotChart();\n        chart.x(d => d.label);\n        chart.maxBoxWidth(75); // prevent boxes from being incredibly wide\n        break;\n\n      case 'bullet':\n        chart = nv.models.bulletChart();\n        data.rangeLabels = rangeLabels;\n        data.ranges = ranges;\n        data.markerLabels = markerLabels;\n        data.markerLines = markerLines;\n        data.markerLineLabels = markerLineLabels;\n        data.markers = markers;\n        break;\n\n      default:\n        throw new Error(`Unrecognized visualization for nvd3${vizType}`);\n    }\n    // Assuming the container has padding already other than for top margin\n    chart.margin({ left: 0, bottom: 0 });\n\n    if (showBarValue) {\n      drawBarValues(svg, data, isBarStacked, yAxisFormat);\n      chart.dispatch.on('stateChange.drawBarValues', () => {\n        drawBarValues(svg, data, isBarStacked, yAxisFormat);\n      });\n    }\n\n    if (canShowBrush && onBrushEnd !== NOOP) {\n      if (chart.focus) {\n        chart.focus.dispatch.on('brush', event => {\n          const timeRange = stringifyTimeRange(event.extent);\n          if (timeRange) {\n            event.brush.on('brushend', () => {\n              onBrushEnd(timeRange);\n            });\n          }\n        });\n      }\n    }\n\n    if (chart.xAxis && chart.xAxis.staggerLabels) {\n      chart.xAxis.staggerLabels(staggerLabels);\n    }\n    if (chart.xAxis && chart.xAxis.rotateLabels) {\n      chart.xAxis.rotateLabels(xLabelRotation);\n    }\n    if (chart.x2Axis && chart.x2Axis.staggerLabels) {\n      chart.x2Axis.staggerLabels(staggerLabels);\n    }\n    if (chart.x2Axis && chart.x2Axis.rotateLabels) {\n      chart.x2Axis.rotateLabels(xLabelRotation);\n    }\n\n    if ('showLegend' in chart && typeof showLegend !== 'undefined') {\n      if (width < BREAKPOINTS.small && vizType !== 'pie') {\n        chart.showLegend(false);\n      } else {\n        chart.showLegend(showLegend);\n      }\n    }\n\n    if (yIsLogScale) {\n      chart.yScale(d3.scale.log());\n    }\n    if (xIsLogScale) {\n      chart.xScale(d3.scale.log());\n    }\n\n    let xAxisFormatter;\n    if (isTimeSeries) {\n      xAxisFormatter = getTimeFormatter(xAxisFormat);\n      // In tooltips, always use the verbose time format\n      chart.interactiveLayer.tooltip.headerFormatter(smartDateVerboseFormatter);\n    } else {\n      xAxisFormatter = getTimeOrNumberFormatter(xAxisFormat);\n    }\n    if (chart.x2Axis && chart.x2Axis.tickFormat) {\n      chart.x2Axis.tickFormat(xAxisFormatter);\n    }\n    if (chart.xAxis && chart.xAxis.tickFormat) {\n      const isXAxisString = isVizTypes(['dist_bar', 'box_plot']);\n      if (isXAxisString) {\n        chart.xAxis.tickFormat(d =>\n          d.length > MAX_NO_CHARACTERS_IN_LABEL\n            ? `${d.slice(0, Math.max(0, MAX_NO_CHARACTERS_IN_LABEL))}…`\n            : d,\n        );\n      } else {\n        chart.xAxis.tickFormat(xAxisFormatter);\n      }\n    }\n\n    let yAxisFormatter = getTimeOrNumberFormatter(yAxisFormat);\n    if (chart.yAxis && chart.yAxis.tickFormat) {\n      if (\n        (contribution || comparisonType === 'percentage') &&\n        (!yAxisFormat ||\n          yAxisFormat === NumberFormats.SMART_NUMBER ||\n          yAxisFormat === NumberFormats.SMART_NUMBER_SIGNED)\n      ) {\n        // When computing a \"Percentage\" or \"Contribution\" selected,\n        // force a percentage format if no custom formatting set\n        yAxisFormatter = getNumberFormatter(NumberFormats.PERCENT_1_POINT);\n      }\n      chart.yAxis.tickFormat(yAxisFormatter);\n    }\n    if (chart.y2Axis && chart.y2Axis.tickFormat) {\n      chart.y2Axis.tickFormat(yAxisFormatter);\n    }\n\n    if (chart.yAxis) {\n      chart.yAxis.ticks(5);\n    }\n    if (chart.y2Axis) {\n      chart.y2Axis.ticks(5);\n    }\n\n    // Set showMaxMin for all axis\n    setAxisShowMaxMin(chart.xAxis, xAxisShowMinMax);\n    setAxisShowMaxMin(chart.x2Axis, xAxisShowMinMax);\n    setAxisShowMaxMin(chart.yAxis, yAxisShowMinMax);\n    setAxisShowMaxMin(chart.y2Axis, yAxis2ShowMinMax || yAxisShowMinMax);\n\n    if (vizType === 'time_pivot') {\n      if (baseColor) {\n        const { r, g, b } = baseColor;\n        chart.color(d => {\n          const alpha = d.rank > 0 ? d.perc * 0.5 : 1;\n\n          return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n        });\n      }\n\n      chart.useInteractiveGuideline(true);\n      chart.interactiveLayer.tooltip.contentGenerator(d =>\n        generateTimePivotTooltip(d, xAxisFormatter, yAxisFormatter),\n      );\n    } else if (vizType !== 'bullet') {\n      const colorFn = getScale(colorScheme);\n      chart.color(\n        d => d.color || colorFn(cleanColorInput(d[colorKey]), sliceId),\n      );\n    }\n\n    if (isVizTypes(['line', 'area', 'bar', 'dist_bar']) && useRichTooltip) {\n      chart.useInteractiveGuideline(true);\n      if (vizType === 'line' || vizType === 'bar') {\n        chart.interactiveLayer.tooltip.contentGenerator(d =>\n          generateRichLineTooltipContent(\n            d,\n            smartDateVerboseFormatter,\n            yAxisFormatter,\n          ),\n        );\n      } else if (vizType === 'dist_bar') {\n        chart.interactiveLayer.tooltip.contentGenerator(d =>\n          generateCompareTooltipContent(d, yAxisFormatter),\n        );\n      } else {\n        // area chart\n        chart.interactiveLayer.tooltip.contentGenerator(d =>\n          generateAreaChartTooltipContent(\n            d,\n            smartDateVerboseFormatter,\n            yAxisFormatter,\n            chart,\n          ),\n        );\n      }\n    }\n\n    if (isVizTypes(['compare'])) {\n      chart.interactiveLayer.tooltip.contentGenerator(d =>\n        generateCompareTooltipContent(d, yAxisFormatter),\n      );\n    }\n\n    if (isVizTypes(['dual_line', 'line_multi'])) {\n      const yAxisFormatter1 = getNumberFormatter(yAxisFormat);\n      const yAxisFormatter2 = getNumberFormatter(yAxis2Format);\n      chart.yAxis1.tickFormat(yAxisFormatter1);\n      chart.yAxis2.tickFormat(yAxisFormatter2);\n      const yAxisFormatters = data.map(datum =>\n        datum.yAxis === 1 ? yAxisFormatter1 : yAxisFormatter2,\n      );\n      chart.useInteractiveGuideline(true);\n      chart.interactiveLayer.tooltip.contentGenerator(d =>\n        generateMultiLineTooltipContent(d, xAxisFormatter, yAxisFormatters),\n      );\n    }\n    // This is needed for correct chart dimensions if a chart is rendered in a hidden container\n    chart.width(width);\n    chart.height(height);\n\n    svg\n      .datum(data)\n      .transition()\n      .duration(500)\n      .attr('height', height)\n      .attr('width', width)\n      .call(chart);\n\n    // For log scale, only show 1, 10, 100, 1000, ...\n    if (yIsLogScale) {\n      chart.yAxis.tickFormat(d =>\n        d !== 0 && Math.log10(d) % 1 === 0 ? yAxisFormatter(d) : '',\n      );\n    }\n\n    if (xLabelRotation > 0) {\n      // shift labels to the left so they look better\n      const xTicks = svg.select('.nv-x.nv-axis > g').selectAll('g');\n      xTicks.selectAll('text').attr('dx', -6.5);\n    }\n\n    const applyYAxisBounds = () => {\n      if (\n        chart.yDomain &&\n        Array.isArray(yAxisBounds) &&\n        yAxisBounds.length === 2\n      ) {\n        const [customMin, customMax] = yAxisBounds;\n        const hasCustomMin = isDefined(customMin) && !Number.isNaN(customMin);\n        const hasCustomMax = isDefined(customMax) && !Number.isNaN(customMax);\n\n        if (\n          (hasCustomMin || hasCustomMax) &&\n          vizType === 'area' &&\n          chart.style() === 'expand'\n        ) {\n          // Because there are custom bounds, we need to override them back to 0%-100% since this\n          // is an expanded area chart\n          chart.yDomain([0, 1]);\n        } else if (\n          (hasCustomMin || hasCustomMax) &&\n          vizType === 'area' &&\n          chart.style() === 'stream'\n        ) {\n          // Because there are custom bounds, we need to override them back to the domain of the\n          // data since this is a stream area chart\n          chart.yDomain(computeStackedYDomain(data));\n        } else if (hasCustomMin && hasCustomMax) {\n          // Override the y domain if there's both a custom min and max\n          chart.yDomain([customMin, customMax]);\n          chart.clipEdge(true);\n        } else if (hasCustomMin || hasCustomMax) {\n          // Only one of the bounds has been set, so we need to manually calculate the other one\n          let [trueMin, trueMax] = [0, 1];\n\n          // These viz types can be stacked\n          // They correspond to the nvd3 stackedAreaChart and multiBarChart\n          if (\n            vizType === 'area' ||\n            (isVizTypes(['bar', 'dist_bar']) && chart.stacked())\n          ) {\n            // This is a stacked area chart or a stacked bar chart\n            [trueMin, trueMax] = computeStackedYDomain(data);\n          } else {\n            [trueMin, trueMax] = computeYDomain(data);\n          }\n\n          const min = hasCustomMin ? customMin : trueMin;\n          const max = hasCustomMax ? customMax : trueMax;\n          chart.yDomain([min, max]);\n          chart.clipEdge(true);\n        }\n      }\n    };\n    applyYAxisBounds();\n\n    // Also reapply on each state change to account for enabled/disabled series\n    if (chart.dispatch && chart.dispatch.stateChange) {\n      chart.dispatch.on('stateChange.applyYAxisBounds', applyYAxisBounds);\n    }\n\n    // align yAxis1 and yAxis2 ticks\n    if (isVizTypes(['dual_line', 'line_multi'])) {\n      const count = chart.yAxis1.ticks();\n      const ticks1 = chart.yAxis1\n        .scale()\n        .domain(chart.yAxis1.domain())\n        .nice(count)\n        .ticks(count);\n      const ticks2 = chart.yAxis2\n        .scale()\n        .domain(chart.yAxis2.domain())\n        .nice(count)\n        .ticks(count);\n\n      // match number of ticks in both axes\n      const difference = ticks1.length - ticks2.length;\n      if (ticks1.length > 0 && ticks2.length > 0 && difference !== 0) {\n        const smallest = difference < 0 ? ticks1 : ticks2;\n        const delta = smallest[1] - smallest[0];\n        for (let i = 0; i < Math.abs(difference); i += 1) {\n          if (i % 2 === 0) {\n            smallest.unshift(smallest[0] - delta);\n          } else {\n            smallest.push(smallest[smallest.length - 1] + delta);\n          }\n        }\n        chart.yDomain1([ticks1[0], ticks1[ticks1.length - 1]]);\n        chart.yDomain2([ticks2[0], ticks2[ticks2.length - 1]]);\n        chart.yAxis1.tickValues(ticks1);\n        chart.yAxis2.tickValues(ticks2);\n      }\n\n      chart.yDomain1([\n        yAxisBounds[0] ?? ticks1[0],\n        yAxisBounds[1] ?? ticks1[ticks1.length - 1],\n      ]);\n      chart.yDomain2([\n        yAxis2Bounds[0] ?? ticks2[0],\n        yAxis2Bounds[1] ?? ticks2[ticks2.length - 1],\n      ]);\n    }\n\n    if (showMarkers) {\n      svg\n        .selectAll('.nv-point')\n        .style('stroke-opacity', 1)\n        .style('fill-opacity', 1);\n\n      // redo on legend toggle; nvd3 calls the callback *before* the line is\n      // drawn, so we need to add a small delay here\n      chart.dispatch.on('stateChange.showMarkers', () => {\n        setTimeout(() => {\n          svg\n            .selectAll('.nv-point')\n            .style('stroke-opacity', 1)\n            .style('fill-opacity', 1);\n        }, 10);\n      });\n    }\n\n    if (chart.yAxis !== undefined || chart.yAxis2 !== undefined) {\n      // Hack to adjust y axis left margin to accommodate long numbers\n      const marginPad = Math.ceil(\n        Math.min(maxWidth * (isExplore ? 0.01 : 0.03), MAX_MARGIN_PAD),\n      );\n      // Hack to adjust margins to accommodate long axis tick labels.\n      // - has to be done only after the chart has been rendered once\n      // - measure the width or height of the labels\n      // ---- (x axis labels are rotated 45 degrees so we use height),\n      // - adjust margins based on these measures and render again\n      const margins = chart.margin();\n      if (chart.xAxis) {\n        margins.bottom = 28;\n      }\n      const maxYAxisLabelWidth = getMaxLabelSize(\n        svg,\n        chart.yAxis2 ? 'nv-y1' : 'nv-y',\n      );\n      const maxXAxisLabelHeight = getMaxLabelSize(svg, 'nv-x');\n      margins.left = maxYAxisLabelWidth + marginPad;\n\n      if (yAxisLabel && yAxisLabel !== '') {\n        margins.left += 25;\n      }\n      if (showBarValue) {\n        // Add more margin to avoid label colliding with legend.\n        margins.top += 24;\n      }\n      if (xAxisShowMinMax) {\n        // If x bounds are shown, we need a right margin\n        margins.right = Math.max(20, maxXAxisLabelHeight / 2) + marginPad;\n      }\n      if (xLabelRotation === 45) {\n        margins.bottom =\n          maxXAxisLabelHeight * Math.sin((Math.PI * xLabelRotation) / 180) +\n          marginPad +\n          30;\n        margins.right =\n          maxXAxisLabelHeight * Math.cos((Math.PI * xLabelRotation) / 180) +\n          marginPad;\n      } else if (staggerLabels) {\n        margins.bottom = 40;\n      }\n\n      if (isVizTypes(['dual_line', 'line_multi'])) {\n        const maxYAxis2LabelWidth = getMaxLabelSize(svg, 'nv-y2');\n        margins.right = maxYAxis2LabelWidth + marginPad;\n      }\n      if (bottomMargin && bottomMargin !== 'auto') {\n        margins.bottom = parseInt(bottomMargin, 10);\n      }\n      if (leftMargin && leftMargin !== 'auto') {\n        margins.left = leftMargin;\n      }\n\n      if (xAxisLabel && xAxisLabel !== '' && chart.xAxis) {\n        margins.bottom += 25;\n        let distance = 0;\n        if (margins.bottom && !Number.isNaN(margins.bottom)) {\n          distance = margins.bottom - 45;\n        }\n        // nvd3 bug axisLabelDistance is disregarded on xAxis\n        // https://github.com/krispo/angular-nvd3/issues/90\n        chart.xAxis.axisLabel(xAxisLabel).axisLabelDistance(distance);\n      }\n\n      if (yAxisLabel && yAxisLabel !== '' && chart.yAxis) {\n        let distance = 0;\n        if (margins.left && !Number.isNaN(margins.left)) {\n          distance = margins.left - 70;\n        }\n        chart.yAxis.axisLabel(yAxisLabel).axisLabelDistance(distance);\n      }\n      if (isTimeSeries && annotationData && activeAnnotationLayers.length > 0) {\n        // Time series annotations add additional data\n        const timeSeriesAnnotations = activeAnnotationLayers\n          .filter(\n            layer => layer.annotationType === ANNOTATION_TYPES.TIME_SERIES,\n          )\n          .reduce(\n            (bushel, a) =>\n              bushel.concat(\n                (annotationData[a.name] || []).map(series => {\n                  if (!series) {\n                    return {};\n                  }\n                  const key = Array.isArray(series.key)\n                    ? `${a.name}, ${series.key.join(', ')}`\n                    : `${a.name}, ${series.key}`;\n\n                  return {\n                    ...series,\n                    key,\n                    color: a.color,\n                    strokeWidth: a.width,\n                    classed: `${a.opacity} ${a.style} nv-timeseries-annotation-layer showMarkers${a.showMarkers} hideLine${a.hideLine}`,\n                  };\n                }),\n              ),\n            [],\n          );\n        data.push(...timeSeriesAnnotations);\n      }\n\n      // Uniquely identify tooltips based on chartId so this chart instance only\n      // controls its own tooltips\n      if (chartId) {\n        if (chart && chart.interactiveLayer && chart.interactiveLayer.tooltip) {\n          chart.interactiveLayer.tooltip.classes([\n            generateTooltipClassName(chartId),\n          ]);\n        }\n\n        if (chart && chart.tooltip) {\n          chart.tooltip.classes([generateTooltipClassName(chartId)]);\n        }\n      }\n\n      // render chart\n      chart.margin(margins);\n      svg\n        .datum(data)\n        .transition()\n        .duration(500)\n        .attr('width', width)\n        .attr('height', height)\n        .call(chart);\n\n      // On scroll, hide (not remove) tooltips so they can reappear on hover.\n      // Throttle to only 4x/second.\n      window.addEventListener(\n        'scroll',\n        throttle(() => hideTooltips(false), 250),\n      );\n\n      // The below code should be run AFTER rendering because chart is updated in call()\n      if (isTimeSeries && activeAnnotationLayers.length > 0) {\n        // Formula annotations\n        const formulas = activeAnnotationLayers.filter(\n          a => a.annotationType === ANNOTATION_TYPES.FORMULA,\n        );\n\n        let xMax;\n        let xMin;\n        let xScale;\n        if (vizType === 'bar') {\n          xMin = d3.min(data[0].values, d => d.x);\n          xMax = d3.max(data[0].values, d => d.x);\n          xScale = d3.scale\n            .quantile()\n            .domain([xMin, xMax])\n            .range(chart.xAxis.range());\n        } else {\n          xMin = chart.xAxis.scale().domain()[0].valueOf();\n          xMax = chart.xAxis.scale().domain()[1].valueOf();\n          if (chart.xScale) {\n            xScale = chart.xScale();\n          } else if (chart.xAxis.scale) {\n            xScale = chart.xAxis.scale();\n          } else {\n            xScale = d3.scale.linear();\n          }\n        }\n        if (xScale && xScale.clamp) {\n          xScale.clamp(true);\n        }\n\n        if (formulas.length > 0) {\n          const xValues = [];\n          if (vizType === 'bar') {\n            // For bar-charts we want one data point evaluated for every\n            // data point that will be displayed.\n            const distinct = data.reduce((xVals, d) => {\n              d.values.forEach(x => xVals.add(x.x));\n\n              return xVals;\n            }, new Set());\n            xValues.push(...distinct.values());\n            xValues.sort();\n          } else {\n            // For every other time visualization it should be ok, to have a\n            // data points in even intervals.\n            let period = Math.min(\n              ...data.map(d =>\n                Math.min(\n                  ...d.values.slice(1).map((v, i) => v.x - d.values[i].x),\n                ),\n              ),\n            );\n            const dataPoints = (xMax - xMin) / (period || 1);\n            // make sure that there are enough data points and not too many\n            period = dataPoints < 100 ? (xMax - xMin) / 100 : period;\n            period = dataPoints > 500 ? (xMax - xMin) / 500 : period;\n            xValues.push(xMin);\n            for (let x = xMin; x < xMax; x += period) {\n              xValues.push(x);\n            }\n            xValues.push(xMax);\n          }\n          const formulaData = formulas.map(fo => {\n            const { value: expression } = fo;\n            return {\n              key: fo.name,\n              values: xValues.map(x => ({\n                x,\n                y: evalExpression(expression, x),\n              })),\n              color: fo.color,\n              strokeWidth: fo.width,\n              classed: `${fo.opacity} ${fo.style}`,\n            };\n          });\n          data.push(...formulaData);\n        }\n        const xAxis = chart.xAxis1 ? chart.xAxis1 : chart.xAxis;\n        const yAxis = chart.yAxis1 ? chart.yAxis1 : chart.yAxis;\n        const chartWidth = xAxis.scale().range()[1];\n        const annotationHeight = yAxis.scale().range()[0];\n\n        if (annotationData) {\n          // Event annotations\n          activeAnnotationLayers\n            .filter(\n              x =>\n                x.annotationType === ANNOTATION_TYPES.EVENT &&\n                annotationData &&\n                annotationData[x.name],\n            )\n            .forEach((config, index) => {\n              const e = applyNativeColumns(config);\n              // Add event annotation layer\n              const annotations = d3\n                .select(element)\n                .select('.nv-wrap')\n                .append('g')\n                .attr('class', `nv-event-annotation-layer-${index}`);\n              const aColor =\n                e.color || getColor(cleanColorInput(e.name), colorScheme);\n\n              const tip = tipFactory({\n                ...e,\n                annotationTipClass: `arrow-down nv-event-annotation-layer-${config.sourceType}`,\n              });\n              const records = (annotationData[e.name].records || [])\n                .map(r => {\n                  const timeValue = new Date(moment.utc(r[e.timeColumn]));\n\n                  return {\n                    ...r,\n                    [e.timeColumn]: timeValue,\n                  };\n                })\n                .filter(\n                  record =>\n                    !Number.isNaN(record[e.timeColumn].getMilliseconds()),\n                );\n\n              if (records.length > 0) {\n                annotations\n                  .selectAll('line')\n                  .data(records)\n                  .enter()\n                  .append('line')\n                  .attr({\n                    x1: d => xScale(new Date(d[e.timeColumn])),\n                    y1: 0,\n                    x2: d => xScale(new Date(d[e.timeColumn])),\n                    y2: annotationHeight,\n                  })\n                  .attr('class', `${e.opacity} ${e.style}`)\n                  .style('stroke', aColor)\n                  .style('stroke-width', e.width)\n                  .on('mouseover', tip.show)\n                  .on('mouseout', tip.hide)\n                  .call(tip);\n              }\n\n              // update annotation positions on brush event\n              if (chart.focus) {\n                chart.focus.dispatch.on('onBrush.event-annotation', () => {\n                  annotations\n                    .selectAll('line')\n                    .data(records)\n                    .attr({\n                      x1: d => xScale(new Date(d[e.timeColumn])),\n                      y1: 0,\n                      x2: d => xScale(new Date(d[e.timeColumn])),\n                      y2: annotationHeight,\n                      opacity: d => {\n                        const x = xScale(new Date(d[e.timeColumn]));\n\n                        return x > 0 && x < chartWidth ? 1 : 0;\n                      },\n                    });\n                });\n              }\n            });\n\n          // Interval annotations\n          activeAnnotationLayers\n            .filter(\n              x =>\n                x.annotationType === ANNOTATION_TYPES.INTERVAL &&\n                annotationData &&\n                annotationData[x.name],\n            )\n            .forEach((config, index) => {\n              const e = applyNativeColumns(config);\n              // Add interval annotation layer\n              const annotations = d3\n                .select(element)\n                .select('.nv-wrap')\n                .append('g')\n                .attr('class', `nv-interval-annotation-layer-${index}`);\n\n              const aColor =\n                e.color || getColor(cleanColorInput(e.name), colorScheme);\n              const tip = tipFactory(e);\n\n              const records = (annotationData[e.name].records || [])\n                .map(r => {\n                  const timeValue = new Date(moment.utc(r[e.timeColumn]));\n                  const intervalEndValue = new Date(\n                    moment.utc(r[e.intervalEndColumn]),\n                  );\n\n                  return {\n                    ...r,\n                    [e.timeColumn]: timeValue,\n                    [e.intervalEndColumn]: intervalEndValue,\n                  };\n                })\n                .filter(\n                  record =>\n                    !Number.isNaN(record[e.timeColumn].getMilliseconds()) &&\n                    !Number.isNaN(\n                      record[e.intervalEndColumn].getMilliseconds(),\n                    ),\n                );\n\n              if (records.length > 0) {\n                annotations\n                  .selectAll('rect')\n                  .data(records)\n                  .enter()\n                  .append('rect')\n                  .attr({\n                    x: d =>\n                      Math.min(\n                        xScale(new Date(d[e.timeColumn])),\n                        xScale(new Date(d[e.intervalEndColumn])),\n                      ),\n                    y: 0,\n                    width: d =>\n                      Math.max(\n                        Math.abs(\n                          xScale(new Date(d[e.intervalEndColumn])) -\n                            xScale(new Date(d[e.timeColumn])),\n                        ),\n                        1,\n                      ),\n                    height: annotationHeight,\n                  })\n                  .attr('class', `${e.opacity} ${e.style}`)\n                  .style('stroke-width', e.width)\n                  .style('stroke', aColor)\n                  .style('fill', aColor)\n                  .style('fill-opacity', 0.2)\n                  .on('mouseover', tip.show)\n                  .on('mouseout', tip.hide)\n                  .call(tip);\n              }\n\n              // update annotation positions on brush event\n              if (chart.focus) {\n                chart.focus.dispatch.on('onBrush.interval-annotation', () => {\n                  annotations\n                    .selectAll('rect')\n                    .data(records)\n                    .attr({\n                      x: d => xScale(new Date(d[e.timeColumn])),\n                      width: d => {\n                        const x1 = xScale(new Date(d[e.timeColumn]));\n                        const x2 = xScale(new Date(d[e.intervalEndColumn]));\n\n                        return x2 - x1;\n                      },\n                    });\n                });\n              }\n            });\n        }\n\n        // rerender chart appended with annotation layer\n        svg.datum(data).attr('height', height).attr('width', width).call(chart);\n\n        // Display styles for Time Series Annotations\n        chart.dispatch.on('renderEnd.timeseries-annotation', () => {\n          d3.selectAll(\n            '.slice_container .nv-timeseries-annotation-layer.showMarkerstrue .nv-point',\n          )\n            .style('stroke-opacity', 1)\n            .style('fill-opacity', 1);\n          d3.selectAll(\n            '.slice_container .nv-timeseries-annotation-layer.hideLinetrue',\n          ).style('stroke-width', 0);\n        });\n      }\n    }\n\n    wrapTooltip(chart);\n\n    return chart;\n  };\n\n  // Remove tooltips before rendering chart, if the chart is being re-rendered sometimes\n  // there are left over tooltips in the dom,\n  // this will clear them before rendering the chart again.\n  if (chartId) {\n    removeTooltip(chartId);\n  } else {\n    hideTooltips(true);\n  }\n\n  nv.addGraph(drawGraph);\n}\n\nnvd3Vis.displayName = 'NVD3';\nnvd3Vis.propTypes = propTypes;\nexport default nvd3Vis;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}