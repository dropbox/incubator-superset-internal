{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport crossFiltersSelector from './selectors';\nimport VerticalCollapse from './VerticalCollapse';\nimport { useChartsVerboseMaps } from '../utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst CrossFiltersVertical = () => {\n  const dataMask = useSelector((state) => state.dataMask);\n  const chartConfiguration = useSelector((state) => {var _state$dashboardInfo$;return (_state$dashboardInfo$ = state.dashboardInfo.metadata) == null ? void 0 : _state$dashboardInfo$.chart_configuration;});\n  const dashboardLayout = useSelector((state) => state.dashboardLayout.present);\n  const verboseMaps = useChartsVerboseMaps();\n  const selectedCrossFilters = crossFiltersSelector({\n    dataMask,\n    chartConfiguration,\n    dashboardLayout,\n    verboseMaps });\n\n  return ___EmotionJSX(VerticalCollapse, { crossFilters: selectedCrossFilters });\n};\nexport default CrossFiltersVertical;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,oBAAP,MAAiC,aAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,oBAAT,QAAqC,UAArC,C;AAEA,MAAMC,oBAAoB,GAAG,MAAK;EAChC,MAAMC,QAAQ,GAAGL,WAAW,CAC1B,MAAK,KAAIM,KAAK,CAACD,QADW,CAA5B;EAGA,MAAME,kBAAkB,GAAGP,WAAW,CACpC,MAAK,gEAAIM,KAAK,CAACE,aAAN,CAAoBC,QAAxB,qBAAI,sBAA8BC,mBAAlC,EAD+B,CAAtC;EAGA,MAAMC,eAAe,GAAGX,WAAW,CACjC,MAAK,KAAIM,KAAK,CAACK,eAAN,CAAsBC,OADE,CAAnC;EAGA,MAAMC,WAAW,GAAGV,oBAAoB,EAAxC;EACA,MAAMW,oBAAoB,GAAGb,oBAAoB,CAAC;IAChDI,QADgD;IAEhDE,kBAFgD;IAGhDI,eAHgD;IAIhDE,WAJgD,EAAD,CAAjD;;EAOA,OAAO,cAAC,gBAAD,IAAkB,YAAY,EAAEC,oBAAhC,GAAP;AACD,CAnBD;AAqBA,eAAeV,oBAAf","names":["React","useSelector","crossFiltersSelector","VerticalCollapse","useChartsVerboseMaps","CrossFiltersVertical","dataMask","state","chartConfiguration","dashboardInfo","metadata","chart_configuration","dashboardLayout","present","verboseMaps","selectedCrossFilters"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/CrossFilters/Vertical.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { DataMaskStateWithId, JsonObject } from '@superset-ui/core';\nimport { useSelector } from 'react-redux';\nimport { DashboardLayout, RootState } from 'src/dashboard/types';\nimport crossFiltersSelector from './selectors';\nimport VerticalCollapse from './VerticalCollapse';\nimport { useChartsVerboseMaps } from '../utils';\n\nconst CrossFiltersVertical = () => {\n  const dataMask = useSelector<RootState, DataMaskStateWithId>(\n    state => state.dataMask,\n  );\n  const chartConfiguration = useSelector<RootState, JsonObject>(\n    state => state.dashboardInfo.metadata?.chart_configuration,\n  );\n  const dashboardLayout = useSelector<RootState, DashboardLayout>(\n    state => state.dashboardLayout.present,\n  );\n  const verboseMaps = useChartsVerboseMaps();\n  const selectedCrossFilters = crossFiltersSelector({\n    dataMask,\n    chartConfiguration,\n    dashboardLayout,\n    verboseMaps,\n  });\n\n  return <VerticalCollapse crossFilters={selectedCrossFilters} />;\n};\n\nexport default CrossFiltersVertical;\n"]},"metadata":{},"sourceType":"module"}