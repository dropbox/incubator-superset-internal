{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { css, useTheme } from '@superset-ui/core';\nimport { Radio } from 'src/components/Radio';\nimport { Space } from 'src/components';\nimport Icons from 'src/components/Icons';\nimport Popover from 'src/components/Popover';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction HeaderWithRadioGroup(props) {\n  const { headerTitle, groupTitle, groupOptions, value, onChange } = props;\n  const theme = useTheme();\n  const [popoverVisible, setPopoverVisible] = useState(false);\n  return ___EmotionJSX(\"div\", { css: css`\n        display: flex;\n        align-items: center;\n      ` },\n  ___EmotionJSX(Popover, { trigger: \"click\", visible: popoverVisible, content: ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(\"div\", { css: css`\n                font-weight: ${theme.typography.weights.bold};\n                margin-bottom: ${theme.gridUnit}px;\n              ` },\n    groupTitle),\n\n    ___EmotionJSX(Radio.Group, { value: value, onChange: (e) => {\n        onChange(e.target.value);\n        setPopoverVisible(false);\n      } },\n    ___EmotionJSX(Space, { direction: \"vertical\" },\n    groupOptions.map((option) => ___EmotionJSX(Radio, { key: option.value, value: option.value },\n    option.label))))),\n\n\n\n    placement: \"bottomLeft\", arrowPointAtCenter: true },\n  ___EmotionJSX(Icons.SettingOutlined, { iconSize: \"m\", iconColor: theme.colors.grayscale.light1, css: css`\n            margin-top: 3px; // we need exactly 3px to align the icon\n            margin-right: ${theme.gridUnit}px;\n          `, onClick: () => setPopoverVisible(true) })),\n\n  headerTitle);\n\n}\nexport default HeaderWithRadioGroup;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,mBAA9B;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB,C;AAUA,SAASC,oBAAT,CAA8BC,KAA9B,EAA8D;EAC5D,MAAM,EAAEC,WAAF,EAAeC,UAAf,EAA2BC,YAA3B,EAAyCC,KAAzC,EAAgDC,QAAhD,KAA6DL,KAAnE;EACA,MAAMM,KAAK,GAAGZ,QAAQ,EAAtB;EACA,MAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,KAAD,CAApD;EAEA,OACE,uBACE,GAAG,EAAEC,GAAG;;;OADV;EAME,cAAC,OAAD,IACE,OAAO,EAAC,OADV,EAEE,OAAO,EAAEc,cAFX,EAGE,OAAO,EACL;IACE,uBACE,GAAG,EAAEd,GAAG;+BACSa,KAAK,CAACG,UAAN,CAAiBC,OAAjB,CAAyBC,IAAI;iCAC3BL,KAAK,CAACM,QAAQ;eAHnC;IAMGV,UANH,CADF;;IASE,cAAC,KAAD,CAAO,KAAP,IACE,KAAK,EAAEE,KADT,EAEE,QAAQ,EAAE,EAAC,KAAG;QACZC,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASV,KAAV,CAAR;QACAI,iBAAiB,CAAC,KAAD,CAAjB;MACD,CALH;IAOE,cAAC,KAAD,IAAO,SAAS,EAAC,UAAjB;IACGL,YAAY,CAACY,GAAb,CAAiB,OAAM,KACtB,cAAC,KAAD,IAAO,GAAG,EAAEC,MAAM,CAACZ,KAAnB,EAA0B,KAAK,EAAEY,MAAM,CAACZ,KAAxC;IACGY,MAAM,CAACC,KADV,CADD,CADH,CAPF,CATF,CAJJ;;;;IA8BE,SAAS,EAAC,YA9BZ,EA+BE,kBAAkB,MA/BpB;EAiCE,cAAC,KAAD,CAAO,eAAP,IACE,QAAQ,EAAC,GADX,EAEE,SAAS,EAAEX,KAAK,CAACY,MAAN,CAAaC,SAAb,CAAuBC,MAFpC,EAGE,GAAG,EAAE3B,GAAG;;4BAEUa,KAAK,CAACM,QAAQ;WALlC,EAOE,OAAO,EAAE,MAAMJ,iBAAiB,CAAC,IAAD,CAPlC,GAjCF,CANF;;EAiDGP,WAjDH,CADF;;AAqDD;AAED,eAAeF,oBAAf","names":["React","useState","css","useTheme","Radio","Space","Icons","Popover","HeaderWithRadioGroup","props","headerTitle","groupTitle","groupOptions","value","onChange","theme","popoverVisible","setPopoverVisible","typography","weights","bold","gridUnit","e","target","map","option","label","colors","grayscale","light1"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/components/Table/header-renderers/HeaderWithRadioGroup.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { css, useTheme } from '@superset-ui/core';\nimport { Radio } from 'src/components/Radio';\nimport { Space } from 'src/components';\nimport Icons from 'src/components/Icons';\nimport Popover from 'src/components/Popover';\n\nexport interface HeaderWithRadioGroupProps {\n  headerTitle: string;\n  groupTitle: string;\n  groupOptions: { label: string; value: string | number }[];\n  value?: string | number;\n  onChange: (value: string) => void;\n}\n\nfunction HeaderWithRadioGroup(props: HeaderWithRadioGroupProps) {\n  const { headerTitle, groupTitle, groupOptions, value, onChange } = props;\n  const theme = useTheme();\n  const [popoverVisible, setPopoverVisible] = useState(false);\n\n  return (\n    <div\n      css={css`\n        display: flex;\n        align-items: center;\n      `}\n    >\n      <Popover\n        trigger=\"click\"\n        visible={popoverVisible}\n        content={\n          <div>\n            <div\n              css={css`\n                font-weight: ${theme.typography.weights.bold};\n                margin-bottom: ${theme.gridUnit}px;\n              `}\n            >\n              {groupTitle}\n            </div>\n            <Radio.Group\n              value={value}\n              onChange={e => {\n                onChange(e.target.value);\n                setPopoverVisible(false);\n              }}\n            >\n              <Space direction=\"vertical\">\n                {groupOptions.map(option => (\n                  <Radio key={option.value} value={option.value}>\n                    {option.label}\n                  </Radio>\n                ))}\n              </Space>\n            </Radio.Group>\n          </div>\n        }\n        placement=\"bottomLeft\"\n        arrowPointAtCenter\n      >\n        <Icons.SettingOutlined\n          iconSize=\"m\"\n          iconColor={theme.colors.grayscale.light1}\n          css={css`\n            margin-top: 3px; // we need exactly 3px to align the icon\n            margin-right: ${theme.gridUnit}px;\n          `}\n          onClick={() => setPopoverVisible(true)}\n        />\n      </Popover>\n      {headerTitle}\n    </div>\n  );\n}\n\nexport default HeaderWithRadioGroup;\n"]},"metadata":{},"sourceType":"module"}