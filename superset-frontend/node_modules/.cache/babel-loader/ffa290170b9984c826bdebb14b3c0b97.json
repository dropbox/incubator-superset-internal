{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { sharedControls, InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { t, useTheme } from '@superset-ui/core';\nimport React from 'react';\nimport { CodeEditor } from '../../components/CodeEditor/CodeEditor';\nimport { ControlHeader } from '../../components/ControlHeader/controlHeader';\nimport { debounceFunc } from '../../consts';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyleControl = (props) => {\n  const theme = useTheme();\n  const defaultValue = props != null && props.value ?\n  undefined :\n  `/*\n  .data-list {\n    background-color: yellow;\n  }\n*/`;\n  return ___EmotionJSX(\"div\", null,\n  ___EmotionJSX(ControlHeader, null,\n  ___EmotionJSX(\"div\", null,\n  props.label,\n  ___EmotionJSX(InfoTooltipWithTrigger, { iconsStyle: { marginLeft: theme.gridUnit }, tooltip: t('You need to configure HTML sanitization to use CSS') }))),\n\n\n  ___EmotionJSX(CodeEditor, { theme: \"dark\", mode: \"css\", value: props.value, defaultValue: defaultValue, onChange: (source) => {\n      debounceFunc(props.onChange, source || '');\n    } }));\n\n};__signature__(StyleControl, \"useTheme{theme}\", () => [useTheme]);\nexport const styleControlSetItem = {\n  name: 'styleTemplate',\n  config: {\n    ...sharedControls.entity,\n    type: StyleControl,\n    label: t('CSS Styles'),\n    description: t('CSS applied to the chart'),\n    isInt: false,\n    renderTrigger: true,\n    validators: [],\n    mapStateToProps: (_ref) => {var _controls$handlebars_;let { controls } = _ref;return {\n        value: controls == null ? void 0 : (_controls$handlebars_ = controls.handlebars_template) == null ? void 0 : _controls$handlebars_.value };} } };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyleControl, \"StyleControl\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-handlebars/src/plugin/controls/style.tsx\");reactHotLoader.register(styleControlSetItem, \"styleControlSetItem\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-handlebars/src/plugin/controls/style.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAGEA,cAHF,EAIEC,sBAJF,QAKO,6BALP;AAMA,SAASC,CAAT,EAAYC,QAAZ,QAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,wCAA3B;AACA,SAASC,aAAT,QAA8B,8CAA9B;AACA,SAASC,YAAT,QAA6B,cAA7B,C;AAMA,MAAMC,YAAY,GAAG,CAACC,KAAD,KAAwD;EAC3E,MAAMC,KAAK,GAAGP,QAAQ,EAAtB;EAEA,MAAMQ,YAAY,GAAGF,KAAK,QAAL,SAAK,CAAEG,KAAP;EACjBC,SADiB;EAEjB;;;;GAFJ;EAQA,OACE;EACE,cAAC,aAAD;EACE;EACGJ,KAAK,CAACK,KADT;EAEE,cAAC,sBAAD,IACE,UAAU,EAAE,EAAEC,UAAU,EAAEL,KAAK,CAACM,QAApB,EADd,EAEE,OAAO,EAAEd,CAAC,CAAC,oDAAD,CAFZ,GAFF,CADF,CADF;;;EAUE,cAAC,UAAD,IACE,KAAK,EAAC,MADR,EAEE,IAAI,EAAC,KAFP,EAGE,KAAK,EAAEO,KAAK,CAACG,KAHf,EAIE,YAAY,EAAED,YAJhB,EAKE,QAAQ,EAAE,OAAM,KAAG;MACjBJ,YAAY,CAACE,KAAK,CAACQ,QAAP,EAAiBC,MAAM,IAAI,EAA3B,CAAZ;IACD,CAPH,GAVF,CADF;;AAsBD,CAjCD,C,cAAMV,Y,4BACUL,Q;AAkChB,OAAO,MAAMgB,mBAAmB,GAAmB;EACjDC,IAAI,EAAE,eAD2C;EAEjDC,MAAM,EAAE;IACN,GAAGrB,cAAc,CAACsB,MADZ;IAENC,IAAI,EAAEf,YAFA;IAGNM,KAAK,EAAEZ,CAAC,CAAC,YAAD,CAHF;IAINsB,WAAW,EAAEtB,CAAC,CAAC,0BAAD,CAJR;IAKNuB,KAAK,EAAE,KALD;IAMNC,aAAa,EAAE,IANT;IAQNC,UAAU,EAAE,EARN;IASNC,eAAe,EAAE,yCAAC,EAAEC,QAAF,EAAD,eAAmB;QAClCjB,KAAK,EAAEiB,QAAF,6CAAEA,QAAQ,CAAEC,mBAAZ,qBAAE,sBAA+BlB,KADJ,EAAnB,EATX,EAFyC,EAA5C,C,iLAnCDJ,Y,4KAmCOW,mB","names":["sharedControls","InfoTooltipWithTrigger","t","useTheme","React","CodeEditor","ControlHeader","debounceFunc","StyleControl","props","theme","defaultValue","value","undefined","label","marginLeft","gridUnit","onChange","source","styleControlSetItem","name","config","entity","type","description","isInt","renderTrigger","validators","mapStateToProps","controls","handlebars_template"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-handlebars/src/plugin/controls/style.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ControlSetItem,\n  CustomControlConfig,\n  sharedControls,\n  InfoTooltipWithTrigger,\n} from '@superset-ui/chart-controls';\nimport { t, useTheme } from '@superset-ui/core';\nimport React from 'react';\nimport { CodeEditor } from '../../components/CodeEditor/CodeEditor';\nimport { ControlHeader } from '../../components/ControlHeader/controlHeader';\nimport { debounceFunc } from '../../consts';\n\ninterface StyleCustomControlProps {\n  value: string;\n}\n\nconst StyleControl = (props: CustomControlConfig<StyleCustomControlProps>) => {\n  const theme = useTheme();\n\n  const defaultValue = props?.value\n    ? undefined\n    : `/*\n  .data-list {\n    background-color: yellow;\n  }\n*/`;\n\n  return (\n    <div>\n      <ControlHeader>\n        <div>\n          {props.label}\n          <InfoTooltipWithTrigger\n            iconsStyle={{ marginLeft: theme.gridUnit }}\n            tooltip={t('You need to configure HTML sanitization to use CSS')}\n          />\n        </div>\n      </ControlHeader>\n      <CodeEditor\n        theme=\"dark\"\n        mode=\"css\"\n        value={props.value}\n        defaultValue={defaultValue}\n        onChange={source => {\n          debounceFunc(props.onChange, source || '');\n        }}\n      />\n    </div>\n  );\n};\n\nexport const styleControlSetItem: ControlSetItem = {\n  name: 'styleTemplate',\n  config: {\n    ...sharedControls.entity,\n    type: StyleControl,\n    label: t('CSS Styles'),\n    description: t('CSS applied to the chart'),\n    isInt: false,\n    renderTrigger: true,\n\n    validators: [],\n    mapStateToProps: ({ controls }) => ({\n      value: controls?.handlebars_template?.value,\n    }),\n  },\n};\n"]},"metadata":{},"sourceType":"module"}