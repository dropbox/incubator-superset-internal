{"ast":null,"code":"import set from \"./set.js\";\n\nexport default function intersection(values) {for (var _len = arguments.length, others = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {others[_key - 1] = arguments[_key];}\n  values = new Set(values);\n  others = others.map(set);\n  out: for (const value of values) {\n    for (const other of others) {\n      if (!other.has(value)) {\n        values.delete(value);\n        continue out;\n      }\n    }\n  }\n  return values;\n}","map":{"version":3,"names":["set","intersection","values","others","Set","map","out","value","other","has","delete"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/node_modules/@encodable/color/node_modules/d3-array/src/intersection.js"],"sourcesContent":["import set from \"./set.js\";\n\nexport default function intersection(values, ...others) {\n  values = new Set(values);\n  others = others.map(set);\n  out: for (const value of values) {\n    for (const other of others) {\n      if (!other.has(value)) {\n        values.delete(value);\n        continue out;\n      }\n    }\n  }\n  return values;\n}\n"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,UAAhB;;AAEA,eAAe,SAASC,YAAT,CAAsBC,MAAtB,EAAyC,mCAARC,MAAQ,uEAARA,MAAQ;EACtDD,MAAM,GAAG,IAAIE,GAAJ,CAAQF,MAAR,CAAT;EACAC,MAAM,GAAGA,MAAM,CAACE,GAAP,CAAWL,GAAX,CAAT;EACAM,GAAG,EAAE,KAAK,MAAMC,KAAX,IAAoBL,MAApB,EAA4B;IAC/B,KAAK,MAAMM,KAAX,IAAoBL,MAApB,EAA4B;MAC1B,IAAI,CAACK,KAAK,CAACC,GAAN,CAAUF,KAAV,CAAL,EAAuB;QACrBL,MAAM,CAACQ,MAAP,CAAcH,KAAd;QACA,SAASD,GAAT;MACD;IACF;EACF;EACD,OAAOJ,MAAP;AACD"},"metadata":{},"sourceType":"module"}