{"ast":null,"code":"import _isEqualWith from \"lodash/isEqualWith\";import _isNull from \"lodash/isNull\";import _isUndefined from \"lodash/isUndefined\";import _omit from \"lodash/omit\";import _omitBy from \"lodash/omitBy\";import _isEqual from \"lodash/isEqual\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport shortid from 'shortid';\nimport { compose } from 'redux';\nimport persistState from 'redux-localstorage';\n\nimport { ensureIsArray } from '@superset-ui/core';\nexport function addToObject(state, arrKey, obj) {\n  const newObject = { ...state[arrKey] };\n  const copiedObject = { ...obj };\n  if (!copiedObject.id) {\n    copiedObject.id = shortid.generate();\n  }\n  newObject[copiedObject.id] = copiedObject;\n  return { ...state, [arrKey]: newObject };\n}\nexport function alterInObject(state, arrKey, obj, alterations) {\n  const newObject = { ...state[arrKey] };\n  newObject[obj.id] = { ...newObject[obj.id], ...alterations };\n  return { ...state, [arrKey]: newObject };\n}\nexport function alterInArr(state, arrKey, obj, alterations, idKey) {if (idKey === void 0) {idKey = 'id';}\n  // Finds an item in an array in the state and replaces it with a\n  // new object with an altered property\n  const newArr = [];\n  state[arrKey].forEach((arrItem) => {\n    if (obj[idKey] === arrItem[idKey]) {\n      newArr.push({ ...arrItem, ...alterations });\n    } else\n    {\n      newArr.push(arrItem);\n    }\n  });\n  return { ...state, [arrKey]: newArr };\n}\nexport function removeFromArr(state, arrKey, obj, idKey) {if (idKey === void 0) {idKey = 'id';}\n  const newArr = [];\n  state[arrKey].forEach((arrItem) => {\n    if (!(obj[idKey] === arrItem[idKey])) {\n      newArr.push(arrItem);\n    }\n  });\n  return { ...state, [arrKey]: newArr };\n}\nexport function getFromArr(arr, id) {\n  let obj;\n  arr.forEach((o) => {\n    if (o.id === id) {\n      obj = o;\n    }\n  });\n  return obj;\n}\nexport function addToArr(state, arrKey, obj, prepend) {if (prepend === void 0) {prepend = false;}\n  const newObj = { ...obj };\n  if (!newObj.id) {\n    newObj.id = shortid.generate();\n  }\n  const newState = {};\n  if (prepend) {\n    newState[arrKey] = [newObj, ...state[arrKey]];\n  } else\n  {\n    newState[arrKey] = [...state[arrKey], newObj];\n  }\n  return { ...state, ...newState };\n}\nexport function extendArr(state, arrKey, arr, prepend) {if (prepend === void 0) {prepend = false;}\n  const newArr = [...arr];\n  newArr.forEach((el) => {\n    if (!el.id) {\n      /* eslint-disable no-param-reassign */\n      el.id = shortid.generate();\n    }\n  });\n  const newState = {};\n  if (prepend) {\n    newState[arrKey] = [...newArr, ...state[arrKey]];\n  } else\n  {\n    newState[arrKey] = [...state[arrKey], ...newArr];\n  }\n  return { ...state, ...newState };\n}\nexport function initEnhancer(persist, persistConfig, disableDebugger) {if (persist === void 0) {persist = true;}if (persistConfig === void 0) {persistConfig = {};}if (disableDebugger === void 0) {disableDebugger = false;}\n  const { paths, config } = persistConfig;\n  const composeEnhancers = process.env.WEBPACK_MODE === 'development' && disableDebugger !== true ?\n  /* eslint-disable-next-line no-underscore-dangle, dot-notation */\n  window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] ?\n  /* eslint-disable-next-line no-underscore-dangle, dot-notation */\n  window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__']({\n    trace: true }) :\n\n  compose :\n  compose;\n  return persist ?\n  composeEnhancers(persistState(paths, config)) :\n  composeEnhancers();\n}\nexport function areArraysShallowEqual(arr1, arr2) {\n  // returns whether 2 arrays are shallow equal\n  // used in shouldComponentUpdate when denormalizing arrays\n  // where the array object is different every time, but the content might\n  // be the same\n  if (!arr1 || !arr2) {\n    return false;\n  }\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  const { length } = arr1;\n  for (let i = 0; i < length; i += 1) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function areObjectsEqual(obj1, obj2, opts) {var _opts$ignoreFields;if (opts === void 0) {opts = { ignoreUndefined: false, ignoreNull: false, ignoreFields: [] };}\n  let comp1 = obj1;\n  let comp2 = obj2;\n  if (opts.ignoreUndefined) {\n    comp1 = _omitBy(comp1, _isUndefined);\n    comp2 = _omitBy(comp2, _isUndefined);\n  }\n  if (opts.ignoreNull) {\n    comp1 = _omitBy(comp1, _isNull);\n    comp2 = _omitBy(comp2, _isNull);\n  }\n  if ((_opts$ignoreFields = opts.ignoreFields) != null && _opts$ignoreFields.length) {\n    const ignoreFields = ensureIsArray(opts.ignoreFields);\n    return _isEqualWith(comp1, comp2, (val1, val2) => _isEqual(ensureIsArray(val1).map((value) => _omit(value, ignoreFields)), ensureIsArray(val2).map((value) => _omit(value, ignoreFields))));\n  }\n  return _isEqual(comp1, comp2);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(addToObject, \"addToObject\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/reduxUtils.ts\");reactHotLoader.register(alterInObject, \"alterInObject\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/reduxUtils.ts\");reactHotLoader.register(alterInArr, \"alterInArr\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/reduxUtils.ts\");reactHotLoader.register(removeFromArr, \"removeFromArr\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/reduxUtils.ts\");reactHotLoader.register(getFromArr, \"getFromArr\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/reduxUtils.ts\");reactHotLoader.register(addToArr, \"addToArr\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/reduxUtils.ts\");reactHotLoader.register(extendArr, \"extendArr\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/reduxUtils.ts\");reactHotLoader.register(initEnhancer, \"initEnhancer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/reduxUtils.ts\");reactHotLoader.register(areArraysShallowEqual, \"areArraysShallowEqual\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/reduxUtils.ts\");reactHotLoader.register(areObjectsEqual, \"areObjectsEqual\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/reduxUtils.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"khBAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,YAAP,MAA6C,oBAA7C;;AASA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,OAAM,SAAUC,WAAV,CACJC,KADI,EAEJC,MAFI,EAGJC,GAHI,EAGoB;EAExB,MAAMC,SAAS,GAAG,EAAE,GAAGH,KAAK,CAACC,MAAD,CAAV,EAAlB;EACA,MAAMG,YAAY,GAAG,EAAE,GAAGF,GAAL,EAArB;EAEA,IAAI,CAACE,YAAY,CAACC,EAAlB,EAAsB;IACpBD,YAAY,CAACC,EAAb,GAAkBV,OAAO,CAACW,QAAR,EAAlB;EACD;EACDH,SAAS,CAACC,YAAY,CAACC,EAAd,CAAT,GAA6BD,YAA7B;EACA,OAAO,EAAE,GAAGJ,KAAL,EAAY,CAACC,MAAD,GAAUE,SAAtB,EAAP;AACD;AAED,OAAM,SAAUI,aAAV,CACJP,KADI,EAEJC,MAFI,EAGJC,GAHI,EAIJM,WAJI,EAI4B;EAEhC,MAAML,SAAS,GAAG,EAAE,GAAGH,KAAK,CAACC,MAAD,CAAV,EAAlB;EACAE,SAAS,CAACD,GAAG,CAACG,EAAL,CAAT,GAAoB,EAAE,GAAGF,SAAS,CAACD,GAAG,CAACG,EAAL,CAAd,EAAwB,GAAGG,WAA3B,EAApB;EACA,OAAO,EAAE,GAAGR,KAAL,EAAY,CAACC,MAAD,GAAUE,SAAtB,EAAP;AACD;AAED,OAAM,SAAUM,UAAV,CACJT,KADI,EAEJC,MAFI,EAGJC,GAHI,EAIJM,WAJI,EAKJE,KALI,EAKQ,KAAZA,KAAY,cAAZA,KAAY,GAAJ,IAAI;EAEZ;EACA;EACA,MAAMC,MAAM,GAAc,EAA1B;EACAX,KAAK,CAACC,MAAD,CAAL,CAAcW,OAAd,CAAsB,CAACC,OAAD,KAAiC;IACrD,IAAIX,GAAG,CAACQ,KAAD,CAAH,KAAeG,OAAO,CAACH,KAAD,CAA1B,EAAmC;MACjCC,MAAM,CAACG,IAAP,CAAY,EAAE,GAAGD,OAAL,EAAc,GAAGL,WAAjB,EAAZ;IACD,CAFD;IAEO;MACLG,MAAM,CAACG,IAAP,CAAYD,OAAZ;IACD;EACF,CAND;EAOA,OAAO,EAAE,GAAGb,KAAL,EAAY,CAACC,MAAD,GAAUU,MAAtB,EAAP;AACD;AAED,OAAM,SAAUI,aAAV,CACJf,KADI,EAEJC,MAFI,EAGJC,GAHI,EAIJQ,KAJI,EAIQ,KAAZA,KAAY,cAAZA,KAAY,GAAJ,IAAI;EAEZ,MAAMC,MAAM,GAAc,EAA1B;EACAX,KAAK,CAACC,MAAD,CAAL,CAAcW,OAAd,CAAsB,CAACC,OAAD,KAAiC;IACrD,IAAI,EAAEX,GAAG,CAACQ,KAAD,CAAH,KAAeG,OAAO,CAACH,KAAD,CAAxB,CAAJ,EAAsC;MACpCC,MAAM,CAACG,IAAP,CAAYD,OAAZ;IACD;EACF,CAJD;EAKA,OAAO,EAAE,GAAGb,KAAL,EAAY,CAACC,MAAD,GAAUU,MAAtB,EAAP;AACD;AAED,OAAM,SAAUK,UAAV,CAAqBC,GAArB,EAAiDZ,EAAjD,EAA2D;EAC/D,IAAIH,GAAJ;EACAe,GAAG,CAACL,OAAJ,CAAY,EAAC,KAAG;IACd,IAAIM,CAAC,CAACb,EAAF,KAASA,EAAb,EAAiB;MACfH,GAAG,GAAGgB,CAAN;IACD;EACF,CAJD;EAKA,OAAOhB,GAAP;AACD;AAED,OAAM,SAAUiB,QAAV,CACJnB,KADI,EAEJC,MAFI,EAGJC,GAHI,EAIJkB,OAJI,EAIW,KAAfA,OAAe,cAAfA,OAAe,GAAL,KAAK;EAEf,MAAMC,MAAM,GAAG,EAAE,GAAGnB,GAAL,EAAf;EACA,IAAI,CAACmB,MAAM,CAAChB,EAAZ,EAAgB;IACdgB,MAAM,CAAChB,EAAP,GAAYV,OAAO,CAACW,QAAR,EAAZ;EACD;EACD,MAAMgB,QAAQ,GAAG,EAAjB;EACA,IAAIF,OAAJ,EAAa;IACXE,QAAQ,CAACrB,MAAD,CAAR,GAAmB,CAACoB,MAAD,EAAS,GAAGrB,KAAK,CAACC,MAAD,CAAjB,CAAnB;EACD,CAFD;EAEO;IACLqB,QAAQ,CAACrB,MAAD,CAAR,GAAmB,CAAC,GAAGD,KAAK,CAACC,MAAD,CAAT,EAAmBoB,MAAnB,CAAnB;EACD;EACD,OAAO,EAAE,GAAGrB,KAAL,EAAY,GAAGsB,QAAf,EAAP;AACD;AAED,OAAM,SAAUC,SAAV,CACJvB,KADI,EAEJC,MAFI,EAGJgB,GAHI,EAIJG,OAJI,EAIW,KAAfA,OAAe,cAAfA,OAAe,GAAL,KAAK;EAEf,MAAMT,MAAM,GAAG,CAAC,GAAGM,GAAJ,CAAf;EACAN,MAAM,CAACC,OAAP,CAAe,GAAE,KAAG;IAClB,IAAI,CAACY,EAAE,CAACnB,EAAR,EAAY;MACV;MACAmB,EAAE,CAACnB,EAAH,GAAQV,OAAO,CAACW,QAAR,EAAR;IACD;EACF,CALD;EAMA,MAAMgB,QAAQ,GAAG,EAAjB;EACA,IAAIF,OAAJ,EAAa;IACXE,QAAQ,CAACrB,MAAD,CAAR,GAAmB,CAAC,GAAGU,MAAJ,EAAY,GAAGX,KAAK,CAACC,MAAD,CAApB,CAAnB;EACD,CAFD;EAEO;IACLqB,QAAQ,CAACrB,MAAD,CAAR,GAAmB,CAAC,GAAGD,KAAK,CAACC,MAAD,CAAT,EAAmB,GAAGU,MAAtB,CAAnB;EACD;EACD,OAAO,EAAE,GAAGX,KAAL,EAAY,GAAGsB,QAAf,EAAP;AACD;AAED,OAAM,SAAUG,YAAV,CACJC,OADI,EAEJC,aAFI,EAGJC,eAHI,EAGmB,KAFvBF,OAEuB,cAFvBA,OAEuB,GAFb,IAEa,MADvBC,aACuB,cADvBA,aACuB,GAD+C,EAC/C,MAAvBC,eAAuB,cAAvBA,eAAuB,GAAL,KAAK;EAEvB,MAAM,EAAEC,KAAF,EAASC,MAAT,KAAoBH,aAA1B;EACA,MAAMI,gBAAgB,GACpBC,OAAO,CAACC,GAAR,CAAYC,YAAZ,KAA6B,aAA7B,IAA8CN,eAAe,KAAK,IAAlE;EACI;EACAO,MAAM,CAAC,sCAAD,CAAN;EACE;EACAA,MAAM,CAAC,sCAAD,CAAN,CAA+C;IAC7CC,KAAK,EAAE,IADsC,EAA/C,CAFF;;EAKExC,OAPN;EAQIA,OATN;EAWA,OAAO8B,OAAO;EACVK,gBAAgB,CAAClC,YAAY,CAACgC,KAAD,EAAQC,MAAR,CAAb,CADN;EAEVC,gBAAgB,EAFpB;AAGD;AAED,OAAM,SAAUM,qBAAV,CAAgCC,IAAhC,EAAiDC,IAAjD,EAAgE;EACpE;EACA;EACA;EACA;EACA,IAAI,CAACD,IAAD,IAAS,CAACC,IAAd,EAAoB;IAClB,OAAO,KAAP;EACD;EACD,IAAID,IAAI,CAACE,MAAL,KAAgBD,IAAI,CAACC,MAAzB,EAAiC;IAC/B,OAAO,KAAP;EACD;EACD,MAAM,EAAEA,MAAF,KAAaF,IAAnB;EACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4BC,CAAC,IAAI,CAAjC,EAAoC;IAClC,IAAIH,IAAI,CAACG,CAAD,CAAJ,KAAYF,IAAI,CAACE,CAAD,CAApB,EAAyB;MACvB,OAAO,KAAP;IACD;EACF;EACD,OAAO,IAAP;AACD;AAED,OAAM,SAAUC,eAAV,CACJC,IADI,EAEJC,IAFI,EAGJC,IAHI,EAO+D,4BAJnEA,IAImE,cAJnEA,IAImE,GAA/D,EAAEC,eAAe,EAAE,KAAnB,EAA0BC,UAAU,EAAE,KAAtC,EAA6CC,YAAY,EAAE,EAA3D,EAA+D;EAEnE,IAAIC,KAAK,GAAGN,IAAZ;EACA,IAAIO,KAAK,GAAGN,IAAZ;EACA,IAAIC,IAAI,CAACC,eAAT,EAA0B;IACxBG,KAAK,GAAG,QAAOA,KAAP,eAAR;IACAC,KAAK,GAAG,QAAOA,KAAP,eAAR;EACD;EACD,IAAIL,IAAI,CAACE,UAAT,EAAqB;IACnBE,KAAK,GAAG,QAAOA,KAAP,UAAR;IACAC,KAAK,GAAG,QAAOA,KAAP,UAAR;EACD;EACD,0BAAIL,IAAI,CAACG,YAAT,aAAI,mBAAmBR,MAAvB,EAA+B;IAC7B,MAAMQ,YAAY,GAAGlD,aAAa,CAAC+C,IAAI,CAACG,YAAN,CAAlC;IACA,OAAO,aAAYC,KAAZ,EAAmBC,KAAnB,EAA0B,CAACC,IAAD,EAAOC,IAAP,KAC/B,SACEtD,aAAa,CAACqD,IAAD,CAAb,CAAoBE,GAApB,CAAwB,MAAK,KAAI,MAAKC,KAAL,EAAYN,YAAZ,CAAjC,CADF,EAEElD,aAAa,CAACsD,IAAD,CAAb,CAAoBC,GAApB,CAAwB,MAAK,KAAI,MAAKC,KAAL,EAAYN,YAAZ,CAAjC,CAFF,CADK,CAAP;EAMD;EACD,OAAO,SAAQC,KAAR,EAAeC,KAAf,CAAP;AACD,C,iLAvLenD,W,+HAeAQ,a,iIAWAE,U,8HAoBAM,a,iIAeAC,U,8HAUAG,Q,4HAmBAI,S,6HAsBAE,Y,gIAsBAY,qB,yIAoBAK,e","names":["shortid","compose","persistState","ensureIsArray","addToObject","state","arrKey","obj","newObject","copiedObject","id","generate","alterInObject","alterations","alterInArr","idKey","newArr","forEach","arrItem","push","removeFromArr","getFromArr","arr","o","addToArr","prepend","newObj","newState","extendArr","el","initEnhancer","persist","persistConfig","disableDebugger","paths","config","composeEnhancers","process","env","WEBPACK_MODE","window","trace","areArraysShallowEqual","arr1","arr2","length","i","areObjectsEqual","obj1","obj2","opts","ignoreUndefined","ignoreNull","ignoreFields","comp1","comp2","val1","val2","map","value"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/reduxUtils.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport shortid from 'shortid';\nimport { compose } from 'redux';\nimport persistState, { StorageAdapter } from 'redux-localstorage';\nimport {\n  isEqual,\n  omitBy,\n  omit,\n  isUndefined,\n  isNull,\n  isEqualWith,\n} from 'lodash';\nimport { ensureIsArray } from '@superset-ui/core';\n\nexport function addToObject(\n  state: Record<string, any>,\n  arrKey: string,\n  obj: Record<string, any>,\n) {\n  const newObject = { ...state[arrKey] };\n  const copiedObject = { ...obj };\n\n  if (!copiedObject.id) {\n    copiedObject.id = shortid.generate();\n  }\n  newObject[copiedObject.id] = copiedObject;\n  return { ...state, [arrKey]: newObject };\n}\n\nexport function alterInObject(\n  state: Record<string, any>,\n  arrKey: string,\n  obj: Record<string, any>,\n  alterations: Record<string, any>,\n) {\n  const newObject = { ...state[arrKey] };\n  newObject[obj.id] = { ...newObject[obj.id], ...alterations };\n  return { ...state, [arrKey]: newObject };\n}\n\nexport function alterInArr(\n  state: Record<string, any>,\n  arrKey: string,\n  obj: Record<string, any>,\n  alterations: Record<string, any>,\n  idKey = 'id',\n) {\n  // Finds an item in an array in the state and replaces it with a\n  // new object with an altered property\n  const newArr: unknown[] = [];\n  state[arrKey].forEach((arrItem: Record<string, any>) => {\n    if (obj[idKey] === arrItem[idKey]) {\n      newArr.push({ ...arrItem, ...alterations });\n    } else {\n      newArr.push(arrItem);\n    }\n  });\n  return { ...state, [arrKey]: newArr };\n}\n\nexport function removeFromArr(\n  state: Record<string, any>,\n  arrKey: string,\n  obj: Record<string, any>,\n  idKey = 'id',\n) {\n  const newArr: unknown[] = [];\n  state[arrKey].forEach((arrItem: Record<string, any>) => {\n    if (!(obj[idKey] === arrItem[idKey])) {\n      newArr.push(arrItem);\n    }\n  });\n  return { ...state, [arrKey]: newArr };\n}\n\nexport function getFromArr(arr: Record<string, any>[], id: string) {\n  let obj;\n  arr.forEach(o => {\n    if (o.id === id) {\n      obj = o;\n    }\n  });\n  return obj;\n}\n\nexport function addToArr(\n  state: Record<string, any>,\n  arrKey: string,\n  obj: Record<string, any>,\n  prepend = false,\n) {\n  const newObj = { ...obj };\n  if (!newObj.id) {\n    newObj.id = shortid.generate();\n  }\n  const newState = {};\n  if (prepend) {\n    newState[arrKey] = [newObj, ...state[arrKey]];\n  } else {\n    newState[arrKey] = [...state[arrKey], newObj];\n  }\n  return { ...state, ...newState };\n}\n\nexport function extendArr(\n  state: Record<string, any>,\n  arrKey: string,\n  arr: Record<string, any>[],\n  prepend = false,\n) {\n  const newArr = [...arr];\n  newArr.forEach(el => {\n    if (!el.id) {\n      /* eslint-disable no-param-reassign */\n      el.id = shortid.generate();\n    }\n  });\n  const newState = {};\n  if (prepend) {\n    newState[arrKey] = [...newArr, ...state[arrKey]];\n  } else {\n    newState[arrKey] = [...state[arrKey], ...newArr];\n  }\n  return { ...state, ...newState };\n}\n\nexport function initEnhancer(\n  persist = true,\n  persistConfig: { paths?: StorageAdapter<unknown>; config?: string } = {},\n  disableDebugger = false,\n) {\n  const { paths, config } = persistConfig;\n  const composeEnhancers =\n    process.env.WEBPACK_MODE === 'development' && disableDebugger !== true\n      ? /* eslint-disable-next-line no-underscore-dangle, dot-notation */\n        window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__']\n        ? /* eslint-disable-next-line no-underscore-dangle, dot-notation */\n          window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__']({\n            trace: true,\n          })\n        : compose\n      : compose;\n\n  return persist\n    ? composeEnhancers(persistState(paths, config))\n    : composeEnhancers();\n}\n\nexport function areArraysShallowEqual(arr1: unknown[], arr2: unknown[]) {\n  // returns whether 2 arrays are shallow equal\n  // used in shouldComponentUpdate when denormalizing arrays\n  // where the array object is different every time, but the content might\n  // be the same\n  if (!arr1 || !arr2) {\n    return false;\n  }\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  const { length } = arr1;\n  for (let i = 0; i < length; i += 1) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function areObjectsEqual(\n  obj1: any,\n  obj2: any,\n  opts: {\n    ignoreUndefined?: boolean;\n    ignoreNull?: boolean;\n    ignoreFields?: string[];\n  } = { ignoreUndefined: false, ignoreNull: false, ignoreFields: [] },\n) {\n  let comp1 = obj1;\n  let comp2 = obj2;\n  if (opts.ignoreUndefined) {\n    comp1 = omitBy(comp1, isUndefined);\n    comp2 = omitBy(comp2, isUndefined);\n  }\n  if (opts.ignoreNull) {\n    comp1 = omitBy(comp1, isNull);\n    comp2 = omitBy(comp2, isNull);\n  }\n  if (opts.ignoreFields?.length) {\n    const ignoreFields = ensureIsArray(opts.ignoreFields);\n    return isEqualWith(comp1, comp2, (val1, val2) =>\n      isEqual(\n        ensureIsArray(val1).map(value => omit(value, ignoreFields)),\n        ensureIsArray(val2).map(value => omit(value, ignoreFields)),\n      ),\n    );\n  }\n  return isEqual(comp1, comp2);\n}\n"]},"metadata":{},"sourceType":"module"}