{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FeatureFlag, isFeatureEnabled, styled, t, useTheme } from '@superset-ui/core';\nimport { FilterBarOrientation } from 'src/dashboard/types';\nimport { saveFilterBarOrientation, saveCrossFiltersSetting } from 'src/dashboard/actions/dashboardInfo';\nimport Icons from 'src/components/Icons';\nimport DropdownSelectableIcon from 'src/components/DropdownSelectableIcon';\nimport Checkbox from 'src/components/Checkbox';\nimport { clearDataMaskState } from 'src/dataMask/actions';\nimport { useCrossFiltersScopingModal } from '../CrossFilters/ScopingModal/useCrossFiltersScopingModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledMenuLabel = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  .enable-cross-filters-text {\n    padding-left: ${(_ref) => {let { theme } = _ref;return `${theme.gridUnit * 2}px`;}};\n  }\n`;\nconst StyledCheckbox = styled(Checkbox)`\n  ${(_ref2) => {let { theme } = _ref2;return `\n  &,\n  svg {\n    display: inline-block;\n    width: ${theme.gridUnit * 4}px;\n    height: ${theme.gridUnit * 4}px;\n  }\n`;}}\n`;\nconst CROSS_FILTERS_MENU_KEY = 'cross-filters-menu-key';\nconst CROSS_FILTERS_SCOPING_MENU_KEY = 'cross-filters-scoping-menu-key';\nconst isOrientation = (o) => o === FilterBarOrientation.VERTICAL || o === FilterBarOrientation.HORIZONTAL;\nconst FilterBarSettings = () => {\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const isCrossFiltersEnabled = useSelector((_ref3) => {let { dashboardInfo } = _ref3;return dashboardInfo.crossFiltersEnabled;});\n  const filterBarOrientation = useSelector((_ref4) => {let { dashboardInfo } = _ref4;return dashboardInfo.filterBarOrientation;});\n  const [selectedFilterBarOrientation, setSelectedFilterBarOrientation] = useState(filterBarOrientation);\n  const isCrossFiltersFeatureEnabled = isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS);\n  const shouldEnableCrossFilters = isCrossFiltersEnabled && isCrossFiltersFeatureEnabled;\n  const [crossFiltersEnabled, setCrossFiltersEnabled] = useState(shouldEnableCrossFilters);\n  const canEdit = useSelector((_ref5) => {let { dashboardInfo } = _ref5;return dashboardInfo.dash_edit_perm;});\n  const canSetHorizontalFilterBar = canEdit && isFeatureEnabled(FeatureFlag.HORIZONTAL_FILTER_BAR);\n  const [openScopingModal, scopingModal] = useCrossFiltersScopingModal();\n  const updateCrossFiltersSetting = useCallback(async (isEnabled) => {\n    if (!isEnabled) {\n      dispatch(clearDataMaskState());\n    }\n    await dispatch(saveCrossFiltersSetting(isEnabled));\n  }, [dispatch]);\n  const toggleCrossFiltering = useCallback(() => {\n    setCrossFiltersEnabled(!crossFiltersEnabled);\n    updateCrossFiltersSetting(!crossFiltersEnabled);\n  }, [crossFiltersEnabled, updateCrossFiltersSetting]);\n  const toggleFilterBarOrientation = useCallback(async (orientation) => {\n    if (orientation === filterBarOrientation) {\n      return;\n    }\n    // set displayed selection in local state for immediate visual response after clicking\n    setSelectedFilterBarOrientation(orientation);\n    try {\n      // save selection in Redux and backend\n      await dispatch(saveFilterBarOrientation(orientation));\n    }\n    catch {\n      // revert local state in case of error when saving\n      setSelectedFilterBarOrientation(filterBarOrientation);\n    }\n  }, [dispatch, filterBarOrientation]);\n  const handleSelect = useCallback((selection) => {\n    const selectedKey = selection.key;\n    if (selectedKey === CROSS_FILTERS_MENU_KEY) {\n      toggleCrossFiltering();\n    } else\n    if (isOrientation(selectedKey)) {\n      toggleFilterBarOrientation(selectedKey);\n    } else\n    if (selectedKey === CROSS_FILTERS_SCOPING_MENU_KEY) {\n      openScopingModal();\n    }\n  }, [openScopingModal, toggleCrossFiltering, toggleFilterBarOrientation]);\n  const crossFiltersMenuItem = useMemo(() => ___EmotionJSX(StyledMenuLabel, null,\n  ___EmotionJSX(StyledCheckbox, { className: \"enable-cross-filters\", checked: crossFiltersEnabled, onChange: (checked) => setCrossFiltersEnabled(checked || false) }), ' ',\n  ___EmotionJSX(\"span\", { className: \"enable-cross-filters-text\" },\n  t('Enable cross-filtering'))),\n\n  [crossFiltersEnabled]);\n  const menuItems = useMemo(() => {\n    const items = [];\n    if (isCrossFiltersFeatureEnabled && canEdit) {\n      items.push({\n        key: CROSS_FILTERS_MENU_KEY,\n        label: crossFiltersMenuItem });\n\n      items.push({\n        key: CROSS_FILTERS_SCOPING_MENU_KEY,\n        label: t('Cross-filtering scoping'),\n        divider: canSetHorizontalFilterBar });\n\n    }\n    if (canSetHorizontalFilterBar) {\n      items.push({\n        key: 'placement',\n        label: t('Orientation of filter bar'),\n        children: [\n        {\n          key: FilterBarOrientation.VERTICAL,\n          label: t('Vertical (Left)') },\n\n        {\n          key: FilterBarOrientation.HORIZONTAL,\n          label: t('Horizontal (Top)') }] });\n\n\n\n    }\n    return items;\n  }, [\n  canEdit,\n  canSetHorizontalFilterBar,\n  crossFiltersMenuItem,\n  isCrossFiltersFeatureEnabled]);\n\n  if (!menuItems.length) {\n    return null;\n  }\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(DropdownSelectableIcon, { onSelect: handleSelect, icon: ___EmotionJSX(Icons.Gear, { name: \"gear\", iconColor: theme.colors.grayscale.base }), menuItems: menuItems, selectedKeys: [selectedFilterBarOrientation] }),\n  scopingModal);\n\n};\nexport default FilterBarSettings;","map":{"version":3,"mappings":"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","names":["React","useCallback","useMemo","useState","useDispatch","useSelector","FeatureFlag","isFeatureEnabled","styled","t","useTheme","FilterBarOrientation","saveFilterBarOrientation","saveCrossFiltersSetting","Icons","DropdownSelectableIcon","Checkbox","clearDataMaskState","useCrossFiltersScopingModal","StyledMenuLabel","span","theme","gridUnit","StyledCheckbox","CROSS_FILTERS_MENU_KEY","CROSS_FILTERS_SCOPING_MENU_KEY","isOrientation","o","VERTICAL","HORIZONTAL","FilterBarSettings","dispatch","isCrossFiltersEnabled","dashboardInfo","crossFiltersEnabled","filterBarOrientation","selectedFilterBarOrientation","setSelectedFilterBarOrientation","isCrossFiltersFeatureEnabled","DASHBOARD_CROSS_FILTERS","shouldEnableCrossFilters","setCrossFiltersEnabled","canEdit","dash_edit_perm","canSetHorizontalFilterBar","HORIZONTAL_FILTER_BAR","openScopingModal","scopingModal","updateCrossFiltersSetting","isEnabled","toggleCrossFiltering","toggleFilterBarOrientation","orientation","handleSelect","selection","selectedKey","key","crossFiltersMenuItem","checked","menuItems","items","push","label","divider","children","length","colors","grayscale","base"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterBarSettings/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  FeatureFlag,\n  isFeatureEnabled,\n  styled,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport { MenuProps } from 'src/components/Menu';\nimport { FilterBarOrientation, RootState } from 'src/dashboard/types';\nimport {\n  saveFilterBarOrientation,\n  saveCrossFiltersSetting,\n} from 'src/dashboard/actions/dashboardInfo';\nimport Icons from 'src/components/Icons';\nimport DropdownSelectableIcon, {\n  DropDownSelectableProps,\n} from 'src/components/DropdownSelectableIcon';\nimport Checkbox from 'src/components/Checkbox';\nimport { clearDataMaskState } from 'src/dataMask/actions';\nimport { useCrossFiltersScopingModal } from '../CrossFilters/ScopingModal/useCrossFiltersScopingModal';\n\ntype SelectedKey = FilterBarOrientation | string | number;\n\nconst StyledMenuLabel = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  .enable-cross-filters-text {\n    padding-left: ${({ theme }) => `${theme.gridUnit * 2}px`};\n  }\n`;\n\nconst StyledCheckbox = styled(Checkbox)`\n  ${({ theme }) => `\n  &,\n  svg {\n    display: inline-block;\n    width: ${theme.gridUnit * 4}px;\n    height: ${theme.gridUnit * 4}px;\n  }\n`}\n`;\n\nconst CROSS_FILTERS_MENU_KEY = 'cross-filters-menu-key';\nconst CROSS_FILTERS_SCOPING_MENU_KEY = 'cross-filters-scoping-menu-key';\n\nconst isOrientation = (o: SelectedKey): o is FilterBarOrientation =>\n  o === FilterBarOrientation.VERTICAL || o === FilterBarOrientation.HORIZONTAL;\n\nconst FilterBarSettings = () => {\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const isCrossFiltersEnabled = useSelector<RootState, boolean>(\n    ({ dashboardInfo }) => dashboardInfo.crossFiltersEnabled,\n  );\n  const filterBarOrientation = useSelector<RootState, FilterBarOrientation>(\n    ({ dashboardInfo }) => dashboardInfo.filterBarOrientation,\n  );\n  const [selectedFilterBarOrientation, setSelectedFilterBarOrientation] =\n    useState(filterBarOrientation);\n  const isCrossFiltersFeatureEnabled = isFeatureEnabled(\n    FeatureFlag.DASHBOARD_CROSS_FILTERS,\n  );\n  const shouldEnableCrossFilters =\n    isCrossFiltersEnabled && isCrossFiltersFeatureEnabled;\n  const [crossFiltersEnabled, setCrossFiltersEnabled] = useState<boolean>(\n    shouldEnableCrossFilters,\n  );\n  const canEdit = useSelector<RootState, boolean>(\n    ({ dashboardInfo }) => dashboardInfo.dash_edit_perm,\n  );\n  const canSetHorizontalFilterBar =\n    canEdit && isFeatureEnabled(FeatureFlag.HORIZONTAL_FILTER_BAR);\n\n  const [openScopingModal, scopingModal] = useCrossFiltersScopingModal();\n\n  const updateCrossFiltersSetting = useCallback(\n    async isEnabled => {\n      if (!isEnabled) {\n        dispatch(clearDataMaskState());\n      }\n      await dispatch(saveCrossFiltersSetting(isEnabled));\n    },\n    [dispatch],\n  );\n\n  const toggleCrossFiltering = useCallback(() => {\n    setCrossFiltersEnabled(!crossFiltersEnabled);\n    updateCrossFiltersSetting(!crossFiltersEnabled);\n  }, [crossFiltersEnabled, updateCrossFiltersSetting]);\n\n  const toggleFilterBarOrientation = useCallback(\n    async (orientation: FilterBarOrientation) => {\n      if (orientation === filterBarOrientation) {\n        return;\n      }\n      // set displayed selection in local state for immediate visual response after clicking\n      setSelectedFilterBarOrientation(orientation);\n      try {\n        // save selection in Redux and backend\n        await dispatch(saveFilterBarOrientation(orientation));\n      } catch {\n        // revert local state in case of error when saving\n        setSelectedFilterBarOrientation(filterBarOrientation);\n      }\n    },\n    [dispatch, filterBarOrientation],\n  );\n\n  const handleSelect = useCallback(\n    (\n      selection: Parameters<\n        Required<Pick<MenuProps, 'onSelect'>>['onSelect']\n      >[0],\n    ) => {\n      const selectedKey: SelectedKey = selection.key;\n      if (selectedKey === CROSS_FILTERS_MENU_KEY) {\n        toggleCrossFiltering();\n      } else if (isOrientation(selectedKey)) {\n        toggleFilterBarOrientation(selectedKey);\n      } else if (selectedKey === CROSS_FILTERS_SCOPING_MENU_KEY) {\n        openScopingModal();\n      }\n    },\n    [openScopingModal, toggleCrossFiltering, toggleFilterBarOrientation],\n  );\n\n  const crossFiltersMenuItem = useMemo(\n    () => (\n      <StyledMenuLabel>\n        <StyledCheckbox\n          className=\"enable-cross-filters\"\n          checked={crossFiltersEnabled}\n          onChange={checked => setCrossFiltersEnabled(checked || false)}\n        />{' '}\n        <span className=\"enable-cross-filters-text\">\n          {t('Enable cross-filtering')}\n        </span>\n      </StyledMenuLabel>\n    ),\n    [crossFiltersEnabled],\n  );\n\n  const menuItems = useMemo(() => {\n    const items: DropDownSelectableProps['menuItems'] = [];\n\n    if (isCrossFiltersFeatureEnabled && canEdit) {\n      items.push({\n        key: CROSS_FILTERS_MENU_KEY,\n        label: crossFiltersMenuItem,\n      });\n      items.push({\n        key: CROSS_FILTERS_SCOPING_MENU_KEY,\n        label: t('Cross-filtering scoping'),\n        divider: canSetHorizontalFilterBar,\n      });\n    }\n\n    if (canSetHorizontalFilterBar) {\n      items.push({\n        key: 'placement',\n        label: t('Orientation of filter bar'),\n        children: [\n          {\n            key: FilterBarOrientation.VERTICAL,\n            label: t('Vertical (Left)'),\n          },\n          {\n            key: FilterBarOrientation.HORIZONTAL,\n            label: t('Horizontal (Top)'),\n          },\n        ],\n      });\n    }\n    return items;\n  }, [\n    canEdit,\n    canSetHorizontalFilterBar,\n    crossFiltersMenuItem,\n    isCrossFiltersFeatureEnabled,\n  ]);\n\n  if (!menuItems.length) {\n    return null;\n  }\n\n  return (\n    <>\n      <DropdownSelectableIcon\n        onSelect={handleSelect}\n        icon={\n          <Icons.Gear\n            name=\"gear\"\n            iconColor={theme.colors.grayscale.base}\n            data-test=\"filterbar-orientation-icon\"\n          />\n        }\n        menuItems={menuItems}\n        selectedKeys={[selectedFilterBarOrientation]}\n      />\n      {scopingModal}\n    </>\n  );\n};\n\nexport default FilterBarSettings;\n"]},"metadata":{},"sourceType":"module"}