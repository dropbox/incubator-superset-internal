{"ast":null,"code":"import _kebabCase from \"lodash/kebabCase\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nimport { t } from '@superset-ui/core';\nimport { Tooltip } from './Tooltip';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport function InfoTooltipWithTrigger(_ref) {let { label, tooltip, bsStyle, onClick, icon = 'info-circle', className = 'text-muted', placement = 'right', iconsStyle = {} } = _ref;\n  const iconClass = `fa fa-${icon} ${className} ${bsStyle ? `text-${bsStyle}` : ''}`;\n  const iconEl = ___EmotionJSX(\"i\", { role: \"button\", \"aria-label\": t('Show info tooltip'), tabIndex: 0, className: iconClass, style: { cursor: onClick ? 'pointer' : undefined, ...iconsStyle }, onClick: onClick, onKeyPress: onClick && (\n    (event) => {\n      if (event.key === 'Enter' || event.key === ' ') {\n        onClick();\n      }\n    }) });\n  if (!tooltip) {\n    return iconEl;\n  }\n  return ___EmotionJSX(Tooltip, { id: `${_kebabCase(label)}-tooltip`, title: tooltip, placement: placement },\n  iconEl);\n\n}\nexport default InfoTooltipWithTrigger;","map":{"version":3,"mappings":"2CAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAqC,OAArC;;AAGA,SAASC,CAAT,QAAkB,mBAAlB;AACA,SAASC,OAAT,QAAsC,WAAtC,C;AAaA,OAAM,SAAUC,sBAAV,OASwB,KATS,EACrCC,KADqC,EAErCC,OAFqC,EAGrCC,OAHqC,EAIrCC,OAJqC,EAKrCC,IAAI,GAAG,aAL8B,EAMrCC,SAAS,GAAG,YANyB,EAOrCC,SAAS,GAAG,OAPyB,EAQrCC,UAAU,GAAG,EARwB,EAST;EAC5B,MAAMC,SAAS,GAAG,SAASJ,IAAI,IAAIC,SAAS,IAC1CH,OAAO,GAAG,QAAQA,OAAO,EAAlB,GAAuB,EAChC,EAFA;EAGA,MAAMO,MAAM,GACV,qBACE,IAAI,EAAC,QADP,EAEE,cAAYZ,CAAC,CAAC,mBAAD,CAFf,EAGE,QAAQ,EAAE,CAHZ,EAIE,SAAS,EAAEW,SAJb,EAKE,KAAK,EAAE,EAAEE,MAAM,EAAEP,OAAO,GAAG,SAAH,GAAeQ,SAAhC,EAA2C,GAAGJ,UAA9C,EALT,EAME,OAAO,EAAEJ,OANX,EAOE,UAAU,EACRA,OAAO;IACN,MAAK,KAAG;MACP,IAAIS,KAAK,CAACC,GAAN,KAAc,OAAd,IAAyBD,KAAK,CAACC,GAAN,KAAc,GAA3C,EAAgD;QAC9CV,OAAO;MACR;IACF,CALM,CARX,GADF;EAkBA,IAAI,CAACF,OAAL,EAAc;IACZ,OAAOQ,MAAP;EACD;EACD,OACE,cAAC,OAAD,IACE,EAAE,EAAE,GAAG,WAAUT,KAAV,CAAgB,UADzB,EAEE,KAAK,EAAEC,OAFT,EAGE,SAAS,EAAEK,SAHb;EAKGG,MALH,CADF;;AASD;AAED,eAAeV,sBAAf","names":["React","t","Tooltip","InfoTooltipWithTrigger","label","tooltip","bsStyle","onClick","icon","className","placement","iconsStyle","iconClass","iconEl","cursor","undefined","event","key"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/components/InfoTooltipWithTrigger.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { CSSProperties } from 'react';\nimport { kebabCase } from 'lodash';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\nimport { t } from '@superset-ui/core';\nimport { Tooltip, TooltipProps } from './Tooltip';\n\nexport interface InfoTooltipWithTriggerProps {\n  label?: string;\n  tooltip?: TooltipProps['title'];\n  icon?: string;\n  onClick?: () => void;\n  placement?: TooltipPlacement;\n  bsStyle?: string;\n  className?: string;\n  iconsStyle?: CSSProperties;\n}\n\nexport function InfoTooltipWithTrigger({\n  label,\n  tooltip,\n  bsStyle,\n  onClick,\n  icon = 'info-circle',\n  className = 'text-muted',\n  placement = 'right',\n  iconsStyle = {},\n}: InfoTooltipWithTriggerProps) {\n  const iconClass = `fa fa-${icon} ${className} ${\n    bsStyle ? `text-${bsStyle}` : ''\n  }`;\n  const iconEl = (\n    <i\n      role=\"button\"\n      aria-label={t('Show info tooltip')}\n      tabIndex={0}\n      className={iconClass}\n      style={{ cursor: onClick ? 'pointer' : undefined, ...iconsStyle }}\n      onClick={onClick}\n      onKeyPress={\n        onClick &&\n        (event => {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick();\n          }\n        })\n      }\n    />\n  );\n  if (!tooltip) {\n    return iconEl;\n  }\n  return (\n    <Tooltip\n      id={`${kebabCase(label)}-tooltip`}\n      title={tooltip}\n      placement={placement}\n    >\n      {iconEl}\n    </Tooltip>\n  );\n}\n\nexport default InfoTooltipWithTrigger;\n"]},"metadata":{},"sourceType":"module"}