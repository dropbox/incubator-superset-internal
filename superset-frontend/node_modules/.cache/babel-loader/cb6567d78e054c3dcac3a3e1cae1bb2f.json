{"ast":null,"code":"import { LabelPositionEnum } from '../types';\nexport var EchartsTreemapLabelType;\n(function (EchartsTreemapLabelType) {\n  EchartsTreemapLabelType[\"Key\"] = \"key\";\n  EchartsTreemapLabelType[\"Value\"] = \"value\";\n  EchartsTreemapLabelType[\"KeyValue\"] = \"key_value\";\n})(EchartsTreemapLabelType || (EchartsTreemapLabelType = {}));\nexport const DEFAULT_FORM_DATA = {\n  groupby: [],\n  labelType: EchartsTreemapLabelType.KeyValue,\n  labelPosition: LabelPositionEnum.InsideTopLeft,\n  numberFormat: 'SMART_NUMBER',\n  showLabels: true,\n  showUpperLabels: true,\n  dateFormat: 'smart_date' };","map":{"version":3,"mappings":"AA0BA,SAIEA,iBAJF,QAMO,UANP;AAqBA,WAAYC,uBAAZ;AAAA,WAAYA,uBAAZ,EAAmC;EACjCA;EACAA;EACAA;AACD,CAJD,EAAYA,uBAAuB,KAAvBA,uBAAuB,MAAnC;AAYA,OAAO,MAAMC,iBAAiB,GAAoC;EAChEC,OAAO,EAAE,EADuD;EAEhEC,SAAS,EAAEH,uBAAuB,CAACI,QAF6B;EAGhEC,aAAa,EAAEN,iBAAiB,CAACO,aAH+B;EAIhEC,YAAY,EAAE,cAJkD;EAKhEC,UAAU,EAAE,IALoD;EAMhEC,eAAe,EAAE,IAN+C;EAOhEC,UAAU,EAAE,YAPoD,EAA3D","names":["LabelPositionEnum","EchartsTreemapLabelType","DEFAULT_FORM_DATA","groupby","labelType","KeyValue","labelPosition","InsideTopLeft","numberFormat","showLabels","showUpperLabels","dateFormat"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/types.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ChartDataResponseResult,\n  ChartProps,\n  QueryFormColumn,\n  QueryFormData,\n  QueryFormMetric,\n} from '@superset-ui/core';\nimport { CallbackDataParams } from 'echarts/types/src/util/types';\nimport {\n  BaseTransformedProps,\n  ContextMenuTransformedProps,\n  CrossFilterTransformedProps,\n  LabelPositionEnum,\n  TreePathInfo,\n} from '../types';\n\nexport type EchartsTreemapFormData = QueryFormData & {\n  colorScheme?: string;\n  groupby: QueryFormColumn[];\n  metric?: QueryFormMetric;\n  labelType: EchartsTreemapLabelType;\n  labelPosition: LabelPositionEnum;\n  showLabels: boolean;\n  showUpperLabels: boolean;\n  numberFormat: string;\n  dateFormat: string;\n  dashboardId?: number;\n};\n\nexport enum EchartsTreemapLabelType {\n  Key = 'key',\n  Value = 'value',\n  KeyValue = 'key_value',\n}\n\nexport interface EchartsTreemapChartProps\n  extends ChartProps<EchartsTreemapFormData> {\n  formData: EchartsTreemapFormData;\n  queriesData: ChartDataResponseResult[];\n}\n\nexport const DEFAULT_FORM_DATA: Partial<EchartsTreemapFormData> = {\n  groupby: [],\n  labelType: EchartsTreemapLabelType.KeyValue,\n  labelPosition: LabelPositionEnum.InsideTopLeft,\n  numberFormat: 'SMART_NUMBER',\n  showLabels: true,\n  showUpperLabels: true,\n  dateFormat: 'smart_date',\n};\nexport interface TreemapSeriesCallbackDataParams extends CallbackDataParams {\n  treePathInfo?: TreePathInfo[];\n}\n\nexport type TreemapTransformedProps =\n  BaseTransformedProps<EchartsTreemapFormData> &\n    ContextMenuTransformedProps &\n    CrossFilterTransformedProps;\n"]},"metadata":{},"sourceType":"module"}