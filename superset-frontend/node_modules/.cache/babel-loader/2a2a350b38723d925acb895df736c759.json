{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import { css as _css } from \"@emotion/react\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { useTheme } from '@superset-ui/core';\nimport ControlHeader from '../ControlHeader';\nimport InfoTooltipWithTrigger from '../InfoTooltipWithTrigger';\nimport { ControlFormItemComponents } from './controls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport * from './controls';\n/**\n * Accept `false` or `0`, but not empty string.\n */\nfunction isEmptyValue(value) {\n  return value == null || value === '';\n}\nexport function ControlFormItem(_ref) {let { name, label, description, width, validators, required, onChange, value: initialValue, defaultValue, controlType, ...props } = _ref;\n  const { gridUnit } = useTheme();\n  const [hovered, setHovered] = useState(false);\n  const [value, setValue] = useState(initialValue === undefined ? defaultValue : initialValue);\n  const [validationErrors, setValidationErrors] = useState();\n  const handleChange = (e) => {\n    const fieldValue = e && typeof e === 'object' && 'target' in e ?\n    e.target.type === 'checkbox' || e.target.type === 'radio' ?\n    e.target.checked :\n    e.target.value :\n    e;\n    const errors = (validators == null ? void 0 : validators.\n    map((validator) => !required && isEmptyValue(fieldValue) ? false : validator(fieldValue)).\n    filter((x) => !!x)) || [];\n    setValidationErrors(errors);\n    setValue(fieldValue);\n    if (errors.length === 0 && onChange) {\n      onChange(fieldValue);\n    }\n  };\n  const Control = ControlFormItemComponents[controlType];\n  return ___EmotionJSX(\"div\", { css: /*#__PURE__*/_css({\n      margin: 2 * gridUnit,\n      width }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:ControlFormItem;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ib2dkYW5reXJ5bGl1ay9jb2RlL29wZW5zb3VyY2Uvc3VwZXJzZXQvc3VwZXJzZXQtZnJvbnRlbmQvcGFja2FnZXMvc3VwZXJzZXQtdWktY2hhcnQtY29udHJvbHMvc3JjL2NvbXBvbmVudHMvQ29udHJvbEZvcm0vQ29udHJvbEZvcm1JdGVtLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtRGlCIiwiZmlsZSI6Ii9Vc2Vycy9ib2dkYW5reXJ5bGl1ay9jb2RlL29wZW5zb3VyY2Uvc3VwZXJzZXQvc3VwZXJzZXQtZnJvbnRlbmQvcGFja2FnZXMvc3VwZXJzZXQtdWktY2hhcnQtY29udHJvbHMvc3JjL2NvbXBvbmVudHMvQ29udHJvbEZvcm0vQ29udHJvbEZvcm1JdGVtLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVRoZW1lIH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xuaW1wb3J0IENvbnRyb2xIZWFkZXIgZnJvbSAnLi4vQ29udHJvbEhlYWRlcic7XG5pbXBvcnQgSW5mb1Rvb2x0aXBXaXRoVHJpZ2dlciBmcm9tICcuLi9JbmZvVG9vbHRpcFdpdGhUcmlnZ2VyJztcbmltcG9ydCB7IENvbnRyb2xGb3JtSXRlbUNvbXBvbmVudHMgfSBmcm9tICcuL2NvbnRyb2xzJztcbmV4cG9ydCAqIGZyb20gJy4vY29udHJvbHMnO1xuLyoqXG4gKiBBY2NlcHQgYGZhbHNlYCBvciBgMGAsIGJ1dCBub3QgZW1wdHkgc3RyaW5nLlxuICovXG5mdW5jdGlvbiBpc0VtcHR5VmFsdWUodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgPT0gbnVsbCB8fCB2YWx1ZSA9PT0gJyc7XG59XG5leHBvcnQgZnVuY3Rpb24gQ29udHJvbEZvcm1JdGVtKHsgbmFtZSwgbGFiZWwsIGRlc2NyaXB0aW9uLCB3aWR0aCwgdmFsaWRhdG9ycywgcmVxdWlyZWQsIG9uQ2hhbmdlLCB2YWx1ZTogaW5pdGlhbFZhbHVlLCBkZWZhdWx0VmFsdWUsIGNvbnRyb2xUeXBlLCAuLi5wcm9wcyB9KSB7XG4gICAgY29uc3QgeyBncmlkVW5pdCB9ID0gdXNlVGhlbWUoKTtcbiAgICBjb25zdCBbaG92ZXJlZCwgc2V0SG92ZXJlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgW3ZhbHVlLCBzZXRWYWx1ZV0gPSB1c2VTdGF0ZShpbml0aWFsVmFsdWUgPT09IHVuZGVmaW5lZCA/IGRlZmF1bHRWYWx1ZSA6IGluaXRpYWxWYWx1ZSk7XG4gICAgY29uc3QgW3ZhbGlkYXRpb25FcnJvcnMsIHNldFZhbGlkYXRpb25FcnJvcnNdID0gdXNlU3RhdGUoKTtcbiAgICBjb25zdCBoYW5kbGVDaGFuZ2UgPSAoZSkgPT4ge1xuICAgICAgICBjb25zdCBmaWVsZFZhbHVlID0gZSAmJiB0eXBlb2YgZSA9PT0gJ29iamVjdCcgJiYgJ3RhcmdldCcgaW4gZVxuICAgICAgICAgICAgPyBlLnRhcmdldC50eXBlID09PSAnY2hlY2tib3gnIHx8IGUudGFyZ2V0LnR5cGUgPT09ICdyYWRpbydcbiAgICAgICAgICAgICAgICA/IGUudGFyZ2V0LmNoZWNrZWRcbiAgICAgICAgICAgICAgICA6IGUudGFyZ2V0LnZhbHVlXG4gICAgICAgICAgICA6IGU7XG4gICAgICAgIGNvbnN0IGVycm9ycyA9IHZhbGlkYXRvcnNcbiAgICAgICAgICAgID8ubWFwKHZhbGlkYXRvciA9PiAhcmVxdWlyZWQgJiYgaXNFbXB0eVZhbHVlKGZpZWxkVmFsdWUpID8gZmFsc2UgOiB2YWxpZGF0b3IoZmllbGRWYWx1ZSkpXG4gICAgICAgICAgICAuZmlsdGVyKHggPT4gISF4KSB8fCBbXTtcbiAgICAgICAgc2V0VmFsaWRhdGlvbkVycm9ycyhlcnJvcnMpO1xuICAgICAgICBzZXRWYWx1ZShmaWVsZFZhbHVlKTtcbiAgICAgICAgaWYgKGVycm9ycy5sZW5ndGggPT09IDAgJiYgb25DaGFuZ2UpIHtcbiAgICAgICAgICAgIG9uQ2hhbmdlKGZpZWxkVmFsdWUpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBjb25zdCBDb250cm9sID0gQ29udHJvbEZvcm1JdGVtQ29tcG9uZW50c1tjb250cm9sVHlwZV07XG4gICAgcmV0dXJuICg8ZGl2IGNzcz17e1xuICAgICAgICAgICAgbWFyZ2luOiAyICogZ3JpZFVuaXQsXG4gICAgICAgICAgICB3aWR0aCxcbiAgICAgICAgfX0gb25Nb3VzZUVudGVyPXsoKSA9PiBzZXRIb3ZlcmVkKHRydWUpfSBvbk1vdXNlTGVhdmU9eygpID0+IHNldEhvdmVyZWQoZmFsc2UpfT5cbiAgICAgIHtjb250cm9sVHlwZSA9PT0gJ0NoZWNrYm94JyA/ICg8Q29udHJvbEZvcm1JdGVtQ29tcG9uZW50cy5DaGVja2JveCBjaGVja2VkPXt2YWx1ZX0gb25DaGFuZ2U9e2hhbmRsZUNoYW5nZX0+XG4gICAgICAgICAge2xhYmVsfXsnICd9XG4gICAgICAgICAge2hvdmVyZWQgJiYgZGVzY3JpcHRpb24gJiYgKDxJbmZvVG9vbHRpcFdpdGhUcmlnZ2VyIHRvb2x0aXA9e2Rlc2NyaXB0aW9ufS8+KX1cbiAgICAgICAgPC9Db250cm9sRm9ybUl0ZW1Db21wb25lbnRzLkNoZWNrYm94PikgOiAoPD5cbiAgICAgICAgICB7bGFiZWwgJiYgKDxDb250cm9sSGVhZGVyIG5hbWU9e25hbWV9IGxhYmVsPXtsYWJlbH0gZGVzY3JpcHRpb249e2Rlc2NyaXB0aW9ufSB2YWxpZGF0aW9uRXJyb3JzPXt2YWxpZGF0aW9uRXJyb3JzfSBob3ZlcmVkPXtob3ZlcmVkfSByZXF1aXJlZD17cmVxdWlyZWR9Lz4pfVxuICAgICAgICAgIHsvKiBAdHMtaWdub3JlICovfVxuICAgICAgICAgIDxDb250cm9sIHsuLi5wcm9wc30gdmFsdWU9e3ZhbHVlfSBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfS8+XG4gICAgICAgIDwvPil9XG4gICAgPC9kaXY+KTtcbn1cbmV4cG9ydCBkZWZhdWx0IENvbnRyb2xGb3JtSXRlbTtcbiJdfQ== */\"),\n    onMouseEnter: () => setHovered(true), onMouseLeave: () => setHovered(false) },\n  controlType === 'Checkbox' ? ___EmotionJSX(ControlFormItemComponents.Checkbox, { checked: value, onChange: handleChange },\n  label, ' ',\n  hovered && description && ___EmotionJSX(InfoTooltipWithTrigger, { tooltip: description })) :\n  ___EmotionJSX(React.Fragment, null,\n  label && ___EmotionJSX(ControlHeader, { name: name, label: label, description: description, validationErrors: validationErrors, hovered: hovered, required: required }),\n\n  ___EmotionJSX(Control, _extends({}, props, { value: value, onChange: handleChange }))));\n\n\n}__signature__(ControlFormItem, \"useTheme{{ gridUnit }}\\nuseState{[hovered, setHovered](false)}\\nuseState{[value, setValue](initialValue === undefined ? defaultValue : initialValue)}\\nuseState{[validationErrors, setValidationErrors]}\", () => [useTheme]);const _default =\nControlFormItem;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(isEmptyValue, \"isEmptyValue\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/components/ControlForm/ControlFormItem.tsx\");reactHotLoader.register(ControlFormItem, \"ControlFormItem\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/components/ControlForm/ControlFormItem.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/components/ControlForm/ControlFormItem.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useState","useTheme","ControlHeader","InfoTooltipWithTrigger","ControlFormItemComponents","isEmptyValue","value","ControlFormItem","name","label","description","width","validators","required","onChange","initialValue","defaultValue","controlType","props","gridUnit","hovered","setHovered","setValue","undefined","validationErrors","setValidationErrors","handleChange","e","fieldValue","target","type","checked","errors","map","validator","filter","x","length","Control","margin"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/components/ControlForm/ControlFormItem.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, FunctionComponentElement, ChangeEvent } from 'react';\nimport { JsonValue, useTheme } from '@superset-ui/core';\nimport ControlHeader, { ControlHeaderProps } from '../ControlHeader';\nimport InfoTooltipWithTrigger from '../InfoTooltipWithTrigger';\nimport { ControlFormItemComponents, ControlFormItemSpec } from './controls';\n\nexport * from './controls';\n\nexport type ControlFormItemProps = ControlFormItemSpec & {\n  name: string;\n  onChange?: (fieldValue: JsonValue) => void;\n};\n\nexport type ControlFormItemNode =\n  FunctionComponentElement<ControlFormItemProps>;\n\n/**\n * Accept `false` or `0`, but not empty string.\n */\nfunction isEmptyValue(value?: JsonValue) {\n  return value == null || value === '';\n}\n\nexport function ControlFormItem({\n  name,\n  label,\n  description,\n  width,\n  validators,\n  required,\n  onChange,\n  value: initialValue,\n  defaultValue,\n  controlType,\n  ...props\n}: ControlFormItemProps) {\n  const { gridUnit } = useTheme();\n  const [hovered, setHovered] = useState(false);\n  const [value, setValue] = useState(\n    initialValue === undefined ? defaultValue : initialValue,\n  );\n  const [validationErrors, setValidationErrors] =\n    useState<ControlHeaderProps['validationErrors']>();\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement> | JsonValue) => {\n    const fieldValue =\n      e && typeof e === 'object' && 'target' in e\n        ? e.target.type === 'checkbox' || e.target.type === 'radio'\n          ? e.target.checked\n          : e.target.value\n        : e;\n    const errors =\n      (validators\n        ?.map(validator =>\n          !required && isEmptyValue(fieldValue) ? false : validator(fieldValue),\n        )\n        .filter(x => !!x) as string[]) || [];\n    setValidationErrors(errors);\n    setValue(fieldValue);\n    if (errors.length === 0 && onChange) {\n      onChange(fieldValue as JsonValue);\n    }\n  };\n\n  const Control = ControlFormItemComponents[controlType];\n\n  return (\n    <div\n      css={{\n        margin: 2 * gridUnit,\n        width,\n      }}\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n    >\n      {controlType === 'Checkbox' ? (\n        <ControlFormItemComponents.Checkbox\n          checked={value as boolean}\n          onChange={handleChange}\n        >\n          {label}{' '}\n          {hovered && description && (\n            <InfoTooltipWithTrigger tooltip={description} />\n          )}\n        </ControlFormItemComponents.Checkbox>\n      ) : (\n        <>\n          {label && (\n            <ControlHeader\n              name={name}\n              label={label}\n              description={description}\n              validationErrors={validationErrors}\n              hovered={hovered}\n              required={required}\n            />\n          )}\n          {/* @ts-ignore */}\n          <Control {...props} value={value} onChange={handleChange} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default ControlFormItem;\n"]},"metadata":{},"sourceType":"module"}