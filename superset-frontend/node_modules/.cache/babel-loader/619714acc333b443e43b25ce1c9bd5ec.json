{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, QueryMode, DTTM_ALIAS, GenericDataType, DatasourceType } from '@superset-ui/core';\nimport { SortSeriesType } from './types';\n// eslint-disable-next-line import/prefer-default-export\nexport const TIME_FILTER_LABELS = {\n  time_range: t('Time Range'),\n  granularity_sqla: t('Time Column'),\n  time_grain_sqla: t('Time Grain'),\n  granularity: t('Time Granularity') };\n\nexport const COLUMN_NAME_ALIASES = {\n  [DTTM_ALIAS]: t('Time') };\n\nexport const DATASET_TIME_COLUMN_OPTION = {\n  verbose_name: COLUMN_NAME_ALIASES[DTTM_ALIAS],\n  column_name: DTTM_ALIAS,\n  type_generic: GenericDataType.TEMPORAL,\n  description: t('A reference to the [Time] configuration, taking granularity into account') };\n\nexport const QUERY_TIME_COLUMN_OPTION = {\n  name: DTTM_ALIAS,\n  type: DatasourceType.Query,\n  is_dttm: false };\n\nexport const QueryModeLabel = {\n  [QueryMode.aggregate]: t('Aggregate'),\n  [QueryMode.raw]: t('Raw records') };\n\nexport const DEFAULT_SORT_SERIES_DATA = {\n  sort_series_type: SortSeriesType.Sum,\n  sort_series_ascending: false };\n\nexport const SORT_SERIES_CHOICES = [\n[SortSeriesType.Name, t('Category name')],\n[SortSeriesType.Sum, t('Total value')],\n[SortSeriesType.Min, t('Minimum value')],\n[SortSeriesType.Max, t('Maximum value')],\n[SortSeriesType.Avg, t('Average value')]];\n\nexport const DEFAULT_XAXIS_SORT_SERIES_DATA = {\n  sort_series_type: SortSeriesType.Name,\n  sort_series_ascending: true };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TIME_FILTER_LABELS, \"TIME_FILTER_LABELS\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/constants.ts\");reactHotLoader.register(COLUMN_NAME_ALIASES, \"COLUMN_NAME_ALIASES\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/constants.ts\");reactHotLoader.register(DATASET_TIME_COLUMN_OPTION, \"DATASET_TIME_COLUMN_OPTION\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/constants.ts\");reactHotLoader.register(QUERY_TIME_COLUMN_OPTION, \"QUERY_TIME_COLUMN_OPTION\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/constants.ts\");reactHotLoader.register(QueryModeLabel, \"QueryModeLabel\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/constants.ts\");reactHotLoader.register(DEFAULT_SORT_SERIES_DATA, \"DEFAULT_SORT_SERIES_DATA\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/constants.ts\");reactHotLoader.register(SORT_SERIES_CHOICES, \"SORT_SERIES_CHOICES\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/constants.ts\");reactHotLoader.register(DEFAULT_XAXIS_SORT_SERIES_DATA, \"DEFAULT_XAXIS_SORT_SERIES_DATA\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/constants.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,CADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,eAJF,EAMEC,cANF,QAOO,mBAPP;AAQA,SAAqCC,cAArC,QAA2D,SAA3D;AAEA;AACA,OAAO,MAAMC,kBAAkB,GAAG;EAChCC,UAAU,EAAEP,CAAC,CAAC,YAAD,CADmB;EAEhCQ,gBAAgB,EAAER,CAAC,CAAC,aAAD,CAFa;EAGhCS,eAAe,EAAET,CAAC,CAAC,YAAD,CAHc;EAIhCU,WAAW,EAAEV,CAAC,CAAC,kBAAD,CAJkB,EAA3B;;AAOP,OAAO,MAAMW,mBAAmB,GAA2B;EACzD,CAACT,UAAD,GAAcF,CAAC,CAAC,MAAD,CAD0C,EAApD;;AAIP,OAAO,MAAMY,0BAA0B,GAAe;EACpDC,YAAY,EAAEF,mBAAmB,CAACT,UAAD,CADmB;EAEpDY,WAAW,EAAEZ,UAFuC;EAGpDa,YAAY,EAAEZ,eAAe,CAACa,QAHsB;EAIpDC,WAAW,EAAEjB,CAAC,CACZ,0EADY,CAJsC,EAA/C;;AASP,OAAO,MAAMkB,wBAAwB,GAAgB;EACnDC,IAAI,EAAEjB,UAD6C;EAEnDkB,IAAI,EAAEhB,cAAc,CAACiB,KAF8B;EAGnDC,OAAO,EAAE,KAH0C,EAA9C;;AAMP,OAAO,MAAMC,cAAc,GAAG;EAC5B,CAACtB,SAAS,CAACuB,SAAX,GAAuBxB,CAAC,CAAC,WAAD,CADI;EAE5B,CAACC,SAAS,CAACwB,GAAX,GAAiBzB,CAAC,CAAC,aAAD,CAFU,EAAvB;;AAKP,OAAO,MAAM0B,wBAAwB,GAAmB;EACtDC,gBAAgB,EAAEtB,cAAc,CAACuB,GADqB;EAEtDC,qBAAqB,EAAE,KAF+B,EAAjD;;AAKP,OAAO,MAAMC,mBAAmB,GAAG;AACjC,CAACzB,cAAc,CAAC0B,IAAhB,EAAsB/B,CAAC,CAAC,eAAD,CAAvB,CADiC;AAEjC,CAACK,cAAc,CAACuB,GAAhB,EAAqB5B,CAAC,CAAC,aAAD,CAAtB,CAFiC;AAGjC,CAACK,cAAc,CAAC2B,GAAhB,EAAqBhC,CAAC,CAAC,eAAD,CAAtB,CAHiC;AAIjC,CAACK,cAAc,CAAC4B,GAAhB,EAAqBjC,CAAC,CAAC,eAAD,CAAtB,CAJiC;AAKjC,CAACK,cAAc,CAAC6B,GAAhB,EAAqBlC,CAAC,CAAC,eAAD,CAAtB,CALiC,CAA5B;;AAQP,OAAO,MAAMmC,8BAA8B,GAAmB;EAC5DR,gBAAgB,EAAEtB,cAAc,CAAC0B,IAD2B;EAE5DF,qBAAqB,EAAE,IAFqC,EAAvD,C,iLA5CMvB,kB,yKAOAK,mB,0KAIAC,0B,iLASAM,wB,+KAMAK,c,qKAKAG,wB,+KAKAI,mB,0KAQAK,8B","names":["t","QueryMode","DTTM_ALIAS","GenericDataType","DatasourceType","SortSeriesType","TIME_FILTER_LABELS","time_range","granularity_sqla","time_grain_sqla","granularity","COLUMN_NAME_ALIASES","DATASET_TIME_COLUMN_OPTION","verbose_name","column_name","type_generic","TEMPORAL","description","QUERY_TIME_COLUMN_OPTION","name","type","Query","is_dttm","QueryModeLabel","aggregate","raw","DEFAULT_SORT_SERIES_DATA","sort_series_type","Sum","sort_series_ascending","SORT_SERIES_CHOICES","Name","Min","Max","Avg","DEFAULT_XAXIS_SORT_SERIES_DATA"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/constants.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  t,\n  QueryMode,\n  DTTM_ALIAS,\n  GenericDataType,\n  QueryColumn,\n  DatasourceType,\n} from '@superset-ui/core';\nimport { ColumnMeta, SortSeriesData, SortSeriesType } from './types';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const TIME_FILTER_LABELS = {\n  time_range: t('Time Range'),\n  granularity_sqla: t('Time Column'),\n  time_grain_sqla: t('Time Grain'),\n  granularity: t('Time Granularity'),\n};\n\nexport const COLUMN_NAME_ALIASES: Record<string, string> = {\n  [DTTM_ALIAS]: t('Time'),\n};\n\nexport const DATASET_TIME_COLUMN_OPTION: ColumnMeta = {\n  verbose_name: COLUMN_NAME_ALIASES[DTTM_ALIAS],\n  column_name: DTTM_ALIAS,\n  type_generic: GenericDataType.TEMPORAL,\n  description: t(\n    'A reference to the [Time] configuration, taking granularity into account',\n  ),\n};\n\nexport const QUERY_TIME_COLUMN_OPTION: QueryColumn = {\n  name: DTTM_ALIAS,\n  type: DatasourceType.Query,\n  is_dttm: false,\n};\n\nexport const QueryModeLabel = {\n  [QueryMode.aggregate]: t('Aggregate'),\n  [QueryMode.raw]: t('Raw records'),\n};\n\nexport const DEFAULT_SORT_SERIES_DATA: SortSeriesData = {\n  sort_series_type: SortSeriesType.Sum,\n  sort_series_ascending: false,\n};\n\nexport const SORT_SERIES_CHOICES = [\n  [SortSeriesType.Name, t('Category name')],\n  [SortSeriesType.Sum, t('Total value')],\n  [SortSeriesType.Min, t('Minimum value')],\n  [SortSeriesType.Max, t('Maximum value')],\n  [SortSeriesType.Avg, t('Average value')],\n];\n\nexport const DEFAULT_XAXIS_SORT_SERIES_DATA: SortSeriesData = {\n  sort_series_type: SortSeriesType.Name,\n  sort_series_ascending: true,\n};\n"]},"metadata":{},"sourceType":"module"}