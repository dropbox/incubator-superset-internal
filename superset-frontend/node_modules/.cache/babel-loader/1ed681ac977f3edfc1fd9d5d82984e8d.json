{"ast":null,"code":"import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useTheme } from '@superset-ui/core';\nimport { useSelector } from 'react-redux';\nimport { getChartIdsInFilterBoxScope } from 'src/dashboard/util/activeDashboardFilters';\nconst selectFocusedFilterScope = (dashboardState, dashboardFilters) => {\n  if (!dashboardState.focusedFilterField)\n  return null;\n  const { chartId, column } = dashboardState.focusedFilterField;\n  return {\n    chartId,\n    scope: dashboardFilters[chartId].scopes[column] };\n\n};\nconst useFilterFocusHighlightStyles = (chartId) => {var _context;\n  const theme = useTheme();\n  const nativeFilters = useSelector((state) => state.nativeFilters);\n  const dashboardState = useSelector((state) => state.dashboardState);\n  const dashboardFilters = useSelector((state) => state.dashboardFilters);\n  const focusedFilterScope = selectFocusedFilterScope(dashboardState, dashboardFilters);\n  const highlightedFilterId = (nativeFilters == null ? void 0 : nativeFilters.focusedFilterId) || (nativeFilters == null ? void 0 : nativeFilters.hoveredFilterId);\n  if (!(focusedFilterScope || highlightedFilterId)) {\n    return {};\n  }\n  // we use local styles here instead of a conditionally-applied class,\n  // because adding any conditional class to this container\n  // causes performance issues in Chrome.\n  // default to the \"de-emphasized\" state\n  const unfocusedChartStyles = { opacity: 0.3, pointerEvents: 'none' };\n  const focusedChartStyles = {\n    borderColor: theme.colors.primary.light2,\n    opacity: 1,\n    boxShadow: `0px 0px ${theme.gridUnit * 2}px ${theme.colors.primary.base}`,\n    pointerEvents: 'auto' };\n\n  if (highlightedFilterId) {var _nativeFilters$filter, _nativeFilters$filter2;\n    if ((_nativeFilters$filter = nativeFilters.filters[highlightedFilterId]) != null && (_nativeFilters$filter2 = _nativeFilters$filter.chartsInScope) != null && _includesInstanceProperty(_nativeFilters$filter2).call(_nativeFilters$filter2, chartId)) {\n      return focusedChartStyles;\n    }\n  } else\n  if (chartId === (focusedFilterScope == null ? void 0 : focusedFilterScope.chartId) ||\n  _includesInstanceProperty(_context = getChartIdsInFilterBoxScope({\n    filterScope: focusedFilterScope == null ? void 0 : focusedFilterScope.scope })).call(_context,\n  chartId)) {\n    return focusedChartStyles;\n  }\n  // inline styles are used here due to a performance issue when adding/changing a class, which causes a reflow\n  return unfocusedChartStyles;\n};\nexport default useFilterFocusHighlightStyles;","map":{"version":3,"mappings":"iGAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,QAAT,QAAyB,mBAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,2BAAT,QAA4C,2CAA5C;AAGA,MAAMC,wBAAwB,GAAG,CAC/BC,cAD+B,EAE/BC,gBAF+B,KAG7B;EACF,IAAI,CAACD,cAAc,CAACE,kBAApB;EAAwC,OAAO,IAAP;EACxC,MAAM,EAAEC,OAAF,EAAWC,MAAX,KAAsBJ,cAAc,CAACE,kBAA3C;EACA,OAAO;IACLC,OADK;IAELE,KAAK,EAAEJ,gBAAgB,CAACE,OAAD,CAAhB,CAA0BG,MAA1B,CAAiCF,MAAjC,CAFF,EAAP;;AAID,CAVD;AAYA,MAAMG,6BAA6B,GAAG,CAACJ,OAAD,KAAoB;EACxD,MAAMK,KAAK,GAAGZ,QAAQ,EAAtB;EAEA,MAAMa,aAAa,GAAGZ,WAAW,CAAC,CAACa,KAAD,KAAsBA,KAAK,CAACD,aAA7B,CAAjC;EACA,MAAMT,cAAc,GAAGH,WAAW,CAChC,CAACa,KAAD,KAAsBA,KAAK,CAACV,cADI,CAAlC;EAGA,MAAMC,gBAAgB,GAAGJ,WAAW,CAClC,CAACa,KAAD,KAAsBA,KAAK,CAACT,gBADM,CAApC;EAGA,MAAMU,kBAAkB,GAAGZ,wBAAwB,CACjDC,cADiD,EAEjDC,gBAFiD,CAAnD;EAKA,MAAMW,mBAAmB,GACvB,cAAa,QAAb,yBAAa,CAAEC,eAAf,MAAkCJ,aAAlC,oBAAkCA,aAAa,CAAEK,eAAjD,CADF;EAEA,IAAI,EAAEH,kBAAkB,IAAIC,mBAAxB,CAAJ,EAAkD;IAChD,OAAO,EAAP;EACD;EAED;EACA;EACA;EAEA;EACA,MAAMG,oBAAoB,GAAG,EAAEC,OAAO,EAAE,GAAX,EAAgBC,aAAa,EAAE,MAA/B,EAA7B;EACA,MAAMC,kBAAkB,GAAG;IACzBC,WAAW,EAAEX,KAAK,CAACY,MAAN,CAAaC,OAAb,CAAqBC,MADT;IAEzBN,OAAO,EAAE,CAFgB;IAGzBO,SAAS,EAAE,WAAWf,KAAK,CAACgB,QAAN,GAAiB,CAAC,MAAMhB,KAAK,CAACY,MAAN,CAAaC,OAAb,CAAqBI,IAAI,EAH9C;IAIzBR,aAAa,EAAE,MAJU,EAA3B;;EAOA,IAAIL,mBAAJ,EAAyB;IACvB,6BACEH,aAAa,CAACiB,OAAd,CAAsBd,mBAAtB,CADF,uCACE,sBAA4Ce,aAD9C,aACE,+EACExB,OADF,CADF,EAIE;MACA,OAAOe,kBAAP;IACD;EACF,CARD;EAQO,IACLf,OAAO,MAAKQ,kBAAL,oBAAKA,kBAAkB,CAAER,OAAzB,CAAP;EACA,gEAA2B,CAAC;IAC1ByB,WAAW,EAAEjB,kBAAF,oBAAEA,kBAAkB,CAAEN,KADP,EAAD,CAA3B;EAEYF,OAFZ,CAFK,EAKL;IACA,OAAOe,kBAAP;EACD;EAED;EACA,OAAOH,oBAAP;AACD,CArDD;AAuDA,eAAeR,6BAAf","names":["useTheme","useSelector","getChartIdsInFilterBoxScope","selectFocusedFilterScope","dashboardState","dashboardFilters","focusedFilterField","chartId","column","scope","scopes","useFilterFocusHighlightStyles","theme","nativeFilters","state","focusedFilterScope","highlightedFilterId","focusedFilterId","hoveredFilterId","unfocusedChartStyles","opacity","pointerEvents","focusedChartStyles","borderColor","colors","primary","light2","boxShadow","gridUnit","base","filters","chartsInScope","filterScope"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/util/useFilterFocusHighlightStyles.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useTheme } from '@superset-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport { getChartIdsInFilterBoxScope } from 'src/dashboard/util/activeDashboardFilters';\nimport { DashboardState, RootState } from 'src/dashboard/types';\n\nconst selectFocusedFilterScope = (\n  dashboardState: DashboardState,\n  dashboardFilters: any,\n) => {\n  if (!dashboardState.focusedFilterField) return null;\n  const { chartId, column } = dashboardState.focusedFilterField;\n  return {\n    chartId,\n    scope: dashboardFilters[chartId].scopes[column],\n  };\n};\n\nconst useFilterFocusHighlightStyles = (chartId: number) => {\n  const theme = useTheme();\n\n  const nativeFilters = useSelector((state: RootState) => state.nativeFilters);\n  const dashboardState = useSelector(\n    (state: RootState) => state.dashboardState,\n  );\n  const dashboardFilters = useSelector(\n    (state: RootState) => state.dashboardFilters,\n  );\n  const focusedFilterScope = selectFocusedFilterScope(\n    dashboardState,\n    dashboardFilters,\n  );\n\n  const highlightedFilterId =\n    nativeFilters?.focusedFilterId || nativeFilters?.hoveredFilterId;\n  if (!(focusedFilterScope || highlightedFilterId)) {\n    return {};\n  }\n\n  // we use local styles here instead of a conditionally-applied class,\n  // because adding any conditional class to this container\n  // causes performance issues in Chrome.\n\n  // default to the \"de-emphasized\" state\n  const unfocusedChartStyles = { opacity: 0.3, pointerEvents: 'none' };\n  const focusedChartStyles = {\n    borderColor: theme.colors.primary.light2,\n    opacity: 1,\n    boxShadow: `0px 0px ${theme.gridUnit * 2}px ${theme.colors.primary.base}`,\n    pointerEvents: 'auto',\n  };\n\n  if (highlightedFilterId) {\n    if (\n      nativeFilters.filters[highlightedFilterId]?.chartsInScope?.includes(\n        chartId,\n      )\n    ) {\n      return focusedChartStyles;\n    }\n  } else if (\n    chartId === focusedFilterScope?.chartId ||\n    getChartIdsInFilterBoxScope({\n      filterScope: focusedFilterScope?.scope,\n    }).includes(chartId)\n  ) {\n    return focusedChartStyles;\n  }\n\n  // inline styles are used here due to a performance issue when adding/changing a class, which causes a reflow\n  return unfocusedChartStyles;\n};\n\nexport default useFilterFocusHighlightStyles;\n"]},"metadata":{},"sourceType":"module"}