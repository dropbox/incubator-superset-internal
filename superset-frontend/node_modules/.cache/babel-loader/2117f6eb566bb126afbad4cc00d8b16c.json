{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled } from '@superset-ui/core';\nimport React, { createRef } from 'react';\nimport { HandlebarsViewer } from './components/Handlebars/HandlebarsViewer';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Styles = styled.div`\n  padding: ${(_ref) => {let { theme } = _ref;return theme.gridUnit * 4;}}px;\n  border-radius: ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit * 2;}}px;\n  height: ${(_ref3) => {let { height } = _ref3;return height;}}px;\n  width: ${(_ref4) => {let { width } = _ref4;return width;}}px;\n  overflow: auto;\n`;\nexport default function Handlebars(props) {\n  const { data, height, width, formData } = props;\n  const styleTemplateSource = formData.styleTemplate ?\n  `<style>${formData.styleTemplate}</style>` :\n  '';\n  const handlebarTemplateSource = formData.handlebarsTemplate ?\n  formData.handlebarsTemplate :\n  '{{data}}';\n  const templateSource = `${handlebarTemplateSource}\\n${styleTemplateSource} `;\n  const rootElem = /*#__PURE__*/createRef();\n  return ___EmotionJSX(Styles, { ref: rootElem, height: height, width: width },\n  ___EmotionJSX(HandlebarsViewer, { data: { data }, templateSource: templateSource }));\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Styles, \"Styles\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-handlebars/src/Handlebars.tsx\");reactHotLoader.register(Handlebars, \"Handlebars\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-handlebars/src/Handlebars.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,MAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,QAAiC,0CAAjC,C;AAGA,MAAMC,MAAM,GAAGJ,MAAM,CAACK,GAA0B;aACnC,eAAC,EAAEC,KAAF,EAAD,eAAeA,KAAK,CAACC,QAAN,GAAiB,CAAhC,EAAiC;mBAC3B,gBAAC,EAAED,KAAF,EAAD,gBAAeA,KAAK,CAACC,QAAN,GAAiB,CAAhC,EAAiC;YACxC,gBAAC,EAAEC,MAAF,EAAD,gBAAgBA,MAAhB,EAAsB;WACvB,gBAAC,EAAEC,KAAF,EAAD,gBAAeA,KAAf,EAAoB;;CAJ/B;AAQA,eAAc,SAAUC,UAAV,CAAqBC,KAArB,EAA2C;EACvD,MAAM,EAAEC,IAAF,EAAQJ,MAAR,EAAgBC,KAAhB,EAAuBI,QAAvB,KAAoCF,KAA1C;EACA,MAAMG,mBAAmB,GAAGD,QAAQ,CAACE,aAAT;EACxB,UAAUF,QAAQ,CAACE,aAAa,UADR;EAExB,EAFJ;EAGA,MAAMC,uBAAuB,GAAGH,QAAQ,CAACI,kBAAT;EAC5BJ,QAAQ,CAACI,kBADmB;EAE5B,UAFJ;EAGA,MAAMC,cAAc,GAAG,GAAGF,uBAAuB,KAAKF,mBAAmB,GAAzE;EAEA,MAAMK,QAAQ,gBAAGjB,SAAS,EAA1B;EAEA,OACE,cAAC,MAAD,IAAQ,GAAG,EAAEiB,QAAb,EAAuB,MAAM,EAAEX,MAA/B,EAAuC,KAAK,EAAEC,KAA9C;EACE,cAAC,gBAAD,IAAkB,IAAI,EAAE,EAAEG,IAAF,EAAxB,EAAkC,cAAc,EAAEM,cAAlD,GADF,CADF;;AAKD,C,iLAzBKd,M,2JAQkBM,U","names":["styled","React","createRef","HandlebarsViewer","Styles","div","theme","gridUnit","height","width","Handlebars","props","data","formData","styleTemplateSource","styleTemplate","handlebarTemplateSource","handlebarsTemplate","templateSource","rootElem"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-handlebars/src/Handlebars.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled } from '@superset-ui/core';\nimport React, { createRef } from 'react';\nimport { HandlebarsViewer } from './components/Handlebars/HandlebarsViewer';\nimport { HandlebarsProps, HandlebarsStylesProps } from './types';\n\nconst Styles = styled.div<HandlebarsStylesProps>`\n  padding: ${({ theme }) => theme.gridUnit * 4}px;\n  border-radius: ${({ theme }) => theme.gridUnit * 2}px;\n  height: ${({ height }) => height}px;\n  width: ${({ width }) => width}px;\n  overflow: auto;\n`;\n\nexport default function Handlebars(props: HandlebarsProps) {\n  const { data, height, width, formData } = props;\n  const styleTemplateSource = formData.styleTemplate\n    ? `<style>${formData.styleTemplate}</style>`\n    : '';\n  const handlebarTemplateSource = formData.handlebarsTemplate\n    ? formData.handlebarsTemplate\n    : '{{data}}';\n  const templateSource = `${handlebarTemplateSource}\\n${styleTemplateSource} `;\n\n  const rootElem = createRef<HTMLDivElement>();\n\n  return (\n    <Styles ref={rootElem} height={height} width={width}>\n      <HandlebarsViewer data={{ data }} templateSource={templateSource} />\n    </Styles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}