{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { ensureIsArray, getColumnLabel, getMetricLabel, getXAxisLabel } from '@superset-ui/core';\nimport { extractExtraMetrics } from './utils';\nexport const pivotOperator = (formData, queryObject) => {\n  const metricLabels = [\n  ...ensureIsArray(queryObject.metrics),\n  ...extractExtraMetrics(formData)].\n  map(getMetricLabel);\n  const xAxisLabel = getXAxisLabel(formData);\n  const columns = queryObject.series_columns || queryObject.columns;\n  if (xAxisLabel && metricLabels.length) {\n    return {\n      operation: 'pivot',\n      options: {\n        index: [xAxisLabel],\n        columns: ensureIsArray(columns).map(getColumnLabel),\n        // Create 'dummy' mean aggregates to assign cell values in pivot table\n        // use the 'mean' aggregates to avoid drop NaN. PR: https://github.com/apache-superset/superset-ui/pull/1231\n        aggregates: Object.fromEntries(metricLabels.map((metric) => [metric, { operator: 'mean' }])),\n        drop_missing_columns: !(formData != null && formData.show_empty_columns) } };\n\n\n  }\n  return undefined;\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,aADF,EAEEC,cAFF,EAGEC,cAHF,EAKEC,aALF,QAMO,mBANP;AAQA,SAASC,mBAAT,QAAoC,SAApC;AAEA,OAAO,MAAMC,aAAa,GAA+C,CACvEC,QADuE,EAEvEC,WAFuE,KAGrE;EACF,MAAMC,YAAY,GAAG;EACnB,GAAGR,aAAa,CAACO,WAAW,CAACE,OAAb,CADG;EAEnB,GAAGL,mBAAmB,CAACE,QAAD,CAFH;EAGnBI,GAHmB,CAGfR,cAHe,CAArB;EAIA,MAAMS,UAAU,GAAGR,aAAa,CAACG,QAAD,CAAhC;EACA,MAAMM,OAAO,GAAGL,WAAW,CAACM,cAAZ,IAA8BN,WAAW,CAACK,OAA1D;EAEA,IAAID,UAAU,IAAIH,YAAY,CAACM,MAA/B,EAAuC;IACrC,OAAO;MACLC,SAAS,EAAE,OADN;MAELC,OAAO,EAAE;QACPC,KAAK,EAAE,CAACN,UAAD,CADA;QAEPC,OAAO,EAAEZ,aAAa,CAACY,OAAD,CAAb,CAAuBF,GAAvB,CAA2BT,cAA3B,CAFF;QAGP;QACA;QACAiB,UAAU,EAAEC,MAAM,CAACC,WAAP,CACVZ,YAAY,CAACE,GAAb,CAAiB,OAAM,KAAI,CAACW,MAAD,EAAS,EAAEC,QAAQ,EAAE,MAAZ,EAAT,CAA3B,CADU,CALL;QAQPC,oBAAoB,EAAE,EAACjB,QAAD,YAACA,QAAQ,CAAEkB,kBAAX,CARf,EAFJ,EAAP;;;EAaD;EAED,OAAOC,SAAP;AACD,CA5BM","names":["ensureIsArray","getColumnLabel","getMetricLabel","getXAxisLabel","extractExtraMetrics","pivotOperator","formData","queryObject","metricLabels","metrics","map","xAxisLabel","columns","series_columns","length","operation","options","index","aggregates","Object","fromEntries","metric","operator","drop_missing_columns","show_empty_columns","undefined"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/packages/superset-ui-chart-controls/src/operators/pivotOperator.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  ensureIsArray,\n  getColumnLabel,\n  getMetricLabel,\n  PostProcessingPivot,\n  getXAxisLabel,\n} from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\nimport { extractExtraMetrics } from './utils';\n\nexport const pivotOperator: PostProcessingFactory<PostProcessingPivot> = (\n  formData,\n  queryObject,\n) => {\n  const metricLabels = [\n    ...ensureIsArray(queryObject.metrics),\n    ...extractExtraMetrics(formData),\n  ].map(getMetricLabel);\n  const xAxisLabel = getXAxisLabel(formData);\n  const columns = queryObject.series_columns || queryObject.columns;\n\n  if (xAxisLabel && metricLabels.length) {\n    return {\n      operation: 'pivot',\n      options: {\n        index: [xAxisLabel],\n        columns: ensureIsArray(columns).map(getColumnLabel),\n        // Create 'dummy' mean aggregates to assign cell values in pivot table\n        // use the 'mean' aggregates to avoid drop NaN. PR: https://github.com/apache-superset/superset-ui/pull/1231\n        aggregates: Object.fromEntries(\n          metricLabels.map(metric => [metric, { operator: 'mean' }]),\n        ),\n        drop_missing_columns: !formData?.show_empty_columns,\n      },\n    };\n  }\n\n  return undefined;\n};\n"]},"metadata":{},"sourceType":"module"}