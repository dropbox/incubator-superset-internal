{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport ValidatedInput from 'src/components/Form/LabeledErrorBoundInput';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst FIELD_TEXT_MAP = {\n  account: {\n    helpText: t('Copy the account name of that database you are trying to connect to.'),\n    placeholder: t('e.g. world_population') },\n\n  warehouse: {\n    placeholder: t('e.g. compute_wh'),\n    className: 'form-group-w-50' },\n\n  role: {\n    placeholder: t('e.g. AccountAdmin'),\n    className: 'form-group-w-50' } };\n\n\nexport const validatedInputField = (_ref) => {var _db$parameters;let { required, changeMethods, getValidation, validationErrors, db, field } = _ref;return ___EmotionJSX(ValidatedInput, { id: field, name: field, required: required, value: db == null ? void 0 : (_db$parameters = db.parameters) == null ? void 0 : _db$parameters[field], validationMethods: { onBlur: getValidation }, errorMessage: validationErrors == null ? void 0 : validationErrors[field], placeholder: FIELD_TEXT_MAP[field].placeholder, helpText: FIELD_TEXT_MAP[field].helpText, label: field, onChange: changeMethods.onParametersChange, className: FIELD_TEXT_MAP[field].className || field });};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,CAAT,QAAkB,mBAAlB;AACA,OAAOC,cAAP,MAA2B,4CAA3B,C;AAGA,MAAMC,cAAc,GAAG;EACrBC,OAAO,EAAE;IACPC,QAAQ,EAAEJ,CAAC,CACT,sEADS,CADJ;IAIPK,WAAW,EAAEL,CAAC,CAAC,uBAAD,CAJP,EADY;;EAOrBM,SAAS,EAAE;IACTD,WAAW,EAAEL,CAAC,CAAC,iBAAD,CADL;IAETO,SAAS,EAAE,iBAFF,EAPU;;EAWrBC,IAAI,EAAE;IACJH,WAAW,EAAEL,CAAC,CAAC,mBAAD,CADV;IAEJO,SAAS,EAAE,iBAFP,EAXe,EAAvB;;;AAiBA,OAAO,MAAME,mBAAmB,GAAG,kCAAC,EAClCC,QADkC,EAElCC,aAFkC,EAGlCC,aAHkC,EAIlCC,gBAJkC,EAKlCC,EALkC,EAMlCC,KANkC,EAAD,eAQjC,cAAC,cAAD,IACE,EAAE,EAAEA,KADN,EAEE,IAAI,EAAEA,KAFR,EAGE,QAAQ,EAAEL,QAHZ,EAIE,KAAK,EAAEI,EAAF,sCAAEA,EAAE,CAAEE,UAAN,qBAAE,eAAiBD,KAAjB,CAJT,EAKE,iBAAiB,EAAE,EAAEE,MAAM,EAAEL,aAAV,EALrB,EAME,YAAY,EAAEC,gBAAF,oBAAEA,gBAAgB,CAAGE,KAAH,CANhC,EAOE,WAAW,EAAEb,cAAc,CAACa,KAAD,CAAd,CAAsBV,WAPrC,EAQE,QAAQ,EAAEH,cAAc,CAACa,KAAD,CAAd,CAAsBX,QARlC,EASE,KAAK,EAAEW,KATT,EAUE,QAAQ,EAAEJ,aAAa,CAACO,kBAV1B,EAWE,SAAS,EAAEhB,cAAc,CAACa,KAAD,CAAd,CAAsBR,SAAtB,IAAmCQ,KAXhD,GARiC,EAA5B","names":["React","t","ValidatedInput","FIELD_TEXT_MAP","account","helpText","placeholder","warehouse","className","role","validatedInputField","required","changeMethods","getValidation","validationErrors","db","field","parameters","onBlur","onParametersChange"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/databases/DatabaseModal/DatabaseConnectionForm/ValidatedInputField.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport ValidatedInput from 'src/components/Form/LabeledErrorBoundInput';\nimport { FieldPropTypes } from '.';\n\nconst FIELD_TEXT_MAP = {\n  account: {\n    helpText: t(\n      'Copy the account name of that database you are trying to connect to.',\n    ),\n    placeholder: t('e.g. world_population'),\n  },\n  warehouse: {\n    placeholder: t('e.g. compute_wh'),\n    className: 'form-group-w-50',\n  },\n  role: {\n    placeholder: t('e.g. AccountAdmin'),\n    className: 'form-group-w-50',\n  },\n};\n\nexport const validatedInputField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n  field,\n}: FieldPropTypes) => (\n  <ValidatedInput\n    id={field}\n    name={field}\n    required={required}\n    value={db?.parameters?.[field]}\n    validationMethods={{ onBlur: getValidation }}\n    errorMessage={validationErrors?.[field]}\n    placeholder={FIELD_TEXT_MAP[field].placeholder}\n    helpText={FIELD_TEXT_MAP[field].helpText}\n    label={field}\n    onChange={changeMethods.onParametersChange}\n    className={FIELD_TEXT_MAP[field].className || field}\n  />\n);\n"]},"metadata":{},"sourceType":"module"}