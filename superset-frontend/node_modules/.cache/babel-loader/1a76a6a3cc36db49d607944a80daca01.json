{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport { testWithId } from 'src/utils/testUtils';\nimport { useSelector } from 'react-redux';\nexport const getOnlyExtraFormData = (data) => Object.values(data).reduce((prev, next) => ({ ...prev, [next.id]: next.extraFormData }), {});\nexport const checkIsMissingRequiredValue = (filter, filterState) => {var _filter$controlValues;\n  const value = filterState == null ? void 0 : filterState.value;\n  // TODO: this property should be unhardcoded\n  return ((_filter$controlValues = filter.controlValues) == null ? void 0 : _filter$controlValues.enableEmptyFilter) && (\n  value === null || value === undefined);\n};\nexport const checkIsApplyDisabled = (dataMaskSelected, dataMaskApplied, filters) => {\n  const dataSelectedValues = Object.values(dataMaskSelected);\n  const dataAppliedValues = Object.values(dataMaskApplied);\n  return areObjectsEqual(getOnlyExtraFormData(dataMaskSelected), getOnlyExtraFormData(dataMaskApplied), { ignoreUndefined: true }) ||\n  dataSelectedValues.length !== dataAppliedValues.length ||\n  filters.some((filter) => {var _dataMaskSelected$fil;return checkIsMissingRequiredValue(filter, dataMaskSelected == null ? void 0 : (_dataMaskSelected$fil = dataMaskSelected[filter == null ? void 0 : filter.id]) == null ? void 0 : _dataMaskSelected$fil.filterState);});\n};\nexport const useChartsVerboseMaps = () => useSelector((state) => {\n  const { charts, datasources } = state;\n  return Object.keys(state.charts).reduce((chartsVerboseMaps, chartId) => {var _charts$chartId, _charts$chartId$form_;\n    const chartDatasource = datasources[(_charts$chartId = charts[chartId]) == null ? void 0 : (_charts$chartId$form_ = _charts$chartId.form_data) == null ? void 0 : _charts$chartId$form_.datasource];\n    return {\n      ...chartsVerboseMaps,\n      [chartId]: chartDatasource ? chartDatasource.verbose_map : {} };\n\n  }, {});\n});\nexport const FILTER_BAR_TEST_ID = 'filter-bar';\nexport const getFilterBarTestId = testWithId(FILTER_BAR_TEST_ID);","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,eAAT,QAAgC,gBAAhC;AAEA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,MAAMC,oBAAoB,GAAG,CAACC,IAAD,KAClCC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoBG,MAApB,CACE,CAACC,IAAD,EAAOC,IAAP,MAAiB,EAAE,GAAGD,IAAL,EAAW,CAACC,IAAI,CAACC,EAAN,GAAWD,IAAI,CAACE,aAA3B,EAAjB,CADF,EAEE,EAFF,CADK;AAMP,OAAO,MAAMC,2BAA2B,GAAG,CACzCC,MADyC,EAEzCC,WAFyC,KAGvC;EACF,MAAMC,KAAK,GAAGD,WAAH,oBAAGA,WAAW,CAAEC,KAA3B;EACA;EACA,OACE,gCAAM,CAACC,aAAP,2CAAsBC,iBAAtB;EACCF,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKG,SAD7B,CADF;AAID,CAVM;AAYP,OAAO,MAAMC,oBAAoB,GAAG,CAClCC,gBADkC,EAElCC,eAFkC,EAGlCC,OAHkC,KAIhC;EACF,MAAMC,kBAAkB,GAAGlB,MAAM,CAACC,MAAP,CAAcc,gBAAd,CAA3B;EACA,MAAMI,iBAAiB,GAAGnB,MAAM,CAACC,MAAP,CAAce,eAAd,CAA1B;EACA,OACErB,eAAe,CACbG,oBAAoB,CAACiB,gBAAD,CADP,EAEbjB,oBAAoB,CAACkB,eAAD,CAFP,EAGb,EAAEI,eAAe,EAAE,IAAnB,EAHa,CAAf;EAKAF,kBAAkB,CAACG,MAAnB,KAA8BF,iBAAiB,CAACE,MALhD;EAMAJ,OAAO,CAACK,IAAR,CAAa,OAAM,uCACjBf,2BAA2B,CACzBC,MADyB,EAEzBO,gBAFyB,6CAEzBA,gBAAgB,CAAGP,MAAH,oBAAGA,MAAM,CAAEH,EAAX,CAFS,qBAEzB,sBAAgCI,WAFP,CADV,EAAnB,CAPF;AAcD,CArBM;AAuBP,OAAO,MAAMc,oBAAoB,GAAG,MAClC1B,WAAW,CACT,MAAK,KAAG;EACN,MAAM,EAAE2B,MAAF,EAAUC,WAAV,KAA0BC,KAAhC;EAEA,OAAO1B,MAAM,CAAC2B,IAAP,CAAYD,KAAK,CAACF,MAAlB,EAA0BtB,MAA1B,CAAiC,CAAC0B,iBAAD,EAAoBC,OAApB,KAA+B;IACrE,MAAMC,eAAe,GACnBL,WAAW,oBAACD,MAAM,CAACK,OAAD,CAAP,8CAAC,gBAAiBE,SAAlB,qBAAC,sBAA4BC,UAA7B,CADb;IAEA,OAAO;MACL,GAAGJ,iBADE;MAEL,CAACC,OAAD,GAAWC,eAAe,GAAGA,eAAe,CAACG,WAAnB,GAAiC,EAFtD,EAAP;;EAID,CAPM,EAOJ,EAPI,CAAP;AAQD,CAZQ,CADN;AAgBP,OAAO,MAAMC,kBAAkB,GAAG,YAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAGvC,UAAU,CAACsC,kBAAD,CAArC","names":["areObjectsEqual","testWithId","useSelector","getOnlyExtraFormData","data","Object","values","reduce","prev","next","id","extraFormData","checkIsMissingRequiredValue","filter","filterState","value","controlValues","enableEmptyFilter","undefined","checkIsApplyDisabled","dataMaskSelected","dataMaskApplied","filters","dataSelectedValues","dataAppliedValues","ignoreUndefined","length","some","useChartsVerboseMaps","charts","datasources","state","keys","chartsVerboseMaps","chartId","chartDatasource","form_data","datasource","verbose_map","FILTER_BAR_TEST_ID","getFilterBarTestId"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/utils.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport { DataMaskStateWithId, Filter, FilterState } from '@superset-ui/core';\nimport { testWithId } from 'src/utils/testUtils';\nimport { RootState } from 'src/dashboard/types';\nimport { useSelector } from 'react-redux';\n\nexport const getOnlyExtraFormData = (data: DataMaskStateWithId) =>\n  Object.values(data).reduce(\n    (prev, next) => ({ ...prev, [next.id]: next.extraFormData }),\n    {},\n  );\n\nexport const checkIsMissingRequiredValue = (\n  filter: Filter,\n  filterState?: FilterState,\n) => {\n  const value = filterState?.value;\n  // TODO: this property should be unhardcoded\n  return (\n    filter.controlValues?.enableEmptyFilter &&\n    (value === null || value === undefined)\n  );\n};\n\nexport const checkIsApplyDisabled = (\n  dataMaskSelected: DataMaskStateWithId,\n  dataMaskApplied: DataMaskStateWithId,\n  filters: Filter[],\n) => {\n  const dataSelectedValues = Object.values(dataMaskSelected);\n  const dataAppliedValues = Object.values(dataMaskApplied);\n  return (\n    areObjectsEqual(\n      getOnlyExtraFormData(dataMaskSelected),\n      getOnlyExtraFormData(dataMaskApplied),\n      { ignoreUndefined: true },\n    ) ||\n    dataSelectedValues.length !== dataAppliedValues.length ||\n    filters.some(filter =>\n      checkIsMissingRequiredValue(\n        filter,\n        dataMaskSelected?.[filter?.id]?.filterState,\n      ),\n    )\n  );\n};\n\nexport const useChartsVerboseMaps = () =>\n  useSelector<RootState, { [chartId: string]: Record<string, string> }>(\n    state => {\n      const { charts, datasources } = state;\n\n      return Object.keys(state.charts).reduce((chartsVerboseMaps, chartId) => {\n        const chartDatasource =\n          datasources[charts[chartId]?.form_data?.datasource];\n        return {\n          ...chartsVerboseMaps,\n          [chartId]: chartDatasource ? chartDatasource.verbose_map : {},\n        };\n      }, {});\n    },\n  );\n\nexport const FILTER_BAR_TEST_ID = 'filter-bar';\nexport const getFilterBarTestId = testWithId(FILTER_BAR_TEST_ID);\n"]},"metadata":{},"sourceType":"module"}