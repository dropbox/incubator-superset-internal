{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport Popover from 'src/components/Popover';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport { getDashboardPermalink } from 'src/utils/urlUtils';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport { useSelector } from 'react-redux';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function URLShortLinkButton(_ref) {let { dashboardId, anchorLinkId, placement = 'right', emailContent = '', emailSubject = '' } = _ref;\n  const [shortUrl, setShortUrl] = useState('');\n  const { addDangerToast } = useToasts();\n  const { dataMask, activeTabs } = useSelector((state) => ({\n    dataMask: state.dataMask,\n    activeTabs: state.dashboardState.activeTabs }));\n\n  const getCopyUrl = async () => {\n    try {\n      const url = await getDashboardPermalink({\n        dashboardId,\n        dataMask,\n        activeTabs,\n        anchor: anchorLinkId });\n\n      setShortUrl(url);\n    }\n    catch (error) {\n      if (error) {\n        addDangerToast((await getClientErrorObject(error)).error ||\n        t('Something went wrong.'));\n      }\n    }\n  };\n  const emailBody = `${emailContent}${shortUrl || ''}`;\n  const emailLink = `mailto:?Subject=${emailSubject}%20&Body=${emailBody}`;\n  return ___EmotionJSX(Popover, { trigger: \"click\", placement: placement, content:\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    ___EmotionJSX(\"div\", { id: \"shorturl-popover\", onClick: (e) => {\n        e.stopPropagation();\n      } },\n    ___EmotionJSX(CopyToClipboard, { text: shortUrl, copyNode: ___EmotionJSX(\"i\", { className: \"fa fa-clipboard\", title: t('Copy to clipboard') }) }), \"\\xA0\\xA0\",\n\n    ___EmotionJSX(\"a\", { href: emailLink },\n    ___EmotionJSX(\"i\", { className: \"fa fa-envelope\" }))) },\n\n\n  ___EmotionJSX(\"span\", { className: \"short-link-trigger btn btn-default btn-sm\", tabIndex: 0, role: \"button\", onClick: (e) => {\n      e.stopPropagation();\n      getCopyUrl();\n    } },\n  ___EmotionJSX(\"i\", { className: \"short-link-trigger fa fa-link\" }), \"\\xA0\"));\n\n\n\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,CAAT,QAAkB,mBAAlB;AACA,OAAOC,OAAP,MAAsC,wBAAtC;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,qBAAT,QAAsC,oBAAtC;AACA,SAASC,SAAT,QAA0B,yCAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,oBAAT,QAAqC,gCAArC,C;AAUA,eAAc,SAAUC,kBAAV,OAMY,KANiB,EACzCC,WADyC,EAEzCC,YAFyC,EAGzCC,SAAS,GAAG,OAH6B,EAIzCC,YAAY,GAAG,EAJ0B,EAKzCC,YAAY,GAAG,EAL0B,EAMjB;EACxB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,EAAEgB,cAAF,KAAqBX,SAAS,EAApC;EACA,MAAM,EAAEY,QAAF,EAAYC,UAAZ,KAA2BZ,WAAW,CAAC,CAACa,KAAD,MAAuB;IAClEF,QAAQ,EAAEE,KAAK,CAACF,QADkD;IAElEC,UAAU,EAAEC,KAAK,CAACC,cAAN,CAAqBF,UAFiC,EAAvB,CAAD,CAA5C;;EAKA,MAAMG,UAAU,GAAG,YAAW;IAC5B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMlB,qBAAqB,CAAC;QACtCK,WADsC;QAEtCQ,QAFsC;QAGtCC,UAHsC;QAItCK,MAAM,EAAEb,YAJ8B,EAAD,CAAvC;;MAMAK,WAAW,CAACO,GAAD,CAAX;IACD;IAAC,OAAOE,KAAP,EAAc;MACd,IAAIA,KAAJ,EAAW;QACTR,cAAc,CACZ,CAAC,MAAMT,oBAAoB,CAACiB,KAAD,CAA3B,EAAoCA,KAApC;QACEvB,CAAC,CAAC,uBAAD,CAFS,CAAd;MAID;IACF;EACF,CAjBD;EAmBA,MAAMwB,SAAS,GAAG,GAAGb,YAAY,GAAGE,QAAQ,IAAI,EAAE,EAAlD;EACA,MAAMY,SAAS,GAAG,mBAAmBb,YAAY,YAAYY,SAAS,EAAtE;EAEA,OACE,cAAC,OAAD,IACE,OAAO,EAAC,OADV,EAEE,SAAS,EAAEd,SAFb,EAGE,OAAO;IACL;IACA,uBACE,EAAE,EAAC,kBADL,EAGE,OAAO,EAAE,EAAC,KAAG;QACXgB,CAAC,CAACC,eAAF;MACD,CALH;IAOE,cAAC,eAAD,IACE,IAAI,EAAEd,QADR,EAEE,QAAQ,EACN,qBAAG,SAAS,EAAC,iBAAb,EAA+B,KAAK,EAAEb,CAAC,CAAC,mBAAD,CAAvC,GAHJ,GAPF;;IAcE,qBAAG,IAAI,EAAEyB,SAAT;IACE,qBAAG,SAAS,EAAC,gBAAb,GADF,CAdF,CALJ;;;EAyBE,wBACE,SAAS,EAAC,2CADZ,EAEE,QAAQ,EAAE,CAFZ,EAGE,IAAI,EAAC,QAHP,EAIE,OAAO,EAAE,EAAC,KAAG;MACXC,CAAC,CAACC,eAAF;MACAP,UAAU;IACX,CAPH;EASE,qBAAG,SAAS,EAAC,+BAAb,GATF,SAzBF,CADF;;;;AAwCD","names":["React","useState","t","Popover","CopyToClipboard","getDashboardPermalink","useToasts","useSelector","getClientErrorObject","URLShortLinkButton","dashboardId","anchorLinkId","placement","emailContent","emailSubject","shortUrl","setShortUrl","addDangerToast","dataMask","activeTabs","state","dashboardState","getCopyUrl","url","anchor","error","emailBody","emailLink","e","stopPropagation"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/URLShortLinkButton/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport Popover, { PopoverProps } from 'src/components/Popover';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport { getDashboardPermalink } from 'src/utils/urlUtils';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'src/dashboard/types';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\n\nexport type URLShortLinkButtonProps = {\n  dashboardId: number;\n  anchorLinkId?: string;\n  emailSubject?: string;\n  emailContent?: string;\n  placement?: PopoverProps['placement'];\n};\n\nexport default function URLShortLinkButton({\n  dashboardId,\n  anchorLinkId,\n  placement = 'right',\n  emailContent = '',\n  emailSubject = '',\n}: URLShortLinkButtonProps) {\n  const [shortUrl, setShortUrl] = useState('');\n  const { addDangerToast } = useToasts();\n  const { dataMask, activeTabs } = useSelector((state: RootState) => ({\n    dataMask: state.dataMask,\n    activeTabs: state.dashboardState.activeTabs,\n  }));\n\n  const getCopyUrl = async () => {\n    try {\n      const url = await getDashboardPermalink({\n        dashboardId,\n        dataMask,\n        activeTabs,\n        anchor: anchorLinkId,\n      });\n      setShortUrl(url);\n    } catch (error) {\n      if (error) {\n        addDangerToast(\n          (await getClientErrorObject(error)).error ||\n            t('Something went wrong.'),\n        );\n      }\n    }\n  };\n\n  const emailBody = `${emailContent}${shortUrl || ''}`;\n  const emailLink = `mailto:?Subject=${emailSubject}%20&Body=${emailBody}`;\n\n  return (\n    <Popover\n      trigger=\"click\"\n      placement={placement}\n      content={\n        // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n        <div\n          id=\"shorturl-popover\"\n          data-test=\"shorturl-popover\"\n          onClick={e => {\n            e.stopPropagation();\n          }}\n        >\n          <CopyToClipboard\n            text={shortUrl}\n            copyNode={\n              <i className=\"fa fa-clipboard\" title={t('Copy to clipboard')} />\n            }\n          />\n          &nbsp;&nbsp;\n          <a href={emailLink}>\n            <i className=\"fa fa-envelope\" />\n          </a>\n        </div>\n      }\n    >\n      <span\n        className=\"short-link-trigger btn btn-default btn-sm\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={e => {\n          e.stopPropagation();\n          getCopyUrl();\n        }}\n      >\n        <i className=\"short-link-trigger fa fa-link\" />\n        &nbsp;\n      </span>\n    </Popover>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}