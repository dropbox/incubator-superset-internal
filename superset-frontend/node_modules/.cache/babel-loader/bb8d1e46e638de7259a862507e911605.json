{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { css, styled, isDefined, t } from '@superset-ui/core';\nimport { SingleQueryResultPane } from 'src/explore/components/DataTablesPane/components/SingleQueryResultPane';\nimport Tabs from 'src/components/Tabs';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DATA_SIZE = 15;\nconst PaginationContainer = styled.div`\n  ${(_ref) => {let { theme } = _ref;return css`\n    & .pagination-container {\n      bottom: ${-theme.gridUnit * 4}px;\n    }\n  `;}}\n`;\nexport const useResultsTableView = (chartDataResult, datasourceId) => {\n  if (!isDefined(chartDataResult)) {\n    return ___EmotionJSX(\"div\", null);\n  }\n  if (chartDataResult.length === 1) {\n    return ___EmotionJSX(PaginationContainer, null,\n    ___EmotionJSX(SingleQueryResultPane, { colnames: chartDataResult[0].colnames, coltypes: chartDataResult[0].coltypes, data: chartDataResult[0].data, dataSize: DATA_SIZE, datasourceId: datasourceId, isVisible: true }));\n\n  }\n  return ___EmotionJSX(Tabs, { fullWidth: false },\n  chartDataResult.map((res, index) => ___EmotionJSX(Tabs.TabPane, { tab: t('Results %s', index + 1), key: index },\n  ___EmotionJSX(PaginationContainer, null,\n  ___EmotionJSX(SingleQueryResultPane, { colnames: res.colnames, coltypes: res.coltypes, data: res.data, dataSize: DATA_SIZE, datasourceId: datasourceId, isVisible: true })))));\n\n\n\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,SAAtB,EAA4CC,CAA5C,QAAqD,mBAArD;AACA,SAASC,qBAAT,QAAsC,wEAAtC;AACA,OAAOC,IAAP,MAAiB,qBAAjB,C;AAEA,MAAMC,SAAS,GAAG,EAAlB;AAEA,MAAMC,mBAAmB,GAAGN,MAAM,CAACO,GAAG;IAClC,eAAC,EAAEC,KAAF,EAAD,eAAeT,GAAG;;gBAEN,CAACS,KAAK,CAACC,QAAP,GAAkB,CAAC;;GAF/B,EAID;CALH;AAQA,OAAO,MAAMC,mBAAmB,GAAG,CACjCC,eADiC,EAEjCC,YAFiC,KAG/B;EACF,IAAI,CAACX,SAAS,CAACU,eAAD,CAAd,EAAiC;IAC/B,OAAO,0BAAP;EACD;EACD,IAAIA,eAAe,CAACE,MAAhB,KAA2B,CAA/B,EAAkC;IAChC,OACE,cAAC,mBAAD;IACE,cAAC,qBAAD,IACE,QAAQ,EAAEF,eAAe,CAAC,CAAD,CAAf,CAAmBG,QAD/B,EAEE,QAAQ,EAAEH,eAAe,CAAC,CAAD,CAAf,CAAmBI,QAF/B,EAGE,IAAI,EAAEJ,eAAe,CAAC,CAAD,CAAf,CAAmBK,IAH3B,EAIE,QAAQ,EAAEX,SAJZ,EAKE,YAAY,EAAEO,YALhB,EAME,SAAS,MANX,GADF,CADF;;EAYD;EACD,OACE,cAAC,IAAD,IAAM,SAAS,EAAE,KAAjB;EACGD,eAAe,CAACM,GAAhB,CAAoB,CAACC,GAAD,EAAMC,KAAN,KACnB,cAAC,IAAD,CAAM,OAAN,IAAc,GAAG,EAAEjB,CAAC,CAAC,YAAD,EAAeiB,KAAK,GAAG,CAAvB,CAApB,EAA+C,GAAG,EAAEA,KAApD;EACE,cAAC,mBAAD;EACE,cAAC,qBAAD,IACE,QAAQ,EAAED,GAAG,CAACJ,QADhB,EAEE,QAAQ,EAAEI,GAAG,CAACH,QAFhB,EAGE,IAAI,EAAEG,GAAG,CAACF,IAHZ,EAIE,QAAQ,EAAEX,SAJZ,EAKE,YAAY,EAAEO,YALhB,EAME,SAAS,MANX,GADF,CADF,CADD,CADH,CADF;;;;AAkBD,CAvCM","names":["React","css","styled","isDefined","t","SingleQueryResultPane","Tabs","DATA_SIZE","PaginationContainer","div","theme","gridUnit","useResultsTableView","chartDataResult","datasourceId","length","colnames","coltypes","data","map","res","index"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/components/Chart/DrillBy/useResultsTableView.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { css, styled, isDefined, QueryData, t } from '@superset-ui/core';\nimport { SingleQueryResultPane } from 'src/explore/components/DataTablesPane/components/SingleQueryResultPane';\nimport Tabs from 'src/components/Tabs';\n\nconst DATA_SIZE = 15;\n\nconst PaginationContainer = styled.div`\n  ${({ theme }) => css`\n    & .pagination-container {\n      bottom: ${-theme.gridUnit * 4}px;\n    }\n  `}\n`;\n\nexport const useResultsTableView = (\n  chartDataResult: QueryData[] | undefined,\n  datasourceId: string,\n) => {\n  if (!isDefined(chartDataResult)) {\n    return <div />;\n  }\n  if (chartDataResult.length === 1) {\n    return (\n      <PaginationContainer data-test=\"drill-by-results-table\">\n        <SingleQueryResultPane\n          colnames={chartDataResult[0].colnames}\n          coltypes={chartDataResult[0].coltypes}\n          data={chartDataResult[0].data}\n          dataSize={DATA_SIZE}\n          datasourceId={datasourceId}\n          isVisible\n        />\n      </PaginationContainer>\n    );\n  }\n  return (\n    <Tabs fullWidth={false} data-test=\"drill-by-results-tabs\">\n      {chartDataResult.map((res, index) => (\n        <Tabs.TabPane tab={t('Results %s', index + 1)} key={index}>\n          <PaginationContainer>\n            <SingleQueryResultPane\n              colnames={res.colnames}\n              coltypes={res.coltypes}\n              data={res.data}\n              dataSize={DATA_SIZE}\n              datasourceId={datasourceId}\n              isVisible\n            />\n          </PaginationContainer>\n        </Tabs.TabPane>\n      ))}\n    </Tabs>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}