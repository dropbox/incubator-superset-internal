{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useLayoutEffect, useRef, useMemo } from 'react';\n/**\n * Execute a memoized callback only when mounted. Execute again when factory updated.\n * Returns undefined if not mounted yet.\n */\nexport default function useMountedMemo(factory, deps) {\n  const mounted = useRef();\n  useLayoutEffect(() => {\n    mounted.current = factory;\n  });\n  return useMemo(() => {\n    if (mounted.current) {\n      return factory();\n    }\n    return undefined;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mounted.current, mounted.current === factory, ...(deps || [])]);\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,eAAT,EAA0BC,MAA1B,EAAkCC,OAAlC,QAAiD,OAAjD;AAEA;;;;AAIA,eAAc,SAAUC,cAAV,CACZC,OADY,EAEZC,IAFY,EAEI;EAEhB,MAAMC,OAAO,GAAGL,MAAM,EAAtB;EACAD,eAAe,CAAC,MAAK;IACnBM,OAAO,CAACC,OAAR,GAAkBH,OAAlB;EACD,CAFc,CAAf;EAGA,OAAOF,OAAO,CAAC,MAAK;IAClB,IAAII,OAAO,CAACC,OAAZ,EAAqB;MACnB,OAAOH,OAAO,EAAd;IACD;IACD,OAAOI,SAAP;IACA;EACD,CANa,EAMX,CAACF,OAAO,CAACC,OAAT,EAAkBD,OAAO,CAACC,OAAR,KAAoBH,OAAtC,EAA+C,IAAIC,IAAI,IAAI,EAAZ,CAA/C,CANW,CAAd;AAOD","names":["useLayoutEffect","useRef","useMemo","useMountedMemo","factory","deps","mounted","current","undefined"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/DataTable/utils/useMountedMemo.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useLayoutEffect, useRef, useMemo } from 'react';\n\n/**\n * Execute a memoized callback only when mounted. Execute again when factory updated.\n * Returns undefined if not mounted yet.\n */\nexport default function useMountedMemo<T>(\n  factory: () => T,\n  deps?: unknown[],\n): T | undefined {\n  const mounted = useRef<typeof factory>();\n  useLayoutEffect(() => {\n    mounted.current = factory;\n  });\n  return useMemo(() => {\n    if (mounted.current) {\n      return factory();\n    }\n    return undefined;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mounted.current, mounted.current === factory, ...(deps || [])]);\n}\n"]},"metadata":{},"sourceType":"module"}