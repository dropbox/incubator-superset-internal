{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nfunction mergeOneSide(operation, a, b) {if (a === void 0) {a = 0;}if (b === void 0) {b = 0;}\n  if (Number.isNaN(a) || a === null)\n  return b;\n  if (Number.isNaN(b) || b === null)\n  return a;\n  return operation(a, b);\n}\nexport default function mergeMargin(margin1, margin2, mode) {if (margin1 === void 0) {margin1 = {};}if (margin2 === void 0) {margin2 = {};}if (mode === void 0) {mode = 'expand';}\n  const { top, left, bottom, right } = margin1;\n  const operation = mode === 'expand' ? Math.max : Math.min;\n  return {\n    bottom: mergeOneSide(operation, bottom, margin2.bottom),\n    left: mergeOneSide(operation, left, margin2.left),\n    right: mergeOneSide(operation, right, margin2.right),\n    top: mergeOneSide(operation, top, margin2.top) };\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(mergeOneSide, \"mergeOneSide\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/dimension/mergeMargin.ts\");reactHotLoader.register(mergeMargin, \"mergeMargin\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/dimension/mergeMargin.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAqBA,SAASA,YAAT,CACEC,SADF,EAEEC,CAFF,EAGEC,CAHF,EAGO,KADLD,CACK,cADLA,CACK,GADD,CACC,MAALC,CAAK,cAALA,CAAK,GAAD,CAAC;EAEL,IAAIC,MAAM,CAACC,KAAP,CAAaH,CAAb,KAAmBA,CAAC,KAAK,IAA7B;EAAmC,OAAOC,CAAP;EACnC,IAAIC,MAAM,CAACC,KAAP,CAAaF,CAAb,KAAmBA,CAAC,KAAK,IAA7B;EAAmC,OAAOD,CAAP;EAEnC,OAAOD,SAAS,CAACC,CAAD,EAAIC,CAAJ,CAAhB;AACD;AAED,eAAc,SAAUG,WAAV,CACZC,OADY,EAEZC,OAFY,EAGZC,IAHY,EAGwB,KAFpCF,OAEoC,cAFpCA,OAEoC,GAFT,EAES,MADpCC,OACoC,cADpCA,OACoC,GADT,EACS,MAApCC,IAAoC,cAApCA,IAAoC,GAAR,QAAQ;EAEpC,MAAM,EAAEC,GAAF,EAAOC,IAAP,EAAaC,MAAb,EAAqBC,KAArB,KAA+BN,OAArC;EACA,MAAMN,SAAS,GAAGQ,IAAI,KAAK,QAAT,GAAoBK,IAAI,CAACC,GAAzB,GAA+BD,IAAI,CAACE,GAAtD;EAEA,OAAO;IACLJ,MAAM,EAAEZ,YAAY,CAACC,SAAD,EAAYW,MAAZ,EAAoBJ,OAAO,CAACI,MAA5B,CADf;IAELD,IAAI,EAAEX,YAAY,CAACC,SAAD,EAAYU,IAAZ,EAAkBH,OAAO,CAACG,IAA1B,CAFb;IAGLE,KAAK,EAAEb,YAAY,CAACC,SAAD,EAAYY,KAAZ,EAAmBL,OAAO,CAACK,KAA3B,CAHd;IAILH,GAAG,EAAEV,YAAY,CAACC,SAAD,EAAYS,GAAZ,EAAiBF,OAAO,CAACE,GAAzB,CAJZ,EAAP;;AAMD,C,iLAzBQV,Y,qKAWeM,W","names":["mergeOneSide","operation","a","b","Number","isNaN","mergeMargin","margin1","margin2","mode","top","left","bottom","right","Math","max","min"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/dimension/mergeMargin.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Margin } from './types';\n\nfunction mergeOneSide(\n  operation: (a: number, b: number) => number,\n  a = 0,\n  b = 0,\n) {\n  if (Number.isNaN(a) || a === null) return b;\n  if (Number.isNaN(b) || b === null) return a;\n\n  return operation(a, b);\n}\n\nexport default function mergeMargin(\n  margin1: Partial<Margin> = {},\n  margin2: Partial<Margin> = {},\n  mode: 'expand' | 'shrink' = 'expand',\n) {\n  const { top, left, bottom, right } = margin1;\n  const operation = mode === 'expand' ? Math.max : Math.min;\n\n  return {\n    bottom: mergeOneSide(operation, bottom, margin2.bottom),\n    left: mergeOneSide(operation, left, margin2.left),\n    right: mergeOneSide(operation, right, margin2.right),\n    top: mergeOneSide(operation, top, margin2.top),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}