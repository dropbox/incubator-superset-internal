{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { logging } from '@superset-ui/core';\n\nexport default function updateComponentParentsList(_ref)\n\n\n{let { currentComponent, layout = {} } = _ref;\n  if (currentComponent && layout) {\n    if (layout[currentComponent.id]) {\n      const parentsList = Array.isArray(currentComponent.parents) ?\n      currentComponent.parents.slice() :\n      [];\n\n      parentsList.push(currentComponent.id);\n\n      if (Array.isArray(currentComponent.children)) {\n        currentComponent.children.forEach((childId) => {\n          if (layout[childId]) {\n            // eslint-disable-next-line no-param-reassign\n            layout[childId] = {\n              ...layout[childId],\n              parents: parentsList };\n\n            updateComponentParentsList({\n              currentComponent: layout[childId],\n              layout });\n\n          } else {\n            logging.warn(\n            `The current layout does not contain a component with the id: ${childId}.  Skipping this component`);\n\n          }\n        });\n      }\n    } else {\n      logging.warn(\n      `The current layout does not contain a component with the id: ${currentComponent == null ? void 0 : currentComponent.id}.  Skipping this component`);\n\n    }\n  }\n}","map":{"version":3,"names":["logging","updateComponentParentsList","currentComponent","layout","id","parentsList","Array","isArray","parents","slice","push","children","forEach","childId","warn"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/util/updateComponentParentsList.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { logging } from '@superset-ui/core';\n\nexport default function updateComponentParentsList({\n  currentComponent,\n  layout = {},\n}) {\n  if (currentComponent && layout) {\n    if (layout[currentComponent.id]) {\n      const parentsList = Array.isArray(currentComponent.parents)\n        ? currentComponent.parents.slice()\n        : [];\n\n      parentsList.push(currentComponent.id);\n\n      if (Array.isArray(currentComponent.children)) {\n        currentComponent.children.forEach(childId => {\n          if (layout[childId]) {\n            // eslint-disable-next-line no-param-reassign\n            layout[childId] = {\n              ...layout[childId],\n              parents: parentsList,\n            };\n            updateComponentParentsList({\n              currentComponent: layout[childId],\n              layout,\n            });\n          } else {\n            logging.warn(\n              `The current layout does not contain a component with the id: ${childId}.  Skipping this component`,\n            );\n          }\n        });\n      }\n    } else {\n      logging.warn(\n        `The current layout does not contain a component with the id: ${currentComponent?.id}.  Skipping this component`,\n      );\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAT,QAAwB,mBAAxB;;AAEA,eAAe,SAASC,0BAAT;;;AAGZ,KAHgD,EACjDC,gBADiD,EAEjDC,MAAM,GAAG,EAFwC,EAGhD;EACD,IAAID,gBAAgB,IAAIC,MAAxB,EAAgC;IAC9B,IAAIA,MAAM,CAACD,gBAAgB,CAACE,EAAlB,CAAV,EAAiC;MAC/B,MAAMC,WAAW,GAAGC,KAAK,CAACC,OAAN,CAAcL,gBAAgB,CAACM,OAA/B;MAChBN,gBAAgB,CAACM,OAAjB,CAAyBC,KAAzB,EADgB;MAEhB,EAFJ;;MAIAJ,WAAW,CAACK,IAAZ,CAAiBR,gBAAgB,CAACE,EAAlC;;MAEA,IAAIE,KAAK,CAACC,OAAN,CAAcL,gBAAgB,CAACS,QAA/B,CAAJ,EAA8C;QAC5CT,gBAAgB,CAACS,QAAjB,CAA0BC,OAA1B,CAAkC,CAAAC,OAAO,KAAI;UAC3C,IAAIV,MAAM,CAACU,OAAD,CAAV,EAAqB;YACnB;YACAV,MAAM,CAACU,OAAD,CAAN,GAAkB;cAChB,GAAGV,MAAM,CAACU,OAAD,CADO;cAEhBL,OAAO,EAAEH,WAFO,EAAlB;;YAIAJ,0BAA0B,CAAC;cACzBC,gBAAgB,EAAEC,MAAM,CAACU,OAAD,CADC;cAEzBV,MAFyB,EAAD,CAA1B;;UAID,CAVD,MAUO;YACLH,OAAO,CAACc,IAAR;YACG,gEAA+DD,OAAQ,4BAD1E;;UAGD;QACF,CAhBD;MAiBD;IACF,CA1BD,MA0BO;MACLb,OAAO,CAACc,IAAR;MACG,gEAA+DZ,gBAAhE,oBAAgEA,gBAAgB,CAAEE,EAAG,4BADvF;;IAGD;EACF;AACF"},"metadata":{},"sourceType":"module"}