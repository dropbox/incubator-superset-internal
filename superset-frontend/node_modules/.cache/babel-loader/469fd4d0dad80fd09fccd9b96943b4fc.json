{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { D3_FORMAT_DOCS, D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT, D3_FORMAT_OPTIONS, D3_TIME_FORMAT_OPTIONS, sections, getStandardizedControls } from '@superset-ui/chart-controls';\nimport { DEFAULT_FORM_DATA } from './types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst { labelType, numberFormat, showLabels, showUpperLabels, dateFormat } = DEFAULT_FORM_DATA;\nconst config = {\n  controlPanelSections: [\n  sections.legacyRegularTime,\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    ['groupby'],\n    ['metric'],\n    ['row_limit'],\n    [\n    {\n      name: 'sort_by_metric',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Sort by metric'),\n        description: t('Whether to sort results by the selected metric in descending order.') } }],\n\n\n\n    ['adhoc_filters']] },\n\n\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [\n    ['color_scheme'],\n    [___EmotionJSX(\"div\", { className: \"section-header\" }, t('Labels'))],\n    [\n    {\n      name: 'show_labels',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Show Labels'),\n        renderTrigger: true,\n        default: showLabels,\n        description: t('Whether to display the labels.') } }],\n\n\n\n    [\n    {\n      name: 'show_upper_labels',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Show Upper Labels'),\n        renderTrigger: true,\n        default: showUpperLabels,\n        description: t('Show labels when the node has children.') } }],\n\n\n\n    [\n    {\n      name: 'label_type',\n      config: {\n        type: 'SelectControl',\n        label: t('Label Type'),\n        default: labelType,\n        renderTrigger: true,\n        choices: [\n        ['Key', t('Key')],\n        ['value', t('Value')],\n        ['key_value', t('Category and Value')]],\n\n        description: t('What should be shown on the label?') } }],\n\n\n\n    [\n    {\n      name: 'number_format',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Number format'),\n        renderTrigger: true,\n        default: numberFormat,\n        choices: D3_FORMAT_OPTIONS,\n        description: `${D3_FORMAT_DOCS} ${D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT}` } }],\n\n\n\n    [\n    {\n      name: 'date_format',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Date format'),\n        renderTrigger: true,\n        choices: D3_TIME_FORMAT_OPTIONS,\n        default: dateFormat,\n        description: D3_FORMAT_DOCS } }]] }],\n\n\n\n\n\n\n  formDataOverrides: (formData) => ({\n    ...formData,\n    metric: getStandardizedControls().shiftMetric(),\n    groupby: getStandardizedControls().popAllColumns() }) };\n\n\nexport default config;","map":{"version":3,"mappings":"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","names":["React","t","D3_FORMAT_DOCS","D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT","D3_FORMAT_OPTIONS","D3_TIME_FORMAT_OPTIONS","sections","getStandardizedControls","DEFAULT_FORM_DATA","labelType","numberFormat","showLabels","showUpperLabels","dateFormat","config","controlPanelSections","legacyRegularTime","label","expanded","controlSetRows","name","type","description","renderTrigger","default","choices","freeForm","formDataOverrides","formData","metric","shiftMetric","groupby","popAllColumns"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/controlPanel.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  D3_FORMAT_DOCS,\n  D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT,\n  D3_FORMAT_OPTIONS,\n  D3_TIME_FORMAT_OPTIONS,\n  sections,\n  getStandardizedControls,\n} from '@superset-ui/chart-controls';\nimport { DEFAULT_FORM_DATA } from './types';\n\nconst { labelType, numberFormat, showLabels, showUpperLabels, dateFormat } =\n  DEFAULT_FORM_DATA;\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.legacyRegularTime,\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        ['groupby'],\n        ['metric'],\n        ['row_limit'],\n        [\n          {\n            name: 'sort_by_metric',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Sort by metric'),\n              description: t(\n                'Whether to sort results by the selected metric in descending order.',\n              ),\n            },\n          },\n        ],\n        ['adhoc_filters'],\n      ],\n    },\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        ['color_scheme'],\n        [<div className=\"section-header\">{t('Labels')}</div>],\n        [\n          {\n            name: 'show_labels',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Show Labels'),\n              renderTrigger: true,\n              default: showLabels,\n              description: t('Whether to display the labels.'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'show_upper_labels',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Show Upper Labels'),\n              renderTrigger: true,\n              default: showUpperLabels,\n              description: t('Show labels when the node has children.'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'label_type',\n            config: {\n              type: 'SelectControl',\n              label: t('Label Type'),\n              default: labelType,\n              renderTrigger: true,\n              choices: [\n                ['Key', t('Key')],\n                ['value', t('Value')],\n                ['key_value', t('Category and Value')],\n              ],\n              description: t('What should be shown on the label?'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'number_format',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Number format'),\n              renderTrigger: true,\n              default: numberFormat,\n              choices: D3_FORMAT_OPTIONS,\n              description: `${D3_FORMAT_DOCS} ${D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT}`,\n            },\n          },\n        ],\n        [\n          {\n            name: 'date_format',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Date format'),\n              renderTrigger: true,\n              choices: D3_TIME_FORMAT_OPTIONS,\n              default: dateFormat,\n              description: D3_FORMAT_DOCS,\n            },\n          },\n        ],\n      ],\n    },\n  ],\n  formDataOverrides: formData => ({\n    ...formData,\n    metric: getStandardizedControls().shiftMetric(),\n    groupby: getStandardizedControls().popAllColumns(),\n  }),\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}