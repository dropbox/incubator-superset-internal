{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { CurrencyFormatter, ensureIsArray, getNumberFormatter, isSavedMetric, NumberFormats } from '@superset-ui/core';\nexport const getYAxisFormatter = function (metrics, forcePercentFormatter, customFormatters, yAxisFormat) {if (yAxisFormat === void 0) {yAxisFormat = NumberFormats.SMART_NUMBER;}\n  if (forcePercentFormatter) {\n    return getNumberFormatter(',.0%');\n  }\n  const metricsArray = ensureIsArray(metrics);\n  if (metricsArray.every(isSavedMetric) &&\n  metricsArray.\n  map((metric) => customFormatters[metric]).\n  every((formatter, _, formatters) => {var _formatter$currency, _formatters$, _formatters$$currency;return formatter instanceof CurrencyFormatter &&\n    (formatter == null ? void 0 : (_formatter$currency = formatter.currency) == null ? void 0 : _formatter$currency.symbol) === ((_formatters$ =\n    formatters[0]) == null ? void 0 : (_formatters$$currency = _formatters$.currency) == null ? void 0 : _formatters$$currency.symbol);})) {\n    return customFormatters[metricsArray[0]];\n  }\n  return getNumberFormatter(yAxisFormat);\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAmBA,SACEA,iBADF,EAEEC,aAFF,EAGEC,kBAHF,EAIEC,aAJF,EAKEC,aALF,QAQO,mBARP;AAUA,OAAO,MAAMC,iBAAiB,GAAG,UAC/BC,OAD+B,EAE/BC,qBAF+B,EAG/BC,gBAH+B,EAI/BC,WAJ+B,EAK7B,KADFA,WACE,cADFA,WACE,GADoBL,aAAa,CAACM,YAClC;EACF,IAAIH,qBAAJ,EAA2B;IACzB,OAAOL,kBAAkB,CAAC,MAAD,CAAzB;EACD;EACD,MAAMS,YAAY,GAAGV,aAAa,CAACK,OAAD,CAAlC;EACA,IACEK,YAAY,CAACC,KAAb,CAAmBT,aAAnB;EACAQ,YAAY;EACTE,GADH,CACO,OAAM,KAAIL,gBAAgB,CAACM,MAAD,CADjC;EAEGF,KAFH,CAGI,CAACG,SAAD,EAAYC,CAAZ,EAAeC,UAAf,0EACEF,SAAS,YAAYf,iBAArB;IACC,UAA+B,QAA/B,4CAA+B,CAAEkB,QAAjC,yCAA2CC,MAA3C;IACEF,UAAU,CAAC,CAAD,CADZ,8CACE,aAAqCC,QADvC,qBACE,sBAA+CC,MADjD,CAFH,EAHJ,CAFF,EAUE;IACA,OAAOX,gBAAgB,CAACG,YAAY,CAAC,CAAD,CAAb,CAAvB;EACD;EACD,OAAOT,kBAAkB,CAACO,WAAD,CAAzB;AACD,CAxBM","names":["CurrencyFormatter","ensureIsArray","getNumberFormatter","isSavedMetric","NumberFormats","getYAxisFormatter","metrics","forcePercentFormatter","customFormatters","yAxisFormat","SMART_NUMBER","metricsArray","every","map","metric","formatter","_","formatters","currency","symbol"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/plugin-chart-echarts/src/utils/getYAxisFormatter.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  CurrencyFormatter,\n  ensureIsArray,\n  getNumberFormatter,\n  isSavedMetric,\n  NumberFormats,\n  QueryFormMetric,\n  ValueFormatter,\n} from '@superset-ui/core';\n\nexport const getYAxisFormatter = (\n  metrics: QueryFormMetric[],\n  forcePercentFormatter: boolean,\n  customFormatters: Record<string, ValueFormatter>,\n  yAxisFormat: string = NumberFormats.SMART_NUMBER,\n) => {\n  if (forcePercentFormatter) {\n    return getNumberFormatter(',.0%');\n  }\n  const metricsArray = ensureIsArray(metrics);\n  if (\n    metricsArray.every(isSavedMetric) &&\n    metricsArray\n      .map(metric => customFormatters[metric])\n      .every(\n        (formatter, _, formatters) =>\n          formatter instanceof CurrencyFormatter &&\n          (formatter as CurrencyFormatter)?.currency?.symbol ===\n            (formatters[0] as CurrencyFormatter)?.currency?.symbol,\n      )\n  ) {\n    return customFormatters[metricsArray[0]];\n  }\n  return getNumberFormatter(yAxisFormat);\n};\n"]},"metadata":{},"sourceType":"module"}