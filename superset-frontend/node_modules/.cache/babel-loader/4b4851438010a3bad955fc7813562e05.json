{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// Deprecated component\n/* eslint-disable theme-colors/no-literal-colors */\nimport React from 'react';\nimport { css } from '@superset-ui/core';\nimport { components as defaultComponents } from 'react-select';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const DEFAULT_CLASS_NAME = 'Select';\nexport const DEFAULT_CLASS_NAME_PREFIX = 'Select';\nconst colors = (theme) => ({\n  primary: theme.colors.success.base,\n  danger: theme.colors.error.base,\n  warning: theme.colors.warning.base,\n  indicator: theme.colors.info.base,\n  almostBlack: theme.colors.grayscale.dark1,\n  grayDark: theme.colors.grayscale.dark1,\n  grayLight: theme.colors.grayscale.light2,\n  gray: theme.colors.grayscale.light1,\n  grayBg: theme.colors.grayscale.light4,\n  grayBgDarker: theme.colors.grayscale.light3,\n  grayBgDarkest: theme.colors.grayscale.light2,\n  grayHeading: theme.colors.grayscale.light1,\n  menuHover: theme.colors.grayscale.light3,\n  lightest: theme.colors.grayscale.light5,\n  darkest: theme.colors.grayscale.dark2,\n  grayBorder: theme.colors.grayscale.light2,\n  grayBorderLight: theme.colors.grayscale.light3,\n  grayBorderDark: theme.colors.grayscale.light1,\n  textDefault: theme.colors.grayscale.dark1,\n  textDarkest: theme.colors.grayscale.dark2,\n  dangerLight: theme.colors.error.light1 });\n\nexport const defaultTheme = (theme) => ({\n  borderRadius: theme.borderRadius,\n  zIndex: 11,\n  colors: colors(theme),\n  spacing: {\n    baseUnit: 3,\n    menuGutter: 0,\n    controlHeight: 34,\n    lineHeight: 19,\n    fontSize: 14,\n    minWidth: '6.5em' },\n\n  weights: theme.typography.weights });\n\nexport const DEFAULT_STYLES = {\n  container: (provider, _ref) => {let { theme: { spacing: { minWidth } } } = _ref;return [\n    provider,\n    css`\n      min-width: ${minWidth};\n    `];},\n\n  placeholder: (provider) => [\n  provider,\n  css`\n      white-space: nowrap;\n    `],\n\n  indicatorSeparator: () => css`\n    display: none;\n  `,\n  indicatorsContainer: (provider) => [\n  provider,\n  css`\n      i {\n        width: 1em;\n        display: inline-block;\n      }\n    `],\n\n  clearIndicator: (provider) => [\n  provider,\n  css`\n      padding: 4px 0 4px 6px;\n    `],\n\n  control: (provider, _ref2) => {let { isFocused, menuIsOpen, theme: { borderRadius, colors } } = _ref2;\n    const isPseudoFocused = isFocused && !menuIsOpen;\n    let borderColor = colors.grayBorder;\n    if (isPseudoFocused || menuIsOpen) {\n      borderColor = colors.grayBorderDark;\n    }\n    return [\n    provider,\n    css`\n        border-color: ${borderColor};\n        box-shadow: ${isPseudoFocused ?\n    'inset 0 1px 1px rgba(0,0,0,.075), 0 0 0 3px rgba(0,0,0,.1)' :\n    'none'};\n        border-radius: ${menuIsOpen ?\n    `${borderRadius}px ${borderRadius}px 0 0` :\n    `${borderRadius}px`};\n        &:hover {\n          border-color: ${borderColor};\n          box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06);\n        }\n        flex-wrap: nowrap;\n        padding-left: 1px;\n      `];\n\n  },\n  menu: (provider, _ref3) => {let { theme: { zIndex } } = _ref3;return [\n    provider,\n    css`\n      padding-bottom: 2em;\n      z-index: ${zIndex}; /* override at least multi-page pagination */\n      width: auto;\n      min-width: 100%;\n      max-width: 80vw;\n      background: none;\n      box-shadow: none;\n      border: 0;\n    `];},\n\n  menuList: (provider, _ref4) => {let { theme: { borderRadius, colors } } = _ref4;return [\n    provider,\n    css`\n      background: ${colors.lightest};\n      border-radius: 0 0 ${borderRadius}px ${borderRadius}px;\n      border: 1px solid ${colors.grayBorderDark};\n      box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06);\n      margin-top: -1px;\n      border-top-color: ${colors.grayBorderLight};\n      min-width: 100%;\n      width: auto;\n      border-radius: 0 0 ${borderRadius}px ${borderRadius}px;\n      padding-top: 0;\n      padding-bottom: 0;\n    `];},\n\n  option: (provider, _ref5) => {let { isDisabled, isFocused, isSelected, theme: { colors, spacing: { lineHeight, fontSize }, weights } } = _ref5;\n    let color = colors.textDefault;\n    let backgroundColor = colors.lightest;\n    if (isFocused) {\n      backgroundColor = colors.grayBgDarker;\n    } else\n    if (isDisabled) {\n      color = '#ccc';\n    }\n    return [\n    provider,\n    css`\n        cursor: pointer;\n        line-height: ${lineHeight}px;\n        font-size: ${fontSize}px;\n        background-color: ${backgroundColor};\n        color: ${color};\n        font-weight: ${isSelected ? weights.bold : weights.normal};\n        white-space: nowrap;\n        &:hover:active {\n          background-color: ${colors.grayBg};\n        }\n      `];\n\n  },\n  valueContainer: (provider, _ref6) => {let { isMulti, hasValue, theme: { spacing: { baseUnit } } } = _ref6;return [\n    provider,\n    css`\n      padding-left: ${isMulti && hasValue ? 1 : baseUnit * 3}px;\n    `];},\n\n  multiValueLabel: (provider, _ref7) => {let { theme: { spacing: { baseUnit } } } = _ref7;return {\n      ...provider,\n      paddingLeft: baseUnit * 1.2,\n      paddingRight: baseUnit * 1.2 };},\n\n  input: (provider, _ref8) => {var _selectProps$value;let { selectProps } = _ref8;return [\n    provider,\n    css`\n      margin-left: 0;\n      vertical-align: middle;\n      ${selectProps != null && selectProps.isMulti && selectProps != null && (_selectProps$value = selectProps.value) != null && _selectProps$value.length ?\n    'padding: 0 6px; width: 100%' :\n    'padding: 0; flex: 1 1 auto;'};\n    `];},\n\n  menuPortal: (base) => ({\n    ...base,\n    zIndex: 1030 // must be same or higher of antd popover\n  }) };\n\nconst INPUT_TAG_BASE_STYLES = {\n  background: 'none',\n  border: 'none',\n  outline: 'none',\n  padding: 0 };\n\nconst { ClearIndicator, DropdownIndicator, Option, Input, SelectContainer } = defaultComponents;\nexport const DEFAULT_COMPONENTS = {\n  SelectContainer: (_ref9) => {let { children, ...props } = _ref9;\n    const { selectProps: { assistiveText } } = props;\n    return ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(SelectContainer, props, children),\n    assistiveText && ___EmotionJSX(\"span\", { css: (theme) => ({\n        marginLeft: 3,\n        fontSize: theme.typography.sizes.s,\n        color: theme.colors.grayscale.light1 }) },\n\n    assistiveText));\n\n\n  },\n  Option: (_ref10) => {let { children, innerProps, data, ...props } = _ref10;return ___EmotionJSX(Option, _extends({}, props, { data: data, css: data != null && data.style ? data.style : null, innerProps: innerProps }),\n    children);},\n\n  ClearIndicator: (props) => ___EmotionJSX(ClearIndicator, props,\n  ___EmotionJSX(\"i\", { className: \"fa\" }, \"\\xD7\")),\n\n  DropdownIndicator: (props) => ___EmotionJSX(DropdownIndicator, props,\n  ___EmotionJSX(\"i\", { className: `fa fa-caret-${props.selectProps.menuIsOpen ? 'up' : 'down'}` })),\n\n  Input: (props) => {\n    const { getStyles } = props;\n    return ___EmotionJSX(Input, _extends({}, props, { css: getStyles('input', props), autoComplete: \"chrome-off\", inputStyle: INPUT_TAG_BASE_STYLES }));\n  } };\n\nexport const VALUE_LABELED_STYLES = {\n  valueContainer: (provider, _ref11) => {let { getValue, theme: { spacing: { baseUnit } }, isMulti } = _ref11;return {\n      ...provider,\n      paddingLeft: getValue().length > 0 ? 1 : baseUnit * 3,\n      overflow: isMulti && getValue().length > 0 ? 'visible' : 'hidden' };},\n\n  // render single value as is they are multi-value\n  singleValue: (provider, props) => {\n    const { getStyles } = props;\n    return {\n      ...getStyles('multiValue', props),\n      '.metric-option': getStyles('multiValueLabel', props) };\n\n  } };","map":{"version":3,"mappings":"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","names":["React","css","components","defaultComponents","DEFAULT_CLASS_NAME","DEFAULT_CLASS_NAME_PREFIX","colors","theme","primary","success","base","danger","error","warning","indicator","info","almostBlack","grayscale","dark1","grayDark","grayLight","light2","gray","light1","grayBg","light4","grayBgDarker","light3","grayBgDarkest","grayHeading","menuHover","lightest","light5","darkest","dark2","grayBorder","grayBorderLight","grayBorderDark","textDefault","textDarkest","dangerLight","defaultTheme","borderRadius","zIndex","spacing","baseUnit","menuGutter","controlHeight","lineHeight","fontSize","minWidth","weights","typography","DEFAULT_STYLES","container","provider","placeholder","indicatorSeparator","indicatorsContainer","clearIndicator","control","isFocused","menuIsOpen","isPseudoFocused","borderColor","menu","menuList","option","isDisabled","isSelected","color","backgroundColor","bold","normal","valueContainer","isMulti","hasValue","multiValueLabel","paddingLeft","paddingRight","input","selectProps","value","length","menuPortal","INPUT_TAG_BASE_STYLES","background","border","outline","padding","ClearIndicator","DropdownIndicator","Option","Input","SelectContainer","DEFAULT_COMPONENTS","children","props","assistiveText","marginLeft","sizes","s","innerProps","data","style","getStyles","VALUE_LABELED_STYLES","getValue","overflow","singleValue"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/DeprecatedSelect/styles.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// Deprecated component\n/* eslint-disable theme-colors/no-literal-colors */\n\nimport React, { CSSProperties, ComponentType, ReactNode } from 'react';\nimport { SerializedStyles } from '@emotion/react';\nimport { SupersetTheme, css } from '@superset-ui/core';\nimport {\n  Styles,\n  Theme,\n  SelectComponentsConfig,\n  components as defaultComponents,\n  InputProps as ReactSelectInputProps,\n  Props as SelectProps,\n} from 'react-select';\nimport type { colors as reactSelectColors } from 'react-select/src/theme';\nimport type { DeepNonNullable } from 'react-select/src/components';\nimport { OptionType } from 'antd/lib/select';\nimport { SupersetStyledSelectProps } from './DeprecatedSelect';\n\nexport const DEFAULT_CLASS_NAME = 'Select';\nexport const DEFAULT_CLASS_NAME_PREFIX = 'Select';\n\ntype RecursivePartial<T> = {\n  [P in keyof T]?: RecursivePartial<T[P]>;\n};\n\nconst colors = (theme: SupersetTheme) => ({\n  primary: theme.colors.success.base,\n  danger: theme.colors.error.base,\n  warning: theme.colors.warning.base,\n  indicator: theme.colors.info.base,\n  almostBlack: theme.colors.grayscale.dark1,\n  grayDark: theme.colors.grayscale.dark1,\n  grayLight: theme.colors.grayscale.light2,\n  gray: theme.colors.grayscale.light1,\n  grayBg: theme.colors.grayscale.light4,\n  grayBgDarker: theme.colors.grayscale.light3,\n  grayBgDarkest: theme.colors.grayscale.light2,\n  grayHeading: theme.colors.grayscale.light1,\n  menuHover: theme.colors.grayscale.light3,\n  lightest: theme.colors.grayscale.light5,\n  darkest: theme.colors.grayscale.dark2,\n  grayBorder: theme.colors.grayscale.light2,\n  grayBorderLight: theme.colors.grayscale.light3,\n  grayBorderDark: theme.colors.grayscale.light1,\n  textDefault: theme.colors.grayscale.dark1,\n  textDarkest: theme.colors.grayscale.dark2,\n  dangerLight: theme.colors.error.light1,\n});\n\nexport type ThemeConfig = {\n  borderRadius: number;\n  // z-index for menu dropdown\n  // (the same as `@z-index-above-dashboard-charts + 1` in variables.less)\n  zIndex: number;\n  colors: {\n    // add known colors\n    [key in keyof typeof reactSelectColors]: string;\n  } & {\n    [key in keyof ReturnType<typeof colors>]: string;\n  } & {\n    [key: string]: string; // any other colors\n  };\n  spacing: Theme['spacing'] & {\n    // line height and font size must be pixels for easier computation\n    // of option item height in WindowedMenuList\n    lineHeight: number;\n    fontSize: number;\n    // other relative size must be string\n    minWidth: string;\n  };\n};\n\nexport type PartialThemeConfig = RecursivePartial<ThemeConfig>;\n\nexport const defaultTheme: (theme: SupersetTheme) => PartialThemeConfig =\n  theme => ({\n    borderRadius: theme.borderRadius,\n    zIndex: 11,\n    colors: colors(theme),\n    spacing: {\n      baseUnit: 3,\n      menuGutter: 0,\n      controlHeight: 34,\n      lineHeight: 19,\n      fontSize: 14,\n      minWidth: '6.5em',\n    },\n    weights: theme.typography.weights,\n  });\n\n// let styles accept serialized CSS, too\ntype CSSStyles = CSSProperties | SerializedStyles;\ntype styleFnWithSerializedStyles = (\n  base: CSSProperties,\n  state: any,\n) => CSSStyles | CSSStyles[];\n\nexport type StylesConfig = {\n  [key in keyof Styles]: styleFnWithSerializedStyles;\n};\nexport type PartialStylesConfig = Partial<StylesConfig>;\n\nexport const DEFAULT_STYLES: PartialStylesConfig = {\n  container: (\n    provider,\n    {\n      theme: {\n        spacing: { minWidth },\n      },\n    },\n  ) => [\n    provider,\n    css`\n      min-width: ${minWidth};\n    `,\n  ],\n  placeholder: provider => [\n    provider,\n    css`\n      white-space: nowrap;\n    `,\n  ],\n  indicatorSeparator: () => css`\n    display: none;\n  `,\n  indicatorsContainer: provider => [\n    provider,\n    css`\n      i {\n        width: 1em;\n        display: inline-block;\n      }\n    `,\n  ],\n  clearIndicator: provider => [\n    provider,\n    css`\n      padding: 4px 0 4px 6px;\n    `,\n  ],\n  control: (\n    provider,\n    { isFocused, menuIsOpen, theme: { borderRadius, colors } },\n  ) => {\n    const isPseudoFocused = isFocused && !menuIsOpen;\n    let borderColor = colors.grayBorder;\n    if (isPseudoFocused || menuIsOpen) {\n      borderColor = colors.grayBorderDark;\n    }\n    return [\n      provider,\n      css`\n        border-color: ${borderColor};\n        box-shadow: ${isPseudoFocused\n          ? 'inset 0 1px 1px rgba(0,0,0,.075), 0 0 0 3px rgba(0,0,0,.1)'\n          : 'none'};\n        border-radius: ${menuIsOpen\n          ? `${borderRadius}px ${borderRadius}px 0 0`\n          : `${borderRadius}px`};\n        &:hover {\n          border-color: ${borderColor};\n          box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06);\n        }\n        flex-wrap: nowrap;\n        padding-left: 1px;\n      `,\n    ];\n  },\n  menu: (provider, { theme: { zIndex } }) => [\n    provider,\n    css`\n      padding-bottom: 2em;\n      z-index: ${zIndex}; /* override at least multi-page pagination */\n      width: auto;\n      min-width: 100%;\n      max-width: 80vw;\n      background: none;\n      box-shadow: none;\n      border: 0;\n    `,\n  ],\n  menuList: (provider, { theme: { borderRadius, colors } }) => [\n    provider,\n    css`\n      background: ${colors.lightest};\n      border-radius: 0 0 ${borderRadius}px ${borderRadius}px;\n      border: 1px solid ${colors.grayBorderDark};\n      box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06);\n      margin-top: -1px;\n      border-top-color: ${colors.grayBorderLight};\n      min-width: 100%;\n      width: auto;\n      border-radius: 0 0 ${borderRadius}px ${borderRadius}px;\n      padding-top: 0;\n      padding-bottom: 0;\n    `,\n  ],\n  option: (\n    provider,\n    {\n      isDisabled,\n      isFocused,\n      isSelected,\n      theme: {\n        colors,\n        spacing: { lineHeight, fontSize },\n        weights,\n      },\n    },\n  ) => {\n    let color = colors.textDefault;\n    let backgroundColor = colors.lightest;\n    if (isFocused) {\n      backgroundColor = colors.grayBgDarker;\n    } else if (isDisabled) {\n      color = '#ccc';\n    }\n    return [\n      provider,\n      css`\n        cursor: pointer;\n        line-height: ${lineHeight}px;\n        font-size: ${fontSize}px;\n        background-color: ${backgroundColor};\n        color: ${color};\n        font-weight: ${isSelected ? weights.bold : weights.normal};\n        white-space: nowrap;\n        &:hover:active {\n          background-color: ${colors.grayBg};\n        }\n      `,\n    ];\n  },\n  valueContainer: (\n    provider,\n    {\n      isMulti,\n      hasValue,\n      theme: {\n        spacing: { baseUnit },\n      },\n    },\n  ) => [\n    provider,\n    css`\n      padding-left: ${isMulti && hasValue ? 1 : baseUnit * 3}px;\n    `,\n  ],\n  multiValueLabel: (\n    provider,\n    {\n      theme: {\n        spacing: { baseUnit },\n      },\n    },\n  ) => ({\n    ...provider,\n    paddingLeft: baseUnit * 1.2,\n    paddingRight: baseUnit * 1.2,\n  }),\n  input: (provider, { selectProps }) => [\n    provider,\n    css`\n      margin-left: 0;\n      vertical-align: middle;\n      ${selectProps?.isMulti && selectProps?.value?.length\n        ? 'padding: 0 6px; width: 100%'\n        : 'padding: 0; flex: 1 1 auto;'};\n    `,\n  ],\n  menuPortal: base => ({\n    ...base,\n    zIndex: 1030, // must be same or higher of antd popover\n  }),\n};\n\nconst INPUT_TAG_BASE_STYLES = {\n  background: 'none',\n  border: 'none',\n  outline: 'none',\n  padding: 0,\n};\n\nexport type SelectComponentsType = Omit<\n  SelectComponentsConfig<any>,\n  'Input'\n> & {\n  Input: ComponentType<InputProps>;\n};\n\n// react-select is missing selectProps from their props type\n// so overwriting it here to avoid errors\nexport type InputProps = ReactSelectInputProps & {\n  placeholder?: ReactNode;\n  selectProps: SelectProps;\n  autoComplete?: string;\n  onPaste?: SupersetStyledSelectProps<OptionType>['onPaste'];\n  inputStyle?: object;\n};\n\nconst { ClearIndicator, DropdownIndicator, Option, Input, SelectContainer } =\n  defaultComponents as Required<DeepNonNullable<SelectComponentsType>>;\n\nexport const DEFAULT_COMPONENTS: SelectComponentsType = {\n  SelectContainer: ({ children, ...props }) => {\n    const {\n      selectProps: { assistiveText },\n    } = props;\n    return (\n      <div>\n        <SelectContainer {...props}>{children}</SelectContainer>\n        {assistiveText && (\n          <span\n            css={(theme: SupersetTheme) => ({\n              marginLeft: 3,\n              fontSize: theme.typography.sizes.s,\n              color: theme.colors.grayscale.light1,\n            })}\n          >\n            {assistiveText}\n          </span>\n        )}\n      </div>\n    );\n  },\n  Option: ({ children, innerProps, data, ...props }) => (\n    <Option\n      {...props}\n      data={data}\n      css={data?.style ? data.style : null}\n      innerProps={innerProps}\n    >\n      {children}\n    </Option>\n  ),\n  ClearIndicator: props => (\n    <ClearIndicator {...props}>\n      <i className=\"fa\">×</i>\n    </ClearIndicator>\n  ),\n  DropdownIndicator: props => (\n    <DropdownIndicator {...props}>\n      <i\n        className={`fa fa-caret-${\n          props.selectProps.menuIsOpen ? 'up' : 'down'\n        }`}\n      />\n    </DropdownIndicator>\n  ),\n  Input: (props: InputProps) => {\n    const { getStyles } = props;\n    return (\n      <Input\n        {...props}\n        css={getStyles('input', props)}\n        autoComplete=\"chrome-off\"\n        inputStyle={INPUT_TAG_BASE_STYLES}\n      />\n    );\n  },\n};\n\nexport const VALUE_LABELED_STYLES: PartialStylesConfig = {\n  valueContainer: (\n    provider,\n    {\n      getValue,\n      theme: {\n        spacing: { baseUnit },\n      },\n      isMulti,\n    },\n  ) => ({\n    ...provider,\n    paddingLeft: getValue().length > 0 ? 1 : baseUnit * 3,\n    overflow: isMulti && getValue().length > 0 ? 'visible' : 'hidden',\n  }),\n  // render single value as is they are multi-value\n  singleValue: (provider, props) => {\n    const { getStyles } = props;\n    return {\n      ...getStyles('multiValue', props),\n      '.metric-option': getStyles('multiValueLabel', props),\n    };\n  },\n};\n"]},"metadata":{},"sourceType":"module"}