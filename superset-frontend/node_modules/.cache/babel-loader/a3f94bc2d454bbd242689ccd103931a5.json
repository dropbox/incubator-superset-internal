{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport SupersetText from 'src/utils/textUtils';\nimport Button from 'src/components/Button';\nimport { StyledInputContainer, wideButton } from './styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst SqlAlchemyTab = (_ref) => {let { db, onInputChange, testConnection, conf, testInProgress = false, children } = _ref;\n  let fallbackDocsUrl;\n  let fallbackDisplayText;\n  if (SupersetText) {var _SupersetText$DB_MODA, _SupersetText$DB_MODA2;\n    fallbackDocsUrl = (_SupersetText$DB_MODA =\n    SupersetText.DB_MODAL_SQLALCHEMY_FORM) == null ? void 0 : _SupersetText$DB_MODA.SQLALCHEMY_DOCS_URL;\n    fallbackDisplayText = (_SupersetText$DB_MODA2 =\n    SupersetText.DB_MODAL_SQLALCHEMY_FORM) == null ? void 0 : _SupersetText$DB_MODA2.SQLALCHEMY_DISPLAY_TEXT;\n  } else\n  {\n    fallbackDocsUrl = 'https://docs.sqlalchemy.org/en/13/core/engines.html';\n    fallbackDisplayText = 'SQLAlchemy docs';\n  }\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" },\n  t('Display Name'),\n  ___EmotionJSX(\"span\", { className: \"required\" }, \"*\")),\n\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"input\", { type: \"text\", name: \"database_name\", value: (db == null ? void 0 : db.database_name) || '', placeholder: t('Name your database'), onChange: onInputChange })),\n\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('Pick a name to help you identify this database.'))),\n\n\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" },\n  t('SQLAlchemy URI'),\n  ___EmotionJSX(\"span\", { className: \"required\" }, \"*\")),\n\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"input\", { type: \"text\", name: \"sqlalchemy_uri\", value: (db == null ? void 0 : db.sqlalchemy_uri) || '', autoComplete: \"off\", placeholder: t('dialect+driver://username:password@host:port/database'), onChange: onInputChange })),\n\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('Refer to the'), ' ',\n  ___EmotionJSX(\"a\", { href: fallbackDocsUrl || (conf == null ? void 0 : conf.SQLALCHEMY_DOCS_URL) || '', target: \"_blank\", rel: \"noopener noreferrer\" },\n  fallbackDisplayText || (conf == null ? void 0 : conf.SQLALCHEMY_DISPLAY_TEXT) || ''),\n  ' ',\n  t('for more information on how to structure your URI.'))),\n\n\n  children,\n  ___EmotionJSX(Button, { onClick: testConnection, loading: testInProgress, cta: true, buttonStyle: \"link\", css: (theme) => wideButton(theme) },\n  t('Test connection')));\n\n\n};\nexport default SqlAlchemyTab;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAwE,OAAxE;AACA,SAASC,CAAT,QAAiC,mBAAjC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,oBAAT,EAA+BC,UAA/B,QAAiD,UAAjD,C;AAGA,MAAMC,aAAa,GAAG,UAcjB,KAdkB,EACrBC,EADqB,EAErBC,aAFqB,EAGrBC,cAHqB,EAIrBC,IAJqB,EAKrBC,cAAc,GAAG,KALI,EAMrBC,QANqB,EAclB;EACH,IAAIC,eAAJ;EACA,IAAIC,mBAAJ;EACA,IAAIZ,YAAJ,EAAkB;IAChBW,eAAe;IACbX,YAAY,CAACa,wBADA,qBACb,sBAAuCC,mBADzC;IAEAF,mBAAmB;IACjBZ,YAAY,CAACa,wBADI,qBACjB,uBAAuCE,uBADzC;EAED,CALD;EAKO;IACLJ,eAAe,GAAG,qDAAlB;IACAC,mBAAmB,GAAG,iBAAtB;EACD;EACD,OACE;EACE,cAAC,oBAAD;EACE,uBAAK,SAAS,EAAC,eAAf;EACGb,CAAC,CAAC,cAAD,CADJ;EAEE,wBAAM,SAAS,EAAC,UAAhB,QAFF,CADF;;EAKE,uBAAK,SAAS,EAAC,iBAAf;EACE,yBACE,IAAI,EAAC,MADP,EAEE,IAAI,EAAC,eAFP,EAIE,KAAK,EAAE,GAAE,QAAF,cAAE,CAAEiB,aAAJ,KAAqB,EAJ9B,EAKE,WAAW,EAAEjB,CAAC,CAAC,oBAAD,CALhB,EAME,QAAQ,EAAEO,aANZ,GADF,CALF;;EAeE,uBAAK,SAAS,EAAC,QAAf;EACGP,CAAC,CAAC,iDAAD,CADJ,CAfF,CADF;;;EAoBE,cAAC,oBAAD;EACE,uBAAK,SAAS,EAAC,eAAf;EACGA,CAAC,CAAC,gBAAD,CADJ;EAEE,wBAAM,SAAS,EAAC,UAAhB,QAFF,CADF;;EAKE,uBAAK,SAAS,EAAC,iBAAf;EACE,yBACE,IAAI,EAAC,MADP,EAEE,IAAI,EAAC,gBAFP,EAIE,KAAK,EAAE,GAAE,QAAF,cAAE,CAAEkB,cAAJ,KAAsB,EAJ/B,EAKE,YAAY,EAAC,KALf,EAME,WAAW,EAAElB,CAAC,CACZ,uDADY,CANhB,EASE,QAAQ,EAAEO,aATZ,GADF,CALF;;EAkBE,uBAAK,SAAS,EAAC,QAAf;EACGP,CAAC,CAAC,cAAD,CADJ,EACsB,GADtB;EAEE,qBACE,IAAI,EAAEY,eAAe,KAAIH,IAAJ,oBAAIA,IAAI,CAAEM,mBAAV,CAAf,IAAgD,EADxD,EAEE,MAAM,EAAC,QAFT,EAGE,GAAG,EAAC,qBAHN;EAKGF,mBAAmB,KAAIJ,IAAJ,oBAAIA,IAAI,CAAEO,uBAAV,CAAnB,IAAwD,EAL3D,CAFF;EAQO,GARP;EASGhB,CAAC,CAAC,oDAAD,CATJ,CAlBF,CApBF;;;EAkDGW,QAlDH;EAmDE,cAAC,MAAD,IACE,OAAO,EAAEH,cADX,EAEE,OAAO,EAAEE,cAFX,EAGE,GAAG,MAHL,EAIE,WAAW,EAAC,MAJd,EAKE,GAAG,EAAE,CAACS,KAAD,KAA0Bf,UAAU,CAACe,KAAD,CAL3C;EAOGnB,CAAC,CAAC,iBAAD,CAPJ,CAnDF,CADF;;;AA+DD,CAzFD;AA0FA,eAAeK,aAAf","names":["React","t","SupersetText","Button","StyledInputContainer","wideButton","SqlAlchemyTab","db","onInputChange","testConnection","conf","testInProgress","children","fallbackDocsUrl","fallbackDisplayText","DB_MODAL_SQLALCHEMY_FORM","SQLALCHEMY_DOCS_URL","SQLALCHEMY_DISPLAY_TEXT","database_name","sqlalchemy_uri","theme"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/databases/DatabaseModal/SqlAlchemyForm.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { EventHandler, ChangeEvent, MouseEvent, ReactNode } from 'react';\nimport { t, SupersetTheme } from '@superset-ui/core';\nimport SupersetText from 'src/utils/textUtils';\nimport Button from 'src/components/Button';\nimport { StyledInputContainer, wideButton } from './styles';\nimport { DatabaseObject } from '../types';\n\nconst SqlAlchemyTab = ({\n  db,\n  onInputChange,\n  testConnection,\n  conf,\n  testInProgress = false,\n  children,\n}: {\n  db: DatabaseObject | null;\n  onInputChange: EventHandler<ChangeEvent<HTMLInputElement>>;\n  testConnection: EventHandler<MouseEvent<HTMLElement>>;\n  conf: { SQLALCHEMY_DOCS_URL: string; SQLALCHEMY_DISPLAY_TEXT: string };\n  testInProgress?: boolean;\n  children?: ReactNode;\n}) => {\n  let fallbackDocsUrl;\n  let fallbackDisplayText;\n  if (SupersetText) {\n    fallbackDocsUrl =\n      SupersetText.DB_MODAL_SQLALCHEMY_FORM?.SQLALCHEMY_DOCS_URL;\n    fallbackDisplayText =\n      SupersetText.DB_MODAL_SQLALCHEMY_FORM?.SQLALCHEMY_DISPLAY_TEXT;\n  } else {\n    fallbackDocsUrl = 'https://docs.sqlalchemy.org/en/13/core/engines.html';\n    fallbackDisplayText = 'SQLAlchemy docs';\n  }\n  return (\n    <>\n      <StyledInputContainer>\n        <div className=\"control-label\">\n          {t('Display Name')}\n          <span className=\"required\">*</span>\n        </div>\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            name=\"database_name\"\n            data-test=\"database-name-input\"\n            value={db?.database_name || ''}\n            placeholder={t('Name your database')}\n            onChange={onInputChange}\n          />\n        </div>\n        <div className=\"helper\">\n          {t('Pick a name to help you identify this database.')}\n        </div>\n      </StyledInputContainer>\n      <StyledInputContainer>\n        <div className=\"control-label\">\n          {t('SQLAlchemy URI')}\n          <span className=\"required\">*</span>\n        </div>\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            name=\"sqlalchemy_uri\"\n            data-test=\"sqlalchemy-uri-input\"\n            value={db?.sqlalchemy_uri || ''}\n            autoComplete=\"off\"\n            placeholder={t(\n              'dialect+driver://username:password@host:port/database',\n            )}\n            onChange={onInputChange}\n          />\n        </div>\n        <div className=\"helper\">\n          {t('Refer to the')}{' '}\n          <a\n            href={fallbackDocsUrl || conf?.SQLALCHEMY_DOCS_URL || ''}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {fallbackDisplayText || conf?.SQLALCHEMY_DISPLAY_TEXT || ''}\n          </a>{' '}\n          {t('for more information on how to structure your URI.')}\n        </div>\n      </StyledInputContainer>\n      {children}\n      <Button\n        onClick={testConnection}\n        loading={testInProgress}\n        cta\n        buttonStyle=\"link\"\n        css={(theme: SupersetTheme) => wideButton(theme)}\n      >\n        {t('Test connection')}\n      </Button>\n    </>\n  );\n};\nexport default SqlAlchemyTab;\n"]},"metadata":{},"sourceType":"module"}