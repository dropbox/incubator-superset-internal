{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport moment from 'moment';\nimport { getTimeFormatter, getTimeFormatterForGranularity, smartDateFormatter } from '@superset-ui/core';\nexport const parseMetricValue = (metricValue) => {\n  if (typeof metricValue === 'string') {\n    const dateObject = moment.utc(metricValue, moment.ISO_8601, true);\n    if (dateObject.isValid()) {\n      return dateObject.valueOf();\n    }\n    return null;\n  }\n  return metricValue;\n};\nexport const getDateFormatter = (timeFormat, granularity, fallbackFormat) => timeFormat === smartDateFormatter.id ?\ngetTimeFormatterForGranularity(granularity) :\ngetTimeFormatter(timeFormat != null ? timeFormat : fallbackFormat);","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SACEC,gBADF,EAEEC,8BAFF,EAGEC,kBAHF,QAKO,mBALP;AAOA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,WAAD,KAAwC;EACtE,IAAI,OAAOA,WAAP,KAAuB,QAA3B,EAAqC;IACnC,MAAMC,UAAU,GAAGN,MAAM,CAACO,GAAP,CAAWF,WAAX,EAAwBL,MAAM,CAACQ,QAA/B,EAAyC,IAAzC,CAAnB;IACA,IAAIF,UAAU,CAACG,OAAX,EAAJ,EAA0B;MACxB,OAAOH,UAAU,CAACI,OAAX,EAAP;IACD;IACD,OAAO,IAAP;EACD;EACD,OAAOL,WAAP;AACD,CATM;AAWP,OAAO,MAAMM,gBAAgB,GAAG,CAC9BC,UAD8B,EAE9BC,WAF8B,EAG9BC,cAH8B,KAK9BF,UAAU,KAAKT,kBAAkB,CAACY,EAAlC;AACIb,8BAA8B,CAACW,WAAD,CADlC;AAEIZ,gBAAgB,CAACW,UAAD,WAACA,UAAD,GAAeE,cAAf,CAPf","names":["moment","getTimeFormatter","getTimeFormatterForGranularity","smartDateFormatter","parseMetricValue","metricValue","dateObject","utc","ISO_8601","isValid","valueOf","getDateFormatter","timeFormat","granularity","fallbackFormat","id"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/plugin-chart-echarts/src/BigNumber/utils.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport moment from 'moment';\nimport {\n  getTimeFormatter,\n  getTimeFormatterForGranularity,\n  smartDateFormatter,\n  TimeGranularity,\n} from '@superset-ui/core';\n\nexport const parseMetricValue = (metricValue: number | string | null) => {\n  if (typeof metricValue === 'string') {\n    const dateObject = moment.utc(metricValue, moment.ISO_8601, true);\n    if (dateObject.isValid()) {\n      return dateObject.valueOf();\n    }\n    return null;\n  }\n  return metricValue;\n};\n\nexport const getDateFormatter = (\n  timeFormat: string,\n  granularity?: TimeGranularity,\n  fallbackFormat?: string | null,\n) =>\n  timeFormat === smartDateFormatter.id\n    ? getTimeFormatterForGranularity(granularity)\n    : getTimeFormatter(timeFormat ?? fallbackFormat);\n"]},"metadata":{},"sourceType":"module"}