{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { Radio } from 'src/components/Radio';\nimport { COMMON_RANGE_OPTIONS, COMMON_RANGE_SET, DATE_FILTER_TEST_KEY } from 'src/explore/components/controls/DateFilterControl/utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport function CommonFrame(props) {\n  let commonRange = 'Last week';\n  if (COMMON_RANGE_SET.has(props.value)) {\n    commonRange = props.value;\n  } else\n  {\n    props.onChange(commonRange);\n  }\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"div\", { className: \"section-title\", \"data-test\": DATE_FILTER_TEST_KEY.commonFrame },\n  t('Configure Time Range: Last...')),\n\n  ___EmotionJSX(Radio.Group, { value: commonRange, onChange: (e) => props.onChange(e.target.value) },\n  COMMON_RANGE_OPTIONS.map((_ref) => {let { value, label } = _ref;return ___EmotionJSX(Radio, { key: value, value: value, className: \"vertical-radio\" },\n    label);})));\n\n\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CommonFrame, \"CommonFrame\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/DateFilterControl/components/CommonFrame.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,CAAT,QAAkB,mBAAlB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SACEC,oBADF,EAEEC,gBAFF,EAGEC,oBAHF,QAIO,yDAJP,C;AAUA,OAAM,SAAUC,WAAV,CAAsBC,KAAtB,EAAgD;EACpD,IAAIC,WAAW,GAAG,WAAlB;EACA,IAAIJ,gBAAgB,CAACK,GAAjB,CAAqBF,KAAK,CAACG,KAA3B,CAAJ,EAA0D;IACxDF,WAAW,GAAGD,KAAK,CAACG,KAApB;EACD,CAFD;EAEO;IACLH,KAAK,CAACI,QAAN,CAAeH,WAAf;EACD;EAED,OACE;EACE,uBACE,SAAS,EAAC,eADZ,EAEE,aAAWH,oBAAoB,CAACO,WAFlC;EAIGX,CAAC,CAAC,+BAAD,CAJJ,CADF;;EAOE,cAAC,KAAD,CAAO,KAAP,IACE,KAAK,EAAEO,WADT,EAEE,QAAQ,EAAE,CAACK,CAAD,KAAYN,KAAK,CAACI,QAAN,CAAeE,CAAC,CAACC,MAAF,CAASJ,KAAxB,CAFxB;EAIGP,oBAAoB,CAACY,GAArB,CAAyB,eAAC,EAAEL,KAAF,EAASM,KAAT,EAAD,eACxB,cAAC,KAAD,IAAO,GAAG,EAAEN,KAAZ,EAAmB,KAAK,EAAEA,KAA1B,EAAiC,SAAS,EAAC,gBAA3C;IACGM,KADH,CADwB,EAAzB,CAJH,CAPF,CADF;;;;AAoBD,C,iLA5BeV,W","names":["React","t","Radio","COMMON_RANGE_OPTIONS","COMMON_RANGE_SET","DATE_FILTER_TEST_KEY","CommonFrame","props","commonRange","has","value","onChange","commonFrame","e","target","map","label"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/DateFilterControl/components/CommonFrame.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { Radio } from 'src/components/Radio';\nimport {\n  COMMON_RANGE_OPTIONS,\n  COMMON_RANGE_SET,\n  DATE_FILTER_TEST_KEY,\n} from 'src/explore/components/controls/DateFilterControl/utils';\nimport {\n  CommonRangeType,\n  FrameComponentProps,\n} from 'src/explore/components/controls/DateFilterControl/types';\n\nexport function CommonFrame(props: FrameComponentProps) {\n  let commonRange = 'Last week';\n  if (COMMON_RANGE_SET.has(props.value as CommonRangeType)) {\n    commonRange = props.value;\n  } else {\n    props.onChange(commonRange);\n  }\n\n  return (\n    <>\n      <div\n        className=\"section-title\"\n        data-test={DATE_FILTER_TEST_KEY.commonFrame}\n      >\n        {t('Configure Time Range: Last...')}\n      </div>\n      <Radio.Group\n        value={commonRange}\n        onChange={(e: any) => props.onChange(e.target.value)}\n      >\n        {COMMON_RANGE_OPTIONS.map(({ value, label }) => (\n          <Radio key={value} value={value} className=\"vertical-radio\">\n            {label}\n          </Radio>\n        ))}\n      </Radio.Group>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}