{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect, useDispatch } from 'react-redux';\nimport { addDangerToast, addInfoToast, addSuccessToast, addWarningToast } from './actions';\n/** just action creators, these do not dispatch */\nexport const toasters = {\n  addInfoToast,\n  addSuccessToast,\n  addWarningToast,\n  addDangerToast };\n\n// To work properly the redux state must have a `messageToasts` subtree\nexport default function withToasts(BaseComponent) {\n  return connect(null, (dispatch) => bindActionCreators(toasters, dispatch))(BaseComponent);\n  // Redux has some confusing typings that cause problems for consumers of this function.\n  // If someone can fix the types, great, but for now it's just any.\n}\nexport function useToasts() {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(toasters, dispatch), [dispatch]);\n}__signature__(useToasts, \"useDispatch{dispatch}\\nuseMemo{}\", () => [useDispatch]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(toasters, \"toasters\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/withToasts.tsx\");reactHotLoader.register(withToasts, \"withToasts\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/withToasts.tsx\");reactHotLoader.register(useToasts, \"useToasts\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/withToasts.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,SAAwBA,OAAxB,QAAuC,OAAvC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AAEA,SACEC,cADF,EAEEC,YAFF,EAGEC,eAHF,EAIEC,eAJF,QAKO,WALP;AAcA;AACA,OAAO,MAAMC,QAAQ,GAAG;EACtBH,YADsB;EAEtBC,eAFsB;EAGtBC,eAHsB;EAItBH,cAJsB,EAAjB;;AAOP;AACA,eAAc,SAAUK,UAAV,CAAqBC,aAArB,EAAsD;EAClE,OAAOR,OAAO,CAAC,IAAD,EAAO,SAAQ,KAAID,kBAAkB,CAACO,QAAD,EAAWG,QAAX,CAArC,CAAP,CACLD,aADK,CAAP;EAGA;EACA;AACD;AAED,OAAM,SAAUE,SAAV,GAAmB;EACvB,MAAMD,QAAQ,GAAGR,WAAW,EAA5B;EACA,OAAOH,OAAO,CAAC,MAAMC,kBAAkB,CAACO,QAAD,EAAWG,QAAX,CAAzB,EAA+C,CAACA,QAAD,CAA/C,CAAd;AACD,C,cAHeC,S,6CACGT,W,oLAjBNK,Q,sJAQWC,U,wJAQRG,S","names":["useMemo","bindActionCreators","connect","useDispatch","addDangerToast","addInfoToast","addSuccessToast","addWarningToast","toasters","withToasts","BaseComponent","dispatch","useToasts"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/withToasts.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { ComponentType, useMemo } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect, useDispatch } from 'react-redux';\n\nimport {\n  addDangerToast,\n  addInfoToast,\n  addSuccessToast,\n  addWarningToast,\n} from './actions';\n\nexport interface ToastProps {\n  addDangerToast: typeof addDangerToast;\n  addInfoToast: typeof addInfoToast;\n  addSuccessToast: typeof addSuccessToast;\n  addWarningToast: typeof addWarningToast;\n}\n\n/** just action creators, these do not dispatch */\nexport const toasters = {\n  addInfoToast,\n  addSuccessToast,\n  addWarningToast,\n  addDangerToast,\n};\n\n// To work properly the redux state must have a `messageToasts` subtree\nexport default function withToasts(BaseComponent: ComponentType<any>) {\n  return connect(null, dispatch => bindActionCreators(toasters, dispatch))(\n    BaseComponent,\n  ) as any;\n  // Redux has some confusing typings that cause problems for consumers of this function.\n  // If someone can fix the types, great, but for now it's just any.\n}\n\nexport function useToasts() {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(toasters, dispatch), [dispatch]);\n}\n"]},"metadata":{},"sourceType":"module"}