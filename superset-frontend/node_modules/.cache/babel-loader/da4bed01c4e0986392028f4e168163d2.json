{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useLayoutEffect, useMemo, useState } from 'react';\nimport { extent as d3Extent, max as d3Max } from 'd3-array';\nimport { FaSort } from '@react-icons/all-files/fa/FaSort';\nimport { FaSortDown as FaSortDesc } from '@react-icons/all-files/fa/FaSortDown';\nimport { FaSortUp as FaSortAsc } from '@react-icons/all-files/fa/FaSortUp';\nimport cx from 'classnames';\nimport { DTTM_ALIAS, ensureIsArray, GenericDataType, getSelectedText, getTimeFormatterForGranularity, styled, css, t, tn } from '@superset-ui/core';\nimport DataTable from './DataTable';\nimport Styles from './Styles';\nimport { formatColumnValue } from './utils/formatValue';\nimport { PAGE_SIZE_OPTIONS } from './consts';\nimport { updateExternalFormData } from './DataTable/utils/externalAPIs';\nimport getScrollBarSize from './DataTable/utils/getScrollBarSize';\n/**\n * Return sortType based on data type\n */import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction getSortTypeByDataType(dataType) {\n  if (dataType === GenericDataType.TEMPORAL) {\n    return 'datetime';\n  }\n  if (dataType === GenericDataType.STRING) {\n    return 'alphanumeric';\n  }\n  return 'basic';\n}\n/**\n * Cell background width calculation for horizontal bar chart\n */\nfunction cellWidth(_ref) {let { value, valueRange, alignPositiveNegative } = _ref;\n  const [minValue, maxValue] = valueRange;\n  if (alignPositiveNegative) {\n    const perc = Math.abs(Math.round(value / maxValue * 100));\n    return perc;\n  }\n  const posExtent = Math.abs(Math.max(maxValue, 0));\n  const negExtent = Math.abs(Math.min(minValue, 0));\n  const tot = posExtent + negExtent;\n  const perc2 = Math.round(Math.abs(value) / tot * 100);\n  return perc2;\n}\n/**\n * Cell left margin (offset) calculation for horizontal bar chart elements\n * when alignPositiveNegative is not set\n */\nfunction cellOffset(_ref2) {let { value, valueRange, alignPositiveNegative } = _ref2;\n  if (alignPositiveNegative) {\n    return 0;\n  }\n  const [minValue, maxValue] = valueRange;\n  const posExtent = Math.abs(Math.max(maxValue, 0));\n  const negExtent = Math.abs(Math.min(minValue, 0));\n  const tot = posExtent + negExtent;\n  return Math.round(Math.min(negExtent + value, negExtent) / tot * 100);\n}\n/**\n * Cell background color calculation for horizontal bar chart\n */\nfunction cellBackground(_ref3) {let { value, colorPositiveNegative = false } = _ref3;\n  const r = colorPositiveNegative && value < 0 ? 150 : 0;\n  return `rgba(${r},0,0,0.2)`;\n}\nfunction SortIcon(_ref4) {let { column } = _ref4;\n  const { isSorted, isSortedDesc } = column;\n  let sortIcon = ___EmotionJSX(FaSort, null);\n  if (isSorted) {\n    sortIcon = isSortedDesc ? ___EmotionJSX(FaSortDesc, null) : ___EmotionJSX(FaSortAsc, null);\n  }\n  return sortIcon;\n}\nfunction SearchInput(_ref5) {let { count, value, onChange } = _ref5;\n  return ___EmotionJSX(\"span\", { className: \"dt-global-filter\" },\n  t('Search'), ' ',\n  ___EmotionJSX(\"input\", { className: \"form-control input-sm\", placeholder: tn('search.num_records', count), value: value, onChange: onChange }));\n\n}\nfunction SelectPageSize(_ref6) {let { options, current, onChange } = _ref6;\n  return ___EmotionJSX(\"span\", { className: \"dt-select-page-size form-inline\" },\n  t('page_size.show'), ' ',\n  ___EmotionJSX(\"select\", { className: \"form-control input-sm\", value: current, onBlur: () => {}, onChange: (e) => {\n      onChange(Number(e.target.value));\n    } },\n  options.map((option) => {\n    const [size, text] = Array.isArray(option) ?\n    option :\n    [option, option];\n    return ___EmotionJSX(\"option\", { key: size, value: size },\n    text);\n\n  })),\n  ' ',\n  t('page_size.entries'));\n\n}\nconst getNoResultsMessage = (filter) => filter ? t('No matching records found') : t('No records found');var _ref10 = process.env.NODE_ENV === \"production\" ? { name: \"tvoj80\", styles: \"display:inline-flex;align-items:flex-end\" } : { name: \"1wale1b-getColumnConfigs\", styles: \"display:inline-flex;align-items:flex-end;label:getColumnConfigs;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\nexport default function TableChart(props) {\n  const { timeGrain, height, width, data, totals, isRawRecords, rowCount = 0, columns: columnsMeta, alignPositiveNegative: defaultAlignPN = false, colorPositiveNegative: defaultColorPN = false, includeSearch = false, pageSize = 0, serverPagination = false, serverPaginationData, setDataMask, showCellBars = true, sortDesc = false, filters, sticky = true, // whether to use sticky header\n    columnColorFormatters, allowRearrangeColumns = false, onContextMenu, emitCrossFilters } = props;\n  const timestampFormatter = useCallback((value) => getTimeFormatterForGranularity(timeGrain)(value), [timeGrain]);\n  const [tableSize, setTableSize] = useState({\n    width: 0,\n    height: 0 });\n\n  // keep track of whether column order changed, so that column widths can too\n  const [columnOrderToggle, setColumnOrderToggle] = useState(false);\n  // only take relevant page size options\n  const pageSizeOptions = useMemo(() => {\n    const getServerPagination = (n) => n <= rowCount;\n    return PAGE_SIZE_OPTIONS.filter((_ref7) => {let [n] = _ref7;return serverPagination ? getServerPagination(n) : n <= 2 * data.length;});\n  }, [data.length, rowCount, serverPagination]);\n  const getValueRange = useCallback(function getValueRange(key, alignPositiveNegative) {var _data$;\n    if (typeof (data == null ? void 0 : (_data$ = data[0]) == null ? void 0 : _data$[key]) === 'number') {\n      const nums = data.map((row) => row[key]);\n      return alignPositiveNegative ?\n      [0, d3Max(nums.map(Math.abs))] :\n      d3Extent(nums);\n    }\n    return null;\n  }, [data]);\n  const isActiveFilterValue = useCallback(function isActiveFilterValue(key, val) {var _filters$key;\n    return !!filters && ((_filters$key = filters[key]) == null ? void 0 : _includesInstanceProperty(_filters$key).call(_filters$key, val));\n  }, [filters]);\n  const getCrossFilterDataMask = (key, value) => {\n    let updatedFilters = { ...(filters || {}) };\n    if (filters && isActiveFilterValue(key, value)) {\n      updatedFilters = {};\n    } else\n    {\n      updatedFilters = {\n        [key]: [value] };\n\n    }\n    if (Array.isArray(updatedFilters[key]) &&\n    updatedFilters[key].length === 0) {\n      delete updatedFilters[key];\n    }\n    const groupBy = Object.keys(updatedFilters);\n    const groupByValues = Object.values(updatedFilters);\n    const labelElements = [];\n    groupBy.forEach((col) => {var _updatedFilters;\n      const isTimestamp = col === DTTM_ALIAS;\n      const filterValues = ensureIsArray((_updatedFilters = updatedFilters) == null ? void 0 : _updatedFilters[col]);\n      if (filterValues.length) {\n        const valueLabels = filterValues.map((value) => isTimestamp ? timestampFormatter(value) : value);\n        labelElements.push(`${valueLabels.join(', ')}`);\n      }\n    });\n    return {\n      dataMask: {\n        extraFormData: {\n          filters: groupBy.length === 0 ?\n          [] :\n          groupBy.map((col) => {var _updatedFilters2;\n            const val = ensureIsArray((_updatedFilters2 = updatedFilters) == null ? void 0 : _updatedFilters2[col]);\n            if (!val.length)\n            return {\n              col,\n              op: 'IS NULL' };\n\n            return {\n              col,\n              op: 'IN',\n              val: val.map((el) => el instanceof Date ? el.getTime() : el),\n              grain: col === DTTM_ALIAS ? timeGrain : undefined };\n\n          }) },\n\n        filterState: {\n          label: labelElements.join(', '),\n          value: groupByValues.length ? groupByValues : null,\n          filters: updatedFilters && Object.keys(updatedFilters).length ?\n          updatedFilters :\n          null } },\n\n\n      isCurrentValueSelected: isActiveFilterValue(key, value) };\n\n  };\n  const toggleFilter = useCallback(function toggleFilter(key, val) {\n    if (!emitCrossFilters) {\n      return;\n    }\n    setDataMask(getCrossFilterDataMask(key, val).dataMask);\n  }, [emitCrossFilters, getCrossFilterDataMask, setDataMask]);\n  const getSharedStyle = (column) => {\n    const { isNumeric, config = {} } = column;\n    const textAlign = config.horizontalAlign ?\n    config.horizontalAlign :\n    isNumeric ?\n    'right' :\n    'left';\n    return {\n      textAlign };\n\n  };\n  const handleContextMenu = onContextMenu && !isRawRecords ?\n  (value, cellPoint, clientX, clientY) => {\n    const drillToDetailFilters = [];\n    columnsMeta.forEach((col) => {\n      if (!col.isMetric) {\n        const dataRecordValue = value[col.key];\n        drillToDetailFilters.push({\n          col: col.key,\n          op: '==',\n          val: dataRecordValue,\n          formattedVal: formatColumnValue(col, dataRecordValue)[1] });\n\n      }\n    });\n    onContextMenu(clientX, clientY, {\n      drillToDetail: drillToDetailFilters,\n      crossFilter: cellPoint.isMetric ?\n      undefined :\n      getCrossFilterDataMask(cellPoint.key, cellPoint.value),\n      drillBy: cellPoint.isMetric ?\n      undefined :\n      {\n        filters: [\n        {\n          col: cellPoint.key,\n          op: '==',\n          val: cellPoint.value }],\n\n\n        groupbyFieldName: 'groupby' } });\n\n\n  } :\n  undefined;\n  const getColumnConfigs = useCallback((column, i) => {\n    const { key, label, isNumeric, dataType, isMetric, config = {} } = column;\n    const columnWidth = Number.isNaN(Number(config.columnWidth)) ?\n    config.columnWidth :\n    Number(config.columnWidth);\n    // inline style for both th and td cell\n    const sharedStyle = getSharedStyle(column);\n    const alignPositiveNegative = config.alignPositiveNegative === undefined ?\n    defaultAlignPN :\n    config.alignPositiveNegative;\n    const colorPositiveNegative = config.colorPositiveNegative === undefined ?\n    defaultColorPN :\n    config.colorPositiveNegative;\n    const { truncateLongCells } = config;\n    const hasColumnColorFormatters = isNumeric &&\n    Array.isArray(columnColorFormatters) &&\n    columnColorFormatters.length > 0;\n    const valueRange = !hasColumnColorFormatters && (\n    config.showCellBars === undefined ?\n    showCellBars :\n    config.showCellBars) && (\n    isMetric || isRawRecords) &&\n    getValueRange(key, alignPositiveNegative);\n    let className = '';\n    if (emitCrossFilters && !isMetric) {\n      className += ' dt-is-filter';\n    }\n    return {\n      id: String(i),\n      // must use custom accessor to allow `.` in column names\n      // typing is incorrect in current version of `@types/react-table`\n      // so we ask TS not to check.\n      accessor: (datum) => datum[key],\n      Cell: (_ref8) => {let { value, row } = _ref8;\n        const [isHtml, text] = formatColumnValue(column, value);\n        const html = isHtml ? { __html: text } : undefined;\n        let backgroundColor;\n        if (hasColumnColorFormatters) {\n          columnColorFormatters.\n          filter((formatter) => formatter.column === column.key).\n          forEach((formatter) => {\n            const formatterResult = value ?\n            formatter.getColorFromValue(value) :\n            false;\n            if (formatterResult) {\n              backgroundColor = formatterResult;\n            }\n          });\n        }\n        const StyledCell = styled.td`\n            text-align: ${sharedStyle.textAlign};\n            white-space: ${value instanceof Date ? 'nowrap' : undefined};\n            position: relative;\n            background: ${backgroundColor || undefined};\n          `;\n        const cellBarStyles = css`\n            position: absolute;\n            height: 100%;\n            display: block;\n            top: 0;\n            ${valueRange &&\n        `\n                width: ${`${cellWidth({\n          value: value,\n          valueRange,\n          alignPositiveNegative })\n        }%`};\n                left: ${`${cellOffset({\n          value: value,\n          valueRange,\n          alignPositiveNegative })\n        }%`};\n                background-color: ${cellBackground({\n          value: value,\n          colorPositiveNegative })\n        };\n              `}\n          `;\n        const cellProps = {\n          // show raw number in title in case of numeric values\n          title: typeof value === 'number' ? String(value) : undefined,\n          onClick: emitCrossFilters && !valueRange && !isMetric ?\n          () => {\n            // allow selecting text in a cell\n            if (!getSelectedText()) {\n              toggleFilter(key, value);\n            }\n          } :\n          undefined,\n          onContextMenu: (e) => {\n            if (handleContextMenu) {\n              e.preventDefault();\n              e.stopPropagation();\n              handleContextMenu(row.original, { key, value, isMetric }, e.nativeEvent.clientX, e.nativeEvent.clientY);\n            }\n          },\n          className: [\n          className,\n          value == null ? 'dt-is-null' : '',\n          isActiveFilterValue(key, value) ? ' dt-is-active-filter' : ''].\n          join(' ') };\n\n        if (html) {\n          if (truncateLongCells) {\n            // eslint-disable-next-line react/no-danger\n            return ___EmotionJSX(StyledCell, cellProps,\n            ___EmotionJSX(\"div\", { className: \"dt-truncate-cell\", style: columnWidth ? { width: columnWidth } : undefined, dangerouslySetInnerHTML: html }));\n\n          }\n          // eslint-disable-next-line react/no-danger\n          return ___EmotionJSX(StyledCell, _extends({}, cellProps, { dangerouslySetInnerHTML: html }));\n        }\n        // If cellProps renders textContent already, then we don't have to\n        // render `Cell`. This saves some time for large tables.\n        return ___EmotionJSX(StyledCell, cellProps,\n        valueRange && ___EmotionJSX(\"div\", {\n          /* The following classes are added to support custom CSS styling */\n          className: cx('cell-bar', value && value < 0 ? 'negative' : 'positive'), css: cellBarStyles }),\n        truncateLongCells ? ___EmotionJSX(\"div\", { className: \"dt-truncate-cell\", style: columnWidth ? { width: columnWidth } : undefined },\n        text) :\n        text);\n\n      },\n      Header: (_ref9) => {let { column: col, onClick, style, onDragStart, onDrop } = _ref9;return ___EmotionJSX(\"th\", _extends({ title: t('Shift + Click to sort by multiple columns'), className: [className, col.isSorted ? 'is-sorted' : ''].join(' '), style: {\n            ...sharedStyle,\n            ...style },\n          onClick: onClick, \"data-column-name\": col.id }, allowRearrangeColumns && {\n          draggable: 'true',\n          onDragStart,\n          onDragOver: (e) => e.preventDefault(),\n          onDragEnter: (e) => e.preventDefault(),\n          onDrop }),\n\n\n        config.columnWidth ?\n        // column width hint\n        ___EmotionJSX(\"div\", { style: {\n            width: columnWidth,\n            height: 0.01 } }) :\n        null,\n        ___EmotionJSX(\"div\", { \"data-column-name\": col.id, css: _ref10 },\n\n\n\n        ___EmotionJSX(\"span\", { \"data-column-name\": col.id }, label),\n        ___EmotionJSX(SortIcon, { column: col })));},\n\n\n      Footer: totals ? i === 0 ? ___EmotionJSX(\"th\", null, t('Totals')) : ___EmotionJSX(\"td\", { style: sharedStyle },\n      ___EmotionJSX(\"strong\", null, formatColumnValue(column, totals[key])[1])) :\n      undefined,\n      sortDescFirst: sortDesc,\n      sortType: getSortTypeByDataType(dataType) };\n\n  }, [\n  defaultAlignPN,\n  defaultColorPN,\n  emitCrossFilters,\n  getValueRange,\n  isActiveFilterValue,\n  isRawRecords,\n  showCellBars,\n  sortDesc,\n  toggleFilter,\n  totals,\n  columnColorFormatters,\n  columnOrderToggle]);\n\n  const columns = useMemo(() => columnsMeta.map(getColumnConfigs), [columnsMeta, getColumnConfigs]);\n  const handleServerPaginationChange = useCallback((pageNumber, pageSize) => {\n    updateExternalFormData(setDataMask, pageNumber, pageSize);\n  }, [setDataMask]);\n  const handleSizeChange = useCallback((_ref11) => {let { width, height } = _ref11;\n    setTableSize({ width, height });\n  }, []);\n  useLayoutEffect(() => {\n    // After initial load the table should resize only when the new sizes\n    // Are not only scrollbar updates, otherwise, the table would twicth\n    const scrollBarSize = getScrollBarSize();\n    const { width: tableWidth, height: tableHeight } = tableSize;\n    // Table is increasing its original size\n    if (width - tableWidth > scrollBarSize ||\n    height - tableHeight > scrollBarSize) {\n      handleSizeChange({\n        width: width - scrollBarSize,\n        height: height - scrollBarSize });\n\n    } else\n    if (tableWidth - width > scrollBarSize ||\n    tableHeight - height > scrollBarSize) {\n      // Table is decreasing its original size\n      handleSizeChange({\n        width,\n        height });\n\n    }\n  }, [width, height, handleSizeChange, tableSize]);\n  const { width: widthFromState, height: heightFromState } = tableSize;\n  return ___EmotionJSX(Styles, null,\n  ___EmotionJSX(DataTable, { columns: columns, data: data, rowCount: rowCount, tableClassName: \"table table-striped table-condensed\", pageSize: pageSize, serverPaginationData: serverPaginationData, pageSizeOptions: pageSizeOptions, width: widthFromState, height: heightFromState, serverPagination: serverPagination, onServerPaginationChange: handleServerPaginationChange, onColumnOrderChange: () => setColumnOrderToggle(!columnOrderToggle)\n    // 9 page items in > 340px works well even for 100+ pages\n    , maxPageItemCount: width > 340 ? 9 : 7, noResults: getNoResultsMessage, searchInput: includeSearch && SearchInput, selectPageSize: pageSize !== null && SelectPageSize\n    // not in use in Superset, but needed for unit tests\n    , sticky: sticky }));\n\n}__signature__(TableChart, \"useCallback{timestampFormatter}\\nuseState{[tableSize, setTableSize]({\\n        width: 0,\\n        height: 0,\\n    })}\\nuseState{[columnOrderToggle, setColumnOrderToggle](false)}\\nuseMemo{pageSizeOptions}\\nuseCallback{getValueRange}\\nuseCallback{isActiveFilterValue}\\nuseCallback{toggleFilter}\\nuseCallback{getColumnConfigs}\\nuseMemo{columns}\\nuseCallback{handleServerPaginationChange}\\nuseCallback{handleSizeChange}\\nuseLayoutEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getSortTypeByDataType, \"getSortTypeByDataType\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(cellWidth, \"cellWidth\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(cellOffset, \"cellOffset\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(cellBackground, \"cellBackground\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(SortIcon, \"SortIcon\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(SearchInput, \"SearchInput\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(SelectPageSize, \"SelectPageSize\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(getNoResultsMessage, \"getNoResultsMessage\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(TableChart, \"TableChart\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useCallback","useLayoutEffect","useMemo","useState","extent","d3Extent","max","d3Max","FaSort","FaSortDown","FaSortDesc","FaSortUp","FaSortAsc","cx","DTTM_ALIAS","ensureIsArray","GenericDataType","getSelectedText","getTimeFormatterForGranularity","styled","css","t","tn","DataTable","Styles","formatColumnValue","PAGE_SIZE_OPTIONS","updateExternalFormData","getScrollBarSize","getSortTypeByDataType","dataType","TEMPORAL","STRING","cellWidth","value","valueRange","alignPositiveNegative","minValue","maxValue","perc","Math","abs","round","posExtent","negExtent","min","tot","perc2","cellOffset","cellBackground","colorPositiveNegative","r","SortIcon","column","isSorted","isSortedDesc","sortIcon","SearchInput","count","onChange","SelectPageSize","options","current","Number","e","target","map","size","text","Array","isArray","option","getNoResultsMessage","filter","TableChart","props","timeGrain","height","width","data","totals","isRawRecords","rowCount","columns","columnsMeta","defaultAlignPN","defaultColorPN","includeSearch","pageSize","serverPagination","serverPaginationData","setDataMask","showCellBars","sortDesc","filters","sticky","columnColorFormatters","allowRearrangeColumns","onContextMenu","emitCrossFilters","timestampFormatter","tableSize","setTableSize","columnOrderToggle","setColumnOrderToggle","pageSizeOptions","getServerPagination","n","length","getValueRange","key","nums","row","isActiveFilterValue","val","getCrossFilterDataMask","updatedFilters","groupBy","Object","keys","groupByValues","values","labelElements","forEach","isTimestamp","col","filterValues","valueLabels","push","join","dataMask","extraFormData","op","el","Date","getTime","grain","undefined","filterState","label","isCurrentValueSelected","toggleFilter","getSharedStyle","isNumeric","config","textAlign","horizontalAlign","handleContextMenu","cellPoint","clientX","clientY","drillToDetailFilters","isMetric","dataRecordValue","formattedVal","drillToDetail","crossFilter","drillBy","groupbyFieldName","getColumnConfigs","i","columnWidth","isNaN","sharedStyle","truncateLongCells","hasColumnColorFormatters","className","id","String","accessor","datum","Cell","isHtml","html","__html","backgroundColor","formatter","formatterResult","getColorFromValue","StyledCell","td","cellBarStyles","cellProps","title","onClick","preventDefault","stopPropagation","original","nativeEvent","Header","style","onDragStart","onDrop","draggable","onDragOver","onDragEnter","Footer","sortDescFirst","sortType","handleServerPaginationChange","pageNumber","handleSizeChange","scrollBarSize","tableWidth","tableHeight","widthFromState","heightFromState"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  CSSProperties,\n  useCallback,\n  useLayoutEffect,\n  useMemo,\n  useState,\n  MouseEvent,\n} from 'react';\nimport {\n  ColumnInstance,\n  ColumnWithLooseAccessor,\n  DefaultSortTypes,\n  Row,\n} from 'react-table';\nimport { extent as d3Extent, max as d3Max } from 'd3-array';\nimport { FaSort } from '@react-icons/all-files/fa/FaSort';\nimport { FaSortDown as FaSortDesc } from '@react-icons/all-files/fa/FaSortDown';\nimport { FaSortUp as FaSortAsc } from '@react-icons/all-files/fa/FaSortUp';\nimport cx from 'classnames';\nimport {\n  DataRecord,\n  DataRecordValue,\n  DTTM_ALIAS,\n  ensureIsArray,\n  GenericDataType,\n  getSelectedText,\n  getTimeFormatterForGranularity,\n  BinaryQueryObjectFilterClause,\n  styled,\n  css,\n  t,\n  tn,\n} from '@superset-ui/core';\n\nimport { DataColumnMeta, TableChartTransformedProps } from './types';\nimport DataTable, {\n  DataTableProps,\n  SearchInputProps,\n  SelectPageSizeRendererProps,\n  SizeOption,\n} from './DataTable';\n\nimport Styles from './Styles';\nimport { formatColumnValue } from './utils/formatValue';\nimport { PAGE_SIZE_OPTIONS } from './consts';\nimport { updateExternalFormData } from './DataTable/utils/externalAPIs';\nimport getScrollBarSize from './DataTable/utils/getScrollBarSize';\n\ntype ValueRange = [number, number];\n\ninterface TableSize {\n  width: number;\n  height: number;\n}\n\n/**\n * Return sortType based on data type\n */\nfunction getSortTypeByDataType(dataType: GenericDataType): DefaultSortTypes {\n  if (dataType === GenericDataType.TEMPORAL) {\n    return 'datetime';\n  }\n  if (dataType === GenericDataType.STRING) {\n    return 'alphanumeric';\n  }\n  return 'basic';\n}\n\n/**\n * Cell background width calculation for horizontal bar chart\n */\nfunction cellWidth({\n  value,\n  valueRange,\n  alignPositiveNegative,\n}: {\n  value: number;\n  valueRange: ValueRange;\n  alignPositiveNegative: boolean;\n}) {\n  const [minValue, maxValue] = valueRange;\n  if (alignPositiveNegative) {\n    const perc = Math.abs(Math.round((value / maxValue) * 100));\n    return perc;\n  }\n  const posExtent = Math.abs(Math.max(maxValue, 0));\n  const negExtent = Math.abs(Math.min(minValue, 0));\n  const tot = posExtent + negExtent;\n  const perc2 = Math.round((Math.abs(value) / tot) * 100);\n  return perc2;\n}\n\n/**\n * Cell left margin (offset) calculation for horizontal bar chart elements\n * when alignPositiveNegative is not set\n */\nfunction cellOffset({\n  value,\n  valueRange,\n  alignPositiveNegative,\n}: {\n  value: number;\n  valueRange: ValueRange;\n  alignPositiveNegative: boolean;\n}) {\n  if (alignPositiveNegative) {\n    return 0;\n  }\n  const [minValue, maxValue] = valueRange;\n  const posExtent = Math.abs(Math.max(maxValue, 0));\n  const negExtent = Math.abs(Math.min(minValue, 0));\n  const tot = posExtent + negExtent;\n  return Math.round((Math.min(negExtent + value, negExtent) / tot) * 100);\n}\n\n/**\n * Cell background color calculation for horizontal bar chart\n */\nfunction cellBackground({\n  value,\n  colorPositiveNegative = false,\n}: {\n  value: number;\n  colorPositiveNegative: boolean;\n}) {\n  const r = colorPositiveNegative && value < 0 ? 150 : 0;\n  return `rgba(${r},0,0,0.2)`;\n}\n\nfunction SortIcon<D extends object>({ column }: { column: ColumnInstance<D> }) {\n  const { isSorted, isSortedDesc } = column;\n  let sortIcon = <FaSort />;\n  if (isSorted) {\n    sortIcon = isSortedDesc ? <FaSortDesc /> : <FaSortAsc />;\n  }\n  return sortIcon;\n}\n\nfunction SearchInput({ count, value, onChange }: SearchInputProps) {\n  return (\n    <span className=\"dt-global-filter\">\n      {t('Search')}{' '}\n      <input\n        className=\"form-control input-sm\"\n        placeholder={tn('search.num_records', count)}\n        value={value}\n        onChange={onChange}\n      />\n    </span>\n  );\n}\n\nfunction SelectPageSize({\n  options,\n  current,\n  onChange,\n}: SelectPageSizeRendererProps) {\n  return (\n    <span className=\"dt-select-page-size form-inline\">\n      {t('page_size.show')}{' '}\n      <select\n        className=\"form-control input-sm\"\n        value={current}\n        onBlur={() => {}}\n        onChange={e => {\n          onChange(Number((e.target as HTMLSelectElement).value));\n        }}\n      >\n        {options.map(option => {\n          const [size, text] = Array.isArray(option)\n            ? option\n            : [option, option];\n          return (\n            <option key={size} value={size}>\n              {text}\n            </option>\n          );\n        })}\n      </select>{' '}\n      {t('page_size.entries')}\n    </span>\n  );\n}\n\nconst getNoResultsMessage = (filter: string) =>\n  filter ? t('No matching records found') : t('No records found');\n\nexport default function TableChart<D extends DataRecord = DataRecord>(\n  props: TableChartTransformedProps<D> & {\n    sticky?: DataTableProps<D>['sticky'];\n  },\n) {\n  const {\n    timeGrain,\n    height,\n    width,\n    data,\n    totals,\n    isRawRecords,\n    rowCount = 0,\n    columns: columnsMeta,\n    alignPositiveNegative: defaultAlignPN = false,\n    colorPositiveNegative: defaultColorPN = false,\n    includeSearch = false,\n    pageSize = 0,\n    serverPagination = false,\n    serverPaginationData,\n    setDataMask,\n    showCellBars = true,\n    sortDesc = false,\n    filters,\n    sticky = true, // whether to use sticky header\n    columnColorFormatters,\n    allowRearrangeColumns = false,\n    onContextMenu,\n    emitCrossFilters,\n  } = props;\n  const timestampFormatter = useCallback(\n    value => getTimeFormatterForGranularity(timeGrain)(value),\n    [timeGrain],\n  );\n  const [tableSize, setTableSize] = useState<TableSize>({\n    width: 0,\n    height: 0,\n  });\n  // keep track of whether column order changed, so that column widths can too\n  const [columnOrderToggle, setColumnOrderToggle] = useState(false);\n\n  // only take relevant page size options\n  const pageSizeOptions = useMemo(() => {\n    const getServerPagination = (n: number) => n <= rowCount;\n    return PAGE_SIZE_OPTIONS.filter(([n]) =>\n      serverPagination ? getServerPagination(n) : n <= 2 * data.length,\n    ) as SizeOption[];\n  }, [data.length, rowCount, serverPagination]);\n\n  const getValueRange = useCallback(\n    function getValueRange(key: string, alignPositiveNegative: boolean) {\n      if (typeof data?.[0]?.[key] === 'number') {\n        const nums = data.map(row => row[key]) as number[];\n        return (\n          alignPositiveNegative\n            ? [0, d3Max(nums.map(Math.abs))]\n            : d3Extent(nums)\n        ) as ValueRange;\n      }\n      return null;\n    },\n    [data],\n  );\n\n  const isActiveFilterValue = useCallback(\n    function isActiveFilterValue(key: string, val: DataRecordValue) {\n      return !!filters && filters[key]?.includes(val);\n    },\n    [filters],\n  );\n\n  const getCrossFilterDataMask = (key: string, value: DataRecordValue) => {\n    let updatedFilters = { ...(filters || {}) };\n    if (filters && isActiveFilterValue(key, value)) {\n      updatedFilters = {};\n    } else {\n      updatedFilters = {\n        [key]: [value],\n      };\n    }\n    if (\n      Array.isArray(updatedFilters[key]) &&\n      updatedFilters[key].length === 0\n    ) {\n      delete updatedFilters[key];\n    }\n\n    const groupBy = Object.keys(updatedFilters);\n    const groupByValues = Object.values(updatedFilters);\n    const labelElements: string[] = [];\n    groupBy.forEach(col => {\n      const isTimestamp = col === DTTM_ALIAS;\n      const filterValues = ensureIsArray(updatedFilters?.[col]);\n      if (filterValues.length) {\n        const valueLabels = filterValues.map(value =>\n          isTimestamp ? timestampFormatter(value) : value,\n        );\n        labelElements.push(`${valueLabels.join(', ')}`);\n      }\n    });\n\n    return {\n      dataMask: {\n        extraFormData: {\n          filters:\n            groupBy.length === 0\n              ? []\n              : groupBy.map(col => {\n                  const val = ensureIsArray(updatedFilters?.[col]);\n                  if (!val.length)\n                    return {\n                      col,\n                      op: 'IS NULL' as const,\n                    };\n                  return {\n                    col,\n                    op: 'IN' as const,\n                    val: val.map(el =>\n                      el instanceof Date ? el.getTime() : el!,\n                    ),\n                    grain: col === DTTM_ALIAS ? timeGrain : undefined,\n                  };\n                }),\n        },\n        filterState: {\n          label: labelElements.join(', '),\n          value: groupByValues.length ? groupByValues : null,\n          filters:\n            updatedFilters && Object.keys(updatedFilters).length\n              ? updatedFilters\n              : null,\n        },\n      },\n      isCurrentValueSelected: isActiveFilterValue(key, value),\n    };\n  };\n\n  const toggleFilter = useCallback(\n    function toggleFilter(key: string, val: DataRecordValue) {\n      if (!emitCrossFilters) {\n        return;\n      }\n      setDataMask(getCrossFilterDataMask(key, val).dataMask);\n    },\n    [emitCrossFilters, getCrossFilterDataMask, setDataMask],\n  );\n\n  const getSharedStyle = (column: DataColumnMeta): CSSProperties => {\n    const { isNumeric, config = {} } = column;\n    const textAlign = config.horizontalAlign\n      ? config.horizontalAlign\n      : isNumeric\n      ? 'right'\n      : 'left';\n    return {\n      textAlign,\n    };\n  };\n\n  const handleContextMenu =\n    onContextMenu && !isRawRecords\n      ? (\n          value: D,\n          cellPoint: {\n            key: string;\n            value: DataRecordValue;\n            isMetric?: boolean;\n          },\n          clientX: number,\n          clientY: number,\n        ) => {\n          const drillToDetailFilters: BinaryQueryObjectFilterClause[] = [];\n          columnsMeta.forEach(col => {\n            if (!col.isMetric) {\n              const dataRecordValue = value[col.key];\n              drillToDetailFilters.push({\n                col: col.key,\n                op: '==',\n                val: dataRecordValue as string | number | boolean,\n                formattedVal: formatColumnValue(col, dataRecordValue)[1],\n              });\n            }\n          });\n          onContextMenu(clientX, clientY, {\n            drillToDetail: drillToDetailFilters,\n            crossFilter: cellPoint.isMetric\n              ? undefined\n              : getCrossFilterDataMask(cellPoint.key, cellPoint.value),\n            drillBy: cellPoint.isMetric\n              ? undefined\n              : {\n                  filters: [\n                    {\n                      col: cellPoint.key,\n                      op: '==',\n                      val: cellPoint.value as string | number | boolean,\n                    },\n                  ],\n                  groupbyFieldName: 'groupby',\n                },\n          });\n        }\n      : undefined;\n\n  const getColumnConfigs = useCallback(\n    (column: DataColumnMeta, i: number): ColumnWithLooseAccessor<D> => {\n      const { key, label, isNumeric, dataType, isMetric, config = {} } = column;\n      const columnWidth = Number.isNaN(Number(config.columnWidth))\n        ? config.columnWidth\n        : Number(config.columnWidth);\n\n      // inline style for both th and td cell\n      const sharedStyle: CSSProperties = getSharedStyle(column);\n\n      const alignPositiveNegative =\n        config.alignPositiveNegative === undefined\n          ? defaultAlignPN\n          : config.alignPositiveNegative;\n      const colorPositiveNegative =\n        config.colorPositiveNegative === undefined\n          ? defaultColorPN\n          : config.colorPositiveNegative;\n\n      const { truncateLongCells } = config;\n\n      const hasColumnColorFormatters =\n        isNumeric &&\n        Array.isArray(columnColorFormatters) &&\n        columnColorFormatters.length > 0;\n\n      const valueRange =\n        !hasColumnColorFormatters &&\n        (config.showCellBars === undefined\n          ? showCellBars\n          : config.showCellBars) &&\n        (isMetric || isRawRecords) &&\n        getValueRange(key, alignPositiveNegative);\n\n      let className = '';\n      if (emitCrossFilters && !isMetric) {\n        className += ' dt-is-filter';\n      }\n\n      return {\n        id: String(i), // to allow duplicate column keys\n        // must use custom accessor to allow `.` in column names\n        // typing is incorrect in current version of `@types/react-table`\n        // so we ask TS not to check.\n        accessor: ((datum: D) => datum[key]) as never,\n        Cell: ({ value, row }: { value: DataRecordValue; row: Row<D> }) => {\n          const [isHtml, text] = formatColumnValue(column, value);\n          const html = isHtml ? { __html: text } : undefined;\n\n          let backgroundColor;\n          if (hasColumnColorFormatters) {\n            columnColorFormatters!\n              .filter(formatter => formatter.column === column.key)\n              .forEach(formatter => {\n                const formatterResult = value\n                  ? formatter.getColorFromValue(value as number)\n                  : false;\n                if (formatterResult) {\n                  backgroundColor = formatterResult;\n                }\n              });\n          }\n\n          const StyledCell = styled.td`\n            text-align: ${sharedStyle.textAlign};\n            white-space: ${value instanceof Date ? 'nowrap' : undefined};\n            position: relative;\n            background: ${backgroundColor || undefined};\n          `;\n\n          const cellBarStyles = css`\n            position: absolute;\n            height: 100%;\n            display: block;\n            top: 0;\n            ${valueRange &&\n            `\n                width: ${`${cellWidth({\n                  value: value as number,\n                  valueRange,\n                  alignPositiveNegative,\n                })}%`};\n                left: ${`${cellOffset({\n                  value: value as number,\n                  valueRange,\n                  alignPositiveNegative,\n                })}%`};\n                background-color: ${cellBackground({\n                  value: value as number,\n                  colorPositiveNegative,\n                })};\n              `}\n          `;\n\n          const cellProps = {\n            // show raw number in title in case of numeric values\n            title: typeof value === 'number' ? String(value) : undefined,\n            onClick:\n              emitCrossFilters && !valueRange && !isMetric\n                ? () => {\n                    // allow selecting text in a cell\n                    if (!getSelectedText()) {\n                      toggleFilter(key, value);\n                    }\n                  }\n                : undefined,\n            onContextMenu: (e: MouseEvent) => {\n              if (handleContextMenu) {\n                e.preventDefault();\n                e.stopPropagation();\n                handleContextMenu(\n                  row.original,\n                  { key, value, isMetric },\n                  e.nativeEvent.clientX,\n                  e.nativeEvent.clientY,\n                );\n              }\n            },\n            className: [\n              className,\n              value == null ? 'dt-is-null' : '',\n              isActiveFilterValue(key, value) ? ' dt-is-active-filter' : '',\n            ].join(' '),\n          };\n          if (html) {\n            if (truncateLongCells) {\n              // eslint-disable-next-line react/no-danger\n              return (\n                <StyledCell {...cellProps}>\n                  <div\n                    className=\"dt-truncate-cell\"\n                    style={columnWidth ? { width: columnWidth } : undefined}\n                    dangerouslySetInnerHTML={html}\n                  />\n                </StyledCell>\n              );\n            }\n            // eslint-disable-next-line react/no-danger\n            return <StyledCell {...cellProps} dangerouslySetInnerHTML={html} />;\n          }\n          // If cellProps renders textContent already, then we don't have to\n          // render `Cell`. This saves some time for large tables.\n          return (\n            <StyledCell {...cellProps}>\n              {valueRange && (\n                <div\n                  /* The following classes are added to support custom CSS styling */\n                  className={cx(\n                    'cell-bar',\n                    value && value < 0 ? 'negative' : 'positive',\n                  )}\n                  css={cellBarStyles}\n                />\n              )}\n              {truncateLongCells ? (\n                <div\n                  className=\"dt-truncate-cell\"\n                  style={columnWidth ? { width: columnWidth } : undefined}\n                >\n                  {text}\n                </div>\n              ) : (\n                text\n              )}\n            </StyledCell>\n          );\n        },\n        Header: ({ column: col, onClick, style, onDragStart, onDrop }) => (\n          <th\n            title={t('Shift + Click to sort by multiple columns')}\n            className={[className, col.isSorted ? 'is-sorted' : ''].join(' ')}\n            style={{\n              ...sharedStyle,\n              ...style,\n            }}\n            onClick={onClick}\n            data-column-name={col.id}\n            {...(allowRearrangeColumns && {\n              draggable: 'true',\n              onDragStart,\n              onDragOver: e => e.preventDefault(),\n              onDragEnter: e => e.preventDefault(),\n              onDrop,\n            })}\n          >\n            {/* can't use `columnWidth &&` because it may also be zero */}\n            {config.columnWidth ? (\n              // column width hint\n              <div\n                style={{\n                  width: columnWidth,\n                  height: 0.01,\n                }}\n              />\n            ) : null}\n            <div\n              data-column-name={col.id}\n              css={{\n                display: 'inline-flex',\n                alignItems: 'flex-end',\n              }}\n            >\n              <span data-column-name={col.id}>{label}</span>\n              <SortIcon column={col} />\n            </div>\n          </th>\n        ),\n        Footer: totals ? (\n          i === 0 ? (\n            <th>{t('Totals')}</th>\n          ) : (\n            <td style={sharedStyle}>\n              <strong>{formatColumnValue(column, totals[key])[1]}</strong>\n            </td>\n          )\n        ) : undefined,\n        sortDescFirst: sortDesc,\n        sortType: getSortTypeByDataType(dataType),\n      };\n    },\n    [\n      defaultAlignPN,\n      defaultColorPN,\n      emitCrossFilters,\n      getValueRange,\n      isActiveFilterValue,\n      isRawRecords,\n      showCellBars,\n      sortDesc,\n      toggleFilter,\n      totals,\n      columnColorFormatters,\n      columnOrderToggle,\n    ],\n  );\n\n  const columns = useMemo(\n    () => columnsMeta.map(getColumnConfigs),\n    [columnsMeta, getColumnConfigs],\n  );\n\n  const handleServerPaginationChange = useCallback(\n    (pageNumber: number, pageSize: number) => {\n      updateExternalFormData(setDataMask, pageNumber, pageSize);\n    },\n    [setDataMask],\n  );\n\n  const handleSizeChange = useCallback(\n    ({ width, height }: { width: number; height: number }) => {\n      setTableSize({ width, height });\n    },\n    [],\n  );\n\n  useLayoutEffect(() => {\n    // After initial load the table should resize only when the new sizes\n    // Are not only scrollbar updates, otherwise, the table would twicth\n    const scrollBarSize = getScrollBarSize();\n    const { width: tableWidth, height: tableHeight } = tableSize;\n    // Table is increasing its original size\n    if (\n      width - tableWidth > scrollBarSize ||\n      height - tableHeight > scrollBarSize\n    ) {\n      handleSizeChange({\n        width: width - scrollBarSize,\n        height: height - scrollBarSize,\n      });\n    } else if (\n      tableWidth - width > scrollBarSize ||\n      tableHeight - height > scrollBarSize\n    ) {\n      // Table is decreasing its original size\n      handleSizeChange({\n        width,\n        height,\n      });\n    }\n  }, [width, height, handleSizeChange, tableSize]);\n\n  const { width: widthFromState, height: heightFromState } = tableSize;\n\n  return (\n    <Styles>\n      <DataTable<D>\n        columns={columns}\n        data={data}\n        rowCount={rowCount}\n        tableClassName=\"table table-striped table-condensed\"\n        pageSize={pageSize}\n        serverPaginationData={serverPaginationData}\n        pageSizeOptions={pageSizeOptions}\n        width={widthFromState}\n        height={heightFromState}\n        serverPagination={serverPagination}\n        onServerPaginationChange={handleServerPaginationChange}\n        onColumnOrderChange={() => setColumnOrderToggle(!columnOrderToggle)}\n        // 9 page items in > 340px works well even for 100+ pages\n        maxPageItemCount={width > 340 ? 9 : 7}\n        noResults={getNoResultsMessage}\n        searchInput={includeSearch && SearchInput}\n        selectPageSize={pageSize !== null && SelectPageSize}\n        // not in use in Superset, but needed for unit tests\n        sticky={sticky}\n      />\n    </Styles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}