{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { FeatureFlag, getExtensionsRegistry, styled, SupersetClient, t } from '@superset-ui/core';\nimport React, { useState, useMemo, useEffect } from 'react';\nimport rison from 'rison';\nimport { useSelector } from 'react-redux';\nimport { useQueryParams, BooleanParam } from 'use-query-params';\nimport { LocalStorageKeys, setItem } from 'src/utils/localStorageHelpers';\nimport Loading from 'src/components/Loading';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createErrorHandler, uploadUserPerms } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu from 'src/features/home/SubMenu';\nimport DeleteModal from 'src/components/DeleteModal';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport ListView, { FilterOperator } from 'src/components/ListView';\nimport handleResourceExport from 'src/utils/export';\nimport DatabaseModal from 'src/features/databases/DatabaseModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst extensionsRegistry = getExtensionsRegistry();\nconst DatabaseDeleteRelatedExtension = extensionsRegistry.get('database.delete.related');\nconst dbConfigExtraExtension = extensionsRegistry.get('databaseconnection.extraOption');\nconst PAGE_SIZE = 25;\nconst IconCheck = styled(Icons.Check)`\n  color: ${(_ref) => {let { theme } = _ref;return theme.colors.grayscale.dark1;}};\n`;\nconst IconCancelX = styled(Icons.CancelX)`\n  color: ${(_ref2) => {let { theme } = _ref2;return theme.colors.grayscale.dark1;}};\n`;\nconst Actions = styled.div`\n  color: ${(_ref3) => {let { theme } = _ref3;return theme.colors.grayscale.base;}};\n\n  .action-button {\n    display: inline-block;\n    height: 100%;\n  }\n`;\nfunction BooleanDisplay(_ref4) {let { value } = _ref4;\n  return value ? ___EmotionJSX(IconCheck, null) : ___EmotionJSX(IconCancelX, null);\n}\nfunction DatabaseList(_ref5) {let { addDangerToast, addSuccessToast } = _ref5;\n  const { state: { loading, resourceCount: databaseCount, resourceCollection: databases }, hasPerm, fetchData, refreshData } = useListViewResource('database', t('database'), addDangerToast);\n  const user = useSelector((state) => state.user);\n  const showDatabaseModal = getUrlParam(URL_PARAMS.showDatabaseModal);\n  const [query, setQuery] = useQueryParams({\n    databaseAdded: BooleanParam });\n\n  const [databaseModalOpen, setDatabaseModalOpen] = useState(showDatabaseModal || false);\n  const [databaseCurrentlyDeleting, setDatabaseCurrentlyDeleting] = useState(null);\n  const [currentDatabase, setCurrentDatabase] = useState(null);\n  const [allowUploads, setAllowUploads] = useState(false);\n  const isAdmin = isUserAdmin(user);\n  const showUploads = allowUploads || isAdmin;\n  const [preparingExport, setPreparingExport] = useState(false);\n  const { roles } = user;\n  const { CSV_EXTENSIONS, COLUMNAR_EXTENSIONS, EXCEL_EXTENSIONS, ALLOWED_EXTENSIONS } = useSelector((state) => state.common.conf);\n  useEffect(() => {\n    if (query != null && query.databaseAdded) {\n      setQuery({ databaseAdded: undefined });\n      refreshData();\n    }\n  }, [query, setQuery, refreshData]);\n  const openDatabaseDeleteModal = (database) => SupersetClient.get({\n    endpoint: `/api/v1/database/${database.id}/related_objects/` }).\n\n  then((_ref6) => {let { json = {} } = _ref6;\n    setDatabaseCurrentlyDeleting({\n      ...database,\n      chart_count: json.charts.count,\n      dashboard_count: json.dashboards.count,\n      sqllab_tab_count: json.sqllab_tab_states.count });\n\n  }).\n  catch(createErrorHandler((errMsg) => t('An error occurred while fetching database related data: %s', errMsg)));\n  function handleDatabaseDelete(database) {\n    const { id, database_name: dbName } = database;\n    SupersetClient.delete({\n      endpoint: `/api/v1/database/${id}` }).\n    then(() => {\n      refreshData();\n      addSuccessToast(t('Deleted: %s', dbName));\n      // Remove any extension-related data\n      if (dbConfigExtraExtension != null && dbConfigExtraExtension.onDelete) {\n        dbConfigExtraExtension.onDelete(database);\n      }\n      // Delete user-selected db from local storage\n      setItem(LocalStorageKeys.db, null);\n      // Close delete modal\n      setDatabaseCurrentlyDeleting(null);\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting %s: %s', dbName, errMsg))));\n  }\n  function handleDatabaseEditModal(_temp) {let { database = null, modalOpen = false } = _temp === void 0 ? {} : _temp;\n    // Set database and modal\n    setCurrentDatabase(database);\n    setDatabaseModalOpen(modalOpen);\n  }\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport = hasPerm('can_export') && isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT);\n  const { canUploadCSV, canUploadColumnar, canUploadExcel } = uploadUserPerms(roles, CSV_EXTENSIONS, COLUMNAR_EXTENSIONS, EXCEL_EXTENSIONS, ALLOWED_EXTENSIONS);\n  const isDisabled = isAdmin && !allowUploads;\n  const uploadDropdownMenu = [\n  {\n    label: t('Upload file to database'),\n    childs: [\n    {\n      label: t('Upload CSV'),\n      name: 'Upload CSV file',\n      url: '/csvtodatabaseview/form',\n      perm: canUploadCSV && showUploads,\n      disable: isDisabled },\n\n    {\n      label: t('Upload columnar file'),\n      name: 'Upload columnar file',\n      url: '/columnartodatabaseview/form',\n      perm: canUploadColumnar && showUploads,\n      disable: isDisabled },\n\n    {\n      label: t('Upload Excel file'),\n      name: 'Upload Excel file',\n      url: '/exceltodatabaseview/form',\n      perm: canUploadExcel && showUploads,\n      disable: isDisabled }] }];\n\n\n\n\n  const hasFileUploadEnabled = () => {\n    const payload = {\n      filters: [\n      { col: 'allow_file_upload', opr: 'upload_is_enabled', value: true }] };\n\n\n    SupersetClient.get({\n      endpoint: `/api/v1/database/?q=${rison.encode(payload)}` }).\n    then((_ref7) => {var _json$result;let { json } = _ref7;\n      // There might be some existings Gsheets and Clickhouse DBs\n      // with allow_file_upload set as True which is not possible from now on\n      const allowedDatabasesWithFileUpload = (json == null ? void 0 : (_json$result = json.result) == null ? void 0 : _json$result.filter((database) => {var _database$engine_info;return database == null ? void 0 : (_database$engine_info = database.engine_information) == null ? void 0 : _database$engine_info.supports_file_upload;})) || [];\n      setAllowUploads((allowedDatabasesWithFileUpload == null ? void 0 : allowedDatabasesWithFileUpload.length) >= 1);\n    });\n  };\n  useEffect(() => hasFileUploadEnabled(), [databaseModalOpen]);\n  const filteredDropDown = uploadDropdownMenu.reduce((prev, cur) => {\n    // eslint-disable-next-line no-param-reassign\n    cur.childs = cur.childs.filter((item) => item.perm);\n    if (!cur.childs.length)\n    return prev;\n    prev.push(cur);\n    return prev;\n  }, []);\n  const menuData = {\n    activeChild: 'Databases',\n    dropDownLinks: filteredDropDown,\n    name: t('Databases') };\n\n  if (canCreate) {\n    menuData.buttons = [\n    {\n      'data-test': 'btn-create-database',\n      name: ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }), \" \", t('Database'), ' '),\n\n      buttonStyle: 'primary',\n      onClick: () => {\n        // Ensure modal will be opened in add mode\n        handleDatabaseEditModal({ modalOpen: true });\n      } }];\n\n\n  }\n  function handleDatabaseExport(database) {\n    if (database.id === undefined) {\n      return;\n    }\n    handleResourceExport('database', [database.id], () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  }\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n  const columns = useMemo(() => [\n  {\n    accessor: 'database_name',\n    Header: t('Database') },\n\n  {\n    accessor: 'backend',\n    Header: t('Backend'),\n    size: 'lg',\n    disableSortBy: true // TODO: api support for sorting by 'backend'\n  },\n  {\n    accessor: 'allow_run_async',\n    Header: ___EmotionJSX(Tooltip, { id: \"allow-run-async-header-tooltip\", title: t('Asynchronous query execution'), placement: \"top\" },\n    ___EmotionJSX(\"span\", null, t('AQE'))),\n\n    Cell: (_ref8) => {let { row: { original: { allow_run_async: allowRunAsync } } } = _ref8;return ___EmotionJSX(BooleanDisplay, { value: allowRunAsync });},\n    size: 'sm' },\n\n  {\n    accessor: 'allow_dml',\n    Header: ___EmotionJSX(Tooltip, { id: \"allow-dml-header-tooltip\", title: t('Allow data manipulation language'), placement: \"top\" },\n    ___EmotionJSX(\"span\", null, t('DML'))),\n\n    Cell: (_ref9) => {let { row: { original: { allow_dml: allowDML } } } = _ref9;return ___EmotionJSX(BooleanDisplay, { value: allowDML });},\n    size: 'sm' },\n\n  {\n    accessor: 'allow_file_upload',\n    Header: t('CSV upload'),\n    Cell: (_ref10) => {let { row: { original: { allow_file_upload: allowFileUpload } } } = _ref10;return ___EmotionJSX(BooleanDisplay, { value: allowFileUpload });},\n    size: 'md' },\n\n  {\n    accessor: 'expose_in_sqllab',\n    Header: t('Expose in SQL Lab'),\n    Cell: (_ref11) => {let { row: { original: { expose_in_sqllab: exposeInSqllab } } } = _ref11;return ___EmotionJSX(BooleanDisplay, { value: exposeInSqllab });},\n    size: 'md' },\n\n  {\n    accessor: 'created_by',\n    disableSortBy: true,\n    Header: t('Created by'),\n    Cell: (_ref12) => {let { row: { original: { created_by: createdBy } } } = _ref12;return createdBy ? `${createdBy.first_name} ${createdBy.last_name}` : '';},\n    size: 'xl' },\n\n  {\n    Cell: (_ref13) => {let { row: { original: { changed_on_delta_humanized: changedOn } } } = _ref13;return changedOn;},\n    Header: t('Last modified'),\n    accessor: 'changed_on_delta_humanized',\n    size: 'xl' },\n\n  {\n    Cell: (_ref14) => {let { row: { original } } = _ref14;\n      const handleEdit = () => handleDatabaseEditModal({ database: original, modalOpen: true });\n      const handleDelete = () => openDatabaseDeleteModal(original);\n      const handleExport = () => handleDatabaseExport(original);\n      if (!canEdit && !canDelete && !canExport) {\n        return null;\n      }\n      return ___EmotionJSX(Actions, { className: \"actions\" },\n      canDelete && ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: handleDelete },\n      ___EmotionJSX(Tooltip, { id: \"delete-action-tooltip\", title: t('Delete database'), placement: \"bottom\" },\n      ___EmotionJSX(Icons.Trash, null))),\n\n\n      canExport && ___EmotionJSX(Tooltip, { id: \"export-action-tooltip\", title: t('Export'), placement: \"bottom\" },\n      ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: handleExport },\n      ___EmotionJSX(Icons.Share, null))),\n\n\n      canEdit && ___EmotionJSX(Tooltip, { id: \"edit-action-tooltip\", title: t('Edit'), placement: \"bottom\" },\n      ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: handleEdit },\n      ___EmotionJSX(Icons.EditAlt, null))));\n\n\n\n    },\n    Header: t('Actions'),\n    id: 'actions',\n    hidden: !canEdit && !canDelete,\n    disableSortBy: true }],\n\n  [canDelete, canEdit, canExport]);\n  const filters = useMemo(() => [\n  {\n    Header: t('Expose in SQL Lab'),\n    key: 'expose_in_sql_lab',\n    id: 'expose_in_sqllab',\n    input: 'select',\n    operator: FilterOperator.equals,\n    unfilteredLabel: t('All'),\n    selects: [\n    { label: t('Yes'), value: true },\n    { label: t('No'), value: false }] },\n\n\n  {\n    Header: ___EmotionJSX(Tooltip, { id: \"allow-run-async-filter-header-tooltip\", title: t('Asynchronous query execution'), placement: \"top\" },\n    ___EmotionJSX(\"span\", null, t('AQE'))),\n\n    key: 'allow_run_async',\n    id: 'allow_run_async',\n    input: 'select',\n    operator: FilterOperator.equals,\n    unfilteredLabel: t('All'),\n    selects: [\n    { label: t('Yes'), value: true },\n    { label: t('No'), value: false }] },\n\n\n  {\n    Header: t('Search'),\n    key: 'search',\n    id: 'database_name',\n    input: 'search',\n    operator: FilterOperator.contains }],\n\n  []);\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, menuData),\n  ___EmotionJSX(DatabaseModal, { databaseId: currentDatabase == null ? void 0 : currentDatabase.id, show: databaseModalOpen, onHide: handleDatabaseEditModal, onDatabaseAdd: () => {\n      refreshData();\n    } }),\n  databaseCurrentlyDeleting && ___EmotionJSX(DeleteModal, { description: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(\"p\", null,\n    t('The database %s is linked to %s charts that appear on %s dashboards and users have %s SQL Lab tabs using this database open. Are you sure you want to continue? Deleting the database will break those objects.', databaseCurrentlyDeleting.database_name, databaseCurrentlyDeleting.chart_count, databaseCurrentlyDeleting.dashboard_count, databaseCurrentlyDeleting.sqllab_tab_count)),\n\n    DatabaseDeleteRelatedExtension && ___EmotionJSX(DatabaseDeleteRelatedExtension, { database: databaseCurrentlyDeleting })),\n    onConfirm: () => {\n      if (databaseCurrentlyDeleting) {\n        handleDatabaseDelete(databaseCurrentlyDeleting);\n      }\n    }, onHide: () => setDatabaseCurrentlyDeleting(null), open: true, title: t('Delete Database?') }),\n\n  ___EmotionJSX(ListView, { className: \"database-list-view\", columns: columns, count: databaseCount, data: databases, fetchData: fetchData, filters: filters, initialSort: initialSort, loading: loading, pageSize: PAGE_SIZE }),\n\n  preparingExport && ___EmotionJSX(Loading, null));\n\n}\nexport default withToasts(DatabaseList);","map":{"version":3,"mappings":"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","names":["FeatureFlag","getExtensionsRegistry","styled","SupersetClient","t","React","useState","useMemo","useEffect","rison","useSelector","useQueryParams","BooleanParam","LocalStorageKeys","setItem","Loading","isFeatureEnabled","useListViewResource","createErrorHandler","uploadUserPerms","withToasts","SubMenu","DeleteModal","getUrlParam","URL_PARAMS","Tooltip","Icons","isUserAdmin","ListView","FilterOperator","handleResourceExport","DatabaseModal","extensionsRegistry","DatabaseDeleteRelatedExtension","get","dbConfigExtraExtension","PAGE_SIZE","IconCheck","Check","theme","colors","grayscale","dark1","IconCancelX","CancelX","Actions","div","base","BooleanDisplay","value","DatabaseList","addDangerToast","addSuccessToast","state","loading","resourceCount","databaseCount","resourceCollection","databases","hasPerm","fetchData","refreshData","user","showDatabaseModal","query","setQuery","databaseAdded","databaseModalOpen","setDatabaseModalOpen","databaseCurrentlyDeleting","setDatabaseCurrentlyDeleting","currentDatabase","setCurrentDatabase","allowUploads","setAllowUploads","isAdmin","showUploads","preparingExport","setPreparingExport","roles","CSV_EXTENSIONS","COLUMNAR_EXTENSIONS","EXCEL_EXTENSIONS","ALLOWED_EXTENSIONS","common","conf","undefined","openDatabaseDeleteModal","database","endpoint","id","then","json","chart_count","charts","count","dashboard_count","dashboards","sqllab_tab_count","sqllab_tab_states","catch","errMsg","handleDatabaseDelete","database_name","dbName","delete","onDelete","db","handleDatabaseEditModal","modalOpen","canCreate","canEdit","canDelete","canExport","VERSIONED_EXPORT","canUploadCSV","canUploadColumnar","canUploadExcel","isDisabled","uploadDropdownMenu","label","childs","name","url","perm","disable","hasFileUploadEnabled","payload","filters","col","opr","encode","allowedDatabasesWithFileUpload","result","filter","engine_information","supports_file_upload","length","filteredDropDown","reduce","prev","cur","item","push","menuData","activeChild","dropDownLinks","buttons","buttonStyle","onClick","handleDatabaseExport","initialSort","desc","columns","accessor","Header","size","disableSortBy","Cell","row","original","allow_run_async","allowRunAsync","allow_dml","allowDML","allow_file_upload","allowFileUpload","expose_in_sqllab","exposeInSqllab","created_by","createdBy","first_name","last_name","changed_on_delta_humanized","changedOn","handleEdit","handleDelete","handleExport","hidden","key","input","operator","equals","unfilteredLabel","selects","contains"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/DatabaseList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  FeatureFlag,\n  getExtensionsRegistry,\n  styled,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\nimport React, { useState, useMemo, useEffect } from 'react';\nimport rison from 'rison';\nimport { useSelector } from 'react-redux';\nimport { useQueryParams, BooleanParam } from 'use-query-params';\nimport { LocalStorageKeys, setItem } from 'src/utils/localStorageHelpers';\n\nimport Loading from 'src/components/Loading';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createErrorHandler, uploadUserPerms } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport DeleteModal from 'src/components/DeleteModal';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport ListView, { FilterOperator, Filters } from 'src/components/ListView';\nimport handleResourceExport from 'src/utils/export';\nimport { ExtensionConfigs } from 'src/features/home/types';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport type { MenuObjectProps } from 'src/types/bootstrapTypes';\nimport DatabaseModal from 'src/features/databases/DatabaseModal';\nimport { DatabaseObject } from 'src/features/databases/types';\n\nconst extensionsRegistry = getExtensionsRegistry();\nconst DatabaseDeleteRelatedExtension = extensionsRegistry.get(\n  'database.delete.related',\n);\nconst dbConfigExtraExtension = extensionsRegistry.get(\n  'databaseconnection.extraOption',\n);\n\nconst PAGE_SIZE = 25;\n\ninterface DatabaseDeleteObject extends DatabaseObject {\n  chart_count: number;\n  dashboard_count: number;\n  sqllab_tab_count: number;\n}\ninterface DatabaseListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n}\n\nconst IconCheck = styled(Icons.Check)`\n  color: ${({ theme }) => theme.colors.grayscale.dark1};\n`;\n\nconst IconCancelX = styled(Icons.CancelX)`\n  color: ${({ theme }) => theme.colors.grayscale.dark1};\n`;\n\nconst Actions = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n\n  .action-button {\n    display: inline-block;\n    height: 100%;\n  }\n`;\n\nfunction BooleanDisplay({ value }: { value: Boolean }) {\n  return value ? <IconCheck /> : <IconCancelX />;\n}\n\nfunction DatabaseList({ addDangerToast, addSuccessToast }: DatabaseListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: databaseCount,\n      resourceCollection: databases,\n    },\n    hasPerm,\n    fetchData,\n    refreshData,\n  } = useListViewResource<DatabaseObject>(\n    'database',\n    t('database'),\n    addDangerToast,\n  );\n  const user = useSelector<any, UserWithPermissionsAndRoles>(\n    state => state.user,\n  );\n  const showDatabaseModal = getUrlParam(URL_PARAMS.showDatabaseModal);\n\n  const [query, setQuery] = useQueryParams({\n    databaseAdded: BooleanParam,\n  });\n\n  const [databaseModalOpen, setDatabaseModalOpen] = useState<boolean>(\n    showDatabaseModal || false,\n  );\n  const [databaseCurrentlyDeleting, setDatabaseCurrentlyDeleting] =\n    useState<DatabaseDeleteObject | null>(null);\n  const [currentDatabase, setCurrentDatabase] = useState<DatabaseObject | null>(\n    null,\n  );\n  const [allowUploads, setAllowUploads] = useState<boolean>(false);\n  const isAdmin = isUserAdmin(user);\n  const showUploads = allowUploads || isAdmin;\n\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n  const { roles } = user;\n  const {\n    CSV_EXTENSIONS,\n    COLUMNAR_EXTENSIONS,\n    EXCEL_EXTENSIONS,\n    ALLOWED_EXTENSIONS,\n  } = useSelector<any, ExtensionConfigs>(state => state.common.conf);\n\n  useEffect(() => {\n    if (query?.databaseAdded) {\n      setQuery({ databaseAdded: undefined });\n      refreshData();\n    }\n  }, [query, setQuery, refreshData]);\n\n  const openDatabaseDeleteModal = (database: DatabaseObject) =>\n    SupersetClient.get({\n      endpoint: `/api/v1/database/${database.id}/related_objects/`,\n    })\n      .then(({ json = {} }) => {\n        setDatabaseCurrentlyDeleting({\n          ...database,\n          chart_count: json.charts.count,\n          dashboard_count: json.dashboards.count,\n          sqllab_tab_count: json.sqllab_tab_states.count,\n        });\n      })\n      .catch(\n        createErrorHandler(errMsg =>\n          t(\n            'An error occurred while fetching database related data: %s',\n            errMsg,\n          ),\n        ),\n      );\n\n  function handleDatabaseDelete(database: DatabaseObject) {\n    const { id, database_name: dbName } = database;\n    SupersetClient.delete({\n      endpoint: `/api/v1/database/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        addSuccessToast(t('Deleted: %s', dbName));\n\n        // Remove any extension-related data\n        if (dbConfigExtraExtension?.onDelete) {\n          dbConfigExtraExtension.onDelete(database);\n        }\n\n        // Delete user-selected db from local storage\n        setItem(LocalStorageKeys.db, null);\n\n        // Close delete modal\n        setDatabaseCurrentlyDeleting(null);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', dbName, errMsg)),\n      ),\n    );\n  }\n\n  function handleDatabaseEditModal({\n    database = null,\n    modalOpen = false,\n  }: { database?: DatabaseObject | null; modalOpen?: boolean } = {}) {\n    // Set database and modal\n    setCurrentDatabase(database);\n    setDatabaseModalOpen(modalOpen);\n  }\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport =\n    hasPerm('can_export') && isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT);\n\n  const { canUploadCSV, canUploadColumnar, canUploadExcel } = uploadUserPerms(\n    roles,\n    CSV_EXTENSIONS,\n    COLUMNAR_EXTENSIONS,\n    EXCEL_EXTENSIONS,\n    ALLOWED_EXTENSIONS,\n  );\n\n  const isDisabled = isAdmin && !allowUploads;\n\n  const uploadDropdownMenu = [\n    {\n      label: t('Upload file to database'),\n      childs: [\n        {\n          label: t('Upload CSV'),\n          name: 'Upload CSV file',\n          url: '/csvtodatabaseview/form',\n          perm: canUploadCSV && showUploads,\n          disable: isDisabled,\n        },\n        {\n          label: t('Upload columnar file'),\n          name: 'Upload columnar file',\n          url: '/columnartodatabaseview/form',\n          perm: canUploadColumnar && showUploads,\n          disable: isDisabled,\n        },\n        {\n          label: t('Upload Excel file'),\n          name: 'Upload Excel file',\n          url: '/exceltodatabaseview/form',\n          perm: canUploadExcel && showUploads,\n          disable: isDisabled,\n        },\n      ],\n    },\n  ];\n\n  const hasFileUploadEnabled = () => {\n    const payload = {\n      filters: [\n        { col: 'allow_file_upload', opr: 'upload_is_enabled', value: true },\n      ],\n    };\n    SupersetClient.get({\n      endpoint: `/api/v1/database/?q=${rison.encode(payload)}`,\n    }).then(({ json }: Record<string, any>) => {\n      // There might be some existings Gsheets and Clickhouse DBs\n      // with allow_file_upload set as True which is not possible from now on\n      const allowedDatabasesWithFileUpload =\n        json?.result?.filter(\n          (database: any) => database?.engine_information?.supports_file_upload,\n        ) || [];\n      setAllowUploads(allowedDatabasesWithFileUpload?.length >= 1);\n    });\n  };\n\n  useEffect(() => hasFileUploadEnabled(), [databaseModalOpen]);\n\n  const filteredDropDown = uploadDropdownMenu.reduce((prev, cur) => {\n    // eslint-disable-next-line no-param-reassign\n    cur.childs = cur.childs.filter(item => item.perm);\n    if (!cur.childs.length) return prev;\n    prev.push(cur);\n    return prev;\n  }, [] as MenuObjectProps[]);\n\n  const menuData: SubMenuProps = {\n    activeChild: 'Databases',\n    dropDownLinks: filteredDropDown,\n    name: t('Databases'),\n  };\n\n  if (canCreate) {\n    menuData.buttons = [\n      {\n        'data-test': 'btn-create-database',\n        name: (\n          <>\n            <i className=\"fa fa-plus\" /> {t('Database')}{' '}\n          </>\n        ),\n        buttonStyle: 'primary',\n        onClick: () => {\n          // Ensure modal will be opened in add mode\n          handleDatabaseEditModal({ modalOpen: true });\n        },\n      },\n    ];\n  }\n\n  function handleDatabaseExport(database: DatabaseObject) {\n    if (database.id === undefined) {\n      return;\n    }\n\n    handleResourceExport('database', [database.id], () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  }\n\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'database_name',\n        Header: t('Database'),\n      },\n      {\n        accessor: 'backend',\n        Header: t('Backend'),\n        size: 'lg',\n        disableSortBy: true, // TODO: api support for sorting by 'backend'\n      },\n      {\n        accessor: 'allow_run_async',\n        Header: (\n          <Tooltip\n            id=\"allow-run-async-header-tooltip\"\n            title={t('Asynchronous query execution')}\n            placement=\"top\"\n          >\n            <span>{t('AQE')}</span>\n          </Tooltip>\n        ),\n        Cell: ({\n          row: {\n            original: { allow_run_async: allowRunAsync },\n          },\n        }: {\n          row: { original: { allow_run_async: boolean } };\n        }) => <BooleanDisplay value={allowRunAsync} />,\n        size: 'sm',\n      },\n      {\n        accessor: 'allow_dml',\n        Header: (\n          <Tooltip\n            id=\"allow-dml-header-tooltip\"\n            title={t('Allow data manipulation language')}\n            placement=\"top\"\n          >\n            <span>{t('DML')}</span>\n          </Tooltip>\n        ),\n        Cell: ({\n          row: {\n            original: { allow_dml: allowDML },\n          },\n        }: any) => <BooleanDisplay value={allowDML} />,\n        size: 'sm',\n      },\n      {\n        accessor: 'allow_file_upload',\n        Header: t('CSV upload'),\n        Cell: ({\n          row: {\n            original: { allow_file_upload: allowFileUpload },\n          },\n        }: any) => <BooleanDisplay value={allowFileUpload} />,\n        size: 'md',\n      },\n      {\n        accessor: 'expose_in_sqllab',\n        Header: t('Expose in SQL Lab'),\n        Cell: ({\n          row: {\n            original: { expose_in_sqllab: exposeInSqllab },\n          },\n        }: any) => <BooleanDisplay value={exposeInSqllab} />,\n        size: 'md',\n      },\n      {\n        accessor: 'created_by',\n        disableSortBy: true,\n        Header: t('Created by'),\n        Cell: ({\n          row: {\n            original: { created_by: createdBy },\n          },\n        }: any) =>\n          createdBy ? `${createdBy.first_name} ${createdBy.last_name}` : '',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { changed_on_delta_humanized: changedOn },\n          },\n        }: any) => changedOn,\n        Header: t('Last modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () =>\n            handleDatabaseEditModal({ database: original, modalOpen: true });\n          const handleDelete = () => openDatabaseDeleteModal(original);\n          const handleExport = () => handleDatabaseExport(original);\n          if (!canEdit && !canDelete && !canExport) {\n            return null;\n          }\n          return (\n            <Actions className=\"actions\">\n              {canDelete && (\n                <span\n                  role=\"button\"\n                  tabIndex={0}\n                  className=\"action-button\"\n                  data-test=\"database-delete\"\n                  onClick={handleDelete}\n                >\n                  <Tooltip\n                    id=\"delete-action-tooltip\"\n                    title={t('Delete database')}\n                    placement=\"bottom\"\n                  >\n                    <Icons.Trash />\n                  </Tooltip>\n                </span>\n              )}\n              {canExport && (\n                <Tooltip\n                  id=\"export-action-tooltip\"\n                  title={t('Export')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleExport}\n                  >\n                    <Icons.Share />\n                  </span>\n                </Tooltip>\n              )}\n              {canEdit && (\n                <Tooltip\n                  id=\"edit-action-tooltip\"\n                  title={t('Edit')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    data-test=\"database-edit\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleEdit}\n                  >\n                    <Icons.EditAlt data-test=\"edit-alt\" />\n                  </span>\n                </Tooltip>\n              )}\n            </Actions>\n          );\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        hidden: !canEdit && !canDelete,\n        disableSortBy: true,\n      },\n    ],\n    [canDelete, canEdit, canExport],\n  );\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Expose in SQL Lab'),\n        key: 'expose_in_sql_lab',\n        id: 'expose_in_sqllab',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: t('All'),\n        selects: [\n          { label: t('Yes'), value: true },\n          { label: t('No'), value: false },\n        ],\n      },\n      {\n        Header: (\n          <Tooltip\n            id=\"allow-run-async-filter-header-tooltip\"\n            title={t('Asynchronous query execution')}\n            placement=\"top\"\n          >\n            <span>{t('AQE')}</span>\n          </Tooltip>\n        ),\n        key: 'allow_run_async',\n        id: 'allow_run_async',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: t('All'),\n        selects: [\n          { label: t('Yes'), value: true },\n          { label: t('No'), value: false },\n        ],\n      },\n      {\n        Header: t('Search'),\n        key: 'search',\n        id: 'database_name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ],\n    [],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      <DatabaseModal\n        databaseId={currentDatabase?.id}\n        show={databaseModalOpen}\n        onHide={handleDatabaseEditModal}\n        onDatabaseAdd={() => {\n          refreshData();\n        }}\n      />\n      {databaseCurrentlyDeleting && (\n        <DeleteModal\n          description={\n            <>\n              <p>\n                {t(\n                  'The database %s is linked to %s charts that appear on %s dashboards and users have %s SQL Lab tabs using this database open. Are you sure you want to continue? Deleting the database will break those objects.',\n                  databaseCurrentlyDeleting.database_name,\n                  databaseCurrentlyDeleting.chart_count,\n                  databaseCurrentlyDeleting.dashboard_count,\n                  databaseCurrentlyDeleting.sqllab_tab_count,\n                )}\n              </p>\n              {DatabaseDeleteRelatedExtension && (\n                <DatabaseDeleteRelatedExtension\n                  database={databaseCurrentlyDeleting}\n                />\n              )}\n            </>\n          }\n          onConfirm={() => {\n            if (databaseCurrentlyDeleting) {\n              handleDatabaseDelete(databaseCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setDatabaseCurrentlyDeleting(null)}\n          open\n          title={t('Delete Database?')}\n        />\n      )}\n\n      <ListView<DatabaseObject>\n        className=\"database-list-view\"\n        columns={columns}\n        count={databaseCount}\n        data={databases}\n        fetchData={fetchData}\n        filters={filters}\n        initialSort={initialSort}\n        loading={loading}\n        pageSize={PAGE_SIZE}\n      />\n\n      {preparingExport && <Loading />}\n    </>\n  );\n}\n\nexport default withToasts(DatabaseList);\n"]},"metadata":{},"sourceType":"module"}