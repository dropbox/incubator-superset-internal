{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState } from 'react';\nimport rison from 'rison';\nimport { t, SupersetClient } from '@superset-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createFetchRelated, createErrorHandler } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu from 'src/features/home/SubMenu';\nimport ActionsBar from 'src/components/ListView/ActionsBar';\nimport ListView, { FilterOperator } from 'src/components/ListView';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport AnnotationLayerModal from 'src/features/annotationLayers/AnnotationLayerModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst PAGE_SIZE = 25;\nconst MOMENT_FORMAT = 'MMM DD, YYYY';\nfunction AnnotationLayersList(_ref) {let { addDangerToast, addSuccessToast, user } = _ref;\n  const { state: { loading, resourceCount: layersCount, resourceCollection: layers, bulkSelectEnabled }, hasPerm, fetchData, refreshData, toggleBulkSelect } = useListViewResource('annotation_layer', t('Annotation layers'), addDangerToast);\n  const [annotationLayerModalOpen, setAnnotationLayerModalOpen] = useState(false);\n  const [currentAnnotationLayer, setCurrentAnnotationLayer] = useState(null);\n  const [layerCurrentlyDeleting, setLayerCurrentlyDeleting] = useState(null);\n  const handleLayerDelete = (_ref2) => {let { id, name } = _ref2;\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${id}` }).\n    then(() => {\n      refreshData();\n      setLayerCurrentlyDeleting(null);\n      addSuccessToast(t('Deleted: %s', name));\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting %s: %s', name, errMsg))));\n  };\n  const handleBulkLayerDelete = (layersToDelete) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/?q=${rison.encode(layersToDelete.map((_ref3) => {let { id } = _ref3;return id;}))}` }).\n    then((_ref4) => {let { json = {} } = _ref4;\n      refreshData();\n      addSuccessToast(json.message);\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting the selected layers: %s', errMsg))));\n  };\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  function handleAnnotationLayerEdit(layer) {\n    setCurrentAnnotationLayer(layer);\n    setAnnotationLayerModalOpen(true);\n  }\n  const initialSort = [{ id: 'name', desc: true }];\n  const columns = useMemo(() => [\n  {\n    accessor: 'name',\n    Header: t('Name'),\n    Cell: (_ref5) => {let { row: { original: { id, name } } } = _ref5;\n      let hasHistory = true;\n      try {\n        useHistory();\n      }\n      catch (err) {\n        // If error is thrown, we know not to use <Link> in render\n        hasHistory = false;\n      }\n      if (hasHistory) {\n        return ___EmotionJSX(Link, { to: `/annotationlayer/${id}/annotation` }, name);\n      }\n      return ___EmotionJSX(\"a\", { href: `/annotationlayer/${id}/annotation` }, name);\n    } },\n\n  {\n    accessor: 'descr',\n    Header: t('Description') },\n\n  {\n    Cell: (_ref6) => {let { row: { original: { changed_on: changedOn } } } = _ref6;\n      const date = new Date(changedOn);\n      const utc = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n      return moment(utc).format(MOMENT_FORMAT);\n    },\n    Header: t('Last modified'),\n    accessor: 'changed_on',\n    size: 'xl' },\n\n  {\n    Cell: (_ref7) => {let { row: { original: { created_on: createdOn } } } = _ref7;\n      const date = new Date(createdOn);\n      const utc = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n      return moment(utc).format(MOMENT_FORMAT);\n    },\n    Header: t('Created on'),\n    accessor: 'created_on',\n    size: 'xl' },\n\n  {\n    accessor: 'created_by',\n    disableSortBy: true,\n    Header: t('Created by'),\n    Cell: (_ref8) => {let { row: { original: { created_by: createdBy } } } = _ref8;return createdBy ? `${createdBy.first_name} ${createdBy.last_name}` : '';},\n    size: 'xl' },\n\n  {\n    Cell: (_ref9) => {let { row: { original } } = _ref9;\n      const handleEdit = () => handleAnnotationLayerEdit(original);\n      const handleDelete = () => setLayerCurrentlyDeleting(original);\n      const actions = [\n      canEdit ?\n      {\n        label: 'edit-action',\n        tooltip: t('Edit template'),\n        placement: 'bottom',\n        icon: 'Edit',\n        onClick: handleEdit } :\n\n      null,\n      canDelete ?\n      {\n        label: 'delete-action',\n        tooltip: t('Delete template'),\n        placement: 'bottom',\n        icon: 'Trash',\n        onClick: handleDelete } :\n\n      null].\n      filter((item) => !!item);\n      return ___EmotionJSX(ActionsBar, { actions: actions });\n    },\n    Header: t('Actions'),\n    id: 'actions',\n    disableSortBy: true,\n    hidden: !canEdit && !canDelete,\n    size: 'xl' }],\n\n  [canDelete, canCreate]);\n  const subMenuButtons = [];\n  if (canCreate) {\n    subMenuButtons.push({\n      name: ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }), \" \", t('Annotation layer')),\n\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAnnotationLayerEdit(null);\n      } });\n\n  }\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary' });\n\n  }\n  const filters = useMemo(() => [\n  {\n    Header: t('Created by'),\n    key: 'created_by',\n    id: 'created_by',\n    input: 'select',\n    operator: FilterOperator.relationOneMany,\n    unfilteredLabel: t('All'),\n    fetchSelects: createFetchRelated('annotation_layer', 'created_by', createErrorHandler((errMsg) => t('An error occurred while fetching dataset datasource values: %s', errMsg)), user),\n    paginate: true },\n\n  {\n    Header: t('Search'),\n    key: 'search',\n    id: 'name',\n    input: 'search',\n    operator: FilterOperator.contains }],\n\n  []);\n  const emptyState = {\n    title: t('No annotation layers yet'),\n    image: 'filter-results.svg',\n    buttonAction: () => handleAnnotationLayerEdit(null),\n    buttonText: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }), \" \", t('Annotation layer')) };\n\n\n  const onLayerAdd = (id) => {\n    window.location.href = `/annotationlayer/${id}/annotation`;\n  };\n  const onModalHide = () => {\n    refreshData();\n    setAnnotationLayerModalOpen(false);\n  };\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, { name: t('Annotation layers'), buttons: subMenuButtons }),\n  ___EmotionJSX(AnnotationLayerModal, { addDangerToast: addDangerToast, layer: currentAnnotationLayer, onLayerAdd: onLayerAdd, onHide: onModalHide, show: annotationLayerModalOpen }),\n  layerCurrentlyDeleting && ___EmotionJSX(DeleteModal, { description: t('This action will permanently delete the layer.'), onConfirm: () => {\n      if (layerCurrentlyDeleting) {\n        handleLayerDelete(layerCurrentlyDeleting);\n      }\n    }, onHide: () => setLayerCurrentlyDeleting(null), open: true, title: t('Delete Layer?') }),\n  ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: t('Are you sure you want to delete the selected layers?'), onConfirm: handleBulkLayerDelete },\n  (confirmDelete) => {\n    const bulkActions = canDelete ?\n    [\n    {\n      key: 'delete',\n      name: t('Delete'),\n      onSelect: confirmDelete,\n      type: 'danger' }] :\n\n\n    [];\n    return ___EmotionJSX(ListView, { className: \"annotation-layers-list-view\", columns: columns, count: layersCount, data: layers, fetchData: fetchData, filters: filters, initialSort: initialSort, loading: loading, pageSize: PAGE_SIZE, bulkActions: bulkActions, bulkSelectEnabled: bulkSelectEnabled, disableBulkSelect: toggleBulkSelect, emptyState: emptyState });\n  }));\n\n\n}\nexport default withToasts(AnnotationLayersList);","map":{"version":3,"mappings":"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","names":["React","useMemo","useState","rison","t","SupersetClient","Link","useHistory","moment","useListViewResource","createFetchRelated","createErrorHandler","withToasts","SubMenu","ActionsBar","ListView","FilterOperator","DeleteModal","ConfirmStatusChange","AnnotationLayerModal","PAGE_SIZE","MOMENT_FORMAT","AnnotationLayersList","addDangerToast","addSuccessToast","user","state","loading","resourceCount","layersCount","resourceCollection","layers","bulkSelectEnabled","hasPerm","fetchData","refreshData","toggleBulkSelect","annotationLayerModalOpen","setAnnotationLayerModalOpen","currentAnnotationLayer","setCurrentAnnotationLayer","layerCurrentlyDeleting","setLayerCurrentlyDeleting","handleLayerDelete","id","name","delete","endpoint","then","errMsg","handleBulkLayerDelete","layersToDelete","encode","map","json","message","canCreate","canEdit","canDelete","handleAnnotationLayerEdit","layer","initialSort","desc","columns","accessor","Header","Cell","row","original","hasHistory","err","changed_on","changedOn","date","Date","utc","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","format","size","created_on","createdOn","disableSortBy","created_by","createdBy","first_name","last_name","handleEdit","handleDelete","actions","label","tooltip","placement","icon","onClick","filter","item","hidden","subMenuButtons","push","buttonStyle","filters","key","input","operator","relationOneMany","unfilteredLabel","fetchSelects","paginate","contains","emptyState","title","image","buttonAction","buttonText","onLayerAdd","window","location","href","onModalHide","bulkActions","onSelect","confirmDelete","type"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/AnnotationLayerList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport rison from 'rison';\nimport { t, SupersetClient } from '@superset-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createFetchRelated, createErrorHandler } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport AnnotationLayerModal from 'src/features/annotationLayers/AnnotationLayerModal';\nimport { AnnotationLayerObject } from 'src/features/annotationLayers/types';\n\nconst PAGE_SIZE = 25;\nconst MOMENT_FORMAT = 'MMM DD, YYYY';\n\ninterface AnnotationLayersListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nfunction AnnotationLayersList({\n  addDangerToast,\n  addSuccessToast,\n  user,\n}: AnnotationLayersListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: layersCount,\n      resourceCollection: layers,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<AnnotationLayerObject>(\n    'annotation_layer',\n    t('Annotation layers'),\n    addDangerToast,\n  );\n\n  const [annotationLayerModalOpen, setAnnotationLayerModalOpen] =\n    useState<boolean>(false);\n  const [currentAnnotationLayer, setCurrentAnnotationLayer] =\n    useState<AnnotationLayerObject | null>(null);\n\n  const [layerCurrentlyDeleting, setLayerCurrentlyDeleting] =\n    useState<AnnotationLayerObject | null>(null);\n\n  const handleLayerDelete = ({ id, name }: AnnotationLayerObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setLayerCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', name, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkLayerDelete = (layersToDelete: AnnotationLayerObject[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/?q=${rison.encode(\n        layersToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected layers: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n\n  function handleAnnotationLayerEdit(layer: AnnotationLayerObject | null) {\n    setCurrentAnnotationLayer(layer);\n    setAnnotationLayerModalOpen(true);\n  }\n\n  const initialSort = [{ id: 'name', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'name',\n        Header: t('Name'),\n        Cell: ({\n          row: {\n            original: { id, name },\n          },\n        }: any) => {\n          let hasHistory = true;\n\n          try {\n            useHistory();\n          } catch (err) {\n            // If error is thrown, we know not to use <Link> in render\n            hasHistory = false;\n          }\n\n          if (hasHistory) {\n            return <Link to={`/annotationlayer/${id}/annotation`}>{name}</Link>;\n          }\n\n          return <a href={`/annotationlayer/${id}/annotation`}>{name}</a>;\n        },\n      },\n      {\n        accessor: 'descr',\n        Header: t('Description'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { changed_on: changedOn },\n          },\n        }: any) => {\n          const date = new Date(changedOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).format(MOMENT_FORMAT);\n        },\n        Header: t('Last modified'),\n        accessor: 'changed_on',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_on: createdOn },\n          },\n        }: any) => {\n          const date = new Date(createdOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).format(MOMENT_FORMAT);\n        },\n        Header: t('Created on'),\n        accessor: 'created_on',\n        size: 'xl',\n      },\n      {\n        accessor: 'created_by',\n        disableSortBy: true,\n        Header: t('Created by'),\n        Cell: ({\n          row: {\n            original: { created_by: createdBy },\n          },\n        }: any) =>\n          createdBy ? `${createdBy.first_name} ${createdBy.last_name}` : '',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () => handleAnnotationLayerEdit(original);\n          const handleDelete = () => setLayerCurrentlyDeleting(original);\n\n          const actions = [\n            canEdit\n              ? {\n                  label: 'edit-action',\n                  tooltip: t('Edit template'),\n                  placement: 'bottom',\n                  icon: 'Edit',\n                  onClick: handleEdit,\n                }\n              : null,\n            canDelete\n              ? {\n                  label: 'delete-action',\n                  tooltip: t('Delete template'),\n                  placement: 'bottom',\n                  icon: 'Trash',\n                  onClick: handleDelete,\n                }\n              : null,\n          ].filter(item => !!item);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        hidden: !canEdit && !canDelete,\n        size: 'xl',\n      },\n    ],\n    [canDelete, canCreate],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('Annotation layer')}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAnnotationLayerEdit(null);\n      },\n    });\n  }\n\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Created by'),\n        key: 'created_by',\n        id: 'created_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'annotation_layer',\n          'created_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Search'),\n        key: 'search',\n        id: 'name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ],\n    [],\n  );\n\n  const emptyState = {\n    title: t('No annotation layers yet'),\n    image: 'filter-results.svg',\n    buttonAction: () => handleAnnotationLayerEdit(null),\n    buttonText: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Annotation layer')}\n      </>\n    ),\n  };\n\n  const onLayerAdd = (id?: number) => {\n    window.location.href = `/annotationlayer/${id}/annotation`;\n  };\n\n  const onModalHide = () => {\n    refreshData();\n    setAnnotationLayerModalOpen(false);\n  };\n\n  return (\n    <>\n      <SubMenu name={t('Annotation layers')} buttons={subMenuButtons} />\n      <AnnotationLayerModal\n        addDangerToast={addDangerToast}\n        layer={currentAnnotationLayer}\n        onLayerAdd={onLayerAdd}\n        onHide={onModalHide}\n        show={annotationLayerModalOpen}\n      />\n      {layerCurrentlyDeleting && (\n        <DeleteModal\n          description={t('This action will permanently delete the layer.')}\n          onConfirm={() => {\n            if (layerCurrentlyDeleting) {\n              handleLayerDelete(layerCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setLayerCurrentlyDeleting(null)}\n          open\n          title={t('Delete Layer?')}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected layers?')}\n        onConfirm={handleBulkLayerDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = canDelete\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n\n          return (\n            <ListView<AnnotationLayerObject>\n              className=\"annotation-layers-list-view\"\n              columns={columns}\n              count={layersCount}\n              data={layers}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              emptyState={emptyState}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(AnnotationLayersList);\n"]},"metadata":{},"sourceType":"module"}