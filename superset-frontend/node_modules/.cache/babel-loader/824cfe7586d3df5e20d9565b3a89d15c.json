{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * License); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useRef } from 'react';\nimport AntTable from 'antd/lib/table';\nimport ConfigProvider from 'antd/lib/config-provider';\nimport { t, useTheme, logging, styled } from '@superset-ui/core';\nimport Loading from 'src/components/Loading';\nimport InteractiveTableUtils from './utils/InteractiveTableUtils';\nimport VirtualTable from './VirtualTable';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const SUPERSET_TABLE_COLUMN = 'superset/table-column';\nexport var SelectionType;\n(function (SelectionType) {\n  SelectionType[\"DISABLED\"] = \"disabled\";\n  SelectionType[\"SINGLE\"] = \"single\";\n  SelectionType[\"MULTI\"] = \"multi\";\n})(SelectionType || (SelectionType = {}));\nexport var ETableAction;\n(function (ETableAction) {\n  ETableAction[\"PAGINATE\"] = \"paginate\";\n  ETableAction[\"SORT\"] = \"sort\";\n  ETableAction[\"FILTER\"] = \"filter\";\n})(ETableAction || (ETableAction = {}));\nexport var TableSize;\n(function (TableSize) {\n  TableSize[\"SMALL\"] = \"small\";\n  TableSize[\"MIDDLE\"] = \"middle\";\n})(TableSize || (TableSize = {}));\nconst defaultRowSelection = [];\nconst PAGINATION_HEIGHT = 40;\nconst HEADER_HEIGHT = 68;\nconst StyledTable = styled(AntTable)((_ref) => {let { theme, height } = _ref;return `\n    .ant-table-body {\n      overflow: auto;\n      height: ${height ? `${height}px` : undefined};\n    }\n\n    th.ant-table-cell {\n      font-weight: ${theme.typography.weights.bold};\n      color: ${theme.colors.grayscale.dark1};\n      user-select: none;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    .ant-table-tbody > tr > td {\n      user-select: none;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      border-bottom: 1px solid ${theme.colors.grayscale.light3};\n    }\n\n    .ant-pagination-item-active {\n      border-color: ${theme.colors.primary.base};\n    }\n\n    .ant-table.ant-table-small {\n      font-size: ${theme.typography.sizes.s}px;\n    }\n  `;});\nconst StyledVirtualTable = styled(VirtualTable)((_ref2) => {let { theme } = _ref2;return `\n  .virtual-table .ant-table-container:before,\n  .virtual-table .ant-table-container:after {\n    display: none;\n  }\n  .virtual-table-cell {\n    box-sizing: border-box;\n    padding: ${theme.gridUnit * 4}px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;});\nconst defaultLocale = {\n  filterTitle: t('Filter menu'),\n  filterConfirm: t('OK'),\n  filterReset: t('Reset'),\n  filterEmptyText: t('No filters'),\n  filterCheckall: t('Select all items'),\n  filterSearchPlaceholder: t('Search in filters'),\n  emptyText: t('No data'),\n  selectAll: t('Select current page'),\n  selectInvert: t('Invert current page'),\n  selectNone: t('Clear all data'),\n  selectionAll: t('Select all data'),\n  sortTitle: t('Sort'),\n  expand: t('Expand row'),\n  collapse: t('Collapse row'),\n  triggerDesc: t('Click to sort descending'),\n  triggerAsc: t('Click to sort ascending'),\n  cancelSort: t('Click to cancel sorting') };\n\nconst selectionMap = {};\nconst noop = () => {};\nselectionMap[SelectionType.MULTI] = 'checkbox';\nselectionMap[SelectionType.SINGLE] = 'radio';\nselectionMap[SelectionType.DISABLED] = null;\nexport function Table(props) {\n  const { data, bordered, columns, selectedRows = defaultRowSelection, handleRowSelection, size = TableSize.SMALL, selectionType = SelectionType.DISABLED, sticky = true, loading = false, resizable = false, reorderable = false, usePagination = true, defaultPageSize = 15, pageSizeOptions = ['5', '15', '25', '50', '100'], hideData = false, emptyComponent, locale, height, virtualize = false, onChange = noop, recordCount, onRow, allowHTML = false } = props;\n  const wrapperRef = useRef(null);\n  const [derivedColumns, setDerivedColumns] = useState(columns);\n  const [pageSize, setPageSize] = useState(defaultPageSize);\n  const [mergedLocale, setMergedLocale] = useState({ ...defaultLocale });\n  const [selectedRowKeys, setSelectedRowKeys] = useState(selectedRows);\n  const interactiveTableUtils = useRef(null);\n  const onSelectChange = (newSelectedRowKeys) => {\n    setSelectedRowKeys(newSelectedRowKeys);\n    handleRowSelection == null ? void 0 : handleRowSelection(newSelectedRowKeys);\n  };\n  const selectionTypeValue = selectionMap[selectionType];\n  const rowSelection = {\n    type: selectionTypeValue,\n    selectedRowKeys,\n    onChange: onSelectChange };\n\n  const renderEmpty = () => emptyComponent != null ? emptyComponent : ___EmotionJSX(\"div\", null, mergedLocale.emptyText);\n  // Log use of experimental features\n  useEffect(() => {\n    if (reorderable === true) {\n      logging.warn('EXPERIMENTAL FEATURE ENABLED: The \"reorderable\" prop of Table is experimental and NOT recommended for use in production deployments.');\n    }\n    if (resizable === true) {\n      logging.warn('EXPERIMENTAL FEATURE ENABLED: The \"resizable\" prop of Table is experimental and NOT recommended for use in production deployments.');\n    }\n  }, [reorderable, resizable]);\n  useEffect(() => {\n    let updatedLocale;\n    if (locale) {\n      // This spread allows for locale to only contain a subset of locale overrides on props\n      updatedLocale = { ...defaultLocale, ...locale };\n    } else\n    {\n      updatedLocale = { ...defaultLocale };\n    }\n    setMergedLocale(updatedLocale);\n  }, [locale]);\n  useEffect(() => setDerivedColumns(columns), [columns]);\n  useEffect(() => {var _wrapperRef$current;\n    if (interactiveTableUtils.current) {var _interactiveTableUtil;\n      (_interactiveTableUtil = interactiveTableUtils.current) == null ? void 0 : _interactiveTableUtil.clearListeners();\n    }\n    const table = (_wrapperRef$current = wrapperRef.current) == null ? void 0 : _wrapperRef$current.getElementsByTagName('table')[0];\n    if (table) {\n      interactiveTableUtils.current = new InteractiveTableUtils(table, derivedColumns, setDerivedColumns);\n      if (reorderable) {var _interactiveTableUtil2;\n        interactiveTableUtils == null ? void 0 : (_interactiveTableUtil2 = interactiveTableUtils.current) == null ? void 0 : _interactiveTableUtil2.initializeDragDropColumns(reorderable, table);\n      }\n      if (resizable) {var _interactiveTableUtil3;\n        interactiveTableUtils == null ? void 0 : (_interactiveTableUtil3 = interactiveTableUtils.current) == null ? void 0 : _interactiveTableUtil3.initializeResizableColumns(resizable, table);\n      }\n    }\n    return () => {var _interactiveTableUtil4;\n      interactiveTableUtils == null ? void 0 : (_interactiveTableUtil4 = interactiveTableUtils.current) == null ? void 0 : _interactiveTableUtil4.clearListeners == null ? void 0 : _interactiveTableUtil4.clearListeners();\n    };\n    /**\n     * We DO NOT want this effect to trigger when derivedColumns changes as it will break functionality\n     * The exclusion from the effect dependencies is intentional and should not be modified\n     */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [wrapperRef, reorderable, resizable, virtualize, interactiveTableUtils]);\n  const theme = useTheme();\n  const paginationSettings = usePagination ?\n  {\n    hideOnSinglePage: true,\n    pageSize,\n    pageSizeOptions,\n    onShowSizeChange: (page, size) => setPageSize(size) } :\n\n  false;\n  /**\n   * When recordCount is provided it lets the user of Table control total number of pages\n   * independent from data.length.  This allows the parent component do things like server side paging\n   * where the user can be shown the total mount of data they can page through, but the component can provide\n   * data one page at a time, and respond to the onPageChange event to fetch and set new data\n   */\n  if (paginationSettings && recordCount) {\n    paginationSettings.total = recordCount;\n  }\n  let bodyHeight = height;\n  if (bodyHeight) {\n    bodyHeight -= HEADER_HEIGHT;\n    const hasPagination = usePagination && recordCount && recordCount > pageSize;\n    if (hasPagination) {\n      bodyHeight -= PAGINATION_HEIGHT;\n    }\n  }\n  const sharedProps = {\n    loading: { spinning: loading != null ? loading : false, indicator: ___EmotionJSX(Loading, null) },\n    hasData: hideData ? false : data,\n    columns: derivedColumns,\n    dataSource: hideData ? undefined : data,\n    size,\n    pagination: paginationSettings,\n    locale: mergedLocale,\n    showSorterTooltip: false,\n    onChange,\n    onRow,\n    theme,\n    height: bodyHeight,\n    bordered };\n\n  return ___EmotionJSX(ConfigProvider, { renderEmpty: renderEmpty },\n  ___EmotionJSX(\"div\", { ref: wrapperRef },\n  !virtualize && ___EmotionJSX(StyledTable, _extends({}, sharedProps, { rowSelection: selectionTypeValue ? rowSelection : undefined, sticky: sticky })),\n  virtualize && ___EmotionJSX(StyledVirtualTable, _extends({}, sharedProps, { scroll: {\n      y: 300,\n      x: '100vw',\n      // To avoid jest failure by scrollTo\n      ...(process.env.WEBPACK_MODE === 'test' && {\n        scrollToFirstRowOnChange: false }) },\n\n    allowHTML: allowHTML }))));\n\n\n}\nexport default Table;","map":{"version":3,"mappings":"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","names":["React","useState","useEffect","useRef","AntTable","ConfigProvider","t","useTheme","logging","styled","Loading","InteractiveTableUtils","VirtualTable","SUPERSET_TABLE_COLUMN","SelectionType","ETableAction","TableSize","defaultRowSelection","PAGINATION_HEIGHT","HEADER_HEIGHT","StyledTable","theme","height","undefined","typography","weights","bold","colors","grayscale","dark1","light3","primary","base","sizes","s","StyledVirtualTable","gridUnit","defaultLocale","filterTitle","filterConfirm","filterReset","filterEmptyText","filterCheckall","filterSearchPlaceholder","emptyText","selectAll","selectInvert","selectNone","selectionAll","sortTitle","expand","collapse","triggerDesc","triggerAsc","cancelSort","selectionMap","noop","MULTI","SINGLE","DISABLED","Table","props","data","bordered","columns","selectedRows","handleRowSelection","size","SMALL","selectionType","sticky","loading","resizable","reorderable","usePagination","defaultPageSize","pageSizeOptions","hideData","emptyComponent","locale","virtualize","onChange","recordCount","onRow","allowHTML","wrapperRef","derivedColumns","setDerivedColumns","pageSize","setPageSize","mergedLocale","setMergedLocale","selectedRowKeys","setSelectedRowKeys","interactiveTableUtils","onSelectChange","newSelectedRowKeys","selectionTypeValue","rowSelection","type","renderEmpty","warn","updatedLocale","current","clearListeners","table","getElementsByTagName","initializeDragDropColumns","initializeResizableColumns","paginationSettings","hideOnSinglePage","onShowSizeChange","page","total","bodyHeight","hasPagination","sharedProps","spinning","indicator","hasData","dataSource","pagination","showSorterTooltip","y","x","process","env","WEBPACK_MODE","scrollToFirstRowOnChange"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/components/Table/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * License); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useRef, ReactElement } from 'react';\nimport AntTable, {\n  ColumnsType,\n  TableProps as AntTableProps,\n} from 'antd/lib/table';\nimport ConfigProvider from 'antd/lib/config-provider';\nimport { PaginationProps } from 'antd/lib/pagination';\nimport { t, useTheme, logging, styled } from '@superset-ui/core';\nimport Loading from 'src/components/Loading';\nimport InteractiveTableUtils from './utils/InteractiveTableUtils';\nimport VirtualTable from './VirtualTable';\n\nexport const SUPERSET_TABLE_COLUMN = 'superset/table-column';\n\nexport enum SelectionType {\n  'DISABLED' = 'disabled',\n  'SINGLE' = 'single',\n  'MULTI' = 'multi',\n}\n\nexport type SortOrder = 'descend' | 'ascend' | null;\n\nexport enum ETableAction {\n  PAGINATE = 'paginate',\n  SORT = 'sort',\n  FILTER = 'filter',\n}\n\nexport type { ColumnsType };\nexport type OnChangeFunction<RecordType> =\n  AntTableProps<RecordType>['onChange'];\n\nexport enum TableSize {\n  SMALL = 'small',\n  MIDDLE = 'middle',\n}\n\nexport interface TableProps<RecordType> {\n  /**\n   * Data that will populate the each row and map to the column key.\n   */\n  data: RecordType[];\n  /**\n   * Whether to show all table borders\n   */\n  bordered?: boolean;\n  /**\n   * Table column definitions.\n   */\n  columns: ColumnsType<RecordType>;\n  /**\n   * Array of row keys to represent list of selected rows.\n   */\n  selectedRows?: React.Key[];\n  /**\n   * Callback function invoked when a row is selected by user.\n   */\n  handleRowSelection?: (newSelectedRowKeys: React.Key[]) => void;\n  /**\n   * Controls the size of the table.\n   */\n  size: TableSize;\n  /**\n   * Controls if table rows are selectable and if multiple select is supported.\n   */\n  selectionType?: SelectionType;\n  /*\n   * Places table in visual loading state.  Use while waiting to retrieve data or perform an async operation that will update the table.\n   */\n  loading?: boolean;\n  /**\n   * Uses a sticky header which always displays when vertically scrolling the table.  Default: true\n   */\n  sticky?: boolean;\n  /**\n   * Controls if columns are resizable by user.\n   */\n  resizable?: boolean;\n  /**\n   * EXPERIMENTAL: Controls if columns are re-orderable by user drag drop.\n   */\n  reorderable?: boolean;\n  /**\n   * Controls if pagination is active or disabled.\n   */\n  usePagination?: boolean;\n  /**\n   * Default number of rows table will display per page of data.\n   */\n  defaultPageSize?: number;\n  /**\n   * Array of numeric options for the number of rows table will display per page of data.\n   * The user can select from these options in the page size drop down menu.\n   */\n  pageSizeOptions?: string[];\n  /**\n   * Set table to display no data even if data has been provided\n   */\n  hideData?: boolean;\n  /**\n   * emptyComponent\n   */\n  emptyComponent?: ReactElement;\n  /**\n   * Enables setting the text displayed in various components and tooltips within the Table UI.\n   */\n  locale?: Partial<AntTableProps<RecordType>['locale']>;\n  /**\n   * Restricts the visible height of the table and allows for internal scrolling within the table\n   * when the number of rows exceeds the visible space.\n   */\n  height?: number;\n  /**\n   * Sets the table to use react-window for scroll virtualization in cases where\n   * there are unknown amount of columns, or many, many rows\n   */\n  virtualize?: boolean;\n  /**\n   * Used to override page controls total record count when using server-side paging.\n   */\n  recordCount?: number;\n  /**\n   * Invoked when the tables sorting, paging, or filtering is changed.\n   */\n  onChange?: OnChangeFunction<RecordType>;\n  /**\n   * Returns props that should be applied to each row component.\n   */\n  onRow?: AntTableProps<RecordType>['onRow'];\n  /**\n   * Will render html safely if set to true, anchor tags and such. Currently\n   * only supported for virtualize == true\n   */\n  allowHTML?: boolean;\n}\n\nconst defaultRowSelection: React.Key[] = [];\n\nconst PAGINATION_HEIGHT = 40;\nconst HEADER_HEIGHT = 68;\n\nconst StyledTable = styled(AntTable)<{ height?: number }>(\n  ({ theme, height }) => `\n    .ant-table-body {\n      overflow: auto;\n      height: ${height ? `${height}px` : undefined};\n    }\n\n    th.ant-table-cell {\n      font-weight: ${theme.typography.weights.bold};\n      color: ${theme.colors.grayscale.dark1};\n      user-select: none;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    .ant-table-tbody > tr > td {\n      user-select: none;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      border-bottom: 1px solid ${theme.colors.grayscale.light3};\n    }\n\n    .ant-pagination-item-active {\n      border-color: ${theme.colors.primary.base};\n    }\n\n    .ant-table.ant-table-small {\n      font-size: ${theme.typography.sizes.s}px;\n    }\n  `,\n);\nconst StyledVirtualTable = styled(VirtualTable)(\n  ({ theme }) => `\n  .virtual-table .ant-table-container:before,\n  .virtual-table .ant-table-container:after {\n    display: none;\n  }\n  .virtual-table-cell {\n    box-sizing: border-box;\n    padding: ${theme.gridUnit * 4}px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`,\n);\n\nconst defaultLocale = {\n  filterTitle: t('Filter menu'),\n  filterConfirm: t('OK'),\n  filterReset: t('Reset'),\n  filterEmptyText: t('No filters'),\n  filterCheckall: t('Select all items'),\n  filterSearchPlaceholder: t('Search in filters'),\n  emptyText: t('No data'),\n  selectAll: t('Select current page'),\n  selectInvert: t('Invert current page'),\n  selectNone: t('Clear all data'),\n  selectionAll: t('Select all data'),\n  sortTitle: t('Sort'),\n  expand: t('Expand row'),\n  collapse: t('Collapse row'),\n  triggerDesc: t('Click to sort descending'),\n  triggerAsc: t('Click to sort ascending'),\n  cancelSort: t('Click to cancel sorting'),\n};\n\nconst selectionMap = {};\nconst noop = () => {};\nselectionMap[SelectionType.MULTI] = 'checkbox';\nselectionMap[SelectionType.SINGLE] = 'radio';\nselectionMap[SelectionType.DISABLED] = null;\n\nexport function Table<RecordType extends object>(\n  props: TableProps<RecordType>,\n) {\n  const {\n    data,\n    bordered,\n    columns,\n    selectedRows = defaultRowSelection,\n    handleRowSelection,\n    size = TableSize.SMALL,\n    selectionType = SelectionType.DISABLED,\n    sticky = true,\n    loading = false,\n    resizable = false,\n    reorderable = false,\n    usePagination = true,\n    defaultPageSize = 15,\n    pageSizeOptions = ['5', '15', '25', '50', '100'],\n    hideData = false,\n    emptyComponent,\n    locale,\n    height,\n    virtualize = false,\n    onChange = noop,\n    recordCount,\n    onRow,\n    allowHTML = false,\n  } = props;\n\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n  const [derivedColumns, setDerivedColumns] = useState(columns);\n  const [pageSize, setPageSize] = useState(defaultPageSize);\n  const [mergedLocale, setMergedLocale] = useState<\n    Required<AntTableProps<RecordType>>['locale']\n  >({ ...defaultLocale });\n  const [selectedRowKeys, setSelectedRowKeys] =\n    useState<React.Key[]>(selectedRows);\n  const interactiveTableUtils = useRef<InteractiveTableUtils | null>(null);\n\n  const onSelectChange = (newSelectedRowKeys: React.Key[]) => {\n    setSelectedRowKeys(newSelectedRowKeys);\n    handleRowSelection?.(newSelectedRowKeys);\n  };\n\n  const selectionTypeValue = selectionMap[selectionType];\n  const rowSelection = {\n    type: selectionTypeValue,\n    selectedRowKeys,\n    onChange: onSelectChange,\n  };\n\n  const renderEmpty = () =>\n    emptyComponent ?? <div>{mergedLocale.emptyText}</div>;\n\n  // Log use of experimental features\n  useEffect(() => {\n    if (reorderable === true) {\n      logging.warn(\n        'EXPERIMENTAL FEATURE ENABLED: The \"reorderable\" prop of Table is experimental and NOT recommended for use in production deployments.',\n      );\n    }\n    if (resizable === true) {\n      logging.warn(\n        'EXPERIMENTAL FEATURE ENABLED: The \"resizable\" prop of Table is experimental and NOT recommended for use in production deployments.',\n      );\n    }\n  }, [reorderable, resizable]);\n\n  useEffect(() => {\n    let updatedLocale;\n    if (locale) {\n      // This spread allows for locale to only contain a subset of locale overrides on props\n      updatedLocale = { ...defaultLocale, ...locale };\n    } else {\n      updatedLocale = { ...defaultLocale };\n    }\n    setMergedLocale(updatedLocale);\n  }, [locale]);\n\n  useEffect(() => setDerivedColumns(columns), [columns]);\n\n  useEffect(() => {\n    if (interactiveTableUtils.current) {\n      interactiveTableUtils.current?.clearListeners();\n    }\n    const table = wrapperRef.current?.getElementsByTagName('table')[0];\n    if (table) {\n      interactiveTableUtils.current = new InteractiveTableUtils(\n        table,\n        derivedColumns,\n        setDerivedColumns,\n      );\n      if (reorderable) {\n        interactiveTableUtils?.current?.initializeDragDropColumns(\n          reorderable,\n          table,\n        );\n      }\n      if (resizable) {\n        interactiveTableUtils?.current?.initializeResizableColumns(\n          resizable,\n          table,\n        );\n      }\n    }\n    return () => {\n      interactiveTableUtils?.current?.clearListeners?.();\n    };\n    /**\n     * We DO NOT want this effect to trigger when derivedColumns changes as it will break functionality\n     * The exclusion from the effect dependencies is intentional and should not be modified\n     */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [wrapperRef, reorderable, resizable, virtualize, interactiveTableUtils]);\n\n  const theme = useTheme();\n\n  const paginationSettings: PaginationProps | false = usePagination\n    ? {\n        hideOnSinglePage: true,\n        pageSize,\n        pageSizeOptions,\n        onShowSizeChange: (page: number, size: number) => setPageSize(size),\n      }\n    : false;\n\n  /**\n   * When recordCount is provided it lets the user of Table control total number of pages\n   * independent from data.length.  This allows the parent component do things like server side paging\n   * where the user can be shown the total mount of data they can page through, but the component can provide\n   * data one page at a time, and respond to the onPageChange event to fetch and set new data\n   */\n  if (paginationSettings && recordCount) {\n    paginationSettings.total = recordCount;\n  }\n\n  let bodyHeight = height;\n  if (bodyHeight) {\n    bodyHeight -= HEADER_HEIGHT;\n    const hasPagination =\n      usePagination && recordCount && recordCount > pageSize;\n    if (hasPagination) {\n      bodyHeight -= PAGINATION_HEIGHT;\n    }\n  }\n\n  const sharedProps = {\n    loading: { spinning: loading ?? false, indicator: <Loading /> },\n    hasData: hideData ? false : data,\n    columns: derivedColumns,\n    dataSource: hideData ? undefined : data,\n    size,\n    pagination: paginationSettings,\n    locale: mergedLocale,\n    showSorterTooltip: false,\n    onChange,\n    onRow,\n    theme,\n    height: bodyHeight,\n    bordered,\n  };\n\n  return (\n    <ConfigProvider renderEmpty={renderEmpty}>\n      <div ref={wrapperRef}>\n        {!virtualize && (\n          <StyledTable\n            {...sharedProps}\n            rowSelection={selectionTypeValue ? rowSelection : undefined}\n            sticky={sticky}\n          />\n        )}\n        {virtualize && (\n          <StyledVirtualTable\n            {...sharedProps}\n            scroll={{\n              y: 300,\n              x: '100vw',\n              // To avoid jest failure by scrollTo\n              ...(process.env.WEBPACK_MODE === 'test' && {\n                scrollToFirstRowOnChange: false,\n              }),\n            }}\n            allowHTML={allowHTML}\n          />\n        )}\n      </div>\n    </ConfigProvider>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}