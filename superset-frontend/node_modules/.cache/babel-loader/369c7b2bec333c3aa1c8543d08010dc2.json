{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport SyntaxHighlighterCopy from 'src/features/queries/SyntaxHighlighterCopy';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport useQueryPreviewState from 'src/features/queries/hooks/useQueryPreviewState';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst QueryTitle = styled.div`\n  color: ${(_ref) => {let { theme } = _ref;return theme.colors.secondary.light2;}};\n  font-size: ${(_ref2) => {let { theme } = _ref2;return theme.typography.sizes.s;}}px;\n  margin-bottom: 0;\n  text-transform: uppercase;\n`;\nconst QueryLabel = styled.div`\n  color: ${(_ref3) => {let { theme } = _ref3;return theme.colors.grayscale.dark2;}};\n  font-size: ${(_ref4) => {let { theme } = _ref4;return theme.typography.sizes.m;}}px;\n  padding: 4px 0 16px 0;\n`;\nconst StyledModal = styled(Modal)`\n  .ant-modal-content {\n  }\n\n  .ant-modal-body {\n    padding: 24px;\n  }\n\n  pre {\n    font-size: ${(_ref5) => {let { theme } = _ref5;return theme.typography.sizes.xs;}}px;\n    font-weight: ${(_ref6) => {let { theme } = _ref6;return theme.typography.weights.normal;}};\n    line-height: ${(_ref7) => {let { theme } = _ref7;return theme.typography.sizes.l;}}px;\n    height: 375px;\n    border: none;\n  }\n`;\nconst SavedQueryPreviewModal = (_ref8) => {let { fetchData, onHide, openInSqlLab, queries, savedQuery, show, addDangerToast, addSuccessToast } = _ref8;\n  const { handleKeyPress, handleDataChange, disablePrevious, disableNext } = useQueryPreviewState({\n    queries,\n    currentQueryId: savedQuery.id,\n    fetchData });\n\n  return ___EmotionJSX(\"div\", { role: \"none\", onKeyUp: handleKeyPress },\n  ___EmotionJSX(StyledModal, { onHide: onHide, show: show, title: t('Query preview'), footer: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(Button, { key: \"previous-saved-query\", disabled: disablePrevious, onClick: () => handleDataChange(true) },\n    t('Previous')),\n\n    ___EmotionJSX(Button, { key: \"next-saved-query\", disabled: disableNext, onClick: () => handleDataChange(false) },\n    t('Next')),\n\n    ___EmotionJSX(Button, { key: \"open-in-sql-lab\", buttonStyle: \"primary\", onClick: () => openInSqlLab(savedQuery.id) },\n    t('Open in SQL Lab'))) },\n\n\n  ___EmotionJSX(QueryTitle, null, t('Query name')),\n  ___EmotionJSX(QueryLabel, null, savedQuery.label),\n  ___EmotionJSX(SyntaxHighlighterCopy, { language: \"sql\", addDangerToast: addDangerToast, addSuccessToast: addSuccessToast },\n  savedQuery.sql || '')));\n\n\n\n};\nexport default withToasts(SavedQueryPreviewModal);","map":{"version":3,"mappings":"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","names":["React","styled","t","Modal","Button","SyntaxHighlighterCopy","withToasts","useQueryPreviewState","QueryTitle","div","theme","colors","secondary","light2","typography","sizes","s","QueryLabel","grayscale","dark2","m","StyledModal","xs","weights","normal","l","SavedQueryPreviewModal","fetchData","onHide","openInSqlLab","queries","savedQuery","show","addDangerToast","addSuccessToast","handleKeyPress","handleDataChange","disablePrevious","disableNext","currentQueryId","id","label","sql"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/features/queries/SavedQueryPreviewModal.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport SyntaxHighlighterCopy from 'src/features/queries/SyntaxHighlighterCopy';\nimport withToasts, {\n  ToastProps,\n} from 'src/components/MessageToasts/withToasts';\nimport useQueryPreviewState from 'src/features/queries/hooks/useQueryPreviewState';\n\nconst QueryTitle = styled.div`\n  color: ${({ theme }) => theme.colors.secondary.light2};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-bottom: 0;\n  text-transform: uppercase;\n`;\n\nconst QueryLabel = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n  font-size: ${({ theme }) => theme.typography.sizes.m}px;\n  padding: 4px 0 16px 0;\n`;\n\nconst StyledModal = styled(Modal)`\n  .ant-modal-content {\n  }\n\n  .ant-modal-body {\n    padding: 24px;\n  }\n\n  pre {\n    font-size: ${({ theme }) => theme.typography.sizes.xs}px;\n    font-weight: ${({ theme }) => theme.typography.weights.normal};\n    line-height: ${({ theme }) => theme.typography.sizes.l}px;\n    height: 375px;\n    border: none;\n  }\n`;\n\ntype SavedQueryObject = {\n  id: number;\n  label: string;\n  sql: string;\n};\n\ninterface SavedQueryPreviewModalProps extends ToastProps {\n  fetchData: (id: number) => {};\n  onHide: () => void;\n  openInSqlLab: (id: number) => {};\n  queries: Array<SavedQueryObject>;\n  savedQuery: SavedQueryObject;\n  show: boolean;\n}\n\nconst SavedQueryPreviewModal: FunctionComponent<SavedQueryPreviewModalProps> =\n  ({\n    fetchData,\n    onHide,\n    openInSqlLab,\n    queries,\n    savedQuery,\n    show,\n    addDangerToast,\n    addSuccessToast,\n  }) => {\n    const { handleKeyPress, handleDataChange, disablePrevious, disableNext } =\n      useQueryPreviewState<SavedQueryObject>({\n        queries,\n        currentQueryId: savedQuery.id,\n        fetchData,\n      });\n\n    return (\n      <div role=\"none\" onKeyUp={handleKeyPress}>\n        <StyledModal\n          onHide={onHide}\n          show={show}\n          title={t('Query preview')}\n          footer={\n            <>\n              <Button\n                data-test=\"previous-saved-query\"\n                key=\"previous-saved-query\"\n                disabled={disablePrevious}\n                onClick={() => handleDataChange(true)}\n              >\n                {t('Previous')}\n              </Button>\n              <Button\n                data-test=\"next-saved-query\"\n                key=\"next-saved-query\"\n                disabled={disableNext}\n                onClick={() => handleDataChange(false)}\n              >\n                {t('Next')}\n              </Button>\n              <Button\n                data-test=\"open-in-sql-lab\"\n                key=\"open-in-sql-lab\"\n                buttonStyle=\"primary\"\n                onClick={() => openInSqlLab(savedQuery.id)}\n              >\n                {t('Open in SQL Lab')}\n              </Button>\n            </>\n          }\n        >\n          <QueryTitle>{t('Query name')}</QueryTitle>\n          <QueryLabel>{savedQuery.label}</QueryLabel>\n          <SyntaxHighlighterCopy\n            language=\"sql\"\n            addDangerToast={addDangerToast}\n            addSuccessToast={addSuccessToast}\n          >\n            {savedQuery.sql || ''}\n          </SyntaxHighlighterCopy>\n        </StyledModal>\n      </div>\n    );\n  };\n\nexport default withToasts(SavedQueryPreviewModal);\n"]},"metadata":{},"sourceType":"module"}