{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react/sort-prop-types */\nimport d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { getSequentialSchemeRegistry } from '@superset-ui/core';\n\nimport parcoords from './vendor/parcoords/d3.parcoords';\nimport divgrid from './vendor/parcoords/divgrid';\n\nconst propTypes = {\n  // Standard tabular data [{ fieldName1: value1, fieldName2: value2 }]\n  data: PropTypes.arrayOf(PropTypes.object),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  colorMetric: PropTypes.string,\n  includeSeries: PropTypes.bool,\n  linearColorScheme: PropTypes.string,\n  metrics: PropTypes.arrayOf(PropTypes.string),\n  series: PropTypes.string,\n  showDatatable: PropTypes.bool };\n\n\nfunction ParallelCoordinates(element, props) {\n  const {\n    data,\n    width,\n    height,\n    colorMetric,\n    includeSeries,\n    linearColorScheme,\n    metrics,\n    series,\n    showDatatable } =\n  props;\n\n  const cols = includeSeries ? [series].concat(metrics) : metrics;\n\n  const ttypes = {};\n  ttypes[series] = 'string';\n  metrics.forEach((v) => {\n    ttypes[v] = 'number';\n  });\n\n  const colorScale = colorMetric ?\n  getSequentialSchemeRegistry().\n  get(linearColorScheme).\n  createLinearScale(d3.extent(data, (d) => d[colorMetric])) :\n  () => 'grey';\n  const color = (d) => colorScale(d[colorMetric]);\n  const container = d3.\n  select(element).\n  classed('superset-legacy-chart-parallel-coordinates', true);\n  container.selectAll('*').remove();\n  const effHeight = showDatatable ? height / 2 : height;\n\n  const div = container.\n  append('div').\n  style('height', `${effHeight}px`).\n  classed('parcoords', true);\n\n  const chart = parcoords()(div.node()).\n  width(width).\n  color(color).\n  alpha(0.5).\n  composite('darken').\n  height(effHeight).\n  data(data).\n  dimensions(cols).\n  types(ttypes).\n  render().\n  createAxes().\n  shadows().\n  reorderable().\n  brushMode('1D-axes');\n\n  if (showDatatable) {\n    // create data table, row hover highlighting\n    const grid = divgrid();\n    container.\n    append('div').\n    style('height', `${effHeight}px`).\n    datum(data).\n    call(grid).\n    classed('parcoords grid', true).\n    selectAll('.row').\n    on({\n      mouseover(d) {\n        chart.highlight([d]);\n      },\n      mouseout: chart.unhighlight });\n\n    // update data table on brush event\n    chart.on('brush', (d) => {\n      d3.select('.grid').\n      datum(d).\n      call(grid).\n      selectAll('.row').\n      on({\n        mouseover(dd) {\n          chart.highlight([dd]);\n        },\n        mouseout: chart.unhighlight });\n\n    });\n  }\n}\n\nParallelCoordinates.displayName = 'ParallelCoordinates';\nParallelCoordinates.propTypes = propTypes;const _default =\n\nParallelCoordinates;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-plugin-chart-parallel-coordinates/src/ParallelCoordinates.js\");reactHotLoader.register(ParallelCoordinates, \"ParallelCoordinates\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-plugin-chart-parallel-coordinates/src/ParallelCoordinates.js\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-plugin-chart-parallel-coordinates/src/ParallelCoordinates.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["d3","PropTypes","getSequentialSchemeRegistry","parcoords","divgrid","propTypes","data","arrayOf","object","width","number","height","colorMetric","string","includeSeries","bool","linearColorScheme","metrics","series","showDatatable","ParallelCoordinates","element","props","cols","concat","ttypes","forEach","v","colorScale","get","createLinearScale","extent","d","color","container","select","classed","selectAll","remove","effHeight","div","append","style","chart","node","alpha","composite","dimensions","types","render","createAxes","shadows","reorderable","brushMode","grid","datum","call","on","mouseover","highlight","mouseout","unhighlight","dd","displayName"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-plugin-chart-parallel-coordinates/src/ParallelCoordinates.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react/sort-prop-types */\nimport d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { getSequentialSchemeRegistry } from '@superset-ui/core';\n\nimport parcoords from './vendor/parcoords/d3.parcoords';\nimport divgrid from './vendor/parcoords/divgrid';\n\nconst propTypes = {\n  // Standard tabular data [{ fieldName1: value1, fieldName2: value2 }]\n  data: PropTypes.arrayOf(PropTypes.object),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  colorMetric: PropTypes.string,\n  includeSeries: PropTypes.bool,\n  linearColorScheme: PropTypes.string,\n  metrics: PropTypes.arrayOf(PropTypes.string),\n  series: PropTypes.string,\n  showDatatable: PropTypes.bool,\n};\n\nfunction ParallelCoordinates(element, props) {\n  const {\n    data,\n    width,\n    height,\n    colorMetric,\n    includeSeries,\n    linearColorScheme,\n    metrics,\n    series,\n    showDatatable,\n  } = props;\n\n  const cols = includeSeries ? [series].concat(metrics) : metrics;\n\n  const ttypes = {};\n  ttypes[series] = 'string';\n  metrics.forEach(v => {\n    ttypes[v] = 'number';\n  });\n\n  const colorScale = colorMetric\n    ? getSequentialSchemeRegistry()\n        .get(linearColorScheme)\n        .createLinearScale(d3.extent(data, d => d[colorMetric]))\n    : () => 'grey';\n  const color = d => colorScale(d[colorMetric]);\n  const container = d3\n    .select(element)\n    .classed('superset-legacy-chart-parallel-coordinates', true);\n  container.selectAll('*').remove();\n  const effHeight = showDatatable ? height / 2 : height;\n\n  const div = container\n    .append('div')\n    .style('height', `${effHeight}px`)\n    .classed('parcoords', true);\n\n  const chart = parcoords()(div.node())\n    .width(width)\n    .color(color)\n    .alpha(0.5)\n    .composite('darken')\n    .height(effHeight)\n    .data(data)\n    .dimensions(cols)\n    .types(ttypes)\n    .render()\n    .createAxes()\n    .shadows()\n    .reorderable()\n    .brushMode('1D-axes');\n\n  if (showDatatable) {\n    // create data table, row hover highlighting\n    const grid = divgrid();\n    container\n      .append('div')\n      .style('height', `${effHeight}px`)\n      .datum(data)\n      .call(grid)\n      .classed('parcoords grid', true)\n      .selectAll('.row')\n      .on({\n        mouseover(d) {\n          chart.highlight([d]);\n        },\n        mouseout: chart.unhighlight,\n      });\n    // update data table on brush event\n    chart.on('brush', d => {\n      d3.select('.grid')\n        .datum(d)\n        .call(grid)\n        .selectAll('.row')\n        .on({\n          mouseover(dd) {\n            chart.highlight([dd]);\n          },\n          mouseout: chart.unhighlight,\n        });\n    });\n  }\n}\n\nParallelCoordinates.displayName = 'ParallelCoordinates';\nParallelCoordinates.propTypes = propTypes;\n\nexport default ParallelCoordinates;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}