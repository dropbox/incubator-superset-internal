{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { css, useTheme, useTruncation } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { Row, FilterName, InternalRow } from './Styles';\nimport { FilterConfigurationLink } from '../FilterBar/FilterConfigurationLink';\nimport { TooltipWithTruncation } from './TooltipWithTruncation';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const NameRow = (_ref) => {let { filter, hidePopover } = _ref;\n  const theme = useTheme();\n  const filterNameRef = useRef(null);\n  const [elementsTruncated] = useTruncation(filterNameRef);\n  const dashboardId = useSelector((_ref2) => {let { dashboardInfo } = _ref2;return dashboardInfo.id;});\n  const canEdit = useSelector((_ref3) => {let { dashboardInfo } = _ref3;return dashboardInfo.dash_edit_perm;});\n  return ___EmotionJSX(Row, { css: (theme) => css`\n        margin-bottom: ${theme.gridUnit * 3}px;\n        justify-content: space-between;\n      ` },\n  ___EmotionJSX(InternalRow, null,\n  ___EmotionJSX(Icons.FilterSmall, { css: (theme) => css`\n            margin-right: ${theme.gridUnit}px;\n          ` }),\n  ___EmotionJSX(TooltipWithTruncation, { title: elementsTruncated ? filter.name : null },\n  ___EmotionJSX(FilterName, { ref: filterNameRef }, filter.name))),\n\n\n  canEdit && ___EmotionJSX(FilterConfigurationLink, { dashboardId: dashboardId, onClick: hidePopover, initialFilterId: filter.id },\n  ___EmotionJSX(Icons.Edit, { iconSize: \"l\", iconColor: theme.colors.grayscale.light1 })));\n\n\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,GAAT,EAA6BC,QAA7B,EAAuCC,aAAvC,QAA4D,mBAA5D;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AAEA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,WAA1B,QAA6C,UAA7C;AAEA,SAASC,uBAAT,QAAwC,sCAAxC;AACA,SAASC,qBAAT,QAAsC,yBAAtC,C;AAEA,OAAO,MAAMC,OAAO,GAAG,UAGgC,KAH/B,EACtBC,MADsB,EAEtBC,WAFsB,EAG+B;EACrD,MAAMC,KAAK,GAAGX,QAAQ,EAAtB;EACA,MAAMY,aAAa,GAAGf,MAAM,CAAc,IAAd,CAA5B;EACA,MAAM,CAACgB,iBAAD,IAAsBZ,aAAa,CAACW,aAAD,CAAzC;EACA,MAAME,WAAW,GAAGhB,WAAW,CAC7B,gBAAC,EAAEiB,aAAF,EAAD,gBAAuBA,aAAa,CAACC,EAArC,EAD6B,CAA/B;EAIA,MAAMC,OAAO,GAAGnB,WAAW,CACzB,gBAAC,EAAEiB,aAAF,EAAD,gBAAuBA,aAAa,CAACG,cAArC,EADyB,CAA3B;EAIA,OACE,cAAC,GAAD,IACE,GAAG,EAAE,CAACP,KAAD,KAA0BZ,GAAG;yBACfY,KAAK,CAACQ,QAAN,GAAiB,CAAC;;OAFvC;EAME,cAAC,WAAD;EACE,cAAC,KAAD,CAAO,WAAP,IACE,GAAG,EAAE,CAACR,KAAD,KAA0BZ,GAAG;4BAChBY,KAAK,CAACQ,QAAQ;WAFlC,GADF;EAME,cAAC,qBAAD,IAAuB,KAAK,EAAEN,iBAAiB,GAAGJ,MAAM,CAACW,IAAV,GAAiB,IAAhE;EACE,cAAC,UAAD,IAAY,GAAG,EAAER,aAAjB,IAAiCH,MAAM,CAACW,IAAxC,CADF,CANF,CANF;;;EAgBGH,OAAO,IACN,cAAC,uBAAD,IACE,WAAW,EAAEH,WADf,EAEE,OAAO,EAAEJ,WAFX,EAGE,eAAe,EAAED,MAAM,CAACO,EAH1B;EAKE,cAAC,KAAD,CAAO,IAAP,IAAY,QAAQ,EAAC,GAArB,EAAyB,SAAS,EAAEL,KAAK,CAACU,MAAN,CAAaC,SAAb,CAAuBC,MAA3D,GALF,CAjBJ,CADF;;;AA4BD,CA3CM","names":["React","useRef","useSelector","css","useTheme","useTruncation","Icons","Row","FilterName","InternalRow","FilterConfigurationLink","TooltipWithTruncation","NameRow","filter","hidePopover","theme","filterNameRef","elementsTruncated","dashboardId","dashboardInfo","id","canEdit","dash_edit_perm","gridUnit","name","colors","grayscale","light1"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/NameRow.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { css, SupersetTheme, useTheme, useTruncation } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { RootState } from 'src/dashboard/types';\nimport { Row, FilterName, InternalRow } from './Styles';\nimport { FilterCardRowProps } from './types';\nimport { FilterConfigurationLink } from '../FilterBar/FilterConfigurationLink';\nimport { TooltipWithTruncation } from './TooltipWithTruncation';\n\nexport const NameRow = ({\n  filter,\n  hidePopover,\n}: FilterCardRowProps & { hidePopover: () => void }) => {\n  const theme = useTheme();\n  const filterNameRef = useRef<HTMLElement>(null);\n  const [elementsTruncated] = useTruncation(filterNameRef);\n  const dashboardId = useSelector<RootState, number>(\n    ({ dashboardInfo }) => dashboardInfo.id,\n  );\n\n  const canEdit = useSelector<RootState, boolean>(\n    ({ dashboardInfo }) => dashboardInfo.dash_edit_perm,\n  );\n\n  return (\n    <Row\n      css={(theme: SupersetTheme) => css`\n        margin-bottom: ${theme.gridUnit * 3}px;\n        justify-content: space-between;\n      `}\n    >\n      <InternalRow>\n        <Icons.FilterSmall\n          css={(theme: SupersetTheme) => css`\n            margin-right: ${theme.gridUnit}px;\n          `}\n        />\n        <TooltipWithTruncation title={elementsTruncated ? filter.name : null}>\n          <FilterName ref={filterNameRef}>{filter.name}</FilterName>\n        </TooltipWithTruncation>\n      </InternalRow>\n      {canEdit && (\n        <FilterConfigurationLink\n          dashboardId={dashboardId}\n          onClick={hidePopover}\n          initialFilterId={filter.id}\n        >\n          <Icons.Edit iconSize=\"l\" iconColor={theme.colors.grayscale.light1} />\n        </FilterConfigurationLink>\n      )}\n    </Row>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}