{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useApiV1Resource, useTransformedResource } from './apiResources';\nexport const useDashboard = (idOrSlug) => useTransformedResource(useApiV1Resource(`/api/v1/dashboard/${idOrSlug}`), (dashboard) => ({\n  ...dashboard,\n  // TODO: load these at the API level\n  metadata: dashboard.json_metadata && JSON.parse(dashboard.json_metadata) || {},\n  position_data: dashboard.position_json && JSON.parse(dashboard.position_json) }));\n\n// gets the chart definitions for a dashboard\n__signature__(useDashboard, \"useTransformedResource{}\\nuseApiV1Resource{}\", () => [useTransformedResource, useApiV1Resource]);export const useDashboardCharts = (idOrSlug) => useApiV1Resource(`/api/v1/dashboard/${idOrSlug}/charts`);\n// gets the datasets for a dashboard\n// important: this endpoint only returns the fields in the dataset\n// that are necessary for rendering the given dashboard\n__signature__(useDashboardCharts, \"useApiV1Resource{}\", () => [useApiV1Resource]);export const useDashboardDatasets = (idOrSlug) => useApiV1Resource(`/api/v1/dashboard/${idOrSlug}/datasets`);__signature__(useDashboardDatasets, \"useApiV1Resource{}\", () => [useApiV1Resource]);\nexport const useEmbeddedDashboard = (idOrSlug) => useApiV1Resource(`/api/v1/dashboard/${idOrSlug}/embedded`);__signature__(useEmbeddedDashboard, \"useApiV1Resource{}\", () => [useApiV1Resource]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useDashboard, \"useDashboard\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/hooks/apiResources/dashboards.ts\");reactHotLoader.register(useDashboardCharts, \"useDashboardCharts\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/hooks/apiResources/dashboards.ts\");reactHotLoader.register(useDashboardDatasets, \"useDashboardDatasets\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/hooks/apiResources/dashboards.ts\");reactHotLoader.register(useEmbeddedDashboard, \"useEmbeddedDashboard\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/hooks/apiResources/dashboards.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAqBA,SAASA,gBAAT,EAA2BC,sBAA3B,QAAyD,gBAAzD;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,KAC1BF,sBAAsB,CACpBD,gBAAgB,CAAY,qBAAqBG,QAAQ,EAAzC,CADI,EAEpB,UAAS,MAAK;EACZ,GAAGC,SADS;EAEZ;EACAC,QAAQ,EACLD,SAAS,CAACE,aAAV,IAA2BC,IAAI,CAACC,KAAL,CAAWJ,SAAS,CAACE,aAArB,CAA5B,IAAoE,EAJ1D;EAKZG,aAAa,EACXL,SAAS,CAACM,aAAV,IAA2BH,IAAI,CAACC,KAAL,CAAWJ,SAAS,CAACM,aAArB,CANjB,EAAL,CAFW,CADjB;;AAaP;cAbaR,Y,yDACXD,sB,EACED,gB,GAYJ,OAAO,MAAMW,kBAAkB,GAAG,CAACR,QAAD,KAChCH,gBAAgB,CAAU,qBAAqBG,QAAQ,SAAvC,CADX;AAGP;AACA;AACA;cALaQ,kB,+BACXX,gB,GAKF,OAAO,MAAMY,oBAAoB,GAAG,CAACT,QAAD,KAClCH,gBAAgB,CAAe,qBAAqBG,QAAQ,WAA5C,CADX,C,cAAMS,oB,+BACXZ,gB;AAEF,OAAO,MAAMa,oBAAoB,GAAG,CAACV,QAAD,KAClCH,gBAAgB,CAAoB,qBAAqBG,QAAQ,WAAjD,CADX,C,cAAMU,oB,+BACXb,gB,oLAxBWE,Y,mJAcAS,kB,yJAMAC,oB,2JAGAC,oB","names":["useApiV1Resource","useTransformedResource","useDashboard","idOrSlug","dashboard","metadata","json_metadata","JSON","parse","position_data","position_json","useDashboardCharts","useDashboardDatasets","useEmbeddedDashboard"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/hooks/apiResources/dashboards.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Dashboard, Datasource, EmbeddedDashboard } from 'src/dashboard/types';\nimport { Chart } from 'src/types/Chart';\nimport { useApiV1Resource, useTransformedResource } from './apiResources';\n\nexport const useDashboard = (idOrSlug: string | number) =>\n  useTransformedResource(\n    useApiV1Resource<Dashboard>(`/api/v1/dashboard/${idOrSlug}`),\n    dashboard => ({\n      ...dashboard,\n      // TODO: load these at the API level\n      metadata:\n        (dashboard.json_metadata && JSON.parse(dashboard.json_metadata)) || {},\n      position_data:\n        dashboard.position_json && JSON.parse(dashboard.position_json),\n    }),\n  );\n\n// gets the chart definitions for a dashboard\nexport const useDashboardCharts = (idOrSlug: string | number) =>\n  useApiV1Resource<Chart[]>(`/api/v1/dashboard/${idOrSlug}/charts`);\n\n// gets the datasets for a dashboard\n// important: this endpoint only returns the fields in the dataset\n// that are necessary for rendering the given dashboard\nexport const useDashboardDatasets = (idOrSlug: string | number) =>\n  useApiV1Resource<Datasource[]>(`/api/v1/dashboard/${idOrSlug}/datasets`);\n\nexport const useEmbeddedDashboard = (idOrSlug: string | number) =>\n  useApiV1Resource<EmbeddedDashboard>(`/api/v1/dashboard/${idOrSlug}/embedded`);\n"]},"metadata":{},"sourceType":"module"}