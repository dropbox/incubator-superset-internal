{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport Tag from './Tag';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst TagsDiv = styled.div`\n  max-width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\nconst TagsList = (_ref) => {let { tags, editable = false, onDelete, maxTags } = _ref;\n  const [tempMaxTags, setTempMaxTags] = useState(maxTags);\n  const handleDelete = (index) => {\n    onDelete == null ? void 0 : onDelete(index);\n  };\n  const expand = () => setTempMaxTags(undefined);\n  const collapse = () => setTempMaxTags(maxTags);\n  const tagsIsLong = useMemo(() => tempMaxTags ? tags.length > tempMaxTags : null, [tags.length, tempMaxTags]);\n  const extraTags = useMemo(() => typeof tempMaxTags === 'number' ? tags.length - tempMaxTags + 1 : null, [tagsIsLong, tags.length, tempMaxTags]);\n  return ___EmotionJSX(TagsDiv, { className: \"tag-list\" },\n  tagsIsLong && typeof tempMaxTags === 'number' ? ___EmotionJSX(React.Fragment, null,\n  tags.slice(0, tempMaxTags - 1).map((tag, index) => ___EmotionJSX(Tag, { id: tag.id, key: tag.id, name: tag.name, index: index, onDelete: handleDelete, editable: editable })),\n  tags.length > tempMaxTags ? ___EmotionJSX(Tag, { name: `+${extraTags}...`, onClick: expand }) : null) :\n  ___EmotionJSX(React.Fragment, null,\n  tags.map((tag, index) => ___EmotionJSX(Tag, { id: tag.id, key: tag.id, name: tag.name, index: index, onDelete: handleDelete, editable: editable })),\n  maxTags ? tags.length > maxTags ? ___EmotionJSX(Tag, { name: \"...\", onClick: collapse }) : null : null));\n\n\n};__signature__(TagsList, \"useState{[tempMaxTags, setTempMaxTags](maxTags)}\\nuseMemo{tagsIsLong}\\nuseMemo{extraTags}\");const _default =\nTagsList;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TagsDiv, \"TagsDiv\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Tags/TagsList.tsx\");reactHotLoader.register(TagsList, \"TagsList\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Tags/TagsList.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Tags/TagsList.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,OAAOC,GAAP,MAAgB,OAAhB,C;AAcA,MAAMC,OAAO,GAAGF,MAAM,CAACG,GAAG;;;;;CAA1B;AAOA,MAAMC,QAAQ,GAAG,UAKG,KALF,EAChBC,IADgB,EAEhBC,QAAQ,GAAG,KAFK,EAGhBC,QAHgB,EAIhBC,OAJgB,EAKE;EAClB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAqBS,OAArB,CAA9C;EAEA,MAAMG,YAAY,GAAG,CAACC,KAAD,KAAkB;IACrCL,QAAQ,QAAR,oBAAQ,CAAGK,KAAH,CAAR;EACD,CAFD;EAIA,MAAMC,MAAM,GAAG,MAAMH,cAAc,CAACI,SAAD,CAAnC;EAEA,MAAMC,QAAQ,GAAG,MAAML,cAAc,CAACF,OAAD,CAArC;EAEA,MAAMQ,UAAU,GAAmBlB,OAAO,CACxC,MAAOW,WAAW,GAAGJ,IAAI,CAACY,MAAL,GAAcR,WAAjB,GAA+B,IADT,EAExC,CAACJ,IAAI,CAACY,MAAN,EAAcR,WAAd,CAFwC,CAA1C;EAKA,MAAMS,SAAS,GAAkBpB,OAAO,CACtC,MACE,OAAOW,WAAP,KAAuB,QAAvB,GAAkCJ,IAAI,CAACY,MAAL,GAAcR,WAAd,GAA4B,CAA9D,GAAkE,IAF9B,EAGtC,CAACO,UAAD,EAAaX,IAAI,CAACY,MAAlB,EAA0BR,WAA1B,CAHsC,CAAxC;EAMA,OACE,cAAC,OAAD,IAAS,SAAS,EAAC,UAAnB;EACGO,UAAU,IAAI,OAAOP,WAAP,KAAuB,QAArC,GACC;EACGJ,IAAI,CAACc,KAAL,CAAW,CAAX,EAAcV,WAAW,GAAG,CAA5B,EAA+BW,GAA/B,CAAmC,CAACC,GAAD,EAAeT,KAAf,KAClC,cAAC,GAAD,IACE,EAAE,EAAES,GAAG,CAACC,EADV,EAEE,GAAG,EAAED,GAAG,CAACC,EAFX,EAGE,IAAI,EAAED,GAAG,CAACE,IAHZ,EAIE,KAAK,EAAEX,KAJT,EAKE,QAAQ,EAAED,YALZ,EAME,QAAQ,EAAEL,QANZ,GADD,CADH;EAWGD,IAAI,CAACY,MAAL,GAAcR,WAAd,GACC,cAAC,GAAD,IAAK,IAAI,EAAE,IAAIS,SAAS,KAAxB,EAA+B,OAAO,EAAEL,MAAxC,GADD,GAEG,IAbN,CADD;EAiBC;EACGR,IAAI,CAACe,GAAL,CAAS,CAACC,GAAD,EAAeT,KAAf,KACR,cAAC,GAAD,IACE,EAAE,EAAES,GAAG,CAACC,EADV,EAEE,GAAG,EAAED,GAAG,CAACC,EAFX,EAGE,IAAI,EAAED,GAAG,CAACE,IAHZ,EAIE,KAAK,EAAEX,KAJT,EAKE,QAAQ,EAAED,YALZ,EAME,QAAQ,EAAEL,QANZ,GADD,CADH;EAWGE,OAAO,GACNH,IAAI,CAACY,MAAL,GAAcT,OAAd,GACE,cAAC,GAAD,IAAK,IAAI,EAAC,KAAV,EAAgB,OAAO,EAAEO,QAAzB,GADF,GAEI,IAHE,GAIJ,IAfN,CAlBJ,CADF;;;AAuCD,CAlED,C,cAAMX,Q;AAoESA,Q,CAAf,wB,iLA3EMF,O,0IAOAE,Q","names":["React","useMemo","useState","styled","Tag","TagsDiv","div","TagsList","tags","editable","onDelete","maxTags","tempMaxTags","setTempMaxTags","handleDelete","index","expand","undefined","collapse","tagsIsLong","length","extraTags","slice","map","tag","id","name"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Tags/TagsList.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport Tag from './Tag';\n\nexport type TagsListProps = {\n  tags: TagType[];\n  editable?: boolean;\n  /**\n   * OnDelete:\n   * Only applies when editable is true\n   * Callback for when a tag is deleted\n   */\n  onDelete?: ((index: number) => void) | undefined;\n  maxTags?: number | undefined;\n};\n\nconst TagsDiv = styled.div`\n  max-width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nconst TagsList = ({\n  tags,\n  editable = false,\n  onDelete,\n  maxTags,\n}: TagsListProps) => {\n  const [tempMaxTags, setTempMaxTags] = useState<number | undefined>(maxTags);\n\n  const handleDelete = (index: number) => {\n    onDelete?.(index);\n  };\n\n  const expand = () => setTempMaxTags(undefined);\n\n  const collapse = () => setTempMaxTags(maxTags);\n\n  const tagsIsLong: boolean | null = useMemo(\n    () => (tempMaxTags ? tags.length > tempMaxTags : null),\n    [tags.length, tempMaxTags],\n  );\n\n  const extraTags: number | null = useMemo(\n    () =>\n      typeof tempMaxTags === 'number' ? tags.length - tempMaxTags + 1 : null,\n    [tagsIsLong, tags.length, tempMaxTags],\n  );\n\n  return (\n    <TagsDiv className=\"tag-list\">\n      {tagsIsLong && typeof tempMaxTags === 'number' ? (\n        <>\n          {tags.slice(0, tempMaxTags - 1).map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {tags.length > tempMaxTags ? (\n            <Tag name={`+${extraTags}...`} onClick={expand} />\n          ) : null}\n        </>\n      ) : (\n        <>\n          {tags.map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {maxTags ? (\n            tags.length > maxTags ? (\n              <Tag name=\"...\" onClick={collapse} />\n            ) : null\n          ) : null}\n        </>\n      )}\n    </TagsDiv>\n  );\n};\n\nexport default TagsList;\n"]},"metadata":{},"sourceType":"module"}