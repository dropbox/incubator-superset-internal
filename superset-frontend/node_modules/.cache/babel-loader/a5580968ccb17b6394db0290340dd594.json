{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport camelCase from 'lodash/camelCase';\nimport isPlainObject from 'lodash/isPlainObject';\nimport mapKeys from 'lodash/mapKeys';\nexport default function convertKeysToCamelCase(object) {\n  if (object === null || object === undefined) {\n    return object;\n  }\n  if (isPlainObject(object)) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return mapKeys(object, (_, k) => camelCase(k));\n  }\n  throw new Error(`Cannot convert input that is not a plain object: ${object}`);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(convertKeysToCamelCase, \"convertKeysToCamelCase\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/utils/convertKeysToCamelCase.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,eAAc,SAAUC,sBAAV,CAAoCC,MAApC,EAA6C;EACzD,IAAIA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAKC,SAAlC,EAA6C;IAC3C,OAAOD,MAAP;EACD;EACD,IAAIH,aAAa,CAACG,MAAD,CAAjB,EAA2B;IACzB;IACA,OAAOF,OAAO,CAACE,MAAD,EAAmC,CAACE,CAAD,EAAIC,CAAJ,KAC/CP,SAAS,CAACO,CAAD,CADG,CAAd;EAGD;EACD,MAAM,IAAIC,KAAJ,CAAU,oDAAoDJ,MAAM,EAApE,CAAN;AACD,C,iLAXuBD,sB","names":["camelCase","isPlainObject","mapKeys","convertKeysToCamelCase","object","undefined","_","k","Error"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/utils/convertKeysToCamelCase.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport camelCase from 'lodash/camelCase';\nimport isPlainObject from 'lodash/isPlainObject';\nimport mapKeys from 'lodash/mapKeys';\n\nexport default function convertKeysToCamelCase<T>(object: T) {\n  if (object === null || object === undefined) {\n    return object;\n  }\n  if (isPlainObject(object)) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return mapKeys(object as { [key: string]: any }, (_, k) =>\n      camelCase(k),\n    ) as T;\n  }\n  throw new Error(`Cannot convert input that is not a plain object: ${object}`);\n}\n"]},"metadata":{},"sourceType":"module"}