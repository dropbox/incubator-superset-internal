{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\nCUSTOM_OPERATORS,\nOperators,\nOPERATOR_ENUM_TO_OPERATOR_TYPE } from\n'src/explore/constants';\nimport { translateToSql } from '../utils/translateToSQL';\nimport { CLAUSES, EXPRESSION_TYPES } from '../types';\n\nconst CUSTOM_OPERATIONS = [...CUSTOM_OPERATORS].map(\n(op) => OPERATOR_ENUM_TO_OPERATOR_TYPE[op].operation);\n\n\nexport default class AdhocFilter {\n  constructor(adhocFilter) {\n    this.expressionType = adhocFilter.expressionType || EXPRESSION_TYPES.SIMPLE;\n    if (this.expressionType === EXPRESSION_TYPES.SIMPLE) {var _adhocFilter$operator;\n      this.subject = adhocFilter.subject;\n      this.operator = (_adhocFilter$operator = adhocFilter.operator) == null ? void 0 : _adhocFilter$operator.toUpperCase();\n      this.operatorId = adhocFilter.operatorId;\n      this.comparator = adhocFilter.comparator;\n      if (\n      [Operators.IS_TRUE, Operators.IS_FALSE].indexOf(\n      adhocFilter.operatorId) >=\n      0)\n      {\n        this.comparator = adhocFilter.operatorId === Operators.IS_TRUE;\n      }\n      if (\n      [Operators.IS_NULL, Operators.IS_NOT_NULL].indexOf(\n      adhocFilter.operatorId) >=\n      0)\n      {\n        this.comparator = null;\n      }\n      this.clause = adhocFilter.clause || CLAUSES.WHERE;\n      this.sqlExpression = null;\n    } else if (this.expressionType === EXPRESSION_TYPES.SQL) {\n      this.sqlExpression =\n      typeof adhocFilter.sqlExpression === 'string' ?\n      adhocFilter.sqlExpression :\n      translateToSql(adhocFilter, { useSimple: true });\n      this.clause = adhocFilter.clause;\n      if (\n      adhocFilter.operator &&\n      CUSTOM_OPERATIONS.indexOf(adhocFilter.operator) >= 0)\n      {\n        this.subject = adhocFilter.subject;\n        this.operator = adhocFilter.operator;\n        this.operatorId = adhocFilter.operatorId;\n      } else {\n        this.subject = null;\n        this.operator = null;\n      }\n      this.comparator = null;\n    }\n    this.isExtra = !!adhocFilter.isExtra;\n    this.isNew = !!adhocFilter.isNew;\n    this.datasourceWarning = !!adhocFilter.datasourceWarning;\n\n    this.filterOptionName =\n    adhocFilter.filterOptionName ||\n    `filter_${Math.random().toString(36).substring(2, 15)}_${Math.random().\n    toString(36).\n    substring(2, 15)}`;\n  }\n\n  duplicateWith(nextFields) {\n    return new AdhocFilter({\n      ...this,\n      // all duplicated fields are not new (i.e. will not open popup automatically)\n      isNew: false,\n      ...nextFields });\n\n  }\n\n  equals(adhocFilter) {\n    return (\n      adhocFilter.expressionType === this.expressionType &&\n      adhocFilter.sqlExpression === this.sqlExpression &&\n      adhocFilter.operator === this.operator &&\n      adhocFilter.operatorId === this.operatorId &&\n      adhocFilter.comparator === this.comparator &&\n      adhocFilter.subject === this.subject);\n\n  }\n\n  isValid() {\n    const nullCheckOperators = [Operators.IS_NOT_NULL, Operators.IS_NULL].map(\n    (op) => OPERATOR_ENUM_TO_OPERATOR_TYPE[op].operation);\n\n    const truthCheckOperators = [Operators.IS_TRUE, Operators.IS_FALSE].map(\n    (op) => OPERATOR_ENUM_TO_OPERATOR_TYPE[op].operation);\n\n    if (this.expressionType === EXPRESSION_TYPES.SIMPLE) {\n      if (nullCheckOperators.indexOf(this.operator) >= 0) {\n        return !!(this.operator && this.subject);\n      }\n      if (truthCheckOperators.indexOf(this.operator) >= 0) {\n        return !!(this.subject && this.comparator !== null);\n      }\n      if (this.operator && this.subject && this.clause) {\n        if (Array.isArray(this.comparator)) {\n          if (this.comparator.length > 0) {\n            // A non-empty array of values ('IN' or 'NOT IN' clauses)\n            return true;\n          }\n        } else if (this.comparator !== null) {\n          // A value has been selected or typed\n          return true;\n        }\n      }\n    } else if (this.expressionType === EXPRESSION_TYPES.SQL) {\n      return !!(this.sqlExpression && this.clause);\n    }\n    return false;\n  }\n\n  getDefaultLabel() {\n    const label = this.translateToSql();\n    return label.length < 43 ? label : `${label.substring(0, 40)}...`;\n  }\n\n  getTooltipTitle() {\n    return this.translateToSql();\n  }\n\n  translateToSql() {\n    return translateToSql(this);\n  }}","map":{"version":3,"names":["CUSTOM_OPERATORS","Operators","OPERATOR_ENUM_TO_OPERATOR_TYPE","translateToSql","CLAUSES","EXPRESSION_TYPES","CUSTOM_OPERATIONS","map","op","operation","AdhocFilter","constructor","adhocFilter","expressionType","SIMPLE","subject","operator","toUpperCase","operatorId","comparator","IS_TRUE","IS_FALSE","indexOf","IS_NULL","IS_NOT_NULL","clause","WHERE","sqlExpression","SQL","useSimple","isExtra","isNew","datasourceWarning","filterOptionName","Math","random","toString","substring","duplicateWith","nextFields","equals","isValid","nullCheckOperators","truthCheckOperators","Array","isArray","length","getDefaultLabel","label","getTooltipTitle"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilter/index.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  CUSTOM_OPERATORS,\n  Operators,\n  OPERATOR_ENUM_TO_OPERATOR_TYPE,\n} from 'src/explore/constants';\nimport { translateToSql } from '../utils/translateToSQL';\nimport { CLAUSES, EXPRESSION_TYPES } from '../types';\n\nconst CUSTOM_OPERATIONS = [...CUSTOM_OPERATORS].map(\n  op => OPERATOR_ENUM_TO_OPERATOR_TYPE[op].operation,\n);\n\nexport default class AdhocFilter {\n  constructor(adhocFilter) {\n    this.expressionType = adhocFilter.expressionType || EXPRESSION_TYPES.SIMPLE;\n    if (this.expressionType === EXPRESSION_TYPES.SIMPLE) {\n      this.subject = adhocFilter.subject;\n      this.operator = adhocFilter.operator?.toUpperCase();\n      this.operatorId = adhocFilter.operatorId;\n      this.comparator = adhocFilter.comparator;\n      if (\n        [Operators.IS_TRUE, Operators.IS_FALSE].indexOf(\n          adhocFilter.operatorId,\n        ) >= 0\n      ) {\n        this.comparator = adhocFilter.operatorId === Operators.IS_TRUE;\n      }\n      if (\n        [Operators.IS_NULL, Operators.IS_NOT_NULL].indexOf(\n          adhocFilter.operatorId,\n        ) >= 0\n      ) {\n        this.comparator = null;\n      }\n      this.clause = adhocFilter.clause || CLAUSES.WHERE;\n      this.sqlExpression = null;\n    } else if (this.expressionType === EXPRESSION_TYPES.SQL) {\n      this.sqlExpression =\n        typeof adhocFilter.sqlExpression === 'string'\n          ? adhocFilter.sqlExpression\n          : translateToSql(adhocFilter, { useSimple: true });\n      this.clause = adhocFilter.clause;\n      if (\n        adhocFilter.operator &&\n        CUSTOM_OPERATIONS.indexOf(adhocFilter.operator) >= 0\n      ) {\n        this.subject = adhocFilter.subject;\n        this.operator = adhocFilter.operator;\n        this.operatorId = adhocFilter.operatorId;\n      } else {\n        this.subject = null;\n        this.operator = null;\n      }\n      this.comparator = null;\n    }\n    this.isExtra = !!adhocFilter.isExtra;\n    this.isNew = !!adhocFilter.isNew;\n    this.datasourceWarning = !!adhocFilter.datasourceWarning;\n\n    this.filterOptionName =\n      adhocFilter.filterOptionName ||\n      `filter_${Math.random().toString(36).substring(2, 15)}_${Math.random()\n        .toString(36)\n        .substring(2, 15)}`;\n  }\n\n  duplicateWith(nextFields) {\n    return new AdhocFilter({\n      ...this,\n      // all duplicated fields are not new (i.e. will not open popup automatically)\n      isNew: false,\n      ...nextFields,\n    });\n  }\n\n  equals(adhocFilter) {\n    return (\n      adhocFilter.expressionType === this.expressionType &&\n      adhocFilter.sqlExpression === this.sqlExpression &&\n      adhocFilter.operator === this.operator &&\n      adhocFilter.operatorId === this.operatorId &&\n      adhocFilter.comparator === this.comparator &&\n      adhocFilter.subject === this.subject\n    );\n  }\n\n  isValid() {\n    const nullCheckOperators = [Operators.IS_NOT_NULL, Operators.IS_NULL].map(\n      op => OPERATOR_ENUM_TO_OPERATOR_TYPE[op].operation,\n    );\n    const truthCheckOperators = [Operators.IS_TRUE, Operators.IS_FALSE].map(\n      op => OPERATOR_ENUM_TO_OPERATOR_TYPE[op].operation,\n    );\n    if (this.expressionType === EXPRESSION_TYPES.SIMPLE) {\n      if (nullCheckOperators.indexOf(this.operator) >= 0) {\n        return !!(this.operator && this.subject);\n      }\n      if (truthCheckOperators.indexOf(this.operator) >= 0) {\n        return !!(this.subject && this.comparator !== null);\n      }\n      if (this.operator && this.subject && this.clause) {\n        if (Array.isArray(this.comparator)) {\n          if (this.comparator.length > 0) {\n            // A non-empty array of values ('IN' or 'NOT IN' clauses)\n            return true;\n          }\n        } else if (this.comparator !== null) {\n          // A value has been selected or typed\n          return true;\n        }\n      }\n    } else if (this.expressionType === EXPRESSION_TYPES.SQL) {\n      return !!(this.sqlExpression && this.clause);\n    }\n    return false;\n  }\n\n  getDefaultLabel() {\n    const label = this.translateToSql();\n    return label.length < 43 ? label : `${label.substring(0, 40)}...`;\n  }\n\n  getTooltipTitle() {\n    return this.translateToSql();\n  }\n\n  translateToSql() {\n    return translateToSql(this);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}