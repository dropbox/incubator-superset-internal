{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getCategoricalSchemeRegistry, t } from '@superset-ui/core';\n\nimport ColorSchemeControl from 'src/explore/components/controls/ColorSchemeControl';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  onChange: PropTypes.func,\n  labelMargin: PropTypes.number,\n  colorScheme: PropTypes.string,\n  hasCustomLabelColors: PropTypes.bool };\n\n\nconst defaultProps = {\n  hasCustomLabelColors: false,\n  colorScheme: undefined,\n  onChange: () => {} };\n\n\nclass ColorSchemeControlWrapper extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { hovered: false };\n    this.categoricalSchemeRegistry = getCategoricalSchemeRegistry();\n    this.choices = this.categoricalSchemeRegistry.keys().map((s) => [s, s]);\n    this.schemes = this.categoricalSchemeRegistry.getMap();\n  }\n\n  setHover(hovered) {\n    this.setState({ hovered });\n  }\n\n  render() {\n    const { colorScheme, labelMargin = 0, hasCustomLabelColors } = this.props;\n    return (\n      ___EmotionJSX(ColorSchemeControl, {\n        description: t(\n        \"Any color palette selected here will override the colors applied to this dashboard's individual charts\"),\n\n        labelMargin: labelMargin,\n        name: \"color_scheme\",\n        onChange: this.props.onChange,\n        value: colorScheme,\n        choices: this.choices,\n        clearable: true,\n        schemes: this.schemes,\n        hovered: this.state.hovered,\n        hasCustomLabelColors: hasCustomLabelColors }));\n\n\n  }}\n\n\nColorSchemeControlWrapper.propTypes = propTypes;\nColorSchemeControlWrapper.defaultProps = defaultProps;\n\nexport default ColorSchemeControlWrapper;","map":{"version":3,"names":["PropTypes","React","getCategoricalSchemeRegistry","t","ColorSchemeControl","propTypes","onChange","func","labelMargin","number","colorScheme","string","hasCustomLabelColors","bool","defaultProps","undefined","ColorSchemeControlWrapper","PureComponent","constructor","props","state","hovered","categoricalSchemeRegistry","choices","keys","map","s","schemes","getMap","setHover","setState","render"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/ColorSchemeControlWrapper.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getCategoricalSchemeRegistry, t } from '@superset-ui/core';\n\nimport ColorSchemeControl from 'src/explore/components/controls/ColorSchemeControl';\n\nconst propTypes = {\n  onChange: PropTypes.func,\n  labelMargin: PropTypes.number,\n  colorScheme: PropTypes.string,\n  hasCustomLabelColors: PropTypes.bool,\n};\n\nconst defaultProps = {\n  hasCustomLabelColors: false,\n  colorScheme: undefined,\n  onChange: () => {},\n};\n\nclass ColorSchemeControlWrapper extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { hovered: false };\n    this.categoricalSchemeRegistry = getCategoricalSchemeRegistry();\n    this.choices = this.categoricalSchemeRegistry.keys().map(s => [s, s]);\n    this.schemes = this.categoricalSchemeRegistry.getMap();\n  }\n\n  setHover(hovered) {\n    this.setState({ hovered });\n  }\n\n  render() {\n    const { colorScheme, labelMargin = 0, hasCustomLabelColors } = this.props;\n    return (\n      <ColorSchemeControl\n        description={t(\n          \"Any color palette selected here will override the colors applied to this dashboard's individual charts\",\n        )}\n        labelMargin={labelMargin}\n        name=\"color_scheme\"\n        onChange={this.props.onChange}\n        value={colorScheme}\n        choices={this.choices}\n        clearable\n        schemes={this.schemes}\n        hovered={this.state.hovered}\n        hasCustomLabelColors={hasCustomLabelColors}\n      />\n    );\n  }\n}\n\nColorSchemeControlWrapper.propTypes = propTypes;\nColorSchemeControlWrapper.defaultProps = defaultProps;\n\nexport default ColorSchemeControlWrapper;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,4BAAT,EAAuCC,CAAvC,QAAgD,mBAAhD;;AAEA,OAAOC,kBAAP,MAA+B,oDAA/B,C;;AAEA,MAAMC,SAAS,GAAG;EAChBC,QAAQ,EAAEN,SAAS,CAACO,IADJ;EAEhBC,WAAW,EAAER,SAAS,CAACS,MAFP;EAGhBC,WAAW,EAAEV,SAAS,CAACW,MAHP;EAIhBC,oBAAoB,EAAEZ,SAAS,CAACa,IAJhB,EAAlB;;;AAOA,MAAMC,YAAY,GAAG;EACnBF,oBAAoB,EAAE,KADH;EAEnBF,WAAW,EAAEK,SAFM;EAGnBT,QAAQ,EAAE,MAAM,CAAE,CAHC,EAArB;;;AAMA,MAAMU,yBAAN,SAAwCf,KAAK,CAACgB,aAA9C,CAA4D;EAC1DC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa,EAAEC,OAAO,EAAE,KAAX,EAAb;IACA,KAAKC,yBAAL,GAAiCpB,4BAA4B,EAA7D;IACA,KAAKqB,OAAL,GAAe,KAAKD,yBAAL,CAA+BE,IAA/B,GAAsCC,GAAtC,CAA0C,CAAAC,CAAC,KAAI,CAACA,CAAD,EAAIA,CAAJ,CAA/C,CAAf;IACA,KAAKC,OAAL,GAAe,KAAKL,yBAAL,CAA+BM,MAA/B,EAAf;EACD;;EAEDC,QAAQ,CAACR,OAAD,EAAU;IAChB,KAAKS,QAAL,CAAc,EAAET,OAAF,EAAd;EACD;;EAEDU,MAAM,GAAG;IACP,MAAM,EAAErB,WAAF,EAAeF,WAAW,GAAG,CAA7B,EAAgCI,oBAAhC,KAAyD,KAAKO,KAApE;IACA;MACE,cAAC,kBAAD;QACE,WAAW,EAAEhB,CAAC;QACZ,wGADY,CADhB;;QAIE,WAAW,EAAEK,WAJf;QAKE,IAAI,EAAC,cALP;QAME,QAAQ,EAAE,KAAKW,KAAL,CAAWb,QANvB;QAOE,KAAK,EAAEI,WAPT;QAQE,OAAO,EAAE,KAAKa,OARhB;QASE,SAAS,MATX;QAUE,OAAO,EAAE,KAAKI,OAVhB;QAWE,OAAO,EAAE,KAAKP,KAAL,CAAWC,OAXtB;QAYE,oBAAoB,EAAET,oBAZxB,GADF;;;EAgBD,CA/ByD;;;AAkC5DI,yBAAyB,CAACX,SAA1B,GAAsCA,SAAtC;AACAW,yBAAyB,CAACF,YAA1B,GAAyCA,YAAzC;;AAEA,eAAeE,yBAAf"},"metadata":{},"sourceType":"module"}