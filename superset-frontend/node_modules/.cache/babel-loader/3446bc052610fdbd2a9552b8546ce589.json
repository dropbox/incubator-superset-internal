{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { createRef, forwardRef, useImperativeHandle, useMemo } from 'react';\nimport { withTheme } from '@superset-ui/core';\nimport SearchFilter from './Search';\nimport SelectFilter from './Select';\nimport DateRangeFilter from './DateRange';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction UIFilters(_ref, ref) {let { filters, internalFilters = [], updateFilterValue } = _ref;\n  const filterRefs = useMemo(() => Array.from({ length: filters.length }, () => /*#__PURE__*/createRef()), [filters.length]);\n  useImperativeHandle(ref, () => ({\n    clearFilters: () => {\n      filterRefs.forEach((filter) => {var _filter$current;\n        (_filter$current = filter.current) == null ? void 0 : _filter$current.clearFilter == null ? void 0 : _filter$current.clearFilter();\n      });\n    } }));\n\n  return ___EmotionJSX(React.Fragment, null,\n  filters.map((_ref2, index) => {var _internalFilters$inde;let { Header, fetchSelects, key, id, input, paginate, selects, onFilterUpdate } = _ref2;\n    const initialValue = internalFilters == null ? void 0 : (_internalFilters$inde = internalFilters[index]) == null ? void 0 : _internalFilters$inde.value;\n    if (input === 'select') {\n      return ___EmotionJSX(SelectFilter, { ref: filterRefs[index], Header: Header, fetchSelects: fetchSelects, initialValue: initialValue, key: key, name: id, onSelect: (option, isClear) => {\n          if (onFilterUpdate) {\n            // Filter change triggers both onChange AND onClear, only want to track onChange\n            if (!isClear) {\n              onFilterUpdate(option);\n            }\n          }\n          updateFilterValue(index, option);\n        }, paginate: paginate, selects: selects });\n    }\n    if (input === 'search' && typeof Header === 'string') {\n      return ___EmotionJSX(SearchFilter, { ref: filterRefs[index], Header: Header, initialValue: initialValue, key: key, name: id, onSubmit: (value) => {\n          if (onFilterUpdate) {\n            onFilterUpdate(value);\n          }\n          updateFilterValue(index, value);\n        } });\n    }\n    if (input === 'datetime_range') {\n      return ___EmotionJSX(DateRangeFilter, { ref: filterRefs[index], Header: Header, initialValue: initialValue, key: key, name: id, onSubmit: (value) => updateFilterValue(index, value) });\n    }\n    return null;\n  }));\n\n}\nexport default withTheme( /*#__PURE__*/forwardRef(UIFilters));","map":{"version":3,"mappings":"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","names":["React","createRef","forwardRef","useImperativeHandle","useMemo","withTheme","SearchFilter","SelectFilter","DateRangeFilter","UIFilters","ref","filters","internalFilters","updateFilterValue","filterRefs","Array","from","length","clearFilters","forEach","filter","current","clearFilter","map","index","Header","fetchSelects","key","id","input","paginate","selects","onFilterUpdate","initialValue","value","option","isClear"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ListView/Filters/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  createRef,\n  forwardRef,\n  useImperativeHandle,\n  useMemo,\n} from 'react';\nimport { withTheme } from '@superset-ui/core';\n\nimport {\n  FilterValue,\n  Filters,\n  InternalFilter,\n  SelectOption,\n} from 'src/components/ListView/types';\nimport SearchFilter from './Search';\nimport SelectFilter from './Select';\nimport DateRangeFilter from './DateRange';\nimport { FilterHandler } from './Base';\n\ninterface UIFiltersProps {\n  filters: Filters;\n  internalFilters: InternalFilter[];\n  updateFilterValue: (id: number, value: FilterValue['value']) => void;\n}\n\nfunction UIFilters(\n  { filters, internalFilters = [], updateFilterValue }: UIFiltersProps,\n  ref: React.RefObject<{ clearFilters: () => void }>,\n) {\n  const filterRefs = useMemo(\n    () =>\n      Array.from({ length: filters.length }, () => createRef<FilterHandler>()),\n    [filters.length],\n  );\n\n  useImperativeHandle(ref, () => ({\n    clearFilters: () => {\n      filterRefs.forEach((filter: any) => {\n        filter.current?.clearFilter?.();\n      });\n    },\n  }));\n\n  return (\n    <>\n      {filters.map(\n        (\n          {\n            Header,\n            fetchSelects,\n            key,\n            id,\n            input,\n            paginate,\n            selects,\n            onFilterUpdate,\n          },\n          index,\n        ) => {\n          const initialValue = internalFilters?.[index]?.value;\n          if (input === 'select') {\n            return (\n              <SelectFilter\n                ref={filterRefs[index]}\n                Header={Header}\n                fetchSelects={fetchSelects}\n                initialValue={initialValue}\n                key={key}\n                name={id}\n                onSelect={(\n                  option: SelectOption | undefined,\n                  isClear?: boolean,\n                ) => {\n                  if (onFilterUpdate) {\n                    // Filter change triggers both onChange AND onClear, only want to track onChange\n                    if (!isClear) {\n                      onFilterUpdate(option);\n                    }\n                  }\n\n                  updateFilterValue(index, option);\n                }}\n                paginate={paginate}\n                selects={selects}\n              />\n            );\n          }\n          if (input === 'search' && typeof Header === 'string') {\n            return (\n              <SearchFilter\n                ref={filterRefs[index]}\n                Header={Header}\n                initialValue={initialValue}\n                key={key}\n                name={id}\n                onSubmit={(value: string) => {\n                  if (onFilterUpdate) {\n                    onFilterUpdate(value);\n                  }\n\n                  updateFilterValue(index, value);\n                }}\n              />\n            );\n          }\n          if (input === 'datetime_range') {\n            return (\n              <DateRangeFilter\n                ref={filterRefs[index]}\n                Header={Header}\n                initialValue={initialValue}\n                key={key}\n                name={id}\n                onSubmit={value => updateFilterValue(index, value)}\n              />\n            );\n          }\n          return null;\n        },\n      )}\n    </>\n  );\n}\n\nexport default withTheme(forwardRef(UIFilters));\n"]},"metadata":{},"sourceType":"module"}