{"ast":null,"code":"import OverwritePolicy from './OverwritePolicy';\n/**\n * Create a registry state from the given config\n * @param config\n */\n\nexport default function createRegistryState(_ref)\n\n\n\n\n\n\n{let { globalId, name, version = '0.x.x', defaultKey, setFirstItemAsDefault = false, overwritePolicy = OverwritePolicy.ALLOW } = _ref;\n  return {\n    globalId,\n    name,\n    version,\n    defaultKey,\n    initialDefaultKey: defaultKey,\n    setFirstItemAsDefault,\n    overwritePolicy,\n    items: {},\n    promises: {} };\n\n}","map":{"version":3,"names":["OverwritePolicy","createRegistryState","globalId","name","version","defaultKey","setFirstItemAsDefault","overwritePolicy","ALLOW","initialDefaultKey","items","promises"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/node_modules/@encodable/registry/esm/models/createRegistryState.js"],"sourcesContent":["import OverwritePolicy from './OverwritePolicy';\n/**\n * Create a registry state from the given config\n * @param config\n */\n\nexport default function createRegistryState({\n  globalId,\n  name,\n  version = '0.x.x',\n  defaultKey,\n  setFirstItemAsDefault = false,\n  overwritePolicy = OverwritePolicy.ALLOW\n}) {\n  return {\n    globalId,\n    name,\n    version,\n    defaultKey,\n    initialDefaultKey: defaultKey,\n    setFirstItemAsDefault,\n    overwritePolicy,\n    items: {},\n    promises: {}\n  };\n}"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,mBAAT;;;;;;;AAOZ,KAPyC,EAC1CC,QAD0C,EAE1CC,IAF0C,EAG1CC,OAAO,GAAG,OAHgC,EAI1CC,UAJ0C,EAK1CC,qBAAqB,GAAG,KALkB,EAM1CC,eAAe,GAAGP,eAAe,CAACQ,KANQ,EAOzC;EACD,OAAO;IACLN,QADK;IAELC,IAFK;IAGLC,OAHK;IAILC,UAJK;IAKLI,iBAAiB,EAAEJ,UALd;IAMLC,qBANK;IAOLC,eAPK;IAQLG,KAAK,EAAE,EARF;IASLC,QAAQ,EAAE,EATL,EAAP;;AAWD"},"metadata":{},"sourceType":"module"}