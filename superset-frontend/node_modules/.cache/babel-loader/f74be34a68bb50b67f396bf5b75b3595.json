{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { FeatureFlag, isFeatureEnabled, styled, t } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport Loading from 'src/components/Loading';\nimport { useSelector } from 'react-redux';\nimport FilterControls from './FilterControls/FilterControls';\nimport { useChartsVerboseMaps, getFilterBarTestId } from './utils';\nimport FilterBarSettings from './FilterBarSettings';\nimport FilterConfigurationLink from './FilterConfigurationLink';\nimport crossFiltersSelector from './CrossFilters/selectors';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst HorizontalBar = styled.div`\n  ${(_ref) => {let { theme } = _ref;return `\n    padding: ${theme.gridUnit * 3}px ${theme.gridUnit * 2}px ${theme.gridUnit * 3}px ${theme.gridUnit * 4}px;\n    background: ${theme.colors.grayscale.light5};\n    box-shadow: inset 0px -2px 2px -1px ${theme.colors.grayscale.light2};\n  `;}}\n`;\nconst HorizontalBarContent = styled.div`\n  ${(_ref2) => {let { theme } = _ref2;return `\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    align-items: center;\n    justify-content: flex-start;\n    line-height: 0;\n\n    .loading {\n      margin: ${theme.gridUnit * 2}px auto ${theme.gridUnit * 2}px;\n      padding: 0;\n    }\n  `;}}\n`;\nconst FilterBarEmptyStateContainer = styled.div`\n  ${(_ref3) => {let { theme } = _ref3;return `\n    font-weight: ${theme.typography.weights.bold};\n    color: ${theme.colors.grayscale.base};\n    font-size: ${theme.typography.sizes.s}px;\n  `;}}\n`;\nconst FiltersLinkContainer = styled.div`\n  ${(_ref4) => {let { theme, hasFilters } = _ref4;return `\n    height: 24px;\n    display: flex;\n    align-items: center;\n    padding: 0 ${theme.gridUnit * 4}px 0 ${theme.gridUnit * 4}px;\n    border-right: ${hasFilters ? `1px solid ${theme.colors.grayscale.light2}` : 0};\n\n    button {\n      display: flex;\n      align-items: center;\n      > .anticon {\n        height: 24px;\n        padding-right: ${theme.gridUnit}px;\n      }\n      > .anticon + span, > .anticon {\n          margin-right: 0;\n          margin-left: 0;\n        }\n    }\n  `;}}\n`;\nconst HorizontalFilterBar = (_ref5) => {let { actions, canEdit, dashboardId, dataMaskSelected, filterValues, isInitialized, onSelectionChange } = _ref5;\n  const dataMask = useSelector((state) => state.dataMask);\n  const chartConfiguration = useSelector((state) => {var _state$dashboardInfo$;return (_state$dashboardInfo$ = state.dashboardInfo.metadata) == null ? void 0 : _state$dashboardInfo$.chart_configuration;});\n  const dashboardLayout = useSelector((state) => state.dashboardLayout.present);\n  const isCrossFiltersEnabled = isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS);\n  const verboseMaps = useChartsVerboseMaps();\n  const selectedCrossFilters = isCrossFiltersEnabled ?\n  crossFiltersSelector({\n    dataMask,\n    chartConfiguration,\n    dashboardLayout,\n    verboseMaps }) :\n\n  [];\n  const hasFilters = filterValues.length > 0 || selectedCrossFilters.length > 0;\n  return ___EmotionJSX(HorizontalBar, getFilterBarTestId(),\n  ___EmotionJSX(HorizontalBarContent, null,\n  !isInitialized ? ___EmotionJSX(Loading, { position: \"inline-centered\" }) : ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(FilterBarSettings, null),\n  canEdit && ___EmotionJSX(FiltersLinkContainer, { hasFilters: hasFilters },\n  ___EmotionJSX(FilterConfigurationLink, { dashboardId: dashboardId, createNewOnOpen: filterValues.length === 0 },\n  ___EmotionJSX(Icons.PlusSmall, null), \" \", t('Add/Edit Filters'))),\n\n\n  !hasFilters && ___EmotionJSX(FilterBarEmptyStateContainer, { \"data-test\": \"horizontal-filterbar-empty\" },\n  t('No filters are currently added to this dashboard.')),\n\n  hasFilters && ___EmotionJSX(FilterControls, { dataMaskSelected: dataMaskSelected, onFilterSelectionChange: onSelectionChange }),\n  actions)));\n\n\n\n};__signature__(HorizontalFilterBar, \"useSelector{dataMask}\\nuseSelector{chartConfiguration}\\nuseSelector{dashboardLayout}\\nuseChartsVerboseMaps{verboseMaps}\", () => [useSelector, useSelector, useSelector, useChartsVerboseMaps]);const _default = /*#__PURE__*/\nReact.memo(HorizontalFilterBar);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(HorizontalBar, \"HorizontalBar\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/Horizontal.tsx\");reactHotLoader.register(HorizontalBarContent, \"HorizontalBarContent\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/Horizontal.tsx\");reactHotLoader.register(FilterBarEmptyStateContainer, \"FilterBarEmptyStateContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/Horizontal.tsx\");reactHotLoader.register(FiltersLinkContainer, \"FiltersLinkContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/Horizontal.tsx\");reactHotLoader.register(HorizontalFilterBar, \"HorizontalFilterBar\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/Horizontal.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/Horizontal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","FeatureFlag","isFeatureEnabled","styled","t","Icons","Loading","useSelector","FilterControls","useChartsVerboseMaps","getFilterBarTestId","FilterBarSettings","FilterConfigurationLink","crossFiltersSelector","HorizontalBar","div","theme","gridUnit","colors","grayscale","light5","light2","HorizontalBarContent","FilterBarEmptyStateContainer","typography","weights","bold","base","sizes","s","FiltersLinkContainer","hasFilters","HorizontalFilterBar","actions","canEdit","dashboardId","dataMaskSelected","filterValues","isInitialized","onSelectionChange","dataMask","state","chartConfiguration","dashboardInfo","metadata","chart_configuration","dashboardLayout","present","isCrossFiltersEnabled","DASHBOARD_CROSS_FILTERS","verboseMaps","selectedCrossFilters","length","memo"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/Horizontal.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport {\n  DataMaskStateWithId,\n  FeatureFlag,\n  isFeatureEnabled,\n  JsonObject,\n  styled,\n  t,\n} from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport Loading from 'src/components/Loading';\nimport { DashboardLayout, RootState } from 'src/dashboard/types';\nimport { useSelector } from 'react-redux';\nimport FilterControls from './FilterControls/FilterControls';\nimport { useChartsVerboseMaps, getFilterBarTestId } from './utils';\nimport { HorizontalBarProps } from './types';\nimport FilterBarSettings from './FilterBarSettings';\nimport FilterConfigurationLink from './FilterConfigurationLink';\nimport crossFiltersSelector from './CrossFilters/selectors';\n\nconst HorizontalBar = styled.div`\n  ${({ theme }) => `\n    padding: ${theme.gridUnit * 3}px ${theme.gridUnit * 2}px ${\n    theme.gridUnit * 3\n  }px ${theme.gridUnit * 4}px;\n    background: ${theme.colors.grayscale.light5};\n    box-shadow: inset 0px -2px 2px -1px ${theme.colors.grayscale.light2};\n  `}\n`;\n\nconst HorizontalBarContent = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    align-items: center;\n    justify-content: flex-start;\n    line-height: 0;\n\n    .loading {\n      margin: ${theme.gridUnit * 2}px auto ${theme.gridUnit * 2}px;\n      padding: 0;\n    }\n  `}\n`;\n\nconst FilterBarEmptyStateContainer = styled.div`\n  ${({ theme }) => `\n    font-weight: ${theme.typography.weights.bold};\n    color: ${theme.colors.grayscale.base};\n    font-size: ${theme.typography.sizes.s}px;\n  `}\n`;\n\nconst FiltersLinkContainer = styled.div<{ hasFilters: boolean }>`\n  ${({ theme, hasFilters }) => `\n    height: 24px;\n    display: flex;\n    align-items: center;\n    padding: 0 ${theme.gridUnit * 4}px 0 ${theme.gridUnit * 4}px;\n    border-right: ${\n      hasFilters ? `1px solid ${theme.colors.grayscale.light2}` : 0\n    };\n\n    button {\n      display: flex;\n      align-items: center;\n      > .anticon {\n        height: 24px;\n        padding-right: ${theme.gridUnit}px;\n      }\n      > .anticon + span, > .anticon {\n          margin-right: 0;\n          margin-left: 0;\n        }\n    }\n  `}\n`;\n\nconst HorizontalFilterBar: React.FC<HorizontalBarProps> = ({\n  actions,\n  canEdit,\n  dashboardId,\n  dataMaskSelected,\n  filterValues,\n  isInitialized,\n  onSelectionChange,\n}) => {\n  const dataMask = useSelector<RootState, DataMaskStateWithId>(\n    state => state.dataMask,\n  );\n  const chartConfiguration = useSelector<RootState, JsonObject>(\n    state => state.dashboardInfo.metadata?.chart_configuration,\n  );\n  const dashboardLayout = useSelector<RootState, DashboardLayout>(\n    state => state.dashboardLayout.present,\n  );\n  const isCrossFiltersEnabled = isFeatureEnabled(\n    FeatureFlag.DASHBOARD_CROSS_FILTERS,\n  );\n  const verboseMaps = useChartsVerboseMaps();\n\n  const selectedCrossFilters = isCrossFiltersEnabled\n    ? crossFiltersSelector({\n        dataMask,\n        chartConfiguration,\n        dashboardLayout,\n        verboseMaps,\n      })\n    : [];\n  const hasFilters = filterValues.length > 0 || selectedCrossFilters.length > 0;\n\n  return (\n    <HorizontalBar {...getFilterBarTestId()}>\n      <HorizontalBarContent>\n        {!isInitialized ? (\n          <Loading position=\"inline-centered\" />\n        ) : (\n          <>\n            <FilterBarSettings />\n            {canEdit && (\n              <FiltersLinkContainer hasFilters={hasFilters}>\n                <FilterConfigurationLink\n                  dashboardId={dashboardId}\n                  createNewOnOpen={filterValues.length === 0}\n                >\n                  <Icons.PlusSmall /> {t('Add/Edit Filters')}\n                </FilterConfigurationLink>\n              </FiltersLinkContainer>\n            )}\n            {!hasFilters && (\n              <FilterBarEmptyStateContainer data-test=\"horizontal-filterbar-empty\">\n                {t('No filters are currently added to this dashboard.')}\n              </FilterBarEmptyStateContainer>\n            )}\n            {hasFilters && (\n              <FilterControls\n                dataMaskSelected={dataMaskSelected}\n                onFilterSelectionChange={onSelectionChange}\n              />\n            )}\n            {actions}\n          </>\n        )}\n      </HorizontalBarContent>\n    </HorizontalBar>\n  );\n};\nexport default React.memo(HorizontalFilterBar);\n"]},"metadata":{},"sourceType":"module"}