{"ast":null,"code":"import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useRef, useEffect, useMemo, forwardRef, useImperativeHandle, useLayoutEffect, useCallback } from 'react';\nimport { styled } from '@superset-ui/core';\nimport { init } from 'echarts';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Styles = styled.div`\n  height: ${(_ref) => {let { height } = _ref;return height;}};\n  width: ${(_ref2) => {let { width } = _ref2;return width;}};\n`;\nfunction Echart(_ref3, ref) {let { width, height, echartOptions, eventHandlers, zrEventHandlers, selectedValues = {}, refs } = _ref3;\n  const divRef = useRef(null);\n  if (refs) {\n    // eslint-disable-next-line no-param-reassign\n    refs.divRef = divRef;\n  }\n  const chartRef = useRef();\n  const currentSelection = useMemo(() => Object.keys(selectedValues) || [], [selectedValues]);\n  const previousSelection = useRef([]);\n  useImperativeHandle(ref, () => ({\n    getEchartInstance: () => chartRef.current }));\n\n  useEffect(() => {\n    if (!divRef.current)\n    return;\n    if (!chartRef.current) {\n      chartRef.current = init(divRef.current);\n    }\n    Object.entries(eventHandlers || {}).forEach((_ref4) => {var _chartRef$current, _chartRef$current2;let [name, handler] = _ref4;\n      (_chartRef$current = chartRef.current) == null ? void 0 : _chartRef$current.off(name);\n      (_chartRef$current2 = chartRef.current) == null ? void 0 : _chartRef$current2.on(name, handler);\n    });\n    Object.entries(zrEventHandlers || {}).forEach((_ref5) => {var _chartRef$current3, _chartRef$current4;let [name, handler] = _ref5;\n      (_chartRef$current3 = chartRef.current) == null ? void 0 : _chartRef$current3.getZr().off(name);\n      (_chartRef$current4 = chartRef.current) == null ? void 0 : _chartRef$current4.getZr().on(name, handler);\n    });\n    chartRef.current.setOption(echartOptions, true);\n  }, [echartOptions, eventHandlers, zrEventHandlers]);\n  // highlighting\n  useEffect(() => {\n    if (!chartRef.current)\n    return;\n    chartRef.current.dispatchAction({\n      type: 'downplay',\n      dataIndex: previousSelection.current.filter((value) => !_includesInstanceProperty(currentSelection).call(currentSelection, value)) });\n\n    if (currentSelection.length) {\n      chartRef.current.dispatchAction({\n        type: 'highlight',\n        dataIndex: currentSelection });\n\n    }\n    previousSelection.current = currentSelection;\n  }, [currentSelection]);\n  const handleSizeChange = useCallback((_ref6) => {let { width, height } = _ref6;\n    if (chartRef.current) {\n      chartRef.current.resize({ width, height });\n    }\n  }, []);\n  // did mount\n  useEffect(() => {\n    handleSizeChange({ width, height });\n    return () => {var _chartRef$current5;return (_chartRef$current5 = chartRef.current) == null ? void 0 : _chartRef$current5.dispose();};\n  }, []);\n  useLayoutEffect(() => {\n    handleSizeChange({ width, height });\n  }, [width, height, handleSizeChange]);\n  return ___EmotionJSX(Styles, { ref: divRef, height: height, width: width });\n}\nexport default /*#__PURE__*/forwardRef(Echart);","map":{"version":3,"mappings":"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","names":["React","useRef","useEffect","useMemo","forwardRef","useImperativeHandle","useLayoutEffect","useCallback","styled","init","Styles","div","height","width","Echart","ref","echartOptions","eventHandlers","zrEventHandlers","selectedValues","refs","divRef","chartRef","currentSelection","Object","keys","previousSelection","getEchartInstance","current","entries","forEach","name","handler","off","on","getZr","setOption","dispatchAction","type","dataIndex","filter","value","length","handleSizeChange","resize","dispose"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/plugin-chart-echarts/src/components/Echart.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  useRef,\n  useEffect,\n  useMemo,\n  forwardRef,\n  useImperativeHandle,\n  useLayoutEffect,\n  useCallback,\n} from 'react';\nimport { styled } from '@superset-ui/core';\nimport { ECharts, init } from 'echarts';\nimport { EchartsHandler, EchartsProps, EchartsStylesProps } from '../types';\n\nconst Styles = styled.div<EchartsStylesProps>`\n  height: ${({ height }) => height};\n  width: ${({ width }) => width};\n`;\n\nfunction Echart(\n  {\n    width,\n    height,\n    echartOptions,\n    eventHandlers,\n    zrEventHandlers,\n    selectedValues = {},\n    refs,\n  }: EchartsProps,\n  ref: React.Ref<EchartsHandler>,\n) {\n  const divRef = useRef<HTMLDivElement>(null);\n  if (refs) {\n    // eslint-disable-next-line no-param-reassign\n    refs.divRef = divRef;\n  }\n  const chartRef = useRef<ECharts>();\n  const currentSelection = useMemo(\n    () => Object.keys(selectedValues) || [],\n    [selectedValues],\n  );\n  const previousSelection = useRef<string[]>([]);\n\n  useImperativeHandle(ref, () => ({\n    getEchartInstance: () => chartRef.current,\n  }));\n\n  useEffect(() => {\n    if (!divRef.current) return;\n    if (!chartRef.current) {\n      chartRef.current = init(divRef.current);\n    }\n\n    Object.entries(eventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.off(name);\n      chartRef.current?.on(name, handler);\n    });\n\n    Object.entries(zrEventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.getZr().off(name);\n      chartRef.current?.getZr().on(name, handler);\n    });\n\n    chartRef.current.setOption(echartOptions, true);\n  }, [echartOptions, eventHandlers, zrEventHandlers]);\n\n  // highlighting\n  useEffect(() => {\n    if (!chartRef.current) return;\n    chartRef.current.dispatchAction({\n      type: 'downplay',\n      dataIndex: previousSelection.current.filter(\n        value => !currentSelection.includes(value),\n      ),\n    });\n    if (currentSelection.length) {\n      chartRef.current.dispatchAction({\n        type: 'highlight',\n        dataIndex: currentSelection,\n      });\n    }\n    previousSelection.current = currentSelection;\n  }, [currentSelection]);\n\n  const handleSizeChange = useCallback(\n    ({ width, height }: { width: number; height: number }) => {\n      if (chartRef.current) {\n        chartRef.current.resize({ width, height });\n      }\n    },\n    [],\n  );\n\n  // did mount\n  useEffect(() => {\n    handleSizeChange({ width, height });\n    return () => chartRef.current?.dispose();\n  }, []);\n\n  useLayoutEffect(() => {\n    handleSizeChange({ width, height });\n  }, [width, height, handleSizeChange]);\n\n  return <Styles ref={divRef} height={height} width={width} />;\n}\n\nexport default forwardRef(Echart);\n"]},"metadata":{},"sourceType":"module"}