{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from 'src/components';\nimport { styled, t } from '@superset-ui/core';\nimport { SQLEditor } from 'src/components/AsyncAceEditor';\nimport sqlKeywords from 'src/SqlLab/utils/sqlKeywords';\n\nimport adhocMetricType from 'src/explore/components/controls/MetricControl/adhocMetricType';\nimport columnType from 'src/explore/components/controls/FilterControl/columnType';\nimport AdhocFilter from 'src/explore/components/controls/FilterControl/AdhocFilter';\nimport { CLAUSES, EXPRESSION_TYPES } from '../types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  adhocFilter: PropTypes.instanceOf(AdhocFilter).isRequired,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n  PropTypes.oneOfType([\n  columnType,\n  PropTypes.shape({ saved_metric_name: PropTypes.string.isRequired }),\n  adhocMetricType])).\n\n  isRequired,\n  height: PropTypes.number.isRequired,\n  activeKey: PropTypes.string.isRequired };\n\n\nconst StyledSelect = styled(Select)`\n  ${(_ref) => {let { theme } = _ref;return `\n    width: ${theme.gridUnit * 30}px;\n    marginRight: ${theme.gridUnit}px;\n  `;}}\n`;\n\nexport default class AdhocFilterEditPopoverSqlTabContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onSqlExpressionChange = this.onSqlExpressionChange.bind(this);\n    this.onSqlExpressionClauseChange =\n    this.onSqlExpressionClauseChange.bind(this);\n    this.handleAceEditorRef = this.handleAceEditorRef.bind(this);\n\n    this.selectProps = {\n      ariaLabel: t('Select column') };\n\n  }\n\n  componentDidUpdate() {\n    if (this.aceEditorRef) {\n      this.aceEditorRef.editor.resize();\n    }\n  }\n\n  onSqlExpressionClauseChange(clause) {\n    this.props.onChange(\n    this.props.adhocFilter.duplicateWith({\n      clause,\n      expressionType: EXPRESSION_TYPES.SQL }));\n\n\n  }\n\n  onSqlExpressionChange(sqlExpression) {\n    this.props.onChange(\n    this.props.adhocFilter.duplicateWith({\n      sqlExpression,\n      expressionType: EXPRESSION_TYPES.SQL }));\n\n\n  }\n\n  handleAceEditorRef(ref) {\n    if (ref) {\n      this.aceEditorRef = ref;\n    }\n  }\n\n  render() {\n    const { adhocFilter, height, options } = this.props;\n\n    const clauseSelectProps = {\n      placeholder: t('choose WHERE or HAVING...'),\n      value: adhocFilter.clause,\n      onChange: this.onSqlExpressionClauseChange };\n\n    const keywords = sqlKeywords.concat(\n    options.\n    map((option) => {\n      if (option.column_name) {\n        return {\n          name: option.column_name,\n          value: option.column_name,\n          score: 50,\n          meta: 'option' };\n\n      }\n      return null;\n    }).\n    filter(Boolean));\n\n    const selectOptions = Object.keys(CLAUSES).map((clause) => ({\n      label: clause,\n      value: clause }));\n\n\n    return (\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(\"div\", { className: \"filter-edit-clause-section\" },\n      ___EmotionJSX(StyledSelect, _extends({\n        options: selectOptions },\n      this.selectProps,\n      clauseSelectProps)),\n\n      ___EmotionJSX(\"span\", { className: \"filter-edit-clause-info\" },\n      ___EmotionJSX(\"strong\", null, \"WHERE\"), \" \", t('Filters by columns'),\n      ___EmotionJSX(\"br\", null),\n      ___EmotionJSX(\"strong\", null, \"HAVING\"), \" \", t('Filters by metrics'))),\n\n\n      ___EmotionJSX(\"div\", { css: (theme) => ({ marginTop: theme.gridUnit * 4 }) },\n      ___EmotionJSX(SQLEditor, {\n        ref: this.handleAceEditorRef,\n        keywords: keywords,\n        height: `${height - 130}px`,\n        onChange: this.onSqlExpressionChange,\n        width: \"100%\",\n        showGutter: false,\n        value: adhocFilter.sqlExpression || adhocFilter.translateToSql(),\n        editorProps: { $blockScrolling: true },\n        enableLiveAutocompletion: true,\n        className: \"filter-sql-editor\",\n        wrapEnabled: true }))));\n\n\n\n\n  }}\n\nAdhocFilterEditPopoverSqlTabContent.propTypes = propTypes;","map":{"version":3,"names":["React","PropTypes","Select","styled","t","SQLEditor","sqlKeywords","adhocMetricType","columnType","AdhocFilter","CLAUSES","EXPRESSION_TYPES","propTypes","adhocFilter","instanceOf","isRequired","onChange","func","options","arrayOf","oneOfType","shape","saved_metric_name","string","height","number","activeKey","StyledSelect","theme","gridUnit","AdhocFilterEditPopoverSqlTabContent","Component","constructor","props","onSqlExpressionChange","bind","onSqlExpressionClauseChange","handleAceEditorRef","selectProps","ariaLabel","componentDidUpdate","aceEditorRef","editor","resize","clause","duplicateWith","expressionType","SQL","sqlExpression","ref","render","clauseSelectProps","placeholder","value","keywords","concat","map","option","column_name","name","score","meta","filter","Boolean","selectOptions","Object","keys","label","marginTop","translateToSql","$blockScrolling"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilterEditPopoverSqlTabContent/index.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from 'src/components';\nimport { styled, t } from '@superset-ui/core';\nimport { SQLEditor } from 'src/components/AsyncAceEditor';\nimport sqlKeywords from 'src/SqlLab/utils/sqlKeywords';\n\nimport adhocMetricType from 'src/explore/components/controls/MetricControl/adhocMetricType';\nimport columnType from 'src/explore/components/controls/FilterControl/columnType';\nimport AdhocFilter from 'src/explore/components/controls/FilterControl/AdhocFilter';\nimport { CLAUSES, EXPRESSION_TYPES } from '../types';\n\nconst propTypes = {\n  adhocFilter: PropTypes.instanceOf(AdhocFilter).isRequired,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      columnType,\n      PropTypes.shape({ saved_metric_name: PropTypes.string.isRequired }),\n      adhocMetricType,\n    ]),\n  ).isRequired,\n  height: PropTypes.number.isRequired,\n  activeKey: PropTypes.string.isRequired,\n};\n\nconst StyledSelect = styled(Select)`\n  ${({ theme }) => `\n    width: ${theme.gridUnit * 30}px;\n    marginRight: ${theme.gridUnit}px;\n  `}\n`;\n\nexport default class AdhocFilterEditPopoverSqlTabContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onSqlExpressionChange = this.onSqlExpressionChange.bind(this);\n    this.onSqlExpressionClauseChange =\n      this.onSqlExpressionClauseChange.bind(this);\n    this.handleAceEditorRef = this.handleAceEditorRef.bind(this);\n\n    this.selectProps = {\n      ariaLabel: t('Select column'),\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.aceEditorRef) {\n      this.aceEditorRef.editor.resize();\n    }\n  }\n\n  onSqlExpressionClauseChange(clause) {\n    this.props.onChange(\n      this.props.adhocFilter.duplicateWith({\n        clause,\n        expressionType: EXPRESSION_TYPES.SQL,\n      }),\n    );\n  }\n\n  onSqlExpressionChange(sqlExpression) {\n    this.props.onChange(\n      this.props.adhocFilter.duplicateWith({\n        sqlExpression,\n        expressionType: EXPRESSION_TYPES.SQL,\n      }),\n    );\n  }\n\n  handleAceEditorRef(ref) {\n    if (ref) {\n      this.aceEditorRef = ref;\n    }\n  }\n\n  render() {\n    const { adhocFilter, height, options } = this.props;\n\n    const clauseSelectProps = {\n      placeholder: t('choose WHERE or HAVING...'),\n      value: adhocFilter.clause,\n      onChange: this.onSqlExpressionClauseChange,\n    };\n    const keywords = sqlKeywords.concat(\n      options\n        .map(option => {\n          if (option.column_name) {\n            return {\n              name: option.column_name,\n              value: option.column_name,\n              score: 50,\n              meta: 'option',\n            };\n          }\n          return null;\n        })\n        .filter(Boolean),\n    );\n    const selectOptions = Object.keys(CLAUSES).map(clause => ({\n      label: clause,\n      value: clause,\n    }));\n\n    return (\n      <span>\n        <div className=\"filter-edit-clause-section\">\n          <StyledSelect\n            options={selectOptions}\n            {...this.selectProps}\n            {...clauseSelectProps}\n          />\n          <span className=\"filter-edit-clause-info\">\n            <strong>WHERE</strong> {t('Filters by columns')}\n            <br />\n            <strong>HAVING</strong> {t('Filters by metrics')}\n          </span>\n        </div>\n        <div css={theme => ({ marginTop: theme.gridUnit * 4 })}>\n          <SQLEditor\n            ref={this.handleAceEditorRef}\n            keywords={keywords}\n            height={`${height - 130}px`}\n            onChange={this.onSqlExpressionChange}\n            width=\"100%\"\n            showGutter={false}\n            value={adhocFilter.sqlExpression || adhocFilter.translateToSql()}\n            editorProps={{ $blockScrolling: true }}\n            enableLiveAutocompletion\n            className=\"filter-sql-editor\"\n            wrapEnabled\n          />\n        </div>\n      </span>\n    );\n  }\n}\nAdhocFilterEditPopoverSqlTabContent.propTypes = propTypes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}