{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport cx from 'classnames';\nimport { styled } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const Table = styled.table`\n  ${(_ref) => {let { theme } = _ref;return `\n    background-color: ${theme.colors.grayscale.light5};\n    border-collapse: separate;\n    border-radius: ${theme.borderRadius}px;\n\n    thead > tr > th {\n      border: 0;\n    }\n\n    tbody {\n      tr:first-of-type > td {\n        border-top: 0;\n      }\n    }\n    th {\n      background: ${theme.colors.grayscale.light5};\n      position: sticky;\n      top: 0;\n\n      &:first-of-type {\n        padding-left: ${theme.gridUnit * 4}px;\n      }\n\n      &.xs {\n        min-width: 25px;\n      }\n      &.sm {\n        min-width: 50px;\n      }\n      &.md {\n        min-width: 75px;\n      }\n      &.lg {\n        min-width: 100px;\n      }\n      &.xl {\n        min-width: 150px;\n      }\n      &.xxl {\n        min-width: 200px;\n      }\n\n      span {\n        white-space: nowrap;\n        display: flex;\n        align-items: center;\n        line-height: 2;\n      }\n\n      svg {\n        display: inline-block;\n        position: relative;\n      }\n    }\n\n    td {\n      &.xs {\n        width: 25px;\n      }\n      &.sm {\n        width: 50px;\n      }\n      &.md {\n        width: 75px;\n      }\n      &.lg {\n        width: 100px;\n      }\n      &.xl {\n        width: 150px;\n      }\n      &.xxl {\n        width: 200px;\n      }\n    }\n\n    .table-cell-loader {\n      position: relative;\n\n      .loading-bar {\n        background-color: ${theme.colors.secondary.light4};\n        border-radius: 7px;\n\n        span {\n          visibility: hidden;\n        }\n      }\n\n      .empty-loading-bar {\n        display: inline-block;\n        width: 100%;\n        height: 1.2em;\n      }\n    }\n\n    .actions {\n      white-space: nowrap;\n      min-width: 100px;\n\n      svg,\n      i {\n        margin-right: 8px;\n\n        &:hover {\n          path {\n            fill: ${theme.colors.primary.base};\n          }\n        }\n      }\n    }\n\n    .table-row {\n      .actions {\n        opacity: 0;\n        font-size: ${theme.typography.sizes.xl}px;\n        display: flex;\n      }\n\n      &:hover {\n        background-color: ${theme.colors.secondary.light5};\n\n        .actions {\n          opacity: 1;\n          transition: opacity ease-in ${theme.transitionTiming}s;\n        }\n      }\n    }\n\n    .table-row-selected {\n      background-color: ${theme.colors.secondary.light4};\n\n      &:hover {\n        background-color: ${theme.colors.secondary.light4};\n      }\n    }\n\n    .table-cell {\n      font-feature-settings: 'tnum' 1;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      max-width: 320px;\n      line-height: 1;\n      vertical-align: middle;\n      &:first-of-type {\n        padding-left: ${theme.gridUnit * 4}px;\n      }\n      &__wrap {\n        white-space: normal;\n      }\n      &__nowrap {\n        white-space: nowrap;\n      }\n    }\n\n    @keyframes loading-shimmer {\n      40% {\n        background-position: 100% 0;\n      }\n\n      100% {\n        background-position: 100% 0;\n      }\n    }\n  `;}}\n`;\nTable.displayName = 'table';\nexport default /*#__PURE__*/React.memo((_ref2) => {let { getTableProps, getTableBodyProps, prepareRow, headerGroups, columns, rows, loading, highlightRowId, columnsForWrapText } = _ref2;return ___EmotionJSX(Table, _extends({}, getTableProps(), { className: \"table table-hover\" }),\n  ___EmotionJSX(\"thead\", null,\n  headerGroups.map((headerGroup) => ___EmotionJSX(\"tr\", headerGroup.getHeaderGroupProps(),\n  headerGroup.headers.map((column) => {\n    let sortIcon = ___EmotionJSX(Icons.Sort, null);\n    if (column.isSorted && column.isSortedDesc) {\n      sortIcon = ___EmotionJSX(Icons.SortDesc, null);\n    } else\n    if (column.isSorted && !column.isSortedDesc) {\n      sortIcon = ___EmotionJSX(Icons.SortAsc, null);\n    }\n    return column.hidden ? null : ___EmotionJSX(\"th\", _extends({}, column.getHeaderProps(column.canSort ? column.getSortByToggleProps() : {}), { className: cx({\n        [column.size || '']: column.size }) }),\n\n    ___EmotionJSX(\"span\", null,\n    column.render('Header'),\n    column.canSort && sortIcon));\n\n\n  })))),\n\n\n  ___EmotionJSX(\"tbody\", getTableBodyProps(),\n  loading &&\n  rows.length === 0 &&\n  [...new Array(12)].map((_, i) => ___EmotionJSX(\"tr\", { key: i },\n  columns.map((column, i2) => {\n    if (column.hidden)\n    return null;\n    return ___EmotionJSX(\"td\", { key: i2, className: cx('table-cell', {\n        'table-cell-loader': loading }) },\n\n    ___EmotionJSX(\"span\", { className: \"loading-bar empty-loading-bar\", role: \"progressbar\", \"aria-label\": \"loading\" }));\n\n  }))),\n\n  rows.length > 0 &&\n  rows.map((row) => {\n    prepareRow(row);\n    // @ts-ignore\n    const rowId = row.original.id;\n    return ___EmotionJSX(\"tr\", _extends({}, row.getRowProps(), { className: cx('table-row', {\n        'table-row-selected': row.isSelected ||\n        typeof rowId !== 'undefined' && rowId === highlightRowId }) }),\n\n    row.cells.map((cell) => {\n      if (cell.column.hidden)\n      return null;\n      const columnCellProps = cell.column.cellProps || {};\n      const isWrapText = columnsForWrapText == null ? void 0 : _includesInstanceProperty(columnsForWrapText).call(columnsForWrapText, cell.column.Header);\n      return ___EmotionJSX(\"td\", _extends({ className: cx(`table-cell table-cell__${isWrapText ? 'wrap' : 'nowrap'}`, {\n          'table-cell-loader': loading,\n          [cell.column.size || '']: cell.column.size }) },\n      cell.getCellProps(), columnCellProps),\n      ___EmotionJSX(\"span\", { className: cx({ 'loading-bar': loading }), role: loading ? 'progressbar' : undefined },\n      ___EmotionJSX(\"span\", null, cell.render('Cell'))));\n\n\n    }));\n\n  })));});","map":{"version":3,"mappings":"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","names":["React","cx","styled","Icons","Table","table","theme","colors","grayscale","light5","borderRadius","gridUnit","secondary","light4","primary","base","typography","sizes","xl","transitionTiming","displayName","memo","getTableProps","getTableBodyProps","prepareRow","headerGroups","columns","rows","loading","highlightRowId","columnsForWrapText","map","headerGroup","getHeaderGroupProps","headers","sortIcon","column","isSorted","isSortedDesc","hidden","getHeaderProps","canSort","getSortByToggleProps","size","render","length","Array","_","i","i2","row","rowId","original","id","getRowProps","isSelected","cells","cell","columnCellProps","cellProps","isWrapText","Header","getCellProps","undefined"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/components/TableCollection/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport cx from 'classnames';\nimport { TableInstance } from 'react-table';\nimport { styled } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\n\ninterface TableCollectionProps {\n  getTableProps: (userProps?: any) => any;\n  getTableBodyProps: (userProps?: any) => any;\n  prepareRow: TableInstance['prepareRow'];\n  headerGroups: TableInstance['headerGroups'];\n  rows: TableInstance['rows'];\n  columns: TableInstance['column'][];\n  loading: boolean;\n  highlightRowId?: number;\n  columnsForWrapText?: string[];\n}\n\nexport const Table = styled.table`\n  ${({ theme }) => `\n    background-color: ${theme.colors.grayscale.light5};\n    border-collapse: separate;\n    border-radius: ${theme.borderRadius}px;\n\n    thead > tr > th {\n      border: 0;\n    }\n\n    tbody {\n      tr:first-of-type > td {\n        border-top: 0;\n      }\n    }\n    th {\n      background: ${theme.colors.grayscale.light5};\n      position: sticky;\n      top: 0;\n\n      &:first-of-type {\n        padding-left: ${theme.gridUnit * 4}px;\n      }\n\n      &.xs {\n        min-width: 25px;\n      }\n      &.sm {\n        min-width: 50px;\n      }\n      &.md {\n        min-width: 75px;\n      }\n      &.lg {\n        min-width: 100px;\n      }\n      &.xl {\n        min-width: 150px;\n      }\n      &.xxl {\n        min-width: 200px;\n      }\n\n      span {\n        white-space: nowrap;\n        display: flex;\n        align-items: center;\n        line-height: 2;\n      }\n\n      svg {\n        display: inline-block;\n        position: relative;\n      }\n    }\n\n    td {\n      &.xs {\n        width: 25px;\n      }\n      &.sm {\n        width: 50px;\n      }\n      &.md {\n        width: 75px;\n      }\n      &.lg {\n        width: 100px;\n      }\n      &.xl {\n        width: 150px;\n      }\n      &.xxl {\n        width: 200px;\n      }\n    }\n\n    .table-cell-loader {\n      position: relative;\n\n      .loading-bar {\n        background-color: ${theme.colors.secondary.light4};\n        border-radius: 7px;\n\n        span {\n          visibility: hidden;\n        }\n      }\n\n      .empty-loading-bar {\n        display: inline-block;\n        width: 100%;\n        height: 1.2em;\n      }\n    }\n\n    .actions {\n      white-space: nowrap;\n      min-width: 100px;\n\n      svg,\n      i {\n        margin-right: 8px;\n\n        &:hover {\n          path {\n            fill: ${theme.colors.primary.base};\n          }\n        }\n      }\n    }\n\n    .table-row {\n      .actions {\n        opacity: 0;\n        font-size: ${theme.typography.sizes.xl}px;\n        display: flex;\n      }\n\n      &:hover {\n        background-color: ${theme.colors.secondary.light5};\n\n        .actions {\n          opacity: 1;\n          transition: opacity ease-in ${theme.transitionTiming}s;\n        }\n      }\n    }\n\n    .table-row-selected {\n      background-color: ${theme.colors.secondary.light4};\n\n      &:hover {\n        background-color: ${theme.colors.secondary.light4};\n      }\n    }\n\n    .table-cell {\n      font-feature-settings: 'tnum' 1;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      max-width: 320px;\n      line-height: 1;\n      vertical-align: middle;\n      &:first-of-type {\n        padding-left: ${theme.gridUnit * 4}px;\n      }\n      &__wrap {\n        white-space: normal;\n      }\n      &__nowrap {\n        white-space: nowrap;\n      }\n    }\n\n    @keyframes loading-shimmer {\n      40% {\n        background-position: 100% 0;\n      }\n\n      100% {\n        background-position: 100% 0;\n      }\n    }\n  `}\n`;\n\nTable.displayName = 'table';\n\nexport default React.memo(\n  ({\n    getTableProps,\n    getTableBodyProps,\n    prepareRow,\n    headerGroups,\n    columns,\n    rows,\n    loading,\n    highlightRowId,\n    columnsForWrapText,\n  }: TableCollectionProps) => (\n    <Table\n      {...getTableProps()}\n      className=\"table table-hover\"\n      data-test=\"listview-table\"\n    >\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => {\n              let sortIcon = <Icons.Sort />;\n              if (column.isSorted && column.isSortedDesc) {\n                sortIcon = <Icons.SortDesc />;\n              } else if (column.isSorted && !column.isSortedDesc) {\n                sortIcon = <Icons.SortAsc />;\n              }\n              return column.hidden ? null : (\n                <th\n                  {...column.getHeaderProps(\n                    column.canSort ? column.getSortByToggleProps() : {},\n                  )}\n                  data-test=\"sort-header\"\n                  className={cx({\n                    [column.size || '']: column.size,\n                  })}\n                >\n                  <span>\n                    {column.render('Header')}\n                    {column.canSort && sortIcon}\n                  </span>\n                </th>\n              );\n            })}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {loading &&\n          rows.length === 0 &&\n          [...new Array(12)].map((_, i) => (\n            <tr key={i}>\n              {columns.map((column, i2) => {\n                if (column.hidden) return null;\n                return (\n                  <td\n                    key={i2}\n                    className={cx('table-cell', {\n                      'table-cell-loader': loading,\n                    })}\n                  >\n                    <span\n                      className=\"loading-bar empty-loading-bar\"\n                      role=\"progressbar\"\n                      aria-label=\"loading\"\n                    />\n                  </td>\n                );\n              })}\n            </tr>\n          ))}\n        {rows.length > 0 &&\n          rows.map(row => {\n            prepareRow(row);\n            // @ts-ignore\n            const rowId = row.original.id;\n            return (\n              <tr\n                data-test=\"table-row\"\n                {...row.getRowProps()}\n                className={cx('table-row', {\n                  'table-row-selected':\n                    row.isSelected ||\n                    (typeof rowId !== 'undefined' && rowId === highlightRowId),\n                })}\n              >\n                {row.cells.map(cell => {\n                  if (cell.column.hidden) return null;\n                  const columnCellProps = cell.column.cellProps || {};\n                  const isWrapText = columnsForWrapText?.includes(\n                    cell.column.Header as string,\n                  );\n                  return (\n                    <td\n                      data-test=\"table-row-cell\"\n                      className={cx(\n                        `table-cell table-cell__${\n                          isWrapText ? 'wrap' : 'nowrap'\n                        }`,\n                        {\n                          'table-cell-loader': loading,\n                          [cell.column.size || '']: cell.column.size,\n                        },\n                      )}\n                      {...cell.getCellProps()}\n                      {...columnCellProps}\n                    >\n                      <span\n                        className={cx({ 'loading-bar': loading })}\n                        role={loading ? 'progressbar' : undefined}\n                      >\n                        <span data-test=\"cell-text\">{cell.render('Cell')}</span>\n                      </span>\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n      </tbody>\n    </Table>\n  ),\n);\n"]},"metadata":{},"sourceType":"module"}