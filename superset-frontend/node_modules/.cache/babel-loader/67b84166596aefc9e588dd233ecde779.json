{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getColumnLabel } from '@superset-ui/core';\nfunction getMetricLabel(metric) {\n  if (typeof metric === 'string' || typeof metric === 'undefined') {\n    return metric;\n  }\n  if (Array.isArray(metric)) {\n    return metric.length > 0 ? getMetricLabel(metric[0]) : undefined;\n  }\n  return metric.label;\n}\nexport default function transformProps(chartProps) {\n  const { width, height, formData, queriesData } = chartProps;\n  const { colorScheme, metric, rotation, series, sizeFrom = 0, sizeTo, sliceId } = formData;\n  const metricLabel = getMetricLabel(metric);\n  const seriesLabel = getColumnLabel(series);\n  const encoding = {\n    color: {\n      field: seriesLabel,\n      scale: {\n        scheme: colorScheme },\n\n      type: 'nominal' },\n\n    fontSize: typeof metricLabel === 'undefined' ?\n    undefined :\n    {\n      field: metricLabel,\n      scale: {\n        range: [sizeFrom, sizeTo],\n        zero: true },\n\n      type: 'quantitative' },\n\n    text: {\n      field: seriesLabel } };\n\n\n  return {\n    data: queriesData[0].data,\n    encoding,\n    height,\n    rotation,\n    width,\n    sliceId };\n\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAmBA,SAAqBA,cAArB,QAA2C,mBAA3C;AAIA,SAASC,cAAT,CACEC,MADF,EAC2C;EAEzC,IAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8B,OAAOA,MAAP,KAAkB,WAApD,EAAiE;IAC/D,OAAOA,MAAP;EACD;EACD,IAAIC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAJ,EAA2B;IACzB,OAAOA,MAAM,CAACG,MAAP,GAAgB,CAAhB,GAAoBJ,cAAc,CAACC,MAAM,CAAC,CAAD,CAAP,CAAlC,GAAgDI,SAAvD;EACD;EAED,OAAOJ,MAAM,CAACK,KAAd;AACD;AAED,eAAc,SAAUC,cAAV,CAAyBC,UAAzB,EAA+C;EAC3D,MAAM,EAAEC,KAAF,EAASC,MAAT,EAAiBC,QAAjB,EAA2BC,WAA3B,KAA2CJ,UAAjD;EACA,MAAM,EACJK,WADI,EAEJZ,MAFI,EAGJa,QAHI,EAIJC,MAJI,EAKJC,QAAQ,GAAG,CALP,EAMJC,MANI,EAOJC,OAPI,KAQFP,QARJ;EAUA,MAAMQ,WAAW,GAAGnB,cAAc,CAACC,MAAD,CAAlC;EACA,MAAMmB,WAAW,GAAGrB,cAAc,CAACgB,MAAD,CAAlC;EAEA,MAAMM,QAAQ,GAA+B;IAC3CC,KAAK,EAAE;MACLC,KAAK,EAAEH,WADF;MAELI,KAAK,EAAE;QACLC,MAAM,EAAEZ,WADH,EAFF;;MAKLa,IAAI,EAAE,SALD,EADoC;;IAQ3CC,QAAQ,EACN,OAAOR,WAAP,KAAuB,WAAvB;IACId,SADJ;IAEI;MACEkB,KAAK,EAAEJ,WADT;MAEEK,KAAK,EAAE;QACLI,KAAK,EAAE,CAACZ,QAAD,EAAWC,MAAX,CADF;QAELY,IAAI,EAAE,IAFD,EAFT;;MAMEH,IAAI,EAAE,cANR,EAXqC;;IAmB3CI,IAAI,EAAE;MACJP,KAAK,EAAEH,WADH,EAnBqC,EAA7C;;;EAwBA,OAAO;IACLW,IAAI,EAAEnB,WAAW,CAAC,CAAD,CAAX,CAAemB,IADhB;IAELV,QAFK;IAGLX,MAHK;IAILI,QAJK;IAKLL,KALK;IAMLS,OANK,EAAP;;AAQD","names":["getColumnLabel","getMetricLabel","metric","Array","isArray","length","undefined","label","transformProps","chartProps","width","height","formData","queriesData","colorScheme","rotation","series","sizeFrom","sizeTo","sliceId","metricLabel","seriesLabel","encoding","color","field","scale","scheme","type","fontSize","range","zero","text","data"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-word-cloud/src/legacyPlugin/transformProps.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { ChartProps, getColumnLabel } from '@superset-ui/core';\nimport { WordCloudProps, WordCloudEncoding } from '../chart/WordCloud';\nimport { LegacyWordCloudFormData } from './types';\n\nfunction getMetricLabel(\n  metric: LegacyWordCloudFormData['metric'],\n): string | undefined {\n  if (typeof metric === 'string' || typeof metric === 'undefined') {\n    return metric;\n  }\n  if (Array.isArray(metric)) {\n    return metric.length > 0 ? getMetricLabel(metric[0]) : undefined;\n  }\n\n  return metric.label;\n}\n\nexport default function transformProps(chartProps: ChartProps): WordCloudProps {\n  const { width, height, formData, queriesData } = chartProps;\n  const {\n    colorScheme,\n    metric,\n    rotation,\n    series,\n    sizeFrom = 0,\n    sizeTo,\n    sliceId,\n  } = formData as LegacyWordCloudFormData;\n\n  const metricLabel = getMetricLabel(metric);\n  const seriesLabel = getColumnLabel(series);\n\n  const encoding: Partial<WordCloudEncoding> = {\n    color: {\n      field: seriesLabel,\n      scale: {\n        scheme: colorScheme,\n      },\n      type: 'nominal',\n    },\n    fontSize:\n      typeof metricLabel === 'undefined'\n        ? undefined\n        : {\n            field: metricLabel,\n            scale: {\n              range: [sizeFrom, sizeTo],\n              zero: true,\n            },\n            type: 'quantitative',\n          },\n    text: {\n      field: seriesLabel,\n    },\n  };\n\n  return {\n    data: queriesData[0].data,\n    encoding,\n    height,\n    rotation,\n    width,\n    sliceId,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}