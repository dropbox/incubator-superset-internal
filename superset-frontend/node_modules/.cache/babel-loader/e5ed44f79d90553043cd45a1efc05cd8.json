{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { DTTM_ALIAS, FeatureFlag, isFeatureEnabled, getColumnLabel, isQueryFormColumn } from '@superset-ui/core';\nexport const isXAxisSet = (formData) => isQueryFormColumn(formData.x_axis);\nexport const hasGenericChartAxes = isFeatureEnabled(FeatureFlag.GENERIC_CHART_AXES);\nexport const getXAxisColumn = (formData) => {\n  // The formData should be \"raw form_data\" -- the snake_case version of formData rather than camelCase.\n  if (!(formData.granularity_sqla || formData.x_axis)) {\n    return undefined;\n  }\n  if (isXAxisSet(formData)) {\n    return formData.x_axis;\n  }\n  return DTTM_ALIAS;\n};\nexport const getXAxisLabel = (formData) => {\n  const col = getXAxisColumn(formData);\n  if (col) {\n    return getColumnLabel(col);\n  }\n  return undefined;\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,UADF,EAEEC,WAFF,EAGEC,gBAHF,EAIEC,cAJF,EAKEC,iBALF,QASO,mBATP;AAWA,OAAO,MAAMC,UAAU,GAAG,CAACC,QAAD,KACxBF,iBAAiB,CAACE,QAAQ,CAACC,MAAV,CADZ;AAGP,OAAO,MAAMC,mBAAmB,GAAGN,gBAAgB,CACjDD,WAAW,CAACQ,kBADqC,CAA5C;AAIP,OAAO,MAAMC,cAAc,GAAG,CAC5BJ,QAD4B,KAEC;EAC7B;EACA,IAAI,EAAEA,QAAQ,CAACK,gBAAT,IAA6BL,QAAQ,CAACC,MAAxC,CAAJ,EAAqD;IACnD,OAAOK,SAAP;EACD;EAED,IAAIP,UAAU,CAACC,QAAD,CAAd,EAA0B;IACxB,OAAOA,QAAQ,CAACC,MAAhB;EACD;EACD,OAAOP,UAAP;AACD,CAZM;AAcP,OAAO,MAAMa,aAAa,GAAG,CAACP,QAAD,KAA8C;EACzE,MAAMQ,GAAG,GAAGJ,cAAc,CAACJ,QAAD,CAA1B;EACA,IAAIQ,GAAJ,EAAS;IACP,OAAOX,cAAc,CAACW,GAAD,CAArB;EACD;EACD,OAAOF,SAAP;AACD,CANM","names":["DTTM_ALIAS","FeatureFlag","isFeatureEnabled","getColumnLabel","isQueryFormColumn","isXAxisSet","formData","x_axis","hasGenericChartAxes","GENERIC_CHART_AXES","getXAxisColumn","granularity_sqla","undefined","getXAxisLabel","col"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/query/getXAxis.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  DTTM_ALIAS,\n  FeatureFlag,\n  isFeatureEnabled,\n  getColumnLabel,\n  isQueryFormColumn,\n  QueryFormData,\n  QueryFormColumn,\n  Optional,\n} from '@superset-ui/core';\n\nexport const isXAxisSet = (formData: QueryFormData) =>\n  isQueryFormColumn(formData.x_axis);\n\nexport const hasGenericChartAxes = isFeatureEnabled(\n  FeatureFlag.GENERIC_CHART_AXES,\n);\n\nexport const getXAxisColumn = (\n  formData: QueryFormData,\n): Optional<QueryFormColumn> => {\n  // The formData should be \"raw form_data\" -- the snake_case version of formData rather than camelCase.\n  if (!(formData.granularity_sqla || formData.x_axis)) {\n    return undefined;\n  }\n\n  if (isXAxisSet(formData)) {\n    return formData.x_axis;\n  }\n  return DTTM_ALIAS;\n};\n\nexport const getXAxisLabel = (formData: QueryFormData): Optional<string> => {\n  const col = getXAxisColumn(formData);\n  if (col) {\n    return getColumnLabel(col);\n  }\n  return undefined;\n};\n"]},"metadata":{},"sourceType":"module"}