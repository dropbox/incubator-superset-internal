{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { addToast } from './actions';\nimport { ToastType } from './types';\n\nexport default function toastsFromPyFlashMessages(flashMessages) {if (flashMessages === void 0) {flashMessages = [];}\n  const toasts = [];\n\n  flashMessages.forEach((_ref) => {let [messageType, message] = _ref;\n    const toastType =\n    messageType === 'danger' ?\n    ToastType.DANGER :\n    messageType === 'success' && ToastType.SUCCESS || ToastType.INFO;\n\n    const toast = addToast({\n      text: message,\n      toastType }).\n    payload;\n\n    toasts.push(toast);\n  });\n\n  return toasts;\n}","map":{"version":3,"names":["addToast","ToastType","toastsFromPyFlashMessages","flashMessages","toasts","forEach","messageType","message","toastType","DANGER","SUCCESS","INFO","toast","text","payload","push"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/MessageToasts/getToastsFromPyFlashMessages.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { addToast } from './actions';\nimport { ToastType } from './types';\n\nexport default function toastsFromPyFlashMessages(flashMessages = []) {\n  const toasts = [];\n\n  flashMessages.forEach(([messageType, message]) => {\n    const toastType =\n      messageType === 'danger'\n        ? ToastType.DANGER\n        : (messageType === 'success' && ToastType.SUCCESS) || ToastType.INFO;\n\n    const toast = addToast({\n      text: message,\n      toastType,\n    }).payload;\n\n    toasts.push(toast);\n  });\n\n  return toasts;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,QAAyB,WAAzB;AACA,SAASC,SAAT,QAA0B,SAA1B;;AAEA,eAAe,SAASC,yBAAT,CAAmCC,aAAnC,EAAuD,KAApBA,aAAoB,cAApBA,aAAoB,GAAJ,EAAI;EACpE,MAAMC,MAAM,GAAG,EAAf;;EAEAD,aAAa,CAACE,OAAd,CAAsB,UAA4B,KAA3B,CAACC,WAAD,EAAcC,OAAd,CAA2B;IAChD,MAAMC,SAAS;IACbF,WAAW,KAAK,QAAhB;IACIL,SAAS,CAACQ,MADd;IAEKH,WAAW,KAAK,SAAhB,IAA6BL,SAAS,CAACS,OAAxC,IAAoDT,SAAS,CAACU,IAHpE;;IAKA,MAAMC,KAAK,GAAGZ,QAAQ,CAAC;MACrBa,IAAI,EAAEN,OADe;MAErBC,SAFqB,EAAD,CAAR;IAGXM,OAHH;;IAKAV,MAAM,CAACW,IAAP,CAAYH,KAAZ;EACD,CAZD;;EAcA,OAAOR,MAAP;AACD"},"metadata":{},"sourceType":"module"}