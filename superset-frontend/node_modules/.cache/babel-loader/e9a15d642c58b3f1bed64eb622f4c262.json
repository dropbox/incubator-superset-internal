{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nexport function recurseReactClone(children, type, propExtender) {\n  /**\n   * Clones a React component's children, and injects new props\n   * where the type specified is matched.\n   */\n  return React.Children.map(children, (child) => {\n    let newChild = child;\n    if (child && child.type.name === type.name) {\n      newChild = /*#__PURE__*/React.cloneElement(child, propExtender(child));\n    }\n    if (newChild && newChild.props.children) {\n      newChild = /*#__PURE__*/React.cloneElement(newChild, {\n        children: recurseReactClone(\n        newChild.props.children,\n        type,\n        propExtender) });\n\n\n    }\n    return newChild;\n  });\n}","map":{"version":3,"names":["React","recurseReactClone","children","type","propExtender","Children","map","child","newChild","name","cloneElement","props"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Datasource/utils.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nexport function recurseReactClone(children, type, propExtender) {\n  /**\n   * Clones a React component's children, and injects new props\n   * where the type specified is matched.\n   */\n  return React.Children.map(children, child => {\n    let newChild = child;\n    if (child && child.type.name === type.name) {\n      newChild = React.cloneElement(child, propExtender(child));\n    }\n    if (newChild && newChild.props.children) {\n      newChild = React.cloneElement(newChild, {\n        children: recurseReactClone(\n          newChild.props.children,\n          type,\n          propExtender,\n        ),\n      });\n    }\n    return newChild;\n  });\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,SAASC,iBAAT,CAA2BC,QAA3B,EAAqCC,IAArC,EAA2CC,YAA3C,EAAyD;EAC9D;AACF;AACA;AACA;EACE,OAAOJ,KAAK,CAACK,QAAN,CAAeC,GAAf,CAAmBJ,QAAnB,EAA6B,CAAAK,KAAK,KAAI;IAC3C,IAAIC,QAAQ,GAAGD,KAAf;IACA,IAAIA,KAAK,IAAIA,KAAK,CAACJ,IAAN,CAAWM,IAAX,KAAoBN,IAAI,CAACM,IAAtC,EAA4C;MAC1CD,QAAQ,gBAAGR,KAAK,CAACU,YAAN,CAAmBH,KAAnB,EAA0BH,YAAY,CAACG,KAAD,CAAtC,CAAX;IACD;IACD,IAAIC,QAAQ,IAAIA,QAAQ,CAACG,KAAT,CAAeT,QAA/B,EAAyC;MACvCM,QAAQ,gBAAGR,KAAK,CAACU,YAAN,CAAmBF,QAAnB,EAA6B;QACtCN,QAAQ,EAAED,iBAAiB;QACzBO,QAAQ,CAACG,KAAT,CAAeT,QADU;QAEzBC,IAFyB;QAGzBC,YAHyB,CADW,EAA7B,CAAX;;;IAOD;IACD,OAAOI,QAAP;EACD,CAfM,CAAP;AAgBD"},"metadata":{},"sourceType":"module"}