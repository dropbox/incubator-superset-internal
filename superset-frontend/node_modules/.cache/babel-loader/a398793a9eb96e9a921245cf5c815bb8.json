{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { DndItemType } from 'src/explore/components/DndItemType';\nimport AdhocFilterPopoverTrigger from 'src/explore/components/controls/FilterControl/AdhocFilterPopoverTrigger';\nimport { useGetTimeRangeLabel } from 'src/explore/components/controls/FilterControl/utils';\nimport OptionWrapper from './OptionWrapper';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function DndAdhocFilterOption(_ref) {let { adhocFilter, options, datasource, onFilterEdit, onShiftOptions, onClickClose, partitionColumn, index } = _ref;\n  const { actualTimeRange, title } = useGetTimeRangeLabel(adhocFilter);\n  return ___EmotionJSX(AdhocFilterPopoverTrigger, { key: index, adhocFilter: adhocFilter, options: options, datasource: datasource, onFilterEdit: onFilterEdit, partitionColumn: partitionColumn },\n  ___EmotionJSX(OptionWrapper, { key: index, index: index, label: actualTimeRange != null ? actualTimeRange : adhocFilter.getDefaultLabel(), tooltipTitle: title != null ? title : adhocFilter.getTooltipTitle(), clickClose: onClickClose, onShiftOptions: onShiftOptions, type: DndItemType.FilterOption, withCaret: true, isExtra: adhocFilter.isExtra, datasourceWarningMessage: adhocFilter.datasourceWarning ?\n    t('This filter might be incompatible with current dataset') :\n    undefined }));\n\n}__signature__(DndAdhocFilterOption, \"useGetTimeRangeLabel{{ actualTimeRange, title }}\", () => [useGetTimeRangeLabel]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DndAdhocFilterOption, \"DndAdhocFilterOption\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/DndColumnSelectControl/DndAdhocFilterOption.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,CAAT,QAAkB,mBAAlB;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,OAAOC,yBAAP,MAAsC,yEAAtC;AAGA,SAASC,oBAAT,QAAqC,qDAArC;AACA,OAAOC,aAAP,MAA0B,iBAA1B,C;AAaA,eAAc,SAAUC,oBAAV,OASc,KATiB,EAC3CC,WAD2C,EAE3CC,OAF2C,EAG3CC,UAH2C,EAI3CC,YAJ2C,EAK3CC,cAL2C,EAM3CC,YAN2C,EAO3CC,eAP2C,EAQ3CC,KAR2C,EASjB;EAC1B,MAAM,EAAEC,eAAF,EAAmBC,KAAnB,KAA6BZ,oBAAoB,CAACG,WAAD,CAAvD;EAEA,OACE,cAAC,yBAAD,IACE,GAAG,EAAEO,KADP,EAEE,WAAW,EAAEP,WAFf,EAGE,OAAO,EAAEC,OAHX,EAIE,UAAU,EAAEC,UAJd,EAKE,YAAY,EAAEC,YALhB,EAME,eAAe,EAAEG,eANnB;EAQE,cAAC,aAAD,IACE,GAAG,EAAEC,KADP,EAEE,KAAK,EAAEA,KAFT,EAGE,KAAK,EAAEC,eAAF,WAAEA,eAAF,GAAqBR,WAAW,CAACU,eAAZ,EAH5B,EAIE,YAAY,EAAED,KAAF,WAAEA,KAAF,GAAWT,WAAW,CAACW,eAAZ,EAJzB,EAKE,UAAU,EAAEN,YALd,EAME,cAAc,EAAED,cANlB,EAOE,IAAI,EAAET,WAAW,CAACiB,YAPpB,EAQE,SAAS,MARX,EASE,OAAO,EAAEZ,WAAW,CAACa,OATvB,EAUE,wBAAwB,EACtBb,WAAW,CAACc,iBAAZ;IACIpB,CAAC,CAAC,wDAAD,CADL;IAEIqB,SAbR,GARF,CADF;;AA2BD,C,cAvCuBhB,oB,6DAUaF,oB,oLAVbE,oB","names":["React","t","DndItemType","AdhocFilterPopoverTrigger","useGetTimeRangeLabel","OptionWrapper","DndAdhocFilterOption","adhocFilter","options","datasource","onFilterEdit","onShiftOptions","onClickClose","partitionColumn","index","actualTimeRange","title","getDefaultLabel","getTooltipTitle","FilterOption","isExtra","datasourceWarning","undefined"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/DndColumnSelectControl/DndAdhocFilterOption.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { DndItemType } from 'src/explore/components/DndItemType';\nimport AdhocFilterPopoverTrigger from 'src/explore/components/controls/FilterControl/AdhocFilterPopoverTrigger';\nimport AdhocFilter from 'src/explore/components/controls/FilterControl/AdhocFilter';\nimport { OptionSortType } from 'src/explore/types';\nimport { useGetTimeRangeLabel } from 'src/explore/components/controls/FilterControl/utils';\nimport OptionWrapper from './OptionWrapper';\n\nexport interface DndAdhocFilterOptionProps {\n  adhocFilter: AdhocFilter;\n  onFilterEdit: (changedFilter: AdhocFilter) => void;\n  onClickClose: (index: number) => void;\n  onShiftOptions: (dragIndex: number, hoverIndex: number) => void;\n  options: OptionSortType[];\n  datasource: Record<string, any>;\n  partitionColumn?: string;\n  index: number;\n}\n\nexport default function DndAdhocFilterOption({\n  adhocFilter,\n  options,\n  datasource,\n  onFilterEdit,\n  onShiftOptions,\n  onClickClose,\n  partitionColumn,\n  index,\n}: DndAdhocFilterOptionProps) {\n  const { actualTimeRange, title } = useGetTimeRangeLabel(adhocFilter);\n\n  return (\n    <AdhocFilterPopoverTrigger\n      key={index}\n      adhocFilter={adhocFilter}\n      options={options}\n      datasource={datasource}\n      onFilterEdit={onFilterEdit}\n      partitionColumn={partitionColumn}\n    >\n      <OptionWrapper\n        key={index}\n        index={index}\n        label={actualTimeRange ?? adhocFilter.getDefaultLabel()}\n        tooltipTitle={title ?? adhocFilter.getTooltipTitle()}\n        clickClose={onClickClose}\n        onShiftOptions={onShiftOptions}\n        type={DndItemType.FilterOption}\n        withCaret\n        isExtra={adhocFilter.isExtra}\n        datasourceWarningMessage={\n          adhocFilter.datasourceWarning\n            ? t('This filter might be incompatible with current dataset')\n            : undefined\n        }\n      />\n    </AdhocFilterPopoverTrigger>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}