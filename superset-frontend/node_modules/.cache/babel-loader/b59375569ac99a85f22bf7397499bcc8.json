{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport callApi from './callApi';\nimport rejectAfterTimeout from './rejectAfterTimeout';\nimport parseResponse from './parseResponse';\nexport default async function callApiAndParseWithTimeout(_ref) {let { timeout, parseMethod, ...rest } = _ref;\n  const apiPromise = callApi(rest);\n  const racedPromise = typeof timeout === 'number' && timeout > 0 ?\n  Promise.race([apiPromise, rejectAfterTimeout(timeout)]) :\n  apiPromise;\n  return parseResponse(racedPromise, parseMethod);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(callApiAndParseWithTimeout, \"callApiAndParseWithTimeout\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/connection/callApi/callApiAndParseWithTimeout.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAGA,eAAe,eAAeC,0BAAf,OAM0C,KAJvD,EACAC,OADA,EAEAC,WAFA,EAGA,GAAGC,IAHH,EAIuD;EACvD,MAAMC,UAAU,GAAGP,OAAO,CAACM,IAAD,CAA1B;EACA,MAAME,YAAY,GAChB,OAAOJ,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,GAAG,CAAzC;EACIK,OAAO,CAACC,IAAR,CAAa,CAACH,UAAD,EAAaN,kBAAkB,CAAWG,OAAX,CAA/B,CAAb,CADJ;EAEIG,UAHN;EAKA,OAAOL,aAAa,CAACM,YAAD,EAAeH,WAAf,CAApB;AACD,C,iLAd6BF,0B","names":["callApi","rejectAfterTimeout","parseResponse","callApiAndParseWithTimeout","timeout","parseMethod","rest","apiPromise","racedPromise","Promise","race"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/connection/callApi/callApiAndParseWithTimeout.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport callApi from './callApi';\nimport rejectAfterTimeout from './rejectAfterTimeout';\nimport parseResponse from './parseResponse';\nimport { CallApi, ClientTimeout, ParseMethod } from '../types';\n\nexport default async function callApiAndParseWithTimeout<\n  T extends ParseMethod = 'json',\n>({\n  timeout,\n  parseMethod,\n  ...rest\n}: { timeout?: ClientTimeout; parseMethod?: T } & CallApi) {\n  const apiPromise = callApi(rest);\n  const racedPromise =\n    typeof timeout === 'number' && timeout > 0\n      ? Promise.race([apiPromise, rejectAfterTimeout<Response>(timeout)])\n      : apiPromise;\n\n  return parseResponse(racedPromise, parseMethod);\n}\n"]},"metadata":{},"sourceType":"module"}