{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { updateDataMask } from 'src/dataMask/actions';\nimport DashboardHeader from 'src/dashboard/components/Header';\nimport isDashboardLoading from 'src/dashboard/util/isDashboardLoading';\n\nimport { dashboardInfoChanged } from 'src/dashboard/actions/dashboardInfo';\n\nimport {\nsetEditMode,\nshowBuilderPane,\nfetchFaveStar,\nsaveFaveStar,\nsavePublished,\nsetColorScheme,\nsetUnsavedChanges,\nfetchCharts,\nupdateCss,\nonChange,\nsaveDashboardRequest,\nsetMaxUndoHistoryExceeded,\nmaxUndoHistoryToast,\nsetRefreshFrequency,\nonRefresh } from\n'src/dashboard/actions/dashboardState';\n\nimport {\nundoLayoutAction,\nredoLayoutAction,\nupdateDashboardTitle,\ndashboardTitleChanged } from\n'src/dashboard/actions/dashboardLayout';\nimport {\naddSuccessToast,\naddDangerToast,\naddWarningToast } from\n'src/components/MessageToasts/actions';\n\nimport { logEvent } from 'src/logger/actions';\nimport { DASHBOARD_HEADER_ID } from 'src/dashboard/util/constants';\nimport { fetchUISpecificReport } from 'src/reports/actions/reports';\n\nfunction mapStateToProps(_ref)\n\n\n\n\n\n\n\n{let { dashboardLayout: undoableLayout, dashboardState, reports, dashboardInfo, charts, dataMask, user } = _ref;\n  return {\n    dashboardInfo,\n    undoLength: undoableLayout.past.length,\n    redoLength: undoableLayout.future.length,\n    layout: undoableLayout.present,\n    dashboardTitle: (\n    (undoableLayout.present[DASHBOARD_HEADER_ID] || {}).meta || {}).\n    text,\n    expandedSlices: dashboardState.expandedSlices,\n    refreshFrequency: dashboardState.refreshFrequency,\n    shouldPersistRefreshFrequency:\n    !!dashboardState.shouldPersistRefreshFrequency,\n    customCss: dashboardState.css,\n    colorNamespace: dashboardState.colorNamespace,\n    colorScheme: dashboardState.colorScheme,\n    charts,\n    dataMask,\n    user,\n    isStarred: !!dashboardState.isStarred,\n    isPublished: !!dashboardState.isPublished,\n    isLoading: isDashboardLoading(charts),\n    hasUnsavedChanges: !!dashboardState.hasUnsavedChanges,\n    maxUndoHistoryExceeded: !!dashboardState.maxUndoHistoryExceeded,\n    lastModifiedTime: Math.max(\n    dashboardState.lastModifiedTime,\n    dashboardInfo.last_modified_time),\n\n    editMode: !!dashboardState.editMode,\n    slug: dashboardInfo.slug,\n    metadata: dashboardInfo.metadata,\n    reports };\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n  {\n    addSuccessToast,\n    addDangerToast,\n    addWarningToast,\n    onUndo: undoLayoutAction,\n    onRedo: redoLayoutAction,\n    setEditMode,\n    showBuilderPane,\n    setColorScheme,\n    setUnsavedChanges,\n    fetchFaveStar,\n    saveFaveStar,\n    savePublished,\n    fetchCharts,\n    updateDashboardTitle,\n    updateCss,\n    onChange,\n    onSave: saveDashboardRequest,\n    setMaxUndoHistoryExceeded,\n    maxUndoHistoryToast,\n    logEvent,\n    setRefreshFrequency,\n    onRefresh,\n    dashboardInfoChanged,\n    dashboardTitleChanged,\n    updateDataMask,\n    fetchUISpecificReport },\n\n  dispatch);\n\n}const _default =\n\nconnect(mapStateToProps, mapDispatchToProps)(DashboardHeader);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/containers/DashboardHeader.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/containers/DashboardHeader.jsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/containers/DashboardHeader.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["bindActionCreators","connect","updateDataMask","DashboardHeader","isDashboardLoading","dashboardInfoChanged","setEditMode","showBuilderPane","fetchFaveStar","saveFaveStar","savePublished","setColorScheme","setUnsavedChanges","fetchCharts","updateCss","onChange","saveDashboardRequest","setMaxUndoHistoryExceeded","maxUndoHistoryToast","setRefreshFrequency","onRefresh","undoLayoutAction","redoLayoutAction","updateDashboardTitle","dashboardTitleChanged","addSuccessToast","addDangerToast","addWarningToast","logEvent","DASHBOARD_HEADER_ID","fetchUISpecificReport","mapStateToProps","dashboardLayout","undoableLayout","dashboardState","reports","dashboardInfo","charts","dataMask","user","undoLength","past","length","redoLength","future","layout","present","dashboardTitle","meta","text","expandedSlices","refreshFrequency","shouldPersistRefreshFrequency","customCss","css","colorNamespace","colorScheme","isStarred","isPublished","isLoading","hasUnsavedChanges","maxUndoHistoryExceeded","lastModifiedTime","Math","max","last_modified_time","editMode","slug","metadata","mapDispatchToProps","dispatch","onUndo","onRedo","onSave"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/containers/DashboardHeader.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { updateDataMask } from 'src/dataMask/actions';\nimport DashboardHeader from 'src/dashboard/components/Header';\nimport isDashboardLoading from 'src/dashboard/util/isDashboardLoading';\n\nimport { dashboardInfoChanged } from 'src/dashboard/actions/dashboardInfo';\n\nimport {\n  setEditMode,\n  showBuilderPane,\n  fetchFaveStar,\n  saveFaveStar,\n  savePublished,\n  setColorScheme,\n  setUnsavedChanges,\n  fetchCharts,\n  updateCss,\n  onChange,\n  saveDashboardRequest,\n  setMaxUndoHistoryExceeded,\n  maxUndoHistoryToast,\n  setRefreshFrequency,\n  onRefresh,\n} from 'src/dashboard/actions/dashboardState';\n\nimport {\n  undoLayoutAction,\n  redoLayoutAction,\n  updateDashboardTitle,\n  dashboardTitleChanged,\n} from 'src/dashboard/actions/dashboardLayout';\nimport {\n  addSuccessToast,\n  addDangerToast,\n  addWarningToast,\n} from 'src/components/MessageToasts/actions';\n\nimport { logEvent } from 'src/logger/actions';\nimport { DASHBOARD_HEADER_ID } from 'src/dashboard/util/constants';\nimport { fetchUISpecificReport } from 'src/reports/actions/reports';\n\nfunction mapStateToProps({\n  dashboardLayout: undoableLayout,\n  dashboardState,\n  reports,\n  dashboardInfo,\n  charts,\n  dataMask,\n  user,\n}) {\n  return {\n    dashboardInfo,\n    undoLength: undoableLayout.past.length,\n    redoLength: undoableLayout.future.length,\n    layout: undoableLayout.present,\n    dashboardTitle: (\n      (undoableLayout.present[DASHBOARD_HEADER_ID] || {}).meta || {}\n    ).text,\n    expandedSlices: dashboardState.expandedSlices,\n    refreshFrequency: dashboardState.refreshFrequency,\n    shouldPersistRefreshFrequency:\n      !!dashboardState.shouldPersistRefreshFrequency,\n    customCss: dashboardState.css,\n    colorNamespace: dashboardState.colorNamespace,\n    colorScheme: dashboardState.colorScheme,\n    charts,\n    dataMask,\n    user,\n    isStarred: !!dashboardState.isStarred,\n    isPublished: !!dashboardState.isPublished,\n    isLoading: isDashboardLoading(charts),\n    hasUnsavedChanges: !!dashboardState.hasUnsavedChanges,\n    maxUndoHistoryExceeded: !!dashboardState.maxUndoHistoryExceeded,\n    lastModifiedTime: Math.max(\n      dashboardState.lastModifiedTime,\n      dashboardInfo.last_modified_time,\n    ),\n    editMode: !!dashboardState.editMode,\n    slug: dashboardInfo.slug,\n    metadata: dashboardInfo.metadata,\n    reports,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      addSuccessToast,\n      addDangerToast,\n      addWarningToast,\n      onUndo: undoLayoutAction,\n      onRedo: redoLayoutAction,\n      setEditMode,\n      showBuilderPane,\n      setColorScheme,\n      setUnsavedChanges,\n      fetchFaveStar,\n      saveFaveStar,\n      savePublished,\n      fetchCharts,\n      updateDashboardTitle,\n      updateCss,\n      onChange,\n      onSave: saveDashboardRequest,\n      setMaxUndoHistoryExceeded,\n      maxUndoHistoryToast,\n      logEvent,\n      setRefreshFrequency,\n      onRefresh,\n      dashboardInfoChanged,\n      dashboardTitleChanged,\n      updateDataMask,\n      fetchUISpecificReport,\n    },\n    dispatch,\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardHeader);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}