{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport { D3_FORMAT_DOCS, D3_FORMAT_OPTIONS, D3_TIME_FORMAT_OPTIONS, getStandardizedControls, sections } from '@superset-ui/chart-controls';\nimport OptionDescription from './OptionDescription';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst config = {\n  controlPanelSections: [\n  sections.legacyRegularTime,\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    ['metrics'],\n    ['adhoc_filters'],\n    ['groupby'],\n    ['limit'],\n    ['timeseries_limit_metric'],\n    ['order_desc'],\n    [\n    {\n      name: 'contribution',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Contribution'),\n        default: false,\n        description: t('Compute the contribution to the total') } }],\n\n\n\n    ['row_limit']] },\n\n\n  {\n    label: t('Time Series Options'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'time_series_option',\n      config: {\n        type: 'SelectControl',\n        label: t('Options'),\n        validators: [validateNonEmpty],\n        default: 'not_time',\n        valueKey: 'value',\n        options: [\n        {\n          label: t('Not Time Series'),\n          value: 'not_time',\n          description: t('Ignore time') },\n\n        {\n          label: t('Time Series'),\n          value: 'time_series',\n          description: t('Standard time series') },\n\n        {\n          label: t('Aggregate Mean'),\n          value: 'agg_mean',\n          description: t('Mean of values over specified period') },\n\n        {\n          label: t('Aggregate Sum'),\n          value: 'agg_sum',\n          description: t('Sum of values over specified period') },\n\n        {\n          label: t('Difference'),\n          value: 'point_diff',\n          description: t('Metric change in value from `since` to `until`') },\n\n        {\n          label: t('Percent Change'),\n          value: 'point_percent',\n          description: t('Metric percent change in value from `since` to `until`') },\n\n        {\n          label: t('Factor'),\n          value: 'point_factor',\n          description: t('Metric factor change from `since` to `until`') },\n\n        {\n          label: t('Advanced Analytics'),\n          value: 'adv_anal',\n          description: t('Use the Advanced Analytics options below') }],\n\n\n        optionRenderer: (op) => ___EmotionJSX(OptionDescription, { option: op }),\n        valueRenderer: (op) => ___EmotionJSX(OptionDescription, { option: op }),\n        description: t('Settings for time series') } }]] },\n\n\n\n\n\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    tabOverride: 'customize',\n    controlSetRows: [\n    ['color_scheme'],\n    [\n    {\n      name: 'number_format',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Number format'),\n        renderTrigger: true,\n        default: 'SMART_NUMBER',\n        choices: D3_FORMAT_OPTIONS,\n        description: D3_FORMAT_DOCS } },\n\n\n    {\n      name: 'date_time_format',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Date Time Format'),\n        renderTrigger: true,\n        default: 'smart_date',\n        choices: D3_TIME_FORMAT_OPTIONS,\n        description: D3_FORMAT_DOCS } }],\n\n\n\n    [\n    {\n      name: 'partition_limit',\n      config: {\n        type: 'TextControl',\n        label: t('Partition Limit'),\n        isInt: true,\n        default: '5',\n        description: t('The maximum number of subdivisions of each group; ' +\n        'lower values are pruned first') } },\n\n\n    {\n      name: 'partition_threshold',\n      config: {\n        type: 'TextControl',\n        label: t('Partition Threshold'),\n        isFloat: true,\n        default: '0.05',\n        description: t('Partitions whose height to parent height proportions are ' +\n        'below this value are pruned') } }],\n\n\n\n    [\n    {\n      name: 'log_scale',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Log Scale'),\n        default: false,\n        renderTrigger: true,\n        description: t('Use a log scale') } }],\n\n\n\n    [\n    {\n      name: 'equal_date_size',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Equal Date Sizes'),\n        default: true,\n        renderTrigger: true,\n        description: t('Check to force date partitions to have the same height') } }],\n\n\n\n    [\n    {\n      name: 'rich_tooltip',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Rich Tooltip'),\n        renderTrigger: true,\n        default: true,\n        description: t('The rich tooltip shows a list of all series for that point in time') } }]] },\n\n\n\n\n\n  {\n    label: t('Advanced Analytics'),\n    tabOverride: 'data',\n    description: t('This section contains options ' +\n    'that allow for advanced analytical post processing ' +\n    'of query results'),\n    controlSetRows: [\n    // eslint-disable-next-line react/jsx-key\n    [___EmotionJSX(\"div\", { className: \"section-header\" }, t('Rolling Window'))],\n    [\n    {\n      name: 'rolling_type',\n      config: {\n        type: 'SelectControl',\n        label: t('Rolling Function'),\n        default: 'None',\n        choices: [\n        ['None', t('None')],\n        ['mean', t('mean')],\n        ['sum', t('sum')],\n        ['std', t('std')],\n        ['cumsum', t('cumsum')]],\n\n        description: t('Defines a rolling window function to apply, works along ' +\n        'with the [Periods] text box') } }],\n\n\n\n    [\n    {\n      name: 'rolling_periods',\n      config: {\n        type: 'TextControl',\n        label: t('Periods'),\n        isInt: true,\n        description: t('Defines the size of the rolling window function, ' +\n        'relative to the time granularity selected') } },\n\n\n    {\n      name: 'min_periods',\n      config: {\n        type: 'TextControl',\n        label: t('Min Periods'),\n        isInt: true,\n        description: t('The minimum number of rolling periods required to show ' +\n        'a value. For instance if you do a cumulative sum on 7 days ' +\n        'you may want your \"Min Period\" to be 7, so that all data points ' +\n        'shown are the total of 7 periods. This will hide the \"ramp up\" ' +\n        'taking place over the first 7 periods') } }],\n\n\n\n    // eslint-disable-next-line react/jsx-key\n    [___EmotionJSX(\"div\", { className: \"section-header\" }, t('Time Comparison'))],\n    [\n    {\n      name: 'time_compare',\n      config: {\n        type: 'SelectControl',\n        multi: true,\n        freeForm: true,\n        label: t('Time Shift'),\n        choices: [\n        ['1 day', t('1 day')],\n        ['1 week', t('1 week')],\n        ['28 days', t('28 days')],\n        ['30 days', t('30 days')],\n        ['52 weeks', t('52 weeks')],\n        ['1 year', t('1 year')],\n        ['104 weeks', t('104 weeks')],\n        ['2 years', t('2 years')],\n        ['156 weeks', t('156 weeks')],\n        ['3 years', t('3 years')]],\n\n        description: t('Overlay one or more timeseries from a ' +\n        'relative time period. Expects relative time deltas ' +\n        'in natural language (example: 24 hours, 7 days, ' +\n        '52 weeks, 365 days). Free text is supported.') } },\n\n\n    {\n      name: 'comparison_type',\n      config: {\n        type: 'SelectControl',\n        label: t('Calculation type'),\n        default: 'values',\n        choices: [\n        ['values', t('Actual Values')],\n        ['absolute', t('Difference')],\n        ['percentage', t('Percentage change')],\n        ['ratio', t('Ratio')]],\n\n        description: t('How to display time shifts: as individual lines; as the ' +\n        'difference between the main time series and each time shift; ' +\n        'as the percentage change; or as the ratio between series and time shifts.') } }],\n\n\n\n    [___EmotionJSX(\"div\", { className: \"section-header\" }, t('Resample'))],\n    [\n    {\n      name: 'resample_rule',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Rule'),\n        default: null,\n        choices: [\n        ['1T', t('1T')],\n        ['1H', t('1H')],\n        ['1D', t('1D')],\n        ['7D', t('7D')],\n        ['1M', t('1M')],\n        ['1AS', t('1AS')]],\n\n        description: t('Pandas resample rule') } },\n\n\n    {\n      name: 'resample_method',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Method'),\n        default: null,\n        choices: [\n        ['asfreq', t('asfreq')],\n        ['bfill', t('bfill')],\n        ['ffill', t('ffill')],\n        ['median', t('median')],\n        ['mean', t('mean')],\n        ['sum', t('sum')]],\n\n        description: t('Pandas resample method') } }]] }],\n\n\n\n\n\n\n  formDataOverrides: (formData) => ({\n    ...formData,\n    groupby: getStandardizedControls().popAllColumns(),\n    metrics: getStandardizedControls().popAllMetrics() }) };\n\n\nexport default config;","map":{"version":3,"mappings":"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","names":["React","t","validateNonEmpty","D3_FORMAT_DOCS","D3_FORMAT_OPTIONS","D3_TIME_FORMAT_OPTIONS","getStandardizedControls","sections","OptionDescription","config","controlPanelSections","legacyRegularTime","label","expanded","controlSetRows","name","type","default","description","validators","valueKey","options","value","optionRenderer","op","valueRenderer","tabOverride","freeForm","renderTrigger","choices","isInt","isFloat","multi","formDataOverrides","formData","groupby","popAllColumns","metrics","popAllMetrics"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-plugin-chart-partition/src/controlPanel.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport {\n  ColumnMeta,\n  ControlPanelConfig,\n  D3_FORMAT_DOCS,\n  D3_FORMAT_OPTIONS,\n  D3_TIME_FORMAT_OPTIONS,\n  getStandardizedControls,\n  sections,\n} from '@superset-ui/chart-controls';\nimport OptionDescription from './OptionDescription';\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.legacyRegularTime,\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        ['metrics'],\n        ['adhoc_filters'],\n        ['groupby'],\n        ['limit'],\n        ['timeseries_limit_metric'],\n        ['order_desc'],\n        [\n          {\n            name: 'contribution',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Contribution'),\n              default: false,\n              description: t('Compute the contribution to the total'),\n            },\n          },\n        ],\n        ['row_limit'],\n      ],\n    },\n    {\n      label: t('Time Series Options'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'time_series_option',\n            config: {\n              type: 'SelectControl',\n              label: t('Options'),\n              validators: [validateNonEmpty],\n              default: 'not_time',\n              valueKey: 'value',\n              options: [\n                {\n                  label: t('Not Time Series'),\n                  value: 'not_time',\n                  description: t('Ignore time'),\n                },\n                {\n                  label: t('Time Series'),\n                  value: 'time_series',\n                  description: t('Standard time series'),\n                },\n                {\n                  label: t('Aggregate Mean'),\n                  value: 'agg_mean',\n                  description: t('Mean of values over specified period'),\n                },\n                {\n                  label: t('Aggregate Sum'),\n                  value: 'agg_sum',\n                  description: t('Sum of values over specified period'),\n                },\n                {\n                  label: t('Difference'),\n                  value: 'point_diff',\n                  description: t(\n                    'Metric change in value from `since` to `until`',\n                  ),\n                },\n                {\n                  label: t('Percent Change'),\n                  value: 'point_percent',\n                  description: t(\n                    'Metric percent change in value from `since` to `until`',\n                  ),\n                },\n                {\n                  label: t('Factor'),\n                  value: 'point_factor',\n                  description: t(\n                    'Metric factor change from `since` to `until`',\n                  ),\n                },\n                {\n                  label: t('Advanced Analytics'),\n                  value: 'adv_anal',\n                  description: t('Use the Advanced Analytics options below'),\n                },\n              ],\n              optionRenderer: (op: ColumnMeta) => (\n                <OptionDescription option={op} />\n              ),\n              valueRenderer: (op: ColumnMeta) => (\n                <OptionDescription option={op} />\n              ),\n              description: t('Settings for time series'),\n            },\n          },\n        ],\n      ],\n    },\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      tabOverride: 'customize',\n      controlSetRows: [\n        ['color_scheme'],\n        [\n          {\n            name: 'number_format',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Number format'),\n              renderTrigger: true,\n              default: 'SMART_NUMBER',\n              choices: D3_FORMAT_OPTIONS,\n              description: D3_FORMAT_DOCS,\n            },\n          },\n          {\n            name: 'date_time_format',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Date Time Format'),\n              renderTrigger: true,\n              default: 'smart_date',\n              choices: D3_TIME_FORMAT_OPTIONS,\n              description: D3_FORMAT_DOCS,\n            },\n          },\n        ],\n        [\n          {\n            name: 'partition_limit',\n            config: {\n              type: 'TextControl',\n              label: t('Partition Limit'),\n              isInt: true,\n              default: '5',\n              description: t(\n                'The maximum number of subdivisions of each group; ' +\n                  'lower values are pruned first',\n              ),\n            },\n          },\n          {\n            name: 'partition_threshold',\n            config: {\n              type: 'TextControl',\n              label: t('Partition Threshold'),\n              isFloat: true,\n              default: '0.05',\n              description: t(\n                'Partitions whose height to parent height proportions are ' +\n                  'below this value are pruned',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'log_scale',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Log Scale'),\n              default: false,\n              renderTrigger: true,\n              description: t('Use a log scale'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'equal_date_size',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Equal Date Sizes'),\n              default: true,\n              renderTrigger: true,\n              description: t(\n                'Check to force date partitions to have the same height',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'rich_tooltip',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Rich Tooltip'),\n              renderTrigger: true,\n              default: true,\n              description: t(\n                'The rich tooltip shows a list of all series for that point in time',\n              ),\n            },\n          },\n        ],\n      ],\n    },\n    {\n      label: t('Advanced Analytics'),\n      tabOverride: 'data',\n      description: t(\n        'This section contains options ' +\n          'that allow for advanced analytical post processing ' +\n          'of query results',\n      ),\n      controlSetRows: [\n        // eslint-disable-next-line react/jsx-key\n        [<div className=\"section-header\">{t('Rolling Window')}</div>],\n        [\n          {\n            name: 'rolling_type',\n            config: {\n              type: 'SelectControl',\n              label: t('Rolling Function'),\n              default: 'None',\n              choices: [\n                ['None', t('None')],\n                ['mean', t('mean')],\n                ['sum', t('sum')],\n                ['std', t('std')],\n                ['cumsum', t('cumsum')],\n              ],\n              description: t(\n                'Defines a rolling window function to apply, works along ' +\n                  'with the [Periods] text box',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'rolling_periods',\n            config: {\n              type: 'TextControl',\n              label: t('Periods'),\n              isInt: true,\n              description: t(\n                'Defines the size of the rolling window function, ' +\n                  'relative to the time granularity selected',\n              ),\n            },\n          },\n          {\n            name: 'min_periods',\n            config: {\n              type: 'TextControl',\n              label: t('Min Periods'),\n              isInt: true,\n              description: t(\n                'The minimum number of rolling periods required to show ' +\n                  'a value. For instance if you do a cumulative sum on 7 days ' +\n                  'you may want your \"Min Period\" to be 7, so that all data points ' +\n                  'shown are the total of 7 periods. This will hide the \"ramp up\" ' +\n                  'taking place over the first 7 periods',\n              ),\n            },\n          },\n        ],\n        // eslint-disable-next-line react/jsx-key\n        [<div className=\"section-header\">{t('Time Comparison')}</div>],\n        [\n          {\n            name: 'time_compare',\n            config: {\n              type: 'SelectControl',\n              multi: true,\n              freeForm: true,\n              label: t('Time Shift'),\n              choices: [\n                ['1 day', t('1 day')],\n                ['1 week', t('1 week')],\n                ['28 days', t('28 days')],\n                ['30 days', t('30 days')],\n                ['52 weeks', t('52 weeks')],\n                ['1 year', t('1 year')],\n                ['104 weeks', t('104 weeks')],\n                ['2 years', t('2 years')],\n                ['156 weeks', t('156 weeks')],\n                ['3 years', t('3 years')],\n              ],\n              description: t(\n                'Overlay one or more timeseries from a ' +\n                  'relative time period. Expects relative time deltas ' +\n                  'in natural language (example: 24 hours, 7 days, ' +\n                  '52 weeks, 365 days). Free text is supported.',\n              ),\n            },\n          },\n          {\n            name: 'comparison_type',\n            config: {\n              type: 'SelectControl',\n              label: t('Calculation type'),\n              default: 'values',\n              choices: [\n                ['values', t('Actual Values')],\n                ['absolute', t('Difference')],\n                ['percentage', t('Percentage change')],\n                ['ratio', t('Ratio')],\n              ],\n              description: t(\n                'How to display time shifts: as individual lines; as the ' +\n                  'difference between the main time series and each time shift; ' +\n                  'as the percentage change; or as the ratio between series and time shifts.',\n              ),\n            },\n          },\n        ],\n        [<div className=\"section-header\">{t('Resample')}</div>],\n        [\n          {\n            name: 'resample_rule',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Rule'),\n              default: null,\n              choices: [\n                ['1T', t('1T')],\n                ['1H', t('1H')],\n                ['1D', t('1D')],\n                ['7D', t('7D')],\n                ['1M', t('1M')],\n                ['1AS', t('1AS')],\n              ],\n              description: t('Pandas resample rule'),\n            },\n          },\n          {\n            name: 'resample_method',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Method'),\n              default: null,\n              choices: [\n                ['asfreq', t('asfreq')],\n                ['bfill', t('bfill')],\n                ['ffill', t('ffill')],\n                ['median', t('median')],\n                ['mean', t('mean')],\n                ['sum', t('sum')],\n              ],\n              description: t('Pandas resample method'),\n            },\n          },\n        ],\n      ],\n    },\n  ],\n  formDataOverrides: formData => ({\n    ...formData,\n    groupby: getStandardizedControls().popAllColumns(),\n    metrics: getStandardizedControls().popAllMetrics(),\n  }),\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}