{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";import _uniqWith from \"lodash/uniqWith\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-param-reassign */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { AppSection, ensureIsArray, getColumnLabel, smartDateDetailedFormatter, t, tn } from '@superset-ui/core';\nimport debounce from 'lodash/debounce';\nimport { useImmerReducer } from 'use-immer';\nimport { Select } from 'src/components';\nimport { SLOW_DEBOUNCE } from 'src/constants';\nimport { propertyComparator } from 'src/components/Select/utils';\nimport { FilterBarOrientation } from 'src/dashboard/types';\n\nimport { FilterPluginStyle, StatusMessage, StyledFormItem } from '../common';\nimport { getDataRecordFormatter, getSelectExtraFormData } from '../../utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction reducer(draft, action) {\n  switch (action.type) {\n    case 'ownState':\n      draft.ownState = {\n        ...draft.ownState,\n        ...action.ownState };\n\n      return draft;\n    case 'filterState':\n      draft.extraFormData = action.extraFormData;\n      // eslint-disable-next-line no-underscore-dangle\n      draft.__cache = action.__cache;\n      draft.filterState = { ...draft.filterState, ...action.filterState };\n      return draft;\n    default:\n      return draft;}\n\n}\nexport default function PluginFilterSelect(props) {\n  const { coltypeMap, data, filterState, formData, height, isRefreshing, width, setDataMask, setHoveredFilter, unsetHoveredFilter, setFocusedFilter, unsetFocusedFilter, setFilterActive, appSection, showOverflow, parentRef, inputRef, filterBarOrientation } = props;\n  const { enableEmptyFilter, multiSelect, showSearch, inverseSelection, defaultToFirstItem, searchAllOptions } = formData;\n  const groupby = useMemo(() => ensureIsArray(formData.groupby).map(getColumnLabel), [formData.groupby]);\n  const [col] = groupby;\n  const [initialColtypeMap] = useState(coltypeMap);\n  const [dataMask, dispatchDataMask] = useImmerReducer(reducer, {\n    extraFormData: {},\n    filterState });\n\n  const datatype = coltypeMap[col];\n  const labelFormatter = useMemo(() => getDataRecordFormatter({\n    timeFormatter: smartDateDetailedFormatter }),\n  []);\n  const updateDataMask = useCallback((values) => {\n    const emptyFilter = enableEmptyFilter && !inverseSelection && !(values != null && values.length);\n    const suffix = inverseSelection && values != null && values.length ? t(' (excluded)') : '';\n    dispatchDataMask({\n      type: 'filterState',\n      __cache: filterState,\n      extraFormData: getSelectExtraFormData(col, values, emptyFilter, inverseSelection),\n      filterState: {\n        ...filterState,\n        label: values != null && values.length ?\n        `${(values || []).\n        map((value) => labelFormatter(value, datatype)).\n        join(', ')}${suffix}` :\n        undefined,\n        value: appSection === AppSection.FILTER_CONFIG_MODAL && defaultToFirstItem ?\n        undefined :\n        values } });\n\n\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [\n  appSection,\n  col,\n  datatype,\n  defaultToFirstItem,\n  dispatchDataMask,\n  enableEmptyFilter,\n  inverseSelection,\n  JSON.stringify(filterState),\n  labelFormatter]);\n\n  const isDisabled = appSection === AppSection.FILTER_CONFIG_MODAL && defaultToFirstItem;\n  const debouncedOwnStateFunc = useCallback(debounce((val) => {\n    dispatchDataMask({\n      type: 'ownState',\n      ownState: {\n        coltypeMap: initialColtypeMap,\n        search: val } });\n\n\n  }, SLOW_DEBOUNCE), []);\n  const searchWrapper = useCallback((val) => {\n    if (searchAllOptions) {\n      debouncedOwnStateFunc(val);\n    }\n  }, [debouncedOwnStateFunc, searchAllOptions]);\n  const clearSuggestionSearch = useCallback(() => {\n    if (searchAllOptions) {\n      dispatchDataMask({\n        type: 'ownState',\n        ownState: {\n          coltypeMap: initialColtypeMap,\n          search: null } });\n\n\n    }\n  }, [dispatchDataMask, initialColtypeMap, searchAllOptions]);\n  const handleBlur = useCallback(() => {\n    clearSuggestionSearch();\n    unsetFocusedFilter();\n  }, [clearSuggestionSearch, unsetFocusedFilter]);\n  const handleChange = useCallback((value) => {\n    const values = value === null ? [null] : ensureIsArray(value);\n    if (values.length === 0) {\n      updateDataMask(null);\n    } else\n    {\n      updateDataMask(values);\n    }\n  }, [updateDataMask]);\n  const placeholderText = data.length === 0 ?\n  t('No data') :\n  tn('%s option', '%s options', data.length, data.length);\n  const formItemExtra = useMemo(() => {\n    if (filterState.validateMessage) {\n      return ___EmotionJSX(StatusMessage, { status: filterState.validateStatus },\n      filterState.validateMessage);\n\n    }\n    return undefined;\n  }, [filterState.validateMessage, filterState.validateStatus]);\n  const options = useMemo(() => {\n    const allOptions = [...data];\n    const uniqueOptions = _uniqWith(allOptions, _isEqual);\n    const selectOptions = [];\n    uniqueOptions.forEach((row) => {\n      const [value] = groupby.map((col) => row[col]);\n      selectOptions.push({\n        label: labelFormatter(value, datatype),\n        value });\n\n    });\n    return selectOptions;\n  }, [data, datatype, groupby, labelFormatter]);\n  const sortComparator = useCallback((a, b) => {\n    const labelComparator = propertyComparator('label');\n    if (formData.sortAscending) {\n      return labelComparator(a, b);\n    }\n    return labelComparator(b, a);\n  }, [formData.sortAscending]);\n  useEffect(() => {\n    if (defaultToFirstItem && filterState.value === undefined) {\n      // initialize to first value if set to default to first item\n      const firstItem = data[0] ?\n      groupby.map((col) => data[0][col]) :\n      null;\n      // firstItem[0] !== undefined for a case when groupby changed but new data still not fetched\n      // TODO: still need repopulate default value in config modal when column changed\n      if ((firstItem == null ? void 0 : firstItem[0]) !== undefined) {\n        updateDataMask(firstItem);\n      }\n    } else\n    if (isDisabled) {\n      // empty selection if filter is disabled\n      updateDataMask(null);\n    } else\n    {\n      // reset data mask based on filter state\n      updateDataMask(filterState.value);\n    }\n  }, [\n  col,\n  isDisabled,\n  defaultToFirstItem,\n  enableEmptyFilter,\n  inverseSelection,\n  updateDataMask,\n  data,\n  groupby,\n  JSON.stringify(filterState.value)]);\n\n  useEffect(() => {\n    setDataMask(dataMask);\n  }, [JSON.stringify(dataMask)]);\n  return ___EmotionJSX(FilterPluginStyle, { height: height, width: width },\n  ___EmotionJSX(StyledFormItem, { validateStatus: filterState.validateStatus, extra: formItemExtra },\n  ___EmotionJSX(Select, { allowClear: true, allowNewOptions: true, allowSelectAll: !searchAllOptions\n    // @ts-ignore\n    , value: filterState.value || [], disabled: isDisabled, getPopupContainer: showOverflow ?\n    () => (parentRef == null ? void 0 : parentRef.current) || document.body :\n    (trigger) => (trigger == null ? void 0 : trigger.parentNode) || document.body, showSearch: showSearch, mode: multiSelect ? 'multiple' : 'single', placeholder: placeholderText, onSearch: searchWrapper, onSelect: clearSuggestionSearch, onBlur: handleBlur, onFocus: setFocusedFilter, onMouseEnter: setHoveredFilter, onMouseLeave: unsetHoveredFilter\n    // @ts-ignore\n    , onChange: handleChange, ref: inputRef, loading: isRefreshing, oneLine: filterBarOrientation === FilterBarOrientation.HORIZONTAL, invertSelection: inverseSelection\n    // @ts-ignore\n    , options: options, sortComparator: sortComparator, onDropdownVisibleChange: setFilterActive })));\n\n\n}__signature__(PluginFilterSelect, \"useMemo{groupby}\\nuseState{[initialColtypeMap](coltypeMap)}\\nuseImmerReducer{[dataMask, dispatchDataMask]}\\nuseMemo{labelFormatter}\\nuseCallback{updateDataMask}\\nuseCallback{debouncedOwnStateFunc}\\nuseCallback{searchWrapper}\\nuseCallback{clearSuggestionSearch}\\nuseCallback{handleBlur}\\nuseCallback{handleChange}\\nuseMemo{formItemExtra}\\nuseMemo{options}\\nuseCallback{sortComparator}\\nuseEffect{}\\nuseEffect{}\", () => [useImmerReducer]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(reducer, \"reducer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/filters/components/Select/SelectFilterPlugin.tsx\");reactHotLoader.register(PluginFilterSelect, \"PluginFilterSelect\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/filters/components/Select/SelectFilterPlugin.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useMemo","useState","AppSection","ensureIsArray","getColumnLabel","smartDateDetailedFormatter","t","tn","debounce","useImmerReducer","Select","SLOW_DEBOUNCE","propertyComparator","FilterBarOrientation","FilterPluginStyle","StatusMessage","StyledFormItem","getDataRecordFormatter","getSelectExtraFormData","reducer","draft","action","type","ownState","extraFormData","__cache","filterState","PluginFilterSelect","props","coltypeMap","data","formData","height","isRefreshing","width","setDataMask","setHoveredFilter","unsetHoveredFilter","setFocusedFilter","unsetFocusedFilter","setFilterActive","appSection","showOverflow","parentRef","inputRef","filterBarOrientation","enableEmptyFilter","multiSelect","showSearch","inverseSelection","defaultToFirstItem","searchAllOptions","groupby","map","col","initialColtypeMap","dataMask","dispatchDataMask","datatype","labelFormatter","timeFormatter","updateDataMask","values","emptyFilter","length","suffix","label","value","join","undefined","FILTER_CONFIG_MODAL","JSON","stringify","isDisabled","debouncedOwnStateFunc","val","search","searchWrapper","clearSuggestionSearch","handleBlur","handleChange","placeholderText","formItemExtra","validateMessage","validateStatus","options","allOptions","uniqueOptions","selectOptions","forEach","row","push","sortComparator","a","b","labelComparator","sortAscending","firstItem","current","document","body","trigger","parentNode","HORIZONTAL"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/filters/components/Select/SelectFilterPlugin.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-param-reassign */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport {\n  AppSection,\n  DataMask,\n  DataRecordValue,\n  ensureIsArray,\n  ExtraFormData,\n  GenericDataType,\n  getColumnLabel,\n  JsonObject,\n  smartDateDetailedFormatter,\n  t,\n  tn,\n} from '@superset-ui/core';\nimport { LabeledValue as AntdLabeledValue } from 'antd/lib/select';\nimport debounce from 'lodash/debounce';\nimport { useImmerReducer } from 'use-immer';\nimport { Select } from 'src/components';\nimport { SLOW_DEBOUNCE } from 'src/constants';\nimport { propertyComparator } from 'src/components/Select/utils';\nimport { FilterBarOrientation } from 'src/dashboard/types';\nimport { uniqWith, isEqual } from 'lodash';\nimport { PluginFilterSelectProps, SelectValue } from './types';\nimport { FilterPluginStyle, StatusMessage, StyledFormItem } from '../common';\nimport { getDataRecordFormatter, getSelectExtraFormData } from '../../utils';\n\ntype DataMaskAction =\n  | { type: 'ownState'; ownState: JsonObject }\n  | {\n      type: 'filterState';\n      __cache: JsonObject;\n      extraFormData: ExtraFormData;\n      filterState: { value: SelectValue; label?: string };\n    };\n\nfunction reducer(\n  draft: DataMask & { __cache?: JsonObject },\n  action: DataMaskAction,\n) {\n  switch (action.type) {\n    case 'ownState':\n      draft.ownState = {\n        ...draft.ownState,\n        ...action.ownState,\n      };\n      return draft;\n    case 'filterState':\n      draft.extraFormData = action.extraFormData;\n      // eslint-disable-next-line no-underscore-dangle\n      draft.__cache = action.__cache;\n      draft.filterState = { ...draft.filterState, ...action.filterState };\n      return draft;\n    default:\n      return draft;\n  }\n}\n\nexport default function PluginFilterSelect(props: PluginFilterSelectProps) {\n  const {\n    coltypeMap,\n    data,\n    filterState,\n    formData,\n    height,\n    isRefreshing,\n    width,\n    setDataMask,\n    setHoveredFilter,\n    unsetHoveredFilter,\n    setFocusedFilter,\n    unsetFocusedFilter,\n    setFilterActive,\n    appSection,\n    showOverflow,\n    parentRef,\n    inputRef,\n    filterBarOrientation,\n  } = props;\n  const {\n    enableEmptyFilter,\n    multiSelect,\n    showSearch,\n    inverseSelection,\n    defaultToFirstItem,\n    searchAllOptions,\n  } = formData;\n  const groupby = useMemo(\n    () => ensureIsArray(formData.groupby).map(getColumnLabel),\n    [formData.groupby],\n  );\n  const [col] = groupby;\n  const [initialColtypeMap] = useState(coltypeMap);\n  const [dataMask, dispatchDataMask] = useImmerReducer(reducer, {\n    extraFormData: {},\n    filterState,\n  });\n  const datatype: GenericDataType = coltypeMap[col];\n  const labelFormatter = useMemo(\n    () =>\n      getDataRecordFormatter({\n        timeFormatter: smartDateDetailedFormatter,\n      }),\n    [],\n  );\n\n  const updateDataMask = useCallback(\n    (values: SelectValue) => {\n      const emptyFilter =\n        enableEmptyFilter && !inverseSelection && !values?.length;\n\n      const suffix = inverseSelection && values?.length ? t(' (excluded)') : '';\n      dispatchDataMask({\n        type: 'filterState',\n        __cache: filterState,\n        extraFormData: getSelectExtraFormData(\n          col,\n          values,\n          emptyFilter,\n          inverseSelection,\n        ),\n        filterState: {\n          ...filterState,\n          label: values?.length\n            ? `${(values || [])\n                .map(value => labelFormatter(value, datatype))\n                .join(', ')}${suffix}`\n            : undefined,\n          value:\n            appSection === AppSection.FILTER_CONFIG_MODAL && defaultToFirstItem\n              ? undefined\n              : values,\n        },\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      appSection,\n      col,\n      datatype,\n      defaultToFirstItem,\n      dispatchDataMask,\n      enableEmptyFilter,\n      inverseSelection,\n      JSON.stringify(filterState),\n      labelFormatter,\n    ],\n  );\n\n  const isDisabled =\n    appSection === AppSection.FILTER_CONFIG_MODAL && defaultToFirstItem;\n\n  const debouncedOwnStateFunc = useCallback(\n    debounce((val: string) => {\n      dispatchDataMask({\n        type: 'ownState',\n        ownState: {\n          coltypeMap: initialColtypeMap,\n          search: val,\n        },\n      });\n    }, SLOW_DEBOUNCE),\n    [],\n  );\n\n  const searchWrapper = useCallback(\n    (val: string) => {\n      if (searchAllOptions) {\n        debouncedOwnStateFunc(val);\n      }\n    },\n    [debouncedOwnStateFunc, searchAllOptions],\n  );\n\n  const clearSuggestionSearch = useCallback(() => {\n    if (searchAllOptions) {\n      dispatchDataMask({\n        type: 'ownState',\n        ownState: {\n          coltypeMap: initialColtypeMap,\n          search: null,\n        },\n      });\n    }\n  }, [dispatchDataMask, initialColtypeMap, searchAllOptions]);\n\n  const handleBlur = useCallback(() => {\n    clearSuggestionSearch();\n    unsetFocusedFilter();\n  }, [clearSuggestionSearch, unsetFocusedFilter]);\n\n  const handleChange = useCallback(\n    (value?: SelectValue | number | string) => {\n      const values = value === null ? [null] : ensureIsArray(value);\n\n      if (values.length === 0) {\n        updateDataMask(null);\n      } else {\n        updateDataMask(values);\n      }\n    },\n    [updateDataMask],\n  );\n\n  const placeholderText =\n    data.length === 0\n      ? t('No data')\n      : tn('%s option', '%s options', data.length, data.length);\n\n  const formItemExtra = useMemo(() => {\n    if (filterState.validateMessage) {\n      return (\n        <StatusMessage status={filterState.validateStatus}>\n          {filterState.validateMessage}\n        </StatusMessage>\n      );\n    }\n    return undefined;\n  }, [filterState.validateMessage, filterState.validateStatus]);\n\n  const options = useMemo(() => {\n    const allOptions = [...data];\n    const uniqueOptions = uniqWith(allOptions, isEqual);\n    const selectOptions: { label: string; value: DataRecordValue }[] = [];\n    uniqueOptions.forEach(row => {\n      const [value] = groupby.map(col => row[col]);\n      selectOptions.push({\n        label: labelFormatter(value, datatype),\n        value,\n      });\n    });\n    return selectOptions;\n  }, [data, datatype, groupby, labelFormatter]);\n\n  const sortComparator = useCallback(\n    (a: AntdLabeledValue, b: AntdLabeledValue) => {\n      const labelComparator = propertyComparator('label');\n      if (formData.sortAscending) {\n        return labelComparator(a, b);\n      }\n      return labelComparator(b, a);\n    },\n    [formData.sortAscending],\n  );\n\n  useEffect(() => {\n    if (defaultToFirstItem && filterState.value === undefined) {\n      // initialize to first value if set to default to first item\n      const firstItem: SelectValue = data[0]\n        ? (groupby.map(col => data[0][col]) as string[])\n        : null;\n      // firstItem[0] !== undefined for a case when groupby changed but new data still not fetched\n      // TODO: still need repopulate default value in config modal when column changed\n      if (firstItem?.[0] !== undefined) {\n        updateDataMask(firstItem);\n      }\n    } else if (isDisabled) {\n      // empty selection if filter is disabled\n      updateDataMask(null);\n    } else {\n      // reset data mask based on filter state\n      updateDataMask(filterState.value);\n    }\n  }, [\n    col,\n    isDisabled,\n    defaultToFirstItem,\n    enableEmptyFilter,\n    inverseSelection,\n    updateDataMask,\n    data,\n    groupby,\n    JSON.stringify(filterState.value),\n  ]);\n\n  useEffect(() => {\n    setDataMask(dataMask);\n  }, [JSON.stringify(dataMask)]);\n\n  return (\n    <FilterPluginStyle height={height} width={width}>\n      <StyledFormItem\n        validateStatus={filterState.validateStatus}\n        extra={formItemExtra}\n      >\n        <Select\n          allowClear\n          allowNewOptions\n          allowSelectAll={!searchAllOptions}\n          // @ts-ignore\n          value={filterState.value || []}\n          disabled={isDisabled}\n          getPopupContainer={\n            showOverflow\n              ? () => (parentRef?.current as HTMLElement) || document.body\n              : (trigger: HTMLElement) =>\n                  (trigger?.parentNode as HTMLElement) || document.body\n          }\n          showSearch={showSearch}\n          mode={multiSelect ? 'multiple' : 'single'}\n          placeholder={placeholderText}\n          onSearch={searchWrapper}\n          onSelect={clearSuggestionSearch}\n          onBlur={handleBlur}\n          onFocus={setFocusedFilter}\n          onMouseEnter={setHoveredFilter}\n          onMouseLeave={unsetHoveredFilter}\n          // @ts-ignore\n          onChange={handleChange}\n          ref={inputRef}\n          loading={isRefreshing}\n          oneLine={filterBarOrientation === FilterBarOrientation.HORIZONTAL}\n          invertSelection={inverseSelection}\n          // @ts-ignore\n          options={options}\n          sortComparator={sortComparator}\n          onDropdownVisibleChange={setFilterActive}\n        />\n      </StyledFormItem>\n    </FilterPluginStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}