{"ast":null,"code":"import { css as _css } from \"@emotion/react\";import _isEmpty from \"lodash/isEmpty\";var _bootstrapData$common, _bootstrapData$common2;function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";} /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, {\nuseState,\nuseEffect,\nuseMemo,\nuseRef,\nuseCallback } from\n'react';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\nimport { CSSTransition } from 'react-transition-group';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Split from 'react-split';\nimport {\ncss,\nFeatureFlag,\nisFeatureEnabled,\nstyled,\nt,\nuseTheme,\ngetExtensionsRegistry } from\n'@superset-ui/core';\nimport debounce from 'lodash/debounce';\nimport throttle from 'lodash/throttle';\nimport Modal from 'src/components/Modal';\nimport Mousetrap from 'mousetrap';\nimport Button from 'src/components/Button';\nimport Timer from 'src/components/Timer';\nimport ResizableSidebar from 'src/components/ResizableSidebar';\nimport { AntdDropdown, AntdSwitch } from 'src/components';\nimport { Input } from 'src/components/Input';\nimport { Menu } from 'src/components/Menu';\nimport Icons from 'src/components/Icons';\nimport { detectOS } from 'src/utils/common';\nimport {\naddNewQueryEditor,\nCtasEnum,\nestimateQueryCost,\npersistEditorHeight,\npostStopQuery,\nqueryEditorSetAutorun,\nqueryEditorSetSql,\nqueryEditorSetAndSaveSql,\nqueryEditorSetTemplateParams,\nrunQueryFromSqlEditor,\nsaveQuery,\naddSavedQueryToTabState,\nscheduleQuery,\nsetActiveSouthPaneTab,\nupdateSavedQuery } from\n'src/SqlLab/actions/sqlLab';\nimport {\nSTATE_TYPE_MAP,\nSQL_EDITOR_GUTTER_HEIGHT,\nSQL_EDITOR_GUTTER_MARGIN,\nSQL_TOOLBAR_HEIGHT,\nSQL_EDITOR_LEFTBAR_WIDTH,\nSQL_EDITOR_PADDING,\nINITIAL_NORTH_PERCENT,\nINITIAL_SOUTH_PERCENT,\nSET_QUERY_EDITOR_SQL_DEBOUNCE_MS,\nWINDOW_RESIZE_THROTTLE_MS } from\n'src/SqlLab/constants';\nimport {\ngetItem,\nLocalStorageKeys,\nsetItem } from\n'src/utils/localStorageHelpers';\nimport { EmptyStateBig } from 'src/components/EmptyState';\nimport getBootstrapData from 'src/utils/getBootstrapData';\n\nimport TemplateParamsEditor from '../TemplateParamsEditor';\nimport SouthPane from '../SouthPane';\nimport SaveQuery from '../SaveQuery';\nimport ScheduleQueryButton from '../ScheduleQueryButton';\nimport EstimateQueryCostButton from '../EstimateQueryCostButton';\nimport ShareSqlLabQuery from '../ShareSqlLabQuery';\nimport SqlEditorLeftBar from '../SqlEditorLeftBar';\nimport AceEditorWrapper from '../AceEditorWrapper';\nimport RunQueryActionButton from '../RunQueryActionButton';\nimport QueryLimitSelect from '../QueryLimitSelect';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst bootstrapData = getBootstrapData();\nconst scheduledQueriesConf = bootstrapData == null ? void 0 : (_bootstrapData$common = bootstrapData.common) == null ? void 0 : (_bootstrapData$common2 = _bootstrapData$common.conf) == null ? void 0 : _bootstrapData$common2.SCHEDULED_QUERIES;\n\nconst StyledToolbar = styled.div`\n  padding: ${(_ref) => {let { theme } = _ref;return theme.gridUnit * 2;}}px;\n  background: ${(_ref2) => {let { theme } = _ref2;return theme.colors.grayscale.light5;}};\n  display: flex;\n  justify-content: space-between;\n  border: 1px solid ${(_ref3) => {let { theme } = _ref3;return theme.colors.grayscale.light2;}};\n  border-top: 0;\n\n  form {\n    margin-block-end: 0;\n  }\n\n  .leftItems,\n  .rightItems {\n    display: flex;\n    align-items: center;\n    & > span {\n      margin-right: ${(_ref4) => {let { theme } = _ref4;return theme.gridUnit * 2;}}px;\n      display: inline-block;\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n\n  .limitDropdown {\n    white-space: nowrap;\n  }\n`;\n\nconst StyledSidebar = styled.div`\n  flex: 0 0 ${(_ref5) => {let { width } = _ref5;return width;}}px;\n  width: ${(_ref6) => {let { width } = _ref6;return width;}}px;\n  padding: ${(_ref7) => {let { theme, hide } = _ref7;return hide ? 0 : theme.gridUnit * 2.5;}}px;\n  border-right: 1px solid\n    ${(_ref8) => {let { theme, hide } = _ref8;return (\n    hide ? 'transparent' : theme.colors.grayscale.light2);}};\n`;\n\nconst StyledSqlEditor = styled.div`\n  ${(_ref9) => {let { theme } = _ref9;return css`\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n\n    .schemaPane {\n      transition: transform ${theme.transitionTiming}s ease-in-out;\n    }\n\n    .queryPane {\n      flex: 1 1 auto;\n      padding: ${theme.gridUnit * 2}px;\n      overflow-y: auto;\n      overflow-x: scroll;\n    }\n\n    .schemaPane-enter-done,\n    .schemaPane-exit {\n      transform: translateX(0);\n      z-index: 7;\n    }\n\n    .schemaPane-exit-active {\n      transform: translateX(-120%);\n    }\n\n    .schemaPane-enter-active {\n      transform: translateX(0);\n      max-width: ${theme.gridUnit * 75}px;\n    }\n\n    .schemaPane-enter,\n    .schemaPane-exit-done {\n      max-width: 0;\n      transform: translateX(-120%);\n      overflow: hidden;\n    }\n\n    .schemaPane-exit-done + .queryPane {\n      margin-left: 0;\n    }\n\n    .gutter {\n      border-top: 1px solid ${theme.colors.grayscale.light2};\n      border-bottom: 1px solid ${theme.colors.grayscale.light2};\n      width: 3%;\n      margin: ${SQL_EDITOR_GUTTER_MARGIN}px 47%;\n    }\n\n    .gutter.gutter-vertical {\n      cursor: row-resize;\n    }\n  `;}}\n`;\n\nconst propTypes = {\n  tables: PropTypes.array.isRequired,\n  queryEditor: PropTypes.object.isRequired,\n  defaultQueryLimit: PropTypes.number.isRequired,\n  maxRow: PropTypes.number.isRequired,\n  displayLimit: PropTypes.number.isRequired,\n  saveQueryWarning: PropTypes.string,\n  scheduleQueryWarning: PropTypes.string };\n\n\nconst extensionsRegistry = getExtensionsRegistry();var _ref13 = process.env.NODE_ENV === \"production\" ? { name: \"1eoy87d\", styles: \"display:flex;justify-content:space-between\" } : { name: \"1egglng-renderDropdown\", styles: \"display:flex;justify-content:space-between;label:renderDropdown;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\nconst SqlEditor = (_ref10) =>\n\n\n\n\n\n\n\n{let { tables, queryEditor, defaultQueryLimit, maxRow, displayLimit, saveQueryWarning, scheduleQueryWarning = null } = _ref10;\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const { database, latestQuery, hideLeftBar } = useSelector(\n  (_ref11) => {let { sqlLab: { unsavedQueryEditor, databases, queries } } = _ref11;\n    let { dbId, latestQueryId, hideLeftBar } = queryEditor;\n    if (unsavedQueryEditor.id === queryEditor.id) {\n      dbId = unsavedQueryEditor.dbId || dbId;\n      latestQueryId = unsavedQueryEditor.latestQueryId || latestQueryId;\n      hideLeftBar = unsavedQueryEditor.hideLeftBar || hideLeftBar;\n    }\n    return {\n      database: databases[dbId],\n      latestQuery: queries[latestQueryId],\n      hideLeftBar };\n\n  },\n  shallowEqual);\n\n\n  const [height, setHeight] = useState(0);\n  const [autorun, setAutorun] = useState(queryEditor.autorun);\n  const [ctas, setCtas] = useState('');\n  const [northPercent, setNorthPercent] = useState(\n  queryEditor.northPercent || INITIAL_NORTH_PERCENT);\n\n  const [southPercent, setSouthPercent] = useState(\n  queryEditor.southPercent || INITIAL_SOUTH_PERCENT);\n\n  const [autocompleteEnabled, setAutocompleteEnabled] = useState(\n  getItem(LocalStorageKeys.sqllab__is_autocomplete_enabled, true));\n\n  const [showCreateAsModal, setShowCreateAsModal] = useState(false);\n  const [createAs, setCreateAs] = useState('');\n  const [showEmptyState, setShowEmptyState] = useState(false);\n\n  const sqlEditorRef = useRef(null);\n  const northPaneRef = useRef(null);\n\n  const SqlFormExtension = extensionsRegistry.get('sqleditor.extension.form');\n\n  const startQuery = useCallback(\n  function (ctasArg, ctas_method) {if (ctasArg === void 0) {ctasArg = false;}if (ctas_method === void 0) {ctas_method = CtasEnum.TABLE;}\n    if (!database) {\n      return;\n    }\n\n    dispatch(\n    runQueryFromSqlEditor(\n    database,\n    queryEditor,\n    defaultQueryLimit,\n    ctasArg ? ctas : '',\n    ctasArg,\n    ctas_method));\n\n\n    dispatch(setActiveSouthPaneTab('Results'));\n  },\n  [ctas, database, defaultQueryLimit, dispatch, queryEditor]);\n\n\n  const stopQuery = useCallback(() => {\n    if (latestQuery && ['running', 'pending'].indexOf(latestQuery.state) >= 0) {\n      dispatch(postStopQuery(latestQuery));\n    }\n    return false;\n  }, [dispatch, latestQuery]);\n\n  const runQuery = () => {\n    if (database) {\n      startQuery();\n    }\n  };\n\n  useEffect(() => {\n    if (autorun) {\n      setAutorun(false);\n      dispatch(queryEditorSetAutorun(queryEditor, false));\n      startQuery();\n    }\n  }, [autorun, dispatch, queryEditor, startQuery]);\n\n  // One layer of abstraction for easy spying in unit tests\n  const getSqlEditorHeight = () =>\n  sqlEditorRef.current ?\n  sqlEditorRef.current.clientHeight - SQL_EDITOR_PADDING * 2 :\n  0;\n\n  const getHotkeyConfig = useCallback(() => {\n    // Get the user's OS\n    const userOS = detectOS();\n    const base = [\n    {\n      name: 'runQuery1',\n      key: 'ctrl+r',\n      descr: t('Run query'),\n      func: () => {\n        if (queryEditor.sql.trim() !== '') {\n          startQuery();\n        }\n      } },\n\n    {\n      name: 'runQuery2',\n      key: 'ctrl+enter',\n      descr: t('Run query'),\n      func: () => {\n        if (queryEditor.sql.trim() !== '') {\n          startQuery();\n        }\n      } },\n\n    {\n      name: 'runQuery3',\n      key: 'ctrl+shift+enter',\n      descr: t('Run current query'),\n      func: (editor) => {var _editor$find, _editor$find2, _editor$find3, _editor$find3$end, _start, _start2, _start3, _start4;\n        if (!editor.getValue().trim()) {\n          return;\n        }\n        const session = editor.getSession();\n        const cursorPosition = editor.getCursorPosition();\n        const totalLine = session.getLength();\n        const currentRow = editor.getFirstVisibleRow();\n        let end = (_editor$find = editor.find(';', {\n          backwards: false,\n          skipCurrent: true,\n          start: cursorPosition })) == null ? void 0 : _editor$find.\n        end;\n        if (!end || end.row < cursorPosition.row) {\n          end = {\n            row: totalLine + 1,\n            column: 0 };\n\n        }\n        let start = (_editor$find2 = editor.find(';', {\n          backwards: true,\n          skipCurrent: true,\n          start: cursorPosition })) == null ? void 0 : _editor$find2.\n        end;\n        let currentLine = (_editor$find3 = editor.find(';', {\n          backwards: true,\n          skipCurrent: true,\n          start: cursorPosition })) == null ? void 0 : (_editor$find3$end = _editor$find3.\n        end) == null ? void 0 : _editor$find3$end.row;\n        if (\n        !currentLine ||\n        currentLine > cursorPosition.row ||\n        currentLine === cursorPosition.row &&\n        ((_start = start) == null ? void 0 : _start.column) > cursorPosition.column)\n        {\n          currentLine = 0;\n        }\n        let content =\n        currentLine === ((_start2 = start) == null ? void 0 : _start2.row) ?\n        session.getLine(currentLine).slice(start.column).trim() :\n        session.getLine(currentLine).trim();\n        while (!content && currentLine < totalLine) {\n          currentLine += 1;\n          content = session.getLine(currentLine).trim();\n        }\n        if (currentLine !== ((_start3 = start) == null ? void 0 : _start3.row)) {\n          start = { row: currentLine, column: 0 };\n        }\n        editor.selection.setRange({\n          start: (_start4 = start) != null ? _start4 : { row: 0, column: 0 },\n          end });\n\n        startQuery();\n        editor.selection.clearSelection();\n        editor.moveCursorToPosition(cursorPosition);\n        editor.scrollToRow(currentRow);\n      } },\n\n    {\n      name: 'newTab',\n      key: userOS === 'Windows' ? 'ctrl+q' : 'ctrl+t',\n      descr: t('New tab'),\n      func: () => {\n        dispatch(addNewQueryEditor());\n      } },\n\n    {\n      name: 'stopQuery',\n      key: userOS === 'MacOS' ? 'ctrl+x' : 'ctrl+e',\n      descr: t('Stop query'),\n      func: stopQuery }];\n\n\n\n    if (userOS === 'MacOS') {\n      base.push({\n        name: 'previousLine',\n        key: 'ctrl+p',\n        descr: t('Previous Line'),\n        func: (editor) => {\n          editor.navigateUp(1);\n        } });\n\n    }\n\n    return base;\n  }, [dispatch, queryEditor.sql, startQuery, stopQuery]);\n\n  const onBeforeUnload = useEffectEvent((event) => {var _database$extra_json;\n    if (\n    database != null && (_database$extra_json = database.extra_json) != null && _database$extra_json.cancel_query_on_windows_unload &&\n    (latestQuery == null ? void 0 : latestQuery.state) === 'running')\n    {\n      event.preventDefault();\n      stopQuery();\n    }\n  });\n\n  useEffect(() => {\n    // We need to measure the height of the sql editor post render to figure the height of\n    // the south pane so it gets rendered properly\n    setHeight(getSqlEditorHeight());\n    const handleWindowResizeWithThrottle = throttle(\n    () => setHeight(getSqlEditorHeight()),\n    WINDOW_RESIZE_THROTTLE_MS);\n\n\n    window.addEventListener('resize', handleWindowResizeWithThrottle);\n    window.addEventListener('beforeunload', onBeforeUnload);\n\n    return () => {\n      window.removeEventListener('resize', handleWindowResizeWithThrottle);\n      window.removeEventListener('beforeunload', onBeforeUnload);\n    };\n    // TODO: Remove useEffectEvent deps once https://github.com/facebook/react/pull/25881 is released\n  }, [onBeforeUnload]);\n\n  useEffect(() => {\n    if (!database || _isEmpty(database)) {\n      setShowEmptyState(true);\n    }\n  }, [database]);\n\n  useEffect(() => {\n    // setup hotkeys\n    Mousetrap.reset();\n    const hotkeys = getHotkeyConfig();\n    hotkeys.forEach((keyConfig) => {\n      Mousetrap.bind([keyConfig.key], keyConfig.func);\n    });\n  }, [getHotkeyConfig, latestQuery]);\n\n  const onResizeStart = () => {\n    // Set the heights on the ace editor and the ace content area after drag starts\n    // to smooth out the visual transition to the new heights when drag ends\n    document.getElementsByClassName('ace_content')[0].style.height = '100%';\n  };\n\n  const onResizeEnd = (_ref12) => {var _northPaneRef$current;let [northPercent, southPercent] = _ref12;\n    setNorthPercent(northPercent);\n    setSouthPercent(southPercent);\n\n    if ((_northPaneRef$current = northPaneRef.current) != null && _northPaneRef$current.clientHeight) {\n      dispatch(persistEditorHeight(queryEditor, northPercent, southPercent));\n    }\n  };\n\n  const setQueryEditorAndSaveSql = useCallback(\n  (sql) => {\n    dispatch(queryEditorSetAndSaveSql(queryEditor, sql));\n  },\n  [dispatch, queryEditor]);\n\n\n  const setQueryEditorAndSaveSqlWithDebounce = useMemo(\n  () => debounce(setQueryEditorAndSaveSql, SET_QUERY_EDITOR_SQL_DEBOUNCE_MS),\n  [setQueryEditorAndSaveSql]);\n\n\n  const onSqlChanged = (sql) => {\n    dispatch(queryEditorSetSql(queryEditor, sql));\n    setQueryEditorAndSaveSqlWithDebounce(sql);\n  };\n\n  // Return the heights for the ace editor and the south pane as an object\n  // given the height of the sql editor, north pane percent and south pane percent.\n  const getAceEditorAndSouthPaneHeights = (\n  height,\n  northPercent,\n  southPercent) => (\n  {\n    aceEditorHeight:\n    height * northPercent / (theme.gridUnit * 25) - (\n    SQL_EDITOR_GUTTER_HEIGHT / 2 + SQL_EDITOR_GUTTER_MARGIN) -\n    SQL_TOOLBAR_HEIGHT,\n    southPaneHeight:\n    height * southPercent / (theme.gridUnit * 25) - (\n    SQL_EDITOR_GUTTER_HEIGHT / 2 + SQL_EDITOR_GUTTER_MARGIN) });\n\n\n  const getQueryCostEstimate = () => {\n    if (database) {\n      dispatch(estimateQueryCost(queryEditor));\n    }\n  };\n\n  const handleToggleAutocompleteEnabled = () => {\n    setItem(\n    LocalStorageKeys.sqllab__is_autocomplete_enabled,\n    !autocompleteEnabled);\n\n    setAutocompleteEnabled(!autocompleteEnabled);\n  };\n\n  const elementStyle = (dimension, elementSize, gutterSize) => ({\n    [dimension]: `calc(${elementSize}% - ${\n    gutterSize + SQL_EDITOR_GUTTER_MARGIN\n    }px)` });\n\n\n  const createTableAs = () => {\n    startQuery(true, CtasEnum.TABLE);\n    setShowCreateAsModal(false);\n    setCtas('');\n  };\n\n  const createViewAs = () => {\n    startQuery(true, CtasEnum.VIEW);\n    setShowCreateAsModal(false);\n    setCtas('');\n  };\n\n  const ctasChanged = (event) => {\n    setCtas(event.target.value);\n  };\n\n  const renderDropdown = () => {\n    const qe = queryEditor;\n    const successful = (latestQuery == null ? void 0 : latestQuery.state) === 'success';\n    const scheduleToolTip = successful ?\n    t('Schedule the query periodically') :\n    t('You must run the query successfully first');\n    return (\n      ___EmotionJSX(Menu, { css: /*#__PURE__*/_css({ width: theme.gridUnit * 44 }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:renderDropdown;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") },\n      ___EmotionJSX(Menu.Item, { css: _ref13 },\n      ' ',\n      ___EmotionJSX(\"span\", null, t('Autocomplete')), ' ',\n      ___EmotionJSX(AntdSwitch, {\n        checked: autocompleteEnabled,\n        onChange: handleToggleAutocompleteEnabled,\n        name: \"autocomplete-switch\" }),\n      ' '),\n\n      isFeatureEnabled(FeatureFlag.ENABLE_TEMPLATE_PROCESSING) &&\n      ___EmotionJSX(Menu.Item, null,\n      ___EmotionJSX(TemplateParamsEditor, {\n        language: \"json\",\n        onChange: (params) => {\n          dispatch(queryEditorSetTemplateParams(qe, params));\n        },\n        queryEditorId: qe.id })),\n\n\n\n      !_isEmpty(scheduledQueriesConf) &&\n      ___EmotionJSX(Menu.Item, null,\n      ___EmotionJSX(ScheduleQueryButton, {\n        defaultLabel: qe.name,\n        sql: qe.sql,\n        onSchedule: (query) => dispatch(scheduleQuery(query)),\n        schema: qe.schema,\n        dbId: qe.dbId,\n        scheduleQueryWarning: scheduleQueryWarning,\n        tooltip: scheduleToolTip,\n        disabled: !successful }))));\n\n\n\n\n\n  };\n\n  const onSaveQuery = async (query, clientId) => {\n    const savedQuery = await dispatch(saveQuery(query, clientId));\n    dispatch(addSavedQueryToTabState(queryEditor, savedQuery));\n  };\n\n  const renderEditorBottomBar = () => {var _latestQuery$results;\n    const { allow_ctas: allowCTAS, allow_cvas: allowCVAS } = database || {};\n\n    const showMenu = allowCTAS || allowCVAS;\n    const runMenuBtn =\n    ___EmotionJSX(Menu, null,\n    allowCTAS &&\n    ___EmotionJSX(Menu.Item, {\n      onClick: () => {\n        setShowCreateAsModal(true);\n        setCreateAs(CtasEnum.TABLE);\n      },\n      key: \"1\" },\n\n    t('CREATE TABLE AS')),\n\n\n    allowCVAS &&\n    ___EmotionJSX(Menu.Item, {\n      onClick: () => {\n        setShowCreateAsModal(true);\n        setCreateAs(CtasEnum.VIEW);\n      },\n      key: \"2\" },\n\n    t('CREATE VIEW AS')));\n\n\n\n\n\n    return (\n      ___EmotionJSX(StyledToolbar, { className: \"sql-toolbar\", id: \"js-sql-toolbar\" },\n      ___EmotionJSX(\"div\", { className: \"leftItems\" },\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(RunQueryActionButton, {\n        allowAsync: database ? database.allow_run_async : false,\n        queryEditorId: queryEditor.id,\n        queryState: latestQuery == null ? void 0 : latestQuery.state,\n        runQuery: runQuery,\n        stopQuery: stopQuery,\n        overlayCreateAsMenu: showMenu ? runMenuBtn : null })),\n\n\n      isFeatureEnabled(FeatureFlag.ESTIMATE_QUERY_COST) && (\n      database == null ? void 0 : database.allows_cost_estimate) &&\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(EstimateQueryCostButton, {\n        getEstimate: getQueryCostEstimate,\n        queryEditorId: queryEditor.id,\n        tooltip: t('Estimate the cost before running a query') })),\n\n\n\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(QueryLimitSelect, {\n        queryEditorId: queryEditor.id,\n        maxRow: maxRow,\n        defaultQueryLimit: defaultQueryLimit })),\n\n\n      latestQuery &&\n      ___EmotionJSX(Timer, {\n        startTime: latestQuery.startDttm,\n        endTime: latestQuery.endDttm,\n        state: STATE_TYPE_MAP[latestQuery.state],\n        isRunning: latestQuery.state === 'running' })),\n\n\n\n      ___EmotionJSX(\"div\", { className: \"rightItems\" },\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(SaveQuery, {\n        queryEditorId: queryEditor.id,\n        columns: (latestQuery == null ? void 0 : (_latestQuery$results = latestQuery.results) == null ? void 0 : _latestQuery$results.columns) || [],\n        onSave: onSaveQuery,\n        onUpdate: (query, remoteId, id) =>\n        dispatch(updateSavedQuery(query, remoteId, id)),\n\n        saveQueryWarning: saveQueryWarning,\n        database: database })),\n\n\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(ShareSqlLabQuery, { queryEditorId: queryEditor.id })),\n\n      ___EmotionJSX(AntdDropdown, { overlay: renderDropdown(), trigger: \"click\" },\n      ___EmotionJSX(Icons.MoreHoriz, { iconColor: theme.colors.grayscale.base })))));\n\n\n\n\n  };\n\n  const queryPane = () => {\n    const hotkeys = getHotkeyConfig();\n    const { aceEditorHeight, southPaneHeight } =\n    getAceEditorAndSouthPaneHeights(height, northPercent, southPercent);\n    return (\n      ___EmotionJSX(Split, {\n        expandToMin: true,\n        className: \"queryPane\",\n        sizes: [northPercent, southPercent],\n        elementStyle: elementStyle,\n        minSize: 200,\n        direction: \"vertical\",\n        gutterSize: SQL_EDITOR_GUTTER_HEIGHT,\n        onDragStart: onResizeStart,\n        onDragEnd: onResizeEnd },\n\n      ___EmotionJSX(\"div\", { ref: northPaneRef, className: \"north-pane\" },\n      SqlFormExtension &&\n      ___EmotionJSX(SqlFormExtension, {\n        queryEditorId: queryEditor.id,\n        setQueryEditorAndSaveSqlWithDebounce:\n        setQueryEditorAndSaveSqlWithDebounce,\n\n        startQuery: startQuery }),\n\n\n      ___EmotionJSX(AceEditorWrapper, {\n        autocomplete: autocompleteEnabled,\n        onBlur: setQueryEditorAndSaveSql,\n        onChange: onSqlChanged,\n        queryEditorId: queryEditor.id,\n        height: `${aceEditorHeight}px`,\n        hotkeys: hotkeys }),\n\n      renderEditorBottomBar(hotkeys)),\n\n      ___EmotionJSX(SouthPane, {\n        queryEditorId: queryEditor.id,\n        latestQueryId: latestQuery == null ? void 0 : latestQuery.id,\n        height: southPaneHeight,\n        displayLimit: displayLimit,\n        defaultQueryLimit: defaultQueryLimit })));\n\n\n\n  };\n\n  const createViewModalTitle =\n  createAs === CtasEnum.VIEW ? 'CREATE VIEW AS' : 'CREATE TABLE AS';\n\n  const createModalPlaceHolder =\n  createAs === CtasEnum.VIEW ?\n  t('Specify name to CREATE VIEW AS schema in: public') :\n  t('Specify name to CREATE TABLE AS schema in: public');\n\n  const leftBarStateClass = hideLeftBar ?\n  'schemaPane-exit-done' :\n  'schemaPane-enter-done';\n  return (\n    ___EmotionJSX(StyledSqlEditor, { ref: sqlEditorRef, className: \"SqlEditor\" },\n    ___EmotionJSX(CSSTransition, { classNames: \"schemaPane\", in: !hideLeftBar, timeout: 300 },\n    ___EmotionJSX(ResizableSidebar, {\n      id: `sqllab:${queryEditor.id}`,\n      minWidth: SQL_EDITOR_LEFTBAR_WIDTH,\n      initialWidth: SQL_EDITOR_LEFTBAR_WIDTH,\n      enable: !hideLeftBar },\n\n    (adjustedWidth) =>\n    ___EmotionJSX(StyledSidebar, {\n      className: `schemaPane ${leftBarStateClass}`,\n      width: adjustedWidth,\n      hide: hideLeftBar },\n\n    ___EmotionJSX(SqlEditorLeftBar, {\n      database: database,\n      queryEditorId: queryEditor.id,\n      tables: tables,\n      setEmptyState: (bool) => setShowEmptyState(bool) })))),\n\n\n\n\n\n    showEmptyState ?\n    ___EmotionJSX(EmptyStateBig, {\n      image: \"vector.svg\",\n      title: t('Select a database to write a query'),\n      description: t(\n      'Choose one of the available databases from the panel on the left.') }) :\n\n\n\n    queryPane(),\n\n    ___EmotionJSX(Modal, {\n      visible: showCreateAsModal,\n      title: t(createViewModalTitle),\n      onHide: () => setShowCreateAsModal(false),\n      footer:\n      ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(Button, { onClick: () => setShowCreateAsModal(false) },\n      t('Cancel')),\n\n      createAs === CtasEnum.TABLE &&\n      ___EmotionJSX(Button, {\n        buttonStyle: \"primary\",\n        disabled: ctas.length === 0,\n        onClick: createTableAs },\n\n      t('Create')),\n\n\n      createAs === CtasEnum.VIEW &&\n      ___EmotionJSX(Button, {\n        buttonStyle: \"primary\",\n        disabled: ctas.length === 0,\n        onClick: createViewAs },\n\n      t('Create'))) },\n\n\n\n\n\n    ___EmotionJSX(\"span\", null, t('Name')),\n    ___EmotionJSX(Input, { placeholder: createModalPlaceHolder, onChange: ctasChanged }))));\n\n\n\n};\n\nSqlEditor.propTypes = propTypes;\n\nexport default SqlEditor;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","useCallback","useEffectEvent","CSSTransition","shallowEqual","useDispatch","useSelector","PropTypes","Split","css","FeatureFlag","isFeatureEnabled","styled","t","useTheme","getExtensionsRegistry","debounce","throttle","Modal","Mousetrap","Button","Timer","ResizableSidebar","AntdDropdown","AntdSwitch","Input","Menu","Icons","detectOS","addNewQueryEditor","CtasEnum","estimateQueryCost","persistEditorHeight","postStopQuery","queryEditorSetAutorun","queryEditorSetSql","queryEditorSetAndSaveSql","queryEditorSetTemplateParams","runQueryFromSqlEditor","saveQuery","addSavedQueryToTabState","scheduleQuery","setActiveSouthPaneTab","updateSavedQuery","STATE_TYPE_MAP","SQL_EDITOR_GUTTER_HEIGHT","SQL_EDITOR_GUTTER_MARGIN","SQL_TOOLBAR_HEIGHT","SQL_EDITOR_LEFTBAR_WIDTH","SQL_EDITOR_PADDING","INITIAL_NORTH_PERCENT","INITIAL_SOUTH_PERCENT","SET_QUERY_EDITOR_SQL_DEBOUNCE_MS","WINDOW_RESIZE_THROTTLE_MS","getItem","LocalStorageKeys","setItem","EmptyStateBig","getBootstrapData","TemplateParamsEditor","SouthPane","SaveQuery","ScheduleQueryButton","EstimateQueryCostButton","ShareSqlLabQuery","SqlEditorLeftBar","AceEditorWrapper","RunQueryActionButton","QueryLimitSelect","bootstrapData","scheduledQueriesConf","common","conf","SCHEDULED_QUERIES","StyledToolbar","div","theme","gridUnit","colors","grayscale","light5","light2","StyledSidebar","width","hide","StyledSqlEditor","transitionTiming","propTypes","tables","array","isRequired","queryEditor","object","defaultQueryLimit","number","maxRow","displayLimit","saveQueryWarning","string","scheduleQueryWarning","extensionsRegistry","SqlEditor","dispatch","database","latestQuery","hideLeftBar","sqlLab","unsavedQueryEditor","databases","queries","dbId","latestQueryId","id","height","setHeight","autorun","setAutorun","ctas","setCtas","northPercent","setNorthPercent","southPercent","setSouthPercent","autocompleteEnabled","setAutocompleteEnabled","sqllab__is_autocomplete_enabled","showCreateAsModal","setShowCreateAsModal","createAs","setCreateAs","showEmptyState","setShowEmptyState","sqlEditorRef","northPaneRef","SqlFormExtension","get","startQuery","ctasArg","ctas_method","TABLE","stopQuery","indexOf","state","runQuery","getSqlEditorHeight","current","clientHeight","getHotkeyConfig","userOS","base","name","key","descr","func","sql","trim","editor","getValue","session","getSession","cursorPosition","getCursorPosition","totalLine","getLength","currentRow","getFirstVisibleRow","end","find","backwards","skipCurrent","start","row","column","currentLine","content","getLine","slice","selection","setRange","clearSelection","moveCursorToPosition","scrollToRow","push","navigateUp","onBeforeUnload","event","extra_json","cancel_query_on_windows_unload","preventDefault","handleWindowResizeWithThrottle","window","addEventListener","removeEventListener","reset","hotkeys","forEach","keyConfig","bind","onResizeStart","document","getElementsByClassName","style","onResizeEnd","setQueryEditorAndSaveSql","setQueryEditorAndSaveSqlWithDebounce","onSqlChanged","getAceEditorAndSouthPaneHeights","aceEditorHeight","southPaneHeight","getQueryCostEstimate","handleToggleAutocompleteEnabled","elementStyle","dimension","elementSize","gutterSize","createTableAs","createViewAs","VIEW","ctasChanged","target","value","renderDropdown","qe","successful","scheduleToolTip","ENABLE_TEMPLATE_PROCESSING","params","query","schema","onSaveQuery","clientId","savedQuery","renderEditorBottomBar","allow_ctas","allowCTAS","allow_cvas","allowCVAS","showMenu","runMenuBtn","allow_run_async","ESTIMATE_QUERY_COST","allows_cost_estimate","startDttm","endDttm","results","columns","remoteId","queryPane","createViewModalTitle","createModalPlaceHolder","leftBarStateClass","adjustedWidth","bool","length"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/SqlLab/components/SqlEditor/index.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, {\n  useState,\n  useEffect,\n  useMemo,\n  useRef,\n  useCallback,\n} from 'react';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\nimport { CSSTransition } from 'react-transition-group';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Split from 'react-split';\nimport {\n  css,\n  FeatureFlag,\n  isFeatureEnabled,\n  styled,\n  t,\n  useTheme,\n  getExtensionsRegistry,\n} from '@superset-ui/core';\nimport debounce from 'lodash/debounce';\nimport throttle from 'lodash/throttle';\nimport Modal from 'src/components/Modal';\nimport Mousetrap from 'mousetrap';\nimport Button from 'src/components/Button';\nimport Timer from 'src/components/Timer';\nimport ResizableSidebar from 'src/components/ResizableSidebar';\nimport { AntdDropdown, AntdSwitch } from 'src/components';\nimport { Input } from 'src/components/Input';\nimport { Menu } from 'src/components/Menu';\nimport Icons from 'src/components/Icons';\nimport { detectOS } from 'src/utils/common';\nimport {\n  addNewQueryEditor,\n  CtasEnum,\n  estimateQueryCost,\n  persistEditorHeight,\n  postStopQuery,\n  queryEditorSetAutorun,\n  queryEditorSetSql,\n  queryEditorSetAndSaveSql,\n  queryEditorSetTemplateParams,\n  runQueryFromSqlEditor,\n  saveQuery,\n  addSavedQueryToTabState,\n  scheduleQuery,\n  setActiveSouthPaneTab,\n  updateSavedQuery,\n} from 'src/SqlLab/actions/sqlLab';\nimport {\n  STATE_TYPE_MAP,\n  SQL_EDITOR_GUTTER_HEIGHT,\n  SQL_EDITOR_GUTTER_MARGIN,\n  SQL_TOOLBAR_HEIGHT,\n  SQL_EDITOR_LEFTBAR_WIDTH,\n  SQL_EDITOR_PADDING,\n  INITIAL_NORTH_PERCENT,\n  INITIAL_SOUTH_PERCENT,\n  SET_QUERY_EDITOR_SQL_DEBOUNCE_MS,\n  WINDOW_RESIZE_THROTTLE_MS,\n} from 'src/SqlLab/constants';\nimport {\n  getItem,\n  LocalStorageKeys,\n  setItem,\n} from 'src/utils/localStorageHelpers';\nimport { EmptyStateBig } from 'src/components/EmptyState';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport { isEmpty } from 'lodash';\nimport TemplateParamsEditor from '../TemplateParamsEditor';\nimport SouthPane from '../SouthPane';\nimport SaveQuery from '../SaveQuery';\nimport ScheduleQueryButton from '../ScheduleQueryButton';\nimport EstimateQueryCostButton from '../EstimateQueryCostButton';\nimport ShareSqlLabQuery from '../ShareSqlLabQuery';\nimport SqlEditorLeftBar from '../SqlEditorLeftBar';\nimport AceEditorWrapper from '../AceEditorWrapper';\nimport RunQueryActionButton from '../RunQueryActionButton';\nimport QueryLimitSelect from '../QueryLimitSelect';\n\nconst bootstrapData = getBootstrapData();\nconst scheduledQueriesConf = bootstrapData?.common?.conf?.SCHEDULED_QUERIES;\n\nconst StyledToolbar = styled.div`\n  padding: ${({ theme }) => theme.gridUnit * 2}px;\n  background: ${({ theme }) => theme.colors.grayscale.light5};\n  display: flex;\n  justify-content: space-between;\n  border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  border-top: 0;\n\n  form {\n    margin-block-end: 0;\n  }\n\n  .leftItems,\n  .rightItems {\n    display: flex;\n    align-items: center;\n    & > span {\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n      display: inline-block;\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n\n  .limitDropdown {\n    white-space: nowrap;\n  }\n`;\n\nconst StyledSidebar = styled.div`\n  flex: 0 0 ${({ width }) => width}px;\n  width: ${({ width }) => width}px;\n  padding: ${({ theme, hide }) => (hide ? 0 : theme.gridUnit * 2.5)}px;\n  border-right: 1px solid\n    ${({ theme, hide }) =>\n      hide ? 'transparent' : theme.colors.grayscale.light2};\n`;\n\nconst StyledSqlEditor = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n\n    .schemaPane {\n      transition: transform ${theme.transitionTiming}s ease-in-out;\n    }\n\n    .queryPane {\n      flex: 1 1 auto;\n      padding: ${theme.gridUnit * 2}px;\n      overflow-y: auto;\n      overflow-x: scroll;\n    }\n\n    .schemaPane-enter-done,\n    .schemaPane-exit {\n      transform: translateX(0);\n      z-index: 7;\n    }\n\n    .schemaPane-exit-active {\n      transform: translateX(-120%);\n    }\n\n    .schemaPane-enter-active {\n      transform: translateX(0);\n      max-width: ${theme.gridUnit * 75}px;\n    }\n\n    .schemaPane-enter,\n    .schemaPane-exit-done {\n      max-width: 0;\n      transform: translateX(-120%);\n      overflow: hidden;\n    }\n\n    .schemaPane-exit-done + .queryPane {\n      margin-left: 0;\n    }\n\n    .gutter {\n      border-top: 1px solid ${theme.colors.grayscale.light2};\n      border-bottom: 1px solid ${theme.colors.grayscale.light2};\n      width: 3%;\n      margin: ${SQL_EDITOR_GUTTER_MARGIN}px 47%;\n    }\n\n    .gutter.gutter-vertical {\n      cursor: row-resize;\n    }\n  `}\n`;\n\nconst propTypes = {\n  tables: PropTypes.array.isRequired,\n  queryEditor: PropTypes.object.isRequired,\n  defaultQueryLimit: PropTypes.number.isRequired,\n  maxRow: PropTypes.number.isRequired,\n  displayLimit: PropTypes.number.isRequired,\n  saveQueryWarning: PropTypes.string,\n  scheduleQueryWarning: PropTypes.string,\n};\n\nconst extensionsRegistry = getExtensionsRegistry();\n\nconst SqlEditor = ({\n  tables,\n  queryEditor,\n  defaultQueryLimit,\n  maxRow,\n  displayLimit,\n  saveQueryWarning,\n  scheduleQueryWarning = null,\n}) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const { database, latestQuery, hideLeftBar } = useSelector(\n    ({ sqlLab: { unsavedQueryEditor, databases, queries } }) => {\n      let { dbId, latestQueryId, hideLeftBar } = queryEditor;\n      if (unsavedQueryEditor.id === queryEditor.id) {\n        dbId = unsavedQueryEditor.dbId || dbId;\n        latestQueryId = unsavedQueryEditor.latestQueryId || latestQueryId;\n        hideLeftBar = unsavedQueryEditor.hideLeftBar || hideLeftBar;\n      }\n      return {\n        database: databases[dbId],\n        latestQuery: queries[latestQueryId],\n        hideLeftBar,\n      };\n    },\n    shallowEqual,\n  );\n\n  const [height, setHeight] = useState(0);\n  const [autorun, setAutorun] = useState(queryEditor.autorun);\n  const [ctas, setCtas] = useState('');\n  const [northPercent, setNorthPercent] = useState(\n    queryEditor.northPercent || INITIAL_NORTH_PERCENT,\n  );\n  const [southPercent, setSouthPercent] = useState(\n    queryEditor.southPercent || INITIAL_SOUTH_PERCENT,\n  );\n  const [autocompleteEnabled, setAutocompleteEnabled] = useState(\n    getItem(LocalStorageKeys.sqllab__is_autocomplete_enabled, true),\n  );\n  const [showCreateAsModal, setShowCreateAsModal] = useState(false);\n  const [createAs, setCreateAs] = useState('');\n  const [showEmptyState, setShowEmptyState] = useState(false);\n\n  const sqlEditorRef = useRef(null);\n  const northPaneRef = useRef(null);\n\n  const SqlFormExtension = extensionsRegistry.get('sqleditor.extension.form');\n\n  const startQuery = useCallback(\n    (ctasArg = false, ctas_method = CtasEnum.TABLE) => {\n      if (!database) {\n        return;\n      }\n\n      dispatch(\n        runQueryFromSqlEditor(\n          database,\n          queryEditor,\n          defaultQueryLimit,\n          ctasArg ? ctas : '',\n          ctasArg,\n          ctas_method,\n        ),\n      );\n      dispatch(setActiveSouthPaneTab('Results'));\n    },\n    [ctas, database, defaultQueryLimit, dispatch, queryEditor],\n  );\n\n  const stopQuery = useCallback(() => {\n    if (latestQuery && ['running', 'pending'].indexOf(latestQuery.state) >= 0) {\n      dispatch(postStopQuery(latestQuery));\n    }\n    return false;\n  }, [dispatch, latestQuery]);\n\n  const runQuery = () => {\n    if (database) {\n      startQuery();\n    }\n  };\n\n  useEffect(() => {\n    if (autorun) {\n      setAutorun(false);\n      dispatch(queryEditorSetAutorun(queryEditor, false));\n      startQuery();\n    }\n  }, [autorun, dispatch, queryEditor, startQuery]);\n\n  // One layer of abstraction for easy spying in unit tests\n  const getSqlEditorHeight = () =>\n    sqlEditorRef.current\n      ? sqlEditorRef.current.clientHeight - SQL_EDITOR_PADDING * 2\n      : 0;\n\n  const getHotkeyConfig = useCallback(() => {\n    // Get the user's OS\n    const userOS = detectOS();\n    const base = [\n      {\n        name: 'runQuery1',\n        key: 'ctrl+r',\n        descr: t('Run query'),\n        func: () => {\n          if (queryEditor.sql.trim() !== '') {\n            startQuery();\n          }\n        },\n      },\n      {\n        name: 'runQuery2',\n        key: 'ctrl+enter',\n        descr: t('Run query'),\n        func: () => {\n          if (queryEditor.sql.trim() !== '') {\n            startQuery();\n          }\n        },\n      },\n      {\n        name: 'runQuery3',\n        key: 'ctrl+shift+enter',\n        descr: t('Run current query'),\n        func: editor => {\n          if (!editor.getValue().trim()) {\n            return;\n          }\n          const session = editor.getSession();\n          const cursorPosition = editor.getCursorPosition();\n          const totalLine = session.getLength();\n          const currentRow = editor.getFirstVisibleRow();\n          let end = editor.find(';', {\n            backwards: false,\n            skipCurrent: true,\n            start: cursorPosition,\n          })?.end;\n          if (!end || end.row < cursorPosition.row) {\n            end = {\n              row: totalLine + 1,\n              column: 0,\n            };\n          }\n          let start = editor.find(';', {\n            backwards: true,\n            skipCurrent: true,\n            start: cursorPosition,\n          })?.end;\n          let currentLine = editor.find(';', {\n            backwards: true,\n            skipCurrent: true,\n            start: cursorPosition,\n          })?.end?.row;\n          if (\n            !currentLine ||\n            currentLine > cursorPosition.row ||\n            (currentLine === cursorPosition.row &&\n              start?.column > cursorPosition.column)\n          ) {\n            currentLine = 0;\n          }\n          let content =\n            currentLine === start?.row\n              ? session.getLine(currentLine).slice(start.column).trim()\n              : session.getLine(currentLine).trim();\n          while (!content && currentLine < totalLine) {\n            currentLine += 1;\n            content = session.getLine(currentLine).trim();\n          }\n          if (currentLine !== start?.row) {\n            start = { row: currentLine, column: 0 };\n          }\n          editor.selection.setRange({\n            start: start ?? { row: 0, column: 0 },\n            end,\n          });\n          startQuery();\n          editor.selection.clearSelection();\n          editor.moveCursorToPosition(cursorPosition);\n          editor.scrollToRow(currentRow);\n        },\n      },\n      {\n        name: 'newTab',\n        key: userOS === 'Windows' ? 'ctrl+q' : 'ctrl+t',\n        descr: t('New tab'),\n        func: () => {\n          dispatch(addNewQueryEditor());\n        },\n      },\n      {\n        name: 'stopQuery',\n        key: userOS === 'MacOS' ? 'ctrl+x' : 'ctrl+e',\n        descr: t('Stop query'),\n        func: stopQuery,\n      },\n    ];\n\n    if (userOS === 'MacOS') {\n      base.push({\n        name: 'previousLine',\n        key: 'ctrl+p',\n        descr: t('Previous Line'),\n        func: editor => {\n          editor.navigateUp(1);\n        },\n      });\n    }\n\n    return base;\n  }, [dispatch, queryEditor.sql, startQuery, stopQuery]);\n\n  const onBeforeUnload = useEffectEvent(event => {\n    if (\n      database?.extra_json?.cancel_query_on_windows_unload &&\n      latestQuery?.state === 'running'\n    ) {\n      event.preventDefault();\n      stopQuery();\n    }\n  });\n\n  useEffect(() => {\n    // We need to measure the height of the sql editor post render to figure the height of\n    // the south pane so it gets rendered properly\n    setHeight(getSqlEditorHeight());\n    const handleWindowResizeWithThrottle = throttle(\n      () => setHeight(getSqlEditorHeight()),\n      WINDOW_RESIZE_THROTTLE_MS,\n    );\n\n    window.addEventListener('resize', handleWindowResizeWithThrottle);\n    window.addEventListener('beforeunload', onBeforeUnload);\n\n    return () => {\n      window.removeEventListener('resize', handleWindowResizeWithThrottle);\n      window.removeEventListener('beforeunload', onBeforeUnload);\n    };\n    // TODO: Remove useEffectEvent deps once https://github.com/facebook/react/pull/25881 is released\n  }, [onBeforeUnload]);\n\n  useEffect(() => {\n    if (!database || isEmpty(database)) {\n      setShowEmptyState(true);\n    }\n  }, [database]);\n\n  useEffect(() => {\n    // setup hotkeys\n    Mousetrap.reset();\n    const hotkeys = getHotkeyConfig();\n    hotkeys.forEach(keyConfig => {\n      Mousetrap.bind([keyConfig.key], keyConfig.func);\n    });\n  }, [getHotkeyConfig, latestQuery]);\n\n  const onResizeStart = () => {\n    // Set the heights on the ace editor and the ace content area after drag starts\n    // to smooth out the visual transition to the new heights when drag ends\n    document.getElementsByClassName('ace_content')[0].style.height = '100%';\n  };\n\n  const onResizeEnd = ([northPercent, southPercent]) => {\n    setNorthPercent(northPercent);\n    setSouthPercent(southPercent);\n\n    if (northPaneRef.current?.clientHeight) {\n      dispatch(persistEditorHeight(queryEditor, northPercent, southPercent));\n    }\n  };\n\n  const setQueryEditorAndSaveSql = useCallback(\n    sql => {\n      dispatch(queryEditorSetAndSaveSql(queryEditor, sql));\n    },\n    [dispatch, queryEditor],\n  );\n\n  const setQueryEditorAndSaveSqlWithDebounce = useMemo(\n    () => debounce(setQueryEditorAndSaveSql, SET_QUERY_EDITOR_SQL_DEBOUNCE_MS),\n    [setQueryEditorAndSaveSql],\n  );\n\n  const onSqlChanged = sql => {\n    dispatch(queryEditorSetSql(queryEditor, sql));\n    setQueryEditorAndSaveSqlWithDebounce(sql);\n  };\n\n  // Return the heights for the ace editor and the south pane as an object\n  // given the height of the sql editor, north pane percent and south pane percent.\n  const getAceEditorAndSouthPaneHeights = (\n    height,\n    northPercent,\n    southPercent,\n  ) => ({\n    aceEditorHeight:\n      (height * northPercent) / (theme.gridUnit * 25) -\n      (SQL_EDITOR_GUTTER_HEIGHT / 2 + SQL_EDITOR_GUTTER_MARGIN) -\n      SQL_TOOLBAR_HEIGHT,\n    southPaneHeight:\n      (height * southPercent) / (theme.gridUnit * 25) -\n      (SQL_EDITOR_GUTTER_HEIGHT / 2 + SQL_EDITOR_GUTTER_MARGIN),\n  });\n\n  const getQueryCostEstimate = () => {\n    if (database) {\n      dispatch(estimateQueryCost(queryEditor));\n    }\n  };\n\n  const handleToggleAutocompleteEnabled = () => {\n    setItem(\n      LocalStorageKeys.sqllab__is_autocomplete_enabled,\n      !autocompleteEnabled,\n    );\n    setAutocompleteEnabled(!autocompleteEnabled);\n  };\n\n  const elementStyle = (dimension, elementSize, gutterSize) => ({\n    [dimension]: `calc(${elementSize}% - ${\n      gutterSize + SQL_EDITOR_GUTTER_MARGIN\n    }px)`,\n  });\n\n  const createTableAs = () => {\n    startQuery(true, CtasEnum.TABLE);\n    setShowCreateAsModal(false);\n    setCtas('');\n  };\n\n  const createViewAs = () => {\n    startQuery(true, CtasEnum.VIEW);\n    setShowCreateAsModal(false);\n    setCtas('');\n  };\n\n  const ctasChanged = event => {\n    setCtas(event.target.value);\n  };\n\n  const renderDropdown = () => {\n    const qe = queryEditor;\n    const successful = latestQuery?.state === 'success';\n    const scheduleToolTip = successful\n      ? t('Schedule the query periodically')\n      : t('You must run the query successfully first');\n    return (\n      <Menu css={{ width: theme.gridUnit * 44 }}>\n        <Menu.Item css={{ display: 'flex', justifyContent: 'space-between' }}>\n          {' '}\n          <span>{t('Autocomplete')}</span>{' '}\n          <AntdSwitch\n            checked={autocompleteEnabled}\n            onChange={handleToggleAutocompleteEnabled}\n            name=\"autocomplete-switch\"\n          />{' '}\n        </Menu.Item>\n        {isFeatureEnabled(FeatureFlag.ENABLE_TEMPLATE_PROCESSING) && (\n          <Menu.Item>\n            <TemplateParamsEditor\n              language=\"json\"\n              onChange={params => {\n                dispatch(queryEditorSetTemplateParams(qe, params));\n              }}\n              queryEditorId={qe.id}\n            />\n          </Menu.Item>\n        )}\n        {!isEmpty(scheduledQueriesConf) && (\n          <Menu.Item>\n            <ScheduleQueryButton\n              defaultLabel={qe.name}\n              sql={qe.sql}\n              onSchedule={query => dispatch(scheduleQuery(query))}\n              schema={qe.schema}\n              dbId={qe.dbId}\n              scheduleQueryWarning={scheduleQueryWarning}\n              tooltip={scheduleToolTip}\n              disabled={!successful}\n            />\n          </Menu.Item>\n        )}\n      </Menu>\n    );\n  };\n\n  const onSaveQuery = async (query, clientId) => {\n    const savedQuery = await dispatch(saveQuery(query, clientId));\n    dispatch(addSavedQueryToTabState(queryEditor, savedQuery));\n  };\n\n  const renderEditorBottomBar = () => {\n    const { allow_ctas: allowCTAS, allow_cvas: allowCVAS } = database || {};\n\n    const showMenu = allowCTAS || allowCVAS;\n    const runMenuBtn = (\n      <Menu>\n        {allowCTAS && (\n          <Menu.Item\n            onClick={() => {\n              setShowCreateAsModal(true);\n              setCreateAs(CtasEnum.TABLE);\n            }}\n            key=\"1\"\n          >\n            {t('CREATE TABLE AS')}\n          </Menu.Item>\n        )}\n        {allowCVAS && (\n          <Menu.Item\n            onClick={() => {\n              setShowCreateAsModal(true);\n              setCreateAs(CtasEnum.VIEW);\n            }}\n            key=\"2\"\n          >\n            {t('CREATE VIEW AS')}\n          </Menu.Item>\n        )}\n      </Menu>\n    );\n\n    return (\n      <StyledToolbar className=\"sql-toolbar\" id=\"js-sql-toolbar\">\n        <div className=\"leftItems\">\n          <span>\n            <RunQueryActionButton\n              allowAsync={database ? database.allow_run_async : false}\n              queryEditorId={queryEditor.id}\n              queryState={latestQuery?.state}\n              runQuery={runQuery}\n              stopQuery={stopQuery}\n              overlayCreateAsMenu={showMenu ? runMenuBtn : null}\n            />\n          </span>\n          {isFeatureEnabled(FeatureFlag.ESTIMATE_QUERY_COST) &&\n            database?.allows_cost_estimate && (\n              <span>\n                <EstimateQueryCostButton\n                  getEstimate={getQueryCostEstimate}\n                  queryEditorId={queryEditor.id}\n                  tooltip={t('Estimate the cost before running a query')}\n                />\n              </span>\n            )}\n          <span>\n            <QueryLimitSelect\n              queryEditorId={queryEditor.id}\n              maxRow={maxRow}\n              defaultQueryLimit={defaultQueryLimit}\n            />\n          </span>\n          {latestQuery && (\n            <Timer\n              startTime={latestQuery.startDttm}\n              endTime={latestQuery.endDttm}\n              state={STATE_TYPE_MAP[latestQuery.state]}\n              isRunning={latestQuery.state === 'running'}\n            />\n          )}\n        </div>\n        <div className=\"rightItems\">\n          <span>\n            <SaveQuery\n              queryEditorId={queryEditor.id}\n              columns={latestQuery?.results?.columns || []}\n              onSave={onSaveQuery}\n              onUpdate={(query, remoteId, id) =>\n                dispatch(updateSavedQuery(query, remoteId, id))\n              }\n              saveQueryWarning={saveQueryWarning}\n              database={database}\n            />\n          </span>\n          <span>\n            <ShareSqlLabQuery queryEditorId={queryEditor.id} />\n          </span>\n          <AntdDropdown overlay={renderDropdown()} trigger=\"click\">\n            <Icons.MoreHoriz iconColor={theme.colors.grayscale.base} />\n          </AntdDropdown>\n        </div>\n      </StyledToolbar>\n    );\n  };\n\n  const queryPane = () => {\n    const hotkeys = getHotkeyConfig();\n    const { aceEditorHeight, southPaneHeight } =\n      getAceEditorAndSouthPaneHeights(height, northPercent, southPercent);\n    return (\n      <Split\n        expandToMin\n        className=\"queryPane\"\n        sizes={[northPercent, southPercent]}\n        elementStyle={elementStyle}\n        minSize={200}\n        direction=\"vertical\"\n        gutterSize={SQL_EDITOR_GUTTER_HEIGHT}\n        onDragStart={onResizeStart}\n        onDragEnd={onResizeEnd}\n      >\n        <div ref={northPaneRef} className=\"north-pane\">\n          {SqlFormExtension && (\n            <SqlFormExtension\n              queryEditorId={queryEditor.id}\n              setQueryEditorAndSaveSqlWithDebounce={\n                setQueryEditorAndSaveSqlWithDebounce\n              }\n              startQuery={startQuery}\n            />\n          )}\n          <AceEditorWrapper\n            autocomplete={autocompleteEnabled}\n            onBlur={setQueryEditorAndSaveSql}\n            onChange={onSqlChanged}\n            queryEditorId={queryEditor.id}\n            height={`${aceEditorHeight}px`}\n            hotkeys={hotkeys}\n          />\n          {renderEditorBottomBar(hotkeys)}\n        </div>\n        <SouthPane\n          queryEditorId={queryEditor.id}\n          latestQueryId={latestQuery?.id}\n          height={southPaneHeight}\n          displayLimit={displayLimit}\n          defaultQueryLimit={defaultQueryLimit}\n        />\n      </Split>\n    );\n  };\n\n  const createViewModalTitle =\n    createAs === CtasEnum.VIEW ? 'CREATE VIEW AS' : 'CREATE TABLE AS';\n\n  const createModalPlaceHolder =\n    createAs === CtasEnum.VIEW\n      ? t('Specify name to CREATE VIEW AS schema in: public')\n      : t('Specify name to CREATE TABLE AS schema in: public');\n\n  const leftBarStateClass = hideLeftBar\n    ? 'schemaPane-exit-done'\n    : 'schemaPane-enter-done';\n  return (\n    <StyledSqlEditor ref={sqlEditorRef} className=\"SqlEditor\">\n      <CSSTransition classNames=\"schemaPane\" in={!hideLeftBar} timeout={300}>\n        <ResizableSidebar\n          id={`sqllab:${queryEditor.id}`}\n          minWidth={SQL_EDITOR_LEFTBAR_WIDTH}\n          initialWidth={SQL_EDITOR_LEFTBAR_WIDTH}\n          enable={!hideLeftBar}\n        >\n          {adjustedWidth => (\n            <StyledSidebar\n              className={`schemaPane ${leftBarStateClass}`}\n              width={adjustedWidth}\n              hide={hideLeftBar}\n            >\n              <SqlEditorLeftBar\n                database={database}\n                queryEditorId={queryEditor.id}\n                tables={tables}\n                setEmptyState={bool => setShowEmptyState(bool)}\n              />\n            </StyledSidebar>\n          )}\n        </ResizableSidebar>\n      </CSSTransition>\n      {showEmptyState ? (\n        <EmptyStateBig\n          image=\"vector.svg\"\n          title={t('Select a database to write a query')}\n          description={t(\n            'Choose one of the available databases from the panel on the left.',\n          )}\n        />\n      ) : (\n        queryPane()\n      )}\n      <Modal\n        visible={showCreateAsModal}\n        title={t(createViewModalTitle)}\n        onHide={() => setShowCreateAsModal(false)}\n        footer={\n          <>\n            <Button onClick={() => setShowCreateAsModal(false)}>\n              {t('Cancel')}\n            </Button>\n            {createAs === CtasEnum.TABLE && (\n              <Button\n                buttonStyle=\"primary\"\n                disabled={ctas.length === 0}\n                onClick={createTableAs}\n              >\n                {t('Create')}\n              </Button>\n            )}\n            {createAs === CtasEnum.VIEW && (\n              <Button\n                buttonStyle=\"primary\"\n                disabled={ctas.length === 0}\n                onClick={createViewAs}\n              >\n                {t('Create')}\n              </Button>\n            )}\n          </>\n        }\n      >\n        <span>{t('Name')}</span>\n        <Input placeholder={createModalPlaceHolder} onChange={ctasChanged} />\n      </Modal>\n    </StyledSqlEditor>\n  );\n};\n\nSqlEditor.propTypes = propTypes;\n\nexport default SqlEditor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}