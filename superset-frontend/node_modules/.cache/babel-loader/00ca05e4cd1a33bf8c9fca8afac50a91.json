{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { HexagonLayer } from 'deck.gl';\nimport React from 'react';\nimport { t, CategoricalColorNamespace } from '@superset-ui/core';\n\nimport { commonLayerProps, getAggFunc } from '../common';\nimport sandboxedEval from '../../utils/sandbox';\nimport { hexToRGB } from '../../utils/colors';\nimport { createDeckGLComponent } from '../../factory';\nimport TooltipRow from '../../TooltipRow';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nfunction setTooltipContent(o) {\n  return (\n    ___EmotionJSX(\"div\", { className: \"deckgl-tooltip\" },\n    ___EmotionJSX(TooltipRow, {\n      label: t('Centroid (Longitude and Latitude): '),\n      value: `(${o.coordinate[0]}, ${o.coordinate[1]})` }),\n\n    ___EmotionJSX(TooltipRow\n    // eslint-disable-next-line prefer-template\n    , { label: t('Height') + ': ',\n      value: `${o.object.elevationValue}` })));\n\n\n\n}\n\nexport function getLayer(formData, payload, onAddFilter, setTooltip) {\n  const fd = formData;\n  const colorScale = CategoricalColorNamespace.getScale(fd.color_scheme);\n  const colorRange = colorScale.range().map((color) => hexToRGB(color));\n  let data = payload.data.features;\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n  const aggFunc = getAggFunc(fd.js_agg_function, (p) => p.weight);\n\n  return new HexagonLayer({\n    id: `hex-layer-${fd.slice_id}`,\n    data,\n    pickable: true,\n    radius: fd.grid_size,\n    extruded: fd.extruded,\n    colorRange,\n    outline: false,\n    getElevationValue: aggFunc,\n    getColorValue: aggFunc,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent) });\n\n}\n\nfunction getPoints(data) {\n  return data.map((d) => d.position);\n}\n\nexport default createDeckGLComponent(getLayer, getPoints);","map":{"version":3,"names":["HexagonLayer","React","t","CategoricalColorNamespace","commonLayerProps","getAggFunc","sandboxedEval","hexToRGB","createDeckGLComponent","TooltipRow","setTooltipContent","o","coordinate","object","elevationValue","getLayer","formData","payload","onAddFilter","setTooltip","fd","colorScale","getScale","color_scheme","colorRange","range","map","color","data","features","js_data_mutator","jsFnMutator","aggFunc","js_agg_function","p","weight","id","slice_id","pickable","radius","grid_size","extruded","outline","getElevationValue","getColorValue","getPoints","d","position"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Hex/Hex.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { HexagonLayer } from 'deck.gl';\nimport React from 'react';\nimport { t, CategoricalColorNamespace } from '@superset-ui/core';\n\nimport { commonLayerProps, getAggFunc } from '../common';\nimport sandboxedEval from '../../utils/sandbox';\nimport { hexToRGB } from '../../utils/colors';\nimport { createDeckGLComponent } from '../../factory';\nimport TooltipRow from '../../TooltipRow';\n\nfunction setTooltipContent(o) {\n  return (\n    <div className=\"deckgl-tooltip\">\n      <TooltipRow\n        label={t('Centroid (Longitude and Latitude): ')}\n        value={`(${o.coordinate[0]}, ${o.coordinate[1]})`}\n      />\n      <TooltipRow\n        // eslint-disable-next-line prefer-template\n        label={t('Height') + ': '}\n        value={`${o.object.elevationValue}`}\n      />\n    </div>\n  );\n}\n\nexport function getLayer(formData, payload, onAddFilter, setTooltip) {\n  const fd = formData;\n  const colorScale = CategoricalColorNamespace.getScale(fd.color_scheme);\n  const colorRange = colorScale.range().map(color => hexToRGB(color));\n  let data = payload.data.features;\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n  const aggFunc = getAggFunc(fd.js_agg_function, p => p.weight);\n\n  return new HexagonLayer({\n    id: `hex-layer-${fd.slice_id}`,\n    data,\n    pickable: true,\n    radius: fd.grid_size,\n    extruded: fd.extruded,\n    colorRange,\n    outline: false,\n    getElevationValue: aggFunc,\n    getColorValue: aggFunc,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent),\n  });\n}\n\nfunction getPoints(data) {\n  return data.map(d => d.position);\n}\n\nexport default createDeckGLComponent(getLayer, getPoints);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,QAA6B,SAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,CAAT,EAAYC,yBAAZ,QAA6C,mBAA7C;;AAEA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,WAA7C;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,qBAAT,QAAsC,eAAtC;AACA,OAAOC,UAAP,MAAuB,kBAAvB,C;;AAEA,SAASC,iBAAT,CAA2BC,CAA3B,EAA8B;EAC5B;IACE,uBAAK,SAAS,EAAC,gBAAf;IACE,cAAC,UAAD;MACE,KAAK,EAAET,CAAC,CAAC,qCAAD,CADV;MAEE,KAAK,EAAG,IAAGS,CAAC,CAACC,UAAF,CAAa,CAAb,CAAgB,KAAID,CAAC,CAACC,UAAF,CAAa,CAAb,CAAgB,GAFjD,GADF;;IAKE,cAAC;IACC;IADF,IAEE,KAAK,EAAEV,CAAC,CAAC,QAAD,CAAD,GAAc,IAFvB;MAGE,KAAK,EAAG,GAAES,CAAC,CAACE,MAAF,CAASC,cAAe,EAHpC,GALF,CADF;;;;AAaD;;AAED,OAAO,SAASC,QAAT,CAAkBC,QAAlB,EAA4BC,OAA5B,EAAqCC,WAArC,EAAkDC,UAAlD,EAA8D;EACnE,MAAMC,EAAE,GAAGJ,QAAX;EACA,MAAMK,UAAU,GAAGlB,yBAAyB,CAACmB,QAA1B,CAAmCF,EAAE,CAACG,YAAtC,CAAnB;EACA,MAAMC,UAAU,GAAGH,UAAU,CAACI,KAAX,GAAmBC,GAAnB,CAAuB,CAAAC,KAAK,KAAIpB,QAAQ,CAACoB,KAAD,CAAxC,CAAnB;EACA,IAAIC,IAAI,GAAGX,OAAO,CAACW,IAAR,CAAaC,QAAxB;;EAEA,IAAIT,EAAE,CAACU,eAAP,EAAwB;IACtB;IACA,MAAMC,WAAW,GAAGzB,aAAa,CAACc,EAAE,CAACU,eAAJ,CAAjC;IACAF,IAAI,GAAGG,WAAW,CAACH,IAAD,CAAlB;EACD;EACD,MAAMI,OAAO,GAAG3B,UAAU,CAACe,EAAE,CAACa,eAAJ,EAAqB,CAAAC,CAAC,KAAIA,CAAC,CAACC,MAA5B,CAA1B;;EAEA,OAAO,IAAInC,YAAJ,CAAiB;IACtBoC,EAAE,EAAG,aAAYhB,EAAE,CAACiB,QAAS,EADP;IAEtBT,IAFsB;IAGtBU,QAAQ,EAAE,IAHY;IAItBC,MAAM,EAAEnB,EAAE,CAACoB,SAJW;IAKtBC,QAAQ,EAAErB,EAAE,CAACqB,QALS;IAMtBjB,UANsB;IAOtBkB,OAAO,EAAE,KAPa;IAQtBC,iBAAiB,EAAEX,OARG;IAStBY,aAAa,EAAEZ,OATO;IAUtB,GAAG5B,gBAAgB,CAACgB,EAAD,EAAKD,UAAL,EAAiBT,iBAAjB,CAVG,EAAjB,CAAP;;AAYD;;AAED,SAASmC,SAAT,CAAmBjB,IAAnB,EAAyB;EACvB,OAAOA,IAAI,CAACF,GAAL,CAAS,CAAAoB,CAAC,KAAIA,CAAC,CAACC,QAAhB,CAAP;AACD;;AAED,eAAevC,qBAAqB,CAACO,QAAD,EAAW8B,SAAX,CAApC"},"metadata":{},"sourceType":"module"}