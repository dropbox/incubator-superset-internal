{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { getMetricLabel, ensureIsArray } from '@superset-ui/core';\nimport { TIME_COMPARISON_SEPARATOR } from './constants';\nexport const getMetricOffsetsMap = (formData, queryObject) => {\n  /*\n    return metric offset-label and metric-label hashmap, for instance:\n    {\n      \"SUM(value)__1 year ago\": \"SUM(value)\",\n      \"SUM(value)__2 year ago\": \"SUM(value)\"\n    }\n  */\n  const queryMetrics = ensureIsArray(queryObject.metrics);\n  const timeOffsets = ensureIsArray(formData.time_compare);\n  const metricLabels = queryMetrics.map(getMetricLabel);\n  const metricOffsetMap = new Map();\n  metricLabels.forEach((metric) => {\n    timeOffsets.forEach((offset) => {\n      metricOffsetMap.set([metric, offset].join(TIME_COMPARISON_SEPARATOR), metric);\n    });\n  });\n  return metricOffsetMap;\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getMetricOffsetsMap, \"getMetricOffsetsMap\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/operators/utils/getMetricOffsetsMap.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;AACA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,cAAT,EAAyBC,aAAzB,QAA8C,mBAA9C;AAEA,SAASC,yBAAT,QAA0C,aAA1C;AAEA,OAAO,MAAMC,mBAAmB,GAA+C,CAC7EC,QAD6E,EAE7EC,WAF6E,KAG3E;EACF;;;;;;;EAOA,MAAMC,YAAY,GAAGL,aAAa,CAACI,WAAW,CAACE,OAAb,CAAlC;EACA,MAAMC,WAAW,GAAGP,aAAa,CAACG,QAAQ,CAACK,YAAV,CAAjC;EAEA,MAAMC,YAAY,GAAGJ,YAAY,CAACK,GAAb,CAAiBX,cAAjB,CAArB;EACA,MAAMY,eAAe,GAAG,IAAIC,GAAJ,EAAxB;EACAH,YAAY,CAACI,OAAb,CAAqB,CAACC,MAAD,KAAmB;IACtCP,WAAW,CAACM,OAAZ,CAAoB,CAACE,MAAD,KAAmB;MACrCJ,eAAe,CAACK,GAAhB,CACE,CAACF,MAAD,EAASC,MAAT,EAAiBE,IAAjB,CAAsBhB,yBAAtB,CADF,EAEEa,MAFF;IAID,CALD;EAMD,CAPD;EASA,OAAOH,eAAP;AACD,CA1BM,C,iLAAMT,mB","names":["getMetricLabel","ensureIsArray","TIME_COMPARISON_SEPARATOR","getMetricOffsetsMap","formData","queryObject","queryMetrics","metrics","timeOffsets","time_compare","metricLabels","map","metricOffsetMap","Map","forEach","metric","offset","set","join"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/operators/utils/getMetricOffsetsMap.ts"],"sourcesContent":["/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { getMetricLabel, ensureIsArray } from '@superset-ui/core';\nimport { PostProcessingFactory } from '../types';\nimport { TIME_COMPARISON_SEPARATOR } from './constants';\n\nexport const getMetricOffsetsMap: PostProcessingFactory<Map<string, string>> = (\n  formData,\n  queryObject,\n) => {\n  /*\n    return metric offset-label and metric-label hashmap, for instance:\n    {\n      \"SUM(value)__1 year ago\": \"SUM(value)\",\n      \"SUM(value)__2 year ago\": \"SUM(value)\"\n    }\n  */\n  const queryMetrics = ensureIsArray(queryObject.metrics);\n  const timeOffsets = ensureIsArray(formData.time_compare);\n\n  const metricLabels = queryMetrics.map(getMetricLabel);\n  const metricOffsetMap = new Map<string, string>();\n  metricLabels.forEach((metric: string) => {\n    timeOffsets.forEach((offset: string) => {\n      metricOffsetMap.set(\n        [metric, offset].join(TIME_COMPARISON_SEPARATOR),\n        metric,\n      );\n    });\n  });\n\n  return metricOffsetMap;\n};\n"]},"metadata":{},"sourceType":"module"}