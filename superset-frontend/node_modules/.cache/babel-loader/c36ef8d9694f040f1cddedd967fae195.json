{"ast":null,"code":"import _debounce from \"lodash/debounce\";import _isEqual from \"lodash/isEqual\";import _isEmpty from \"lodash/isEmpty\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-param-reassign */\nimport React, { useEffect, useState, useCallback, createContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SLOW_DEBOUNCE, isNativeFilter, usePrevious, styled } from '@superset-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { updateDataMask, clearDataMask } from 'src/dataMask/actions';\nimport { useImmer } from 'use-immer';\n\nimport { getInitialDataMask } from 'src/dataMask/reducer';\nimport { URL_PARAMS } from 'src/constants';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { useTabId } from 'src/hooks/useTabId';\nimport { FilterBarOrientation } from 'src/dashboard/types';\nimport { checkIsApplyDisabled } from './utils';\nimport { useNativeFiltersDataMask, useFilters, useFilterUpdates, useInitialization } from './state';\nimport { createFilterKey, updateFilterKey } from './keyValue';\nimport ActionButtons from './ActionButtons';\nimport Horizontal from './Horizontal';\nimport Vertical from './Vertical';\nimport { useSelectFiltersInScope } from '../state';\n// FilterBar is just being hidden as it must still\n// render fully due to encapsulated logics\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";const HiddenFilterBar = styled.div`\n  display: none;\n`;\nconst EXCLUDED_URL_PARAMS = [\nURL_PARAMS.nativeFilters.name,\nURL_PARAMS.permalinkKey.name];\n\nconst publishDataMask = _debounce(async (history, dashboardId, updateKey, dataMaskSelected, tabId) => {var _context;\n  const { location } = history;\n  const { search } = location;\n  const previousParams = new URLSearchParams(search);\n  const newParams = new URLSearchParams();\n  let dataMaskKey;\n  previousParams.forEach((value, key) => {\n    if (!_includesInstanceProperty(EXCLUDED_URL_PARAMS).call(EXCLUDED_URL_PARAMS, key)) {\n      newParams.append(key, value);\n    }\n  });\n  const nativeFiltersCacheKey = getUrlParam(URL_PARAMS.nativeFiltersKey);\n  const dataMask = JSON.stringify(dataMaskSelected);\n  if (updateKey &&\n  nativeFiltersCacheKey && (\n  await updateFilterKey(dashboardId, dataMask, nativeFiltersCacheKey, tabId))) {\n    dataMaskKey = nativeFiltersCacheKey;\n  } else\n  {\n    dataMaskKey = await createFilterKey(dashboardId, dataMask, tabId);\n  }\n  if (dataMaskKey) {\n    newParams.set(URL_PARAMS.nativeFiltersKey.name, dataMaskKey);\n  }\n  // pathname could be updated somewhere else through window.history\n  // keep react router history in sync with window history\n  // replace params only when current page is /superset/dashboard\n  // this prevents a race condition between updating filters and navigating to Explore\n  if (_includesInstanceProperty(_context = window.location.pathname).call(_context, '/superset/dashboard')) {\n    history.location.pathname = window.location.pathname;\n    history.replace({\n      search: newParams.toString() });\n\n  }\n}, SLOW_DEBOUNCE);\nexport const FilterBarScrollContext = /*#__PURE__*/createContext(false);\nconst FilterBar = (_ref) => {let { orientation = FilterBarOrientation.VERTICAL, verticalConfig, hidden = false } = _ref;\n  const history = useHistory();\n  const dataMaskApplied = useNativeFiltersDataMask();\n  const [dataMaskSelected, setDataMaskSelected] = useImmer(dataMaskApplied);\n  const dispatch = useDispatch();\n  const [updateKey, setUpdateKey] = useState(0);\n  const tabId = useTabId();\n  const filters = useFilters();\n  const previousFilters = usePrevious(filters);\n  const filterValues = Object.values(filters);\n  const nativeFilterValues = filterValues.filter(isNativeFilter);\n  const dashboardId = useSelector((_ref2) => {let { dashboardInfo } = _ref2;return dashboardInfo == null ? void 0 : dashboardInfo.id;});\n  const previousDashboardId = usePrevious(dashboardId);\n  const canEdit = useSelector((_ref3) => {let { dashboardInfo } = _ref3;return dashboardInfo.dash_edit_perm;});\n  const [filtersInScope] = useSelectFiltersInScope(nativeFilterValues);\n  const handleFilterSelectionChange = useCallback((filter, dataMask) => {\n    setDataMaskSelected((draft) => {var _dataMask$filterState, _dataMaskSelected$fil, _dataMaskSelected$fil2;\n      // force instant updating on initialization for filters with `requiredFirst` is true or instant filters\n      if (\n      // filterState.value === undefined - means that value not initialized\n      ((_dataMask$filterState = dataMask.filterState) == null ? void 0 : _dataMask$filterState.value) !== undefined &&\n      ((_dataMaskSelected$fil = dataMaskSelected[filter.id]) == null ? void 0 : (_dataMaskSelected$fil2 = _dataMaskSelected$fil.filterState) == null ? void 0 : _dataMaskSelected$fil2.value) === undefined &&\n      filter.requiredFirst) {\n        dispatch(updateDataMask(filter.id, dataMask));\n      }\n      draft[filter.id] = {\n        ...getInitialDataMask(filter.id),\n        ...dataMask };\n\n    });\n  }, [dataMaskSelected, dispatch, setDataMaskSelected]);\n  useEffect(() => {\n    if (previousFilters && dashboardId === previousDashboardId) {\n      const updates = {};\n      Object.values(filters).forEach((currentFilter) => {\n        const previousFilter = previousFilters == null ? void 0 : previousFilters[currentFilter.id];\n        if (!previousFilter) {\n          return;\n        }\n        const currentType = currentFilter.filterType;\n        const currentTargets = currentFilter.targets;\n        const currentDataMask = currentFilter.defaultDataMask;\n        const previousType = previousFilter == null ? void 0 : previousFilter.filterType;\n        const previousTargets = previousFilter == null ? void 0 : previousFilter.targets;\n        const previousDataMask = previousFilter == null ? void 0 : previousFilter.defaultDataMask;\n        const typeChanged = currentType !== previousType;\n        const targetsChanged = !_isEqual(currentTargets, previousTargets);\n        const dataMaskChanged = !_isEqual(currentDataMask, previousDataMask);\n        if (typeChanged || targetsChanged || dataMaskChanged) {\n          updates[currentFilter.id] = getInitialDataMask(currentFilter.id);\n        }\n      });\n      if (!_isEmpty(updates)) {\n        setDataMaskSelected((draft) => ({ ...draft, ...updates }));\n        Object.keys(updates).forEach((key) => dispatch(clearDataMask(key)));\n      }\n    }\n  }, [\n  JSON.stringify(filters),\n  JSON.stringify(previousFilters),\n  previousDashboardId]);\n\n  const dataMaskAppliedText = JSON.stringify(dataMaskApplied);\n  useEffect(() => {\n    setDataMaskSelected(() => dataMaskApplied);\n  }, [dataMaskAppliedText, setDataMaskSelected]);\n  useEffect(() => {\n    publishDataMask(history, dashboardId, updateKey, dataMaskApplied, tabId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dashboardId, dataMaskAppliedText, history, updateKey, tabId]);\n  const handleApply = useCallback(() => {\n    const filterIds = Object.keys(dataMaskSelected);\n    setUpdateKey(1);\n    filterIds.forEach((filterId) => {\n      if (dataMaskSelected[filterId]) {\n        dispatch(updateDataMask(filterId, dataMaskSelected[filterId]));\n      }\n    });\n  }, [dataMaskSelected, dispatch]);\n  const handleClearAll = useCallback(() => {\n    const clearDataMaskIds = [];\n    let dispatchAllowed = false;\n    filtersInScope.filter(isNativeFilter).forEach((filter) => {\n      const { id } = filter;\n      if (dataMaskSelected[id]) {var _filter$controlValues;\n        if ((_filter$controlValues = filter.controlValues) != null && _filter$controlValues.enableEmptyFilter) {\n          dispatchAllowed = false;\n        }\n        clearDataMaskIds.push(id);\n        setDataMaskSelected((draft) => {var _draft$id$filterState;\n          if (((_draft$id$filterState = draft[id].filterState) == null ? void 0 : _draft$id$filterState.value) !== undefined) {\n            draft[id].filterState.value = undefined;\n          }\n        });\n      }\n    });\n    if (dispatchAllowed) {\n      clearDataMaskIds.forEach((id) => dispatch(clearDataMask(id)));\n    }\n  }, [dataMaskSelected, dispatch, filtersInScope, setDataMaskSelected]);\n  useFilterUpdates(dataMaskSelected, setDataMaskSelected);\n  const isApplyDisabled = checkIsApplyDisabled(dataMaskSelected, dataMaskApplied, filtersInScope.filter(isNativeFilter));\n  const isInitialized = useInitialization();\n  const actions = ___EmotionJSX(ActionButtons, { filterBarOrientation: orientation, width: verticalConfig == null ? void 0 : verticalConfig.width, onApply: handleApply, onClearAll: handleClearAll, dataMaskSelected: dataMaskSelected, dataMaskApplied: dataMaskApplied, isApplyDisabled: isApplyDisabled });\n  const filterBarComponent = orientation === FilterBarOrientation.HORIZONTAL ? ___EmotionJSX(Horizontal, { actions: actions, canEdit: canEdit, dashboardId: dashboardId, dataMaskSelected: dataMaskSelected, filterValues: filterValues, isInitialized: isInitialized, onSelectionChange: handleFilterSelectionChange }) : verticalConfig ? ___EmotionJSX(Vertical, { actions: actions, canEdit: canEdit, dataMaskSelected: dataMaskSelected, filtersOpen: verticalConfig.filtersOpen, filterValues: filterValues, isInitialized: isInitialized, isDisabled: isApplyDisabled, height: verticalConfig.height, offset: verticalConfig.offset, onSelectionChange: handleFilterSelectionChange, toggleFiltersBar: verticalConfig.toggleFiltersBar, width: verticalConfig.width }) : null;\n  return hidden ? ___EmotionJSX(HiddenFilterBar, null, filterBarComponent) : filterBarComponent;\n};\nexport default /*#__PURE__*/React.memo(FilterBar);","map":{"version":3,"mappings":"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","names":["React","useEffect","useState","useCallback","createContext","useDispatch","useSelector","SLOW_DEBOUNCE","isNativeFilter","usePrevious","styled","useHistory","updateDataMask","clearDataMask","useImmer","getInitialDataMask","URL_PARAMS","getUrlParam","useTabId","FilterBarOrientation","checkIsApplyDisabled","useNativeFiltersDataMask","useFilters","useFilterUpdates","useInitialization","createFilterKey","updateFilterKey","ActionButtons","Horizontal","Vertical","useSelectFiltersInScope","HiddenFilterBar","div","EXCLUDED_URL_PARAMS","nativeFilters","name","permalinkKey","publishDataMask","history","dashboardId","updateKey","dataMaskSelected","tabId","location","search","previousParams","URLSearchParams","newParams","dataMaskKey","forEach","value","key","append","nativeFiltersCacheKey","nativeFiltersKey","dataMask","JSON","stringify","set","pathname","window","replace","toString","FilterBarScrollContext","FilterBar","orientation","VERTICAL","verticalConfig","hidden","dataMaskApplied","setDataMaskSelected","dispatch","setUpdateKey","filters","previousFilters","filterValues","Object","values","nativeFilterValues","filter","dashboardInfo","id","previousDashboardId","canEdit","dash_edit_perm","filtersInScope","handleFilterSelectionChange","filterState","undefined","requiredFirst","draft","updates","previousFilter","currentFilter","currentType","filterType","currentTargets","targets","currentDataMask","defaultDataMask","previousType","previousTargets","previousDataMask","typeChanged","targetsChanged","dataMaskChanged","keys","dataMaskAppliedText","handleApply","filterIds","filterId","handleClearAll","clearDataMaskIds","dispatchAllowed","controlValues","enableEmptyFilter","push","isApplyDisabled","isInitialized","actions","width","filterBarComponent","HORIZONTAL","filtersOpen","height","offset","toggleFiltersBar","memo"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint-disable no-param-reassign */\nimport React, { useEffect, useState, useCallback, createContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  DataMaskStateWithId,\n  DataMaskWithId,\n  Filter,\n  DataMask,\n  SLOW_DEBOUNCE,\n  isNativeFilter,\n  usePrevious,\n  styled,\n} from '@superset-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { updateDataMask, clearDataMask } from 'src/dataMask/actions';\nimport { useImmer } from 'use-immer';\nimport { isEmpty, isEqual, debounce } from 'lodash';\nimport { getInitialDataMask } from 'src/dataMask/reducer';\nimport { URL_PARAMS } from 'src/constants';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { useTabId } from 'src/hooks/useTabId';\nimport { FilterBarOrientation, RootState } from 'src/dashboard/types';\nimport { checkIsApplyDisabled } from './utils';\nimport { FiltersBarProps } from './types';\nimport {\n  useNativeFiltersDataMask,\n  useFilters,\n  useFilterUpdates,\n  useInitialization,\n} from './state';\nimport { createFilterKey, updateFilterKey } from './keyValue';\nimport ActionButtons from './ActionButtons';\nimport Horizontal from './Horizontal';\nimport Vertical from './Vertical';\nimport { useSelectFiltersInScope } from '../state';\n\n// FilterBar is just being hidden as it must still\n// render fully due to encapsulated logics\nconst HiddenFilterBar = styled.div`\n  display: none;\n`;\n\nconst EXCLUDED_URL_PARAMS: string[] = [\n  URL_PARAMS.nativeFilters.name,\n  URL_PARAMS.permalinkKey.name,\n];\n\nconst publishDataMask = debounce(\n  async (\n    history,\n    dashboardId,\n    updateKey,\n    dataMaskSelected: DataMaskStateWithId,\n    tabId,\n  ) => {\n    const { location } = history;\n    const { search } = location;\n    const previousParams = new URLSearchParams(search);\n    const newParams = new URLSearchParams();\n    let dataMaskKey: string | null;\n    previousParams.forEach((value, key) => {\n      if (!EXCLUDED_URL_PARAMS.includes(key)) {\n        newParams.append(key, value);\n      }\n    });\n\n    const nativeFiltersCacheKey = getUrlParam(URL_PARAMS.nativeFiltersKey);\n    const dataMask = JSON.stringify(dataMaskSelected);\n    if (\n      updateKey &&\n      nativeFiltersCacheKey &&\n      (await updateFilterKey(\n        dashboardId,\n        dataMask,\n        nativeFiltersCacheKey,\n        tabId,\n      ))\n    ) {\n      dataMaskKey = nativeFiltersCacheKey;\n    } else {\n      dataMaskKey = await createFilterKey(dashboardId, dataMask, tabId);\n    }\n    if (dataMaskKey) {\n      newParams.set(URL_PARAMS.nativeFiltersKey.name, dataMaskKey);\n    }\n\n    // pathname could be updated somewhere else through window.history\n    // keep react router history in sync with window history\n    // replace params only when current page is /superset/dashboard\n    // this prevents a race condition between updating filters and navigating to Explore\n    if (window.location.pathname.includes('/superset/dashboard')) {\n      history.location.pathname = window.location.pathname;\n      history.replace({\n        search: newParams.toString(),\n      });\n    }\n  },\n  SLOW_DEBOUNCE,\n);\n\nexport const FilterBarScrollContext = createContext(false);\nconst FilterBar: React.FC<FiltersBarProps> = ({\n  orientation = FilterBarOrientation.VERTICAL,\n  verticalConfig,\n  hidden = false,\n}) => {\n  const history = useHistory();\n  const dataMaskApplied: DataMaskStateWithId = useNativeFiltersDataMask();\n  const [dataMaskSelected, setDataMaskSelected] =\n    useImmer<DataMaskStateWithId>(dataMaskApplied);\n  const dispatch = useDispatch();\n  const [updateKey, setUpdateKey] = useState(0);\n  const tabId = useTabId();\n  const filters = useFilters();\n  const previousFilters = usePrevious(filters);\n  const filterValues = Object.values(filters);\n  const nativeFilterValues = filterValues.filter(isNativeFilter);\n  const dashboardId = useSelector<any, number>(\n    ({ dashboardInfo }) => dashboardInfo?.id,\n  );\n  const previousDashboardId = usePrevious(dashboardId);\n  const canEdit = useSelector<RootState, boolean>(\n    ({ dashboardInfo }) => dashboardInfo.dash_edit_perm,\n  );\n\n  const [filtersInScope] = useSelectFiltersInScope(nativeFilterValues);\n\n  const handleFilterSelectionChange = useCallback(\n    (\n      filter: Pick<Filter, 'id'> & Partial<Filter>,\n      dataMask: Partial<DataMask>,\n    ) => {\n      setDataMaskSelected(draft => {\n        // force instant updating on initialization for filters with `requiredFirst` is true or instant filters\n        if (\n          // filterState.value === undefined - means that value not initialized\n          dataMask.filterState?.value !== undefined &&\n          dataMaskSelected[filter.id]?.filterState?.value === undefined &&\n          filter.requiredFirst\n        ) {\n          dispatch(updateDataMask(filter.id, dataMask));\n        }\n\n        draft[filter.id] = {\n          ...(getInitialDataMask(filter.id) as DataMaskWithId),\n          ...dataMask,\n        };\n      });\n    },\n    [dataMaskSelected, dispatch, setDataMaskSelected],\n  );\n\n  useEffect(() => {\n    if (previousFilters && dashboardId === previousDashboardId) {\n      const updates = {};\n      Object.values(filters).forEach(currentFilter => {\n        const previousFilter = previousFilters?.[currentFilter.id];\n        if (!previousFilter) {\n          return;\n        }\n        const currentType = currentFilter.filterType;\n        const currentTargets = currentFilter.targets;\n        const currentDataMask = currentFilter.defaultDataMask;\n        const previousType = previousFilter?.filterType;\n        const previousTargets = previousFilter?.targets;\n        const previousDataMask = previousFilter?.defaultDataMask;\n        const typeChanged = currentType !== previousType;\n        const targetsChanged = !isEqual(currentTargets, previousTargets);\n        const dataMaskChanged = !isEqual(currentDataMask, previousDataMask);\n\n        if (typeChanged || targetsChanged || dataMaskChanged) {\n          updates[currentFilter.id] = getInitialDataMask(currentFilter.id);\n        }\n      });\n\n      if (!isEmpty(updates)) {\n        setDataMaskSelected(draft => ({ ...draft, ...updates }));\n        Object.keys(updates).forEach(key => dispatch(clearDataMask(key)));\n      }\n    }\n  }, [\n    JSON.stringify(filters),\n    JSON.stringify(previousFilters),\n    previousDashboardId,\n  ]);\n\n  const dataMaskAppliedText = JSON.stringify(dataMaskApplied);\n\n  useEffect(() => {\n    setDataMaskSelected(() => dataMaskApplied);\n  }, [dataMaskAppliedText, setDataMaskSelected]);\n\n  useEffect(() => {\n    publishDataMask(history, dashboardId, updateKey, dataMaskApplied, tabId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dashboardId, dataMaskAppliedText, history, updateKey, tabId]);\n\n  const handleApply = useCallback(() => {\n    const filterIds = Object.keys(dataMaskSelected);\n    setUpdateKey(1);\n    filterIds.forEach(filterId => {\n      if (dataMaskSelected[filterId]) {\n        dispatch(updateDataMask(filterId, dataMaskSelected[filterId]));\n      }\n    });\n  }, [dataMaskSelected, dispatch]);\n\n  const handleClearAll = useCallback(() => {\n    const clearDataMaskIds: string[] = [];\n    let dispatchAllowed = false;\n    filtersInScope.filter(isNativeFilter).forEach(filter => {\n      const { id } = filter;\n      if (dataMaskSelected[id]) {\n        if (filter.controlValues?.enableEmptyFilter) {\n          dispatchAllowed = false;\n        }\n        clearDataMaskIds.push(id);\n        setDataMaskSelected(draft => {\n          if (draft[id].filterState?.value !== undefined) {\n            draft[id].filterState!.value = undefined;\n          }\n        });\n      }\n    });\n    if (dispatchAllowed) {\n      clearDataMaskIds.forEach(id => dispatch(clearDataMask(id)));\n    }\n  }, [dataMaskSelected, dispatch, filtersInScope, setDataMaskSelected]);\n\n  useFilterUpdates(dataMaskSelected, setDataMaskSelected);\n  const isApplyDisabled = checkIsApplyDisabled(\n    dataMaskSelected,\n    dataMaskApplied,\n    filtersInScope.filter(isNativeFilter),\n  );\n  const isInitialized = useInitialization();\n\n  const actions = (\n    <ActionButtons\n      filterBarOrientation={orientation}\n      width={verticalConfig?.width}\n      onApply={handleApply}\n      onClearAll={handleClearAll}\n      dataMaskSelected={dataMaskSelected}\n      dataMaskApplied={dataMaskApplied}\n      isApplyDisabled={isApplyDisabled}\n    />\n  );\n\n  const filterBarComponent =\n    orientation === FilterBarOrientation.HORIZONTAL ? (\n      <Horizontal\n        actions={actions}\n        canEdit={canEdit}\n        dashboardId={dashboardId}\n        dataMaskSelected={dataMaskSelected}\n        filterValues={filterValues}\n        isInitialized={isInitialized}\n        onSelectionChange={handleFilterSelectionChange}\n      />\n    ) : verticalConfig ? (\n      <Vertical\n        actions={actions}\n        canEdit={canEdit}\n        dataMaskSelected={dataMaskSelected}\n        filtersOpen={verticalConfig.filtersOpen}\n        filterValues={filterValues}\n        isInitialized={isInitialized}\n        isDisabled={isApplyDisabled}\n        height={verticalConfig.height}\n        offset={verticalConfig.offset}\n        onSelectionChange={handleFilterSelectionChange}\n        toggleFiltersBar={verticalConfig.toggleFiltersBar}\n        width={verticalConfig.width}\n      />\n    ) : null;\n\n  return hidden ? (\n    <HiddenFilterBar>{filterBarComponent}</HiddenFilterBar>\n  ) : (\n    filterBarComponent\n  );\n};\nexport default React.memo(FilterBar);\n"]},"metadata":{},"sourceType":"module"}