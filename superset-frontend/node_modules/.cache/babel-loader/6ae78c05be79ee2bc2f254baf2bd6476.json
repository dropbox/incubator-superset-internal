{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nexport const AGGREGATES = {\n  AVG: 'AVG',\n  COUNT: 'COUNT',\n  COUNT_DISTINCT: 'COUNT_DISTINCT',\n  MAX: 'MAX',\n  MIN: 'MIN',\n  SUM: 'SUM' };\n\nexport const AGGREGATES_OPTIONS = Object.values(AGGREGATES);\nexport var Operators;\n(function (Operators) {\n  Operators[\"EQUALS\"] = \"EQUALS\";\n  Operators[\"NOT_EQUALS\"] = \"NOT_EQUALS\";\n  Operators[\"LESS_THAN\"] = \"LESS_THAN\";\n  Operators[\"LESS_THAN_OR_EQUAL\"] = \"LESS_THAN_OR_EQUAL\";\n  Operators[\"GREATER_THAN\"] = \"GREATER_THAN\";\n  Operators[\"GREATER_THAN_OR_EQUAL\"] = \"GREATER_THAN_OR_EQUAL\";\n  Operators[\"IN\"] = \"IN\";\n  Operators[\"NOT_IN\"] = \"NOT_IN\";\n  Operators[\"LIKE\"] = \"LIKE\";\n  Operators[\"ILIKE\"] = \"ILIKE\";\n  Operators[\"REGEX\"] = \"REGEX\";\n  Operators[\"IS_NOT_NULL\"] = \"IS_NOT_NULL\";\n  Operators[\"IS_NULL\"] = \"IS_NULL\";\n  Operators[\"LATEST_PARTITION\"] = \"LATEST_PARTITION\";\n  Operators[\"IS_TRUE\"] = \"IS_TRUE\";\n  Operators[\"IS_FALSE\"] = \"IS_FALSE\";\n  Operators[\"TEMPORAL_RANGE\"] = \"TEMPORAL_RANGE\";\n})(Operators || (Operators = {}));\nexport const OPERATOR_ENUM_TO_OPERATOR_TYPE = {\n  [Operators.EQUALS]: { display: t('Equal to (=)'), operation: '==' },\n  [Operators.NOT_EQUALS]: { display: t('Not equal to (â‰ )'), operation: '!=' },\n  [Operators.LESS_THAN]: { display: t('Less than (<)'), operation: '<' },\n  [Operators.LESS_THAN_OR_EQUAL]: {\n    display: t('Less or equal (<=)'),\n    operation: '<=' },\n\n  [Operators.GREATER_THAN]: { display: t('Greater than (>)'), operation: '>' },\n  [Operators.GREATER_THAN_OR_EQUAL]: {\n    display: t('Greater or equal (>=)'),\n    operation: '>=' },\n\n  [Operators.IN]: { display: t('In'), operation: 'IN' },\n  [Operators.NOT_IN]: { display: t('Not in'), operation: 'NOT IN' },\n  [Operators.LIKE]: { display: t('Like'), operation: 'LIKE' },\n  [Operators.ILIKE]: {\n    display: t('Like (case insensitive)'),\n    operation: 'ILIKE' },\n\n  [Operators.REGEX]: { display: t('Regex'), operation: 'REGEX' },\n  [Operators.IS_NOT_NULL]: {\n    display: t('Is not null'),\n    operation: 'IS NOT NULL' },\n\n  [Operators.IS_NULL]: { display: t('Is null'), operation: 'IS NULL' },\n  [Operators.LATEST_PARTITION]: {\n    display: t('use latest_partition template'),\n    operation: 'LATEST PARTITION' },\n\n  [Operators.IS_TRUE]: { display: t('Is true'), operation: '==' },\n  [Operators.IS_FALSE]: { display: t('Is false'), operation: '==' },\n  [Operators.TEMPORAL_RANGE]: {\n    display: t('TEMPORAL_RANGE'),\n    operation: 'TEMPORAL_RANGE' } };\n\n\nexport const OPERATORS_OPTIONS = Object.values(Operators);\nexport const TABLE_ONLY_OPERATORS = [Operators.LIKE, Operators.ILIKE];\nexport const HAVING_OPERATORS = [\nOperators.EQUALS,\nOperators.NOT_EQUALS,\nOperators.LESS_THAN,\nOperators.LESS_THAN_OR_EQUAL,\nOperators.GREATER_THAN,\nOperators.GREATER_THAN_OR_EQUAL];\n\nexport const MULTI_OPERATORS = new Set([Operators.IN, Operators.NOT_IN]);\n// CUSTOM_OPERATORS will show operator in simple mode,\n// but will generate customized sqlExpression\nexport const CUSTOM_OPERATORS = new Set([\nOperators.LATEST_PARTITION,\nOperators.TEMPORAL_RANGE]);\n\n// DISABLE_INPUT_OPERATORS will disable filter value input\n// in adhocFilter control\nexport const DISABLE_INPUT_OPERATORS = [\nOperators.IS_NOT_NULL,\nOperators.IS_NULL,\nOperators.LATEST_PARTITION,\nOperators.IS_TRUE,\nOperators.IS_FALSE];\n\nexport const sqlaAutoGeneratedMetricNameRegex = /^(sum|min|max|avg|count|count_distinct)__.*$/i;\nexport const sqlaAutoGeneratedMetricRegex = /^(LONG|DOUBLE|FLOAT)?(SUM|AVG|MAX|MIN|COUNT)\\([A-Z0-9_.\"]*\\)$/i;\nexport const druidAutoGeneratedMetricRegex = /^(LONG|DOUBLE|FLOAT)?(SUM|MAX|MIN|COUNT)\\([A-Z0-9_.\"]*\\)$/i;\nexport const TIME_FILTER_LABELS = {\n  time_range: t('Time range'),\n  granularity_sqla: t('Time column'),\n  time_grain_sqla: t('Time grain'),\n  granularity: t('Time granularity') };\n\nexport const FILTER_CONFIG_ATTRIBUTES = {\n  CLEARABLE: 'clearable',\n  DEFAULT_VALUE: 'defaultValue',\n  MULTIPLE: 'multiple',\n  SEARCH_ALL_OPTIONS: 'searchAllOptions',\n  SORT_ASCENDING: 'asc',\n  SORT_METRIC: 'metric' };\n\nexport const FILTER_OPTIONS_LIMIT = 1000;\n/**\n * Map control names to their key in extra_filters\n */\nexport const TIME_FILTER_MAP = {\n  time_range: '__time_range',\n  granularity_sqla: '__time_col',\n  time_grain_sqla: '__time_grain',\n  granularity: '__granularity' };\n\nexport const POPOVER_INITIAL_HEIGHT = 240;\nexport const POPOVER_INITIAL_WIDTH = 320;\nexport const UNSAVED_CHART_ID = 0;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(AGGREGATES, \"AGGREGATES\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");reactHotLoader.register(AGGREGATES_OPTIONS, \"AGGREGATES_OPTIONS\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");reactHotLoader.register(Operators, \"Operators\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");reactHotLoader.register(OPERATOR_ENUM_TO_OPERATOR_TYPE, \"OPERATOR_ENUM_TO_OPERATOR_TYPE\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");reactHotLoader.register(OPERATORS_OPTIONS, \"OPERATORS_OPTIONS\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");reactHotLoader.register(TABLE_ONLY_OPERATORS, \"TABLE_ONLY_OPERATORS\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");reactHotLoader.register(HAVING_OPERATORS, \"HAVING_OPERATORS\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");reactHotLoader.register(MULTI_OPERATORS, \"MULTI_OPERATORS\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");reactHotLoader.register(CUSTOM_OPERATORS, \"CUSTOM_OPERATORS\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");reactHotLoader.register(DISABLE_INPUT_OPERATORS, \"DISABLE_INPUT_OPERATORS\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");reactHotLoader.register(sqlaAutoGeneratedMetricNameRegex, \"sqlaAutoGeneratedMetricNameRegex\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");reactHotLoader.register(sqlaAutoGeneratedMetricRegex, \"sqlaAutoGeneratedMetricRegex\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");reactHotLoader.register(druidAutoGeneratedMetricRegex, \"druidAutoGeneratedMetricRegex\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");reactHotLoader.register(TIME_FILTER_LABELS, \"TIME_FILTER_LABELS\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");reactHotLoader.register(FILTER_CONFIG_ATTRIBUTES, \"FILTER_CONFIG_ATTRIBUTES\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");reactHotLoader.register(FILTER_OPTIONS_LIMIT, \"FILTER_OPTIONS_LIMIT\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");reactHotLoader.register(TIME_FILTER_MAP, \"TIME_FILTER_MAP\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");reactHotLoader.register(POPOVER_INITIAL_HEIGHT, \"POPOVER_INITIAL_HEIGHT\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");reactHotLoader.register(POPOVER_INITIAL_WIDTH, \"POPOVER_INITIAL_WIDTH\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");reactHotLoader.register(UNSAVED_CHART_ID, \"UNSAVED_CHART_ID\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["t","AGGREGATES","AVG","COUNT","COUNT_DISTINCT","MAX","MIN","SUM","AGGREGATES_OPTIONS","Object","values","Operators","OPERATOR_ENUM_TO_OPERATOR_TYPE","EQUALS","display","operation","NOT_EQUALS","LESS_THAN","LESS_THAN_OR_EQUAL","GREATER_THAN","GREATER_THAN_OR_EQUAL","IN","NOT_IN","LIKE","ILIKE","REGEX","IS_NOT_NULL","IS_NULL","LATEST_PARTITION","IS_TRUE","IS_FALSE","TEMPORAL_RANGE","OPERATORS_OPTIONS","TABLE_ONLY_OPERATORS","HAVING_OPERATORS","MULTI_OPERATORS","Set","CUSTOM_OPERATORS","DISABLE_INPUT_OPERATORS","sqlaAutoGeneratedMetricNameRegex","sqlaAutoGeneratedMetricRegex","druidAutoGeneratedMetricRegex","TIME_FILTER_LABELS","time_range","granularity_sqla","time_grain_sqla","granularity","FILTER_CONFIG_ATTRIBUTES","CLEARABLE","DEFAULT_VALUE","MULTIPLE","SEARCH_ALL_OPTIONS","SORT_ASCENDING","SORT_METRIC","FILTER_OPTIONS_LIMIT","TIME_FILTER_MAP","POPOVER_INITIAL_HEIGHT","POPOVER_INITIAL_WIDTH","UNSAVED_CHART_ID"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/constants.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\n\nexport const AGGREGATES = {\n  AVG: 'AVG',\n  COUNT: 'COUNT',\n  COUNT_DISTINCT: 'COUNT_DISTINCT',\n  MAX: 'MAX',\n  MIN: 'MIN',\n  SUM: 'SUM',\n};\nexport const AGGREGATES_OPTIONS = Object.values(AGGREGATES);\n\nexport enum Operators {\n  EQUALS = 'EQUALS',\n  NOT_EQUALS = 'NOT_EQUALS',\n  LESS_THAN = 'LESS_THAN',\n  LESS_THAN_OR_EQUAL = 'LESS_THAN_OR_EQUAL',\n  GREATER_THAN = 'GREATER_THAN',\n  GREATER_THAN_OR_EQUAL = 'GREATER_THAN_OR_EQUAL',\n  IN = 'IN',\n  NOT_IN = 'NOT_IN',\n  LIKE = 'LIKE',\n  ILIKE = 'ILIKE',\n  REGEX = 'REGEX',\n  IS_NOT_NULL = 'IS_NOT_NULL',\n  IS_NULL = 'IS_NULL',\n  LATEST_PARTITION = 'LATEST_PARTITION',\n  IS_TRUE = 'IS_TRUE',\n  IS_FALSE = 'IS_FALSE',\n  TEMPORAL_RANGE = 'TEMPORAL_RANGE',\n}\n\nexport interface OperatorType {\n  display: string;\n  operation: string;\n}\n\nexport const OPERATOR_ENUM_TO_OPERATOR_TYPE: {\n  [key in Operators]: OperatorType;\n} = {\n  [Operators.EQUALS]: { display: t('Equal to (=)'), operation: '==' },\n  [Operators.NOT_EQUALS]: { display: t('Not equal to (â‰ )'), operation: '!=' },\n  [Operators.LESS_THAN]: { display: t('Less than (<)'), operation: '<' },\n  [Operators.LESS_THAN_OR_EQUAL]: {\n    display: t('Less or equal (<=)'),\n    operation: '<=',\n  },\n  [Operators.GREATER_THAN]: { display: t('Greater than (>)'), operation: '>' },\n  [Operators.GREATER_THAN_OR_EQUAL]: {\n    display: t('Greater or equal (>=)'),\n    operation: '>=',\n  },\n  [Operators.IN]: { display: t('In'), operation: 'IN' },\n  [Operators.NOT_IN]: { display: t('Not in'), operation: 'NOT IN' },\n  [Operators.LIKE]: { display: t('Like'), operation: 'LIKE' },\n  [Operators.ILIKE]: {\n    display: t('Like (case insensitive)'),\n    operation: 'ILIKE',\n  },\n  [Operators.REGEX]: { display: t('Regex'), operation: 'REGEX' },\n  [Operators.IS_NOT_NULL]: {\n    display: t('Is not null'),\n    operation: 'IS NOT NULL',\n  },\n  [Operators.IS_NULL]: { display: t('Is null'), operation: 'IS NULL' },\n  [Operators.LATEST_PARTITION]: {\n    display: t('use latest_partition template'),\n    operation: 'LATEST PARTITION',\n  },\n  [Operators.IS_TRUE]: { display: t('Is true'), operation: '==' },\n  [Operators.IS_FALSE]: { display: t('Is false'), operation: '==' },\n  [Operators.TEMPORAL_RANGE]: {\n    display: t('TEMPORAL_RANGE'),\n    operation: 'TEMPORAL_RANGE',\n  },\n};\n\nexport const OPERATORS_OPTIONS = Object.values(Operators) as Operators[];\n\nexport const TABLE_ONLY_OPERATORS = [Operators.LIKE, Operators.ILIKE];\nexport const HAVING_OPERATORS = [\n  Operators.EQUALS,\n  Operators.NOT_EQUALS,\n  Operators.LESS_THAN,\n  Operators.LESS_THAN_OR_EQUAL,\n  Operators.GREATER_THAN,\n  Operators.GREATER_THAN_OR_EQUAL,\n];\nexport const MULTI_OPERATORS = new Set([Operators.IN, Operators.NOT_IN]);\n// CUSTOM_OPERATORS will show operator in simple mode,\n// but will generate customized sqlExpression\nexport const CUSTOM_OPERATORS = new Set([\n  Operators.LATEST_PARTITION,\n  Operators.TEMPORAL_RANGE,\n]);\n// DISABLE_INPUT_OPERATORS will disable filter value input\n// in adhocFilter control\nexport const DISABLE_INPUT_OPERATORS = [\n  Operators.IS_NOT_NULL,\n  Operators.IS_NULL,\n  Operators.LATEST_PARTITION,\n  Operators.IS_TRUE,\n  Operators.IS_FALSE,\n];\n\nexport const sqlaAutoGeneratedMetricNameRegex =\n  /^(sum|min|max|avg|count|count_distinct)__.*$/i;\nexport const sqlaAutoGeneratedMetricRegex =\n  /^(LONG|DOUBLE|FLOAT)?(SUM|AVG|MAX|MIN|COUNT)\\([A-Z0-9_.\"]*\\)$/i;\nexport const druidAutoGeneratedMetricRegex =\n  /^(LONG|DOUBLE|FLOAT)?(SUM|MAX|MIN|COUNT)\\([A-Z0-9_.\"]*\\)$/i;\n\nexport const TIME_FILTER_LABELS = {\n  time_range: t('Time range'),\n  granularity_sqla: t('Time column'),\n  time_grain_sqla: t('Time grain'),\n  granularity: t('Time granularity'),\n};\n\nexport const FILTER_CONFIG_ATTRIBUTES = {\n  CLEARABLE: 'clearable',\n  DEFAULT_VALUE: 'defaultValue',\n  MULTIPLE: 'multiple',\n  SEARCH_ALL_OPTIONS: 'searchAllOptions',\n  SORT_ASCENDING: 'asc',\n  SORT_METRIC: 'metric',\n};\n\nexport const FILTER_OPTIONS_LIMIT = 1000;\n\n/**\n * Map control names to their key in extra_filters\n */\nexport const TIME_FILTER_MAP = {\n  time_range: '__time_range',\n  granularity_sqla: '__time_col',\n  time_grain_sqla: '__time_grain',\n  granularity: '__granularity',\n};\n\nexport const POPOVER_INITIAL_HEIGHT = 240;\nexport const POPOVER_INITIAL_WIDTH = 320;\nexport const UNSAVED_CHART_ID = 0;\n"]},"metadata":{},"sourceType":"module"}