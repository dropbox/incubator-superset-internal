{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport { css, styled, t } from '@superset-ui/core';\nimport { useUiConfig } from 'src/components/UiConfigContext';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { useSelector } from 'react-redux';\nimport EditableTitle from 'src/components/EditableTitle';\nimport SliceHeaderControls from 'src/dashboard/components/SliceHeaderControls';\nimport FiltersBadge from 'src/dashboard/components/FiltersBadge';\nimport Icons from 'src/components/Icons';\nimport { getSliceHeaderTooltip } from 'src/dashboard/util/getSliceHeaderTooltip';\nimport { DashboardPageIdContext } from 'src/dashboard/containers/DashboardPage';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst annotationsLoading = t('Annotation layers are still loading.');\nconst annotationsError = t('One ore more annotation layers failed loading.');\nconst CrossFilterIcon = styled(Icons.ApartmentOutlined)`\n  ${(_ref) => {let { theme } = _ref;return `\n    cursor: default;\n    color: ${theme.colors.primary.base};\n    line-height: 1.8;\n  `;}}\n`;\nconst ChartHeaderStyles = styled.div`\n  ${(_ref2) => {let { theme } = _ref2;return css`\n    font-size: ${theme.typography.sizes.l}px;\n    font-weight: ${theme.typography.weights.bold};\n    margin-bottom: ${theme.gridUnit}px;\n    display: flex;\n    max-width: 100%;\n    align-items: flex-start;\n    min-height: 0;\n\n    & > .header-title {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      max-width: 100%;\n      flex-grow: 1;\n      display: -webkit-box;\n      -webkit-line-clamp: 2;\n      -webkit-box-orient: vertical;\n\n      & > span.ant-tooltip-open {\n        display: inline;\n      }\n    }\n\n    & > .header-controls {\n      display: flex;\n      align-items: center;\n      height: 24px;\n\n      & > * {\n        margin-left: ${theme.gridUnit * 2}px;\n      }\n    }\n\n    .dropdown.btn-group {\n      pointer-events: none;\n      vertical-align: top;\n      & > * {\n        pointer-events: auto;\n      }\n    }\n\n    .dropdown-toggle.btn.btn-default {\n      background: none;\n      border: none;\n      box-shadow: none;\n    }\n\n    .dropdown-menu.dropdown-menu-right {\n      top: ${theme.gridUnit * 5}px;\n    }\n\n    .divider {\n      margin: ${theme.gridUnit}px 0;\n    }\n\n    .refresh-tooltip {\n      display: block;\n      height: ${theme.gridUnit * 4}px;\n      margin: ${theme.gridUnit}px 0;\n      color: ${theme.colors.text.label};\n    }\n  `;}}\n`;\nconst SliceHeader = (_ref3) => {let { innerRef = null, forceRefresh = () => ({}), updateSliceName = () => ({}), toggleExpandSlice = () => ({}), logExploreChart = () => ({}), logEvent, exportCSV = () => ({}), exportXLSX = () => ({}), editMode = false, annotationQuery = {}, annotationError = {}, cachedDttm = null, updatedDttm = null, isCached = [], isExpanded = false, sliceName = '', supersetCanExplore = false, supersetCanShare = false, supersetCanCSV = false, sliceCanEdit = false, exportFullCSV, slice, componentId, dashboardId, addSuccessToast, addDangerToast, handleToggleFullSize, isFullSize, chartStatus, formData, width, height } = _ref3;\n  const uiConfig = useUiConfig();\n  const dashboardPageId = useContext(DashboardPageIdContext);\n  const [headerTooltip, setHeaderTooltip] = useState(null);\n  const headerRef = useRef(null);\n  // TODO: change to indicator field after it will be implemented\n  const crossFilterValue = useSelector((state) => {var _state$dataMask$slice, _state$dataMask$slice2;return (_state$dataMask$slice = state.dataMask[slice == null ? void 0 : slice.slice_id]) == null ? void 0 : (_state$dataMask$slice2 = _state$dataMask$slice.filterState) == null ? void 0 : _state$dataMask$slice2.value;});\n  const isCrossFiltersEnabled = useSelector((_ref4) => {let { dashboardInfo } = _ref4;return dashboardInfo.crossFiltersEnabled;});\n  const canExplore = !editMode && supersetCanExplore;\n  useEffect(() => {\n    const headerElement = headerRef.current;\n    if (canExplore) {\n      setHeaderTooltip(getSliceHeaderTooltip(sliceName));\n    } else\n    if (headerElement && (\n    headerElement.scrollWidth > headerElement.offsetWidth ||\n    headerElement.scrollHeight > headerElement.offsetHeight)) {\n      setHeaderTooltip(sliceName != null ? sliceName : null);\n    } else\n    {\n      setHeaderTooltip(null);\n    }\n  }, [sliceName, width, height, canExplore]);\n  const exploreUrl = `/explore/?dashboard_page_id=${dashboardPageId}&slice_id=${slice.slice_id}`;\n  return ___EmotionJSX(ChartHeaderStyles, { ref: innerRef },\n  ___EmotionJSX(\"div\", { className: \"header-title\", ref: headerRef },\n  ___EmotionJSX(Tooltip, { title: headerTooltip },\n  ___EmotionJSX(EditableTitle, { title: sliceName || (\n    editMode ?\n    '---' // this makes an empty title clickable\n    : ''), canEdit: editMode, onSaveTitle: updateSliceName, showTooltip: false, url: canExplore ? exploreUrl : undefined })),\n\n  !!Object.values(annotationQuery).length && ___EmotionJSX(Tooltip, { id: \"annotations-loading-tooltip\", placement: \"top\", title: annotationsLoading },\n  ___EmotionJSX(\"i\", { role: \"img\", \"aria-label\": annotationsLoading, className: \"fa fa-refresh warning\" })),\n\n  !!Object.values(annotationError).length && ___EmotionJSX(Tooltip, { id: \"annotation-errors-tooltip\", placement: \"top\", title: annotationsError },\n  ___EmotionJSX(\"i\", { role: \"img\", \"aria-label\": annotationsError, className: \"fa fa-exclamation-circle danger\" }))),\n\n\n  ___EmotionJSX(\"div\", { className: \"header-controls\" },\n  !editMode && ___EmotionJSX(React.Fragment, null,\n  crossFilterValue && ___EmotionJSX(Tooltip, { placement: \"top\", title: t('This chart applies cross-filters to charts whose datasets contain columns with the same name.') },\n  ___EmotionJSX(CrossFilterIcon, { iconSize: \"m\" })),\n\n  !uiConfig.hideChartControls && ___EmotionJSX(FiltersBadge, { chartId: slice.slice_id }),\n  !uiConfig.hideChartControls && ___EmotionJSX(SliceHeaderControls, { slice: slice, isCached: isCached, isExpanded: isExpanded, cachedDttm: cachedDttm, updatedDttm: updatedDttm, toggleExpandSlice: toggleExpandSlice, forceRefresh: forceRefresh, logExploreChart: logExploreChart, logEvent: logEvent, exportCSV: exportCSV, exportFullCSV: exportFullCSV, exportXLSX: exportXLSX, supersetCanExplore: supersetCanExplore, supersetCanShare: supersetCanShare, supersetCanCSV: supersetCanCSV, sliceCanEdit: sliceCanEdit, componentId: componentId, dashboardId: dashboardId, addSuccessToast: addSuccessToast, addDangerToast: addDangerToast, handleToggleFullSize: handleToggleFullSize, isFullSize: isFullSize, isDescriptionExpanded: isExpanded, chartStatus: chartStatus, formData: formData, exploreUrl: exploreUrl, crossFiltersEnabled: isCrossFiltersEnabled }))));\n\n\n\n};\nexport default SliceHeader;","map":{"version":3,"mappings":"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","names":["React","useContext","useEffect","useRef","useState","css","styled","t","useUiConfig","Tooltip","useSelector","EditableTitle","SliceHeaderControls","FiltersBadge","Icons","getSliceHeaderTooltip","DashboardPageIdContext","annotationsLoading","annotationsError","CrossFilterIcon","ApartmentOutlined","theme","colors","primary","base","ChartHeaderStyles","div","typography","sizes","l","weights","bold","gridUnit","text","label","SliceHeader","innerRef","forceRefresh","updateSliceName","toggleExpandSlice","logExploreChart","logEvent","exportCSV","exportXLSX","editMode","annotationQuery","annotationError","cachedDttm","updatedDttm","isCached","isExpanded","sliceName","supersetCanExplore","supersetCanShare","supersetCanCSV","sliceCanEdit","exportFullCSV","slice","componentId","dashboardId","addSuccessToast","addDangerToast","handleToggleFullSize","isFullSize","chartStatus","formData","width","height","uiConfig","dashboardPageId","headerTooltip","setHeaderTooltip","headerRef","crossFilterValue","state","dataMask","slice_id","filterState","value","isCrossFiltersEnabled","dashboardInfo","crossFiltersEnabled","canExplore","headerElement","current","scrollWidth","offsetWidth","scrollHeight","offsetHeight","exploreUrl","undefined","Object","values","length","hideChartControls"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/SliceHeader/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  FC,\n  ReactNode,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { css, styled, t } from '@superset-ui/core';\nimport { useUiConfig } from 'src/components/UiConfigContext';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { useSelector } from 'react-redux';\nimport EditableTitle from 'src/components/EditableTitle';\nimport SliceHeaderControls, {\n  SliceHeaderControlsProps,\n} from 'src/dashboard/components/SliceHeaderControls';\nimport FiltersBadge from 'src/dashboard/components/FiltersBadge';\nimport Icons from 'src/components/Icons';\nimport { RootState } from 'src/dashboard/types';\nimport { getSliceHeaderTooltip } from 'src/dashboard/util/getSliceHeaderTooltip';\nimport { DashboardPageIdContext } from 'src/dashboard/containers/DashboardPage';\n\ntype SliceHeaderProps = SliceHeaderControlsProps & {\n  innerRef?: string;\n  updateSliceName?: (arg0: string) => void;\n  editMode?: boolean;\n  annotationQuery?: object;\n  annotationError?: object;\n  sliceName?: string;\n  filters: object;\n  handleToggleFullSize: () => void;\n  formData: object;\n  width: number;\n  height: number;\n};\n\nconst annotationsLoading = t('Annotation layers are still loading.');\nconst annotationsError = t('One ore more annotation layers failed loading.');\nconst CrossFilterIcon = styled(Icons.ApartmentOutlined)`\n  ${({ theme }) => `\n    cursor: default;\n    color: ${theme.colors.primary.base};\n    line-height: 1.8;\n  `}\n`;\n\nconst ChartHeaderStyles = styled.div`\n  ${({ theme }) => css`\n    font-size: ${theme.typography.sizes.l}px;\n    font-weight: ${theme.typography.weights.bold};\n    margin-bottom: ${theme.gridUnit}px;\n    display: flex;\n    max-width: 100%;\n    align-items: flex-start;\n    min-height: 0;\n\n    & > .header-title {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      max-width: 100%;\n      flex-grow: 1;\n      display: -webkit-box;\n      -webkit-line-clamp: 2;\n      -webkit-box-orient: vertical;\n\n      & > span.ant-tooltip-open {\n        display: inline;\n      }\n    }\n\n    & > .header-controls {\n      display: flex;\n      align-items: center;\n      height: 24px;\n\n      & > * {\n        margin-left: ${theme.gridUnit * 2}px;\n      }\n    }\n\n    .dropdown.btn-group {\n      pointer-events: none;\n      vertical-align: top;\n      & > * {\n        pointer-events: auto;\n      }\n    }\n\n    .dropdown-toggle.btn.btn-default {\n      background: none;\n      border: none;\n      box-shadow: none;\n    }\n\n    .dropdown-menu.dropdown-menu-right {\n      top: ${theme.gridUnit * 5}px;\n    }\n\n    .divider {\n      margin: ${theme.gridUnit}px 0;\n    }\n\n    .refresh-tooltip {\n      display: block;\n      height: ${theme.gridUnit * 4}px;\n      margin: ${theme.gridUnit}px 0;\n      color: ${theme.colors.text.label};\n    }\n  `}\n`;\n\nconst SliceHeader: FC<SliceHeaderProps> = ({\n  innerRef = null,\n  forceRefresh = () => ({}),\n  updateSliceName = () => ({}),\n  toggleExpandSlice = () => ({}),\n  logExploreChart = () => ({}),\n  logEvent,\n  exportCSV = () => ({}),\n  exportXLSX = () => ({}),\n  editMode = false,\n  annotationQuery = {},\n  annotationError = {},\n  cachedDttm = null,\n  updatedDttm = null,\n  isCached = [],\n  isExpanded = false,\n  sliceName = '',\n  supersetCanExplore = false,\n  supersetCanShare = false,\n  supersetCanCSV = false,\n  sliceCanEdit = false,\n  exportFullCSV,\n  slice,\n  componentId,\n  dashboardId,\n  addSuccessToast,\n  addDangerToast,\n  handleToggleFullSize,\n  isFullSize,\n  chartStatus,\n  formData,\n  width,\n  height,\n}) => {\n  const uiConfig = useUiConfig();\n  const dashboardPageId = useContext(DashboardPageIdContext);\n  const [headerTooltip, setHeaderTooltip] = useState<ReactNode | null>(null);\n  const headerRef = useRef<HTMLDivElement>(null);\n  // TODO: change to indicator field after it will be implemented\n  const crossFilterValue = useSelector<RootState, any>(\n    state => state.dataMask[slice?.slice_id]?.filterState?.value,\n  );\n  const isCrossFiltersEnabled = useSelector<RootState, boolean>(\n    ({ dashboardInfo }) => dashboardInfo.crossFiltersEnabled,\n  );\n\n  const canExplore = !editMode && supersetCanExplore;\n\n  useEffect(() => {\n    const headerElement = headerRef.current;\n    if (canExplore) {\n      setHeaderTooltip(getSliceHeaderTooltip(sliceName));\n    } else if (\n      headerElement &&\n      (headerElement.scrollWidth > headerElement.offsetWidth ||\n        headerElement.scrollHeight > headerElement.offsetHeight)\n    ) {\n      setHeaderTooltip(sliceName ?? null);\n    } else {\n      setHeaderTooltip(null);\n    }\n  }, [sliceName, width, height, canExplore]);\n\n  const exploreUrl = `/explore/?dashboard_page_id=${dashboardPageId}&slice_id=${slice.slice_id}`;\n\n  return (\n    <ChartHeaderStyles data-test=\"slice-header\" ref={innerRef}>\n      <div className=\"header-title\" ref={headerRef}>\n        <Tooltip title={headerTooltip}>\n          <EditableTitle\n            title={\n              sliceName ||\n              (editMode\n                ? '---' // this makes an empty title clickable\n                : '')\n            }\n            canEdit={editMode}\n            onSaveTitle={updateSliceName}\n            showTooltip={false}\n            url={canExplore ? exploreUrl : undefined}\n          />\n        </Tooltip>\n        {!!Object.values(annotationQuery).length && (\n          <Tooltip\n            id=\"annotations-loading-tooltip\"\n            placement=\"top\"\n            title={annotationsLoading}\n          >\n            <i\n              role=\"img\"\n              aria-label={annotationsLoading}\n              className=\"fa fa-refresh warning\"\n            />\n          </Tooltip>\n        )}\n        {!!Object.values(annotationError).length && (\n          <Tooltip\n            id=\"annotation-errors-tooltip\"\n            placement=\"top\"\n            title={annotationsError}\n          >\n            <i\n              role=\"img\"\n              aria-label={annotationsError}\n              className=\"fa fa-exclamation-circle danger\"\n            />\n          </Tooltip>\n        )}\n      </div>\n      <div className=\"header-controls\">\n        {!editMode && (\n          <>\n            {crossFilterValue && (\n              <Tooltip\n                placement=\"top\"\n                title={t(\n                  'This chart applies cross-filters to charts whose datasets contain columns with the same name.',\n                )}\n              >\n                <CrossFilterIcon iconSize=\"m\" />\n              </Tooltip>\n            )}\n            {!uiConfig.hideChartControls && (\n              <FiltersBadge chartId={slice.slice_id} />\n            )}\n            {!uiConfig.hideChartControls && (\n              <SliceHeaderControls\n                slice={slice}\n                isCached={isCached}\n                isExpanded={isExpanded}\n                cachedDttm={cachedDttm}\n                updatedDttm={updatedDttm}\n                toggleExpandSlice={toggleExpandSlice}\n                forceRefresh={forceRefresh}\n                logExploreChart={logExploreChart}\n                logEvent={logEvent}\n                exportCSV={exportCSV}\n                exportFullCSV={exportFullCSV}\n                exportXLSX={exportXLSX}\n                supersetCanExplore={supersetCanExplore}\n                supersetCanShare={supersetCanShare}\n                supersetCanCSV={supersetCanCSV}\n                sliceCanEdit={sliceCanEdit}\n                componentId={componentId}\n                dashboardId={dashboardId}\n                addSuccessToast={addSuccessToast}\n                addDangerToast={addDangerToast}\n                handleToggleFullSize={handleToggleFullSize}\n                isFullSize={isFullSize}\n                isDescriptionExpanded={isExpanded}\n                chartStatus={chartStatus}\n                formData={formData}\n                exploreUrl={exploreUrl}\n                crossFiltersEnabled={isCrossFiltersEnabled}\n              />\n            )}\n          </>\n        )}\n      </div>\n    </ChartHeaderStyles>\n  );\n};\n\nexport default SliceHeader;\n"]},"metadata":{},"sourceType":"module"}