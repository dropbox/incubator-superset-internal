{"ast":null,"code":"function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}\n\n/* eslint-disable no-underscore-dangle */\nimport { SyncRegistry, OverwritePolicy } from '@encodable/registry';\nimport ChildRegistry from './ChildRegistry';\nimport wrapColorScheme from './wrappers/wrapColorScheme';\nexport default class ColorSchemeRegistry extends SyncRegistry {\n  constructor(_temp)\n\n\n\n\n  {let { name = 'ColorScheme', overwritePolicy = OverwritePolicy.WARN, setFirstItemAsDefault = true, ...rest } = _temp === void 0 ? {} : _temp;\n    super({\n      name,\n      overwritePolicy,\n      setFirstItemAsDefault,\n      ...rest });\n\n\n    _defineProperty(this, \"categorical\", void 0);\n\n    _defineProperty(this, \"sequential\", void 0);\n\n    _defineProperty(this, \"diverging\", void 0);\n\n    _defineProperty(this, \"wrappers\", void 0);\n\n    this.categorical = new ChildRegistry(this, {\n      name: 'categorical' });\n\n    this.sequential = new ChildRegistry(this, {\n      name: 'sequential' });\n\n    this.diverging = new ChildRegistry(this, {\n      name: 'diverging' });\n\n    this.wrappers = new SyncRegistry();\n  }\n\n  get(schemeId) {\n    const targetKey = schemeId != null ? schemeId : this.getDefaultKey();\n\n    if (typeof targetKey === 'undefined') {\n      return undefined;\n    }\n\n    const value = super.get(targetKey);\n\n    if (typeof value === 'undefined') {\n      return value;\n    }\n\n    if (this.wrappers.has(targetKey)) {\n      return this.wrappers.get(schemeId);\n    }\n\n    const wrapper = wrapColorScheme(value);\n    this.wrappers.registerValue(targetKey, wrapper);\n    return wrapper;\n  }\n\n  clear() {\n    super.clear();\n\n    this.categorical._clear();\n\n    this.sequential._clear();\n\n    this.diverging._clear();\n\n    return this;\n  }\n\n  remove(schemeId) {\n    super.remove(schemeId);\n\n    this.categorical._remove(schemeId);\n\n    this.sequential._remove(schemeId);\n\n    this.diverging._remove(schemeId);\n\n    return this;\n  }\n\n  register(scheme) {\n    if (Array.isArray(scheme)) {\n      scheme.forEach((v) => {\n        this.registerValue(v.id, v);\n      });\n      return this;\n    }\n\n    return this.registerValue(scheme.id, scheme);\n  }\n\n  registerValue(schemeId, scheme) {\n    switch (scheme.type) {\n      case 'categorical':\n        super.registerValue(schemeId, scheme);\n\n        this.categorical._registerValue(schemeId, scheme);\n\n        break;\n\n      case 'sequential':\n        super.registerValue(schemeId, scheme);\n\n        this.sequential._registerValue(schemeId, scheme);\n\n        break;\n\n      case 'diverging':\n        super.registerValue(schemeId, scheme);\n\n        this.diverging._registerValue(schemeId, scheme);\n\n        break;\n\n      default:}\n\n\n    return this;\n  }\n\n  registerLoader(schemeId, loader) {\n    const value = loader();\n\n    switch (value.type) {\n      case 'categorical':\n        super.registerLoader(schemeId, loader);\n\n        this.categorical._registerLoader(schemeId, loader);\n\n        break;\n\n      case 'sequential':\n        super.registerLoader(schemeId, loader);\n\n        this.sequential._registerLoader(schemeId, loader);\n\n        break;\n\n      case 'diverging':\n        super.registerLoader(schemeId, loader);\n\n        this.diverging._registerLoader(schemeId, loader);\n\n        break;\n\n      default:}\n\n\n    return this;\n  }}","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","SyncRegistry","OverwritePolicy","ChildRegistry","wrapColorScheme","ColorSchemeRegistry","constructor","name","overwritePolicy","WARN","setFirstItemAsDefault","rest","categorical","sequential","diverging","wrappers","get","schemeId","targetKey","getDefaultKey","undefined","has","wrapper","registerValue","clear","_clear","remove","_remove","register","scheme","Array","isArray","forEach","v","id","type","_registerValue","registerLoader","loader","_registerLoader"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/node_modules/@encodable/color/esm/scheme/ColorSchemeRegistry.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-underscore-dangle */\nimport { SyncRegistry, OverwritePolicy } from '@encodable/registry';\nimport ChildRegistry from './ChildRegistry';\nimport wrapColorScheme from './wrappers/wrapColorScheme';\nexport default class ColorSchemeRegistry extends SyncRegistry {\n  constructor({\n    name = 'ColorScheme',\n    overwritePolicy = OverwritePolicy.WARN,\n    setFirstItemAsDefault = true,\n    ...rest\n  } = {}) {\n    super({\n      name,\n      overwritePolicy,\n      setFirstItemAsDefault,\n      ...rest\n    });\n\n    _defineProperty(this, \"categorical\", void 0);\n\n    _defineProperty(this, \"sequential\", void 0);\n\n    _defineProperty(this, \"diverging\", void 0);\n\n    _defineProperty(this, \"wrappers\", void 0);\n\n    this.categorical = new ChildRegistry(this, {\n      name: 'categorical'\n    });\n    this.sequential = new ChildRegistry(this, {\n      name: 'sequential'\n    });\n    this.diverging = new ChildRegistry(this, {\n      name: 'diverging'\n    });\n    this.wrappers = new SyncRegistry();\n  }\n\n  get(schemeId) {\n    const targetKey = schemeId != null ? schemeId : this.getDefaultKey();\n\n    if (typeof targetKey === 'undefined') {\n      return undefined;\n    }\n\n    const value = super.get(targetKey);\n\n    if (typeof value === 'undefined') {\n      return value;\n    }\n\n    if (this.wrappers.has(targetKey)) {\n      return this.wrappers.get(schemeId);\n    }\n\n    const wrapper = wrapColorScheme(value);\n    this.wrappers.registerValue(targetKey, wrapper);\n    return wrapper;\n  }\n\n  clear() {\n    super.clear();\n\n    this.categorical._clear();\n\n    this.sequential._clear();\n\n    this.diverging._clear();\n\n    return this;\n  }\n\n  remove(schemeId) {\n    super.remove(schemeId);\n\n    this.categorical._remove(schemeId);\n\n    this.sequential._remove(schemeId);\n\n    this.diverging._remove(schemeId);\n\n    return this;\n  }\n\n  register(scheme) {\n    if (Array.isArray(scheme)) {\n      scheme.forEach(v => {\n        this.registerValue(v.id, v);\n      });\n      return this;\n    }\n\n    return this.registerValue(scheme.id, scheme);\n  }\n\n  registerValue(schemeId, scheme) {\n    switch (scheme.type) {\n      case 'categorical':\n        super.registerValue(schemeId, scheme);\n\n        this.categorical._registerValue(schemeId, scheme);\n\n        break;\n\n      case 'sequential':\n        super.registerValue(schemeId, scheme);\n\n        this.sequential._registerValue(schemeId, scheme);\n\n        break;\n\n      case 'diverging':\n        super.registerValue(schemeId, scheme);\n\n        this.diverging._registerValue(schemeId, scheme);\n\n        break;\n\n      default:\n    }\n\n    return this;\n  }\n\n  registerLoader(schemeId, loader) {\n    const value = loader();\n\n    switch (value.type) {\n      case 'categorical':\n        super.registerLoader(schemeId, loader);\n\n        this.categorical._registerLoader(schemeId, loader);\n\n        break;\n\n      case 'sequential':\n        super.registerLoader(schemeId, loader);\n\n        this.sequential._registerLoader(schemeId, loader);\n\n        break;\n\n      case 'diverging':\n        super.registerLoader(schemeId, loader);\n\n        this.diverging._registerLoader(schemeId, loader);\n\n        break;\n\n      default:\n    }\n\n    return this;\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}