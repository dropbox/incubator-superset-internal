{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useCallback, useRef } from 'react';\nimport { t, useTheme } from '@superset-ui/core';\nimport { Input } from 'src/components/Input';\nimport { Radio } from 'src/components/Radio';\nimport { CronPicker } from 'src/components/CronPicker';\nimport { StyledInputContainer } from '../AlertReportModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const AlertReportCronScheduler = (_ref) => {let { value, onChange } = _ref;\n  const theme = useTheme();\n  const inputRef = useRef(null);\n  const [scheduleFormat, setScheduleFormat] = useState('picker');\n  const handleRadioButtonChange = useCallback((e) => setScheduleFormat(e.target.value), []);\n  const customSetValue = useCallback((newValue) => {var _inputRef$current;\n    onChange(newValue);\n    (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.setValue(newValue);\n  }, [inputRef, onChange]);\n  const handleBlur = useCallback((event) => {\n    onChange(event.target.value);\n  }, [onChange]);\n  const handlePressEnter = useCallback(() => {var _inputRef$current2;\n    onChange(((_inputRef$current2 = inputRef.current) == null ? void 0 : _inputRef$current2.input.value) || '');\n  }, [onChange]);\n  const [error, onError] = useState();\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Radio.Group, { onChange: handleRadioButtonChange, value: scheduleFormat },\n  ___EmotionJSX(\"div\", { className: \"inline-container add-margin\" },\n  ___EmotionJSX(Radio, { \"data-test\": \"picker\", value: \"picker\" }),\n  ___EmotionJSX(CronPicker, { clearButton: false, value: value, setValue: customSetValue, disabled: scheduleFormat !== 'picker', displayError: scheduleFormat === 'picker', onError: onError })),\n\n  ___EmotionJSX(\"div\", { className: \"inline-container add-margin\" },\n  ___EmotionJSX(Radio, { \"data-test\": \"input\", value: \"input\" }),\n  ___EmotionJSX(\"span\", { className: \"input-label\" }, t('CRON Schedule')),\n  ___EmotionJSX(StyledInputContainer, { \"data-test\": \"input-content\", className: \"styled-input\" },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(Input, { type: \"text\", name: \"crontab\", ref: inputRef, style: error ? { borderColor: theme.colors.error.base } : {}, placeholder: t('CRON expression'), disabled: scheduleFormat !== 'input', onBlur: handleBlur, onPressEnter: handlePressEnter }))))));\n\n\n\n\n\n};__signature__(AlertReportCronScheduler, \"useTheme{theme}\\nuseRef{inputRef}\\nuseState{[scheduleFormat, setScheduleFormat]('picker')}\\nuseCallback{handleRadioButtonChange}\\nuseCallback{customSetValue}\\nuseCallback{handleBlur}\\nuseCallback{handlePressEnter}\\nuseState{[error, onError]}\", () => [useTheme]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(AlertReportCronScheduler, \"AlertReportCronScheduler\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/alerts/components/AlertReportCronScheduler.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useState","useCallback","useRef","t","useTheme","Input","Radio","CronPicker","StyledInputContainer","AlertReportCronScheduler","value","onChange","theme","inputRef","scheduleFormat","setScheduleFormat","handleRadioButtonChange","e","target","customSetValue","newValue","current","setValue","handleBlur","event","handlePressEnter","input","error","onError","borderColor","colors","base"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/features/alerts/components/AlertReportCronScheduler.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useCallback, useRef, FocusEvent } from 'react';\nimport { t, useTheme } from '@superset-ui/core';\n\nimport { AntdInput, RadioChangeEvent } from 'src/components';\nimport { Input } from 'src/components/Input';\nimport { Radio } from 'src/components/Radio';\nimport { CronPicker, CronError } from 'src/components/CronPicker';\nimport { StyledInputContainer } from '../AlertReportModal';\n\nexport interface AlertReportCronSchedulerProps {\n  value: string;\n  onChange: (change: string) => any;\n}\n\nexport const AlertReportCronScheduler: React.FC<AlertReportCronSchedulerProps> =\n  ({ value, onChange }) => {\n    const theme = useTheme();\n    const inputRef = useRef<AntdInput>(null);\n    const [scheduleFormat, setScheduleFormat] = useState<'picker' | 'input'>(\n      'picker',\n    );\n\n    const handleRadioButtonChange = useCallback(\n      (e: RadioChangeEvent) => setScheduleFormat(e.target.value),\n      [],\n    );\n\n    const customSetValue = useCallback(\n      (newValue: string) => {\n        onChange(newValue);\n        inputRef.current?.setValue(newValue);\n      },\n      [inputRef, onChange],\n    );\n\n    const handleBlur = useCallback(\n      (event: FocusEvent<HTMLInputElement>) => {\n        onChange(event.target.value);\n      },\n      [onChange],\n    );\n\n    const handlePressEnter = useCallback(() => {\n      onChange(inputRef.current?.input.value || '');\n    }, [onChange]);\n\n    const [error, onError] = useState<CronError>();\n\n    return (\n      <>\n        <Radio.Group onChange={handleRadioButtonChange} value={scheduleFormat}>\n          <div className=\"inline-container add-margin\">\n            <Radio data-test=\"picker\" value=\"picker\" />\n            <CronPicker\n              clearButton={false}\n              value={value}\n              setValue={customSetValue}\n              disabled={scheduleFormat !== 'picker'}\n              displayError={scheduleFormat === 'picker'}\n              onError={onError}\n            />\n          </div>\n          <div className=\"inline-container add-margin\">\n            <Radio data-test=\"input\" value=\"input\" />\n            <span className=\"input-label\">{t('CRON Schedule')}</span>\n            <StyledInputContainer\n              data-test=\"input-content\"\n              className=\"styled-input\"\n            >\n              <div className=\"input-container\">\n                <Input\n                  type=\"text\"\n                  name=\"crontab\"\n                  ref={inputRef}\n                  style={error ? { borderColor: theme.colors.error.base } : {}}\n                  placeholder={t('CRON expression')}\n                  disabled={scheduleFormat !== 'input'}\n                  onBlur={handleBlur}\n                  onPressEnter={handlePressEnter}\n                />\n              </div>\n            </StyledInputContainer>\n          </div>\n        </Radio.Group>\n      </>\n    );\n  };\n"]},"metadata":{},"sourceType":"module"}