{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport { columnChoices, formatSelectOptions, sections, getStandardizedControls, sharedControls } from '@superset-ui/chart-controls';\nconst columnsConfig = {\n  ...sharedControls.columns,\n  label: t('Columns'),\n  description: t('Select the numeric columns to draw the histogram'),\n  mapStateToProps: (state, controlState) => ({\n    ...((sharedControls.columns.mapStateToProps == null ? void 0 : sharedControls.columns.mapStateToProps(state, controlState)) || {}),\n    choices: columnChoices(state.datasource) }),\n\n  validators: [validateNonEmpty] };\n\nconst config = {\n  controlPanelSections: [\n  sections.legacyRegularTime,\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'all_columns_x',\n      config: columnsConfig }],\n\n\n    ['adhoc_filters'],\n    ['row_limit'],\n    ['groupby']] },\n\n\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [\n    ['color_scheme'],\n    [\n    {\n      name: 'link_length',\n      config: {\n        type: 'SelectControl',\n        renderTrigger: true,\n        freeForm: true,\n        label: t('No of Bins'),\n        default: 5,\n        choices: formatSelectOptions([\n        '10',\n        '25',\n        '50',\n        '75',\n        '100',\n        '150',\n        '200',\n        '250']),\n\n        description: t('Select the number of bins for the histogram') } }],\n\n\n\n    [\n    {\n      name: 'x_axis_label',\n      config: {\n        type: 'TextControl',\n        label: t('X Axis Label'),\n        renderTrigger: true,\n        default: '' } }],\n\n\n\n    [\n    {\n      name: 'y_axis_label',\n      config: {\n        type: 'TextControl',\n        label: t('Y Axis Label'),\n        renderTrigger: true,\n        default: '' } }],\n\n\n\n    [\n    {\n      name: 'show_legend',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Legend'),\n        renderTrigger: true,\n        default: true,\n        description: t('Whether to display the legend (toggles)') } }],\n\n\n\n    [\n    {\n      name: 'normalized',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Normalized'),\n        renderTrigger: true,\n        description: t('Whether to normalize the histogram'),\n        default: false } }],\n\n\n\n    [\n    {\n      name: 'cumulative',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Cumulative'),\n        renderTrigger: true,\n        description: t('Whether to make the histogram cumulative'),\n        default: false } }]] }],\n\n\n\n\n\n\n  formDataOverrides: (formData) => ({\n    ...formData,\n    groupby: getStandardizedControls().popAllColumns() }) };const _default =\n\n\nconfig;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(columnsConfig, \"columnsConfig\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-plugin-chart-histogram/src/controlPanel.ts\");reactHotLoader.register(config, \"config\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-plugin-chart-histogram/src/controlPanel.ts\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-plugin-chart-histogram/src/controlPanel.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["t","validateNonEmpty","columnChoices","formatSelectOptions","sections","getStandardizedControls","sharedControls","columnsConfig","columns","label","description","mapStateToProps","state","controlState","choices","datasource","validators","config","controlPanelSections","legacyRegularTime","expanded","controlSetRows","name","type","renderTrigger","freeForm","default","formDataOverrides","formData","groupby","popAllColumns"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-plugin-chart-histogram/src/controlPanel.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport {\n  columnChoices,\n  ControlPanelConfig,\n  ControlPanelState,\n  formatSelectOptions,\n  sections,\n  getStandardizedControls,\n  sharedControls,\n  ControlState,\n} from '@superset-ui/chart-controls';\n\nconst columnsConfig = {\n  ...sharedControls.columns,\n  label: t('Columns'),\n  description: t('Select the numeric columns to draw the histogram'),\n  mapStateToProps: (state: ControlPanelState, controlState: ControlState) => ({\n    ...(sharedControls.columns.mapStateToProps?.(state, controlState) || {}),\n    choices: columnChoices(state.datasource),\n  }),\n  validators: [validateNonEmpty],\n};\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.legacyRegularTime,\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'all_columns_x',\n            config: columnsConfig,\n          },\n        ],\n        ['adhoc_filters'],\n        ['row_limit'],\n        ['groupby'],\n      ],\n    },\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        ['color_scheme'],\n        [\n          {\n            name: 'link_length',\n            config: {\n              type: 'SelectControl',\n              renderTrigger: true,\n              freeForm: true,\n              label: t('No of Bins'),\n              default: 5,\n              choices: formatSelectOptions([\n                '10',\n                '25',\n                '50',\n                '75',\n                '100',\n                '150',\n                '200',\n                '250',\n              ]),\n              description: t('Select the number of bins for the histogram'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'x_axis_label',\n            config: {\n              type: 'TextControl',\n              label: t('X Axis Label'),\n              renderTrigger: true,\n              default: '',\n            },\n          },\n        ],\n        [\n          {\n            name: 'y_axis_label',\n            config: {\n              type: 'TextControl',\n              label: t('Y Axis Label'),\n              renderTrigger: true,\n              default: '',\n            },\n          },\n        ],\n        [\n          {\n            name: 'show_legend',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Legend'),\n              renderTrigger: true,\n              default: true,\n              description: t('Whether to display the legend (toggles)'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'normalized',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Normalized'),\n              renderTrigger: true,\n              description: t('Whether to normalize the histogram'),\n              default: false,\n            },\n          },\n        ],\n        [\n          {\n            name: 'cumulative',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Cumulative'),\n              renderTrigger: true,\n              description: t('Whether to make the histogram cumulative'),\n              default: false,\n            },\n          },\n        ],\n      ],\n    },\n  ],\n  formDataOverrides: formData => ({\n    ...formData,\n    groupby: getStandardizedControls().popAllColumns(),\n  }),\n};\nexport default config;\n"]},"metadata":{},"sourceType":"module"}