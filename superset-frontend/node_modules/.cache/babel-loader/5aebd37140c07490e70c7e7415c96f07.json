{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};export default function mainMetric(savedMetrics) {\n  // Using 'count' as default metric if it exists, otherwise using whatever one shows up first\n  let metric;\n  if (savedMetrics && savedMetrics.length > 0) {\n    savedMetrics.forEach((m) => {\n      if (m.metric_name === 'count') {\n        metric = 'count';\n      }\n    });\n    if (!metric) {\n      metric = savedMetrics[0].metric_name;\n    }\n  }\n  return metric;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(mainMetric, \"mainMetric\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/utils/mainMetric.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"uSAoBA,eAAc,SAAUA,UAAV,CAAqBC,YAArB,EAAmD;EAC/D;EACA,IAAIC,MAAJ;EACA,IAAID,YAAY,IAAIA,YAAY,CAACE,MAAb,GAAsB,CAA1C,EAA6C;IAC3CF,YAAY,CAACG,OAAb,CAAqB,EAAC,KAAG;MACvB,IAAIC,CAAC,CAACC,WAAF,KAAkB,OAAtB,EAA+B;QAC7BJ,MAAM,GAAG,OAAT;MACD;IACF,CAJD;IAKA,IAAI,CAACA,MAAL,EAAa;MACXA,MAAM,GAAGD,YAAY,CAAC,CAAD,CAAZ,CAAgBK,WAAzB;IACD;EACF;EACD,OAAOJ,MAAP;AACD,C,iLAduBF,U","names":["mainMetric","savedMetrics","metric","length","forEach","m","metric_name"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/utils/mainMetric.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Metric } from '../types';\n\nexport default function mainMetric(savedMetrics?: Metric[] | null) {\n  // Using 'count' as default metric if it exists, otherwise using whatever one shows up first\n  let metric;\n  if (savedMetrics && savedMetrics.length > 0) {\n    savedMetrics.forEach(m => {\n      if (m.metric_name === 'count') {\n        metric = 'count';\n      }\n    });\n    if (!metric) {\n      metric = savedMetrics[0].metric_name;\n    }\n  }\n  return metric;\n}\n"]},"metadata":{},"sourceType":"module"}