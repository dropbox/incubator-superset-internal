{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useState } from 'react';\nimport { ScopingModal } from './ScopingModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const useCrossFiltersScopingModal = (initialChartId) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const openModal = useCallback(() => setIsVisible(true), []);\n  const closeModal = useCallback(() => setIsVisible(false), []);\n  return [\n  openModal,\n  isVisible ? ___EmotionJSX(ScopingModal, { initialChartId: initialChartId, closeModal: closeModal, isVisible: isVisible }) : null];\n\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAA8BC,WAA9B,EAA2CC,QAA3C,QAA2D,OAA3D;AACA,SAASC,YAAT,QAA6B,gBAA7B,C;AAEA,OAAO,MAAMC,2BAA2B,GAAG,CACzCC,cADyC,KAEJ;EACrC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;EAEA,MAAMM,SAAS,GAAGP,WAAW,CAAC,MAAMM,YAAY,CAAC,IAAD,CAAnB,EAA2B,EAA3B,CAA7B;EACA,MAAME,UAAU,GAAGR,WAAW,CAAC,MAAMM,YAAY,CAAC,KAAD,CAAnB,EAA4B,EAA5B,CAA9B;EAEA,OAAO;EACLC,SADK;EAELF,SAAS,GACP,cAAC,YAAD,IACE,cAAc,EAAED,cADlB,EAEE,UAAU,EAAEI,UAFd,EAGE,SAAS,EAAEH,SAHb,GADO,GAML,IARC,CAAP;;AAUD,CAlBM","names":["React","useCallback","useState","ScopingModal","useCrossFiltersScopingModal","initialChartId","isVisible","setIsVisible","openModal","closeModal"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/CrossFilters/ScopingModal/useCrossFiltersScopingModal.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ReactElement, useCallback, useState } from 'react';\nimport { ScopingModal } from './ScopingModal';\n\nexport const useCrossFiltersScopingModal = (\n  initialChartId?: number,\n): [() => void, ReactElement | null] => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const openModal = useCallback(() => setIsVisible(true), []);\n  const closeModal = useCallback(() => setIsVisible(false), []);\n\n  return [\n    openModal,\n    isVisible ? (\n      <ScopingModal\n        initialChartId={initialChartId}\n        closeModal={closeModal}\n        isVisible={isVisible}\n      />\n    ) : null,\n  ];\n};\n"]},"metadata":{},"sourceType":"module"}