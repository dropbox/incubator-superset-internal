{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Menu } from 'src/components/Menu';\nimport { Behavior, css, ensureIsArray, getChartMetadataRegistry, t, useTheme } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { Input } from 'src/components/Input';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport Loading from 'src/components/Loading';\nimport { cachedSupersetGet, supersetGetCache } from 'src/utils/cachedSupersetGet';\nimport { useVerboseMap } from 'src/hooks/apiResources/datasets';\nimport { MenuItemTooltip } from '../DisabledMenuItemTooltip';\nimport DrillByModal from './DrillByModal';\nimport { getSubmenuYOffset } from '../utils';\nimport { MenuItemWithTruncation } from '../MenuItemWithTruncation';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst MAX_SUBMENU_HEIGHT = 200;\nconst SHOW_COLUMNS_SEARCH_THRESHOLD = 10;\nconst SEARCH_INPUT_HEIGHT = 48;\nexport const DrillByMenuItems = (_ref) => {let { drillByConfig, formData, contextMenuY = 0, submenuIndex = 0, onSelection = () => {}, onClick = () => {}, excludedColumns, openNewModal = true, ...rest } = _ref;\n  const theme = useTheme();\n  const { addDangerToast } = useToasts();\n  const [isLoadingColumns, setIsLoadingColumns] = useState(true);\n  const [searchInput, setSearchInput] = useState('');\n  const [dataset, setDataset] = useState();\n  const [columns, setColumns] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [currentColumn, setCurrentColumn] = useState();\n  const handleSelection = useCallback((event, column) => {\n    onClick(event);\n    onSelection(column, drillByConfig);\n    setCurrentColumn(column);\n    if (openNewModal) {\n      setShowModal(true);\n    }\n  }, [drillByConfig, onClick, onSelection, openNewModal]);\n  const closeModal = useCallback(() => {\n    setShowModal(false);\n  }, []);\n  useEffect(() => {\n    // Input is displayed only when columns.length > SHOW_COLUMNS_SEARCH_THRESHOLD\n    // Reset search input in case Input gets removed\n    setSearchInput('');\n  }, [columns.length]);\n  const hasDrillBy = ensureIsArray(drillByConfig == null ? void 0 : drillByConfig.filters).length && (\n  drillByConfig == null ? void 0 : drillByConfig.groupbyFieldName);\n  const handlesDimensionContextMenu = useMemo(() => {var _getChartMetadataRegi;return (_getChartMetadataRegi = getChartMetadataRegistry().\n    get(formData.viz_type)) == null ? void 0 : _getChartMetadataRegi.\n    behaviors.find((behavior) => behavior === Behavior.DRILL_BY);}, [formData.viz_type]);\n  const verboseMap = useVerboseMap(dataset);\n  useEffect(() => {\n    if (handlesDimensionContextMenu && hasDrillBy) {\n      const datasetId = formData.datasource.split('__')[0];\n      cachedSupersetGet({\n        endpoint: `/api/v1/dataset/${datasetId}` }).\n\n      then((_ref2) => {let { json: { result } } = _ref2;\n        setDataset(result);\n        setColumns(ensureIsArray(result.columns).\n        filter((column) => column.groupby).\n        filter((column) => {var _context, _drillByConfig$groupb, _ensureIsArray;return !_includesInstanceProperty(_context = ensureIsArray(formData[(_drillByConfig$groupb = drillByConfig.groupbyFieldName) != null ? _drillByConfig$groupb : ''])).call(_context, column.column_name) &&\n          column.column_name !== formData.x_axis && ((_ensureIsArray =\n          ensureIsArray(excludedColumns)) == null ? void 0 : _ensureIsArray.every((excludedCol) => excludedCol.column_name !== column.column_name));}));\n      }).\n      catch(() => {\n        supersetGetCache.delete(`/api/v1/dataset/${datasetId}`);\n        addDangerToast(t('Failed to load dimensions for drill by'));\n      }).\n      finally(() => {\n        setIsLoadingColumns(false);\n      });\n    }\n  }, [\n  addDangerToast,\n  excludedColumns,\n  formData,\n  drillByConfig == null ? void 0 : drillByConfig.groupbyFieldName,\n  handlesDimensionContextMenu,\n  hasDrillBy]);\n\n  const handleInput = useCallback((e) => {var _e$target;\n    e.stopPropagation();\n    const input = e == null ? void 0 : (_e$target = e.target) == null ? void 0 : _e$target.value;\n    setSearchInput(input);\n  }, []);\n  const filteredColumns = useMemo(() => columns.filter((column) => {var _context2;return _includesInstanceProperty(_context2 = (column.verbose_name || column.column_name).\n    toLowerCase()).call(_context2,\n    searchInput.toLowerCase());}), [columns, searchInput]);\n  const submenuYOffset = useMemo(() => getSubmenuYOffset(contextMenuY, filteredColumns.length || 1, submenuIndex, MAX_SUBMENU_HEIGHT, columns.length > SHOW_COLUMNS_SEARCH_THRESHOLD ?\n  SEARCH_INPUT_HEIGHT :\n  0), [contextMenuY, filteredColumns.length, submenuIndex, columns.length]);\n  let tooltip;\n  if (!handlesDimensionContextMenu) {\n    tooltip = t('Drill by is not yet supported for this chart type');\n  } else\n  if (!hasDrillBy) {\n    tooltip = t('Drill by is not available for this data point');\n  }\n  if (!handlesDimensionContextMenu || !hasDrillBy) {\n    return ___EmotionJSX(Menu.Item, _extends({ key: \"drill-by-disabled\", disabled: true }, rest),\n    ___EmotionJSX(\"div\", null,\n    t('Drill by'),\n    ___EmotionJSX(MenuItemTooltip, { title: tooltip })));\n\n\n  }\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Menu.SubMenu, _extends({ title: t('Drill by'), key: \"drill-by-submenu\", popupClassName: \"chart-context-submenu\", popupOffset: [0, submenuYOffset] }, rest),\n  ___EmotionJSX(\"div\", null,\n  columns.length > SHOW_COLUMNS_SEARCH_THRESHOLD && ___EmotionJSX(Input, { prefix: ___EmotionJSX(Icons.Search, { iconSize: \"l\", iconColor: theme.colors.grayscale.light1 }), onChange: handleInput, placeholder: t('Search columns'), value: searchInput, onClick: (e) => {\n      // prevent closing menu when clicking on input\n      e.nativeEvent.stopImmediatePropagation();\n    }, allowClear: true, css: css`\n                width: auto;\n                max-width: 100%;\n                margin: ${theme.gridUnit * 2}px ${theme.gridUnit * 3}px;\n                box-shadow: none;\n              ` }),\n  isLoadingColumns ? ___EmotionJSX(\"div\", { css: css`\n                padding: ${theme.gridUnit * 3}px 0;\n              ` },\n  ___EmotionJSX(Loading, { position: \"inline-centered\" })) :\n  filteredColumns.length ? ___EmotionJSX(\"div\", { css: css`\n                max-height: ${MAX_SUBMENU_HEIGHT}px;\n                overflow: auto;\n              ` },\n  filteredColumns.map((column) => ___EmotionJSX(MenuItemWithTruncation, _extends({ key: `drill-by-item-${column.column_name}`, tooltipText: column.verbose_name || column.column_name }, rest, { onClick: (e) => handleSelection(e, column) }),\n  column.verbose_name || column.column_name))) :\n\n  ___EmotionJSX(Menu.Item, _extends({ disabled: true, key: \"no-drill-by-columns-found\" }, rest),\n  t('No columns found')))),\n\n\n\n  showModal && ___EmotionJSX(DrillByModal, { column: currentColumn, drillByConfig: drillByConfig, formData: formData, onHideModal: closeModal, dataset: { ...dataset, verbose_map: verboseMap } }));\n\n};","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useMemo","useState","Menu","Behavior","css","ensureIsArray","getChartMetadataRegistry","t","useTheme","Icons","Input","useToasts","Loading","cachedSupersetGet","supersetGetCache","useVerboseMap","MenuItemTooltip","DrillByModal","getSubmenuYOffset","MenuItemWithTruncation","MAX_SUBMENU_HEIGHT","SHOW_COLUMNS_SEARCH_THRESHOLD","SEARCH_INPUT_HEIGHT","DrillByMenuItems","drillByConfig","formData","contextMenuY","submenuIndex","onSelection","onClick","excludedColumns","openNewModal","rest","theme","addDangerToast","isLoadingColumns","setIsLoadingColumns","searchInput","setSearchInput","dataset","setDataset","columns","setColumns","showModal","setShowModal","currentColumn","setCurrentColumn","handleSelection","event","column","closeModal","length","hasDrillBy","filters","groupbyFieldName","handlesDimensionContextMenu","get","viz_type","behaviors","find","behavior","DRILL_BY","verboseMap","datasetId","datasource","split","endpoint","then","json","result","filter","groupby","column_name","x_axis","every","excludedCol","catch","delete","finally","handleInput","e","stopPropagation","input","target","value","filteredColumns","verbose_name","toLowerCase","submenuYOffset","tooltip","colors","grayscale","light1","nativeEvent","stopImmediatePropagation","gridUnit","map","verbose_map"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/components/Chart/DrillBy/DrillByMenuItems.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n  ChangeEvent,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { Menu } from 'src/components/Menu';\nimport {\n  BaseFormData,\n  Behavior,\n  Column,\n  ContextMenuFilters,\n  css,\n  ensureIsArray,\n  getChartMetadataRegistry,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { Input } from 'src/components/Input';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport Loading from 'src/components/Loading';\nimport {\n  cachedSupersetGet,\n  supersetGetCache,\n} from 'src/utils/cachedSupersetGet';\nimport { useVerboseMap } from 'src/hooks/apiResources/datasets';\nimport { MenuItemTooltip } from '../DisabledMenuItemTooltip';\nimport DrillByModal from './DrillByModal';\nimport { getSubmenuYOffset } from '../utils';\nimport { MenuItemWithTruncation } from '../MenuItemWithTruncation';\nimport { Dataset } from '../types';\n\nconst MAX_SUBMENU_HEIGHT = 200;\nconst SHOW_COLUMNS_SEARCH_THRESHOLD = 10;\nconst SEARCH_INPUT_HEIGHT = 48;\n\nexport interface DrillByMenuItemsProps {\n  drillByConfig?: ContextMenuFilters['drillBy'];\n  formData: BaseFormData & { [key: string]: any };\n  contextMenuY?: number;\n  submenuIndex?: number;\n  onSelection?: (...args: any) => void;\n  onClick?: (event: MouseEvent) => void;\n  openNewModal?: boolean;\n  excludedColumns?: Column[];\n}\n\nexport const DrillByMenuItems = ({\n  drillByConfig,\n  formData,\n  contextMenuY = 0,\n  submenuIndex = 0,\n  onSelection = () => {},\n  onClick = () => {},\n  excludedColumns,\n  openNewModal = true,\n  ...rest\n}: DrillByMenuItemsProps) => {\n  const theme = useTheme();\n  const { addDangerToast } = useToasts();\n  const [isLoadingColumns, setIsLoadingColumns] = useState(true);\n  const [searchInput, setSearchInput] = useState('');\n  const [dataset, setDataset] = useState<Dataset>();\n  const [columns, setColumns] = useState<Column[]>([]);\n  const [showModal, setShowModal] = useState(false);\n  const [currentColumn, setCurrentColumn] = useState();\n  const handleSelection = useCallback(\n    (event, column) => {\n      onClick(event);\n      onSelection(column, drillByConfig);\n      setCurrentColumn(column);\n      if (openNewModal) {\n        setShowModal(true);\n      }\n    },\n    [drillByConfig, onClick, onSelection, openNewModal],\n  );\n  const closeModal = useCallback(() => {\n    setShowModal(false);\n  }, []);\n\n  useEffect(() => {\n    // Input is displayed only when columns.length > SHOW_COLUMNS_SEARCH_THRESHOLD\n    // Reset search input in case Input gets removed\n    setSearchInput('');\n  }, [columns.length]);\n\n  const hasDrillBy =\n    ensureIsArray(drillByConfig?.filters).length &&\n    drillByConfig?.groupbyFieldName;\n\n  const handlesDimensionContextMenu = useMemo(\n    () =>\n      getChartMetadataRegistry()\n        .get(formData.viz_type)\n        ?.behaviors.find(behavior => behavior === Behavior.DRILL_BY),\n    [formData.viz_type],\n  );\n  const verboseMap = useVerboseMap(dataset);\n\n  useEffect(() => {\n    if (handlesDimensionContextMenu && hasDrillBy) {\n      const datasetId = formData.datasource.split('__')[0];\n      cachedSupersetGet({\n        endpoint: `/api/v1/dataset/${datasetId}`,\n      })\n        .then(({ json: { result } }) => {\n          setDataset(result);\n          setColumns(\n            ensureIsArray(result.columns)\n              .filter(column => column.groupby)\n              .filter(\n                column =>\n                  !ensureIsArray(\n                    formData[drillByConfig.groupbyFieldName ?? ''],\n                  ).includes(column.column_name) &&\n                  column.column_name !== formData.x_axis &&\n                  ensureIsArray(excludedColumns)?.every(\n                    excludedCol =>\n                      excludedCol.column_name !== column.column_name,\n                  ),\n              ),\n          );\n        })\n        .catch(() => {\n          supersetGetCache.delete(`/api/v1/dataset/${datasetId}`);\n          addDangerToast(t('Failed to load dimensions for drill by'));\n        })\n        .finally(() => {\n          setIsLoadingColumns(false);\n        });\n    }\n  }, [\n    addDangerToast,\n    excludedColumns,\n    formData,\n    drillByConfig?.groupbyFieldName,\n    handlesDimensionContextMenu,\n    hasDrillBy,\n  ]);\n\n  const handleInput = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    e.stopPropagation();\n    const input = e?.target?.value;\n    setSearchInput(input);\n  }, []);\n\n  const filteredColumns = useMemo(\n    () =>\n      columns.filter(column =>\n        (column.verbose_name || column.column_name)\n          .toLowerCase()\n          .includes(searchInput.toLowerCase()),\n      ),\n    [columns, searchInput],\n  );\n\n  const submenuYOffset = useMemo(\n    () =>\n      getSubmenuYOffset(\n        contextMenuY,\n        filteredColumns.length || 1,\n        submenuIndex,\n        MAX_SUBMENU_HEIGHT,\n        columns.length > SHOW_COLUMNS_SEARCH_THRESHOLD\n          ? SEARCH_INPUT_HEIGHT\n          : 0,\n      ),\n    [contextMenuY, filteredColumns.length, submenuIndex, columns.length],\n  );\n\n  let tooltip: ReactNode;\n\n  if (!handlesDimensionContextMenu) {\n    tooltip = t('Drill by is not yet supported for this chart type');\n  } else if (!hasDrillBy) {\n    tooltip = t('Drill by is not available for this data point');\n  }\n\n  if (!handlesDimensionContextMenu || !hasDrillBy) {\n    return (\n      <Menu.Item key=\"drill-by-disabled\" disabled {...rest}>\n        <div>\n          {t('Drill by')}\n          <MenuItemTooltip title={tooltip} />\n        </div>\n      </Menu.Item>\n    );\n  }\n\n  return (\n    <>\n      <Menu.SubMenu\n        title={t('Drill by')}\n        key=\"drill-by-submenu\"\n        popupClassName=\"chart-context-submenu\"\n        popupOffset={[0, submenuYOffset]}\n        {...rest}\n      >\n        <div data-test=\"drill-by-submenu\">\n          {columns.length > SHOW_COLUMNS_SEARCH_THRESHOLD && (\n            <Input\n              prefix={\n                <Icons.Search\n                  iconSize=\"l\"\n                  iconColor={theme.colors.grayscale.light1}\n                />\n              }\n              onChange={handleInput}\n              placeholder={t('Search columns')}\n              value={searchInput}\n              onClick={e => {\n                // prevent closing menu when clicking on input\n                e.nativeEvent.stopImmediatePropagation();\n              }}\n              allowClear\n              css={css`\n                width: auto;\n                max-width: 100%;\n                margin: ${theme.gridUnit * 2}px ${theme.gridUnit * 3}px;\n                box-shadow: none;\n              `}\n            />\n          )}\n          {isLoadingColumns ? (\n            <div\n              css={css`\n                padding: ${theme.gridUnit * 3}px 0;\n              `}\n            >\n              <Loading position=\"inline-centered\" />\n            </div>\n          ) : filteredColumns.length ? (\n            <div\n              css={css`\n                max-height: ${MAX_SUBMENU_HEIGHT}px;\n                overflow: auto;\n              `}\n            >\n              {filteredColumns.map(column => (\n                <MenuItemWithTruncation\n                  key={`drill-by-item-${column.column_name}`}\n                  tooltipText={column.verbose_name || column.column_name}\n                  {...rest}\n                  onClick={e => handleSelection(e, column)}\n                >\n                  {column.verbose_name || column.column_name}\n                </MenuItemWithTruncation>\n              ))}\n            </div>\n          ) : (\n            <Menu.Item disabled key=\"no-drill-by-columns-found\" {...rest}>\n              {t('No columns found')}\n            </Menu.Item>\n          )}\n        </div>\n      </Menu.SubMenu>\n      {showModal && (\n        <DrillByModal\n          column={currentColumn}\n          drillByConfig={drillByConfig}\n          formData={formData}\n          onHideModal={closeModal}\n          dataset={{ ...dataset!, verbose_map: verboseMap }}\n        />\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}