{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport React from 'react';\nimport { rgba } from 'emotion-rgba';\nimport Tabs from 'src/components/Tabs';\nimport { t, css } from '@superset-ui/core';\nimport SliceAdder from 'src/dashboard/containers/SliceAdder';\nimport dashboardComponents from 'src/visualizations/presets/dashboardComponents';\nimport NewColumn from '../gridComponents/new/NewColumn';\nimport NewDivider from '../gridComponents/new/NewDivider';\nimport NewHeader from '../gridComponents/new/NewHeader';\nimport NewRow from '../gridComponents/new/NewRow';\nimport NewTabs from '../gridComponents/new/NewTabs';\nimport NewMarkdown from '../gridComponents/new/NewMarkdown';\nimport NewDynamicComponent from '../gridComponents/new/NewDynamicComponent';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst BUILDER_PANE_WIDTH = 374;\nconst BuilderComponentPane = (_ref) => {let { topOffset = 0 } = _ref;return ___EmotionJSX(\"div\", { css: css`\n      position: sticky;\n      right: 0;\n      top: ${topOffset}px;\n      height: calc(100vh - ${topOffset}px);\n      width: ${BUILDER_PANE_WIDTH}px;\n    ` },\n  ___EmotionJSX(\"div\", { css: (theme) => css`\n        position: absolute;\n        height: 100%;\n        width: ${BUILDER_PANE_WIDTH}px;\n        box-shadow: -4px 0 4px 0 ${rgba(theme.colors.grayscale.dark2, 0.1)};\n        background-color: ${theme.colors.grayscale.light5};\n      ` },\n  ___EmotionJSX(Tabs, { id: \"tabs\", css: (theme) => css`\n          line-height: inherit;\n          margin-top: ${theme.gridUnit * 2}px;\n          height: 100%;\n\n          & .ant-tabs-content-holder {\n            height: 100%;\n            & .ant-tabs-content {\n              height: 100%;\n            }\n          }\n        ` },\n  ___EmotionJSX(Tabs.TabPane, { key: 1, tab: t('Charts'), css: css`\n            height: 100%;\n          ` },\n  ___EmotionJSX(SliceAdder, null)),\n\n  ___EmotionJSX(Tabs.TabPane, { key: 2, tab: t('Layout elements') },\n  ___EmotionJSX(NewTabs, null),\n  ___EmotionJSX(NewRow, null),\n  ___EmotionJSX(NewColumn, null),\n  ___EmotionJSX(NewHeader, null),\n  ___EmotionJSX(NewMarkdown, null),\n  ___EmotionJSX(NewDivider, null),\n  dashboardComponents.\n  getAll().\n  map((_ref2) => {let { key: componentKey, metadata } = _ref2;return ___EmotionJSX(NewDynamicComponent, { metadata: metadata, componentKey: componentKey });})))));};\n\n\n\n\nexport default BuilderComponentPane;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,CAAT,EAAYC,GAAZ,QAAsC,mBAAtC;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,mBAAP,MAAgC,gDAAhC;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,mBAAP,MAAgC,2CAAhC,C;AAEA,MAAMC,kBAAkB,GAAG,GAA3B;AAEA,MAAMC,oBAAoB,GAAG,eAAC,EAAEC,SAAS,GAAG,CAAd,EAAD,eAC3B,uBAEE,GAAG,EAAEZ,GAAG;;;aAGCY,SAAS;6BACOA,SAAS;eACvBF,kBAAkB;KAP/B;EAUE,uBACE,GAAG,EAAE,CAACG,KAAD,KAA0Bb,GAAG;;;iBAGvBU,kBAAkB;mCACAb,IAAI,CAACgB,KAAK,CAACC,MAAN,CAAaC,SAAb,CAAuBC,KAAxB,EAA+B,GAA/B,CAAmC;4BAC9CH,KAAK,CAACC,MAAN,CAAaC,SAAb,CAAuBE,MAAM;OANrD;EASE,cAAC,IAAD,IAEE,EAAE,EAAC,MAFL,EAGE,GAAG,EAAE,CAACJ,KAAD,KAA0Bb,GAAG;;wBAElBa,KAAK,CAACK,QAAN,GAAiB,CAAC;;;;;;;;;SALpC;EAgBE,cAAC,IAAD,CAAM,OAAN,IACE,GAAG,EAAE,CADP,EAEE,GAAG,EAAEnB,CAAC,CAAC,QAAD,CAFR,EAGE,GAAG,EAAEC,GAAG;;WAHV;EAOE,cAAC,UAAD,OAPF,CAhBF;;EAyBE,cAAC,IAAD,CAAM,OAAN,IAAc,GAAG,EAAE,CAAnB,EAAsB,GAAG,EAAED,CAAC,CAAC,iBAAD,CAA5B;EACE,cAAC,OAAD,OADF;EAEE,cAAC,MAAD,OAFF;EAGE,cAAC,SAAD,OAHF;EAIE,cAAC,SAAD,OAJF;EAKE,cAAC,WAAD,OALF;EAME,cAAC,UAAD,OANF;EAOGG,mBAAmB;EACjBiB,MADF;EAEEC,GAFF,CAEM,gBAAC,EAAEC,GAAG,EAAEC,YAAP,EAAqBC,QAArB,EAAD,gBACH,cAAC,mBAAD,IACE,QAAQ,EAAEA,QADZ,EAEE,YAAY,EAAED,YAFhB,GADG,EAFN,CAPH,CAzBF,CATF,CAVF,CAD2B,EAA7B;;;;;AAkEA,eAAeX,oBAAf","names":["React","rgba","Tabs","t","css","SliceAdder","dashboardComponents","NewColumn","NewDivider","NewHeader","NewRow","NewTabs","NewMarkdown","NewDynamicComponent","BUILDER_PANE_WIDTH","BuilderComponentPane","topOffset","theme","colors","grayscale","dark2","light5","gridUnit","getAll","map","key","componentKey","metadata"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/BuilderComponentPane/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport React from 'react';\nimport { rgba } from 'emotion-rgba';\nimport Tabs from 'src/components/Tabs';\nimport { t, css, SupersetTheme } from '@superset-ui/core';\nimport SliceAdder from 'src/dashboard/containers/SliceAdder';\nimport dashboardComponents from 'src/visualizations/presets/dashboardComponents';\nimport NewColumn from '../gridComponents/new/NewColumn';\nimport NewDivider from '../gridComponents/new/NewDivider';\nimport NewHeader from '../gridComponents/new/NewHeader';\nimport NewRow from '../gridComponents/new/NewRow';\nimport NewTabs from '../gridComponents/new/NewTabs';\nimport NewMarkdown from '../gridComponents/new/NewMarkdown';\nimport NewDynamicComponent from '../gridComponents/new/NewDynamicComponent';\n\nconst BUILDER_PANE_WIDTH = 374;\n\nconst BuilderComponentPane = ({ topOffset = 0 }) => (\n  <div\n    data-test=\"dashboard-builder-sidepane\"\n    css={css`\n      position: sticky;\n      right: 0;\n      top: ${topOffset}px;\n      height: calc(100vh - ${topOffset}px);\n      width: ${BUILDER_PANE_WIDTH}px;\n    `}\n  >\n    <div\n      css={(theme: SupersetTheme) => css`\n        position: absolute;\n        height: 100%;\n        width: ${BUILDER_PANE_WIDTH}px;\n        box-shadow: -4px 0 4px 0 ${rgba(theme.colors.grayscale.dark2, 0.1)};\n        background-color: ${theme.colors.grayscale.light5};\n      `}\n    >\n      <Tabs\n        data-test=\"dashboard-builder-component-pane-tabs-navigation\"\n        id=\"tabs\"\n        css={(theme: SupersetTheme) => css`\n          line-height: inherit;\n          margin-top: ${theme.gridUnit * 2}px;\n          height: 100%;\n\n          & .ant-tabs-content-holder {\n            height: 100%;\n            & .ant-tabs-content {\n              height: 100%;\n            }\n          }\n        `}\n      >\n        <Tabs.TabPane\n          key={1}\n          tab={t('Charts')}\n          css={css`\n            height: 100%;\n          `}\n        >\n          <SliceAdder />\n        </Tabs.TabPane>\n        <Tabs.TabPane key={2} tab={t('Layout elements')}>\n          <NewTabs />\n          <NewRow />\n          <NewColumn />\n          <NewHeader />\n          <NewMarkdown />\n          <NewDivider />\n          {dashboardComponents\n            .getAll()\n            .map(({ key: componentKey, metadata }) => (\n              <NewDynamicComponent\n                metadata={metadata}\n                componentKey={componentKey}\n              />\n            ))}\n        </Tabs.TabPane>\n      </Tabs>\n    </div>\n  </div>\n);\n\nexport default BuilderComponentPane;\n"]},"metadata":{},"sourceType":"module"}