{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { css } from '@superset-ui/core';\nimport { FilterBarOrientation } from 'src/dashboard/types';\nimport { FiltersOutOfScopeCollapsible } from '../FiltersOutOfScopeCollapsible';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const FiltersDropdownContent = (_ref) => {let { overflowedCrossFilters, filtersInScope, filtersOutOfScope, renderer, rendererCrossFilter, showCollapsePanel, forceRenderOutOfScope } = _ref;return ___EmotionJSX(\"div\", { css: (theme) => css`\n      width: ${theme.gridUnit * 56}px;\n      padding: ${theme.gridUnit}px 0;\n    ` },\n  overflowedCrossFilters.map((crossFilter) => rendererCrossFilter(crossFilter, FilterBarOrientation.VERTICAL, overflowedCrossFilters.at(-1))),\n  filtersInScope.map(renderer),\n  showCollapsePanel && ___EmotionJSX(FiltersOutOfScopeCollapsible, { filtersOutOfScope: filtersOutOfScope, renderer: renderer, forceRender: forceRenderOutOfScope, horizontalOverflow: true }));};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(FiltersDropdownContent, \"FiltersDropdownContent\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FiltersDropdownContent/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,GAAT,QAAoD,mBAApD;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,SAASC,4BAAT,QAA6C,iCAA7C,C;AAiBA,OAAO,MAAMC,sBAAsB,GAAG,eAAC,EACrCC,sBADqC,EAErCC,cAFqC,EAGrCC,iBAHqC,EAIrCC,QAJqC,EAKrCC,mBALqC,EAMrCC,iBANqC,EAOrCC,qBAPqC,EAAD,eASpC,uBACE,GAAG,EAAE,CAACC,KAAD,KAA0BX,GAAG;eACvBW,KAAK,CAACC,QAAN,GAAiB,EAAE;iBACjBD,KAAK,CAACC,QAAQ;KAH7B;EAMGR,sBAAsB,CAACS,GAAvB,CAA2B,YAAW,KACrCL,mBAAmB,CACjBM,WADiB,EAEjBb,oBAAoB,CAACc,QAFJ,EAGjBX,sBAAsB,CAACY,EAAvB,CAA0B,CAAC,CAA3B,CAHiB,CADpB,CANH;EAaGX,cAAc,CAACQ,GAAf,CAAmBN,QAAnB,CAbH;EAcGE,iBAAiB,IAChB,cAAC,4BAAD,IACE,iBAAiB,EAAEH,iBADrB,EAEE,QAAQ,EAAEC,QAFZ,EAGE,WAAW,EAAEG,qBAHf,EAIE,kBAAkB,MAJpB,GAfJ,CAToC,EAA/B,C,iLAAMP,sB","names":["React","css","FilterBarOrientation","FiltersOutOfScopeCollapsible","FiltersDropdownContent","overflowedCrossFilters","filtersInScope","filtersOutOfScope","renderer","rendererCrossFilter","showCollapsePanel","forceRenderOutOfScope","theme","gridUnit","map","crossFilter","VERTICAL","at"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FiltersDropdownContent/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { ReactNode } from 'react';\nimport { css, Divider, Filter, SupersetTheme } from '@superset-ui/core';\nimport { FilterBarOrientation } from 'src/dashboard/types';\nimport { FiltersOutOfScopeCollapsible } from '../FiltersOutOfScopeCollapsible';\nimport { CrossFilterIndicator } from '../../selectors';\n\nexport interface FiltersDropdownContentProps {\n  overflowedCrossFilters: CrossFilterIndicator[];\n  filtersInScope: (Filter | Divider)[];\n  filtersOutOfScope: (Filter | Divider)[];\n  renderer: (filter: Filter | Divider, index: number) => ReactNode;\n  rendererCrossFilter: (\n    crossFilter: CrossFilterIndicator,\n    orientation: FilterBarOrientation.VERTICAL,\n    last: CrossFilterIndicator,\n  ) => ReactNode;\n  showCollapsePanel?: boolean;\n  forceRenderOutOfScope?: boolean;\n}\n\nexport const FiltersDropdownContent = ({\n  overflowedCrossFilters,\n  filtersInScope,\n  filtersOutOfScope,\n  renderer,\n  rendererCrossFilter,\n  showCollapsePanel,\n  forceRenderOutOfScope,\n}: FiltersDropdownContentProps) => (\n  <div\n    css={(theme: SupersetTheme) => css`\n      width: ${theme.gridUnit * 56}px;\n      padding: ${theme.gridUnit}px 0;\n    `}\n  >\n    {overflowedCrossFilters.map(crossFilter =>\n      rendererCrossFilter(\n        crossFilter,\n        FilterBarOrientation.VERTICAL,\n        overflowedCrossFilters.at(-1) as CrossFilterIndicator,\n      ),\n    )}\n    {filtersInScope.map(renderer)}\n    {showCollapsePanel && (\n      <FiltersOutOfScopeCollapsible\n        filtersOutOfScope={filtersOutOfScope}\n        renderer={renderer}\n        forceRender={forceRenderOutOfScope}\n        horizontalOverflow\n      />\n    )}\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}