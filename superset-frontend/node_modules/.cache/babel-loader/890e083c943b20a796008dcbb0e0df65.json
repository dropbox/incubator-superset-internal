{"ast":null,"code":"function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}\n\nimport { SyncRegistry } from '@encodable/registry';\nimport ColorNamespace from './ColorNamespace';\nexport const DEFAULT_NAMESPACE = 'DEFAULT_NAMESPACE';\nexport default class ColorNamespaceRegistry {\n  constructor(_temp)\n\n\n\n  {let { name = 'ColorNamespaceRegistry', globalId, ...rest } = _temp === void 0 ? {} : _temp;\n    _defineProperty(this, \"namespaceStates\", void 0);\n\n    _defineProperty(this, \"namespaceInstances\", void 0);\n\n    // only make the state global is using globalId\n    this.namespaceStates = new SyncRegistry({\n      name,\n      globalId,\n      ...rest });\n    // the instances are always local since these are wrappers\n\n    this.namespaceInstances = new SyncRegistry({\n      name,\n      ...rest });\n\n\n    if (typeof this.namespaceStates.getDefaultKey() === 'undefined') {\n      this.setDefaultNamespace(DEFAULT_NAMESPACE);\n    }\n  }\n\n  getDefaultNamespace() {\n    var _this$namespaceStates;\n\n    return (_this$namespaceStates = this.namespaceStates.getDefaultKey()) != null ? _this$namespaceStates : DEFAULT_NAMESPACE;\n  }\n\n  setDefaultNamespace(namespace) {\n    this.namespaceStates.setDefaultKey(namespace);\n    this.namespaceInstances.setDefaultKey(namespace);\n    return this;\n  }\n\n  has(namespace) {\n    return this.namespaceStates.has(namespace);\n  }\n\n  get(namespace) {if (namespace === void 0) {namespace = this.getDefaultNamespace();}\n    if (!this.namespaceStates.has(namespace)) {\n      const ns = new ColorNamespace(namespace);\n      this.namespaceStates.registerValue(namespace, ns.state);\n      this.namespaceInstances.registerValue(namespace, ns);\n      return ns;\n    }\n\n    if (this.namespaceInstances.has(namespace)) {\n      return this.namespaceInstances.get(namespace);\n    }\n\n    const ns = new ColorNamespace(this.namespaceStates.get(namespace));\n    this.namespaceInstances.registerValue(namespace, ns);\n    return ns;\n  }\n\n  keys() {\n    return this.namespaceStates.keys();\n  }\n\n  clear() {\n    this.namespaceStates.clear();\n    this.namespaceInstances.clear();\n    return this;\n  }\n\n  remove(namespace) {\n    this.namespaceStates.remove(namespace);\n    this.namespaceInstances.remove(namespace);\n    return this;\n  }}","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","SyncRegistry","ColorNamespace","DEFAULT_NAMESPACE","ColorNamespaceRegistry","constructor","name","globalId","rest","namespaceStates","namespaceInstances","getDefaultKey","setDefaultNamespace","getDefaultNamespace","_this$namespaceStates","namespace","setDefaultKey","has","get","ns","registerValue","state","keys","clear","remove"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/node_modules/@encodable/color/esm/scale/ColorNamespaceRegistry.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SyncRegistry } from '@encodable/registry';\nimport ColorNamespace from './ColorNamespace';\nexport const DEFAULT_NAMESPACE = 'DEFAULT_NAMESPACE';\nexport default class ColorNamespaceRegistry {\n  constructor({\n    name = 'ColorNamespaceRegistry',\n    globalId,\n    ...rest\n  } = {}) {\n    _defineProperty(this, \"namespaceStates\", void 0);\n\n    _defineProperty(this, \"namespaceInstances\", void 0);\n\n    // only make the state global is using globalId\n    this.namespaceStates = new SyncRegistry({\n      name,\n      globalId,\n      ...rest\n    }); // the instances are always local since these are wrappers\n\n    this.namespaceInstances = new SyncRegistry({\n      name,\n      ...rest\n    });\n\n    if (typeof this.namespaceStates.getDefaultKey() === 'undefined') {\n      this.setDefaultNamespace(DEFAULT_NAMESPACE);\n    }\n  }\n\n  getDefaultNamespace() {\n    var _this$namespaceStates;\n\n    return (_this$namespaceStates = this.namespaceStates.getDefaultKey()) != null ? _this$namespaceStates : DEFAULT_NAMESPACE;\n  }\n\n  setDefaultNamespace(namespace) {\n    this.namespaceStates.setDefaultKey(namespace);\n    this.namespaceInstances.setDefaultKey(namespace);\n    return this;\n  }\n\n  has(namespace) {\n    return this.namespaceStates.has(namespace);\n  }\n\n  get(namespace = this.getDefaultNamespace()) {\n    if (!this.namespaceStates.has(namespace)) {\n      const ns = new ColorNamespace(namespace);\n      this.namespaceStates.registerValue(namespace, ns.state);\n      this.namespaceInstances.registerValue(namespace, ns);\n      return ns;\n    }\n\n    if (this.namespaceInstances.has(namespace)) {\n      return this.namespaceInstances.get(namespace);\n    }\n\n    const ns = new ColorNamespace(this.namespaceStates.get(namespace));\n    this.namespaceInstances.registerValue(namespace, ns);\n    return ns;\n  }\n\n  keys() {\n    return this.namespaceStates.keys();\n  }\n\n  clear() {\n    this.namespaceStates.clear();\n    this.namespaceInstances.clear();\n    return this;\n  }\n\n  remove(namespace) {\n    this.namespaceStates.remove(namespace);\n    this.namespaceInstances.remove(namespace);\n    return this;\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}