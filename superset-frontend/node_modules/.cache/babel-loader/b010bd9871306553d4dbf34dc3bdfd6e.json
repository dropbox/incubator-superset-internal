{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray } from '@superset-ui/core';\nimport { LocalStorageKeys, setItem, getItem } from 'src/utils/localStorageHelpers';\nexport const getTimeColumns = (datasourceId) => {\n  const colsMap = getItem(LocalStorageKeys.explore__data_table_original_formatted_time_columns, {});\n  if (datasourceId === undefined) {\n    return [];\n  }\n  return ensureIsArray(colsMap[datasourceId]);\n};\nexport const setTimeColumns = (datasourceId, columns) => {\n  const colsMap = getItem(LocalStorageKeys.explore__data_table_original_formatted_time_columns, {});\n  setItem(LocalStorageKeys.explore__data_table_original_formatted_time_columns, {\n    ...colsMap,\n    [datasourceId]: columns });\n\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getTimeColumns, \"getTimeColumns\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/DataTableControl/utils.ts\");reactHotLoader.register(setTimeColumns, \"setTimeColumns\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/DataTableControl/utils.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,aAAT,QAA8B,mBAA9B;AACA,SACEC,gBADF,EAEEC,OAFF,EAGEC,OAHF,QAIO,+BAJP;AAMA,OAAO,MAAMC,cAAc,GAAG,CAACC,YAAD,KAAoC;EAChE,MAAMC,OAAO,GAAGH,OAAO,CACrBF,gBAAgB,CAACM,mDADI,EAErB,EAFqB,CAAvB;EAIA,IAAIF,YAAY,KAAKG,SAArB,EAAgC;IAC9B,OAAO,EAAP;EACD;EACD,OAAOR,aAAa,CAACM,OAAO,CAACD,YAAD,CAAR,CAApB;AACD,CATM;AAWP,OAAO,MAAMI,cAAc,GAAG,CAACJ,YAAD,EAAuBK,OAAvB,KAA4C;EACxE,MAAMJ,OAAO,GAAGH,OAAO,CACrBF,gBAAgB,CAACM,mDADI,EAErB,EAFqB,CAAvB;EAIAL,OAAO,CACLD,gBAAgB,CAACM,mDADZ,EAEL;IACE,GAAGD,OADL;IAEE,CAACD,YAAD,GAAgBK,OAFlB,EAFK,CAAP;;AAOD,CAZM,C,iLAXMN,c,iKAWAK,c","names":["ensureIsArray","LocalStorageKeys","setItem","getItem","getTimeColumns","datasourceId","colsMap","explore__data_table_original_formatted_time_columns","undefined","setTimeColumns","columns"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/DataTableControl/utils.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray } from '@superset-ui/core';\nimport {\n  LocalStorageKeys,\n  setItem,\n  getItem,\n} from 'src/utils/localStorageHelpers';\n\nexport const getTimeColumns = (datasourceId?: string): string[] => {\n  const colsMap = getItem(\n    LocalStorageKeys.explore__data_table_original_formatted_time_columns,\n    {},\n  );\n  if (datasourceId === undefined) {\n    return [];\n  }\n  return ensureIsArray(colsMap[datasourceId]);\n};\n\nexport const setTimeColumns = (datasourceId: string, columns: string[]) => {\n  const colsMap = getItem(\n    LocalStorageKeys.explore__data_table_original_formatted_time_columns,\n    {},\n  );\n  setItem(\n    LocalStorageKeys.explore__data_table_original_formatted_time_columns,\n    {\n      ...colsMap,\n      [datasourceId]: columns,\n    },\n  );\n};\n"]},"metadata":{},"sourceType":"module"}