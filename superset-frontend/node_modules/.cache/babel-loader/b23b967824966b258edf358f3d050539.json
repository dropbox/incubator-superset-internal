{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, ChartMetadata, ChartPlugin } from '@superset-ui/core';\nimport transformProps from './transformProps';\nimport thumbnail from './images/thumbnail.png';\nimport example1 from './images/Treemap.jpg';\nimport example2 from './images/Treemap2.jpg';\nimport example3 from './images/Treemap3.jpg';\nimport example4 from './images/Treemap4.jpg';\nimport controlPanel from './controlPanel';\n\nconst metadata = new ChartMetadata({\n  category: t('Part of a Whole'),\n  credits: ['https://bl.ocks.org/mbostock/911ad09bdead40ec0061'],\n  description: t(\n  'Shows the composition of a dataset by segmenting a given rectangle as smaller rectangles with areas proportional to their value or contribution to the whole. Those rectangles may also, in turn, be further segmented hierarchically.'),\n\n  exampleGallery: [\n  { url: example1 },\n  { url: example2 },\n  { url: example3 },\n  { url: example4 }],\n\n  name: t('Treemap (legacy)'),\n  tags: [\n  t('Categorical'),\n  t('Legacy'),\n  t('Multi-Levels'),\n  t('Percentages'),\n  t('Proportional')],\n\n  thumbnail,\n  useLegacyApi: true });\n\n\nexport default class TreemapChartPlugin extends ChartPlugin {\n  constructor() {\n    super({\n      loadChart: () => import('./ReactTreemap'),\n      metadata,\n      transformProps,\n      controlPanel });\n\n  }}","map":{"version":3,"names":["t","ChartMetadata","ChartPlugin","transformProps","thumbnail","example1","example2","example3","example4","controlPanel","metadata","category","credits","description","exampleGallery","url","name","tags","useLegacyApi","TreemapChartPlugin","constructor","loadChart"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-plugin-chart-treemap/src/index.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, ChartMetadata, ChartPlugin } from '@superset-ui/core';\nimport transformProps from './transformProps';\nimport thumbnail from './images/thumbnail.png';\nimport example1 from './images/Treemap.jpg';\nimport example2 from './images/Treemap2.jpg';\nimport example3 from './images/Treemap3.jpg';\nimport example4 from './images/Treemap4.jpg';\nimport controlPanel from './controlPanel';\n\nconst metadata = new ChartMetadata({\n  category: t('Part of a Whole'),\n  credits: ['https://bl.ocks.org/mbostock/911ad09bdead40ec0061'],\n  description: t(\n    'Shows the composition of a dataset by segmenting a given rectangle as smaller rectangles with areas proportional to their value or contribution to the whole. Those rectangles may also, in turn, be further segmented hierarchically.',\n  ),\n  exampleGallery: [\n    { url: example1 },\n    { url: example2 },\n    { url: example3 },\n    { url: example4 },\n  ],\n  name: t('Treemap (legacy)'),\n  tags: [\n    t('Categorical'),\n    t('Legacy'),\n    t('Multi-Levels'),\n    t('Percentages'),\n    t('Proportional'),\n  ],\n  thumbnail,\n  useLegacyApi: true,\n});\n\nexport default class TreemapChartPlugin extends ChartPlugin {\n  constructor() {\n    super({\n      loadChart: () => import('./ReactTreemap'),\n      metadata,\n      transformProps,\n      controlPanel,\n    });\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,CAAT,EAAYC,aAAZ,EAA2BC,WAA3B,QAA8C,mBAA9C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,QAAQ,GAAG,IAAIT,aAAJ,CAAkB;EACjCU,QAAQ,EAAEX,CAAC,CAAC,iBAAD,CADsB;EAEjCY,OAAO,EAAE,CAAC,mDAAD,CAFwB;EAGjCC,WAAW,EAAEb,CAAC;EACZ,wOADY,CAHmB;;EAMjCc,cAAc,EAAE;EACd,EAAEC,GAAG,EAAEV,QAAP,EADc;EAEd,EAAEU,GAAG,EAAET,QAAP,EAFc;EAGd,EAAES,GAAG,EAAER,QAAP,EAHc;EAId,EAAEQ,GAAG,EAAEP,QAAP,EAJc,CANiB;;EAYjCQ,IAAI,EAAEhB,CAAC,CAAC,kBAAD,CAZ0B;EAajCiB,IAAI,EAAE;EACJjB,CAAC,CAAC,aAAD,CADG;EAEJA,CAAC,CAAC,QAAD,CAFG;EAGJA,CAAC,CAAC,cAAD,CAHG;EAIJA,CAAC,CAAC,aAAD,CAJG;EAKJA,CAAC,CAAC,cAAD,CALG,CAb2B;;EAoBjCI,SApBiC;EAqBjCc,YAAY,EAAE,IArBmB,EAAlB,CAAjB;;;AAwBA,eAAe,MAAMC,kBAAN,SAAiCjB,WAAjC,CAA6C;EAC1DkB,WAAW,GAAG;IACZ,MAAM;MACJC,SAAS,EAAE,MAAM,OAAO,gBAAP,CADb;MAEJX,QAFI;MAGJP,cAHI;MAIJM,YAJI,EAAN;;EAMD,CARyD"},"metadata":{},"sourceType":"module"}