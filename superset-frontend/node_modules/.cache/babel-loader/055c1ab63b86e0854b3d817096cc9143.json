{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { isNativeFilter, styled, t, useTheme } from '@superset-ui/core';\nimport { Typography, AntdTooltip, AntdCollapse } from 'src/components';\nimport Icons from 'src/components/Icons';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport { getFilterValueForDisplay } from './utils';\nimport { useFilters } from '../state';\nimport { getFilterBarTestId } from '../utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst FilterHeader = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: ${(_ref) => {let { theme } = _ref;return theme.typography.sizes.s;}}px;\n`;\nconst StyledCollapse = styled(AntdCollapse)`\n  &.ant-collapse-ghost > .ant-collapse-item {\n    & > .ant-collapse-content > .ant-collapse-content-box {\n      padding: 0;\n      padding-top: 0;\n      padding-bottom: 0;\n      font-size: ${(_ref2) => {let { theme } = _ref2;return theme.typography.sizes.s;}}px;\n    }\n    & > .ant-collapse-header {\n      padding: 0;\n      display: flex;\n      align-items: center;\n      flex-direction: row-reverse;\n      justify-content: flex-end;\n      max-width: max-content;\n      & .ant-collapse-arrow {\n        position: static;\n        padding-left: ${(_ref3) => {let { theme } = _ref3;return theme.gridUnit;}}px;\n      }\n  }\n`;\nconst StyledFilterRow = styled.div`\n  padding-top: ${(_ref4) => {let { theme } = _ref4;return theme.gridUnit;}}px;\n  padding-bottom: ${(_ref5) => {let { theme } = _ref5;return theme.gridUnit;}}px;\n`;\nconst FiltersHeader = (_ref6) => {let { dataMask, filterSet } = _ref6;\n  const theme = useTheme();\n  const filters = useFilters();\n  const filterValues = Object.values(filters).filter(isNativeFilter);\n  let resultFilters = filterValues != null ? filterValues : [];\n  if (filterSet != null && filterSet.nativeFilters) {\n    resultFilters = Object.values(filterSet == null ? void 0 : filterSet.nativeFilters).filter(isNativeFilter);\n  }\n  const getFiltersHeader = () => ___EmotionJSX(FilterHeader, null,\n  ___EmotionJSX(Typography.Text, { type: \"secondary\" },\n  t('Filters (%d)', resultFilters.length)));\n\n\n  const getFilterRow = (_ref7) => {var _filters$id, _filterSet$nativeFilt, _filterSet$nativeFilt2, _context, _dataMask$id, _dataMask$id$filterSt;let { id, name } = _ref7;\n    const changedFilter = filterSet &&\n    !areObjectsEqual((_filters$id = filters[id]) == null ? void 0 : _filters$id.controlValues, filterSet == null ? void 0 : (_filterSet$nativeFilt = filterSet.nativeFilters) == null ? void 0 : (_filterSet$nativeFilt2 = _filterSet$nativeFilt[id]) == null ? void 0 : _filterSet$nativeFilt2.controlValues, {\n      ignoreUndefined: true });\n\n    const removedFilter = !_includesInstanceProperty(_context = Object.keys(filters)).call(_context, id);\n    return ___EmotionJSX(AntdTooltip, { title: removedFilter &&\n      t(\"This filter doesn't exist in dashboard. It will not be applied.\") ||\n      changedFilter &&\n      t('Filter metadata changed in dashboard. It will not be applied.'), placement: \"bottomLeft\", key: id },\n    ___EmotionJSX(StyledFilterRow, null,\n    ___EmotionJSX(Typography.Text, { strong: true, delete: removedFilter, mark: changedFilter },\n    name, \":\\xA0\"),\n\n    ___EmotionJSX(Typography.Text, { delete: removedFilter, mark: changedFilter },\n    getFilterValueForDisplay(dataMask == null ? void 0 : (_dataMask$id = dataMask[id]) == null ? void 0 : (_dataMask$id$filterSt = _dataMask$id.filterState) == null ? void 0 : _dataMask$id$filterSt.value) || ___EmotionJSX(Typography.Text, { type: \"secondary\" }, t('None')))));\n\n\n\n  };\n  const getExpandIcon = (_ref8) => {let { isActive } = _ref8;\n    const color = theme.colors.grayscale.base;\n    const Icon = isActive ? Icons.CaretUpOutlined : Icons.CaretDownOutlined;\n    return ___EmotionJSX(Icon, { iconColor: color });\n  };\n  return ___EmotionJSX(StyledCollapse, { ghost: true, expandIconPosition: \"right\", defaultActiveKey: !filterSet ? ['filters'] : undefined, expandIcon: getExpandIcon },\n  ___EmotionJSX(AntdCollapse.Panel, _extends({}, getFilterBarTestId('collapse-filter-set-description'), { header: getFiltersHeader(), key: \"filters\" }),\n  resultFilters.map(getFilterRow)));\n\n\n};\nexport default FiltersHeader;","map":{"version":3,"mappings":"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","names":["React","isNativeFilter","styled","t","useTheme","Typography","AntdTooltip","AntdCollapse","Icons","areObjectsEqual","getFilterValueForDisplay","useFilters","getFilterBarTestId","FilterHeader","div","theme","typography","sizes","s","StyledCollapse","gridUnit","StyledFilterRow","FiltersHeader","dataMask","filterSet","filters","filterValues","Object","values","filter","resultFilters","nativeFilters","getFiltersHeader","length","getFilterRow","id","name","changedFilter","controlValues","ignoreUndefined","removedFilter","keys","filterState","value","getExpandIcon","isActive","color","colors","grayscale","base","Icon","CaretUpOutlined","CaretDownOutlined","undefined","map"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/FiltersHeader.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FC } from 'react';\nimport {\n  DataMaskState,\n  FilterSet,\n  isNativeFilter,\n  styled,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport { Typography, AntdTooltip, AntdCollapse } from 'src/components';\nimport Icons from 'src/components/Icons';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport { getFilterValueForDisplay } from './utils';\nimport { useFilters } from '../state';\nimport { getFilterBarTestId } from '../utils';\n\nconst FilterHeader = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n`;\n\nconst StyledCollapse = styled(AntdCollapse)`\n  &.ant-collapse-ghost > .ant-collapse-item {\n    & > .ant-collapse-content > .ant-collapse-content-box {\n      padding: 0;\n      padding-top: 0;\n      padding-bottom: 0;\n      font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    }\n    & > .ant-collapse-header {\n      padding: 0;\n      display: flex;\n      align-items: center;\n      flex-direction: row-reverse;\n      justify-content: flex-end;\n      max-width: max-content;\n      & .ant-collapse-arrow {\n        position: static;\n        padding-left: ${({ theme }) => theme.gridUnit}px;\n      }\n  }\n`;\n\nconst StyledFilterRow = styled.div`\n  padding-top: ${({ theme }) => theme.gridUnit}px;\n  padding-bottom: ${({ theme }) => theme.gridUnit}px;\n`;\n\nexport type FiltersHeaderProps = {\n  dataMask?: DataMaskState;\n  filterSet?: FilterSet;\n};\n\nconst FiltersHeader: FC<FiltersHeaderProps> = ({ dataMask, filterSet }) => {\n  const theme = useTheme();\n  const filters = useFilters();\n  const filterValues = Object.values(filters).filter(isNativeFilter);\n\n  let resultFilters = filterValues ?? [];\n  if (filterSet?.nativeFilters) {\n    resultFilters = Object.values(filterSet?.nativeFilters).filter(\n      isNativeFilter,\n    );\n  }\n\n  const getFiltersHeader = () => (\n    <FilterHeader>\n      <Typography.Text type=\"secondary\">\n        {t('Filters (%d)', resultFilters.length)}\n      </Typography.Text>\n    </FilterHeader>\n  );\n\n  const getFilterRow = ({ id, name }: { id: string; name: string }) => {\n    const changedFilter =\n      filterSet &&\n      !areObjectsEqual(\n        filters[id]?.controlValues,\n        filterSet?.nativeFilters?.[id]?.controlValues,\n        {\n          ignoreUndefined: true,\n        },\n      );\n    const removedFilter = !Object.keys(filters).includes(id);\n\n    return (\n      <AntdTooltip\n        title={\n          (removedFilter &&\n            t(\n              \"This filter doesn't exist in dashboard. It will not be applied.\",\n            )) ||\n          (changedFilter &&\n            t('Filter metadata changed in dashboard. It will not be applied.'))\n        }\n        placement=\"bottomLeft\"\n        key={id}\n      >\n        <StyledFilterRow data-test=\"filter-info\">\n          <Typography.Text strong delete={removedFilter} mark={changedFilter}>\n            {name}:&nbsp;\n          </Typography.Text>\n          <Typography.Text delete={removedFilter} mark={changedFilter}>\n            {getFilterValueForDisplay(dataMask?.[id]?.filterState?.value) || (\n              <Typography.Text type=\"secondary\">{t('None')}</Typography.Text>\n            )}\n          </Typography.Text>\n        </StyledFilterRow>\n      </AntdTooltip>\n    );\n  };\n\n  const getExpandIcon = ({ isActive }: { isActive: boolean }) => {\n    const color = theme.colors.grayscale.base;\n    const Icon = isActive ? Icons.CaretUpOutlined : Icons.CaretDownOutlined;\n    return <Icon iconColor={color} />;\n  };\n\n  return (\n    <StyledCollapse\n      ghost\n      expandIconPosition=\"right\"\n      defaultActiveKey={!filterSet ? ['filters'] : undefined}\n      expandIcon={getExpandIcon}\n    >\n      <AntdCollapse.Panel\n        {...getFilterBarTestId('collapse-filter-set-description')}\n        header={getFiltersHeader()}\n        key=\"filters\"\n      >\n        {resultFilters.map(getFilterRow)}\n      </AntdCollapse.Panel>\n    </StyledCollapse>\n  );\n};\n\nexport default FiltersHeader;\n"]},"metadata":{},"sourceType":"module"}