{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Label from 'src/components/Label';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  dashboardId: PropTypes.number,\n  isPublished: PropTypes.bool.isRequired,\n  savePublished: PropTypes.func.isRequired,\n  canEdit: PropTypes.bool,\n  canSave: PropTypes.bool };\n\n\nconst draftButtonTooltip = t(\n'This dashboard is not published, it will not show up in the list of dashboards. ' +\n'Click here to publish this dashboard.');\n\n\nconst draftDivTooltip = t(\n'This dashboard is not published which means it will not show up in the list of dashboards.' +\n' Favorite it to see it there or access it by using the URL directly.');\n\n\nconst publishedTooltip = t(\n'This dashboard is published. Click to make it a draft.');\n\n\nexport default class PublishedStatus extends React.Component {\n  componentDidMount() {\n    this.togglePublished = this.togglePublished.bind(this);\n  }\n\n  togglePublished() {\n    this.props.savePublished(this.props.dashboardId, !this.props.isPublished);\n  }\n\n  render() {\n    // Show everybody the draft badge\n    if (!this.props.isPublished) {\n      // if they can edit the dash, make the badge a button\n      if (this.props.canEdit && this.props.canSave) {\n        return (\n          ___EmotionJSX(Tooltip, {\n            id: \"unpublished-dashboard-tooltip\",\n            placement: \"bottom\",\n            title: draftButtonTooltip },\n\n          ___EmotionJSX(Label, {\n            onClick: () => {\n              this.togglePublished();\n            } },\n\n          t('Draft'))));\n\n\n\n      }\n      return (\n        ___EmotionJSX(Tooltip, {\n          id: \"unpublished-dashboard-tooltip\",\n          placement: \"bottom\",\n          title: draftDivTooltip },\n\n        ___EmotionJSX(Label, null, t('Draft'))));\n\n\n    }\n\n    // Show the published badge for the owner of the dashboard to toggle\n    if (this.props.canEdit && this.props.canSave) {\n      return (\n        ___EmotionJSX(Tooltip, {\n          id: \"published-dashboard-tooltip\",\n          placement: \"bottom\",\n          title: publishedTooltip },\n\n        ___EmotionJSX(Label, {\n          onClick: () => {\n            this.togglePublished();\n          } },\n\n        t('Published'))));\n\n\n\n    }\n\n    // Don't show anything if one doesn't own the dashboard and it is published\n    return null;\n  }}\n\n\nPublishedStatus.propTypes = propTypes;","map":{"version":3,"names":["React","PropTypes","t","Tooltip","Label","propTypes","dashboardId","number","isPublished","bool","isRequired","savePublished","func","canEdit","canSave","draftButtonTooltip","draftDivTooltip","publishedTooltip","PublishedStatus","Component","componentDidMount","togglePublished","bind","props","render"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/PublishedStatus/index.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Label from 'src/components/Label';\n\nconst propTypes = {\n  dashboardId: PropTypes.number,\n  isPublished: PropTypes.bool.isRequired,\n  savePublished: PropTypes.func.isRequired,\n  canEdit: PropTypes.bool,\n  canSave: PropTypes.bool,\n};\n\nconst draftButtonTooltip = t(\n  'This dashboard is not published, it will not show up in the list of dashboards. ' +\n    'Click here to publish this dashboard.',\n);\n\nconst draftDivTooltip = t(\n  'This dashboard is not published which means it will not show up in the list of dashboards.' +\n    ' Favorite it to see it there or access it by using the URL directly.',\n);\n\nconst publishedTooltip = t(\n  'This dashboard is published. Click to make it a draft.',\n);\n\nexport default class PublishedStatus extends React.Component {\n  componentDidMount() {\n    this.togglePublished = this.togglePublished.bind(this);\n  }\n\n  togglePublished() {\n    this.props.savePublished(this.props.dashboardId, !this.props.isPublished);\n  }\n\n  render() {\n    // Show everybody the draft badge\n    if (!this.props.isPublished) {\n      // if they can edit the dash, make the badge a button\n      if (this.props.canEdit && this.props.canSave) {\n        return (\n          <Tooltip\n            id=\"unpublished-dashboard-tooltip\"\n            placement=\"bottom\"\n            title={draftButtonTooltip}\n          >\n            <Label\n              onClick={() => {\n                this.togglePublished();\n              }}\n            >\n              {t('Draft')}\n            </Label>\n          </Tooltip>\n        );\n      }\n      return (\n        <Tooltip\n          id=\"unpublished-dashboard-tooltip\"\n          placement=\"bottom\"\n          title={draftDivTooltip}\n        >\n          <Label>{t('Draft')}</Label>\n        </Tooltip>\n      );\n    }\n\n    // Show the published badge for the owner of the dashboard to toggle\n    if (this.props.canEdit && this.props.canSave) {\n      return (\n        <Tooltip\n          id=\"published-dashboard-tooltip\"\n          placement=\"bottom\"\n          title={publishedTooltip}\n        >\n          <Label\n            onClick={() => {\n              this.togglePublished();\n            }}\n          >\n            {t('Published')}\n          </Label>\n        </Tooltip>\n      );\n    }\n\n    // Don't show anything if one doesn't own the dashboard and it is published\n    return null;\n  }\n}\n\nPublishedStatus.propTypes = propTypes;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,CAAT,QAAkB,mBAAlB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAOC,KAAP,MAAkB,sBAAlB,C;;AAEA,MAAMC,SAAS,GAAG;EAChBC,WAAW,EAAEL,SAAS,CAACM,MADP;EAEhBC,WAAW,EAAEP,SAAS,CAACQ,IAAV,CAAeC,UAFZ;EAGhBC,aAAa,EAAEV,SAAS,CAACW,IAAV,CAAeF,UAHd;EAIhBG,OAAO,EAAEZ,SAAS,CAACQ,IAJH;EAKhBK,OAAO,EAAEb,SAAS,CAACQ,IALH,EAAlB;;;AAQA,MAAMM,kBAAkB,GAAGb,CAAC;AAC1B;AACE,uCAFwB,CAA5B;;;AAKA,MAAMc,eAAe,GAAGd,CAAC;AACvB;AACE,sEAFqB,CAAzB;;;AAKA,MAAMe,gBAAgB,GAAGf,CAAC;AACxB,wDADwB,CAA1B;;;AAIA,eAAe,MAAMgB,eAAN,SAA8BlB,KAAK,CAACmB,SAApC,CAA8C;EAC3DC,iBAAiB,GAAG;IAClB,KAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;EACD;;EAEDD,eAAe,GAAG;IAChB,KAAKE,KAAL,CAAWZ,aAAX,CAAyB,KAAKY,KAAL,CAAWjB,WAApC,EAAiD,CAAC,KAAKiB,KAAL,CAAWf,WAA7D;EACD;;EAEDgB,MAAM,GAAG;IACP;IACA,IAAI,CAAC,KAAKD,KAAL,CAAWf,WAAhB,EAA6B;MAC3B;MACA,IAAI,KAAKe,KAAL,CAAWV,OAAX,IAAsB,KAAKU,KAAL,CAAWT,OAArC,EAA8C;QAC5C;UACE,cAAC,OAAD;YACE,EAAE,EAAC,+BADL;YAEE,SAAS,EAAC,QAFZ;YAGE,KAAK,EAAEC,kBAHT;;UAKE,cAAC,KAAD;YACE,OAAO,EAAE,MAAM;cACb,KAAKM,eAAL;YACD,CAHH;;UAKGnB,CAAC,CAAC,OAAD,CALJ,CALF,CADF;;;;MAeD;MACD;QACE,cAAC,OAAD;UACE,EAAE,EAAC,+BADL;UAEE,SAAS,EAAC,QAFZ;UAGE,KAAK,EAAEc,eAHT;;QAKE,cAAC,KAAD,QAAQd,CAAC,CAAC,OAAD,CAAT,CALF,CADF;;;IASD;;IAED;IACA,IAAI,KAAKqB,KAAL,CAAWV,OAAX,IAAsB,KAAKU,KAAL,CAAWT,OAArC,EAA8C;MAC5C;QACE,cAAC,OAAD;UACE,EAAE,EAAC,6BADL;UAEE,SAAS,EAAC,QAFZ;UAGE,KAAK,EAAEG,gBAHT;;QAKE,cAAC,KAAD;UACE,OAAO,EAAE,MAAM;YACb,KAAKI,eAAL;UACD,CAHH;;QAKGnB,CAAC,CAAC,WAAD,CALJ,CALF,CADF;;;;IAeD;;IAED;IACA,OAAO,IAAP;EACD,CA9D0D;;;AAiE7DgB,eAAe,CAACb,SAAhB,GAA4BA,SAA5B"},"metadata":{},"sourceType":"module"}