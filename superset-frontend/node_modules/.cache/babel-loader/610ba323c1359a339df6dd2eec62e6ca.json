{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useState } from 'react';\nimport Popover from 'src/components/Popover';\nimport { FormattingPopoverContent } from './FormattingPopoverContent';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const FormattingPopover = (_ref) => {let { title, columns, onChange, config, children, ...props } = _ref;\n  const [visible, setVisible] = useState(false);\n  const handleSave = useCallback((newConfig) => {\n    setVisible(false);\n    onChange(newConfig);\n  }, [onChange]);\n  return ___EmotionJSX(Popover, _extends({ title: title, content: ___EmotionJSX(FormattingPopoverContent, { onChange: handleSave, config: config, columns: columns }), visible: visible, onVisibleChange: setVisible, trigger: ['click'], overlayStyle: { width: '450px' } }, props),\n  children);\n\n};","map":{"version":3,"mappings":"+DAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,wBAAT,QAAyC,4BAAzC,C;AAGA,OAAO,MAAMC,iBAAiB,GAAG,UAOJ,KAPK,EAChCC,KADgC,EAEhCC,OAFgC,EAGhCC,QAHgC,EAIhCC,MAJgC,EAKhCC,QALgC,EAMhC,GAAGC,KAN6B,EAOL;EAC3B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;EAEA,MAAMY,UAAU,GAAGb,WAAW,CAC5B,CAACc,SAAD,KAA2C;IACzCF,UAAU,CAAC,KAAD,CAAV;IACAL,QAAQ,CAACO,SAAD,CAAR;EACD,CAJ2B,EAK5B,CAACP,QAAD,CAL4B,CAA9B;EAQA,OACE,cAAC,OAAD,aACE,KAAK,EAAEF,KADT,EAEE,OAAO,EACL,cAAC,wBAAD,IACE,QAAQ,EAAEQ,UADZ,EAEE,MAAM,EAAEL,MAFV,EAGE,OAAO,EAAEF,OAHX,GAHJ,EASE,OAAO,EAAEK,OATX,EAUE,eAAe,EAAEC,UAVnB,EAWE,OAAO,EAAE,CAAC,OAAD,CAXX,EAYE,YAAY,EAAE,EAAEG,KAAK,EAAE,OAAT,EAZhB,IAaML,KAbN;EAeGD,QAfH,CADF;;AAmBD,CArCM","names":["React","useCallback","useState","Popover","FormattingPopoverContent","FormattingPopover","title","columns","onChange","config","children","props","visible","setVisible","handleSave","newConfig","width"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopover.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useState } from 'react';\nimport Popover from 'src/components/Popover';\nimport { FormattingPopoverContent } from './FormattingPopoverContent';\nimport { ConditionalFormattingConfig, FormattingPopoverProps } from './types';\n\nexport const FormattingPopover = ({\n  title,\n  columns,\n  onChange,\n  config,\n  children,\n  ...props\n}: FormattingPopoverProps) => {\n  const [visible, setVisible] = useState(false);\n\n  const handleSave = useCallback(\n    (newConfig: ConditionalFormattingConfig) => {\n      setVisible(false);\n      onChange(newConfig);\n    },\n    [onChange],\n  );\n\n  return (\n    <Popover\n      title={title}\n      content={\n        <FormattingPopoverContent\n          onChange={handleSave}\n          config={config}\n          columns={columns}\n        />\n      }\n      visible={visible}\n      onVisibleChange={setVisible}\n      trigger={['click']}\n      overlayStyle={{ width: '450px' }}\n      {...props}\n    >\n      {children}\n    </Popover>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}