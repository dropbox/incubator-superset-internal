{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { ensureIsArray, styled, t } from '@superset-ui/core';\nimport { StringParam, useQueryParam } from 'use-query-params';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport AsyncSelect from 'src/components/Select/AsyncSelect';\nimport { loadTags } from 'src/components/Tags/utils';\nimport { getValue } from 'src/components/Select/utils';\nimport AllEntitiesTable from 'src/features/allEntities/AllEntitiesTable';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst AllEntitiesContainer = styled.div`\n  ${(_ref) => {let { theme } = _ref;return `\n  background-color: ${theme.colors.grayscale.light4};\n  .select-control {\n    margin-left: ${theme.gridUnit * 4}px;\n    margin-right: ${theme.gridUnit * 4}px;\n    margin-bottom: ${theme.gridUnit * 2}px;\n  }\n  .select-control-label {\n    text-transform: uppercase;\n    font-size: ${theme.gridUnit * 3}px;\n    color: ${theme.colors.grayscale.base};\n    margin-bottom: ${theme.gridUnit * 1}px;\n  }`;}}\n`;\nconst AllEntitiesNav = styled.div`\n  ${(_ref2) => {let { theme } = _ref2;return `\n  height: ${theme.gridUnit * 12.5}px;\n  background-color: ${theme.colors.grayscale.light5};\n  margin-bottom: ${theme.gridUnit * 4}px;\n  .navbar-brand {\n    margin-left: ${theme.gridUnit * 2}px;\n    font-weight: ${theme.typography.weights.bold};\n  }`;}};\n`;\nfunction AllEntities() {\n  const [tagsQuery, setTagsQuery] = useQueryParam('tags', StringParam);\n  const onTagSearchChange = (value) => {\n    const tags = ensureIsArray(value).map((tag) => getValue(tag));\n    const tagSearch = tags.join(',');\n    setTagsQuery(tagSearch);\n  };\n  const tagsValue = useMemo(() => tagsQuery ?\n  tagsQuery.split(',').map((tag) => ({ value: tag, label: tag })) :\n  [], [tagsQuery]);\n  return ___EmotionJSX(AllEntitiesContainer, null,\n  ___EmotionJSX(AllEntitiesNav, null,\n  ___EmotionJSX(\"span\", { className: \"navbar-brand\" }, t('All Entities'))),\n\n  ___EmotionJSX(\"div\", { className: \"select-control\" },\n  ___EmotionJSX(\"div\", { className: \"select-control-label\" }, t('search by tags')),\n  ___EmotionJSX(AsyncSelect, { ariaLabel: \"tags\", value: tagsValue, onChange: onTagSearchChange, options: loadTags, placeholder: \"Select\", mode: \"multiple\" })),\n\n  ___EmotionJSX(AllEntitiesTable, { search: tagsQuery || '' }));\n\n}\nexport default withToasts(AllEntities);","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,CAAhC,QAAyC,mBAAzC;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,kBAA3C;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AAEA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,OAAOC,gBAAP,MAA6B,2CAA7B,C;AAEA,MAAMC,oBAAoB,GAAGT,MAAM,CAACU,GAAG;IACnC,eAAC,EAAEC,KAAF,EAAD,eAAe;sBACGA,KAAK,CAACC,MAAN,CAAaC,SAAb,CAAuBC,MAAM;;mBAEhCH,KAAK,CAACI,QAAN,GAAiB,CAAC;oBACjBJ,KAAK,CAACI,QAAN,GAAiB,CAAC;qBACjBJ,KAAK,CAACI,QAAN,GAAiB,CAAC;;;;iBAItBJ,KAAK,CAACI,QAAN,GAAiB,CAAC;aACtBJ,KAAK,CAACC,MAAN,CAAaC,SAAb,CAAuBG,IAAI;qBACnBL,KAAK,CAACI,QAAN,GAAiB,CAAC;IAXnC,EAYA;CAbJ;AAgBA,MAAME,cAAc,GAAGjB,MAAM,CAACU,GAAG;IAC7B,gBAAC,EAAEC,KAAF,EAAD,gBAAe;YACPA,KAAK,CAACI,QAAN,GAAiB,IAAI;sBACXJ,KAAK,CAACC,MAAN,CAAaC,SAAb,CAAuBK,MAAM;mBAChCP,KAAK,CAACI,QAAN,GAAiB,CAAC;;mBAElBJ,KAAK,CAACI,QAAN,GAAiB,CAAC;mBAClBJ,KAAK,CAACQ,UAAN,CAAiBC,OAAjB,CAAyBC,IAAI;IAN5C,EAOA;CARJ;AAWA,SAASC,WAAT,GAAoB;EAClB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BrB,aAAa,CAAC,MAAD,EAASD,WAAT,CAA/C;EAEA,MAAMuB,iBAAiB,GAAG,CAACC,KAAD,KAAuB;IAC/C,MAAMC,IAAI,GAAG5B,aAAa,CAAC2B,KAAD,CAAb,CAAqBE,GAArB,CAAyB,IAAG,KAAIrB,QAAQ,CAACsB,GAAD,CAAxC,CAAb;IACA,MAAMC,SAAS,GAAGH,IAAI,CAACI,IAAL,CAAU,GAAV,CAAlB;IACAP,YAAY,CAACM,SAAD,CAAZ;EACD,CAJD;EAMA,MAAME,SAAS,GAAGlC,OAAO,CACvB,MACEyB,SAAS;EACLA,SAAS,CAACU,KAAV,CAAgB,GAAhB,EAAqBL,GAArB,CAAyB,IAAG,MAAK,EAAEF,KAAK,EAAEG,GAAT,EAAcK,KAAK,EAAEL,GAArB,EAAL,CAA5B,CADK;EAEL,EAJiB,EAKvB,CAACN,SAAD,CALuB,CAAzB;EAQA,OACE,cAAC,oBAAD;EACE,cAAC,cAAD;EACE,wBAAM,SAAS,EAAC,cAAhB,IAAgCtB,CAAC,CAAC,cAAD,CAAjC,CADF,CADF;;EAIE,uBAAK,SAAS,EAAC,gBAAf;EACE,uBAAK,SAAS,EAAC,sBAAf,IAAuCA,CAAC,CAAC,gBAAD,CAAxC,CADF;EAEE,cAAC,WAAD,IACE,SAAS,EAAC,MADZ,EAEE,KAAK,EAAE+B,SAFT,EAGE,QAAQ,EAAEP,iBAHZ,EAIE,OAAO,EAAEnB,QAJX,EAKE,WAAW,EAAC,QALd,EAME,IAAI,EAAC,UANP,GAFF,CAJF;;EAeE,cAAC,gBAAD,IAAkB,MAAM,EAAEiB,SAAS,IAAI,EAAvC,GAfF,CADF;;AAmBD;AAED,eAAenB,UAAU,CAACkB,WAAD,CAAzB","names":["React","useMemo","ensureIsArray","styled","t","StringParam","useQueryParam","withToasts","AsyncSelect","loadTags","getValue","AllEntitiesTable","AllEntitiesContainer","div","theme","colors","grayscale","light4","gridUnit","base","AllEntitiesNav","light5","typography","weights","bold","AllEntities","tagsQuery","setTagsQuery","onTagSearchChange","value","tags","map","tag","tagSearch","join","tagsValue","split","label"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/pages/AllEntities/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { ensureIsArray, styled, t } from '@superset-ui/core';\nimport { StringParam, useQueryParam } from 'use-query-params';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport AsyncSelect from 'src/components/Select/AsyncSelect';\nimport { SelectValue } from 'antd/lib/select';\nimport { loadTags } from 'src/components/Tags/utils';\nimport { getValue } from 'src/components/Select/utils';\nimport AllEntitiesTable from 'src/features/allEntities/AllEntitiesTable';\n\nconst AllEntitiesContainer = styled.div`\n  ${({ theme }) => `\n  background-color: ${theme.colors.grayscale.light4};\n  .select-control {\n    margin-left: ${theme.gridUnit * 4}px;\n    margin-right: ${theme.gridUnit * 4}px;\n    margin-bottom: ${theme.gridUnit * 2}px;\n  }\n  .select-control-label {\n    text-transform: uppercase;\n    font-size: ${theme.gridUnit * 3}px;\n    color: ${theme.colors.grayscale.base};\n    margin-bottom: ${theme.gridUnit * 1}px;\n  }`}\n`;\n\nconst AllEntitiesNav = styled.div`\n  ${({ theme }) => `\n  height: ${theme.gridUnit * 12.5}px;\n  background-color: ${theme.colors.grayscale.light5};\n  margin-bottom: ${theme.gridUnit * 4}px;\n  .navbar-brand {\n    margin-left: ${theme.gridUnit * 2}px;\n    font-weight: ${theme.typography.weights.bold};\n  }`};\n`;\n\nfunction AllEntities() {\n  const [tagsQuery, setTagsQuery] = useQueryParam('tags', StringParam);\n\n  const onTagSearchChange = (value: SelectValue) => {\n    const tags = ensureIsArray(value).map(tag => getValue(tag));\n    const tagSearch = tags.join(',');\n    setTagsQuery(tagSearch);\n  };\n\n  const tagsValue = useMemo(\n    () =>\n      tagsQuery\n        ? tagsQuery.split(',').map(tag => ({ value: tag, label: tag }))\n        : [],\n    [tagsQuery],\n  );\n\n  return (\n    <AllEntitiesContainer>\n      <AllEntitiesNav>\n        <span className=\"navbar-brand\">{t('All Entities')}</span>\n      </AllEntitiesNav>\n      <div className=\"select-control\">\n        <div className=\"select-control-label\">{t('search by tags')}</div>\n        <AsyncSelect\n          ariaLabel=\"tags\"\n          value={tagsValue}\n          onChange={onTagSearchChange}\n          options={loadTags}\n          placeholder=\"Select\"\n          mode=\"multiple\"\n        />\n      </div>\n      <AllEntitiesTable search={tagsQuery || ''} />\n    </AllEntitiesContainer>\n  );\n}\n\nexport default withToasts(AllEntities);\n"]},"metadata":{},"sourceType":"module"}