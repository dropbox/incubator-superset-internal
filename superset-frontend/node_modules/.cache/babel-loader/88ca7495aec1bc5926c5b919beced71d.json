{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _debounce from \"lodash/debounce\";function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";} /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Collapse from 'src/components/Collapse';\nimport Card from 'src/components/Card';\nimport ButtonGroup from 'src/components/ButtonGroup';\nimport { css, t, styled } from '@superset-ui/core';\n\nimport { removeDataPreview, removeTables, addDangerToast, syncTable } from 'src/SqlLab/actions/sqlLab';\nimport { useTableExtendedMetadataQuery, useTableMetadataQuery } from 'src/hooks/apiResources';\nimport { Tooltip } from 'src/components/Tooltip';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport { IconTooltip } from 'src/components/IconTooltip';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport Loading from 'src/components/Loading';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\nimport ColumnElement from '../ColumnElement';\nimport ShowSQL from '../ShowSQL';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledSpan = styled.span`\n  color: ${(_ref) => {let { theme } = _ref;return theme.colors.primary.dark1;}};\n  &:hover {\n    color: ${(_ref2) => {let { theme } = _ref2;return theme.colors.primary.dark2;}};\n  }\n  cursor: pointer;\n`;\nconst Fade = styled.div`\n  transition: all ${(_ref3) => {let { theme } = _ref3;return theme.transitionTiming;}}s;\n  opacity: ${(props) => props.hovered ? 1 : 0};\n`;\nconst StyledCollapsePanel = styled(Collapse.Panel)`\n  ${(_ref4) => {let { theme } = _ref4;return css`\n    & {\n      .ws-el-controls {\n        margin-right: ${-theme.gridUnit}px;\n        display: flex;\n      }\n\n      .header-container {\n        display: flex;\n        flex: 1;\n        align-items: center;\n        width: 100%;\n\n        .table-name {\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          font-size: ${theme.typography.sizes.l}px;\n          flex: 1;\n        }\n\n        .header-right-side {\n          margin-left: auto;\n          display: flex;\n          align-items: center;\n          margin-right: ${theme.gridUnit * 8}px;\n        }\n      }\n    }\n  `;}}\n`;var _ref8 = process.env.NODE_ENV === \"production\" ? { name: \"1hs1mx1\", styles: \"padding-top:6px\" } : { name: \"14hmmm7-metadata\", styles: \"padding-top:6px;label:metadata;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy96aGFvcnVpL3NyYy9pbmN1YmF0b3Itc3VwZXJzZXQtaW50ZXJuYWwvc3VwZXJzZXQtZnJvbnRlbmQvc3JjL1NxbExhYi9jb21wb25lbnRzL1RhYmxlRWxlbWVudC9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcU5rSSIsImZpbGUiOiIvVXNlcnMvemhhb3J1aS9zcmMvaW5jdWJhdG9yLXN1cGVyc2V0LWludGVybmFsL3N1cGVyc2V0LWZyb250ZW5kL3NyYy9TcWxMYWIvY29tcG9uZW50cy9UYWJsZUVsZW1lbnQvaW5kZXgudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VSZWYsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZURpc3BhdGNoIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IENvbGxhcHNlIGZyb20gJ3NyYy9jb21wb25lbnRzL0NvbGxhcHNlJztcbmltcG9ydCBDYXJkIGZyb20gJ3NyYy9jb21wb25lbnRzL0NhcmQnO1xuaW1wb3J0IEJ1dHRvbkdyb3VwIGZyb20gJ3NyYy9jb21wb25lbnRzL0J1dHRvbkdyb3VwJztcbmltcG9ydCB7IGNzcywgdCwgc3R5bGVkIH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xuaW1wb3J0IHsgZGVib3VuY2UgfSBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgcmVtb3ZlRGF0YVByZXZpZXcsIHJlbW92ZVRhYmxlcywgYWRkRGFuZ2VyVG9hc3QsIHN5bmNUYWJsZSwgfSBmcm9tICdzcmMvU3FsTGFiL2FjdGlvbnMvc3FsTGFiJztcbmltcG9ydCB7IHVzZVRhYmxlRXh0ZW5kZWRNZXRhZGF0YVF1ZXJ5LCB1c2VUYWJsZU1ldGFkYXRhUXVlcnksIH0gZnJvbSAnc3JjL2hvb2tzL2FwaVJlc291cmNlcyc7XG5pbXBvcnQgeyBUb29sdGlwIH0gZnJvbSAnc3JjL2NvbXBvbmVudHMvVG9vbHRpcCc7XG5pbXBvcnQgQ29weVRvQ2xpcGJvYXJkIGZyb20gJ3NyYy9jb21wb25lbnRzL0NvcHlUb0NsaXBib2FyZCc7XG5pbXBvcnQgeyBJY29uVG9vbHRpcCB9IGZyb20gJ3NyYy9jb21wb25lbnRzL0ljb25Ub29sdGlwJztcbmltcG9ydCBNb2RhbFRyaWdnZXIgZnJvbSAnc3JjL2NvbXBvbmVudHMvTW9kYWxUcmlnZ2VyJztcbmltcG9ydCBMb2FkaW5nIGZyb20gJ3NyYy9jb21wb25lbnRzL0xvYWRpbmcnO1xuaW1wb3J0IHVzZUVmZmVjdEV2ZW50IGZyb20gJ3NyYy9ob29rcy91c2VFZmZlY3RFdmVudCc7XG5pbXBvcnQgQ29sdW1uRWxlbWVudCBmcm9tICcuLi9Db2x1bW5FbGVtZW50JztcbmltcG9ydCBTaG93U1FMIGZyb20gJy4uL1Nob3dTUUwnO1xuY29uc3QgU3R5bGVkU3BhbiA9IHN0eWxlZC5zcGFuIGBcbiAgY29sb3I6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUuY29sb3JzLnByaW1hcnkuZGFyazF9O1xuICAmOmhvdmVyIHtcbiAgICBjb2xvcjogJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5jb2xvcnMucHJpbWFyeS5kYXJrMn07XG4gIH1cbiAgY3Vyc29yOiBwb2ludGVyO1xuYDtcbmNvbnN0IEZhZGUgPSBzdHlsZWQuZGl2IGBcbiAgdHJhbnNpdGlvbjogYWxsICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUudHJhbnNpdGlvblRpbWluZ31zO1xuICBvcGFjaXR5OiAkeyhwcm9wcykgPT4gKHByb3BzLmhvdmVyZWQgPyAxIDogMCl9O1xuYDtcbmNvbnN0IFN0eWxlZENvbGxhcHNlUGFuZWwgPSBzdHlsZWQoQ29sbGFwc2UuUGFuZWwpIGBcbiAgJHsoeyB0aGVtZSB9KSA9PiBjc3MgYFxuICAgICYge1xuICAgICAgLndzLWVsLWNvbnRyb2xzIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAkey10aGVtZS5ncmlkVW5pdH1weDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIH1cblxuICAgICAgLmhlYWRlci1jb250YWluZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4OiAxO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICB3aWR0aDogMTAwJTtcblxuICAgICAgICAudGFibGUtbmFtZSB7XG4gICAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgICAgICAgIGZvbnQtc2l6ZTogJHt0aGVtZS50eXBvZ3JhcGh5LnNpemVzLmx9cHg7XG4gICAgICAgICAgZmxleDogMTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5oZWFkZXItcmlnaHQtc2lkZSB7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIG1hcmdpbi1yaWdodDogJHt0aGVtZS5ncmlkVW5pdCAqIDh9cHg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIGB9XG5gO1xuY29uc3QgVGFibGVFbGVtZW50ID0gKHsgdGFibGUsIC4uLnByb3BzIH0pID0+IHtcbiAgICBjb25zdCB7IGRiSWQsIHNjaGVtYSwgbmFtZSwgZXhwYW5kZWQgfSA9IHRhYmxlO1xuICAgIGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcbiAgICBjb25zdCB7IGRhdGE6IHRhYmxlTWV0YWRhdGEsIGlzU3VjY2VzczogaXNNZXRhZGF0YVN1Y2Nlc3MsIGlzTG9hZGluZzogaXNNZXRhZGF0YUxvYWRpbmcsIGlzRXJyb3I6IGhhc01ldGFkYXRhRXJyb3IsIH0gPSB1c2VUYWJsZU1ldGFkYXRhUXVlcnkoe1xuICAgICAgICBkYklkLFxuICAgICAgICBzY2hlbWEsXG4gICAgICAgIHRhYmxlOiBuYW1lLFxuICAgIH0sIHsgc2tpcDogIWV4cGFuZGVkIH0pO1xuICAgIGNvbnN0IHsgZGF0YTogdGFibGVFeHRlbmRlZE1ldGFkYXRhLCBpc1N1Y2Nlc3M6IGlzRXh0cmFNZXRhZGF0YVN1Y2Nlc3MsIGlzTG9hZGluZzogaXNFeHRyYU1ldGFkYXRhTG9hZGluZywgaXNFcnJvcjogaGFzRXh0ZW5kZWRNZXRhZGF0YUVycm9yLCB9ID0gdXNlVGFibGVFeHRlbmRlZE1ldGFkYXRhUXVlcnkoe1xuICAgICAgICBkYklkLFxuICAgICAgICBzY2hlbWEsXG4gICAgICAgIHRhYmxlOiBuYW1lLFxuICAgIH0sIHsgc2tpcDogIWV4cGFuZGVkIH0pO1xuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmIChoYXNNZXRhZGF0YUVycm9yIHx8IGhhc0V4dGVuZGVkTWV0YWRhdGFFcnJvcikge1xuICAgICAgICAgICAgZGlzcGF0Y2goYWRkRGFuZ2VyVG9hc3QodCgnQW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgZmV0Y2hpbmcgdGFibGUgbWV0YWRhdGEnKSkpO1xuICAgICAgICB9XG4gICAgfSwgW2hhc01ldGFkYXRhRXJyb3IsIGhhc0V4dGVuZGVkTWV0YWRhdGFFcnJvciwgZGlzcGF0Y2hdKTtcbiAgICBjb25zdCB0YWJsZURhdGEgPSB7XG4gICAgICAgIC4uLnRhYmxlTWV0YWRhdGEsXG4gICAgICAgIC4uLnRhYmxlRXh0ZW5kZWRNZXRhZGF0YSxcbiAgICB9O1xuICAgIC8vIFRPRE86IG1pZ3JhdGUgc3luY1RhYmxlIGxvZ2ljIGJ5IFNJUC05M1xuICAgIGNvbnN0IHN5bmNUYWJsZU1ldGFkYXRhID0gdXNlRWZmZWN0RXZlbnQoKCkgPT4ge1xuICAgICAgICBjb25zdCB7IGluaXRpYWxpemVkIH0gPSB0YWJsZTtcbiAgICAgICAgaWYgKCFpbml0aWFsaXplZCkge1xuICAgICAgICAgICAgZGlzcGF0Y2goc3luY1RhYmxlKHRhYmxlLCB0YWJsZURhdGEpKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmIChpc01ldGFkYXRhU3VjY2VzcyAmJiBpc0V4dHJhTWV0YWRhdGFTdWNjZXNzKSB7XG4gICAgICAgICAgICBzeW5jVGFibGVNZXRhZGF0YSgpO1xuICAgICAgICB9XG4gICAgfSwgW2lzTWV0YWRhdGFTdWNjZXNzLCBpc0V4dHJhTWV0YWRhdGFTdWNjZXNzLCBzeW5jVGFibGVNZXRhZGF0YV0pO1xuICAgIGNvbnN0IFtzb3J0Q29sdW1ucywgc2V0U29ydENvbHVtbnNdID0gdXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IFtob3ZlcmVkLCBzZXRIb3ZlcmVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCB0YWJsZU5hbWVSZWYgPSB1c2VSZWYobnVsbCk7XG4gICAgY29uc3Qgc2V0SG92ZXIgPSAoaG92ZXJlZCkgPT4ge1xuICAgICAgICBkZWJvdW5jZSgoKSA9PiBzZXRIb3ZlcmVkKGhvdmVyZWQpLCAxMDApKCk7XG4gICAgfTtcbiAgICBjb25zdCByZW1vdmVUYWJsZSA9ICgpID0+IHtcbiAgICAgICAgZGlzcGF0Y2gocmVtb3ZlRGF0YVByZXZpZXcodGFibGUpKTtcbiAgICAgICAgZGlzcGF0Y2gocmVtb3ZlVGFibGVzKFt0YWJsZV0pKTtcbiAgICB9O1xuICAgIGNvbnN0IHRvZ2dsZVNvcnRDb2x1bW5zID0gKCkgPT4ge1xuICAgICAgICBzZXRTb3J0Q29sdW1ucyhwcmV2U3RhdGUgPT4gIXByZXZTdGF0ZSk7XG4gICAgfTtcbiAgICBjb25zdCByZW5kZXJXZWxsID0gKCkgPT4ge1xuICAgICAgICBsZXQgcGFydGl0aW9ucztcbiAgICAgICAgbGV0IG1ldGFkYXRhO1xuICAgICAgICBpZiAodGFibGVEYXRhLnBhcnRpdGlvbnMpIHtcbiAgICAgICAgICAgIGxldCBwYXJ0aXRpb25RdWVyeTtcbiAgICAgICAgICAgIGxldCBwYXJ0aXRpb25DbGlwQm9hcmQ7XG4gICAgICAgICAgICBpZiAodGFibGVEYXRhLnBhcnRpdGlvbnMucGFydGl0aW9uUXVlcnkpIHtcbiAgICAgICAgICAgICAgICAoeyBwYXJ0aXRpb25RdWVyeSB9ID0gdGFibGVEYXRhLnBhcnRpdGlvbnMpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHR0ID0gdCgnQ29weSBwYXJ0aXRpb24gcXVlcnkgdG8gY2xpcGJvYXJkJyk7XG4gICAgICAgICAgICAgICAgcGFydGl0aW9uQ2xpcEJvYXJkID0gKDxDb3B5VG9DbGlwYm9hcmQgdGV4dD17cGFydGl0aW9uUXVlcnl9IHNob3VsZFNob3dUZXh0PXtmYWxzZX0gdG9vbHRpcFRleHQ9e3R0fSBjb3B5Tm9kZT17PGkgY2xhc3NOYW1lPVwiZmEgZmEtY2xpcGJvYXJkXCIvPn0vPik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBsYXRlc3QgPSBPYmplY3QuZW50cmllcyh0YWJsZURhdGEucGFydGl0aW9ucz8ubGF0ZXN0IHx8IFtdKVxuICAgICAgICAgICAgICAgIC5tYXAoKFtrZXksIHZhbHVlXSkgPT4gYCR7a2V5fT0ke3ZhbHVlfWApXG4gICAgICAgICAgICAgICAgLmpvaW4oJy8nKTtcbiAgICAgICAgICAgIHBhcnRpdGlvbnMgPSAoPGRpdj5cbiAgICAgICAgICA8c21hbGw+XG4gICAgICAgICAgICB7dCgnbGF0ZXN0IHBhcnRpdGlvbjonKX0ge2xhdGVzdH1cbiAgICAgICAgICA8L3NtYWxsPnsnICd9XG4gICAgICAgICAge3BhcnRpdGlvbkNsaXBCb2FyZH1cbiAgICAgICAgPC9kaXY+KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGFibGVEYXRhLm1ldGFkYXRhKSB7XG4gICAgICAgICAgICBtZXRhZGF0YSA9IE9iamVjdC5lbnRyaWVzKHRhYmxlRGF0YS5tZXRhZGF0YSkubWFwKChba2V5LCB2YWx1ZV0pID0+ICg8ZGl2PlxuICAgICAgICAgIDxzbWFsbD5cbiAgICAgICAgICAgIDxzdHJvbmc+e2tleX06PC9zdHJvbmc+IHt2YWx1ZX1cbiAgICAgICAgICA8L3NtYWxsPlxuICAgICAgICA8L2Rpdj4pKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXBhcnRpdGlvbnMgJiYgKCFtZXRhZGF0YSB8fCAhbWV0YWRhdGEubGVuZ3RoKSkge1xuICAgICAgICAgICAgLy8gaGlkZSBwYXJ0aXRpb24gYW5kIG1ldGFkYXRhIGNhcmQgdmlld1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICg8Q2FyZCBzaXplPVwic21hbGxcIj5cbiAgICAgICAge3BhcnRpdGlvbnN9XG4gICAgICAgIHttZXRhZGF0YX1cbiAgICAgIDwvQ2FyZD4pO1xuICAgIH07XG4gICAgY29uc3QgcmVuZGVyQ29udHJvbHMgPSAoKSA9PiB7XG4gICAgICAgIGxldCBrZXlMaW5rO1xuICAgICAgICBjb25zdCBLRVlTX0ZPUl9UQUJMRV9URVhUID0gdCgnS2V5cyBmb3IgdGFibGUnKTtcbiAgICAgICAgaWYgKHRhYmxlRGF0YT8uaW5kZXhlcz8ubGVuZ3RoKSB7XG4gICAgICAgICAgICBrZXlMaW5rID0gKDxNb2RhbFRyaWdnZXIgbW9kYWxUaXRsZT17YCR7S0VZU19GT1JfVEFCTEVfVEVYVH0gJHtuYW1lfWB9IG1vZGFsQm9keT17dGFibGVEYXRhLmluZGV4ZXMubWFwKChpeCwgaSkgPT4gKDxwcmUga2V5PXtpfT57SlNPTi5zdHJpbmdpZnkoaXgsIG51bGwsICcgICcpfTwvcHJlPikpfSB0cmlnZ2VyTm9kZT17PEljb25Ub29sdGlwIGNsYXNzTmFtZT1cImZhIGZhLWtleSBwdWxsLWxlZnQgbS1sLTJcIiB0b29sdGlwPXt0KCdWaWV3IGtleXMgJiBpbmRleGVzICglcyknLCB0YWJsZURhdGEuaW5kZXhlcy5sZW5ndGgpfS8+fS8+KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKDxCdXR0b25Hcm91cCBjbGFzc05hbWU9XCJ3cy1lbC1jb250cm9sc1wiPlxuICAgICAgICB7a2V5TGlua31cbiAgICAgICAgPEljb25Ub29sdGlwIGNsYXNzTmFtZT17YGZhIGZhLXNvcnQtJHtzb3J0Q29sdW1ucyA/ICdudW1lcmljJyA6ICdhbHBoYSd9LWFzYyBgICtcbiAgICAgICAgICAgICAgICAncHVsbC1sZWZ0IHNvcnQtY29scyBtLWwtMiBwb2ludGVyJ30gb25DbGljaz17dG9nZ2xlU29ydENvbHVtbnN9IHRvb2x0aXA9e3NvcnRDb2x1bW5zXG4gICAgICAgICAgICAgICAgPyB0KCdPcmlnaW5hbCB0YWJsZSBjb2x1bW4gb3JkZXInKVxuICAgICAgICAgICAgICAgIDogdCgnU29ydCBjb2x1bW5zIGFscGhhYmV0aWNhbGx5Jyl9Lz5cbiAgICAgICAge3RhYmxlRGF0YS5zZWxlY3RTdGFyICYmICg8Q29weVRvQ2xpcGJvYXJkIGNvcHlOb2RlPXs8SWNvblRvb2x0aXAgYXJpYS1sYWJlbD1cIkNvcHlcIiB0b29sdGlwPXt0KCdDb3B5IFNFTEVDVCBzdGF0ZW1lbnQgdG8gdGhlIGNsaXBib2FyZCcpfT5cbiAgICAgICAgICAgICAgICA8aSBhcmlhLWhpZGRlbiBjbGFzc05hbWU9XCJmYSBmYS1jbGlwYm9hcmQgcHVsbC1sZWZ0IG0tbC0yXCIvPlxuICAgICAgICAgICAgICA8L0ljb25Ub29sdGlwPn0gdGV4dD17dGFibGVEYXRhLnNlbGVjdFN0YXJ9IHNob3VsZFNob3dUZXh0PXtmYWxzZX0vPil9XG4gICAgICAgIHt0YWJsZURhdGEudmlldyAmJiAoPFNob3dTUUwgc3FsPXt0YWJsZURhdGEudmlld30gdG9vbHRpcFRleHQ9e3QoJ1Nob3cgQ1JFQVRFIFZJRVcgc3RhdGVtZW50Jyl9IHRpdGxlPXt0KCdDUkVBVEUgVklFVyBzdGF0ZW1lbnQnKX0vPil9XG4gICAgICAgIDxJY29uVG9vbHRpcCBjbGFzc05hbWU9XCJmYSBmYS10aW1lcyB0YWJsZS1yZW1vdmUgcHVsbC1sZWZ0IG0tbC0yIHBvaW50ZXJcIiBvbkNsaWNrPXtyZW1vdmVUYWJsZX0gdG9vbHRpcD17dCgnUmVtb3ZlIHRhYmxlIHByZXZpZXcnKX0vPlxuICAgICAgPC9CdXR0b25Hcm91cD4pO1xuICAgIH07XG4gICAgY29uc3QgcmVuZGVySGVhZGVyID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBlbGVtZW50ID0gdGFibGVOYW1lUmVmLmN1cnJlbnQ7XG4gICAgICAgIGxldCB0cmlnZ2VyID0gW107XG4gICAgICAgIGlmIChlbGVtZW50ICYmIGVsZW1lbnQub2Zmc2V0V2lkdGggPCBlbGVtZW50LnNjcm9sbFdpZHRoKSB7XG4gICAgICAgICAgICB0cmlnZ2VyID0gWydob3ZlciddO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoPGRpdiBkYXRhLXRlc3Q9XCJ0YWJsZS1lbGVtZW50LWhlYWRlci1jb250YWluZXJcIiBjbGFzc05hbWU9XCJjbGVhcmZpeCBoZWFkZXItY29udGFpbmVyXCIgb25Nb3VzZUVudGVyPXsoKSA9PiBzZXRIb3Zlcih0cnVlKX0gb25Nb3VzZUxlYXZlPXsoKSA9PiBzZXRIb3ZlcihmYWxzZSl9PlxuICAgICAgICA8VG9vbHRpcCBpZD1cImNvcHktdG8tY2xpcGJvYXJkLXRvb2x0aXBcIiBzdHlsZT17eyBjdXJzb3I6ICdwb2ludGVyJyB9fSB0aXRsZT17bmFtZX0gdHJpZ2dlcj17dHJpZ2dlcn0+XG4gICAgICAgICAgPFN0eWxlZFNwYW4gZGF0YS10ZXN0PVwiY29sbGFwc2VcIiByZWY9e3RhYmxlTmFtZVJlZn0gY2xhc3NOYW1lPVwidGFibGUtbmFtZVwiPlxuICAgICAgICAgICAgPHN0cm9uZz57bmFtZX08L3N0cm9uZz5cbiAgICAgICAgICA8L1N0eWxlZFNwYW4+XG4gICAgICAgIDwvVG9vbHRpcD5cblxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInB1bGwtcmlnaHQgaGVhZGVyLXJpZ2h0LXNpZGVcIj5cbiAgICAgICAgICB7aXNNZXRhZGF0YUxvYWRpbmcgfHwgaXNFeHRyYU1ldGFkYXRhTG9hZGluZyA/ICg8TG9hZGluZyBwb3NpdGlvbj1cImlubGluZVwiLz4pIDogKDxGYWRlIGRhdGEtdGVzdD1cImZhZGVcIiBob3ZlcmVkPXtob3ZlcmVkfSBvbkNsaWNrPXtlID0+IGUuc3RvcFByb3BhZ2F0aW9uKCl9PlxuICAgICAgICAgICAgICB7cmVuZGVyQ29udHJvbHMoKX1cbiAgICAgICAgICAgIDwvRmFkZT4pfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2Pik7XG4gICAgfTtcbiAgICBjb25zdCByZW5kZXJCb2R5ID0gKCkgPT4ge1xuICAgICAgICBsZXQgY29scztcbiAgICAgICAgaWYgKHRhYmxlRGF0YS5jb2x1bW5zKSB7XG4gICAgICAgICAgICBjb2xzID0gdGFibGVEYXRhLmNvbHVtbnMuc2xpY2UoKTtcbiAgICAgICAgICAgIGlmIChzb3J0Q29sdW1ucykge1xuICAgICAgICAgICAgICAgIGNvbHMuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBjb2xBID0gYS5uYW1lLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbEIgPSBiLm5hbWUudG9VcHBlckNhc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbEEgPCBjb2xCID8gLTEgOiBjb2xBID4gY29sQiA/IDEgOiAwO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG1ldGFkYXRhID0gKDxkaXYgZGF0YS10ZXN0PVwidGFibGUtZWxlbWVudFwiIG9uTW91c2VFbnRlcj17KCkgPT4gc2V0SG92ZXIodHJ1ZSl9IG9uTW91c2VMZWF2ZT17KCkgPT4gc2V0SG92ZXIoZmFsc2UpfSBjc3M9e3sgcGFkZGluZ1RvcDogNiB9fT5cbiAgICAgICAge3JlbmRlcldlbGwoKX1cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICB7Y29scz8ubWFwKGNvbCA9PiAoPENvbHVtbkVsZW1lbnQgY29sdW1uPXtjb2x9IGtleT17Y29sLm5hbWV9Lz4pKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj4pO1xuICAgICAgICByZXR1cm4gbWV0YWRhdGE7XG4gICAgfTtcbiAgICByZXR1cm4gKDxTdHlsZWRDb2xsYXBzZVBhbmVsIHsuLi5wcm9wc30ga2V5PXt0YWJsZS5pZH0gaGVhZGVyPXtyZW5kZXJIZWFkZXIoKX0gY2xhc3NOYW1lPVwiVGFibGVFbGVtZW50XCIgZm9yY2VSZW5kZXI+XG4gICAgICB7cmVuZGVyQm9keSgpfVxuICAgIDwvU3R5bGVkQ29sbGFwc2VQYW5lbD4pO1xufTtcbmV4cG9ydCBkZWZhdWx0IFRhYmxlRWxlbWVudDtcbiJdfQ== */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\nconst TableElement = (_ref5) => {let { table, ...props } = _ref5;\n  const { dbId, schema, name, expanded } = table;\n  const dispatch = useDispatch();\n  const { data: tableMetadata, isSuccess: isMetadataSuccess, isLoading: isMetadataLoading, isError: hasMetadataError } = useTableMetadataQuery({\n    dbId,\n    schema,\n    table: name },\n  { skip: !expanded });\n  const { data: tableExtendedMetadata, isSuccess: isExtraMetadataSuccess, isLoading: isExtraMetadataLoading, isError: hasExtendedMetadataError } = useTableExtendedMetadataQuery({\n    dbId,\n    schema,\n    table: name },\n  { skip: !expanded });\n  useEffect(() => {\n    if (hasMetadataError || hasExtendedMetadataError) {\n      dispatch(addDangerToast(t('An error occurred while fetching table metadata')));\n    }\n  }, [hasMetadataError, hasExtendedMetadataError, dispatch]);\n  const tableData = {\n    ...tableMetadata,\n    ...tableExtendedMetadata };\n\n  // TODO: migrate syncTable logic by SIP-93\n  const syncTableMetadata = useEffectEvent(() => {\n    const { initialized } = table;\n    if (!initialized) {\n      dispatch(syncTable(table, tableData));\n    }\n  });\n  useEffect(() => {\n    if (isMetadataSuccess && isExtraMetadataSuccess) {\n      syncTableMetadata();\n    }\n  }, [isMetadataSuccess, isExtraMetadataSuccess, syncTableMetadata]);\n  const [sortColumns, setSortColumns] = useState(false);\n  const [hovered, setHovered] = useState(false);\n  const tableNameRef = useRef(null);\n  const setHover = (hovered) => {\n    _debounce(() => setHovered(hovered), 100)();\n  };\n  const removeTable = () => {\n    dispatch(removeDataPreview(table));\n    dispatch(removeTables([table]));\n  };\n  const toggleSortColumns = () => {\n    setSortColumns((prevState) => !prevState);\n  };\n  const renderWell = () => {\n    let partitions;\n    let metadata;\n    if (tableData.partitions) {var _tableData$partitions;\n      let partitionQuery;\n      let partitionClipBoard;\n      if (tableData.partitions.partitionQuery) {\n        ({ partitionQuery } = tableData.partitions);\n        const tt = t('Copy partition query to clipboard');\n        partitionClipBoard = ___EmotionJSX(CopyToClipboard, { text: partitionQuery, shouldShowText: false, tooltipText: tt, copyNode: ___EmotionJSX(\"i\", { className: \"fa fa-clipboard\" }) });\n      }\n      const latest = Object.entries(((_tableData$partitions = tableData.partitions) == null ? void 0 : _tableData$partitions.latest) || []).\n      map((_ref6) => {let [key, value] = _ref6;return `${key}=${value}`;}).\n      join('/');\n      partitions = ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(\"small\", null,\n      t('latest partition:'), \" \", latest),\n      ' ',\n      partitionClipBoard);\n\n    }\n    if (tableData.metadata) {\n      metadata = Object.entries(tableData.metadata).map((_ref7) => {let [key, value] = _ref7;return ___EmotionJSX(\"div\", null,\n        ___EmotionJSX(\"small\", null,\n        ___EmotionJSX(\"strong\", null, key, \":\"), \" \", value));});\n\n\n    }\n    if (!partitions && (!metadata || !metadata.length)) {\n      // hide partition and metadata card view\n      return null;\n    }\n    return ___EmotionJSX(Card, { size: \"small\" },\n    partitions,\n    metadata);\n\n  };\n  const renderControls = () => {var _tableData$indexes;\n    let keyLink;\n    const KEYS_FOR_TABLE_TEXT = t('Keys for table');\n    if (tableData != null && (_tableData$indexes = tableData.indexes) != null && _tableData$indexes.length) {\n      keyLink = ___EmotionJSX(ModalTrigger, { modalTitle: `${KEYS_FOR_TABLE_TEXT} ${name}`, modalBody: tableData.indexes.map((ix, i) => ___EmotionJSX(\"pre\", { key: i }, JSON.stringify(ix, null, '  '))), triggerNode: ___EmotionJSX(IconTooltip, { className: \"fa fa-key pull-left m-l-2\", tooltip: t('View keys & indexes (%s)', tableData.indexes.length) }) });\n    }\n    return ___EmotionJSX(ButtonGroup, { className: \"ws-el-controls\" },\n    keyLink,\n    ___EmotionJSX(IconTooltip, { className: `fa fa-sort-${sortColumns ? 'numeric' : 'alpha'}-asc ` +\n      'pull-left sort-cols m-l-2 pointer', onClick: toggleSortColumns, tooltip: sortColumns ?\n      t('Original table column order') :\n      t('Sort columns alphabetically') }),\n    tableData.selectStar && ___EmotionJSX(CopyToClipboard, { copyNode: ___EmotionJSX(IconTooltip, { \"aria-label\": \"Copy\", tooltip: t('Copy SELECT statement to the clipboard') },\n      ___EmotionJSX(\"i\", { \"aria-hidden\": true, className: \"fa fa-clipboard pull-left m-l-2\" })),\n      text: tableData.selectStar, shouldShowText: false }),\n    tableData.view && ___EmotionJSX(ShowSQL, { sql: tableData.view, tooltipText: t('Show CREATE VIEW statement'), title: t('CREATE VIEW statement') }),\n    ___EmotionJSX(IconTooltip, { className: \"fa fa-times table-remove pull-left m-l-2 pointer\", onClick: removeTable, tooltip: t('Remove table preview') }));\n\n  };\n  const renderHeader = () => {\n    const element = tableNameRef.current;\n    let trigger = [];\n    if (element && element.offsetWidth < element.scrollWidth) {\n      trigger = ['hover'];\n    }\n    return ___EmotionJSX(\"div\", { className: \"clearfix header-container\", onMouseEnter: () => setHover(true), onMouseLeave: () => setHover(false) },\n    ___EmotionJSX(Tooltip, { id: \"copy-to-clipboard-tooltip\", style: { cursor: 'pointer' }, title: name, trigger: trigger },\n    ___EmotionJSX(StyledSpan, { ref: tableNameRef, className: \"table-name\" },\n    ___EmotionJSX(\"strong\", null, name))),\n\n\n\n    ___EmotionJSX(\"div\", { className: \"pull-right header-right-side\" },\n    isMetadataLoading || isExtraMetadataLoading ? ___EmotionJSX(Loading, { position: \"inline\" }) : ___EmotionJSX(Fade, { hovered: hovered, onClick: (e) => e.stopPropagation() },\n    renderControls())));\n\n\n\n  };\n  const renderBody = () => {var _cols;\n    let cols;\n    if (tableData.columns) {\n      cols = tableData.columns.slice();\n      if (sortColumns) {\n        cols.sort((a, b) => {\n          const colA = a.name.toUpperCase();\n          const colB = b.name.toUpperCase();\n          return colA < colB ? -1 : colA > colB ? 1 : 0;\n        });\n      }\n    }\n    const metadata = ___EmotionJSX(\"div\", { onMouseEnter: () => setHover(true), onMouseLeave: () => setHover(false), css: _ref8 },\n    renderWell(),\n    ___EmotionJSX(\"div\", null, (_cols =\n    cols) == null ? void 0 : _cols.map((col) => ___EmotionJSX(ColumnElement, { column: col, key: col.name }))));\n\n\n    return metadata;\n  };\n  return ___EmotionJSX(StyledCollapsePanel, _extends({}, props, { key: table.id, header: renderHeader(), className: \"TableElement\", forceRender: true }),\n  renderBody());\n\n};\nexport default TableElement;","map":{"version":3,"mappings":"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","names":["React","useState","useRef","useEffect","useDispatch","Collapse","Card","ButtonGroup","css","t","styled","removeDataPreview","removeTables","addDangerToast","syncTable","useTableExtendedMetadataQuery","useTableMetadataQuery","Tooltip","CopyToClipboard","IconTooltip","ModalTrigger","Loading","useEffectEvent","ColumnElement","ShowSQL","StyledSpan","span","theme","colors","primary","dark1","dark2","Fade","div","transitionTiming","props","hovered","StyledCollapsePanel","Panel","gridUnit","typography","sizes","l","TableElement","table","dbId","schema","name","expanded","dispatch","data","tableMetadata","isSuccess","isMetadataSuccess","isLoading","isMetadataLoading","isError","hasMetadataError","skip","tableExtendedMetadata","isExtraMetadataSuccess","isExtraMetadataLoading","hasExtendedMetadataError","tableData","syncTableMetadata","initialized","sortColumns","setSortColumns","setHovered","tableNameRef","setHover","removeTable","toggleSortColumns","prevState","renderWell","partitions","metadata","partitionQuery","partitionClipBoard","tt","latest","Object","entries","map","key","value","join","length","renderControls","keyLink","KEYS_FOR_TABLE_TEXT","indexes","ix","i","JSON","stringify","selectStar","view","renderHeader","element","current","trigger","offsetWidth","scrollWidth","cursor","e","stopPropagation","renderBody","cols","columns","slice","sort","a","b","colA","toUpperCase","colB","col","id"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/SqlLab/components/TableElement/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Collapse from 'src/components/Collapse';\nimport Card from 'src/components/Card';\nimport ButtonGroup from 'src/components/ButtonGroup';\nimport { css, t, styled } from '@superset-ui/core';\nimport { debounce } from 'lodash';\n\nimport {\n  removeDataPreview,\n  removeTables,\n  addDangerToast,\n  syncTable,\n} from 'src/SqlLab/actions/sqlLab';\nimport {\n  useTableExtendedMetadataQuery,\n  useTableMetadataQuery,\n} from 'src/hooks/apiResources';\nimport { Tooltip } from 'src/components/Tooltip';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport { IconTooltip } from 'src/components/IconTooltip';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport Loading from 'src/components/Loading';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\nimport ColumnElement, { ColumnKeyTypeType } from '../ColumnElement';\nimport ShowSQL from '../ShowSQL';\n\nexport interface Column {\n  name: string;\n  keys?: { type: ColumnKeyTypeType }[];\n  type: string;\n}\n\nexport interface Table {\n  id: string;\n  dbId: number;\n  schema: string;\n  name: string;\n  dataPreviewQueryId?: string | null;\n  expanded?: boolean;\n  initialized?: boolean;\n}\n\nexport interface TableElementProps {\n  table: Table;\n}\n\nconst StyledSpan = styled.span`\n  color: ${({ theme }) => theme.colors.primary.dark1};\n  &:hover {\n    color: ${({ theme }) => theme.colors.primary.dark2};\n  }\n  cursor: pointer;\n`;\n\nconst Fade = styled.div`\n  transition: all ${({ theme }) => theme.transitionTiming}s;\n  opacity: ${(props: { hovered: boolean }) => (props.hovered ? 1 : 0)};\n`;\n\nconst StyledCollapsePanel = styled(Collapse.Panel)`\n  ${({ theme }) => css`\n    & {\n      .ws-el-controls {\n        margin-right: ${-theme.gridUnit}px;\n        display: flex;\n      }\n\n      .header-container {\n        display: flex;\n        flex: 1;\n        align-items: center;\n        width: 100%;\n\n        .table-name {\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          font-size: ${theme.typography.sizes.l}px;\n          flex: 1;\n        }\n\n        .header-right-side {\n          margin-left: auto;\n          display: flex;\n          align-items: center;\n          margin-right: ${theme.gridUnit * 8}px;\n        }\n      }\n    }\n  `}\n`;\n\nconst TableElement = ({ table, ...props }: TableElementProps) => {\n  const { dbId, schema, name, expanded } = table;\n  const dispatch = useDispatch();\n  const {\n    data: tableMetadata,\n    isSuccess: isMetadataSuccess,\n    isLoading: isMetadataLoading,\n    isError: hasMetadataError,\n  } = useTableMetadataQuery(\n    {\n      dbId,\n      schema,\n      table: name,\n    },\n    { skip: !expanded },\n  );\n  const {\n    data: tableExtendedMetadata,\n    isSuccess: isExtraMetadataSuccess,\n    isLoading: isExtraMetadataLoading,\n    isError: hasExtendedMetadataError,\n  } = useTableExtendedMetadataQuery(\n    {\n      dbId,\n      schema,\n      table: name,\n    },\n    { skip: !expanded },\n  );\n\n  useEffect(() => {\n    if (hasMetadataError || hasExtendedMetadataError) {\n      dispatch(\n        addDangerToast(t('An error occurred while fetching table metadata')),\n      );\n    }\n  }, [hasMetadataError, hasExtendedMetadataError, dispatch]);\n\n  const tableData = {\n    ...tableMetadata,\n    ...tableExtendedMetadata,\n  };\n\n  // TODO: migrate syncTable logic by SIP-93\n  const syncTableMetadata = useEffectEvent(() => {\n    const { initialized } = table;\n    if (!initialized) {\n      dispatch(syncTable(table, tableData));\n    }\n  });\n\n  useEffect(() => {\n    if (isMetadataSuccess && isExtraMetadataSuccess) {\n      syncTableMetadata();\n    }\n  }, [isMetadataSuccess, isExtraMetadataSuccess, syncTableMetadata]);\n\n  const [sortColumns, setSortColumns] = useState(false);\n  const [hovered, setHovered] = useState(false);\n  const tableNameRef = useRef<HTMLInputElement>(null);\n\n  const setHover = (hovered: boolean) => {\n    debounce(() => setHovered(hovered), 100)();\n  };\n\n  const removeTable = () => {\n    dispatch(removeDataPreview(table));\n    dispatch(removeTables([table]));\n  };\n\n  const toggleSortColumns = () => {\n    setSortColumns(prevState => !prevState);\n  };\n\n  const renderWell = () => {\n    let partitions;\n    let metadata;\n    if (tableData.partitions) {\n      let partitionQuery;\n      let partitionClipBoard;\n      if (tableData.partitions.partitionQuery) {\n        ({ partitionQuery } = tableData.partitions);\n        const tt = t('Copy partition query to clipboard');\n        partitionClipBoard = (\n          <CopyToClipboard\n            text={partitionQuery}\n            shouldShowText={false}\n            tooltipText={tt}\n            copyNode={<i className=\"fa fa-clipboard\" />}\n          />\n        );\n      }\n      const latest = Object.entries(tableData.partitions?.latest || [])\n        .map(([key, value]) => `${key}=${value}`)\n        .join('/');\n\n      partitions = (\n        <div>\n          <small>\n            {t('latest partition:')} {latest}\n          </small>{' '}\n          {partitionClipBoard}\n        </div>\n      );\n    }\n\n    if (tableData.metadata) {\n      metadata = Object.entries(tableData.metadata).map(([key, value]) => (\n        <div>\n          <small>\n            <strong>{key}:</strong> {value}\n          </small>\n        </div>\n      ));\n    }\n\n    if (!partitions && (!metadata || !metadata.length)) {\n      // hide partition and metadata card view\n      return null;\n    }\n\n    return (\n      <Card size=\"small\">\n        {partitions}\n        {metadata}\n      </Card>\n    );\n  };\n\n  const renderControls = () => {\n    let keyLink;\n    const KEYS_FOR_TABLE_TEXT = t('Keys for table');\n    if (tableData?.indexes?.length) {\n      keyLink = (\n        <ModalTrigger\n          modalTitle={`${KEYS_FOR_TABLE_TEXT} ${name}`}\n          modalBody={tableData.indexes.map((ix, i) => (\n            <pre key={i}>{JSON.stringify(ix, null, '  ')}</pre>\n          ))}\n          triggerNode={\n            <IconTooltip\n              className=\"fa fa-key pull-left m-l-2\"\n              tooltip={t('View keys & indexes (%s)', tableData.indexes.length)}\n            />\n          }\n        />\n      );\n    }\n    return (\n      <ButtonGroup className=\"ws-el-controls\">\n        {keyLink}\n        <IconTooltip\n          className={\n            `fa fa-sort-${sortColumns ? 'numeric' : 'alpha'}-asc ` +\n            'pull-left sort-cols m-l-2 pointer'\n          }\n          onClick={toggleSortColumns}\n          tooltip={\n            sortColumns\n              ? t('Original table column order')\n              : t('Sort columns alphabetically')\n          }\n        />\n        {tableData.selectStar && (\n          <CopyToClipboard\n            copyNode={\n              <IconTooltip\n                aria-label=\"Copy\"\n                tooltip={t('Copy SELECT statement to the clipboard')}\n              >\n                <i aria-hidden className=\"fa fa-clipboard pull-left m-l-2\" />\n              </IconTooltip>\n            }\n            text={tableData.selectStar}\n            shouldShowText={false}\n          />\n        )}\n        {tableData.view && (\n          <ShowSQL\n            sql={tableData.view}\n            tooltipText={t('Show CREATE VIEW statement')}\n            title={t('CREATE VIEW statement')}\n          />\n        )}\n        <IconTooltip\n          className=\"fa fa-times table-remove pull-left m-l-2 pointer\"\n          onClick={removeTable}\n          tooltip={t('Remove table preview')}\n        />\n      </ButtonGroup>\n    );\n  };\n\n  const renderHeader = () => {\n    const element: HTMLInputElement | null = tableNameRef.current;\n    let trigger: string[] = [];\n    if (element && element.offsetWidth < element.scrollWidth) {\n      trigger = ['hover'];\n    }\n\n    return (\n      <div\n        data-test=\"table-element-header-container\"\n        className=\"clearfix header-container\"\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n      >\n        <Tooltip\n          id=\"copy-to-clipboard-tooltip\"\n          style={{ cursor: 'pointer' }}\n          title={name}\n          trigger={trigger}\n        >\n          <StyledSpan\n            data-test=\"collapse\"\n            ref={tableNameRef}\n            className=\"table-name\"\n          >\n            <strong>{name}</strong>\n          </StyledSpan>\n        </Tooltip>\n\n        <div className=\"pull-right header-right-side\">\n          {isMetadataLoading || isExtraMetadataLoading ? (\n            <Loading position=\"inline\" />\n          ) : (\n            <Fade\n              data-test=\"fade\"\n              hovered={hovered}\n              onClick={e => e.stopPropagation()}\n            >\n              {renderControls()}\n            </Fade>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const renderBody = () => {\n    let cols;\n    if (tableData.columns) {\n      cols = tableData.columns.slice();\n      if (sortColumns) {\n        cols.sort((a: Column, b: Column) => {\n          const colA = a.name.toUpperCase();\n          const colB = b.name.toUpperCase();\n          return colA < colB ? -1 : colA > colB ? 1 : 0;\n        });\n      }\n    }\n\n    const metadata = (\n      <div\n        data-test=\"table-element\"\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        css={{ paddingTop: 6 }}\n      >\n        {renderWell()}\n        <div>\n          {cols?.map(col => (\n            <ColumnElement column={col} key={col.name} />\n          ))}\n        </div>\n      </div>\n    );\n    return metadata;\n  };\n\n  return (\n    <StyledCollapsePanel\n      {...props}\n      key={table.id}\n      header={renderHeader()}\n      className=\"TableElement\"\n      forceRender\n    >\n      {renderBody()}\n    </StyledCollapsePanel>\n  );\n};\n\nexport default TableElement;\n"]},"metadata":{},"sourceType":"module"}