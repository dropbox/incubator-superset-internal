{"ast":null,"code":"function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}\n\nimport { SyncRegistry } from '@encodable/registry';\nimport { getCategoricalScheme, getColorSchemeRegistry } from '../scheme';\nimport stringifyAndTrim from '../utils/stringifyAndTrim';\nimport ScaleCategoricalColor from './ScaleCategoricalColor';\nexport default class ColorNamespace {\n  constructor(nameOrState) {\n    _defineProperty(this, \"state\", void 0);\n\n    _defineProperty(this, \"scales\", void 0);\n\n    this.state = typeof nameOrState === 'string' ? {\n      name: nameOrState,\n      manualColors: {},\n      scales: {} } :\n    nameOrState;\n    this.scales = new SyncRegistry();\n  }\n\n  get name() {\n    return this.state.name;\n  }\n  /**\n   * Check if the specified value is subjected to manual color assignment\n   * @param value\n   */\n\n\n  hasManualColor(value) {\n    return typeof this.state.manualColors[stringifyAndTrim(value)] !== 'undefined';\n  }\n  /**\n   * Enforce specific color for given value\n   * This will apply across all color scales\n   * in this namespace.\n   * @param {*} value value\n   * @param {*} manualColor color\n   */\n\n\n  setColor(value, manualColor) {\n    this.state.manualColors[stringifyAndTrim(value)] = manualColor;\n    return this;\n  }\n  /**\n   * Removed enforced specific color for given value\n   * This will apply across all color scales\n   * in this namespace.\n   * @param {*} value value\n   * @param {*} manualColor color\n   */\n\n\n  unsetColor(value) {\n    delete this.state.manualColors[stringifyAndTrim(value)];\n    return this;\n  }\n  /**\n   * Clear all manually assigned colors\n   */\n\n\n  clearManualColors() {\n    this.state.manualColors = {};\n    return this;\n  }\n\n  hasScale(scheme) {\n    return typeof this.state.scales[scheme] !== 'undefined';\n  }\n\n  getScale(scheme) {\n    var _ref;\n\n    const schemeName = (_ref = scheme != null ? scheme : getColorSchemeRegistry().categorical.getDefaultKey()) != null ? _ref : 'undefined';\n\n    if (typeof this.state.scales[schemeName] === 'undefined') {\n      var _getCategoricalScheme, _getCategoricalScheme2;\n\n      // create scale\n      const scale = new ScaleCategoricalColor((_getCategoricalScheme = (_getCategoricalScheme2 = getCategoricalScheme(schemeName)) == null ? void 0 : _getCategoricalScheme2.colors.slice()) != null ? _getCategoricalScheme : [], this.state.manualColors); // add state to lookup\n\n      this.state.scales[schemeName] = scale.state;\n      this.scales.registerValue(schemeName, scale);\n      return scale;\n    }\n\n    if (this.scales.has(schemeName)) {\n      return this.scales.get(schemeName);\n    } // create scale\n\n\n    const scale = new ScaleCategoricalColor(this.state.scales[schemeName], this.state.manualColors);\n    this.scales.registerValue(schemeName, scale);\n    return scale;\n  }}","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","SyncRegistry","getCategoricalScheme","getColorSchemeRegistry","stringifyAndTrim","ScaleCategoricalColor","ColorNamespace","constructor","nameOrState","state","name","manualColors","scales","hasManualColor","setColor","manualColor","unsetColor","clearManualColors","hasScale","scheme","getScale","_ref","schemeName","categorical","getDefaultKey","_getCategoricalScheme","_getCategoricalScheme2","scale","colors","slice","registerValue","has","get"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/node_modules/@encodable/color/esm/scale/ColorNamespace.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SyncRegistry } from '@encodable/registry';\nimport { getCategoricalScheme, getColorSchemeRegistry } from '../scheme';\nimport stringifyAndTrim from '../utils/stringifyAndTrim';\nimport ScaleCategoricalColor from './ScaleCategoricalColor';\nexport default class ColorNamespace {\n  constructor(nameOrState) {\n    _defineProperty(this, \"state\", void 0);\n\n    _defineProperty(this, \"scales\", void 0);\n\n    this.state = typeof nameOrState === 'string' ? {\n      name: nameOrState,\n      manualColors: {},\n      scales: {}\n    } : nameOrState;\n    this.scales = new SyncRegistry();\n  }\n\n  get name() {\n    return this.state.name;\n  }\n  /**\n   * Check if the specified value is subjected to manual color assignment\n   * @param value\n   */\n\n\n  hasManualColor(value) {\n    return typeof this.state.manualColors[stringifyAndTrim(value)] !== 'undefined';\n  }\n  /**\n   * Enforce specific color for given value\n   * This will apply across all color scales\n   * in this namespace.\n   * @param {*} value value\n   * @param {*} manualColor color\n   */\n\n\n  setColor(value, manualColor) {\n    this.state.manualColors[stringifyAndTrim(value)] = manualColor;\n    return this;\n  }\n  /**\n   * Removed enforced specific color for given value\n   * This will apply across all color scales\n   * in this namespace.\n   * @param {*} value value\n   * @param {*} manualColor color\n   */\n\n\n  unsetColor(value) {\n    delete this.state.manualColors[stringifyAndTrim(value)];\n    return this;\n  }\n  /**\n   * Clear all manually assigned colors\n   */\n\n\n  clearManualColors() {\n    this.state.manualColors = {};\n    return this;\n  }\n\n  hasScale(scheme) {\n    return typeof this.state.scales[scheme] !== 'undefined';\n  }\n\n  getScale(scheme) {\n    var _ref;\n\n    const schemeName = (_ref = scheme != null ? scheme : getColorSchemeRegistry().categorical.getDefaultKey()) != null ? _ref : 'undefined';\n\n    if (typeof this.state.scales[schemeName] === 'undefined') {\n      var _getCategoricalScheme, _getCategoricalScheme2;\n\n      // create scale\n      const scale = new ScaleCategoricalColor((_getCategoricalScheme = (_getCategoricalScheme2 = getCategoricalScheme(schemeName)) == null ? void 0 : _getCategoricalScheme2.colors.slice()) != null ? _getCategoricalScheme : [], this.state.manualColors); // add state to lookup\n\n      this.state.scales[schemeName] = scale.state;\n      this.scales.registerValue(schemeName, scale);\n      return scale;\n    }\n\n    if (this.scales.has(schemeName)) {\n      return this.scales.get(schemeName);\n    } // create scale\n\n\n    const scale = new ScaleCategoricalColor(this.state.scales[schemeName], this.state.manualColors);\n    this.scales.registerValue(schemeName, scale);\n    return scale;\n  }\n\n}"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C,CAAE,IAAID,GAAG,IAAID,GAAX,EAAgB,CAAEG,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC,EAAEC,KAAK,EAAEA,KAAT,EAAgBG,UAAU,EAAE,IAA5B,EAAkCC,YAAY,EAAE,IAAhD,EAAsDC,QAAQ,EAAE,IAAhE,EAAhC,EAA0G,CAA5H,MAAkI,CAAEP,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX,CAAmB,CAAC,OAAOF,GAAP,CAAa;;AAEjN,SAASQ,YAAT,QAA6B,qBAA7B;AACA,SAASC,oBAAT,EAA+BC,sBAA/B,QAA6D,WAA7D;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,eAAe,MAAMC,cAAN,CAAqB;EAClCC,WAAW,CAACC,WAAD,EAAc;IACvBhB,eAAe,CAAC,IAAD,EAAO,OAAP,EAAgB,KAAK,CAArB,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,QAAP,EAAiB,KAAK,CAAtB,CAAf;;IAEA,KAAKiB,KAAL,GAAa,OAAOD,WAAP,KAAuB,QAAvB,GAAkC;MAC7CE,IAAI,EAAEF,WADuC;MAE7CG,YAAY,EAAE,EAF+B;MAG7CC,MAAM,EAAE,EAHqC,EAAlC;IAITJ,WAJJ;IAKA,KAAKI,MAAL,GAAc,IAAIX,YAAJ,EAAd;EACD;;EAEO,IAAJS,IAAI,GAAG;IACT,OAAO,KAAKD,KAAL,CAAWC,IAAlB;EACD;EACD;AACF;AACA;AACA;;;EAGEG,cAAc,CAAClB,KAAD,EAAQ;IACpB,OAAO,OAAO,KAAKc,KAAL,CAAWE,YAAX,CAAwBP,gBAAgB,CAACT,KAAD,CAAxC,CAAP,KAA4D,WAAnE;EACD;EACD;AACF;AACA;AACA;AACA;AACA;AACA;;;EAGEmB,QAAQ,CAACnB,KAAD,EAAQoB,WAAR,EAAqB;IAC3B,KAAKN,KAAL,CAAWE,YAAX,CAAwBP,gBAAgB,CAACT,KAAD,CAAxC,IAAmDoB,WAAnD;IACA,OAAO,IAAP;EACD;EACD;AACF;AACA;AACA;AACA;AACA;AACA;;;EAGEC,UAAU,CAACrB,KAAD,EAAQ;IAChB,OAAO,KAAKc,KAAL,CAAWE,YAAX,CAAwBP,gBAAgB,CAACT,KAAD,CAAxC,CAAP;IACA,OAAO,IAAP;EACD;EACD;AACF;AACA;;;EAGEsB,iBAAiB,GAAG;IAClB,KAAKR,KAAL,CAAWE,YAAX,GAA0B,EAA1B;IACA,OAAO,IAAP;EACD;;EAEDO,QAAQ,CAACC,MAAD,EAAS;IACf,OAAO,OAAO,KAAKV,KAAL,CAAWG,MAAX,CAAkBO,MAAlB,CAAP,KAAqC,WAA5C;EACD;;EAEDC,QAAQ,CAACD,MAAD,EAAS;IACf,IAAIE,IAAJ;;IAEA,MAAMC,UAAU,GAAG,CAACD,IAAI,GAAGF,MAAM,IAAI,IAAV,GAAiBA,MAAjB,GAA0BhB,sBAAsB,GAAGoB,WAAzB,CAAqCC,aAArC,EAAlC,KAA2F,IAA3F,GAAkGH,IAAlG,GAAyG,WAA5H;;IAEA,IAAI,OAAO,KAAKZ,KAAL,CAAWG,MAAX,CAAkBU,UAAlB,CAAP,KAAyC,WAA7C,EAA0D;MACxD,IAAIG,qBAAJ,EAA2BC,sBAA3B;;MAEA;MACA,MAAMC,KAAK,GAAG,IAAItB,qBAAJ,CAA0B,CAACoB,qBAAqB,GAAG,CAACC,sBAAsB,GAAGxB,oBAAoB,CAACoB,UAAD,CAA9C,KAA+D,IAA/D,GAAsE,KAAK,CAA3E,GAA+EI,sBAAsB,CAACE,MAAvB,CAA8BC,KAA9B,EAAxG,KAAkJ,IAAlJ,GAAyJJ,qBAAzJ,GAAiL,EAA3M,EAA+M,KAAKhB,KAAL,CAAWE,YAA1N,CAAd,CAJwD,CAI+L;;MAEvP,KAAKF,KAAL,CAAWG,MAAX,CAAkBU,UAAlB,IAAgCK,KAAK,CAAClB,KAAtC;MACA,KAAKG,MAAL,CAAYkB,aAAZ,CAA0BR,UAA1B,EAAsCK,KAAtC;MACA,OAAOA,KAAP;IACD;;IAED,IAAI,KAAKf,MAAL,CAAYmB,GAAZ,CAAgBT,UAAhB,CAAJ,EAAiC;MAC/B,OAAO,KAAKV,MAAL,CAAYoB,GAAZ,CAAgBV,UAAhB,CAAP;IACD,CAlBc,CAkBb;;;IAGF,MAAMK,KAAK,GAAG,IAAItB,qBAAJ,CAA0B,KAAKI,KAAL,CAAWG,MAAX,CAAkBU,UAAlB,CAA1B,EAAyD,KAAKb,KAAL,CAAWE,YAApE,CAAd;IACA,KAAKC,MAAL,CAAYkB,aAAZ,CAA0BR,UAA1B,EAAsCK,KAAtC;IACA,OAAOA,KAAP;EACD,CA1FiC"},"metadata":{},"sourceType":"module"}