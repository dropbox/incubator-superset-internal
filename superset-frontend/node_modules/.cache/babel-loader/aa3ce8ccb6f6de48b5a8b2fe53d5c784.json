{"ast":null,"code":"import _debounce from \"lodash/debounce\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { max as d3Max } from 'd3-array';\nimport {\nAsyncCreatableSelect,\nCreatableSelect } from\n'src/components/DeprecatedSelect';\nimport Button from 'src/components/Button';\nimport {\ncss,\nstyled,\nt,\nSupersetClient,\nensureIsArray,\nwithTheme } from\n'@superset-ui/core';\nimport { Global } from '@emotion/react';\n\nimport {\nBOOL_FALSE_DISPLAY,\nBOOL_TRUE_DISPLAY,\nSLOW_DEBOUNCE } from\n'src/constants';\nimport { FormLabel } from 'src/components/Form';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport ControlRow from 'src/explore/components/ControlRow';\nimport Control from 'src/explore/components/Control';\nimport { controls } from 'src/explore/controls';\nimport { getExploreUrl } from 'src/explore/exploreUtils';\nimport OnPasteSelect from 'src/components/DeprecatedSelect/OnPasteSelect';\nimport {\nFILTER_CONFIG_ATTRIBUTES,\nFILTER_OPTIONS_LIMIT,\nTIME_FILTER_LABELS,\nTIME_FILTER_MAP } from\n'src/explore/constants';\n\n// a shortcut to a map key, used by many components\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";export const TIME_RANGE = TIME_FILTER_MAP.time_range;\n\nconst propTypes = {\n  chartId: PropTypes.number.isRequired,\n  origSelectedValues: PropTypes.object,\n  datasource: PropTypes.object.isRequired,\n  instantFiltering: PropTypes.bool,\n  filtersFields: PropTypes.arrayOf(\n  PropTypes.shape({\n    field: PropTypes.string,\n    label: PropTypes.string })),\n\n\n  filtersChoices: PropTypes.objectOf(\n  PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.string,\n    text: PropTypes.string,\n    filter: PropTypes.string,\n    metric: PropTypes.number }))),\n\n\n\n  onChange: PropTypes.func,\n  onFilterMenuOpen: PropTypes.func,\n  onFilterMenuClose: PropTypes.func,\n  showDateFilter: PropTypes.bool,\n  showSqlaTimeGrain: PropTypes.bool,\n  showSqlaTimeColumn: PropTypes.bool };\n\nconst defaultProps = {\n  origSelectedValues: {},\n  onChange: () => {},\n  onFilterMenuOpen: () => {},\n  onFilterMenuClose: () => {},\n  showDateFilter: false,\n  showSqlaTimeGrain: false,\n  showSqlaTimeColumn: false,\n  instantFiltering: false };\n\n\nconst StyledFilterContainer = styled.div`\n  ${(_ref) => {let { theme } = _ref;return `\n    display: flex;\n    flex-direction: column;\n    margin-bottom: ${theme.gridUnit * 2 + 2}px;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n\n    label {\n      display: flex;\n      font-weight: ${theme.typography.weights.bold};\n    }\n\n    .filter-badge-container {\n      width: 30px;\n      padding-right: ${theme.gridUnit * 2 + 2}px;\n    }\n\n    .filter-badge-container + div {\n      width: 100%;\n    }\n  `;}}\n`;\n\n/**\n * @deprecated in version 3.0.\n */\nclass FilterBox extends React.PureComponent {\n  constructor(props) {\n    super(props);this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    onCloseDateFilterControl = () => this.onFilterMenuClose(TIME_RANGE);this.state = { selectedValues: props.origSelectedValues, // this flag is used by non-instant filter, to make the apply button enabled/disabled\n      hasChanged: false };this.debouncerCache = {};this.maxValueCache = {};this.changeFilter = this.changeFilter.bind(this);this.onFilterMenuOpen = this.onFilterMenuOpen.bind(this);this.onOpenDateFilterControl = this.onOpenDateFilterControl.bind(this);this.onFilterMenuClose = this.onFilterMenuClose.bind(this);}onFilterMenuOpen(column) {return this.props.onFilterMenuOpen(this.props.chartId, column);}onFilterMenuClose(column) {return this.props.onFilterMenuClose(this.props.chartId, column);}onOpenDateFilterControl() {return this.onFilterMenuOpen(TIME_RANGE);}\n  getControlData(controlName) {\n    const { selectedValues } = this.state;\n    const control = {\n      ...controls[controlName], // TODO: make these controls ('druid_time_origin', 'granularity', 'granularity_sqla', 'time_grain_sqla') accessible from getControlsForVizType.\n      name: controlName,\n      key: `control-${controlName}`,\n      value: selectedValues[TIME_FILTER_MAP[controlName]],\n      actions: { setControlValue: this.changeFilter } };\n\n    const mapFunc = control.mapStateToProps;\n    return mapFunc ? { ...control, ...mapFunc(this.props) } : control;\n  }\n\n  /**\n   * Get known max value of a column\n   */\n  getKnownMax(key, choices) {\n    this.maxValueCache[key] = Math.max(\n    this.maxValueCache[key] || 0,\n    d3Max(choices || this.props.filtersChoices[key] || [], (x) => x.metric));\n\n    return this.maxValueCache[key];\n  }\n\n  clickApply() {\n    const { selectedValues } = this.state;\n    this.setState({ hasChanged: false }, () => {\n      this.props.onChange(selectedValues, false);\n    });\n  }\n\n  changeFilter(filter, options) {\n    const fltr = TIME_FILTER_MAP[filter] || filter;\n    let vals = null;\n    if (options !== null) {var _context;\n      if (Array.isArray(options)) {\n        vals = options.map((opt) => typeof opt === 'string' ? opt : opt.value);\n      } else if (_includesInstanceProperty(_context = Object.values(TIME_FILTER_MAP)).call(_context, fltr)) {var _options$value;\n        vals = (_options$value = options.value) != null ? _options$value : options;\n      } else {var _options$value2;\n        // must use array member for legacy extra_filters's value\n        vals = ensureIsArray((_options$value2 = options.value) != null ? _options$value2 : options);\n      }\n    }\n\n    this.setState(\n    (prevState) => ({\n      selectedValues: {\n        ...prevState.selectedValues,\n        [fltr]: vals },\n\n      hasChanged: true }),\n\n    () => {\n      if (this.props.instantFiltering) {\n        this.props.onChange({ [fltr]: vals }, false);\n      }\n    });\n\n  }\n\n  /**\n   * Generate a debounce function that loads options for a specific column\n   */\n  debounceLoadOptions(key) {\n    if (!(key in this.debouncerCache)) {\n      this.debouncerCache[key] = _debounce((input, callback) => {\n        this.loadOptions(key, input).then(callback);\n      }, SLOW_DEBOUNCE);\n    }\n    return this.debouncerCache[key];\n  }\n\n  /**\n   * Transform select options, add bar background\n   */\n  transformOptions(options, max) {\n    const maxValue = max === undefined ? d3Max(options, (x) => x.metric) : max;\n    return options.map((opt) => {\n      const perc = Math.round(opt.metric / maxValue * 100);\n      const color = 'lightgrey';\n      const backgroundImage = `linear-gradient(to right, ${color}, ${color} ${perc}%, rgba(0,0,0,0) ${perc}%`;\n      const style = { backgroundImage };\n      let label = opt.id;\n      if (label === true) {\n        label = BOOL_TRUE_DISPLAY;\n      } else if (label === false) {\n        label = BOOL_FALSE_DISPLAY;\n      }\n      return { value: opt.id, label, style };\n    });\n  }\n\n  async loadOptions(key, inputValue) {var _json$data;if (inputValue === void 0) {inputValue = '';}\n    const input = inputValue.toLowerCase();\n    const sortAsc = this.props.filtersFields.find((x) => x.key === key).asc;\n    const formData = {\n      ...this.props.rawFormData,\n      adhoc_filters: inputValue ?\n      [\n      {\n        clause: 'WHERE',\n        expressionType: 'SIMPLE',\n        subject: key,\n        operator: 'ILIKE',\n        comparator: `%${input}%` }] :\n\n\n      null };\n\n\n    const { json } = await SupersetClient.get({\n      url: getExploreUrl({\n        formData,\n        endpointType: 'json',\n        method: 'GET' }) });\n\n\n    const options = ((json == null ? void 0 : (_json$data = json.data) == null ? void 0 : _json$data[key]) || []).filter((x) => x.id);\n    if (!options || options.length === 0) {\n      return [];\n    }\n    if (input) {\n      // sort those starts with search query to front\n      options.sort((a, b) => {\n        const labelA = a.id.toLowerCase();\n        const labelB = b.id.toLowerCase();\n        const textOrder = labelB.startsWith(input) - labelA.startsWith(input);\n        return textOrder === 0 ?\n        (a.metric - b.metric) * (sortAsc ? 1 : -1) :\n        textOrder;\n      });\n    }\n    return this.transformOptions(options, this.getKnownMax(key, options));\n  }\n\n  renderDateFilter() {\n    const { showDateFilter } = this.props;\n    const label = TIME_FILTER_LABELS.time_range;\n    if (showDateFilter) {\n      return (\n        ___EmotionJSX(\"div\", { className: \"row space-1\" },\n        ___EmotionJSX(\"div\", {\n          className: \"col-lg-12 col-xs-12\" },\n\n\n        ___EmotionJSX(DateFilterControl, {\n          name: TIME_RANGE,\n          label: label,\n          description: t('Select start and end date'),\n          onChange: (newValue) => {\n            this.changeFilter(TIME_RANGE, newValue);\n          },\n          onOpenDateFilterControl: this.onOpenDateFilterControl,\n          onCloseDateFilterControl: this.onCloseDateFilterControl,\n          value: this.state.selectedValues[TIME_RANGE] || 'No filter',\n          endpoints: ['inclusive', 'exclusive'] }))));\n\n\n\n\n    }\n    return null;\n  }\n\n  renderDatasourceFilters() {\n    const { showSqlaTimeGrain, showSqlaTimeColumn } = this.props;\n    const datasourceFilters = [];\n    const sqlaFilters = [];\n    const druidFilters = [];\n    if (showSqlaTimeGrain) sqlaFilters.push('time_grain_sqla');\n    if (showSqlaTimeColumn) sqlaFilters.push('granularity_sqla');\n    if (sqlaFilters.length) {\n      datasourceFilters.push(\n      ___EmotionJSX(ControlRow, {\n        key: \"sqla-filters\",\n        controls: sqlaFilters.map((control) =>\n        ___EmotionJSX(Control, this.getControlData(control))) }));\n\n\n\n    }\n    if (druidFilters.length) {\n      datasourceFilters.push(\n      ___EmotionJSX(ControlRow, {\n        key: \"druid-filters\",\n        controls: druidFilters.map((control) =>\n        ___EmotionJSX(Control, this.getControlData(control))) }));\n\n\n\n    }\n    return datasourceFilters;\n  }\n\n  renderSelect(filterConfig) {\n    const { filtersChoices } = this.props;\n    const { selectedValues } = this.state;\n    this.debouncerCache = {};\n    this.maxValueCache = {};\n\n    // Add created options to filtersChoices, even though it doesn't exist,\n    // or these options will exist in query sql but invisible to end user.\n    Object.keys(selectedValues).\n    filter((key) => key in filtersChoices).\n    forEach((key) => {\n      // empty values are ignored\n      if (!selectedValues[key]) {\n        return;\n      }\n      const choices = filtersChoices[key] || (filtersChoices[key] = []);\n      const choiceIds = new Set(choices.map((f) => f.id));\n      const selectedValuesForKey = Array.isArray(selectedValues[key]) ?\n      selectedValues[key] :\n      [selectedValues[key]];\n      selectedValuesForKey.\n      filter((value) => value !== null && !choiceIds.has(value)).\n      forEach((value) => {\n        choices.unshift({\n          filter: key,\n          id: value,\n          text: value,\n          metric: 0 });\n\n      });\n    });\n    const {\n      key,\n      label,\n      [FILTER_CONFIG_ATTRIBUTES.MULTIPLE]: isMultiple,\n      [FILTER_CONFIG_ATTRIBUTES.DEFAULT_VALUE]: defaultValue,\n      [FILTER_CONFIG_ATTRIBUTES.CLEARABLE]: isClearable,\n      [FILTER_CONFIG_ATTRIBUTES.SEARCH_ALL_OPTIONS]: searchAllOptions } =\n    filterConfig;\n    const data = filtersChoices[key] || [];\n    let value = selectedValues[key] || null;\n\n    // Assign default value if required\n    if (value === undefined && defaultValue) {\n      // multiple values are separated by semicolons\n      value = isMultiple ? defaultValue.split(';') : defaultValue;\n    }\n\n    return (\n      ___EmotionJSX(OnPasteSelect, {\n        cacheOptions: true,\n        loadOptions: this.debounceLoadOptions(key),\n        defaultOptions: this.transformOptions(data),\n        key: key,\n        placeholder: t('Type or Select [%s]', label),\n        isMulti: isMultiple,\n        isClearable: isClearable,\n        value: value,\n        options: this.transformOptions(data),\n        onChange: (newValue) => {\n          // avoid excessive re-renders\n          if (newValue !== value) {\n            this.changeFilter(key, newValue);\n          }\n        }\n        // TODO try putting this back once react-select is upgraded\n        // onFocus={() => this.onFilterMenuOpen(key)}\n        , onMenuOpen: () => this.onFilterMenuOpen(key),\n        onBlur: () => this.onFilterMenuClose(key),\n        onMenuClose: () => this.onFilterMenuClose(key),\n        selectWrap:\n        searchAllOptions && data.length >= FILTER_OPTIONS_LIMIT ?\n        AsyncCreatableSelect :\n        CreatableSelect,\n\n        noResultsText: t('No results found'),\n        forceOverflow: true }));\n\n\n  }\n\n  renderFilters() {\n    const { filtersFields = [] } = this.props;\n    return filtersFields.map((filterConfig) => {\n      const { label, key } = filterConfig;\n      return (\n        ___EmotionJSX(StyledFilterContainer, { key: key, className: \"filter-container\" },\n        ___EmotionJSX(FormLabel, { htmlFor: `LABEL-${key}` }, label),\n        this.renderSelect(filterConfig)));\n\n\n    });\n  }\n\n  render() {\n    const { instantFiltering, width, height } = this.props;\n    const { zIndex, gridUnit } = this.props.theme;\n    return (\n      ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(Global, {\n        styles: css`\n            .dashboard .filter_box .slice_container > div:not(.alert) {\n              padding-top: 0;\n            }\n\n            .filter_box {\n              padding: ${gridUnit * 2 + 2}px 0;\n              overflow: visible !important;\n\n              &:hover {\n                z-index: ${zIndex.max};\n              }\n            }\n          ` }),\n\n      ___EmotionJSX(\"div\", { style: { width, height, overflow: 'auto' } },\n      this.renderDateFilter(),\n      this.renderDatasourceFilters(),\n      this.renderFilters(),\n      !instantFiltering &&\n      ___EmotionJSX(Button, {\n        buttonSize: \"small\",\n        buttonStyle: \"primary\",\n        onClick: this.clickApply.bind(this),\n        disabled: !this.state.hasChanged },\n\n      t('Apply')))));\n\n\n\n\n\n  }}\n\n\nFilterBox.propTypes = propTypes;\nFilterBox.defaultProps = defaultProps;\n\nexport default withTheme(FilterBox);","map":{"version":3,"names":["React","PropTypes","max","d3Max","AsyncCreatableSelect","CreatableSelect","Button","css","styled","t","SupersetClient","ensureIsArray","withTheme","Global","BOOL_FALSE_DISPLAY","BOOL_TRUE_DISPLAY","SLOW_DEBOUNCE","FormLabel","DateFilterControl","ControlRow","Control","controls","getExploreUrl","OnPasteSelect","FILTER_CONFIG_ATTRIBUTES","FILTER_OPTIONS_LIMIT","TIME_FILTER_LABELS","TIME_FILTER_MAP","TIME_RANGE","time_range","propTypes","chartId","number","isRequired","origSelectedValues","object","datasource","instantFiltering","bool","filtersFields","arrayOf","shape","field","string","label","filtersChoices","objectOf","id","text","filter","metric","onChange","func","onFilterMenuOpen","onFilterMenuClose","showDateFilter","showSqlaTimeGrain","showSqlaTimeColumn","defaultProps","StyledFilterContainer","div","theme","gridUnit","typography","weights","bold","FilterBox","PureComponent","constructor","props","onCloseDateFilterControl","state","selectedValues","hasChanged","debouncerCache","maxValueCache","changeFilter","bind","onOpenDateFilterControl","column","getControlData","controlName","control","name","key","value","actions","setControlValue","mapFunc","mapStateToProps","getKnownMax","choices","Math","x","clickApply","setState","options","fltr","vals","Array","isArray","map","opt","Object","values","prevState","debounceLoadOptions","input","callback","loadOptions","then","transformOptions","maxValue","undefined","perc","round","color","backgroundImage","style","inputValue","toLowerCase","sortAsc","find","asc","formData","rawFormData","adhoc_filters","clause","expressionType","subject","operator","comparator","json","get","url","endpointType","method","data","length","sort","a","b","labelA","labelB","textOrder","startsWith","renderDateFilter","newValue","renderDatasourceFilters","datasourceFilters","sqlaFilters","druidFilters","push","renderSelect","filterConfig","keys","forEach","choiceIds","Set","f","selectedValuesForKey","has","unshift","MULTIPLE","isMultiple","DEFAULT_VALUE","defaultValue","CLEARABLE","isClearable","SEARCH_ALL_OPTIONS","searchAllOptions","split","renderFilters","render","width","height","zIndex","overflow"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { debounce } from 'lodash';\nimport { max as d3Max } from 'd3-array';\nimport {\n  AsyncCreatableSelect,\n  CreatableSelect,\n} from 'src/components/DeprecatedSelect';\nimport Button from 'src/components/Button';\nimport {\n  css,\n  styled,\n  t,\n  SupersetClient,\n  ensureIsArray,\n  withTheme,\n} from '@superset-ui/core';\nimport { Global } from '@emotion/react';\n\nimport {\n  BOOL_FALSE_DISPLAY,\n  BOOL_TRUE_DISPLAY,\n  SLOW_DEBOUNCE,\n} from 'src/constants';\nimport { FormLabel } from 'src/components/Form';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport ControlRow from 'src/explore/components/ControlRow';\nimport Control from 'src/explore/components/Control';\nimport { controls } from 'src/explore/controls';\nimport { getExploreUrl } from 'src/explore/exploreUtils';\nimport OnPasteSelect from 'src/components/DeprecatedSelect/OnPasteSelect';\nimport {\n  FILTER_CONFIG_ATTRIBUTES,\n  FILTER_OPTIONS_LIMIT,\n  TIME_FILTER_LABELS,\n  TIME_FILTER_MAP,\n} from 'src/explore/constants';\n\n// a shortcut to a map key, used by many components\nexport const TIME_RANGE = TIME_FILTER_MAP.time_range;\n\nconst propTypes = {\n  chartId: PropTypes.number.isRequired,\n  origSelectedValues: PropTypes.object,\n  datasource: PropTypes.object.isRequired,\n  instantFiltering: PropTypes.bool,\n  filtersFields: PropTypes.arrayOf(\n    PropTypes.shape({\n      field: PropTypes.string,\n      label: PropTypes.string,\n    }),\n  ),\n  filtersChoices: PropTypes.objectOf(\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        text: PropTypes.string,\n        filter: PropTypes.string,\n        metric: PropTypes.number,\n      }),\n    ),\n  ),\n  onChange: PropTypes.func,\n  onFilterMenuOpen: PropTypes.func,\n  onFilterMenuClose: PropTypes.func,\n  showDateFilter: PropTypes.bool,\n  showSqlaTimeGrain: PropTypes.bool,\n  showSqlaTimeColumn: PropTypes.bool,\n};\nconst defaultProps = {\n  origSelectedValues: {},\n  onChange: () => {},\n  onFilterMenuOpen: () => {},\n  onFilterMenuClose: () => {},\n  showDateFilter: false,\n  showSqlaTimeGrain: false,\n  showSqlaTimeColumn: false,\n  instantFiltering: false,\n};\n\nconst StyledFilterContainer = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    flex-direction: column;\n    margin-bottom: ${theme.gridUnit * 2 + 2}px;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n\n    label {\n      display: flex;\n      font-weight: ${theme.typography.weights.bold};\n    }\n\n    .filter-badge-container {\n      width: 30px;\n      padding-right: ${theme.gridUnit * 2 + 2}px;\n    }\n\n    .filter-badge-container + div {\n      width: 100%;\n    }\n  `}\n`;\n\n/**\n * @deprecated in version 3.0.\n */\nclass FilterBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedValues: props.origSelectedValues,\n      // this flag is used by non-instant filter, to make the apply button enabled/disabled\n      hasChanged: false,\n    };\n    this.debouncerCache = {};\n    this.maxValueCache = {};\n    this.changeFilter = this.changeFilter.bind(this);\n    this.onFilterMenuOpen = this.onFilterMenuOpen.bind(this);\n    this.onOpenDateFilterControl = this.onOpenDateFilterControl.bind(this);\n    this.onFilterMenuClose = this.onFilterMenuClose.bind(this);\n  }\n\n  onFilterMenuOpen(column) {\n    return this.props.onFilterMenuOpen(this.props.chartId, column);\n  }\n\n  onFilterMenuClose(column) {\n    return this.props.onFilterMenuClose(this.props.chartId, column);\n  }\n\n  onOpenDateFilterControl() {\n    return this.onFilterMenuOpen(TIME_RANGE);\n  }\n\n  onCloseDateFilterControl = () => this.onFilterMenuClose(TIME_RANGE);\n\n  getControlData(controlName) {\n    const { selectedValues } = this.state;\n    const control = {\n      ...controls[controlName], // TODO: make these controls ('druid_time_origin', 'granularity', 'granularity_sqla', 'time_grain_sqla') accessible from getControlsForVizType.\n      name: controlName,\n      key: `control-${controlName}`,\n      value: selectedValues[TIME_FILTER_MAP[controlName]],\n      actions: { setControlValue: this.changeFilter },\n    };\n    const mapFunc = control.mapStateToProps;\n    return mapFunc ? { ...control, ...mapFunc(this.props) } : control;\n  }\n\n  /**\n   * Get known max value of a column\n   */\n  getKnownMax(key, choices) {\n    this.maxValueCache[key] = Math.max(\n      this.maxValueCache[key] || 0,\n      d3Max(choices || this.props.filtersChoices[key] || [], x => x.metric),\n    );\n    return this.maxValueCache[key];\n  }\n\n  clickApply() {\n    const { selectedValues } = this.state;\n    this.setState({ hasChanged: false }, () => {\n      this.props.onChange(selectedValues, false);\n    });\n  }\n\n  changeFilter(filter, options) {\n    const fltr = TIME_FILTER_MAP[filter] || filter;\n    let vals = null;\n    if (options !== null) {\n      if (Array.isArray(options)) {\n        vals = options.map(opt => (typeof opt === 'string' ? opt : opt.value));\n      } else if (Object.values(TIME_FILTER_MAP).includes(fltr)) {\n        vals = options.value ?? options;\n      } else {\n        // must use array member for legacy extra_filters's value\n        vals = ensureIsArray(options.value ?? options);\n      }\n    }\n\n    this.setState(\n      prevState => ({\n        selectedValues: {\n          ...prevState.selectedValues,\n          [fltr]: vals,\n        },\n        hasChanged: true,\n      }),\n      () => {\n        if (this.props.instantFiltering) {\n          this.props.onChange({ [fltr]: vals }, false);\n        }\n      },\n    );\n  }\n\n  /**\n   * Generate a debounce function that loads options for a specific column\n   */\n  debounceLoadOptions(key) {\n    if (!(key in this.debouncerCache)) {\n      this.debouncerCache[key] = debounce((input, callback) => {\n        this.loadOptions(key, input).then(callback);\n      }, SLOW_DEBOUNCE);\n    }\n    return this.debouncerCache[key];\n  }\n\n  /**\n   * Transform select options, add bar background\n   */\n  transformOptions(options, max) {\n    const maxValue = max === undefined ? d3Max(options, x => x.metric) : max;\n    return options.map(opt => {\n      const perc = Math.round((opt.metric / maxValue) * 100);\n      const color = 'lightgrey';\n      const backgroundImage = `linear-gradient(to right, ${color}, ${color} ${perc}%, rgba(0,0,0,0) ${perc}%`;\n      const style = { backgroundImage };\n      let label = opt.id;\n      if (label === true) {\n        label = BOOL_TRUE_DISPLAY;\n      } else if (label === false) {\n        label = BOOL_FALSE_DISPLAY;\n      }\n      return { value: opt.id, label, style };\n    });\n  }\n\n  async loadOptions(key, inputValue = '') {\n    const input = inputValue.toLowerCase();\n    const sortAsc = this.props.filtersFields.find(x => x.key === key).asc;\n    const formData = {\n      ...this.props.rawFormData,\n      adhoc_filters: inputValue\n        ? [\n            {\n              clause: 'WHERE',\n              expressionType: 'SIMPLE',\n              subject: key,\n              operator: 'ILIKE',\n              comparator: `%${input}%`,\n            },\n          ]\n        : null,\n    };\n\n    const { json } = await SupersetClient.get({\n      url: getExploreUrl({\n        formData,\n        endpointType: 'json',\n        method: 'GET',\n      }),\n    });\n    const options = (json?.data?.[key] || []).filter(x => x.id);\n    if (!options || options.length === 0) {\n      return [];\n    }\n    if (input) {\n      // sort those starts with search query to front\n      options.sort((a, b) => {\n        const labelA = a.id.toLowerCase();\n        const labelB = b.id.toLowerCase();\n        const textOrder = labelB.startsWith(input) - labelA.startsWith(input);\n        return textOrder === 0\n          ? (a.metric - b.metric) * (sortAsc ? 1 : -1)\n          : textOrder;\n      });\n    }\n    return this.transformOptions(options, this.getKnownMax(key, options));\n  }\n\n  renderDateFilter() {\n    const { showDateFilter } = this.props;\n    const label = TIME_FILTER_LABELS.time_range;\n    if (showDateFilter) {\n      return (\n        <div className=\"row space-1\">\n          <div\n            className=\"col-lg-12 col-xs-12\"\n            data-test=\"date-filter-container\"\n          >\n            <DateFilterControl\n              name={TIME_RANGE}\n              label={label}\n              description={t('Select start and end date')}\n              onChange={newValue => {\n                this.changeFilter(TIME_RANGE, newValue);\n              }}\n              onOpenDateFilterControl={this.onOpenDateFilterControl}\n              onCloseDateFilterControl={this.onCloseDateFilterControl}\n              value={this.state.selectedValues[TIME_RANGE] || 'No filter'}\n              endpoints={['inclusive', 'exclusive']}\n            />\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  renderDatasourceFilters() {\n    const { showSqlaTimeGrain, showSqlaTimeColumn } = this.props;\n    const datasourceFilters = [];\n    const sqlaFilters = [];\n    const druidFilters = [];\n    if (showSqlaTimeGrain) sqlaFilters.push('time_grain_sqla');\n    if (showSqlaTimeColumn) sqlaFilters.push('granularity_sqla');\n    if (sqlaFilters.length) {\n      datasourceFilters.push(\n        <ControlRow\n          key=\"sqla-filters\"\n          controls={sqlaFilters.map(control => (\n            <Control {...this.getControlData(control)} />\n          ))}\n        />,\n      );\n    }\n    if (druidFilters.length) {\n      datasourceFilters.push(\n        <ControlRow\n          key=\"druid-filters\"\n          controls={druidFilters.map(control => (\n            <Control {...this.getControlData(control)} />\n          ))}\n        />,\n      );\n    }\n    return datasourceFilters;\n  }\n\n  renderSelect(filterConfig) {\n    const { filtersChoices } = this.props;\n    const { selectedValues } = this.state;\n    this.debouncerCache = {};\n    this.maxValueCache = {};\n\n    // Add created options to filtersChoices, even though it doesn't exist,\n    // or these options will exist in query sql but invisible to end user.\n    Object.keys(selectedValues)\n      .filter(key => key in filtersChoices)\n      .forEach(key => {\n        // empty values are ignored\n        if (!selectedValues[key]) {\n          return;\n        }\n        const choices = filtersChoices[key] || (filtersChoices[key] = []);\n        const choiceIds = new Set(choices.map(f => f.id));\n        const selectedValuesForKey = Array.isArray(selectedValues[key])\n          ? selectedValues[key]\n          : [selectedValues[key]];\n        selectedValuesForKey\n          .filter(value => value !== null && !choiceIds.has(value))\n          .forEach(value => {\n            choices.unshift({\n              filter: key,\n              id: value,\n              text: value,\n              metric: 0,\n            });\n          });\n      });\n    const {\n      key,\n      label,\n      [FILTER_CONFIG_ATTRIBUTES.MULTIPLE]: isMultiple,\n      [FILTER_CONFIG_ATTRIBUTES.DEFAULT_VALUE]: defaultValue,\n      [FILTER_CONFIG_ATTRIBUTES.CLEARABLE]: isClearable,\n      [FILTER_CONFIG_ATTRIBUTES.SEARCH_ALL_OPTIONS]: searchAllOptions,\n    } = filterConfig;\n    const data = filtersChoices[key] || [];\n    let value = selectedValues[key] || null;\n\n    // Assign default value if required\n    if (value === undefined && defaultValue) {\n      // multiple values are separated by semicolons\n      value = isMultiple ? defaultValue.split(';') : defaultValue;\n    }\n\n    return (\n      <OnPasteSelect\n        cacheOptions\n        loadOptions={this.debounceLoadOptions(key)}\n        defaultOptions={this.transformOptions(data)}\n        key={key}\n        placeholder={t('Type or Select [%s]', label)}\n        isMulti={isMultiple}\n        isClearable={isClearable}\n        value={value}\n        options={this.transformOptions(data)}\n        onChange={newValue => {\n          // avoid excessive re-renders\n          if (newValue !== value) {\n            this.changeFilter(key, newValue);\n          }\n        }}\n        // TODO try putting this back once react-select is upgraded\n        // onFocus={() => this.onFilterMenuOpen(key)}\n        onMenuOpen={() => this.onFilterMenuOpen(key)}\n        onBlur={() => this.onFilterMenuClose(key)}\n        onMenuClose={() => this.onFilterMenuClose(key)}\n        selectWrap={\n          searchAllOptions && data.length >= FILTER_OPTIONS_LIMIT\n            ? AsyncCreatableSelect\n            : CreatableSelect\n        }\n        noResultsText={t('No results found')}\n        forceOverflow\n      />\n    );\n  }\n\n  renderFilters() {\n    const { filtersFields = [] } = this.props;\n    return filtersFields.map(filterConfig => {\n      const { label, key } = filterConfig;\n      return (\n        <StyledFilterContainer key={key} className=\"filter-container\">\n          <FormLabel htmlFor={`LABEL-${key}`}>{label}</FormLabel>\n          {this.renderSelect(filterConfig)}\n        </StyledFilterContainer>\n      );\n    });\n  }\n\n  render() {\n    const { instantFiltering, width, height } = this.props;\n    const { zIndex, gridUnit } = this.props.theme;\n    return (\n      <>\n        <Global\n          styles={css`\n            .dashboard .filter_box .slice_container > div:not(.alert) {\n              padding-top: 0;\n            }\n\n            .filter_box {\n              padding: ${gridUnit * 2 + 2}px 0;\n              overflow: visible !important;\n\n              &:hover {\n                z-index: ${zIndex.max};\n              }\n            }\n          `}\n        />\n        <div style={{ width, height, overflow: 'auto' }}>\n          {this.renderDateFilter()}\n          {this.renderDatasourceFilters()}\n          {this.renderFilters()}\n          {!instantFiltering && (\n            <Button\n              buttonSize=\"small\"\n              buttonStyle=\"primary\"\n              onClick={this.clickApply.bind(this)}\n              disabled={!this.state.hasChanged}\n            >\n              {t('Apply')}\n            </Button>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nFilterBox.propTypes = propTypes;\nFilterBox.defaultProps = defaultProps;\n\nexport default withTheme(FilterBox);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}