{"ast":null,"code":"import { css as _css } from \"@emotion/react\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState } from 'react';\nimport { useTheme, t } from '@superset-ui/core';\nimport ControlHeader from '../../../components/ControlHeader';\nimport ColumnConfigItem from './ColumnConfigItem';\nimport { DEFAULT_CONFIG_FORM_LAYOUT } from './constants';\nimport { COLUMN_NAME_ALIASES } from '../../../constants';\n/**\n * Max number of columns to show by default.\n */import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst MAX_NUM_COLS = 10;\n/**\n * Add per-column config to queried results.\n */\nexport default function ColumnConfigControl(_ref) {let { queryResponse, appliedColumnNames = [], value, onChange, configFormLayout = DEFAULT_CONFIG_FORM_LAYOUT, ...props } = _ref;\n  const { colnames: _colnames, coltypes: _coltypes } = queryResponse || {};\n  let colnames = [];\n  let coltypes = [];\n  if (appliedColumnNames.length === 0) {\n    colnames = _colnames || [];\n    coltypes = _coltypes || [];\n  } else\n  {\n    const appliedCol = new Set(appliedColumnNames);\n    _colnames == null ? void 0 : _colnames.forEach((col, idx) => {\n      if (appliedCol.has(col)) {\n        colnames.push(col);\n        coltypes.push(_coltypes == null ? void 0 : _coltypes[idx]);\n      }\n    });\n  }\n  const theme = useTheme();\n  const columnConfigs = useMemo(() => {var _colnames2;\n    const configs = {};\n    (_colnames2 = colnames) == null ? void 0 : _colnames2.forEach((col, idx) => {var _coltypes2;\n      configs[col] = {\n        name: COLUMN_NAME_ALIASES[col] || col,\n        type: (_coltypes2 = coltypes) == null ? void 0 : _coltypes2[idx],\n        config: (value == null ? void 0 : value[col]) || {} };\n\n    });\n    return configs;\n  }, [value, colnames, coltypes]);\n  const [showAllColumns, setShowAllColumns] = useState(false);\n  const getColumnInfo = (col) => columnConfigs[col] || {};\n  const setColumnConfig = (col, config) => {\n    if (onChange) {\n      // Only keep configs for known columns\n      const validConfigs = colnames && value ?\n      Object.fromEntries(Object.entries(value).filter((_ref2) => {let [key] = _ref2;return _includesInstanceProperty(colnames).call(colnames, key);})) :\n      { ...value };\n      onChange({\n        ...validConfigs,\n        [col]: config });\n\n    }\n  };\n  if (!colnames || colnames.length === 0)\n  return null;\n  const needShowMoreButton = colnames.length > MAX_NUM_COLS + 2;\n  const cols = needShowMoreButton && !showAllColumns ?\n  colnames.slice(0, MAX_NUM_COLS) :\n  colnames;\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(ControlHeader, props),\n  ___EmotionJSX(\"div\", { css: /*#__PURE__*/_css({\n      border: `1px solid ${theme.colors.grayscale.light2}`,\n      borderRadius: theme.gridUnit }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:ColumnConfigControl;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ib2dkYW5reXJ5bGl1ay9jb2RlL29wZW5zb3VyY2Uvc3VwZXJzZXQvc3VwZXJzZXQtZnJvbnRlbmQvcGFja2FnZXMvc3VwZXJzZXQtdWktY2hhcnQtY29udHJvbHMvc3JjL3NoYXJlZC1jb250cm9scy9jb21wb25lbnRzL0NvbHVtbkNvbmZpZ0NvbnRyb2wvQ29sdW1uQ29uZmlnQ29udHJvbC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0ZXIiwiZmlsZSI6Ii9Vc2Vycy9ib2dkYW5reXJ5bGl1ay9jb2RlL29wZW5zb3VyY2Uvc3VwZXJzZXQvc3VwZXJzZXQtZnJvbnRlbmQvcGFja2FnZXMvc3VwZXJzZXQtdWktY2hhcnQtY29udHJvbHMvc3JjL3NoYXJlZC1jb250cm9scy9jb21wb25lbnRzL0NvbHVtbkNvbmZpZ0NvbnRyb2wvQ29sdW1uQ29uZmlnQ29udHJvbC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgUmVhY3QsIHsgdXNlTWVtbywgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VUaGVtZSwgdCwgfSBmcm9tICdAc3VwZXJzZXQtdWkvY29yZSc7XG5pbXBvcnQgQ29udHJvbEhlYWRlciBmcm9tICcuLi8uLi8uLi9jb21wb25lbnRzL0NvbnRyb2xIZWFkZXInO1xuaW1wb3J0IENvbHVtbkNvbmZpZ0l0ZW0gZnJvbSAnLi9Db2x1bW5Db25maWdJdGVtJztcbmltcG9ydCB7IERFRkFVTFRfQ09ORklHX0ZPUk1fTEFZT1VUIH0gZnJvbSAnLi9jb25zdGFudHMnO1xuaW1wb3J0IHsgQ09MVU1OX05BTUVfQUxJQVNFUyB9IGZyb20gJy4uLy4uLy4uL2NvbnN0YW50cyc7XG4vKipcbiAqIE1heCBudW1iZXIgb2YgY29sdW1ucyB0byBzaG93IGJ5IGRlZmF1bHQuXG4gKi9cbmNvbnN0IE1BWF9OVU1fQ09MUyA9IDEwO1xuLyoqXG4gKiBBZGQgcGVyLWNvbHVtbiBjb25maWcgdG8gcXVlcmllZCByZXN1bHRzLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDb2x1bW5Db25maWdDb250cm9sKHsgcXVlcnlSZXNwb25zZSwgYXBwbGllZENvbHVtbk5hbWVzID0gW10sIHZhbHVlLCBvbkNoYW5nZSwgY29uZmlnRm9ybUxheW91dCA9IERFRkFVTFRfQ09ORklHX0ZPUk1fTEFZT1VULCAuLi5wcm9wcyB9KSB7XG4gICAgY29uc3QgeyBjb2xuYW1lczogX2NvbG5hbWVzLCBjb2x0eXBlczogX2NvbHR5cGVzIH0gPSBxdWVyeVJlc3BvbnNlIHx8IHt9O1xuICAgIGxldCBjb2xuYW1lcyA9IFtdO1xuICAgIGxldCBjb2x0eXBlcyA9IFtdO1xuICAgIGlmIChhcHBsaWVkQ29sdW1uTmFtZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGNvbG5hbWVzID0gX2NvbG5hbWVzIHx8IFtdO1xuICAgICAgICBjb2x0eXBlcyA9IF9jb2x0eXBlcyB8fCBbXTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IGFwcGxpZWRDb2wgPSBuZXcgU2V0KGFwcGxpZWRDb2x1bW5OYW1lcyk7XG4gICAgICAgIF9jb2xuYW1lcz8uZm9yRWFjaCgoY29sLCBpZHgpID0+IHtcbiAgICAgICAgICAgIGlmIChhcHBsaWVkQ29sLmhhcyhjb2wpKSB7XG4gICAgICAgICAgICAgICAgY29sbmFtZXMucHVzaChjb2wpO1xuICAgICAgICAgICAgICAgIGNvbHR5cGVzLnB1c2goX2NvbHR5cGVzPy5baWR4XSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gICAgY29uc3QgY29sdW1uQ29uZmlncyA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICBjb25zdCBjb25maWdzID0ge307XG4gICAgICAgIGNvbG5hbWVzPy5mb3JFYWNoKChjb2wsIGlkeCkgPT4ge1xuICAgICAgICAgICAgY29uZmlnc1tjb2xdID0ge1xuICAgICAgICAgICAgICAgIG5hbWU6IENPTFVNTl9OQU1FX0FMSUFTRVNbY29sXSB8fCBjb2wsXG4gICAgICAgICAgICAgICAgdHlwZTogY29sdHlwZXM/LltpZHhdLFxuICAgICAgICAgICAgICAgIGNvbmZpZzogdmFsdWU/Lltjb2xdIHx8IHt9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBjb25maWdzO1xuICAgIH0sIFt2YWx1ZSwgY29sbmFtZXMsIGNvbHR5cGVzXSk7XG4gICAgY29uc3QgW3Nob3dBbGxDb2x1bW5zLCBzZXRTaG93QWxsQ29sdW1uc10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgZ2V0Q29sdW1uSW5mbyA9IChjb2wpID0+IGNvbHVtbkNvbmZpZ3NbY29sXSB8fCB7fTtcbiAgICBjb25zdCBzZXRDb2x1bW5Db25maWcgPSAoY29sLCBjb25maWcpID0+IHtcbiAgICAgICAgaWYgKG9uQ2hhbmdlKSB7XG4gICAgICAgICAgICAvLyBPbmx5IGtlZXAgY29uZmlncyBmb3Iga25vd24gY29sdW1uc1xuICAgICAgICAgICAgY29uc3QgdmFsaWRDb25maWdzID0gY29sbmFtZXMgJiYgdmFsdWVcbiAgICAgICAgICAgICAgICA/IE9iamVjdC5mcm9tRW50cmllcyhPYmplY3QuZW50cmllcyh2YWx1ZSkuZmlsdGVyKChba2V5XSkgPT4gY29sbmFtZXMuaW5jbHVkZXMoa2V5KSkpXG4gICAgICAgICAgICAgICAgOiB7IC4uLnZhbHVlIH07XG4gICAgICAgICAgICBvbkNoYW5nZSh7XG4gICAgICAgICAgICAgICAgLi4udmFsaWRDb25maWdzLFxuICAgICAgICAgICAgICAgIFtjb2xdOiBjb25maWcsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgaWYgKCFjb2xuYW1lcyB8fCBjb2xuYW1lcy5sZW5ndGggPT09IDApXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIGNvbnN0IG5lZWRTaG93TW9yZUJ1dHRvbiA9IGNvbG5hbWVzLmxlbmd0aCA+IE1BWF9OVU1fQ09MUyArIDI7XG4gICAgY29uc3QgY29scyA9IG5lZWRTaG93TW9yZUJ1dHRvbiAmJiAhc2hvd0FsbENvbHVtbnNcbiAgICAgICAgPyBjb2xuYW1lcy5zbGljZSgwLCBNQVhfTlVNX0NPTFMpXG4gICAgICAgIDogY29sbmFtZXM7XG4gICAgcmV0dXJuICg8PlxuICAgICAgPENvbnRyb2xIZWFkZXIgey4uLnByb3BzfS8+XG4gICAgICA8ZGl2IGNzcz17e1xuICAgICAgICAgICAgYm9yZGVyOiBgMXB4IHNvbGlkICR7dGhlbWUuY29sb3JzLmdyYXlzY2FsZS5saWdodDJ9YCxcbiAgICAgICAgICAgIGJvcmRlclJhZGl1czogdGhlbWUuZ3JpZFVuaXQsXG4gICAgICAgIH19PlxuICAgICAgICB7Y29scy5tYXAoY29sID0+ICg8Q29sdW1uQ29uZmlnSXRlbSBrZXk9e2NvbH0gY29sdW1uPXtnZXRDb2x1bW5JbmZvKGNvbCl9IG9uQ2hhbmdlPXtjb25maWcgPT4gc2V0Q29sdW1uQ29uZmlnKGNvbCwgY29uZmlnKX0gY29uZmlnRm9ybUxheW91dD17Y29uZmlnRm9ybUxheW91dH0vPikpfVxuICAgICAgICB7bmVlZFNob3dNb3JlQnV0dG9uICYmICg8ZGl2IHJvbGU9XCJidXR0b25cIiB0YWJJbmRleD17LTF9IGNzcz17e1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IHRoZW1lLmdyaWRVbml0ICogMixcbiAgICAgICAgICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgICAgICAgICAgICAgIGN1cnNvcjogJ3BvaW50ZXInLFxuICAgICAgICAgICAgICAgIHRleHRUcmFuc2Zvcm06ICd1cHBlcmNhc2UnLFxuICAgICAgICAgICAgICAgIGZvbnRTaXplOiB0aGVtZS50eXBvZ3JhcGh5LnNpemVzLnhzLFxuICAgICAgICAgICAgICAgIGNvbG9yOiB0aGVtZS5jb2xvcnMudGV4dC5sYWJlbCxcbiAgICAgICAgICAgICAgICAnOmhvdmVyJzoge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5ncmF5c2NhbGUubGlnaHQ0LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9fSBvbkNsaWNrPXsoKSA9PiBzZXRTaG93QWxsQ29sdW1ucyghc2hvd0FsbENvbHVtbnMpfT5cbiAgICAgICAgICAgIHtzaG93QWxsQ29sdW1ucyA/ICg8PlxuICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWFuZ2xlLXVwXCIvPiAmbmJzcDsge3QoJ1Nob3cgbGVzcyBjb2x1bW5zJyl9XG4gICAgICAgICAgICAgIDwvPikgOiAoPD5cbiAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1hbmdsZS1kb3duXCIvPiAmbmJzcDtcbiAgICAgICAgICAgICAgICB7dCgnU2hvdyBhbGwgY29sdW1ucycpfVxuICAgICAgICAgICAgICA8Lz4pfVxuICAgICAgICAgIDwvZGl2Pil9XG4gICAgICA8L2Rpdj5cbiAgICA8Lz4pO1xufVxuIl19 */\") },\n\n  cols.map((col) => ___EmotionJSX(ColumnConfigItem, { key: col, column: getColumnInfo(col), onChange: (config) => setColumnConfig(col, config), configFormLayout: configFormLayout })),\n  needShowMoreButton && ___EmotionJSX(\"div\", { role: \"button\", tabIndex: -1, css: /*#__PURE__*/_css({\n      padding: theme.gridUnit * 2,\n      textAlign: 'center',\n      cursor: 'pointer',\n      textTransform: 'uppercase',\n      fontSize: theme.typography.sizes.xs,\n      color: theme.colors.text.label,\n      ':hover': {\n        backgroundColor: theme.colors.grayscale.light4 } }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:ColumnConfigControl;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ib2dkYW5reXJ5bGl1ay9jb2RlL29wZW5zb3VyY2Uvc3VwZXJzZXQvc3VwZXJzZXQtZnJvbnRlbmQvcGFja2FnZXMvc3VwZXJzZXQtdWktY2hhcnQtY29udHJvbHMvc3JjL3NoYXJlZC1jb250cm9scy9jb21wb25lbnRzL0NvbHVtbkNvbmZpZ0NvbnRyb2wvQ29sdW1uQ29uZmlnQ29udHJvbC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUZpRSIsImZpbGUiOiIvVXNlcnMvYm9nZGFua3lyeWxpdWsvY29kZS9vcGVuc291cmNlL3N1cGVyc2V0L3N1cGVyc2V0LWZyb250ZW5kL3BhY2thZ2VzL3N1cGVyc2V0LXVpLWNoYXJ0LWNvbnRyb2xzL3NyYy9zaGFyZWQtY29udHJvbHMvY29tcG9uZW50cy9Db2x1bW5Db25maWdDb250cm9sL0NvbHVtbkNvbmZpZ0NvbnRyb2wudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8sIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlVGhlbWUsIHQsIH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xuaW1wb3J0IENvbnRyb2xIZWFkZXIgZnJvbSAnLi4vLi4vLi4vY29tcG9uZW50cy9Db250cm9sSGVhZGVyJztcbmltcG9ydCBDb2x1bW5Db25maWdJdGVtIGZyb20gJy4vQ29sdW1uQ29uZmlnSXRlbSc7XG5pbXBvcnQgeyBERUZBVUxUX0NPTkZJR19GT1JNX0xBWU9VVCB9IGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCB7IENPTFVNTl9OQU1FX0FMSUFTRVMgfSBmcm9tICcuLi8uLi8uLi9jb25zdGFudHMnO1xuLyoqXG4gKiBNYXggbnVtYmVyIG9mIGNvbHVtbnMgdG8gc2hvdyBieSBkZWZhdWx0LlxuICovXG5jb25zdCBNQVhfTlVNX0NPTFMgPSAxMDtcbi8qKlxuICogQWRkIHBlci1jb2x1bW4gY29uZmlnIHRvIHF1ZXJpZWQgcmVzdWx0cy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ29sdW1uQ29uZmlnQ29udHJvbCh7IHF1ZXJ5UmVzcG9uc2UsIGFwcGxpZWRDb2x1bW5OYW1lcyA9IFtdLCB2YWx1ZSwgb25DaGFuZ2UsIGNvbmZpZ0Zvcm1MYXlvdXQgPSBERUZBVUxUX0NPTkZJR19GT1JNX0xBWU9VVCwgLi4ucHJvcHMgfSkge1xuICAgIGNvbnN0IHsgY29sbmFtZXM6IF9jb2xuYW1lcywgY29sdHlwZXM6IF9jb2x0eXBlcyB9ID0gcXVlcnlSZXNwb25zZSB8fCB7fTtcbiAgICBsZXQgY29sbmFtZXMgPSBbXTtcbiAgICBsZXQgY29sdHlwZXMgPSBbXTtcbiAgICBpZiAoYXBwbGllZENvbHVtbk5hbWVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBjb2xuYW1lcyA9IF9jb2xuYW1lcyB8fCBbXTtcbiAgICAgICAgY29sdHlwZXMgPSBfY29sdHlwZXMgfHwgW107XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBhcHBsaWVkQ29sID0gbmV3IFNldChhcHBsaWVkQ29sdW1uTmFtZXMpO1xuICAgICAgICBfY29sbmFtZXM/LmZvckVhY2goKGNvbCwgaWR4KSA9PiB7XG4gICAgICAgICAgICBpZiAoYXBwbGllZENvbC5oYXMoY29sKSkge1xuICAgICAgICAgICAgICAgIGNvbG5hbWVzLnB1c2goY29sKTtcbiAgICAgICAgICAgICAgICBjb2x0eXBlcy5wdXNoKF9jb2x0eXBlcz8uW2lkeF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICAgIGNvbnN0IGNvbHVtbkNvbmZpZ3MgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgY29uc3QgY29uZmlncyA9IHt9O1xuICAgICAgICBjb2xuYW1lcz8uZm9yRWFjaCgoY29sLCBpZHgpID0+IHtcbiAgICAgICAgICAgIGNvbmZpZ3NbY29sXSA9IHtcbiAgICAgICAgICAgICAgICBuYW1lOiBDT0xVTU5fTkFNRV9BTElBU0VTW2NvbF0gfHwgY29sLFxuICAgICAgICAgICAgICAgIHR5cGU6IGNvbHR5cGVzPy5baWR4XSxcbiAgICAgICAgICAgICAgICBjb25maWc6IHZhbHVlPy5bY29sXSB8fCB7fSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gY29uZmlncztcbiAgICB9LCBbdmFsdWUsIGNvbG5hbWVzLCBjb2x0eXBlc10pO1xuICAgIGNvbnN0IFtzaG93QWxsQ29sdW1ucywgc2V0U2hvd0FsbENvbHVtbnNdID0gdXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IGdldENvbHVtbkluZm8gPSAoY29sKSA9PiBjb2x1bW5Db25maWdzW2NvbF0gfHwge307XG4gICAgY29uc3Qgc2V0Q29sdW1uQ29uZmlnID0gKGNvbCwgY29uZmlnKSA9PiB7XG4gICAgICAgIGlmIChvbkNoYW5nZSkge1xuICAgICAgICAgICAgLy8gT25seSBrZWVwIGNvbmZpZ3MgZm9yIGtub3duIGNvbHVtbnNcbiAgICAgICAgICAgIGNvbnN0IHZhbGlkQ29uZmlncyA9IGNvbG5hbWVzICYmIHZhbHVlXG4gICAgICAgICAgICAgICAgPyBPYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXModmFsdWUpLmZpbHRlcigoW2tleV0pID0+IGNvbG5hbWVzLmluY2x1ZGVzKGtleSkpKVxuICAgICAgICAgICAgICAgIDogeyAuLi52YWx1ZSB9O1xuICAgICAgICAgICAgb25DaGFuZ2Uoe1xuICAgICAgICAgICAgICAgIC4uLnZhbGlkQ29uZmlncyxcbiAgICAgICAgICAgICAgICBbY29sXTogY29uZmlnLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGlmICghY29sbmFtZXMgfHwgY29sbmFtZXMubGVuZ3RoID09PSAwKVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICBjb25zdCBuZWVkU2hvd01vcmVCdXR0b24gPSBjb2xuYW1lcy5sZW5ndGggPiBNQVhfTlVNX0NPTFMgKyAyO1xuICAgIGNvbnN0IGNvbHMgPSBuZWVkU2hvd01vcmVCdXR0b24gJiYgIXNob3dBbGxDb2x1bW5zXG4gICAgICAgID8gY29sbmFtZXMuc2xpY2UoMCwgTUFYX05VTV9DT0xTKVxuICAgICAgICA6IGNvbG5hbWVzO1xuICAgIHJldHVybiAoPD5cbiAgICAgIDxDb250cm9sSGVhZGVyIHsuLi5wcm9wc30vPlxuICAgICAgPGRpdiBjc3M9e3tcbiAgICAgICAgICAgIGJvcmRlcjogYDFweCBzb2xpZCAke3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUubGlnaHQyfWAsXG4gICAgICAgICAgICBib3JkZXJSYWRpdXM6IHRoZW1lLmdyaWRVbml0LFxuICAgICAgICB9fT5cbiAgICAgICAge2NvbHMubWFwKGNvbCA9PiAoPENvbHVtbkNvbmZpZ0l0ZW0ga2V5PXtjb2x9IGNvbHVtbj17Z2V0Q29sdW1uSW5mbyhjb2wpfSBvbkNoYW5nZT17Y29uZmlnID0+IHNldENvbHVtbkNvbmZpZyhjb2wsIGNvbmZpZyl9IGNvbmZpZ0Zvcm1MYXlvdXQ9e2NvbmZpZ0Zvcm1MYXlvdXR9Lz4pKX1cbiAgICAgICAge25lZWRTaG93TW9yZUJ1dHRvbiAmJiAoPGRpdiByb2xlPVwiYnV0dG9uXCIgdGFiSW5kZXg9ey0xfSBjc3M9e3tcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiB0aGVtZS5ncmlkVW5pdCAqIDIsXG4gICAgICAgICAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICAgICAgICAgICAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICAgICAgICAgICAgICB0ZXh0VHJhbnNmb3JtOiAndXBwZXJjYXNlJyxcbiAgICAgICAgICAgICAgICBmb250U2l6ZTogdGhlbWUudHlwb2dyYXBoeS5zaXplcy54cyxcbiAgICAgICAgICAgICAgICBjb2xvcjogdGhlbWUuY29sb3JzLnRleHQubGFiZWwsXG4gICAgICAgICAgICAgICAgJzpob3Zlcic6IHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmxpZ2h0NCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfX0gb25DbGljaz17KCkgPT4gc2V0U2hvd0FsbENvbHVtbnMoIXNob3dBbGxDb2x1bW5zKX0+XG4gICAgICAgICAgICB7c2hvd0FsbENvbHVtbnMgPyAoPD5cbiAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1hbmdsZS11cFwiLz4gJm5ic3A7IHt0KCdTaG93IGxlc3MgY29sdW1ucycpfVxuICAgICAgICAgICAgICA8Lz4pIDogKDw+XG4gICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtYW5nbGUtZG93blwiLz4gJm5ic3A7XG4gICAgICAgICAgICAgICAge3QoJ1Nob3cgYWxsIGNvbHVtbnMnKX1cbiAgICAgICAgICAgICAgPC8+KX1cbiAgICAgICAgICA8L2Rpdj4pfVxuICAgICAgPC9kaXY+XG4gICAgPC8+KTtcbn1cbiJdfQ== */\"),\n\n    onClick: () => setShowAllColumns(!showAllColumns) },\n  showAllColumns ? ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"i\", { className: \"fa fa-angle-up\" }), \" \\xA0 \", t('Show less columns')) :\n  ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"i\", { className: \"fa fa-angle-down\" }), \" \\xA0\",\n  t('Show all columns')))));\n\n\n\n\n}","map":{"version":3,"mappings":"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","names":["React","useMemo","useState","useTheme","t","ControlHeader","ColumnConfigItem","DEFAULT_CONFIG_FORM_LAYOUT","COLUMN_NAME_ALIASES","MAX_NUM_COLS","ColumnConfigControl","queryResponse","appliedColumnNames","value","onChange","configFormLayout","props","colnames","_colnames","coltypes","_coltypes","length","appliedCol","Set","forEach","col","idx","has","push","theme","columnConfigs","configs","name","type","config","showAllColumns","setShowAllColumns","getColumnInfo","setColumnConfig","validConfigs","Object","fromEntries","entries","filter","key","needShowMoreButton","cols","slice","border","colors","grayscale","light2","borderRadius","gridUnit","map","padding","textAlign","cursor","textTransform","fontSize","typography","sizes","xs","color","text","label","backgroundColor","light4"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/components/ColumnConfigControl/ColumnConfigControl.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState } from 'react';\nimport {\n  ChartDataResponseResult,\n  useTheme,\n  t,\n  GenericDataType,\n} from '@superset-ui/core';\nimport ControlHeader from '../../../components/ControlHeader';\nimport { ControlComponentProps } from '../types';\n\nimport ColumnConfigItem from './ColumnConfigItem';\nimport {\n  ColumnConfigInfo,\n  ColumnConfig,\n  ColumnConfigFormLayout,\n} from './types';\nimport { DEFAULT_CONFIG_FORM_LAYOUT } from './constants';\nimport { COLUMN_NAME_ALIASES } from '../../../constants';\n\nexport type ColumnConfigControlProps<T extends ColumnConfig> =\n  ControlComponentProps<Record<string, T>> & {\n    queryResponse?: ChartDataResponseResult;\n    configFormLayout?: ColumnConfigFormLayout;\n    appliedColumnNames?: string[];\n  };\n\n/**\n * Max number of columns to show by default.\n */\nconst MAX_NUM_COLS = 10;\n\n/**\n * Add per-column config to queried results.\n */\nexport default function ColumnConfigControl<T extends ColumnConfig>({\n  queryResponse,\n  appliedColumnNames = [],\n  value,\n  onChange,\n  configFormLayout = DEFAULT_CONFIG_FORM_LAYOUT,\n  ...props\n}: ColumnConfigControlProps<T>) {\n  const { colnames: _colnames, coltypes: _coltypes } = queryResponse || {};\n  let colnames: string[] = [];\n  let coltypes: GenericDataType[] = [];\n  if (appliedColumnNames.length === 0) {\n    colnames = _colnames || [];\n    coltypes = _coltypes || [];\n  } else {\n    const appliedCol = new Set(appliedColumnNames);\n    _colnames?.forEach((col, idx) => {\n      if (appliedCol.has(col)) {\n        colnames.push(col);\n        coltypes.push(_coltypes?.[idx] as GenericDataType);\n      }\n    });\n  }\n  const theme = useTheme();\n  const columnConfigs = useMemo(() => {\n    const configs: Record<string, ColumnConfigInfo> = {};\n    colnames?.forEach((col, idx) => {\n      configs[col] = {\n        name: COLUMN_NAME_ALIASES[col] || col,\n        type: coltypes?.[idx],\n        config: value?.[col] || {},\n      };\n    });\n    return configs;\n  }, [value, colnames, coltypes]);\n  const [showAllColumns, setShowAllColumns] = useState(false);\n\n  const getColumnInfo = (col: string) => columnConfigs[col] || {};\n  const setColumnConfig = (col: string, config: T) => {\n    if (onChange) {\n      // Only keep configs for known columns\n      const validConfigs: Record<string, T> =\n        colnames && value\n          ? Object.fromEntries(\n              Object.entries(value).filter(([key]) => colnames.includes(key)),\n            )\n          : { ...value };\n      onChange({\n        ...validConfigs,\n        [col]: config,\n      });\n    }\n  };\n\n  if (!colnames || colnames.length === 0) return null;\n\n  const needShowMoreButton = colnames.length > MAX_NUM_COLS + 2;\n  const cols =\n    needShowMoreButton && !showAllColumns\n      ? colnames.slice(0, MAX_NUM_COLS)\n      : colnames;\n\n  return (\n    <>\n      <ControlHeader {...props} />\n      <div\n        css={{\n          border: `1px solid ${theme.colors.grayscale.light2}`,\n          borderRadius: theme.gridUnit,\n        }}\n      >\n        {cols.map(col => (\n          <ColumnConfigItem\n            key={col}\n            column={getColumnInfo(col)}\n            onChange={config => setColumnConfig(col, config as T)}\n            configFormLayout={configFormLayout}\n          />\n        ))}\n        {needShowMoreButton && (\n          <div\n            role=\"button\"\n            tabIndex={-1}\n            css={{\n              padding: theme.gridUnit * 2,\n              textAlign: 'center',\n              cursor: 'pointer',\n              textTransform: 'uppercase',\n              fontSize: theme.typography.sizes.xs,\n              color: theme.colors.text.label,\n              ':hover': {\n                backgroundColor: theme.colors.grayscale.light4,\n              },\n            }}\n            onClick={() => setShowAllColumns(!showAllColumns)}\n          >\n            {showAllColumns ? (\n              <>\n                <i className=\"fa fa-angle-up\" /> &nbsp; {t('Show less columns')}\n              </>\n            ) : (\n              <>\n                <i className=\"fa fa-angle-down\" /> &nbsp;\n                {t('Show all columns')}\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}