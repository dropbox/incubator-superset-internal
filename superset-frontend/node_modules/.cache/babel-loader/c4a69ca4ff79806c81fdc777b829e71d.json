{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _isEmpty from \"lodash/isEmpty\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport { Behavior, css, extractQueryFields, getChartMetadataRegistry, styled, t } from '@superset-ui/core';\nimport { Menu } from 'src/components/Menu';\nimport DrillDetailModal from './DrillDetailModal';\nimport { getSubmenuYOffset } from '../utils';\nimport { MenuItemTooltip } from '../DisabledMenuItemTooltip';\nimport { MenuItemWithTruncation } from '../MenuItemWithTruncation';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DRILL_TO_DETAIL_TEXT = t('Drill to detail by');\nconst DisabledMenuItem = (_ref) => {let { children, ...props } = _ref;return ___EmotionJSX(Menu.Item, _extends({ disabled: true }, props),\n  ___EmotionJSX(\"div\", { css: css`\n        white-space: normal;\n        max-width: 160px;\n      ` },\n  children));};\n\n\nconst Filter = styled.span`\n  ${(_ref2) => {let { theme } = _ref2;return `\n     font-weight: ${theme.typography.weights.bold};\n     color: ${theme.colors.primary.base};\n   `;}}\n`;\nconst DrillDetailMenuItems = (_ref3) => {let { chartId, formData, filters = [], isContextMenu = false, contextMenuY = 0, onSelection = () => null, onClick = () => null, submenuIndex = 0, ...props } = _ref3;\n  const [modalFilters, setFilters] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const openModal = useCallback((filters, event) => {\n    onClick(event);\n    onSelection();\n    setFilters(filters);\n    setShowModal(true);\n  }, [onClick, onSelection]);\n  const closeModal = useCallback(() => {\n    setShowModal(false);\n  }, []);\n  // Check for Behavior.DRILL_TO_DETAIL to tell if plugin handles the `contextmenu`\n  // event for dimensions.  If it doesn't, tell the user that drill to detail by\n  // dimension is not supported.  If it does, and the `contextmenu` handler didn't\n  // pass any filters, tell the user that they didn't select a dimension.\n  const handlesDimensionContextMenu = useMemo(() => {var _getChartMetadataRegi;return (_getChartMetadataRegi = getChartMetadataRegistry().\n    get(formData.viz_type)) == null ? void 0 : _getChartMetadataRegi.\n    behaviors.find((behavior) => behavior === Behavior.DRILL_TO_DETAIL);}, [formData.viz_type]);\n  // Check metrics to see if chart's current configuration lacks\n  // aggregations, in which case Drill to Detail should be disabled.\n  const noAggregations = useMemo(() => {\n    const { metrics } = extractQueryFields(formData);\n    return _isEmpty(metrics);\n  }, [formData]);\n  let drillToDetailMenuItem;\n  if (handlesDimensionContextMenu && noAggregations) {\n    drillToDetailMenuItem = ___EmotionJSX(DisabledMenuItem, _extends({}, props, { key: \"drill-detail-no-aggregations\" }),\n    t('Drill to detail'),\n    ___EmotionJSX(MenuItemTooltip, { title: t('Drill to detail is disabled because this chart does not group data by dimension value.') }));\n\n  } else\n  {\n    drillToDetailMenuItem = ___EmotionJSX(Menu.Item, _extends({}, props, { key: \"drill-detail-no-filters\", onClick: openModal.bind(null, []) }),\n    t('Drill to detail'));\n\n  }\n  let drillToDetailByMenuItem;\n  if (!handlesDimensionContextMenu) {\n    drillToDetailByMenuItem = ___EmotionJSX(DisabledMenuItem, _extends({}, props, { key: \"drill-detail-by-chart-not-supported\" }),\n    DRILL_TO_DETAIL_TEXT,\n    ___EmotionJSX(MenuItemTooltip, { title: t('Drill to detail by value is not yet supported for this chart type.') }));\n\n  }\n  if (handlesDimensionContextMenu && noAggregations) {\n    drillToDetailByMenuItem = ___EmotionJSX(DisabledMenuItem, _extends({}, props, { key: \"drill-detail-by-no-aggregations\" }),\n    DRILL_TO_DETAIL_TEXT);\n\n  }\n  // Ensure submenu doesn't appear offscreen\n  const submenuYOffset = useMemo(() => getSubmenuYOffset(contextMenuY, filters.length > 1 ? filters.length + 1 : filters.length, submenuIndex), [contextMenuY, filters.length, submenuIndex]);\n  if (handlesDimensionContextMenu && !noAggregations && filters != null && filters.length) {\n    drillToDetailByMenuItem = ___EmotionJSX(Menu.SubMenu, _extends({}, props, { popupOffset: [0, submenuYOffset], popupClassName: \"chart-context-submenu\", title: DRILL_TO_DETAIL_TEXT }),\n    ___EmotionJSX(\"div\", { \"data-test\": \"drill-to-detail-by-submenu\" },\n    filters.map((filter, i) => ___EmotionJSX(MenuItemWithTruncation, _extends({}, props, { tooltipText: `${DRILL_TO_DETAIL_TEXT} ${filter.formattedVal}`, key: `drill-detail-filter-${i}`, onClick: openModal.bind(null, [filter]) }),\n    `${DRILL_TO_DETAIL_TEXT} `,\n    ___EmotionJSX(Filter, null, filter.formattedVal))),\n\n    filters.length > 1 && ___EmotionJSX(Menu.Item, _extends({}, props, { key: \"drill-detail-filter-all\", onClick: openModal.bind(null, filters) }),\n    ___EmotionJSX(\"div\", null,\n    `${DRILL_TO_DETAIL_TEXT} `,\n    ___EmotionJSX(Filter, null, t('all'))))));\n\n\n\n\n  }\n  if (handlesDimensionContextMenu && !noAggregations && !(filters != null && filters.length)) {\n    drillToDetailByMenuItem = ___EmotionJSX(DisabledMenuItem, _extends({}, props, { key: \"drill-detail-by-select-aggregation\" }),\n    DRILL_TO_DETAIL_TEXT,\n    ___EmotionJSX(MenuItemTooltip, { title: t('Right-click on a dimension value to drill to detail by that value.') }));\n\n  }\n  return ___EmotionJSX(React.Fragment, null,\n  drillToDetailMenuItem,\n  isContextMenu && drillToDetailByMenuItem,\n  ___EmotionJSX(DrillDetailModal, { chartId: chartId, formData: formData, initialFilters: modalFilters, showModal: showModal, onHideModal: closeModal }));\n\n};__signature__(DrillDetailMenuItems, \"useState{[modalFilters, setFilters]([])}\\nuseState{[showModal, setShowModal](false)}\\nuseCallback{openModal}\\nuseCallback{closeModal}\\nuseMemo{handlesDimensionContextMenu}\\nuseMemo{noAggregations}\\nuseMemo{submenuYOffset}\");const _default =\nDrillDetailMenuItems;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DRILL_TO_DETAIL_TEXT, \"DRILL_TO_DETAIL_TEXT\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Chart/DrillDetail/DrillDetailMenuItems.tsx\");reactHotLoader.register(DisabledMenuItem, \"DisabledMenuItem\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Chart/DrillDetail/DrillDetailMenuItems.tsx\");reactHotLoader.register(Filter, \"Filter\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Chart/DrillDetail/DrillDetailMenuItems.tsx\");reactHotLoader.register(DrillDetailMenuItems, \"DrillDetailMenuItems\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Chart/DrillDetail/DrillDetailMenuItems.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Chart/DrillDetail/DrillDetailMenuItems.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useCallback","useMemo","useState","Behavior","css","extractQueryFields","getChartMetadataRegistry","styled","t","Menu","DrillDetailModal","getSubmenuYOffset","MenuItemTooltip","MenuItemWithTruncation","DRILL_TO_DETAIL_TEXT","DisabledMenuItem","children","props","Filter","span","theme","typography","weights","bold","colors","primary","base","DrillDetailMenuItems","chartId","formData","filters","isContextMenu","contextMenuY","onSelection","onClick","submenuIndex","modalFilters","setFilters","showModal","setShowModal","openModal","event","closeModal","handlesDimensionContextMenu","get","viz_type","behaviors","find","behavior","DRILL_TO_DETAIL","noAggregations","metrics","drillToDetailMenuItem","bind","drillToDetailByMenuItem","submenuYOffset","length","map","filter","i","formattedVal"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Chart/DrillDetail/DrillDetailMenuItems.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { ReactNode, useCallback, useMemo, useState } from 'react';\nimport { isEmpty } from 'lodash';\nimport {\n  Behavior,\n  BinaryQueryObjectFilterClause,\n  css,\n  extractQueryFields,\n  getChartMetadataRegistry,\n  QueryFormData,\n  styled,\n  t,\n} from '@superset-ui/core';\nimport { Menu } from 'src/components/Menu';\nimport DrillDetailModal from './DrillDetailModal';\nimport { getSubmenuYOffset } from '../utils';\nimport { MenuItemTooltip } from '../DisabledMenuItemTooltip';\nimport { MenuItemWithTruncation } from '../MenuItemWithTruncation';\n\nconst DRILL_TO_DETAIL_TEXT = t('Drill to detail by');\n\nconst DisabledMenuItem = ({ children, ...props }: { children: ReactNode }) => (\n  <Menu.Item disabled {...props}>\n    <div\n      css={css`\n        white-space: normal;\n        max-width: 160px;\n      `}\n    >\n      {children}\n    </div>\n  </Menu.Item>\n);\n\nconst Filter = styled.span`\n  ${({ theme }) => `\n     font-weight: ${theme.typography.weights.bold};\n     color: ${theme.colors.primary.base};\n   `}\n`;\n\nexport type DrillDetailMenuItemsProps = {\n  chartId: number;\n  formData: QueryFormData;\n  filters?: BinaryQueryObjectFilterClause[];\n  isContextMenu?: boolean;\n  contextMenuY?: number;\n  onSelection?: () => void;\n  onClick?: (event: MouseEvent) => void;\n  submenuIndex?: number;\n};\n\nconst DrillDetailMenuItems = ({\n  chartId,\n  formData,\n  filters = [],\n  isContextMenu = false,\n  contextMenuY = 0,\n  onSelection = () => null,\n  onClick = () => null,\n  submenuIndex = 0,\n  ...props\n}: DrillDetailMenuItemsProps) => {\n  const [modalFilters, setFilters] = useState<BinaryQueryObjectFilterClause[]>(\n    [],\n  );\n\n  const [showModal, setShowModal] = useState(false);\n  const openModal = useCallback(\n    (filters, event) => {\n      onClick(event);\n      onSelection();\n      setFilters(filters);\n      setShowModal(true);\n    },\n    [onClick, onSelection],\n  );\n\n  const closeModal = useCallback(() => {\n    setShowModal(false);\n  }, []);\n\n  // Check for Behavior.DRILL_TO_DETAIL to tell if plugin handles the `contextmenu`\n  // event for dimensions.  If it doesn't, tell the user that drill to detail by\n  // dimension is not supported.  If it does, and the `contextmenu` handler didn't\n  // pass any filters, tell the user that they didn't select a dimension.\n  const handlesDimensionContextMenu = useMemo(\n    () =>\n      getChartMetadataRegistry()\n        .get(formData.viz_type)\n        ?.behaviors.find(behavior => behavior === Behavior.DRILL_TO_DETAIL),\n    [formData.viz_type],\n  );\n\n  // Check metrics to see if chart's current configuration lacks\n  // aggregations, in which case Drill to Detail should be disabled.\n  const noAggregations = useMemo(() => {\n    const { metrics } = extractQueryFields(formData);\n    return isEmpty(metrics);\n  }, [formData]);\n\n  let drillToDetailMenuItem;\n  if (handlesDimensionContextMenu && noAggregations) {\n    drillToDetailMenuItem = (\n      <DisabledMenuItem {...props} key=\"drill-detail-no-aggregations\">\n        {t('Drill to detail')}\n        <MenuItemTooltip\n          title={t(\n            'Drill to detail is disabled because this chart does not group data by dimension value.',\n          )}\n        />\n      </DisabledMenuItem>\n    );\n  } else {\n    drillToDetailMenuItem = (\n      <Menu.Item\n        {...props}\n        key=\"drill-detail-no-filters\"\n        onClick={openModal.bind(null, [])}\n      >\n        {t('Drill to detail')}\n      </Menu.Item>\n    );\n  }\n\n  let drillToDetailByMenuItem;\n  if (!handlesDimensionContextMenu) {\n    drillToDetailByMenuItem = (\n      <DisabledMenuItem {...props} key=\"drill-detail-by-chart-not-supported\">\n        {DRILL_TO_DETAIL_TEXT}\n        <MenuItemTooltip\n          title={t(\n            'Drill to detail by value is not yet supported for this chart type.',\n          )}\n        />\n      </DisabledMenuItem>\n    );\n  }\n\n  if (handlesDimensionContextMenu && noAggregations) {\n    drillToDetailByMenuItem = (\n      <DisabledMenuItem {...props} key=\"drill-detail-by-no-aggregations\">\n        {DRILL_TO_DETAIL_TEXT}\n      </DisabledMenuItem>\n    );\n  }\n\n  // Ensure submenu doesn't appear offscreen\n  const submenuYOffset = useMemo(\n    () =>\n      getSubmenuYOffset(\n        contextMenuY,\n        filters.length > 1 ? filters.length + 1 : filters.length,\n        submenuIndex,\n      ),\n    [contextMenuY, filters.length, submenuIndex],\n  );\n\n  if (handlesDimensionContextMenu && !noAggregations && filters?.length) {\n    drillToDetailByMenuItem = (\n      <Menu.SubMenu\n        {...props}\n        popupOffset={[0, submenuYOffset]}\n        popupClassName=\"chart-context-submenu\"\n        title={DRILL_TO_DETAIL_TEXT}\n      >\n        <div data-test=\"drill-to-detail-by-submenu\">\n          {filters.map((filter, i) => (\n            <MenuItemWithTruncation\n              {...props}\n              tooltipText={`${DRILL_TO_DETAIL_TEXT} ${filter.formattedVal}`}\n              key={`drill-detail-filter-${i}`}\n              onClick={openModal.bind(null, [filter])}\n            >\n              {`${DRILL_TO_DETAIL_TEXT} `}\n              <Filter>{filter.formattedVal}</Filter>\n            </MenuItemWithTruncation>\n          ))}\n          {filters.length > 1 && (\n            <Menu.Item\n              {...props}\n              key=\"drill-detail-filter-all\"\n              onClick={openModal.bind(null, filters)}\n            >\n              <div>\n                {`${DRILL_TO_DETAIL_TEXT} `}\n                <Filter>{t('all')}</Filter>\n              </div>\n            </Menu.Item>\n          )}\n        </div>\n      </Menu.SubMenu>\n    );\n  }\n\n  if (handlesDimensionContextMenu && !noAggregations && !filters?.length) {\n    drillToDetailByMenuItem = (\n      <DisabledMenuItem {...props} key=\"drill-detail-by-select-aggregation\">\n        {DRILL_TO_DETAIL_TEXT}\n        <MenuItemTooltip\n          title={t(\n            'Right-click on a dimension value to drill to detail by that value.',\n          )}\n        />\n      </DisabledMenuItem>\n    );\n  }\n\n  return (\n    <>\n      {drillToDetailMenuItem}\n      {isContextMenu && drillToDetailByMenuItem}\n      <DrillDetailModal\n        chartId={chartId}\n        formData={formData}\n        initialFilters={modalFilters}\n        showModal={showModal}\n        onHideModal={closeModal}\n      />\n    </>\n  );\n};\n\nexport default DrillDetailMenuItems;\n"]},"metadata":{},"sourceType":"module"}