{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { OptionControlLabel } from 'src/explore/components/controls/OptionControls';\nimport { DndItemType } from 'src/explore/components/DndItemType';\nimport columnType from './columnType';\nimport AdhocMetric from './AdhocMetric';\nimport savedMetricType from './savedMetricType';\nimport AdhocMetricPopoverTrigger from './AdhocMetricPopoverTrigger';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  adhocMetric: PropTypes.instanceOf(AdhocMetric),\n  onMetricEdit: PropTypes.func.isRequired,\n  onRemoveMetric: PropTypes.func,\n  columns: PropTypes.arrayOf(columnType),\n  savedMetricsOptions: PropTypes.arrayOf(savedMetricType),\n  savedMetric: savedMetricType,\n  datasource: PropTypes.object,\n  onMoveLabel: PropTypes.func,\n  onDropLabel: PropTypes.func,\n  index: PropTypes.number,\n  type: PropTypes.string,\n  multi: PropTypes.bool,\n  datasourceWarningMessage: PropTypes.string };\n\n\nclass AdhocMetricOption extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onRemoveMetric = this.onRemoveMetric.bind(this);\n  }\n\n  onRemoveMetric(e) {\n    e == null ? void 0 : e.stopPropagation();\n    this.props.onRemoveMetric(this.props.index);\n  }\n\n  render() {\n    const {\n      adhocMetric,\n      onMetricEdit,\n      columns,\n      savedMetricsOptions,\n      savedMetric,\n      datasource,\n      onMoveLabel,\n      onDropLabel,\n      index,\n      type,\n      multi,\n      datasourceWarningMessage } =\n    this.props;\n\n    return (\n      ___EmotionJSX(AdhocMetricPopoverTrigger, {\n        adhocMetric: adhocMetric,\n        onMetricEdit: onMetricEdit,\n        columns: columns,\n        savedMetricsOptions: savedMetricsOptions,\n        savedMetric: savedMetric,\n        datasource: datasource },\n\n      ___EmotionJSX(OptionControlLabel, {\n        savedMetric: savedMetric,\n        adhocMetric: adhocMetric,\n        label: adhocMetric.label,\n        onRemove: this.onRemoveMetric,\n        onMoveLabel: onMoveLabel,\n        onDropLabel: onDropLabel,\n        index: index,\n        type: type != null ? type : DndItemType.AdhocMetricOption,\n        withCaret: true,\n        isFunction: true,\n        multi: multi,\n        datasourceWarningMessage: datasourceWarningMessage })));\n\n\n\n  }}\n\n\nexport default AdhocMetricOption;\n\nAdhocMetricOption.propTypes = propTypes;","map":{"version":3,"names":["React","PropTypes","OptionControlLabel","DndItemType","columnType","AdhocMetric","savedMetricType","AdhocMetricPopoverTrigger","propTypes","adhocMetric","instanceOf","onMetricEdit","func","isRequired","onRemoveMetric","columns","arrayOf","savedMetricsOptions","savedMetric","datasource","object","onMoveLabel","onDropLabel","index","number","type","string","multi","bool","datasourceWarningMessage","AdhocMetricOption","PureComponent","constructor","props","bind","e","stopPropagation","render","label"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricOption.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { OptionControlLabel } from 'src/explore/components/controls/OptionControls';\nimport { DndItemType } from 'src/explore/components/DndItemType';\nimport columnType from './columnType';\nimport AdhocMetric from './AdhocMetric';\nimport savedMetricType from './savedMetricType';\nimport AdhocMetricPopoverTrigger from './AdhocMetricPopoverTrigger';\n\nconst propTypes = {\n  adhocMetric: PropTypes.instanceOf(AdhocMetric),\n  onMetricEdit: PropTypes.func.isRequired,\n  onRemoveMetric: PropTypes.func,\n  columns: PropTypes.arrayOf(columnType),\n  savedMetricsOptions: PropTypes.arrayOf(savedMetricType),\n  savedMetric: savedMetricType,\n  datasource: PropTypes.object,\n  onMoveLabel: PropTypes.func,\n  onDropLabel: PropTypes.func,\n  index: PropTypes.number,\n  type: PropTypes.string,\n  multi: PropTypes.bool,\n  datasourceWarningMessage: PropTypes.string,\n};\n\nclass AdhocMetricOption extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onRemoveMetric = this.onRemoveMetric.bind(this);\n  }\n\n  onRemoveMetric(e) {\n    e?.stopPropagation();\n    this.props.onRemoveMetric(this.props.index);\n  }\n\n  render() {\n    const {\n      adhocMetric,\n      onMetricEdit,\n      columns,\n      savedMetricsOptions,\n      savedMetric,\n      datasource,\n      onMoveLabel,\n      onDropLabel,\n      index,\n      type,\n      multi,\n      datasourceWarningMessage,\n    } = this.props;\n\n    return (\n      <AdhocMetricPopoverTrigger\n        adhocMetric={adhocMetric}\n        onMetricEdit={onMetricEdit}\n        columns={columns}\n        savedMetricsOptions={savedMetricsOptions}\n        savedMetric={savedMetric}\n        datasource={datasource}\n      >\n        <OptionControlLabel\n          savedMetric={savedMetric}\n          adhocMetric={adhocMetric}\n          label={adhocMetric.label}\n          onRemove={this.onRemoveMetric}\n          onMoveLabel={onMoveLabel}\n          onDropLabel={onDropLabel}\n          index={index}\n          type={type ?? DndItemType.AdhocMetricOption}\n          withCaret\n          isFunction\n          multi={multi}\n          datasourceWarningMessage={datasourceWarningMessage}\n        />\n      </AdhocMetricPopoverTrigger>\n    );\n  }\n}\n\nexport default AdhocMetricOption;\n\nAdhocMetricOption.propTypes = propTypes;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,gDAAnC;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,yBAAP,MAAsC,6BAAtC,C;;AAEA,MAAMC,SAAS,GAAG;EAChBC,WAAW,EAAER,SAAS,CAACS,UAAV,CAAqBL,WAArB,CADG;EAEhBM,YAAY,EAAEV,SAAS,CAACW,IAAV,CAAeC,UAFb;EAGhBC,cAAc,EAAEb,SAAS,CAACW,IAHV;EAIhBG,OAAO,EAAEd,SAAS,CAACe,OAAV,CAAkBZ,UAAlB,CAJO;EAKhBa,mBAAmB,EAAEhB,SAAS,CAACe,OAAV,CAAkBV,eAAlB,CALL;EAMhBY,WAAW,EAAEZ,eANG;EAOhBa,UAAU,EAAElB,SAAS,CAACmB,MAPN;EAQhBC,WAAW,EAAEpB,SAAS,CAACW,IARP;EAShBU,WAAW,EAAErB,SAAS,CAACW,IATP;EAUhBW,KAAK,EAAEtB,SAAS,CAACuB,MAVD;EAWhBC,IAAI,EAAExB,SAAS,CAACyB,MAXA;EAYhBC,KAAK,EAAE1B,SAAS,CAAC2B,IAZD;EAahBC,wBAAwB,EAAE5B,SAAS,CAACyB,MAbpB,EAAlB;;;AAgBA,MAAMI,iBAAN,SAAgC9B,KAAK,CAAC+B,aAAtC,CAAoD;EAClDC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKnB,cAAL,GAAsB,KAAKA,cAAL,CAAoBoB,IAApB,CAAyB,IAAzB,CAAtB;EACD;;EAEDpB,cAAc,CAACqB,CAAD,EAAI;IAChBA,CAAC,QAAD,YAAAA,CAAC,CAAEC,eAAH;IACA,KAAKH,KAAL,CAAWnB,cAAX,CAA0B,KAAKmB,KAAL,CAAWV,KAArC;EACD;;EAEDc,MAAM,GAAG;IACP,MAAM;MACJ5B,WADI;MAEJE,YAFI;MAGJI,OAHI;MAIJE,mBAJI;MAKJC,WALI;MAMJC,UANI;MAOJE,WAPI;MAQJC,WARI;MASJC,KATI;MAUJE,IAVI;MAWJE,KAXI;MAYJE,wBAZI;IAaF,KAAKI,KAbT;;IAeA;MACE,cAAC,yBAAD;QACE,WAAW,EAAExB,WADf;QAEE,YAAY,EAAEE,YAFhB;QAGE,OAAO,EAAEI,OAHX;QAIE,mBAAmB,EAAEE,mBAJvB;QAKE,WAAW,EAAEC,WALf;QAME,UAAU,EAAEC,UANd;;MAQE,cAAC,kBAAD;QACE,WAAW,EAAED,WADf;QAEE,WAAW,EAAET,WAFf;QAGE,KAAK,EAAEA,WAAW,CAAC6B,KAHrB;QAIE,QAAQ,EAAE,KAAKxB,cAJjB;QAKE,WAAW,EAAEO,WALf;QAME,WAAW,EAAEC,WANf;QAOE,KAAK,EAAEC,KAPT;QAQE,IAAI,EAAEE,IAAF,WAAEA,IAAF,GAAUtB,WAAW,CAAC2B,iBAR5B;QASE,SAAS,MATX;QAUE,UAAU,MAVZ;QAWE,KAAK,EAAEH,KAXT;QAYE,wBAAwB,EAAEE,wBAZ5B,GARF,CADF;;;;EAyBD,CApDiD;;;AAuDpD,eAAeC,iBAAf;;AAEAA,iBAAiB,CAACtB,SAAlB,GAA8BA,SAA9B"},"metadata":{},"sourceType":"module"}