{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { D3_FORMAT_DOCS, D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT, D3_FORMAT_OPTIONS, D3_TIME_FORMAT_OPTIONS, getStandardizedControls, sections } from '@superset-ui/chart-controls';\nimport { DEFAULT_FORM_DATA } from './types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst { labelType, numberFormat, showLabels } = DEFAULT_FORM_DATA;\nconst config = {\n  controlPanelSections: [\n  sections.legacyRegularTime,\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    ['columns'],\n    ['metric'],\n    ['secondary_metric'],\n    ['adhoc_filters'],\n    ['row_limit'],\n    [\n    {\n      name: 'sort_by_metric',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Sort by metric'),\n        description: t('Whether to sort results by the selected metric in descending order.') } }]] },\n\n\n\n\n\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [\n    ['color_scheme'],\n    ['linear_color_scheme'],\n    [___EmotionJSX(\"div\", { className: \"section-header\" }, t('Labels'))],\n    [\n    {\n      name: 'show_labels',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Show Labels'),\n        renderTrigger: true,\n        default: showLabels,\n        description: t('Whether to display the labels.') } }],\n\n\n\n    [\n    {\n      name: 'show_labels_threshold',\n      config: {\n        type: 'TextControl',\n        label: t('Percentage threshold'),\n        renderTrigger: true,\n        isFloat: true,\n        default: 5,\n        description: t('Minimum threshold in percentage points for showing labels.') } }],\n\n\n\n    [\n    {\n      name: 'show_total',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Show Total'),\n        default: false,\n        renderTrigger: true,\n        description: t('Whether to display the aggregate count') } }],\n\n\n\n    [\n    {\n      name: 'label_type',\n      config: {\n        type: 'SelectControl',\n        label: t('Label Type'),\n        default: labelType,\n        renderTrigger: true,\n        choices: [\n        ['key', t('Category Name')],\n        ['value', t('Value')],\n        ['key_value', t('Category and Value')]],\n\n        description: t('What should be shown on the label?') } }],\n\n\n\n    [\n    {\n      name: 'number_format',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Number format'),\n        renderTrigger: true,\n        default: numberFormat,\n        choices: D3_FORMAT_OPTIONS,\n        description: `${D3_FORMAT_DOCS} ${D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT}` } }],\n\n\n\n    [\n    {\n      name: 'date_format',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Date format'),\n        renderTrigger: true,\n        choices: D3_TIME_FORMAT_OPTIONS,\n        default: 'smart_date',\n        description: D3_FORMAT_DOCS } }]] }],\n\n\n\n\n\n\n  controlOverrides: {\n    metric: {\n      label: t('Primary Metric'),\n      description: t('The primary metric is used to define the arc segment sizes') },\n\n    secondary_metric: {\n      label: t('Secondary Metric'),\n      default: null,\n      description: t('[optional] this secondary metric is used to ' +\n      'define the color as a ratio against the primary metric. ' +\n      'When omitted, the color is categorical and based on labels') },\n\n    color_scheme: {\n      description: t('When only a primary metric is provided, a categorical color scale is used.'),\n      visibility: (_ref) => {var _controls$secondary_m, _controls$secondary_m2;let { controls } = _ref;return Boolean(!(controls != null && (_controls$secondary_m = controls.secondary_metric) != null && _controls$secondary_m.value) ||\n        (controls == null ? void 0 : (_controls$secondary_m2 = controls.secondary_metric) == null ? void 0 : _controls$secondary_m2.value) === (controls == null ? void 0 : controls.metric.value));} },\n\n    linear_color_scheme: {\n      description: t('When a secondary metric is provided, a linear color scale is used.'),\n      visibility: (_ref2) => {var _controls$secondary_m3, _controls$secondary_m4;let { controls } = _ref2;return Boolean((controls == null ? void 0 : (_controls$secondary_m3 = controls.secondary_metric) == null ? void 0 : _controls$secondary_m3.value) &&\n        (controls == null ? void 0 : (_controls$secondary_m4 = controls.secondary_metric) == null ? void 0 : _controls$secondary_m4.value) !== (controls == null ? void 0 : controls.metric.value));} },\n\n    columns: {\n      label: t('Hierarchy'),\n      description: t(`Sets the hierarchy levels of the chart. Each level is\n        represented by one ring with the innermost circle as the top of the hierarchy.`) } },\n\n\n  formDataOverrides: (formData) => ({\n    ...formData,\n    groupby: getStandardizedControls().popAllColumns(),\n    metric: getStandardizedControls().shiftMetric(),\n    secondary_metric: getStandardizedControls().shiftMetric() }) };const _default =\n\n\nconfig;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(labelType, \"labelType\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Sunburst/controlPanel.tsx\");reactHotLoader.register(numberFormat, \"numberFormat\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Sunburst/controlPanel.tsx\");reactHotLoader.register(showLabels, \"showLabels\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Sunburst/controlPanel.tsx\");reactHotLoader.register(config, \"config\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Sunburst/controlPanel.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Sunburst/controlPanel.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","t","D3_FORMAT_DOCS","D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT","D3_FORMAT_OPTIONS","D3_TIME_FORMAT_OPTIONS","getStandardizedControls","sections","DEFAULT_FORM_DATA","labelType","numberFormat","showLabels","config","controlPanelSections","legacyRegularTime","label","expanded","controlSetRows","name","type","description","renderTrigger","default","isFloat","choices","freeForm","controlOverrides","metric","secondary_metric","color_scheme","visibility","controls","Boolean","value","linear_color_scheme","columns","formDataOverrides","formData","groupby","popAllColumns","shiftMetric"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Sunburst/controlPanel.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  ControlPanelsContainerProps,\n  D3_FORMAT_DOCS,\n  D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT,\n  D3_FORMAT_OPTIONS,\n  D3_TIME_FORMAT_OPTIONS,\n  getStandardizedControls,\n  sections,\n} from '@superset-ui/chart-controls';\nimport { DEFAULT_FORM_DATA } from './types';\n\nconst { labelType, numberFormat, showLabels } = DEFAULT_FORM_DATA;\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.legacyRegularTime,\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        ['columns'],\n        ['metric'],\n        ['secondary_metric'],\n        ['adhoc_filters'],\n        ['row_limit'],\n        [\n          {\n            name: 'sort_by_metric',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Sort by metric'),\n              description: t(\n                'Whether to sort results by the selected metric in descending order.',\n              ),\n            },\n          },\n        ],\n      ],\n    },\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        ['color_scheme'],\n        ['linear_color_scheme'],\n        [<div className=\"section-header\">{t('Labels')}</div>],\n        [\n          {\n            name: 'show_labels',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Show Labels'),\n              renderTrigger: true,\n              default: showLabels,\n              description: t('Whether to display the labels.'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'show_labels_threshold',\n            config: {\n              type: 'TextControl',\n              label: t('Percentage threshold'),\n              renderTrigger: true,\n              isFloat: true,\n              default: 5,\n              description: t(\n                'Minimum threshold in percentage points for showing labels.',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'show_total',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Show Total'),\n              default: false,\n              renderTrigger: true,\n              description: t('Whether to display the aggregate count'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'label_type',\n            config: {\n              type: 'SelectControl',\n              label: t('Label Type'),\n              default: labelType,\n              renderTrigger: true,\n              choices: [\n                ['key', t('Category Name')],\n                ['value', t('Value')],\n                ['key_value', t('Category and Value')],\n              ],\n              description: t('What should be shown on the label?'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'number_format',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Number format'),\n              renderTrigger: true,\n              default: numberFormat,\n              choices: D3_FORMAT_OPTIONS,\n              description: `${D3_FORMAT_DOCS} ${D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT}`,\n            },\n          },\n        ],\n        [\n          {\n            name: 'date_format',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Date format'),\n              renderTrigger: true,\n              choices: D3_TIME_FORMAT_OPTIONS,\n              default: 'smart_date',\n              description: D3_FORMAT_DOCS,\n            },\n          },\n        ],\n      ],\n    },\n  ],\n  controlOverrides: {\n    metric: {\n      label: t('Primary Metric'),\n      description: t(\n        'The primary metric is used to define the arc segment sizes',\n      ),\n    },\n    secondary_metric: {\n      label: t('Secondary Metric'),\n      default: null,\n      description: t(\n        '[optional] this secondary metric is used to ' +\n          'define the color as a ratio against the primary metric. ' +\n          'When omitted, the color is categorical and based on labels',\n      ),\n    },\n    color_scheme: {\n      description: t(\n        'When only a primary metric is provided, a categorical color scale is used.',\n      ),\n      visibility: ({ controls }: ControlPanelsContainerProps) =>\n        Boolean(\n          !controls?.secondary_metric?.value ||\n            controls?.secondary_metric?.value === controls?.metric.value,\n        ),\n    },\n    linear_color_scheme: {\n      description: t(\n        'When a secondary metric is provided, a linear color scale is used.',\n      ),\n      visibility: ({ controls }: ControlPanelsContainerProps) =>\n        Boolean(\n          controls?.secondary_metric?.value &&\n            controls?.secondary_metric?.value !== controls?.metric.value,\n        ),\n    },\n    columns: {\n      label: t('Hierarchy'),\n      description: t(`Sets the hierarchy levels of the chart. Each level is\n        represented by one ring with the innermost circle as the top of the hierarchy.`),\n    },\n  },\n  formDataOverrides: formData => ({\n    ...formData,\n    groupby: getStandardizedControls().popAllColumns(),\n    metric: getStandardizedControls().shiftMetric(),\n    secondary_metric: getStandardizedControls().shiftMetric(),\n  }),\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}