{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ensureIsArray } from '@superset-ui/core';\nimport { mergeExtraFormData } from '../../utils';\n// eslint-disable-next-line import/prefer-default-export\nexport function useFilterDependencies(id, dataMaskSelected) {\n  const dependencyIds = useSelector((state) => {var _state$nativeFilters$;return (_state$nativeFilters$ = state.nativeFilters.filters[id]) == null ? void 0 : _state$nativeFilters$.cascadeParentIds;});\n  return useMemo(() => {\n    let dependencies = {};\n    ensureIsArray(dependencyIds).forEach((parentId) => {\n      const parentState = dataMaskSelected == null ? void 0 : dataMaskSelected[parentId];\n      dependencies = mergeExtraFormData(dependencies, parentState == null ? void 0 : parentState.extraFormData);\n    });\n    return dependencies;\n  }, [dataMaskSelected, dependencyIds]);\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAEEC,aAFF,QAIO,mBAJP;AAKA,SAASC,kBAAT,QAAmC,aAAnC;AAEA;AACA,OAAM,SAAUC,qBAAV,CACJC,EADI,EAEJC,gBAFI,EAEkC;EAEtC,MAAMC,aAAa,GAAGN,WAAW,CAC/B,MAAK,gEAAIO,KAAK,CAACC,aAAN,CAAoBC,OAApB,CAA4BL,EAA5B,CAAJ,qBAAI,sBAAiCM,gBAArC,EAD0B,CAAjC;EAGA,OAAOX,OAAO,CAAC,MAAK;IAClB,IAAIY,YAAY,GAAG,EAAnB;IACAV,aAAa,CAACK,aAAD,CAAb,CAA6BM,OAA7B,CAAqC,SAAQ,KAAG;MAC9C,MAAMC,WAAW,GAAGR,gBAAH,oBAAGA,gBAAgB,CAAGS,QAAH,CAApC;MACAH,YAAY,GAAGT,kBAAkB,CAC/BS,YAD+B,EAE/BE,WAF+B,oBAE/BA,WAAW,CAAEE,aAFkB,CAAjC;IAID,CAND;IAOA,OAAOJ,YAAP;EACD,CAVa,EAUX,CAACN,gBAAD,EAAmBC,aAAnB,CAVW,CAAd;AAWD","names":["useMemo","useSelector","ensureIsArray","mergeExtraFormData","useFilterDependencies","id","dataMaskSelected","dependencyIds","state","nativeFilters","filters","cascadeParentIds","dependencies","forEach","parentState","parentId","extraFormData"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterControls/state.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  DataMaskStateWithId,\n  ensureIsArray,\n  ExtraFormData,\n} from '@superset-ui/core';\nimport { mergeExtraFormData } from '../../utils';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function useFilterDependencies(\n  id: string,\n  dataMaskSelected?: DataMaskStateWithId,\n): ExtraFormData {\n  const dependencyIds = useSelector<any, string[] | undefined>(\n    state => state.nativeFilters.filters[id]?.cascadeParentIds,\n  );\n  return useMemo(() => {\n    let dependencies = {};\n    ensureIsArray(dependencyIds).forEach(parentId => {\n      const parentState = dataMaskSelected?.[parentId];\n      dependencies = mergeExtraFormData(\n        dependencies,\n        parentState?.extraFormData,\n      );\n    });\n    return dependencies;\n  }, [dataMaskSelected, dependencyIds]);\n}\n"]},"metadata":{},"sourceType":"module"}