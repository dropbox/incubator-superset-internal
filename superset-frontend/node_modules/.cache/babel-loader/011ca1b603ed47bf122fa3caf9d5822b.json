{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Form } from 'src/components/Form';\nimport { recurseReactClone } from './utils';\nimport Field from './Field';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default class Fieldset extends React.PureComponent {\n\n\n\n\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n  onChange(fieldKey, val) {\n    return this.props.onChange({\n      ...this.props.item,\n      [fieldKey]: val });\n\n  }\n  render() {\n    const { title } = this.props;\n    const propExtender = (field) => ({\n      onChange: this.onChange,\n      value: this.props.item[field.props.fieldKey],\n      compact: this.props.compact });\n\n    return ___EmotionJSX(Form, { className: \"CRUD\", layout: \"vertical\" },\n    title && ___EmotionJSX(\"legend\", null, title),\n    recurseReactClone(this.props.children, Field, propExtender));\n\n  }}Fieldset.defaultProps = { compact: false, title: null };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,qBAArB;AAEA,SAASC,iBAAT,QAAkC,SAAlC;AACA,OAAOC,KAAP,MAAkB,SAAlB,C;AAYA,eAAc,MAAOC,QAAP,SAAwBJ,KAAK,CAACK,aAA9B,CAA0D;;;;;EAMtEC,YAAYC,KAAZ,EAAgC;IAC9B,MAAMA,KAAN;IACA,KAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;EACD;EAEDD,QAAQ,CAACE,QAAD,EAAyBC,GAAzB,EAAiC;IACvC,OAAO,KAAKJ,KAAL,CAAWC,QAAX,CAAoB;MACzB,GAAG,KAAKD,KAAL,CAAWK,IADW;MAEzB,CAACF,QAAD,GAAYC,GAFa,EAApB,CAAP;;EAID;EAEDE,MAAM;IACJ,MAAM,EAAEC,KAAF,KAAY,KAAKP,KAAvB;IACA,MAAMQ,YAAY,GAAG,CAACC,KAAD,MAAmD;MACtER,QAAQ,EAAE,KAAKA,QADuD;MAEtES,KAAK,EAAE,KAAKV,KAAL,CAAWK,IAAX,CAAgBI,KAAK,CAACT,KAAN,CAAYG,QAA5B,CAF+D;MAGtEQ,OAAO,EAAE,KAAKX,KAAL,CAAWW,OAHkD,EAAnD,CAArB;;IAKA,OACE,cAAC,IAAD,IAAM,SAAS,EAAC,MAAhB,EAAuB,MAAM,EAAC,UAA9B;IACGJ,KAAK,IAAI,8BAASA,KAAT,CADZ;IAEGZ,iBAAiB,CAAC,KAAKK,KAAL,CAAWY,QAAZ,EAAsBhB,KAAtB,EAA6BY,YAA7B,CAFpB,CADF;;EAMD,CA/BqE,CAAnDX,Q,CACZgB,Y,GAAe,EACpBF,OAAO,EAAE,KADW,EAEpBJ,KAAK,EAAE,IAFa,E","names":["React","Form","recurseReactClone","Field","Fieldset","PureComponent","constructor","props","onChange","bind","fieldKey","val","item","render","title","propExtender","field","value","compact","children","defaultProps"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/components/Datasource/Fieldset.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Form } from 'src/components/Form';\n\nimport { recurseReactClone } from './utils';\nimport Field from './Field';\n\ninterface FieldsetProps {\n  children: React.ReactNode;\n  onChange: Function;\n  item: Record<string, any>;\n  title: React.ReactNode;\n  compact: boolean;\n}\n\ntype fieldKeyType = string | number;\n\nexport default class Fieldset extends React.PureComponent<FieldsetProps> {\n  static defaultProps = {\n    compact: false,\n    title: null,\n  };\n\n  constructor(props: FieldsetProps) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(fieldKey: fieldKeyType, val: any) {\n    return this.props.onChange({\n      ...this.props.item,\n      [fieldKey]: val,\n    });\n  }\n\n  render() {\n    const { title } = this.props;\n    const propExtender = (field: { props: { fieldKey: fieldKeyType } }) => ({\n      onChange: this.onChange,\n      value: this.props.item[field.props.fieldKey],\n      compact: this.props.compact,\n    });\n    return (\n      <Form className=\"CRUD\" layout=\"vertical\">\n        {title && <legend>{title}</legend>}\n        {recurseReactClone(this.props.children, Field, propExtender)}\n      </Form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}