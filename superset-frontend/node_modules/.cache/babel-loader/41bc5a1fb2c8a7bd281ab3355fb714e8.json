{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { getStandardizedControls, sections } from '@superset-ui/chart-controls';\nconst config = {\n  controlPanelSections: [\n  sections.legacyRegularTime,\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'groupby',\n      override: {\n        label: t('Source / Target'),\n        description: t('Choose a source and a target') } }],\n\n\n\n    ['metric'],\n    ['adhoc_filters'],\n    [\n    {\n      name: 'row_limit',\n      override: {\n        description: t('Limiting rows may result in incomplete data and misleading charts. Consider filtering or grouping source/target names instead.') } }],\n\n\n\n    [\n    {\n      name: 'sort_by_metric',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Sort by metric'),\n        description: t('Whether to sort results by the selected metric in descending order.') } }]] },\n\n\n\n\n\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [['color_scheme']] }],\n\n\n  formDataOverrides: (formData) => ({\n    ...formData,\n    groupby: getStandardizedControls().popAllColumns(),\n    metric: getStandardizedControls().shiftMetric() }) };\n\n\nexport default config;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,CAAT,QAAkB,mBAAlB;AACA,SAEEC,uBAFF,EAGEC,QAHF,QAIO,6BAJP;AAMA,MAAMC,MAAM,GAAuB;EACjCC,oBAAoB,EAAE;EACpBF,QAAQ,CAACG,iBADW;EAEpB;IACEC,KAAK,EAAEN,CAAC,CAAC,OAAD,CADV;IAEEO,QAAQ,EAAE,IAFZ;IAGEC,cAAc,EAAE;IACd;IACE;MACEC,IAAI,EAAE,SADR;MAEEC,QAAQ,EAAE;QACRJ,KAAK,EAAEN,CAAC,CAAC,iBAAD,CADA;QAERW,WAAW,EAAEX,CAAC,CAAC,8BAAD,CAFN,EAFZ,EADF,CADc;;;;IAUd,CAAC,QAAD,CAVc;IAWd,CAAC,eAAD,CAXc;IAYd;IACE;MACES,IAAI,EAAE,WADR;MAEEC,QAAQ,EAAE;QACRC,WAAW,EAAEX,CAAC,CACZ,gIADY,CADN,EAFZ,EADF,CAZc;;;;IAsBd;IACE;MACES,IAAI,EAAE,gBADR;MAEEN,MAAM,EAAE;QACNS,IAAI,EAAE,iBADA;QAENN,KAAK,EAAEN,CAAC,CAAC,gBAAD,CAFF;QAGNW,WAAW,EAAEX,CAAC,CACZ,qEADY,CAHR,EAFV,EADF,CAtBc,CAHlB,EAFoB;;;;;;EAyCpB;IACEM,KAAK,EAAEN,CAAC,CAAC,eAAD,CADV;IAEEO,QAAQ,EAAE,IAFZ;IAGEC,cAAc,EAAE,CAAC,CAAC,cAAD,CAAD,CAHlB,EAzCoB,CADW;;;EAgDjCK,iBAAiB,EAAE,SAAQ,MAAK;IAC9B,GAAGC,QAD2B;IAE9BC,OAAO,EAAEd,uBAAuB,GAAGe,aAA1B,EAFqB;IAG9BC,MAAM,EAAEhB,uBAAuB,GAAGiB,WAA1B,EAHsB,EAAL,CAhDM,EAAnC;;;AAuDA,eAAef,MAAf","names":["t","getStandardizedControls","sections","config","controlPanelSections","legacyRegularTime","label","expanded","controlSetRows","name","override","description","type","formDataOverrides","formData","groupby","popAllColumns","metric","shiftMetric"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/legacy-plugin-chart-sankey/src/controlPanel.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  getStandardizedControls,\n  sections,\n} from '@superset-ui/chart-controls';\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.legacyRegularTime,\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'groupby',\n            override: {\n              label: t('Source / Target'),\n              description: t('Choose a source and a target'),\n            },\n          },\n        ],\n        ['metric'],\n        ['adhoc_filters'],\n        [\n          {\n            name: 'row_limit',\n            override: {\n              description: t(\n                'Limiting rows may result in incomplete data and misleading charts. Consider filtering or grouping source/target names instead.',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'sort_by_metric',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Sort by metric'),\n              description: t(\n                'Whether to sort results by the selected metric in descending order.',\n              ),\n            },\n          },\n        ],\n      ],\n    },\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [['color_scheme']],\n    },\n  ],\n  formDataOverrides: formData => ({\n    ...formData,\n    groupby: getStandardizedControls().popAllColumns(),\n    metric: getStandardizedControls().shiftMetric(),\n  }),\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}