{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { sections, sharedControls } from '@superset-ui/chart-controls';\nimport { SingleValueType } from './SingleValueType';\nconst config = {\n  controlPanelSections: [\n  sections.legacyRegularTime,\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'groupby',\n      config: {\n        ...sharedControls.groupby,\n        label: t('Column'),\n        required: true } }]] },\n\n\n\n\n\n  {\n    label: t('UI Configuration'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'enableEmptyFilter',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Filter value is required'),\n        default: false,\n        renderTrigger: true,\n        description: t('User must select a value before applying the filter') } },\n\n\n    {\n      name: 'enableSingleValue',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Single value'),\n        default: SingleValueType.Exact,\n        renderTrigger: true,\n        description: t('Use only a single value.') } }]] }] };const _default =\n\n\n\n\n\n\n\nconfig;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(config, \"config\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/filters/components/Range/controlPanel.ts\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/filters/components/Range/controlPanel.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,CAAT,QAAkB,mBAAlB;AACA,SAEEC,QAFF,EAGEC,cAHF,QAIO,6BAJP;AAKA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,MAAMC,MAAM,GAAuB;EACjCC,oBAAoB,EAAE;EACpBJ,QAAQ,CAACK,iBADW;EAEpB;IACEC,KAAK,EAAEP,CAAC,CAAC,OAAD,CADV;IAEEQ,QAAQ,EAAE,IAFZ;IAGEC,cAAc,EAAE;IACd;IACE;MACEC,IAAI,EAAE,SADR;MAEEN,MAAM,EAAE;QACN,GAAGF,cAAc,CAACS,OADZ;QAENJ,KAAK,EAAEP,CAAC,CAAC,QAAD,CAFF;QAGNY,QAAQ,EAAE,IAHJ,EAFV,EADF,CADc,CAHlB,EAFoB;;;;;;EAkBpB;IACEL,KAAK,EAAEP,CAAC,CAAC,kBAAD,CADV;IAEEQ,QAAQ,EAAE,IAFZ;IAGEC,cAAc,EAAE;IACd;IACE;MACEC,IAAI,EAAE,mBADR;MAEEN,MAAM,EAAE;QACNS,IAAI,EAAE,iBADA;QAENN,KAAK,EAAEP,CAAC,CAAC,0BAAD,CAFF;QAGNc,OAAO,EAAE,KAHH;QAINC,aAAa,EAAE,IAJT;QAKNC,WAAW,EAAEhB,CAAC,CACZ,qDADY,CALR,EAFV,EADF;;;IAaE;MACEU,IAAI,EAAE,mBADR;MAEEN,MAAM,EAAE;QACNS,IAAI,EAAE,iBADA;QAENN,KAAK,EAAEP,CAAC,CAAC,cAAD,CAFF;QAGNc,OAAO,EAAEX,eAAe,CAACc,KAHnB;QAINF,aAAa,EAAE,IAJT;QAKNC,WAAW,EAAEhB,CAAC,CAAC,0BAAD,CALR,EAFV,EAbF,CADc,CAHlB,EAlBoB,CADW,EAAnC,C;;;;;;;;AAoDeI,M,CAAf,wB,iLApDMA,M","names":["t","sections","sharedControls","SingleValueType","config","controlPanelSections","legacyRegularTime","label","expanded","controlSetRows","name","groupby","required","type","default","renderTrigger","description","Exact"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/filters/components/Range/controlPanel.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  sections,\n  sharedControls,\n} from '@superset-ui/chart-controls';\nimport { SingleValueType } from './SingleValueType';\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.legacyRegularTime,\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'groupby',\n            config: {\n              ...sharedControls.groupby,\n              label: t('Column'),\n              required: true,\n            },\n          },\n        ],\n      ],\n    },\n    {\n      label: t('UI Configuration'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'enableEmptyFilter',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Filter value is required'),\n              default: false,\n              renderTrigger: true,\n              description: t(\n                'User must select a value before applying the filter',\n              ),\n            },\n          },\n          {\n            name: 'enableSingleValue',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Single value'),\n              default: SingleValueType.Exact,\n              renderTrigger: true,\n              description: t('Use only a single value.'),\n            },\n          },\n        ],\n      ],\n    },\n  ],\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}