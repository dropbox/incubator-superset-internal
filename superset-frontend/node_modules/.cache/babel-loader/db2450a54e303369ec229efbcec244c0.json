{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext, useMemo, useState } from 'react';\nimport { createHtmlPortalNode, InPortal, OutPortal } from 'react-reverse-portal';\nimport { styled, truncationCSS } from '@superset-ui/core';\nimport { FormItem as StyledFormItem, Form } from 'src/components/Form';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { FilterBarOrientation } from 'src/dashboard/types';\nimport { checkIsMissingRequiredValue } from '../utils';\nimport FilterValue from './FilterValue';\nimport { FilterCard } from '../../FilterCard';\nimport { FilterBarScrollContext } from '../Vertical';\nimport { FilterCardPlacement } from '../../FilterCard/types';\nimport { useIsFilterInScope } from '../../state';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledIcon = styled.div`\n  position: absolute;\n  right: 0;\n`;\nconst VerticalFilterControlTitle = styled.h4`\n  font-size: ${(_ref) => {let { theme } = _ref;return theme.typography.sizes.s;}}px;\n  color: ${(_ref2) => {let { theme } = _ref2;return theme.colors.grayscale.dark1;}};\n  margin: 0;\n  overflow-wrap: break-word;\n`;\nconst HorizontalFilterControlTitle = styled(VerticalFilterControlTitle)`\n  font-weight: ${(_ref3) => {let { theme } = _ref3;return theme.typography.weights.normal;}};\n  color: ${(_ref4) => {let { theme } = _ref4;return theme.colors.grayscale.base;}};\n  max-width: ${(_ref5) => {let { theme } = _ref5;return theme.gridUnit * 15;}}px;\n  ${truncationCSS};\n`;\nconst HorizontalOverflowFilterControlTitle = styled(HorizontalFilterControlTitle)`\n  max-width: none;\n`;\nconst VerticalFilterControlTitleBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${(_ref6) => {let { theme } = _ref6;return theme.gridUnit;}}px;\n`;\nconst HorizontalFilterControlTitleBox = styled(VerticalFilterControlTitleBox)`\n  margin-bottom: unset;\n`;\nconst HorizontalOverflowFilterControlTitleBox = styled(VerticalFilterControlTitleBox)`\n  width: 100%;\n`;\nconst VerticalFilterControlContainer = styled(Form)`\n  width: 100%;\n  && .ant-form-item-label > label {\n    text-transform: none;\n    width: 100%;\n    padding-right: ${(_ref7) => {let { theme } = _ref7;return theme.gridUnit * 11;}}px;\n  }\n  .ant-form-item-tooltip {\n    margin-bottom: ${(_ref8) => {let { theme } = _ref8;return theme.gridUnit;}}px;\n  }\n`;\nconst HorizontalFilterControlContainer = styled(Form)`\n  && .ant-form-item-label > label {\n    margin-bottom: 0;\n    text-transform: none;\n  }\n  .ant-form-item-tooltip {\n    margin-bottom: ${(_ref9) => {let { theme } = _ref9;return theme.gridUnit;}}px;\n  }\n`;\nconst HorizontalOverflowFilterControlContainer = styled(VerticalFilterControlContainer)`\n  && .ant-form-item-label {\n    line-height: 1;\n    & > label {\n      padding-right: unset;\n    }\n  }\n`;\nconst VerticalFormItem = styled(StyledFormItem)`\n  .ant-form-item-label {\n    label.ant-form-item-required:not(.ant-form-item-required-mark-optional) {\n      &::after {\n        display: none;\n      }\n    }\n  }\n`;\nconst HorizontalFormItem = styled(StyledFormItem)`\n  && {\n    margin-bottom: 0;\n    align-items: center;\n  }\n\n  .ant-form-item-label {\n    padding-bottom: 0;\n    margin-right: ${(_ref10) => {let { theme } = _ref10;return theme.gridUnit * 2;}}px;\n    label.ant-form-item-required:not(.ant-form-item-required-mark-optional) {\n      &::after {\n        display: none;\n      }\n    }\n\n    & > label::after {\n      display: none;\n    }\n  }\n\n  .ant-form-item-control {\n    width: ${(_ref11) => {let { theme } = _ref11;return theme.gridUnit * 41;}}px;\n  }\n`;\nconst HorizontalOverflowFormItem = VerticalFormItem;\nconst useFilterControlDisplay = (orientation, overflow) => useMemo(() => {\n  if (orientation === FilterBarOrientation.HORIZONTAL) {\n    if (overflow) {\n      return {\n        FilterControlContainer: HorizontalOverflowFilterControlContainer,\n        FormItem: HorizontalOverflowFormItem,\n        FilterControlTitleBox: HorizontalOverflowFilterControlTitleBox,\n        FilterControlTitle: HorizontalOverflowFilterControlTitle };\n\n    }\n    return {\n      FilterControlContainer: HorizontalFilterControlContainer,\n      FormItem: HorizontalFormItem,\n      FilterControlTitleBox: HorizontalFilterControlTitleBox,\n      FilterControlTitle: HorizontalFilterControlTitle };\n\n  }\n  return {\n    FilterControlContainer: VerticalFilterControlContainer,\n    FormItem: VerticalFormItem,\n    FilterControlTitleBox: VerticalFilterControlTitleBox,\n    FilterControlTitle: VerticalFilterControlTitle };\n\n}, [orientation, overflow]);\nconst ToolTipContainer = styled.div`\n  font-size: ${(_ref12) => {let { theme } = _ref12;return theme.typography.sizes.m;}}px;\n  display: flex;\n`;\nconst RequiredFieldIndicator = () => ___EmotionJSX(\"span\", { css: (theme) => ({\n    color: theme.colors.error.base,\n    fontSize: `${theme.typography.sizes.s}px`,\n    paddingLeft: '1px' }) }, \"*\");\n\n\n\nconst DescriptionToolTip = (_ref13) => {let { description } = _ref13;return ___EmotionJSX(ToolTipContainer, null,\n  ___EmotionJSX(Tooltip, { title: description, placement: \"right\", overlayInnerStyle: {\n      display: '-webkit-box',\n      overflow: 'hidden',\n      WebkitLineClamp: 20,\n      WebkitBoxOrient: 'vertical',\n      textOverflow: 'ellipsis' },\n    getPopupContainer: (trigger) => trigger.parentElement },\n  ___EmotionJSX(\"i\", { className: \"fa fa-info-circle text-muted\", css: (theme) => ({\n      paddingLeft: `${theme.gridUnit}px`,\n      cursor: 'pointer' }) })));};\n\n\n\nconst FilterControl = (_ref14) => {var _filter$dataMask, _filter$controlValues, _filter$controlValues2;let { dataMaskSelected, filter, icon, onFilterSelectionChange, inView, showOverflow, parentRef, orientation = FilterBarOrientation.VERTICAL, overflow = false } = _ref14;\n  const portalNode = useMemo(() => createHtmlPortalNode(), []);\n  const [isFilterActive, setIsFilterActive] = useState(false);\n  const { name = '<undefined>' } = filter;\n  const isFilterInScope = useIsFilterInScope();\n  const isMissingRequiredValue = isFilterInScope(filter) &&\n  checkIsMissingRequiredValue(filter, (_filter$dataMask = filter.dataMask) == null ? void 0 : _filter$dataMask.filterState);\n  const validateStatus = isMissingRequiredValue ? 'error' : undefined;\n  const isRequired = !!((_filter$controlValues = filter.controlValues) != null && _filter$controlValues.enableEmptyFilter);\n  const { FilterControlContainer, FormItem, FilterControlTitleBox, FilterControlTitle } = useFilterControlDisplay(orientation, overflow);\n  const label = useMemo(() => {var _filter$description;return ___EmotionJSX(FilterControlTitleBox, null,\n    ___EmotionJSX(FilterControlTitle, null,\n    name),\n\n    isRequired && ___EmotionJSX(RequiredFieldIndicator, null),\n    ((_filter$description = filter.description) == null ? void 0 : _filter$description.trim()) && ___EmotionJSX(DescriptionToolTip, { description: filter.description }),\n    ___EmotionJSX(StyledIcon, null, icon));},\n  [\n  FilterControlTitleBox,\n  FilterControlTitle,\n  name,\n  isRequired,\n  filter.description,\n  icon]);\n\n  const isScrolling = useContext(FilterBarScrollContext);\n  const filterCardPlacement = useMemo(() => {\n    if (orientation === FilterBarOrientation.HORIZONTAL) {\n      if (overflow) {\n        return FilterCardPlacement.Left;\n      }\n      return FilterCardPlacement.Bottom;\n    }\n    return FilterCardPlacement.Right;\n  }, [orientation, overflow]);\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(InPortal, { node: portalNode },\n  ___EmotionJSX(FilterValue, { dataMaskSelected: dataMaskSelected, filter: filter, showOverflow: showOverflow, onFilterSelectionChange: onFilterSelectionChange, inView: inView, parentRef: parentRef, setFilterActive: setIsFilterActive, orientation: orientation, overflow: overflow, validateStatus: validateStatus })),\n\n  ___EmotionJSX(FilterControlContainer, { layout: orientation === FilterBarOrientation.HORIZONTAL && !overflow ?\n    'horizontal' :\n    'vertical' },\n  ___EmotionJSX(FilterCard, { filter: filter, isVisible: !isFilterActive && !isScrolling, placement: filterCardPlacement },\n  ___EmotionJSX(\"div\", null,\n  ___EmotionJSX(FormItem, { label: label, required: filter == null ? void 0 : (_filter$controlValues2 = filter.controlValues) == null ? void 0 : _filter$controlValues2.enableEmptyFilter, validateStatus: validateStatus },\n  ___EmotionJSX(OutPortal, { node: portalNode }))))));\n\n\n\n\n\n};\nexport default /*#__PURE__*/React.memo(FilterControl);","map":{"version":3,"mappings":"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","names":["React","useContext","useMemo","useState","createHtmlPortalNode","InPortal","OutPortal","styled","truncationCSS","FormItem","StyledFormItem","Form","Tooltip","FilterBarOrientation","checkIsMissingRequiredValue","FilterValue","FilterCard","FilterBarScrollContext","FilterCardPlacement","useIsFilterInScope","StyledIcon","div","VerticalFilterControlTitle","h4","theme","typography","sizes","s","colors","grayscale","dark1","HorizontalFilterControlTitle","weights","normal","base","gridUnit","HorizontalOverflowFilterControlTitle","VerticalFilterControlTitleBox","HorizontalFilterControlTitleBox","HorizontalOverflowFilterControlTitleBox","VerticalFilterControlContainer","HorizontalFilterControlContainer","HorizontalOverflowFilterControlContainer","VerticalFormItem","HorizontalFormItem","HorizontalOverflowFormItem","useFilterControlDisplay","orientation","overflow","HORIZONTAL","FilterControlContainer","FilterControlTitleBox","FilterControlTitle","ToolTipContainer","m","RequiredFieldIndicator","color","error","fontSize","paddingLeft","DescriptionToolTip","description","display","WebkitLineClamp","WebkitBoxOrient","textOverflow","trigger","parentElement","cursor","FilterControl","dataMaskSelected","filter","icon","onFilterSelectionChange","inView","showOverflow","parentRef","VERTICAL","portalNode","isFilterActive","setIsFilterActive","name","isFilterInScope","isMissingRequiredValue","dataMask","filterState","validateStatus","undefined","isRequired","controlValues","enableEmptyFilter","label","trim","isScrolling","filterCardPlacement","Left","Bottom","Right","memo"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterControls/FilterControl.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext, useMemo, useState } from 'react';\nimport {\n  createHtmlPortalNode,\n  InPortal,\n  OutPortal,\n} from 'react-reverse-portal';\nimport { styled, SupersetTheme, truncationCSS } from '@superset-ui/core';\nimport { FormItem as StyledFormItem, Form } from 'src/components/Form';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { FilterBarOrientation } from 'src/dashboard/types';\nimport { checkIsMissingRequiredValue } from '../utils';\nimport FilterValue from './FilterValue';\nimport { FilterCard } from '../../FilterCard';\nimport { FilterBarScrollContext } from '../Vertical';\nimport { FilterControlProps } from './types';\nimport { FilterCardPlacement } from '../../FilterCard/types';\nimport { useIsFilterInScope } from '../../state';\n\nconst StyledIcon = styled.div`\n  position: absolute;\n  right: 0;\n`;\n\nconst VerticalFilterControlTitle = styled.h4`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  color: ${({ theme }) => theme.colors.grayscale.dark1};\n  margin: 0;\n  overflow-wrap: break-word;\n`;\n\nconst HorizontalFilterControlTitle = styled(VerticalFilterControlTitle)`\n  font-weight: ${({ theme }) => theme.typography.weights.normal};\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  max-width: ${({ theme }) => theme.gridUnit * 15}px;\n  ${truncationCSS};\n`;\n\nconst HorizontalOverflowFilterControlTitle = styled(\n  HorizontalFilterControlTitle,\n)`\n  max-width: none;\n`;\n\nconst VerticalFilterControlTitleBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${({ theme }) => theme.gridUnit}px;\n`;\n\nconst HorizontalFilterControlTitleBox = styled(VerticalFilterControlTitleBox)`\n  margin-bottom: unset;\n`;\n\nconst HorizontalOverflowFilterControlTitleBox = styled(\n  VerticalFilterControlTitleBox,\n)`\n  width: 100%;\n`;\n\nconst VerticalFilterControlContainer = styled(Form)`\n  width: 100%;\n  && .ant-form-item-label > label {\n    text-transform: none;\n    width: 100%;\n    padding-right: ${({ theme }) => theme.gridUnit * 11}px;\n  }\n  .ant-form-item-tooltip {\n    margin-bottom: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst HorizontalFilterControlContainer = styled(Form)`\n  && .ant-form-item-label > label {\n    margin-bottom: 0;\n    text-transform: none;\n  }\n  .ant-form-item-tooltip {\n    margin-bottom: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst HorizontalOverflowFilterControlContainer = styled(\n  VerticalFilterControlContainer,\n)`\n  && .ant-form-item-label {\n    line-height: 1;\n    & > label {\n      padding-right: unset;\n    }\n  }\n`;\n\nconst VerticalFormItem = styled(StyledFormItem)`\n  .ant-form-item-label {\n    label.ant-form-item-required:not(.ant-form-item-required-mark-optional) {\n      &::after {\n        display: none;\n      }\n    }\n  }\n`;\n\nconst HorizontalFormItem = styled(StyledFormItem)`\n  && {\n    margin-bottom: 0;\n    align-items: center;\n  }\n\n  .ant-form-item-label {\n    padding-bottom: 0;\n    margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    label.ant-form-item-required:not(.ant-form-item-required-mark-optional) {\n      &::after {\n        display: none;\n      }\n    }\n\n    & > label::after {\n      display: none;\n    }\n  }\n\n  .ant-form-item-control {\n    width: ${({ theme }) => theme.gridUnit * 41}px;\n  }\n`;\n\nconst HorizontalOverflowFormItem = VerticalFormItem;\n\nconst useFilterControlDisplay = (\n  orientation: FilterBarOrientation,\n  overflow: boolean,\n) =>\n  useMemo(() => {\n    if (orientation === FilterBarOrientation.HORIZONTAL) {\n      if (overflow) {\n        return {\n          FilterControlContainer: HorizontalOverflowFilterControlContainer,\n          FormItem: HorizontalOverflowFormItem,\n          FilterControlTitleBox: HorizontalOverflowFilterControlTitleBox,\n          FilterControlTitle: HorizontalOverflowFilterControlTitle,\n        };\n      }\n      return {\n        FilterControlContainer: HorizontalFilterControlContainer,\n        FormItem: HorizontalFormItem,\n        FilterControlTitleBox: HorizontalFilterControlTitleBox,\n        FilterControlTitle: HorizontalFilterControlTitle,\n      };\n    }\n    return {\n      FilterControlContainer: VerticalFilterControlContainer,\n      FormItem: VerticalFormItem,\n      FilterControlTitleBox: VerticalFilterControlTitleBox,\n      FilterControlTitle: VerticalFilterControlTitle,\n    };\n  }, [orientation, overflow]);\n\nconst ToolTipContainer = styled.div`\n  font-size: ${({ theme }) => theme.typography.sizes.m}px;\n  display: flex;\n`;\n\nconst RequiredFieldIndicator = () => (\n  <span\n    css={(theme: SupersetTheme) => ({\n      color: theme.colors.error.base,\n      fontSize: `${theme.typography.sizes.s}px`,\n      paddingLeft: '1px',\n    })}\n  >\n    *\n  </span>\n);\n\nconst DescriptionToolTip = ({ description }: { description: string }) => (\n  <ToolTipContainer>\n    <Tooltip\n      title={description}\n      placement=\"right\"\n      overlayInnerStyle={{\n        display: '-webkit-box',\n        overflow: 'hidden',\n        WebkitLineClamp: 20,\n        WebkitBoxOrient: 'vertical',\n        textOverflow: 'ellipsis',\n      }}\n      getPopupContainer={trigger => trigger.parentElement as HTMLElement}\n    >\n      <i\n        className=\"fa fa-info-circle text-muted\"\n        css={(theme: SupersetTheme) => ({\n          paddingLeft: `${theme.gridUnit}px`,\n          cursor: 'pointer',\n        })}\n      />\n    </Tooltip>\n  </ToolTipContainer>\n);\n\nconst FilterControl = ({\n  dataMaskSelected,\n  filter,\n  icon,\n  onFilterSelectionChange,\n  inView,\n  showOverflow,\n  parentRef,\n  orientation = FilterBarOrientation.VERTICAL,\n  overflow = false,\n}: FilterControlProps) => {\n  const portalNode = useMemo(() => createHtmlPortalNode(), []);\n  const [isFilterActive, setIsFilterActive] = useState(false);\n\n  const { name = '<undefined>' } = filter;\n\n  const isFilterInScope = useIsFilterInScope();\n  const isMissingRequiredValue =\n    isFilterInScope(filter) &&\n    checkIsMissingRequiredValue(filter, filter.dataMask?.filterState);\n  const validateStatus = isMissingRequiredValue ? 'error' : undefined;\n  const isRequired = !!filter.controlValues?.enableEmptyFilter;\n\n  const {\n    FilterControlContainer,\n    FormItem,\n    FilterControlTitleBox,\n    FilterControlTitle,\n  } = useFilterControlDisplay(orientation, overflow);\n\n  const label = useMemo(\n    () => (\n      <FilterControlTitleBox>\n        <FilterControlTitle data-test=\"filter-control-name\">\n          {name}\n        </FilterControlTitle>\n        {isRequired && <RequiredFieldIndicator />}\n        {filter.description?.trim() && (\n          <DescriptionToolTip description={filter.description} />\n        )}\n        <StyledIcon data-test=\"filter-icon\">{icon}</StyledIcon>\n      </FilterControlTitleBox>\n    ),\n    [\n      FilterControlTitleBox,\n      FilterControlTitle,\n      name,\n      isRequired,\n      filter.description,\n      icon,\n    ],\n  );\n\n  const isScrolling = useContext(FilterBarScrollContext);\n  const filterCardPlacement = useMemo(() => {\n    if (orientation === FilterBarOrientation.HORIZONTAL) {\n      if (overflow) {\n        return FilterCardPlacement.Left;\n      }\n      return FilterCardPlacement.Bottom;\n    }\n    return FilterCardPlacement.Right;\n  }, [orientation, overflow]);\n\n  return (\n    <>\n      <InPortal node={portalNode}>\n        <FilterValue\n          dataMaskSelected={dataMaskSelected}\n          filter={filter}\n          showOverflow={showOverflow}\n          onFilterSelectionChange={onFilterSelectionChange}\n          inView={inView}\n          parentRef={parentRef}\n          setFilterActive={setIsFilterActive}\n          orientation={orientation}\n          overflow={overflow}\n          validateStatus={validateStatus}\n        />\n      </InPortal>\n      <FilterControlContainer\n        layout={\n          orientation === FilterBarOrientation.HORIZONTAL && !overflow\n            ? 'horizontal'\n            : 'vertical'\n        }\n      >\n        <FilterCard\n          filter={filter}\n          isVisible={!isFilterActive && !isScrolling}\n          placement={filterCardPlacement}\n        >\n          <div>\n            <FormItem\n              label={label}\n              required={filter?.controlValues?.enableEmptyFilter}\n              validateStatus={validateStatus}\n            >\n              <OutPortal node={portalNode} />\n            </FormItem>\n          </div>\n        </FilterCard>\n      </FilterControlContainer>\n    </>\n  );\n};\n\nexport default React.memo(FilterControl);\n"]},"metadata":{},"sourceType":"module"}