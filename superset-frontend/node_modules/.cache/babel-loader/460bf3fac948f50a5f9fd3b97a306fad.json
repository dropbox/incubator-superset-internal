{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Button from 'src/components/Button';\nimport { css, t, styled } from '@superset-ui/core';\n\nimport buildFilterScopeTreeEntry from 'src/dashboard/util/buildFilterScopeTreeEntry';\nimport getFilterScopeNodesTree from 'src/dashboard/util/getFilterScopeNodesTree';\nimport getFilterFieldNodesTree from 'src/dashboard/util/getFilterFieldNodesTree';\nimport getFilterScopeParentNodes from 'src/dashboard/util/getFilterScopeParentNodes';\nimport getKeyForFilterScopeTree from 'src/dashboard/util/getKeyForFilterScopeTree';\nimport getSelectedChartIdForFilterScopeTree from 'src/dashboard/util/getSelectedChartIdForFilterScopeTree';\nimport getFilterScopeFromNodesTree from 'src/dashboard/util/getFilterScopeFromNodesTree';\nimport getRevertedFilterScope from 'src/dashboard/util/getRevertedFilterScope';\nimport { getChartIdsInFilterBoxScope } from 'src/dashboard/util/activeDashboardFilters';\nimport {\ngetChartIdAndColumnFromFilterKey,\ngetDashboardFilterKey } from\n'src/dashboard/util/getDashboardFilterKey';\nimport { ALL_FILTERS_ROOT } from 'src/dashboard/util/constants';\nimport { dashboardFilterPropShape } from 'src/dashboard/util/propShapes';\nimport FilterScopeTree from './FilterScopeTree';\nimport FilterFieldTree from './FilterFieldTree';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  dashboardFilters: PropTypes.objectOf(dashboardFilterPropShape).isRequired,\n  layout: PropTypes.object.isRequired,\n\n  updateDashboardFiltersScope: PropTypes.func.isRequired,\n  setUnsavedChanges: PropTypes.func.isRequired,\n  onCloseModal: PropTypes.func.isRequired };\n\n\nconst ScopeContainer = styled.div`\n  ${(_ref) => {let { theme } = _ref;return css`\n    display: flex;\n    flex-direction: column;\n    height: 80%;\n    margin-right: ${theme.gridUnit * -6}px;\n    font-size: ${theme.typography.sizes.m}px;\n\n    & .nav.nav-tabs {\n      border: none;\n    }\n\n    & .filter-scope-body {\n      flex: 1;\n      max-height: calc(100% - ${theme.gridUnit * 32}px);\n\n      .filter-field-pane,\n      .filter-scope-pane {\n        overflow-y: auto;\n      }\n    }\n\n    & .warning-message {\n      padding: ${theme.gridUnit * 6}px;\n    }\n  `;}}\n`;\n\nconst ScopeBody = styled.div`\n  ${(_ref2) => {let { theme } = _ref2;return css`\n    &.filter-scope-body {\n      flex: 1;\n      max-height: calc(100% - ${theme.gridUnit * 32}px);\n\n      .filter-field-pane,\n      .filter-scope-pane {\n        overflow-y: auto;\n      }\n    }\n  `;}}\n`;\n\nconst ScopeHeader = styled.div`\n  ${(_ref3) => {let { theme } = _ref3;return css`\n    height: ${theme.gridUnit * 16}px;\n    border-bottom: 1px solid ${theme.colors.grayscale.light2};\n    padding-left: ${theme.gridUnit * 6}px;\n    margin-left: ${theme.gridUnit * -6}px;\n\n    h4 {\n      margin-top: 0;\n    }\n\n    .selected-fields {\n      margin: ${theme.gridUnit * 3}px 0 ${theme.gridUnit * 4}px;\n      visibility: hidden;\n\n      &.multi-edit-mode {\n        visibility: visible;\n      }\n\n      .selected-scopes {\n        padding-left: ${theme.gridUnit}px;\n      }\n    }\n  `;}}\n`;\n\nconst ScopeSelector = styled.div`\n  ${(_ref4) => {let { theme } = _ref4;return css`\n    &.filters-scope-selector {\n      display: flex;\n      flex-direction: row;\n      position: relative;\n      height: 100%;\n\n      a,\n      a:active,\n      a:hover {\n        color: inherit;\n        text-decoration: none;\n      }\n\n      .react-checkbox-tree .rct-icon.rct-icon-expand-all,\n      .react-checkbox-tree .rct-icon.rct-icon-collapse-all {\n        font-family: ${theme.typography.families.sansSerif};\n        font-size: ${theme.typography.sizes.m}px;\n        color: ${theme.colors.primary.base};\n\n        &::before {\n          content: '';\n        }\n\n        &:hover {\n          text-decoration: underline;\n        }\n\n        &:focus {\n          outline: none;\n        }\n      }\n\n      .filter-field-pane {\n        position: relative;\n        width: 40%;\n        padding: ${theme.gridUnit * 4}px;\n        padding-left: 0;\n        border-right: 1px solid ${theme.colors.grayscale.light2};\n\n        .filter-container label {\n          font-weight: ${theme.typography.weights.normal};\n          margin: 0 0 0 ${theme.gridUnit * 4}px;\n          word-break: break-all;\n        }\n\n        .filter-field-item {\n          height: ${theme.gridUnit * 9}px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          padding: 0 ${theme.gridUnit * 6}px;\n          margin-left: ${theme.gridUnit * -6}px;\n\n          &.is-selected {\n            border: 1px solid ${theme.colors.text.label};\n            border-radius: ${theme.borderRadius}px;\n            background-color: ${theme.colors.grayscale.light4};\n            margin-left: ${theme.gridUnit * -6}px;\n          }\n        }\n\n        .react-checkbox-tree {\n          .rct-title .root {\n            font-weight: ${theme.typography.weights.bold};\n          }\n\n          .rct-text {\n            height: ${theme.gridUnit * 10}px;\n          }\n        }\n      }\n\n      .filter-scope-pane {\n        position: relative;\n        flex: 1;\n        padding: ${theme.gridUnit * 4}px;\n        padding-right: ${theme.gridUnit * 6}px;\n      }\n\n      .react-checkbox-tree {\n        flex-direction: column;\n        color: ${theme.colors.grayscale.dark1};\n        font-size: ${theme.typography.sizes.m}px;\n\n        .filter-scope-type {\n          padding: ${theme.gridUnit * 2}px 0;\n          display: flex;\n          align-items: center;\n\n          &.chart {\n            font-weight: ${theme.typography.weights.normal};\n          }\n\n          &.selected-filter {\n            padding-left: ${theme.gridUnit * 7}px;\n            position: relative;\n            color: ${theme.colors.text.label};\n\n            &::before {\n              content: ' ';\n              position: absolute;\n              left: 0;\n              top: 50%;\n              width: ${theme.gridUnit * 4}px;\n              height: ${theme.gridUnit * 4}px;\n              border-radius: ${theme.borderRadius}px;\n              margin-top: ${theme.gridUnit * -2}px;\n              box-shadow: inset 0 0 0 2px ${theme.colors.grayscale.light2};\n              background: ${theme.colors.grayscale.light3};\n            }\n          }\n\n          &.root {\n            font-weight: ${theme.typography.weights.bold};\n          }\n        }\n\n        .rct-checkbox {\n          svg {\n            position: relative;\n            top: 3px;\n            width: ${theme.gridUnit * 4.5}px;\n          }\n        }\n\n        .rct-node-leaf {\n          .rct-bare-label {\n            &::before {\n              padding-left: ${theme.gridUnit}px;\n            }\n          }\n        }\n\n        .rct-options {\n          text-align: left;\n          margin-left: 0;\n          margin-bottom: ${theme.gridUnit * 2}px;\n        }\n\n        .rct-text {\n          margin: 0;\n          display: flex;\n        }\n\n        .rct-title {\n          display: block;\n        }\n\n        // disable style from react-checkbox-trees.css\n        .rct-node-clickable:hover,\n        .rct-node-clickable:focus,\n        label:hover,\n        label:active {\n          background: none !important;\n        }\n      }\n\n      .multi-edit-mode {\n        &.filter-scope-pane {\n          .rct-node.rct-node-leaf .filter-scope-type.filter_box {\n            display: none;\n          }\n        }\n\n        .filter-field-item {\n          padding: 0 ${theme.gridUnit * 4}px 0 ${theme.gridUnit * 12}px;\n          margin-left: ${theme.gridUnit * -12}px;\n\n          &.is-selected {\n            margin-left: ${theme.gridUnit * -13}px;\n          }\n        }\n      }\n\n      .scope-search {\n        position: absolute;\n        right: ${theme.gridUnit * 4}px;\n        top: ${theme.gridUnit * 4}px;\n        border-radius: ${theme.borderRadius}px;\n        border: 1px solid ${theme.colors.grayscale.light2};\n        padding: ${theme.gridUnit}px ${theme.gridUnit * 2}px;\n        font-size: ${theme.typography.sizes.m}px;\n        outline: none;\n\n        &:focus {\n          border: 1px solid ${theme.colors.primary.base};\n        }\n      }\n    }\n  `;}}\n`;\n\nconst ActionsContainer = styled.div`\n  ${(_ref5) => {let { theme } = _ref5;return `\n    height: ${theme.gridUnit * 16}px;\n\n    border-top: ${theme.gridUnit / 4}px solid ${theme.colors.primary.light3};\n    padding: ${theme.gridUnit * 6}px;\n    margin: 0 0 0 ${-theme.gridUnit * 6}px;\n    text-align: right;\n\n    .btn {\n      margin-right: ${theme.gridUnit * 4}px;\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  `;}}\n`;\n\nexport default class FilterScopeSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { dashboardFilters, layout } = props;\n\n    if (Object.keys(dashboardFilters).length > 0) {\n      // display filter fields in tree structure\n      const filterFieldNodes = getFilterFieldNodesTree({\n        dashboardFilters });\n\n      // filterFieldNodes root node is dashboard_root component,\n      // so that we can offer a select/deselect all link\n      const filtersNodes = filterFieldNodes[0].children;\n      this.allfilterFields = [];\n      filtersNodes.forEach((_ref6) => {let { children } = _ref6;\n        children.forEach((child) => {\n          this.allfilterFields.push(child.value);\n        });\n      });\n      this.defaultFilterKey = filtersNodes[0].children[0].value;\n\n      // build FilterScopeTree object for each filterKey\n      const filterScopeMap = Object.values(dashboardFilters).reduce(\n      (map, _ref7) => {let { chartId: filterId, columns } = _ref7;\n        const filterScopeByChartId = Object.keys(columns).reduce(\n        (mapByChartId, columnName) => {\n          const filterKey = getDashboardFilterKey({\n            chartId: filterId,\n            column: columnName });\n\n          const nodes = getFilterScopeNodesTree({\n            components: layout,\n            filterFields: [filterKey],\n            selectedChartId: filterId });\n\n          const expanded = getFilterScopeParentNodes(nodes, 1);\n          // force display filter_box chart as unchecked, but show checkbox as disabled\n          const chartIdsInFilterScope = (\n          getChartIdsInFilterBoxScope({\n            filterScope: dashboardFilters[filterId].scopes[columnName] }) ||\n          []).\n          filter((id) => id !== filterId);\n\n          return {\n            ...mapByChartId,\n            [filterKey]: {\n              // unfiltered nodes\n              nodes,\n              // filtered nodes in display if searchText is not empty\n              nodesFiltered: [...nodes],\n              checked: chartIdsInFilterScope,\n              expanded } };\n\n\n        },\n        {});\n\n\n        return {\n          ...map,\n          ...filterScopeByChartId };\n\n      },\n      {});\n\n\n      // initial state: active defaultFilerKey\n      const { chartId } = getChartIdAndColumnFromFilterKey(\n      this.defaultFilterKey);\n\n      const checkedFilterFields = [];\n      const activeFilterField = this.defaultFilterKey;\n      // expand defaultFilterKey in filter field tree\n      const expandedFilterIds = [ALL_FILTERS_ROOT].concat(chartId);\n\n      const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n        checkedFilterFields,\n        activeFilterField,\n        filterScopeMap,\n        layout });\n\n      this.state = {\n        showSelector: true,\n        activeFilterField,\n        searchText: '',\n        filterScopeMap: {\n          ...filterScopeMap,\n          ...filterScopeTreeEntry },\n\n        filterFieldNodes,\n        checkedFilterFields,\n        expandedFilterIds };\n\n    } else {\n      this.state = {\n        showSelector: false };\n\n    }\n\n    this.filterNodes = this.filterNodes.bind(this);\n    this.onChangeFilterField = this.onChangeFilterField.bind(this);\n    this.onCheckFilterScope = this.onCheckFilterScope.bind(this);\n    this.onExpandFilterScope = this.onExpandFilterScope.bind(this);\n    this.onSearchInputChange = this.onSearchInputChange.bind(this);\n    this.onCheckFilterField = this.onCheckFilterField.bind(this);\n    this.onExpandFilterField = this.onExpandFilterField.bind(this);\n    this.onClose = this.onClose.bind(this);\n    this.onSave = this.onSave.bind(this);\n  }\n\n  onCheckFilterScope(checked) {if (checked === void 0) {checked = [];}\n    const { activeFilterField, filterScopeMap, checkedFilterFields } =\n    this.state;\n\n    const key = getKeyForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields });\n\n    const editingList = activeFilterField ?\n    [activeFilterField] :\n    checkedFilterFields;\n    const updatedEntry = {\n      ...filterScopeMap[key],\n      checked };\n\n\n    const updatedFilterScopeMap = getRevertedFilterScope({\n      checked,\n      filterFields: editingList,\n      filterScopeMap });\n\n\n    this.setState(() => ({\n      filterScopeMap: {\n        ...filterScopeMap,\n        ...updatedFilterScopeMap,\n        [key]: updatedEntry } }));\n\n\n  }\n\n  onExpandFilterScope(expanded) {if (expanded === void 0) {expanded = [];}\n    const { activeFilterField, checkedFilterFields, filterScopeMap } =\n    this.state;\n    const key = getKeyForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields });\n\n    const updatedEntry = {\n      ...filterScopeMap[key],\n      expanded };\n\n    this.setState(() => ({\n      filterScopeMap: {\n        ...filterScopeMap,\n        [key]: updatedEntry } }));\n\n\n  }\n\n  onCheckFilterField(checkedFilterFields) {if (checkedFilterFields === void 0) {checkedFilterFields = [];}\n    const { layout } = this.props;\n    const { filterScopeMap } = this.state;\n    const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n      checkedFilterFields,\n      activeFilterField: null,\n      filterScopeMap,\n      layout });\n\n\n    this.setState(() => ({\n      activeFilterField: null,\n      checkedFilterFields,\n      filterScopeMap: {\n        ...filterScopeMap,\n        ...filterScopeTreeEntry } }));\n\n\n  }\n\n  onExpandFilterField(expandedFilterIds) {if (expandedFilterIds === void 0) {expandedFilterIds = [];}\n    this.setState(() => ({\n      expandedFilterIds }));\n\n  }\n\n  onChangeFilterField(filterField) {var _context;if (filterField === void 0) {filterField = {};}\n    const { layout } = this.props;\n    const nextActiveFilterField = filterField.value;\n    const {\n      activeFilterField: currentActiveFilterField,\n      checkedFilterFields,\n      filterScopeMap } =\n    this.state;\n\n    // we allow single edit and multiple edit in the same view.\n    // if user click on the single filter field,\n    // will show filter scope for the single field.\n    // if user click on the same filter filed again,\n    // will toggle off the single filter field,\n    // and allow multi-edit all checked filter fields.\n    if (nextActiveFilterField === currentActiveFilterField) {\n      const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n        checkedFilterFields,\n        activeFilterField: null,\n        filterScopeMap,\n        layout });\n\n\n      this.setState({\n        activeFilterField: null,\n        filterScopeMap: {\n          ...filterScopeMap,\n          ...filterScopeTreeEntry } });\n\n\n    } else if (_includesInstanceProperty(_context = this.allfilterFields).call(_context, nextActiveFilterField)) {\n      const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n        checkedFilterFields,\n        activeFilterField: nextActiveFilterField,\n        filterScopeMap,\n        layout });\n\n\n      this.setState({\n        activeFilterField: nextActiveFilterField,\n        filterScopeMap: {\n          ...filterScopeMap,\n          ...filterScopeTreeEntry } });\n\n\n    }\n  }\n\n  onSearchInputChange(e) {\n    this.setState({ searchText: e.target.value }, this.filterTree);\n  }\n\n  onClose() {\n    this.props.onCloseModal();\n  }\n\n  onSave() {\n    const { filterScopeMap } = this.state;\n\n    const allFilterFieldScopes = this.allfilterFields.reduce(\n    (map, filterKey) => {\n      const { nodes } = filterScopeMap[filterKey];\n      const checkedChartIds = filterScopeMap[filterKey].checked;\n\n      return {\n        ...map,\n        [filterKey]: getFilterScopeFromNodesTree({\n          filterKey,\n          nodes,\n          checkedChartIds }) };\n\n\n    },\n    {});\n\n\n    this.props.updateDashboardFiltersScope(allFilterFieldScopes);\n    this.props.setUnsavedChanges(true);\n\n    // click Save button will do save and close modal\n    this.props.onCloseModal();\n  }\n\n  filterTree() {\n    // Reset nodes back to unfiltered state\n    if (!this.state.searchText) {\n      this.setState((prevState) => {\n        const { activeFilterField, checkedFilterFields, filterScopeMap } =\n        prevState;\n        const key = getKeyForFilterScopeTree({\n          activeFilterField,\n          checkedFilterFields });\n\n\n        const updatedEntry = {\n          ...filterScopeMap[key],\n          nodesFiltered: filterScopeMap[key].nodes };\n\n        return {\n          filterScopeMap: {\n            ...filterScopeMap,\n            [key]: updatedEntry } };\n\n\n      });\n    } else {\n      const updater = (prevState) => {\n        const { activeFilterField, checkedFilterFields, filterScopeMap } =\n        prevState;\n        const key = getKeyForFilterScopeTree({\n          activeFilterField,\n          checkedFilterFields });\n\n\n        const nodesFiltered = filterScopeMap[key].nodes.reduce(\n        this.filterNodes,\n        []);\n\n        const expanded = getFilterScopeParentNodes([...nodesFiltered]);\n        const updatedEntry = {\n          ...filterScopeMap[key],\n          nodesFiltered,\n          expanded };\n\n\n        return {\n          filterScopeMap: {\n            ...filterScopeMap,\n            [key]: updatedEntry } };\n\n\n      };\n\n      this.setState(updater);\n    }\n  }\n\n  filterNodes(filtered, node) {if (filtered === void 0) {filtered = [];}if (node === void 0) {node = {};}\n    const { searchText } = this.state;\n    const children = (node.children || []).reduce(this.filterNodes, []);\n\n    if (\n    // Node's label matches the search string\n    node.label.toLocaleLowerCase().indexOf(searchText.toLocaleLowerCase()) >\n    -1 ||\n    // Or a children has a matching node\n    children.length)\n    {\n      filtered.push({ ...node, children });\n    }\n\n    return filtered;\n  }\n\n  renderFilterFieldList() {\n    const {\n      activeFilterField,\n      filterFieldNodes,\n      checkedFilterFields,\n      expandedFilterIds } =\n    this.state;\n    return (\n      ___EmotionJSX(FilterFieldTree, {\n        activeKey: activeFilterField,\n        nodes: filterFieldNodes,\n        checked: checkedFilterFields,\n        expanded: expandedFilterIds,\n        onClick: this.onChangeFilterField,\n        onCheck: this.onCheckFilterField,\n        onExpand: this.onExpandFilterField }));\n\n\n  }\n\n  renderFilterScopeTree() {\n    const {\n      filterScopeMap,\n      activeFilterField,\n      checkedFilterFields,\n      searchText } =\n    this.state;\n\n    const key = getKeyForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields });\n\n\n    const selectedChartId = getSelectedChartIdForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields });\n\n    return (\n      ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"input\", {\n        className: \"filter-text scope-search multi-edit-mode\",\n        placeholder: t('Search...'),\n        type: \"text\",\n        value: searchText,\n        onChange: this.onSearchInputChange }),\n\n      ___EmotionJSX(FilterScopeTree, {\n        nodes: filterScopeMap[key].nodesFiltered,\n        checked: filterScopeMap[key].checked,\n        expanded: filterScopeMap[key].expanded,\n        onCheck: this.onCheckFilterScope,\n        onExpand: this.onExpandFilterScope\n        // pass selectedFilterId prop to FilterScopeTree component,\n        // to hide checkbox for selected filter field itself\n        , selectedChartId: selectedChartId })));\n\n\n\n  }\n\n  renderEditingFiltersName() {\n    const { dashboardFilters } = this.props;\n    const { activeFilterField, checkedFilterFields } = this.state;\n    const currentFilterLabels = [].\n    concat(activeFilterField || checkedFilterFields).\n    map((key) => {\n      const { chartId, column } = getChartIdAndColumnFromFilterKey(key);\n      return dashboardFilters[chartId].labels[column] || column;\n    });\n\n    return (\n      ___EmotionJSX(\"div\", { className: \"selected-fields multi-edit-mode\" },\n      currentFilterLabels.length === 0 && t('No filter is selected.'),\n      currentFilterLabels.length === 1 && t('Editing 1 filter:'),\n      currentFilterLabels.length > 1 &&\n      t('Batch editing %d filters:', currentFilterLabels.length),\n      ___EmotionJSX(\"span\", { className: \"selected-scopes\" },\n      currentFilterLabels.join(', '))));\n\n\n\n  }\n\n  render() {\n    const { showSelector } = this.state;\n\n    return (\n      ___EmotionJSX(ScopeContainer, null,\n      ___EmotionJSX(ScopeHeader, null,\n      ___EmotionJSX(\"h4\", null, t('Configure filter scopes')),\n      showSelector && this.renderEditingFiltersName()),\n\n\n      ___EmotionJSX(ScopeBody, { className: \"filter-scope-body\" },\n      !showSelector ?\n      ___EmotionJSX(\"div\", { className: \"warning-message\" },\n      t('There are no filters in this dashboard.')) :\n\n\n      ___EmotionJSX(ScopeSelector, { className: \"filters-scope-selector\" },\n      ___EmotionJSX(\"div\", { className: cx('filter-field-pane multi-edit-mode') },\n      this.renderFilterFieldList()),\n\n      ___EmotionJSX(\"div\", { className: \"filter-scope-pane multi-edit-mode\" },\n      this.renderFilterScopeTree()))),\n\n\n\n\n\n      ___EmotionJSX(ActionsContainer, null,\n      ___EmotionJSX(Button, { buttonSize: \"small\", onClick: this.onClose },\n      t('Close')),\n\n      showSelector &&\n      ___EmotionJSX(Button, {\n        buttonSize: \"small\",\n        buttonStyle: \"primary\",\n        onClick: this.onSave },\n\n      t('Save')))));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nFilterScopeSelector.propTypes = propTypes;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/filterscope/FilterScopeSelector.jsx\");reactHotLoader.register(ScopeContainer, \"ScopeContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/filterscope/FilterScopeSelector.jsx\");reactHotLoader.register(ScopeBody, \"ScopeBody\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/filterscope/FilterScopeSelector.jsx\");reactHotLoader.register(ScopeHeader, \"ScopeHeader\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/filterscope/FilterScopeSelector.jsx\");reactHotLoader.register(ScopeSelector, \"ScopeSelector\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/filterscope/FilterScopeSelector.jsx\");reactHotLoader.register(ActionsContainer, \"ActionsContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/filterscope/FilterScopeSelector.jsx\");reactHotLoader.register(FilterScopeSelector, \"FilterScopeSelector\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/filterscope/FilterScopeSelector.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","PropTypes","cx","Button","css","t","styled","buildFilterScopeTreeEntry","getFilterScopeNodesTree","getFilterFieldNodesTree","getFilterScopeParentNodes","getKeyForFilterScopeTree","getSelectedChartIdForFilterScopeTree","getFilterScopeFromNodesTree","getRevertedFilterScope","getChartIdsInFilterBoxScope","getChartIdAndColumnFromFilterKey","getDashboardFilterKey","ALL_FILTERS_ROOT","dashboardFilterPropShape","FilterScopeTree","FilterFieldTree","propTypes","dashboardFilters","objectOf","isRequired","layout","object","updateDashboardFiltersScope","func","setUnsavedChanges","onCloseModal","ScopeContainer","div","theme","gridUnit","typography","sizes","m","ScopeBody","ScopeHeader","colors","grayscale","light2","ScopeSelector","families","sansSerif","primary","base","weights","normal","text","label","borderRadius","light4","bold","dark1","light3","ActionsContainer","FilterScopeSelector","PureComponent","constructor","props","Object","keys","length","filterFieldNodes","filtersNodes","children","allfilterFields","forEach","child","push","value","defaultFilterKey","filterScopeMap","values","reduce","map","chartId","filterId","columns","filterScopeByChartId","mapByChartId","columnName","filterKey","column","nodes","components","filterFields","selectedChartId","expanded","chartIdsInFilterScope","filterScope","scopes","filter","id","nodesFiltered","checked","checkedFilterFields","activeFilterField","expandedFilterIds","concat","filterScopeTreeEntry","state","showSelector","searchText","filterNodes","bind","onChangeFilterField","onCheckFilterScope","onExpandFilterScope","onSearchInputChange","onCheckFilterField","onExpandFilterField","onClose","onSave","key","editingList","updatedEntry","updatedFilterScopeMap","setState","filterField","nextActiveFilterField","currentActiveFilterField","e","target","filterTree","allFilterFieldScopes","checkedChartIds","prevState","updater","filtered","node","toLocaleLowerCase","indexOf","renderFilterFieldList","renderFilterScopeTree","renderEditingFiltersName","currentFilterLabels","labels","join","render"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/filterscope/FilterScopeSelector.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Button from 'src/components/Button';\nimport { css, t, styled } from '@superset-ui/core';\n\nimport buildFilterScopeTreeEntry from 'src/dashboard/util/buildFilterScopeTreeEntry';\nimport getFilterScopeNodesTree from 'src/dashboard/util/getFilterScopeNodesTree';\nimport getFilterFieldNodesTree from 'src/dashboard/util/getFilterFieldNodesTree';\nimport getFilterScopeParentNodes from 'src/dashboard/util/getFilterScopeParentNodes';\nimport getKeyForFilterScopeTree from 'src/dashboard/util/getKeyForFilterScopeTree';\nimport getSelectedChartIdForFilterScopeTree from 'src/dashboard/util/getSelectedChartIdForFilterScopeTree';\nimport getFilterScopeFromNodesTree from 'src/dashboard/util/getFilterScopeFromNodesTree';\nimport getRevertedFilterScope from 'src/dashboard/util/getRevertedFilterScope';\nimport { getChartIdsInFilterBoxScope } from 'src/dashboard/util/activeDashboardFilters';\nimport {\n  getChartIdAndColumnFromFilterKey,\n  getDashboardFilterKey,\n} from 'src/dashboard/util/getDashboardFilterKey';\nimport { ALL_FILTERS_ROOT } from 'src/dashboard/util/constants';\nimport { dashboardFilterPropShape } from 'src/dashboard/util/propShapes';\nimport FilterScopeTree from './FilterScopeTree';\nimport FilterFieldTree from './FilterFieldTree';\n\nconst propTypes = {\n  dashboardFilters: PropTypes.objectOf(dashboardFilterPropShape).isRequired,\n  layout: PropTypes.object.isRequired,\n\n  updateDashboardFiltersScope: PropTypes.func.isRequired,\n  setUnsavedChanges: PropTypes.func.isRequired,\n  onCloseModal: PropTypes.func.isRequired,\n};\n\nconst ScopeContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: column;\n    height: 80%;\n    margin-right: ${theme.gridUnit * -6}px;\n    font-size: ${theme.typography.sizes.m}px;\n\n    & .nav.nav-tabs {\n      border: none;\n    }\n\n    & .filter-scope-body {\n      flex: 1;\n      max-height: calc(100% - ${theme.gridUnit * 32}px);\n\n      .filter-field-pane,\n      .filter-scope-pane {\n        overflow-y: auto;\n      }\n    }\n\n    & .warning-message {\n      padding: ${theme.gridUnit * 6}px;\n    }\n  `}\n`;\n\nconst ScopeBody = styled.div`\n  ${({ theme }) => css`\n    &.filter-scope-body {\n      flex: 1;\n      max-height: calc(100% - ${theme.gridUnit * 32}px);\n\n      .filter-field-pane,\n      .filter-scope-pane {\n        overflow-y: auto;\n      }\n    }\n  `}\n`;\n\nconst ScopeHeader = styled.div`\n  ${({ theme }) => css`\n    height: ${theme.gridUnit * 16}px;\n    border-bottom: 1px solid ${theme.colors.grayscale.light2};\n    padding-left: ${theme.gridUnit * 6}px;\n    margin-left: ${theme.gridUnit * -6}px;\n\n    h4 {\n      margin-top: 0;\n    }\n\n    .selected-fields {\n      margin: ${theme.gridUnit * 3}px 0 ${theme.gridUnit * 4}px;\n      visibility: hidden;\n\n      &.multi-edit-mode {\n        visibility: visible;\n      }\n\n      .selected-scopes {\n        padding-left: ${theme.gridUnit}px;\n      }\n    }\n  `}\n`;\n\nconst ScopeSelector = styled.div`\n  ${({ theme }) => css`\n    &.filters-scope-selector {\n      display: flex;\n      flex-direction: row;\n      position: relative;\n      height: 100%;\n\n      a,\n      a:active,\n      a:hover {\n        color: inherit;\n        text-decoration: none;\n      }\n\n      .react-checkbox-tree .rct-icon.rct-icon-expand-all,\n      .react-checkbox-tree .rct-icon.rct-icon-collapse-all {\n        font-family: ${theme.typography.families.sansSerif};\n        font-size: ${theme.typography.sizes.m}px;\n        color: ${theme.colors.primary.base};\n\n        &::before {\n          content: '';\n        }\n\n        &:hover {\n          text-decoration: underline;\n        }\n\n        &:focus {\n          outline: none;\n        }\n      }\n\n      .filter-field-pane {\n        position: relative;\n        width: 40%;\n        padding: ${theme.gridUnit * 4}px;\n        padding-left: 0;\n        border-right: 1px solid ${theme.colors.grayscale.light2};\n\n        .filter-container label {\n          font-weight: ${theme.typography.weights.normal};\n          margin: 0 0 0 ${theme.gridUnit * 4}px;\n          word-break: break-all;\n        }\n\n        .filter-field-item {\n          height: ${theme.gridUnit * 9}px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          padding: 0 ${theme.gridUnit * 6}px;\n          margin-left: ${theme.gridUnit * -6}px;\n\n          &.is-selected {\n            border: 1px solid ${theme.colors.text.label};\n            border-radius: ${theme.borderRadius}px;\n            background-color: ${theme.colors.grayscale.light4};\n            margin-left: ${theme.gridUnit * -6}px;\n          }\n        }\n\n        .react-checkbox-tree {\n          .rct-title .root {\n            font-weight: ${theme.typography.weights.bold};\n          }\n\n          .rct-text {\n            height: ${theme.gridUnit * 10}px;\n          }\n        }\n      }\n\n      .filter-scope-pane {\n        position: relative;\n        flex: 1;\n        padding: ${theme.gridUnit * 4}px;\n        padding-right: ${theme.gridUnit * 6}px;\n      }\n\n      .react-checkbox-tree {\n        flex-direction: column;\n        color: ${theme.colors.grayscale.dark1};\n        font-size: ${theme.typography.sizes.m}px;\n\n        .filter-scope-type {\n          padding: ${theme.gridUnit * 2}px 0;\n          display: flex;\n          align-items: center;\n\n          &.chart {\n            font-weight: ${theme.typography.weights.normal};\n          }\n\n          &.selected-filter {\n            padding-left: ${theme.gridUnit * 7}px;\n            position: relative;\n            color: ${theme.colors.text.label};\n\n            &::before {\n              content: ' ';\n              position: absolute;\n              left: 0;\n              top: 50%;\n              width: ${theme.gridUnit * 4}px;\n              height: ${theme.gridUnit * 4}px;\n              border-radius: ${theme.borderRadius}px;\n              margin-top: ${theme.gridUnit * -2}px;\n              box-shadow: inset 0 0 0 2px ${theme.colors.grayscale.light2};\n              background: ${theme.colors.grayscale.light3};\n            }\n          }\n\n          &.root {\n            font-weight: ${theme.typography.weights.bold};\n          }\n        }\n\n        .rct-checkbox {\n          svg {\n            position: relative;\n            top: 3px;\n            width: ${theme.gridUnit * 4.5}px;\n          }\n        }\n\n        .rct-node-leaf {\n          .rct-bare-label {\n            &::before {\n              padding-left: ${theme.gridUnit}px;\n            }\n          }\n        }\n\n        .rct-options {\n          text-align: left;\n          margin-left: 0;\n          margin-bottom: ${theme.gridUnit * 2}px;\n        }\n\n        .rct-text {\n          margin: 0;\n          display: flex;\n        }\n\n        .rct-title {\n          display: block;\n        }\n\n        // disable style from react-checkbox-trees.css\n        .rct-node-clickable:hover,\n        .rct-node-clickable:focus,\n        label:hover,\n        label:active {\n          background: none !important;\n        }\n      }\n\n      .multi-edit-mode {\n        &.filter-scope-pane {\n          .rct-node.rct-node-leaf .filter-scope-type.filter_box {\n            display: none;\n          }\n        }\n\n        .filter-field-item {\n          padding: 0 ${theme.gridUnit * 4}px 0 ${theme.gridUnit * 12}px;\n          margin-left: ${theme.gridUnit * -12}px;\n\n          &.is-selected {\n            margin-left: ${theme.gridUnit * -13}px;\n          }\n        }\n      }\n\n      .scope-search {\n        position: absolute;\n        right: ${theme.gridUnit * 4}px;\n        top: ${theme.gridUnit * 4}px;\n        border-radius: ${theme.borderRadius}px;\n        border: 1px solid ${theme.colors.grayscale.light2};\n        padding: ${theme.gridUnit}px ${theme.gridUnit * 2}px;\n        font-size: ${theme.typography.sizes.m}px;\n        outline: none;\n\n        &:focus {\n          border: 1px solid ${theme.colors.primary.base};\n        }\n      }\n    }\n  `}\n`;\n\nconst ActionsContainer = styled.div`\n  ${({ theme }) => `\n    height: ${theme.gridUnit * 16}px;\n\n    border-top: ${theme.gridUnit / 4}px solid ${theme.colors.primary.light3};\n    padding: ${theme.gridUnit * 6}px;\n    margin: 0 0 0 ${-theme.gridUnit * 6}px;\n    text-align: right;\n\n    .btn {\n      margin-right: ${theme.gridUnit * 4}px;\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  `}\n`;\n\nexport default class FilterScopeSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { dashboardFilters, layout } = props;\n\n    if (Object.keys(dashboardFilters).length > 0) {\n      // display filter fields in tree structure\n      const filterFieldNodes = getFilterFieldNodesTree({\n        dashboardFilters,\n      });\n      // filterFieldNodes root node is dashboard_root component,\n      // so that we can offer a select/deselect all link\n      const filtersNodes = filterFieldNodes[0].children;\n      this.allfilterFields = [];\n      filtersNodes.forEach(({ children }) => {\n        children.forEach(child => {\n          this.allfilterFields.push(child.value);\n        });\n      });\n      this.defaultFilterKey = filtersNodes[0].children[0].value;\n\n      // build FilterScopeTree object for each filterKey\n      const filterScopeMap = Object.values(dashboardFilters).reduce(\n        (map, { chartId: filterId, columns }) => {\n          const filterScopeByChartId = Object.keys(columns).reduce(\n            (mapByChartId, columnName) => {\n              const filterKey = getDashboardFilterKey({\n                chartId: filterId,\n                column: columnName,\n              });\n              const nodes = getFilterScopeNodesTree({\n                components: layout,\n                filterFields: [filterKey],\n                selectedChartId: filterId,\n              });\n              const expanded = getFilterScopeParentNodes(nodes, 1);\n              // force display filter_box chart as unchecked, but show checkbox as disabled\n              const chartIdsInFilterScope = (\n                getChartIdsInFilterBoxScope({\n                  filterScope: dashboardFilters[filterId].scopes[columnName],\n                }) || []\n              ).filter(id => id !== filterId);\n\n              return {\n                ...mapByChartId,\n                [filterKey]: {\n                  // unfiltered nodes\n                  nodes,\n                  // filtered nodes in display if searchText is not empty\n                  nodesFiltered: [...nodes],\n                  checked: chartIdsInFilterScope,\n                  expanded,\n                },\n              };\n            },\n            {},\n          );\n\n          return {\n            ...map,\n            ...filterScopeByChartId,\n          };\n        },\n        {},\n      );\n\n      // initial state: active defaultFilerKey\n      const { chartId } = getChartIdAndColumnFromFilterKey(\n        this.defaultFilterKey,\n      );\n      const checkedFilterFields = [];\n      const activeFilterField = this.defaultFilterKey;\n      // expand defaultFilterKey in filter field tree\n      const expandedFilterIds = [ALL_FILTERS_ROOT].concat(chartId);\n\n      const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n        checkedFilterFields,\n        activeFilterField,\n        filterScopeMap,\n        layout,\n      });\n      this.state = {\n        showSelector: true,\n        activeFilterField,\n        searchText: '',\n        filterScopeMap: {\n          ...filterScopeMap,\n          ...filterScopeTreeEntry,\n        },\n        filterFieldNodes,\n        checkedFilterFields,\n        expandedFilterIds,\n      };\n    } else {\n      this.state = {\n        showSelector: false,\n      };\n    }\n\n    this.filterNodes = this.filterNodes.bind(this);\n    this.onChangeFilterField = this.onChangeFilterField.bind(this);\n    this.onCheckFilterScope = this.onCheckFilterScope.bind(this);\n    this.onExpandFilterScope = this.onExpandFilterScope.bind(this);\n    this.onSearchInputChange = this.onSearchInputChange.bind(this);\n    this.onCheckFilterField = this.onCheckFilterField.bind(this);\n    this.onExpandFilterField = this.onExpandFilterField.bind(this);\n    this.onClose = this.onClose.bind(this);\n    this.onSave = this.onSave.bind(this);\n  }\n\n  onCheckFilterScope(checked = []) {\n    const { activeFilterField, filterScopeMap, checkedFilterFields } =\n      this.state;\n\n    const key = getKeyForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields,\n    });\n    const editingList = activeFilterField\n      ? [activeFilterField]\n      : checkedFilterFields;\n    const updatedEntry = {\n      ...filterScopeMap[key],\n      checked,\n    };\n\n    const updatedFilterScopeMap = getRevertedFilterScope({\n      checked,\n      filterFields: editingList,\n      filterScopeMap,\n    });\n\n    this.setState(() => ({\n      filterScopeMap: {\n        ...filterScopeMap,\n        ...updatedFilterScopeMap,\n        [key]: updatedEntry,\n      },\n    }));\n  }\n\n  onExpandFilterScope(expanded = []) {\n    const { activeFilterField, checkedFilterFields, filterScopeMap } =\n      this.state;\n    const key = getKeyForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields,\n    });\n    const updatedEntry = {\n      ...filterScopeMap[key],\n      expanded,\n    };\n    this.setState(() => ({\n      filterScopeMap: {\n        ...filterScopeMap,\n        [key]: updatedEntry,\n      },\n    }));\n  }\n\n  onCheckFilterField(checkedFilterFields = []) {\n    const { layout } = this.props;\n    const { filterScopeMap } = this.state;\n    const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n      checkedFilterFields,\n      activeFilterField: null,\n      filterScopeMap,\n      layout,\n    });\n\n    this.setState(() => ({\n      activeFilterField: null,\n      checkedFilterFields,\n      filterScopeMap: {\n        ...filterScopeMap,\n        ...filterScopeTreeEntry,\n      },\n    }));\n  }\n\n  onExpandFilterField(expandedFilterIds = []) {\n    this.setState(() => ({\n      expandedFilterIds,\n    }));\n  }\n\n  onChangeFilterField(filterField = {}) {\n    const { layout } = this.props;\n    const nextActiveFilterField = filterField.value;\n    const {\n      activeFilterField: currentActiveFilterField,\n      checkedFilterFields,\n      filterScopeMap,\n    } = this.state;\n\n    // we allow single edit and multiple edit in the same view.\n    // if user click on the single filter field,\n    // will show filter scope for the single field.\n    // if user click on the same filter filed again,\n    // will toggle off the single filter field,\n    // and allow multi-edit all checked filter fields.\n    if (nextActiveFilterField === currentActiveFilterField) {\n      const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n        checkedFilterFields,\n        activeFilterField: null,\n        filterScopeMap,\n        layout,\n      });\n\n      this.setState({\n        activeFilterField: null,\n        filterScopeMap: {\n          ...filterScopeMap,\n          ...filterScopeTreeEntry,\n        },\n      });\n    } else if (this.allfilterFields.includes(nextActiveFilterField)) {\n      const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n        checkedFilterFields,\n        activeFilterField: nextActiveFilterField,\n        filterScopeMap,\n        layout,\n      });\n\n      this.setState({\n        activeFilterField: nextActiveFilterField,\n        filterScopeMap: {\n          ...filterScopeMap,\n          ...filterScopeTreeEntry,\n        },\n      });\n    }\n  }\n\n  onSearchInputChange(e) {\n    this.setState({ searchText: e.target.value }, this.filterTree);\n  }\n\n  onClose() {\n    this.props.onCloseModal();\n  }\n\n  onSave() {\n    const { filterScopeMap } = this.state;\n\n    const allFilterFieldScopes = this.allfilterFields.reduce(\n      (map, filterKey) => {\n        const { nodes } = filterScopeMap[filterKey];\n        const checkedChartIds = filterScopeMap[filterKey].checked;\n\n        return {\n          ...map,\n          [filterKey]: getFilterScopeFromNodesTree({\n            filterKey,\n            nodes,\n            checkedChartIds,\n          }),\n        };\n      },\n      {},\n    );\n\n    this.props.updateDashboardFiltersScope(allFilterFieldScopes);\n    this.props.setUnsavedChanges(true);\n\n    // click Save button will do save and close modal\n    this.props.onCloseModal();\n  }\n\n  filterTree() {\n    // Reset nodes back to unfiltered state\n    if (!this.state.searchText) {\n      this.setState(prevState => {\n        const { activeFilterField, checkedFilterFields, filterScopeMap } =\n          prevState;\n        const key = getKeyForFilterScopeTree({\n          activeFilterField,\n          checkedFilterFields,\n        });\n\n        const updatedEntry = {\n          ...filterScopeMap[key],\n          nodesFiltered: filterScopeMap[key].nodes,\n        };\n        return {\n          filterScopeMap: {\n            ...filterScopeMap,\n            [key]: updatedEntry,\n          },\n        };\n      });\n    } else {\n      const updater = prevState => {\n        const { activeFilterField, checkedFilterFields, filterScopeMap } =\n          prevState;\n        const key = getKeyForFilterScopeTree({\n          activeFilterField,\n          checkedFilterFields,\n        });\n\n        const nodesFiltered = filterScopeMap[key].nodes.reduce(\n          this.filterNodes,\n          [],\n        );\n        const expanded = getFilterScopeParentNodes([...nodesFiltered]);\n        const updatedEntry = {\n          ...filterScopeMap[key],\n          nodesFiltered,\n          expanded,\n        };\n\n        return {\n          filterScopeMap: {\n            ...filterScopeMap,\n            [key]: updatedEntry,\n          },\n        };\n      };\n\n      this.setState(updater);\n    }\n  }\n\n  filterNodes(filtered = [], node = {}) {\n    const { searchText } = this.state;\n    const children = (node.children || []).reduce(this.filterNodes, []);\n\n    if (\n      // Node's label matches the search string\n      node.label.toLocaleLowerCase().indexOf(searchText.toLocaleLowerCase()) >\n        -1 ||\n      // Or a children has a matching node\n      children.length\n    ) {\n      filtered.push({ ...node, children });\n    }\n\n    return filtered;\n  }\n\n  renderFilterFieldList() {\n    const {\n      activeFilterField,\n      filterFieldNodes,\n      checkedFilterFields,\n      expandedFilterIds,\n    } = this.state;\n    return (\n      <FilterFieldTree\n        activeKey={activeFilterField}\n        nodes={filterFieldNodes}\n        checked={checkedFilterFields}\n        expanded={expandedFilterIds}\n        onClick={this.onChangeFilterField}\n        onCheck={this.onCheckFilterField}\n        onExpand={this.onExpandFilterField}\n      />\n    );\n  }\n\n  renderFilterScopeTree() {\n    const {\n      filterScopeMap,\n      activeFilterField,\n      checkedFilterFields,\n      searchText,\n    } = this.state;\n\n    const key = getKeyForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields,\n    });\n\n    const selectedChartId = getSelectedChartIdForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields,\n    });\n    return (\n      <>\n        <input\n          className=\"filter-text scope-search multi-edit-mode\"\n          placeholder={t('Search...')}\n          type=\"text\"\n          value={searchText}\n          onChange={this.onSearchInputChange}\n        />\n        <FilterScopeTree\n          nodes={filterScopeMap[key].nodesFiltered}\n          checked={filterScopeMap[key].checked}\n          expanded={filterScopeMap[key].expanded}\n          onCheck={this.onCheckFilterScope}\n          onExpand={this.onExpandFilterScope}\n          // pass selectedFilterId prop to FilterScopeTree component,\n          // to hide checkbox for selected filter field itself\n          selectedChartId={selectedChartId}\n        />\n      </>\n    );\n  }\n\n  renderEditingFiltersName() {\n    const { dashboardFilters } = this.props;\n    const { activeFilterField, checkedFilterFields } = this.state;\n    const currentFilterLabels = []\n      .concat(activeFilterField || checkedFilterFields)\n      .map(key => {\n        const { chartId, column } = getChartIdAndColumnFromFilterKey(key);\n        return dashboardFilters[chartId].labels[column] || column;\n      });\n\n    return (\n      <div className=\"selected-fields multi-edit-mode\">\n        {currentFilterLabels.length === 0 && t('No filter is selected.')}\n        {currentFilterLabels.length === 1 && t('Editing 1 filter:')}\n        {currentFilterLabels.length > 1 &&\n          t('Batch editing %d filters:', currentFilterLabels.length)}\n        <span className=\"selected-scopes\">\n          {currentFilterLabels.join(', ')}\n        </span>\n      </div>\n    );\n  }\n\n  render() {\n    const { showSelector } = this.state;\n\n    return (\n      <ScopeContainer>\n        <ScopeHeader>\n          <h4>{t('Configure filter scopes')}</h4>\n          {showSelector && this.renderEditingFiltersName()}\n        </ScopeHeader>\n\n        <ScopeBody className=\"filter-scope-body\">\n          {!showSelector ? (\n            <div className=\"warning-message\">\n              {t('There are no filters in this dashboard.')}\n            </div>\n          ) : (\n            <ScopeSelector className=\"filters-scope-selector\">\n              <div className={cx('filter-field-pane multi-edit-mode')}>\n                {this.renderFilterFieldList()}\n              </div>\n              <div className=\"filter-scope-pane multi-edit-mode\">\n                {this.renderFilterScopeTree()}\n              </div>\n            </ScopeSelector>\n          )}\n        </ScopeBody>\n\n        <ActionsContainer>\n          <Button buttonSize=\"small\" onClick={this.onClose}>\n            {t('Close')}\n          </Button>\n          {showSelector && (\n            <Button\n              buttonSize=\"small\"\n              buttonStyle=\"primary\"\n              onClick={this.onSave}\n            >\n              {t('Save')}\n            </Button>\n          )}\n        </ActionsContainer>\n      </ScopeContainer>\n    );\n  }\n}\n\nFilterScopeSelector.propTypes = propTypes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}