{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { useFilterSets } from '../state';\n// eslint-disable-next-line import/prefer-default-export\nexport const useFilterSetNameDuplicated = (filterSetName, ignoreName) => {\n  const filterSets = useFilterSets();\n  const filterSetFilterValues = Object.values(filterSets);\n  const isFilterSetNameDuplicated = useMemo(() => !!filterSetFilterValues.find((_ref) => {let { name } = _ref;return name === filterSetName;}), [filterSetFilterValues, filterSetName]);\n  if (ignoreName === filterSetName) {\n    return false;\n  }\n  return isFilterSetNameDuplicated;\n};__signature__(useFilterSetNameDuplicated, \"useFilterSets{filterSets}\\nuseMemo{isFilterSetNameDuplicated}\", () => [useFilterSets]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useFilterSetNameDuplicated, \"useFilterSetNameDuplicated\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/state.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,aAAT,QAA8B,UAA9B;AAEA;AACA,OAAO,MAAMC,0BAA0B,GAAG,CACxCC,aADwC,EAExCC,UAFwC,KAGtC;EACF,MAAMC,UAAU,GAAGJ,aAAa,EAAhC;EACA,MAAMK,qBAAqB,GAAGC,MAAM,CAACC,MAAP,CAAcH,UAAd,CAA9B;EACA,MAAMI,yBAAyB,GAAGT,OAAO,CACvC,MAAM,CAAC,CAACM,qBAAqB,CAACI,IAAtB,CAA2B,eAAC,EAAEC,IAAF,EAAD,eAAcA,IAAI,KAAKR,aAAvB,EAA3B,CAD+B,EAEvC,CAACG,qBAAD,EAAwBH,aAAxB,CAFuC,CAAzC;EAIA,IAAIC,UAAU,KAAKD,aAAnB,EAAkC;IAChC,OAAO,KAAP;EACD;EACD,OAAOM,yBAAP;AACD,CAdM,C,cAAMP,0B,0EAIQD,a,oLAJRC,0B","names":["useMemo","useFilterSets","useFilterSetNameDuplicated","filterSetName","ignoreName","filterSets","filterSetFilterValues","Object","values","isFilterSetNameDuplicated","find","name"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/state.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { useFilterSets } from '../state';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const useFilterSetNameDuplicated = (\n  filterSetName: string,\n  ignoreName?: string,\n) => {\n  const filterSets = useFilterSets();\n  const filterSetFilterValues = Object.values(filterSets);\n  const isFilterSetNameDuplicated = useMemo(\n    () => !!filterSetFilterValues.find(({ name }) => name === filterSetName),\n    [filterSetFilterValues, filterSetName],\n  );\n  if (ignoreName === filterSetName) {\n    return false;\n  }\n  return isFilterSetNameDuplicated;\n};\n"]},"metadata":{},"sourceType":"module"}