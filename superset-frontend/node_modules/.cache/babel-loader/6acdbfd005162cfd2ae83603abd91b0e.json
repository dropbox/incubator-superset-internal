{"ast":null,"code":"function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}\n\n/* eslint-disable no-dupe-class-members */\nimport { scaleOrdinal } from 'd3-scale';\nimport ExtensibleFunction from '../models/ExtensibleFunction';\nimport stringifyAndTrim from '../utils/stringifyAndTrim'; // Use type augmentation to correct the fact that\n// an instance of CategoricalScale is also a function\n\nclass ScaleCategoricalColor extends ExtensibleFunction {\n  /**\n   * Constructor\n   * @param {*} colors an array of colors\n   * @param {*} parentmanualColors optional parameter that comes from parent\n   * (usually CategoricalColorNamespace) and supersede this.manualColors\n   */\n  constructor(stateOrColors, parentmanualColors) {\n    super((value) => this.getColor(value));\n\n    _defineProperty(this, \"state\", void 0);\n\n    _defineProperty(this, \"parentManualColors\", void 0);\n\n    if (Array.isArray(stateOrColors)) {\n      this.state = {\n        manualColors: {},\n        scale: scaleOrdinal(stateOrColors) };\n\n    } else {\n      this.state = stateOrColors;\n    }\n\n    this.parentManualColors = parentmanualColors;\n  }\n\n  get colors() {\n    return this.state.scale.range();\n  }\n\n  getColor(value) {\n    const cleanedValue = stringifyAndTrim(value);\n    const parentColor = this.parentManualColors && this.parentManualColors[cleanedValue];\n\n    if (parentColor) {\n      return parentColor;\n    }\n\n    const manualColor = this.state.manualColors[cleanedValue];\n\n    if (manualColor) {\n      return manualColor;\n    }\n\n    return this.state.scale(cleanedValue);\n  }\n  /**\n   * Enforce specific color for given value\n   * @param {*} value value\n   * @param {*} manualColor manualColor\n   */\n\n\n  setColor(value, manualColor) {\n    this.state.manualColors[stringifyAndTrim(value)] = manualColor;\n    return this;\n  }\n  /**\n   * Get a mapping of data values to colors\n   * @returns an object where the key is the data value and the value is the hex color code\n   */\n\n\n  getColorMap() {\n    const colorMap = {};\n    this.state.scale.domain().forEach((value) => {\n      colorMap[String(value)] = this.state.scale(value);\n    });\n    return { ...colorMap,\n      ...this.state.manualColors,\n      ...this.parentManualColors };\n\n  }\n  /**\n   * Returns an exact copy of this scale. Changes to this scale will not affect the returned scale, and vice versa.\n   */\n\n\n  copy() {\n    const copy = new ScaleCategoricalColor({\n      manualColors: { ...this.state.manualColors },\n\n      scale: this.state.scale.copy() },\n    this.parentManualColors);\n    return copy;\n  }\n  /**\n   * Returns the scale's current domain.\n   */\n\n\n  domain(newDomain) {\n    if (typeof newDomain === 'undefined') {\n      return this.state.scale.domain();\n    }\n\n    this.state.scale.domain(newDomain);\n    return this;\n  }\n  /**\n   * Returns the scale's current range.\n   */\n\n\n  range(newRange) {\n    if (typeof newRange === 'undefined') {\n      return this.state.scale.range();\n    }\n\n    this.state.scale.range(newRange);\n    return this;\n  }\n  /**\n   * Returns the current unknown value, which defaults to \"implicit\".\n   */\n\n\n  unknown(value) {\n    if (typeof value === 'undefined') {\n      return this.state.scale.unknown();\n    }\n\n    this.state.scale.unknown(value);\n    return this;\n  }}\n\n\n\nexport default ScaleCategoricalColor;","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","scaleOrdinal","ExtensibleFunction","stringifyAndTrim","ScaleCategoricalColor","constructor","stateOrColors","parentmanualColors","getColor","Array","isArray","state","manualColors","scale","parentManualColors","colors","range","cleanedValue","parentColor","manualColor","setColor","getColorMap","colorMap","domain","forEach","String","copy","newDomain","newRange","unknown"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/node_modules/@encodable/color/esm/scale/ScaleCategoricalColor.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-dupe-class-members */\nimport { scaleOrdinal } from 'd3-scale';\nimport ExtensibleFunction from '../models/ExtensibleFunction';\nimport stringifyAndTrim from '../utils/stringifyAndTrim'; // Use type augmentation to correct the fact that\n// an instance of CategoricalScale is also a function\n\nclass ScaleCategoricalColor extends ExtensibleFunction {\n  /**\n   * Constructor\n   * @param {*} colors an array of colors\n   * @param {*} parentmanualColors optional parameter that comes from parent\n   * (usually CategoricalColorNamespace) and supersede this.manualColors\n   */\n  constructor(stateOrColors, parentmanualColors) {\n    super(value => this.getColor(value));\n\n    _defineProperty(this, \"state\", void 0);\n\n    _defineProperty(this, \"parentManualColors\", void 0);\n\n    if (Array.isArray(stateOrColors)) {\n      this.state = {\n        manualColors: {},\n        scale: scaleOrdinal(stateOrColors)\n      };\n    } else {\n      this.state = stateOrColors;\n    }\n\n    this.parentManualColors = parentmanualColors;\n  }\n\n  get colors() {\n    return this.state.scale.range();\n  }\n\n  getColor(value) {\n    const cleanedValue = stringifyAndTrim(value);\n    const parentColor = this.parentManualColors && this.parentManualColors[cleanedValue];\n\n    if (parentColor) {\n      return parentColor;\n    }\n\n    const manualColor = this.state.manualColors[cleanedValue];\n\n    if (manualColor) {\n      return manualColor;\n    }\n\n    return this.state.scale(cleanedValue);\n  }\n  /**\n   * Enforce specific color for given value\n   * @param {*} value value\n   * @param {*} manualColor manualColor\n   */\n\n\n  setColor(value, manualColor) {\n    this.state.manualColors[stringifyAndTrim(value)] = manualColor;\n    return this;\n  }\n  /**\n   * Get a mapping of data values to colors\n   * @returns an object where the key is the data value and the value is the hex color code\n   */\n\n\n  getColorMap() {\n    const colorMap = {};\n    this.state.scale.domain().forEach(value => {\n      colorMap[String(value)] = this.state.scale(value);\n    });\n    return { ...colorMap,\n      ...this.state.manualColors,\n      ...this.parentManualColors\n    };\n  }\n  /**\n   * Returns an exact copy of this scale. Changes to this scale will not affect the returned scale, and vice versa.\n   */\n\n\n  copy() {\n    const copy = new ScaleCategoricalColor({\n      manualColors: { ...this.state.manualColors\n      },\n      scale: this.state.scale.copy()\n    }, this.parentManualColors);\n    return copy;\n  }\n  /**\n   * Returns the scale's current domain.\n   */\n\n\n  domain(newDomain) {\n    if (typeof newDomain === 'undefined') {\n      return this.state.scale.domain();\n    }\n\n    this.state.scale.domain(newDomain);\n    return this;\n  }\n  /**\n   * Returns the scale's current range.\n   */\n\n\n  range(newRange) {\n    if (typeof newRange === 'undefined') {\n      return this.state.scale.range();\n    }\n\n    this.state.scale.range(newRange);\n    return this;\n  }\n  /**\n   * Returns the current unknown value, which defaults to \"implicit\".\n   */\n\n\n  unknown(value) {\n    if (typeof value === 'undefined') {\n      return this.state.scale.unknown();\n    }\n\n    this.state.scale.unknown(value);\n    return this;\n  }\n\n}\n\nexport default ScaleCategoricalColor;"],"mappings":"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"},"metadata":{},"sourceType":"module"}