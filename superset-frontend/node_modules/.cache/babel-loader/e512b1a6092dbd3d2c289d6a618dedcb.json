{"ast":null,"code":"export default {};","map":{"version":3,"mappings":"AAwHA,eAAe,EAAf","names":[],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-table/src/types.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  NumberFormatter,\n  TimeFormatter,\n  TimeGranularity,\n  QueryFormMetric,\n  ChartProps,\n  DataRecord,\n  DataRecordValue,\n  DataRecordFilters,\n  GenericDataType,\n  QueryMode,\n  ChartDataResponseResult,\n  QueryFormData,\n  SetDataMaskHook,\n  ContextMenuFilters,\n} from '@superset-ui/core';\nimport { ColorFormatters, ColumnConfig } from '@superset-ui/chart-controls';\n\nexport type CustomFormatter = (value: DataRecordValue) => string;\n\nexport interface DataColumnMeta {\n  // `key` is what is called `label` in the input props\n  key: string;\n  // `label` is verbose column name used for rendering\n  label: string;\n  dataType: GenericDataType;\n  formatter?: TimeFormatter | NumberFormatter | CustomFormatter;\n  isMetric?: boolean;\n  isPercentMetric?: boolean;\n  isNumeric?: boolean;\n  config?: ColumnConfig;\n}\n\nexport interface TableChartData {\n  records: DataRecord[];\n  columns: string[];\n}\n\nexport type TableChartFormData = QueryFormData & {\n  align_pn?: boolean;\n  color_pn?: boolean;\n  include_time?: boolean;\n  include_search?: boolean;\n  query_mode?: QueryMode;\n  page_length?: string | number | null; // null means auto-paginate\n  metrics?: QueryFormMetric[] | null;\n  percent_metrics?: QueryFormMetric[] | null;\n  timeseries_limit_metric?: QueryFormMetric[] | QueryFormMetric | null;\n  groupby?: QueryFormMetric[] | null;\n  all_columns?: QueryFormMetric[] | null;\n  order_desc?: boolean;\n  show_cell_bars?: boolean;\n  table_timestamp_format?: string;\n  time_grain_sqla?: TimeGranularity;\n  column_config?: Record<string, ColumnConfig>;\n  allow_rearrange_columns?: boolean;\n};\n\nexport interface TableChartProps extends ChartProps {\n  ownCurrentState?: {\n    pageSize?: number;\n    currentPage?: number;\n  };\n  rawFormData: TableChartFormData;\n  queriesData: ChartDataResponseResult[];\n}\n\nexport interface TableChartTransformedProps<D extends DataRecord = DataRecord> {\n  timeGrain?: TimeGranularity;\n  height: number;\n  width: number;\n  rowCount?: number;\n  serverPagination: boolean;\n  serverPaginationData: { pageSize?: number; currentPage?: number };\n  setDataMask: SetDataMaskHook;\n  isRawRecords?: boolean;\n  data: D[];\n  totals?: D;\n  columns: DataColumnMeta[];\n  metrics?: (keyof D)[];\n  percentMetrics?: (keyof D)[];\n  pageSize?: number;\n  showCellBars?: boolean;\n  sortDesc?: boolean;\n  includeSearch?: boolean;\n  alignPositiveNegative?: boolean;\n  colorPositiveNegative?: boolean;\n  tableTimestampFormat?: string;\n  // These are dashboard filters, don't be confused with in-chart search filter\n  // enabled by `includeSearch`\n  filters?: DataRecordFilters;\n  emitCrossFilters?: boolean;\n  onChangeFilter?: ChartProps['hooks']['onAddFilter'];\n  columnColorFormatters?: ColorFormatters;\n  allowRearrangeColumns?: boolean;\n  onContextMenu?: (\n    clientX: number,\n    clientY: number,\n    filters?: ContextMenuFilters,\n  ) => void;\n}\n\nexport default {};\n"]},"metadata":{},"sourceType":"module"}