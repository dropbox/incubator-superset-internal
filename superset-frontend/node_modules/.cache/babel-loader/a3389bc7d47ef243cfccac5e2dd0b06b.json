{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { D3_TIME_FORMAT_DOCS, getStandardizedControls, sections, sharedControls } from '@superset-ui/chart-controls';\nimport { DEFAULT_FORM_DATA, TIME_SERIES_DESCRIPTION_TEXT } from '../../constants';\nimport { legendSection, richTooltipSection, seriesOrderSection, showValueSection } from '../../../controls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst { logAxis, markerEnabled, markerSize, minorSplitLine, rowLimit, truncateYAxis, yAxisBounds, zoomable, xAxisLabelRotation } = DEFAULT_FORM_DATA;\nconst config = {\n  controlPanelSections: [\n  sections.genericTime,\n  sections.echartsTimeSeriesQueryWithXAxisSort,\n  sections.advancedAnalyticsControls,\n  sections.annotationsAndLayersControls,\n  sections.forecastIntervalControls,\n  sections.titleControls,\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [\n    ...seriesOrderSection,\n    ['color_scheme'],\n    ...showValueSection,\n    [\n    {\n      name: 'markerEnabled',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Marker'),\n        renderTrigger: true,\n        default: markerEnabled,\n        description: t('Draw a marker on data points. Only applicable for line types.') } }],\n\n\n\n    [\n    {\n      name: 'markerSize',\n      config: {\n        type: 'SliderControl',\n        label: t('Marker Size'),\n        renderTrigger: true,\n        min: 0,\n        max: 100,\n        default: markerSize,\n        description: t('Size of marker. Also applies to forecast observations.'),\n        visibility: (_ref) => {var _controls$markerEnabl;let { controls } = _ref;return Boolean(controls == null ? void 0 : (_controls$markerEnabl = controls.markerEnabled) == null ? void 0 : _controls$markerEnabl.value);} } }],\n\n\n\n    [\n    {\n      name: 'zoomable',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Data Zoom'),\n        default: zoomable,\n        renderTrigger: true,\n        description: t('Enable data zooming controls') } }],\n\n\n\n    ...legendSection,\n    [___EmotionJSX(\"div\", { className: \"section-header\" }, t('X Axis'))],\n    [\n    {\n      name: 'x_axis_time_format',\n      config: {\n        ...sharedControls.x_axis_time_format,\n        default: 'smart_date',\n        description: `${D3_TIME_FORMAT_DOCS}. ${TIME_SERIES_DESCRIPTION_TEXT}` } }],\n\n\n\n    [\n    {\n      name: 'xAxisLabelRotation',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        clearable: false,\n        label: t('Rotate x axis label'),\n        choices: [\n        [0, '0°'],\n        [45, '45°']],\n\n        default: xAxisLabelRotation,\n        renderTrigger: true,\n        description: t('Input field supports custom rotation. e.g. 30 for 30°') } }],\n\n\n\n    // eslint-disable-next-line react/jsx-key\n    ...richTooltipSection,\n    // eslint-disable-next-line react/jsx-key\n    [___EmotionJSX(\"div\", { className: \"section-header\" }, t('Y Axis'))],\n    ['y_axis_format'],\n    [\n    {\n      name: 'logAxis',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Logarithmic y-axis'),\n        renderTrigger: true,\n        default: logAxis,\n        description: t('Logarithmic y-axis') } }],\n\n\n\n    [\n    {\n      name: 'minorSplitLine',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Minor Split Line'),\n        renderTrigger: true,\n        default: minorSplitLine,\n        description: t('Draw split lines for minor y-axis ticks') } }],\n\n\n\n    [\n    {\n      name: 'truncateYAxis',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Truncate Y Axis'),\n        default: truncateYAxis,\n        renderTrigger: true,\n        description: t('Truncate Y Axis. Can be overridden by specifying a min or max bound.') } }],\n\n\n\n    [\n    {\n      name: 'y_axis_bounds',\n      config: {\n        type: 'BoundsControl',\n        label: t('Y Axis Bounds'),\n        renderTrigger: true,\n        default: yAxisBounds,\n        description: t('Bounds for the Y-axis. When left empty, the bounds are ' +\n        'dynamically defined based on the min/max of the data. Note that ' +\n        \"this feature will only expand the axis range. It won't \" +\n        \"narrow the data's extent.\"),\n        visibility: (_ref2) => {var _controls$truncateYAx;let { controls } = _ref2;return Boolean(controls == null ? void 0 : (_controls$truncateYAx = controls.truncateYAxis) == null ? void 0 : _controls$truncateYAx.value);} } }]] }],\n\n\n\n\n\n\n  controlOverrides: {\n    row_limit: {\n      default: rowLimit } },\n\n\n  formDataOverrides: (formData) => ({\n    ...formData,\n    metrics: getStandardizedControls().popAllMetrics(),\n    groupby: getStandardizedControls().popAllColumns() }) };\n\n\nexport default config;","map":{"version":3,"mappings":"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","names":["React","t","D3_TIME_FORMAT_DOCS","getStandardizedControls","sections","sharedControls","DEFAULT_FORM_DATA","TIME_SERIES_DESCRIPTION_TEXT","legendSection","richTooltipSection","seriesOrderSection","showValueSection","logAxis","markerEnabled","markerSize","minorSplitLine","rowLimit","truncateYAxis","yAxisBounds","zoomable","xAxisLabelRotation","config","controlPanelSections","genericTime","echartsTimeSeriesQueryWithXAxisSort","advancedAnalyticsControls","annotationsAndLayersControls","forecastIntervalControls","titleControls","label","expanded","controlSetRows","name","type","renderTrigger","default","description","min","max","visibility","controls","Boolean","value","x_axis_time_format","freeForm","clearable","choices","controlOverrides","row_limit","formDataOverrides","formData","metrics","popAllMetrics","groupby","popAllColumns"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Timeseries/Regular/Scatter/controlPanel.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  ControlPanelsContainerProps,\n  D3_TIME_FORMAT_DOCS,\n  getStandardizedControls,\n  sections,\n  sharedControls,\n} from '@superset-ui/chart-controls';\n\nimport {\n  DEFAULT_FORM_DATA,\n  TIME_SERIES_DESCRIPTION_TEXT,\n} from '../../constants';\nimport {\n  legendSection,\n  richTooltipSection,\n  seriesOrderSection,\n  showValueSection,\n} from '../../../controls';\n\nconst {\n  logAxis,\n  markerEnabled,\n  markerSize,\n  minorSplitLine,\n  rowLimit,\n  truncateYAxis,\n  yAxisBounds,\n  zoomable,\n  xAxisLabelRotation,\n} = DEFAULT_FORM_DATA;\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.genericTime,\n    sections.echartsTimeSeriesQueryWithXAxisSort,\n    sections.advancedAnalyticsControls,\n    sections.annotationsAndLayersControls,\n    sections.forecastIntervalControls,\n    sections.titleControls,\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        ...seriesOrderSection,\n        ['color_scheme'],\n        ...showValueSection,\n        [\n          {\n            name: 'markerEnabled',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Marker'),\n              renderTrigger: true,\n              default: markerEnabled,\n              description: t(\n                'Draw a marker on data points. Only applicable for line types.',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'markerSize',\n            config: {\n              type: 'SliderControl',\n              label: t('Marker Size'),\n              renderTrigger: true,\n              min: 0,\n              max: 100,\n              default: markerSize,\n              description: t(\n                'Size of marker. Also applies to forecast observations.',\n              ),\n              visibility: ({ controls }: ControlPanelsContainerProps) =>\n                Boolean(controls?.markerEnabled?.value),\n            },\n          },\n        ],\n        [\n          {\n            name: 'zoomable',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Data Zoom'),\n              default: zoomable,\n              renderTrigger: true,\n              description: t('Enable data zooming controls'),\n            },\n          },\n        ],\n        ...legendSection,\n        [<div className=\"section-header\">{t('X Axis')}</div>],\n\n        [\n          {\n            name: 'x_axis_time_format',\n            config: {\n              ...sharedControls.x_axis_time_format,\n              default: 'smart_date',\n              description: `${D3_TIME_FORMAT_DOCS}. ${TIME_SERIES_DESCRIPTION_TEXT}`,\n            },\n          },\n        ],\n        [\n          {\n            name: 'xAxisLabelRotation',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              clearable: false,\n              label: t('Rotate x axis label'),\n              choices: [\n                [0, '0°'],\n                [45, '45°'],\n              ],\n              default: xAxisLabelRotation,\n              renderTrigger: true,\n              description: t(\n                'Input field supports custom rotation. e.g. 30 for 30°',\n              ),\n            },\n          },\n        ],\n        // eslint-disable-next-line react/jsx-key\n        ...richTooltipSection,\n        // eslint-disable-next-line react/jsx-key\n        [<div className=\"section-header\">{t('Y Axis')}</div>],\n        ['y_axis_format'],\n        [\n          {\n            name: 'logAxis',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Logarithmic y-axis'),\n              renderTrigger: true,\n              default: logAxis,\n              description: t('Logarithmic y-axis'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'minorSplitLine',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Minor Split Line'),\n              renderTrigger: true,\n              default: minorSplitLine,\n              description: t('Draw split lines for minor y-axis ticks'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'truncateYAxis',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Truncate Y Axis'),\n              default: truncateYAxis,\n              renderTrigger: true,\n              description: t(\n                'Truncate Y Axis. Can be overridden by specifying a min or max bound.',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'y_axis_bounds',\n            config: {\n              type: 'BoundsControl',\n              label: t('Y Axis Bounds'),\n              renderTrigger: true,\n              default: yAxisBounds,\n              description: t(\n                'Bounds for the Y-axis. When left empty, the bounds are ' +\n                  'dynamically defined based on the min/max of the data. Note that ' +\n                  \"this feature will only expand the axis range. It won't \" +\n                  \"narrow the data's extent.\",\n              ),\n              visibility: ({ controls }: ControlPanelsContainerProps) =>\n                Boolean(controls?.truncateYAxis?.value),\n            },\n          },\n        ],\n      ],\n    },\n  ],\n  controlOverrides: {\n    row_limit: {\n      default: rowLimit,\n    },\n  },\n  formDataOverrides: formData => ({\n    ...formData,\n    metrics: getStandardizedControls().popAllMetrics(),\n    groupby: getStandardizedControls().popAllColumns(),\n  }),\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}