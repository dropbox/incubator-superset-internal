{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\nexports.formatDate = formatDate;\n\nvar _utils = require('../util/utils');\n\n/**\n * A formatDate helper to format date using moment js with optional locale designation.\n *\n * @example\n *      {{formatDate 'MM/DD/YYYY' date 'es'}}\n *\n * @param {string} formatString Based on moment.js.\n * @param {Date} date\n * @param {object} localeString Language or language-country locale string (or array of strings) available in https://github.com/moment/moment/tree/develop/locale .\n * @returns {string}\n */\nfunction formatDate(formatString, date, localeString) {\n  var moment = global.moment;\n\n  if (!moment) {\n    moment = require('moment/min/moment-with-locales');\n  }\n\n  formatString = (0, _utils.isString)(formatString) ? formatString : '';\n\n  if ((0, _utils.isString)(localeString) || (0, _utils.isArray)(localeString)) {\n    var localeMoment = moment(date || new Date());\n\n    localeMoment.locale(localeString);\n\n    return localeMoment.format(formatString);\n  }\n\n  // use global moment and format with default locale\n  return moment(date || new Date()).format(formatString);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","formatDate","_utils","require","formatString","date","localeString","moment","global","isString","isArray","localeMoment","Date","locale","format"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/plugin-chart-handlebars/node_modules/just-handlebars-helpers/lib/helpers/datetime.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatDate = formatDate;\n\nvar _utils = require('../util/utils');\n\n/**\n * A formatDate helper to format date using moment js with optional locale designation.\n *\n * @example\n *      {{formatDate 'MM/DD/YYYY' date 'es'}}\n *\n * @param {string} formatString Based on moment.js.\n * @param {Date} date\n * @param {object} localeString Language or language-country locale string (or array of strings) available in https://github.com/moment/moment/tree/develop/locale .\n * @returns {string}\n */\nfunction formatDate(formatString, date, localeString) {\n  var moment = global.moment;\n\n  if (!moment) {\n    moment = require('moment/min/moment-with-locales');\n  }\n\n  formatString = (0, _utils.isString)(formatString) ? formatString : '';\n\n  if ((0, _utils.isString)(localeString) || (0, _utils.isArray)(localeString)) {\n    var localeMoment = moment(date || new Date());\n\n    localeMoment.locale(localeString);\n\n    return localeMoment.format(formatString);\n  }\n\n  // use global moment and format with default locale\n  return moment(date || new Date()).format(formatString);\n}"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE,IADoC,EAA7C;;AAGAD,OAAO,CAACE,UAAR,GAAqBA,UAArB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,eAAD,CAApB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,UAAT,CAAoBG,YAApB,EAAkCC,IAAlC,EAAwCC,YAAxC,EAAsD;EACpD,IAAIC,MAAM,GAAGC,MAAM,CAACD,MAApB;;EAEA,IAAI,CAACA,MAAL,EAAa;IACXA,MAAM,GAAGJ,OAAO,CAAC,gCAAD,CAAhB;EACD;;EAEDC,YAAY,GAAG,CAAC,GAAGF,MAAM,CAACO,QAAX,EAAqBL,YAArB,IAAqCA,YAArC,GAAoD,EAAnE;;EAEA,IAAI,CAAC,GAAGF,MAAM,CAACO,QAAX,EAAqBH,YAArB,KAAsC,CAAC,GAAGJ,MAAM,CAACQ,OAAX,EAAoBJ,YAApB,CAA1C,EAA6E;IAC3E,IAAIK,YAAY,GAAGJ,MAAM,CAACF,IAAI,IAAI,IAAIO,IAAJ,EAAT,CAAzB;;IAEAD,YAAY,CAACE,MAAb,CAAoBP,YAApB;;IAEA,OAAOK,YAAY,CAACG,MAAb,CAAoBV,YAApB,CAAP;EACD;;EAED;EACA,OAAOG,MAAM,CAACF,IAAI,IAAI,IAAIO,IAAJ,EAAT,CAAN,CAA2BE,MAA3B,CAAkCV,YAAlC,CAAP;AACD"},"metadata":{},"sourceType":"script"}