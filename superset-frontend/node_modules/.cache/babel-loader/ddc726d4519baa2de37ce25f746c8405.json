{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\nt,\nlogging,\nSupersetClient,\nwithTheme,\nensureIsArray } from\n'@superset-ui/core';\n\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport adhocMetricType from 'src/explore/components/controls/MetricControl/adhocMetricType';\nimport savedMetricType from 'src/explore/components/controls/MetricControl/savedMetricType';\nimport AdhocMetric from 'src/explore/components/controls/MetricControl/AdhocMetric';\nimport {\nOperators,\nOPERATOR_ENUM_TO_OPERATOR_TYPE } from\n'src/explore/constants';\nimport FilterDefinitionOption from 'src/explore/components/controls/MetricControl/FilterDefinitionOption';\nimport {\nAddControlLabel,\nAddIconButton,\nHeaderContainer,\nLabelsContainer } from\n'src/explore/components/controls/OptionControls';\nimport Icons from 'src/components/Icons';\nimport Modal from 'src/components/Modal';\nimport AdhocFilterPopoverTrigger from 'src/explore/components/controls/FilterControl/AdhocFilterPopoverTrigger';\nimport AdhocFilterOption from 'src/explore/components/controls/FilterControl/AdhocFilterOption';\nimport AdhocFilter from 'src/explore/components/controls/FilterControl/AdhocFilter';\nimport adhocFilterType from 'src/explore/components/controls/FilterControl/adhocFilterType';\nimport columnType from 'src/explore/components/controls/FilterControl/columnType';\nimport { CLAUSES, EXPRESSION_TYPES } from '../types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst { warning } = Modal;\n\nconst selectedMetricType = PropTypes.oneOfType([\nPropTypes.string,\nadhocMetricType]);\n\n\nconst propTypes = {\n  label: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  name: PropTypes.string,\n  sections: PropTypes.arrayOf(PropTypes.string),\n  operators: PropTypes.arrayOf(PropTypes.string),\n  onChange: PropTypes.func,\n  value: PropTypes.arrayOf(adhocFilterType),\n  datasource: PropTypes.object,\n  columns: PropTypes.arrayOf(columnType),\n  savedMetrics: PropTypes.arrayOf(savedMetricType),\n  selectedMetrics: PropTypes.oneOfType([\n  selectedMetricType,\n  PropTypes.arrayOf(selectedMetricType)]),\n\n  isLoading: PropTypes.bool,\n  canDelete: PropTypes.func };\n\n\nconst defaultProps = {\n  name: '',\n  onChange: () => {},\n  columns: [],\n  savedMetrics: [],\n  selectedMetrics: [] };\n\n\nfunction isDictionaryForAdhocFilter(value) {\n  return value && !(value instanceof AdhocFilter) && value.expressionType;\n}\n\nclass AdhocFilterControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.optionsForSelect = this.optionsForSelect.bind(this);\n    this.onRemoveFilter = this.onRemoveFilter.bind(this);\n    this.onNewFilter = this.onNewFilter.bind(this);\n    this.onFilterEdit = this.onFilterEdit.bind(this);\n    this.moveLabel = this.moveLabel.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.mapOption = this.mapOption.bind(this);\n    this.getMetricExpression = this.getMetricExpression.bind(this);\n    this.removeFilter = this.removeFilter.bind(this);\n\n    const filters = (this.props.value || []).map((filter) =>\n    isDictionaryForAdhocFilter(filter) ? new AdhocFilter(filter) : filter);\n\n\n    this.optionRenderer = (option) => ___EmotionJSX(FilterDefinitionOption, { option: option });\n    this.valueRenderer = (adhocFilter, index) =>\n    ___EmotionJSX(AdhocFilterOption, {\n      key: index,\n      index: index,\n      adhocFilter: adhocFilter,\n      onFilterEdit: this.onFilterEdit,\n      options: this.state.options,\n      sections: this.props.sections,\n      operators: this.props.operators,\n      datasource: this.props.datasource,\n      onRemoveFilter: (e) => {\n        e.stopPropagation();\n        this.onRemoveFilter(index);\n      },\n      onMoveLabel: this.moveLabel,\n      onDropLabel: () => this.props.onChange(this.state.values),\n      partitionColumn: this.state.partitionColumn });\n\n\n    this.state = {\n      values: filters,\n      options: this.optionsForSelect(this.props),\n      partitionColumn: null };\n\n  }\n\n  componentDidMount() {\n    const { datasource } = this.props;\n    if (datasource && datasource.type === 'table') {var _datasource$database;\n      const dbId = (_datasource$database = datasource.database) == null ? void 0 : _datasource$database.id;\n      const {\n        datasource_name: name,\n        schema,\n        is_sqllab_view: isSqllabView } =\n      datasource;\n\n      if (!isSqllabView && dbId && name && schema) {\n        SupersetClient.get({\n          endpoint: `/api/v1/database/${dbId}/table_extra/${name}/${schema}/` }).\n\n        then((_ref) => {let { json } = _ref;\n          if (json && json.partitions) {\n            const { partitions } = json;\n            // for now only show latest_partition option\n            // when table datasource has only 1 partition key.\n            if (\n            partitions &&\n            partitions.cols &&\n            Object.keys(partitions.cols).length === 1)\n            {\n              this.setState({ partitionColumn: partitions.cols[0] });\n            }\n          }\n        }).\n        catch((error) => {\n          logging.error('fetch extra_table_metadata:', error.statusText);\n        });\n      }\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.columns !== nextProps.columns) {\n      this.setState({ options: this.optionsForSelect(nextProps) });\n    }\n    if (this.props.value !== nextProps.value) {\n      this.setState({\n        values: (nextProps.value || []).map((filter) =>\n        isDictionaryForAdhocFilter(filter) ? new AdhocFilter(filter) : filter) });\n\n\n    }\n  }\n\n  removeFilter(index) {\n    const valuesCopy = [...this.state.values];\n    valuesCopy.splice(index, 1);\n    this.setState((prevState) => ({\n      ...prevState,\n      values: valuesCopy }));\n\n    this.props.onChange(valuesCopy);\n  }\n\n  onRemoveFilter(index) {\n    const { canDelete } = this.props;\n    const { values } = this.state;\n    const result = canDelete == null ? void 0 : canDelete(values[index], values);\n    if (typeof result === 'string') {\n      warning({ title: t('Warning'), content: result });\n      return;\n    }\n    this.removeFilter(index);\n  }\n\n  onNewFilter(newFilter) {\n    const mappedOption = this.mapOption(newFilter);\n    if (mappedOption) {\n      this.setState(\n      (prevState) => ({\n        ...prevState,\n        values: [...prevState.values, mappedOption] }),\n\n      () => {\n        this.props.onChange(this.state.values);\n      });\n\n    }\n  }\n\n  onFilterEdit(changedFilter) {\n    this.props.onChange(\n    this.state.values.map((value) => {\n      if (value.filterOptionName === changedFilter.filterOptionName) {\n        return changedFilter;\n      }\n      return value;\n    }));\n\n  }\n\n  onChange(opts) {\n    const options = (opts || []).\n    map((option) => this.mapOption(option)).\n    filter((option) => option);\n    this.props.onChange(options);\n  }\n\n  getMetricExpression(savedMetricName) {\n    return this.props.savedMetrics.find(\n    (savedMetric) => savedMetric.metric_name === savedMetricName).\n    expression;\n  }\n\n  moveLabel(dragIndex, hoverIndex) {\n    const { values } = this.state;\n\n    const newValues = [...values];\n    [newValues[hoverIndex], newValues[dragIndex]] = [\n    newValues[dragIndex],\n    newValues[hoverIndex]];\n\n    this.setState({ values: newValues });\n  }\n\n  mapOption(option) {\n    // already a AdhocFilter, skip\n    if (option instanceof AdhocFilter) {\n      return option;\n    }\n    // via datasource saved metric\n    if (option.saved_metric_name) {\n      return new AdhocFilter({\n        expressionType: EXPRESSION_TYPES.SQL,\n        subject: this.getMetricExpression(option.saved_metric_name),\n        operator:\n        OPERATOR_ENUM_TO_OPERATOR_TYPE[Operators.GREATER_THAN].operation,\n        comparator: 0,\n        clause: CLAUSES.HAVING });\n\n    }\n    // has a custom label, meaning it's custom column\n    if (option.label) {\n      return new AdhocFilter({\n        expressionType: EXPRESSION_TYPES.SQL,\n        subject: new AdhocMetric(option).translateToSql(),\n        operator:\n        OPERATOR_ENUM_TO_OPERATOR_TYPE[Operators.GREATER_THAN].operation,\n        comparator: 0,\n        clause: CLAUSES.HAVING });\n\n    }\n    // add a new filter item\n    if (option.column_name) {\n      return new AdhocFilter({\n        expressionType: EXPRESSION_TYPES.SIMPLE,\n        subject: option.column_name,\n        operator: OPERATOR_ENUM_TO_OPERATOR_TYPE[Operators.EQUALS].operation,\n        comparator: '',\n        clause: CLAUSES.WHERE,\n        isNew: true });\n\n    }\n    return null;\n  }\n\n  optionsForSelect(props) {\n    const options = [\n    ...props.columns,\n    ...ensureIsArray(props.selectedMetrics).map(\n    (metric) =>\n    metric && (\n    typeof metric === 'string' ?\n    { saved_metric_name: metric } :\n    new AdhocMetric(metric)))].\n\n    filter((option) => option);\n\n    return options.\n    reduce((results, option) => {\n      if (option.saved_metric_name) {\n        results.push({\n          ...option,\n          filterOptionName: option.saved_metric_name });\n\n      } else if (option.column_name) {\n        results.push({\n          ...option,\n          filterOptionName: `_col_${option.column_name}` });\n\n      } else if (option instanceof AdhocMetric) {\n        results.push({\n          ...option,\n          filterOptionName: `_adhocmetric_${option.label}` });\n\n      }\n      return results;\n    }, []).\n    sort((a, b) =>\n    (a.saved_metric_name || a.column_name || a.label).localeCompare(\n    b.saved_metric_name || b.column_name || b.label));\n\n\n  }\n\n  addNewFilterPopoverTrigger(trigger) {\n    return (\n      ___EmotionJSX(AdhocFilterPopoverTrigger, {\n        operators: this.props.operators,\n        sections: this.props.sections,\n        adhocFilter: new AdhocFilter({}),\n        datasource: this.props.datasource,\n        options: this.state.options,\n        onFilterEdit: this.onNewFilter,\n        partitionColumn: this.state.partitionColumn },\n\n      trigger));\n\n\n  }\n\n  render() {\n    const { theme } = this.props;\n    return (\n      ___EmotionJSX(\"div\", { className: \"metrics-select\" },\n      ___EmotionJSX(HeaderContainer, null,\n      ___EmotionJSX(ControlHeader, this.props),\n      this.addNewFilterPopoverTrigger(\n      ___EmotionJSX(AddIconButton, null,\n      ___EmotionJSX(Icons.PlusLarge, {\n        iconSize: \"s\",\n        iconColor: theme.colors.grayscale.light5 })))),\n\n\n\n\n      ___EmotionJSX(LabelsContainer, null,\n      this.state.values.length > 0 ?\n      this.state.values.map((value, index) =>\n      this.valueRenderer(value, index)) :\n\n      this.addNewFilterPopoverTrigger(\n      ___EmotionJSX(AddControlLabel, null,\n      ___EmotionJSX(Icons.PlusSmall, { iconColor: theme.colors.grayscale.light1 }),\n      t('Add filter'))))));\n\n\n\n\n\n  }}\n\n\nAdhocFilterControl.propTypes = propTypes;\nAdhocFilterControl.defaultProps = defaultProps;\n\nexport default withTheme(AdhocFilterControl);","map":{"version":3,"names":["React","PropTypes","t","logging","SupersetClient","withTheme","ensureIsArray","ControlHeader","adhocMetricType","savedMetricType","AdhocMetric","Operators","OPERATOR_ENUM_TO_OPERATOR_TYPE","FilterDefinitionOption","AddControlLabel","AddIconButton","HeaderContainer","LabelsContainer","Icons","Modal","AdhocFilterPopoverTrigger","AdhocFilterOption","AdhocFilter","adhocFilterType","columnType","CLAUSES","EXPRESSION_TYPES","warning","selectedMetricType","oneOfType","string","propTypes","label","object","name","sections","arrayOf","operators","onChange","func","value","datasource","columns","savedMetrics","selectedMetrics","isLoading","bool","canDelete","defaultProps","isDictionaryForAdhocFilter","expressionType","AdhocFilterControl","Component","constructor","props","optionsForSelect","bind","onRemoveFilter","onNewFilter","onFilterEdit","moveLabel","mapOption","getMetricExpression","removeFilter","filters","map","filter","optionRenderer","option","valueRenderer","adhocFilter","index","state","options","e","stopPropagation","values","partitionColumn","componentDidMount","type","dbId","database","id","datasource_name","schema","is_sqllab_view","isSqllabView","get","endpoint","then","json","partitions","cols","Object","keys","length","setState","catch","error","statusText","UNSAFE_componentWillReceiveProps","nextProps","valuesCopy","splice","prevState","result","title","content","newFilter","mappedOption","changedFilter","filterOptionName","opts","savedMetricName","find","savedMetric","metric_name","expression","dragIndex","hoverIndex","newValues","saved_metric_name","SQL","subject","operator","GREATER_THAN","operation","comparator","clause","HAVING","translateToSql","column_name","SIMPLE","EQUALS","WHERE","isNew","metric","reduce","results","push","sort","a","b","localeCompare","addNewFilterPopoverTrigger","trigger","render","theme","colors","grayscale","light5","light1"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilterControl/index.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  t,\n  logging,\n  SupersetClient,\n  withTheme,\n  ensureIsArray,\n} from '@superset-ui/core';\n\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport adhocMetricType from 'src/explore/components/controls/MetricControl/adhocMetricType';\nimport savedMetricType from 'src/explore/components/controls/MetricControl/savedMetricType';\nimport AdhocMetric from 'src/explore/components/controls/MetricControl/AdhocMetric';\nimport {\n  Operators,\n  OPERATOR_ENUM_TO_OPERATOR_TYPE,\n} from 'src/explore/constants';\nimport FilterDefinitionOption from 'src/explore/components/controls/MetricControl/FilterDefinitionOption';\nimport {\n  AddControlLabel,\n  AddIconButton,\n  HeaderContainer,\n  LabelsContainer,\n} from 'src/explore/components/controls/OptionControls';\nimport Icons from 'src/components/Icons';\nimport Modal from 'src/components/Modal';\nimport AdhocFilterPopoverTrigger from 'src/explore/components/controls/FilterControl/AdhocFilterPopoverTrigger';\nimport AdhocFilterOption from 'src/explore/components/controls/FilterControl/AdhocFilterOption';\nimport AdhocFilter from 'src/explore/components/controls/FilterControl/AdhocFilter';\nimport adhocFilterType from 'src/explore/components/controls/FilterControl/adhocFilterType';\nimport columnType from 'src/explore/components/controls/FilterControl/columnType';\nimport { CLAUSES, EXPRESSION_TYPES } from '../types';\n\nconst { warning } = Modal;\n\nconst selectedMetricType = PropTypes.oneOfType([\n  PropTypes.string,\n  adhocMetricType,\n]);\n\nconst propTypes = {\n  label: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  name: PropTypes.string,\n  sections: PropTypes.arrayOf(PropTypes.string),\n  operators: PropTypes.arrayOf(PropTypes.string),\n  onChange: PropTypes.func,\n  value: PropTypes.arrayOf(adhocFilterType),\n  datasource: PropTypes.object,\n  columns: PropTypes.arrayOf(columnType),\n  savedMetrics: PropTypes.arrayOf(savedMetricType),\n  selectedMetrics: PropTypes.oneOfType([\n    selectedMetricType,\n    PropTypes.arrayOf(selectedMetricType),\n  ]),\n  isLoading: PropTypes.bool,\n  canDelete: PropTypes.func,\n};\n\nconst defaultProps = {\n  name: '',\n  onChange: () => {},\n  columns: [],\n  savedMetrics: [],\n  selectedMetrics: [],\n};\n\nfunction isDictionaryForAdhocFilter(value) {\n  return value && !(value instanceof AdhocFilter) && value.expressionType;\n}\n\nclass AdhocFilterControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.optionsForSelect = this.optionsForSelect.bind(this);\n    this.onRemoveFilter = this.onRemoveFilter.bind(this);\n    this.onNewFilter = this.onNewFilter.bind(this);\n    this.onFilterEdit = this.onFilterEdit.bind(this);\n    this.moveLabel = this.moveLabel.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.mapOption = this.mapOption.bind(this);\n    this.getMetricExpression = this.getMetricExpression.bind(this);\n    this.removeFilter = this.removeFilter.bind(this);\n\n    const filters = (this.props.value || []).map(filter =>\n      isDictionaryForAdhocFilter(filter) ? new AdhocFilter(filter) : filter,\n    );\n\n    this.optionRenderer = option => <FilterDefinitionOption option={option} />;\n    this.valueRenderer = (adhocFilter, index) => (\n      <AdhocFilterOption\n        key={index}\n        index={index}\n        adhocFilter={adhocFilter}\n        onFilterEdit={this.onFilterEdit}\n        options={this.state.options}\n        sections={this.props.sections}\n        operators={this.props.operators}\n        datasource={this.props.datasource}\n        onRemoveFilter={e => {\n          e.stopPropagation();\n          this.onRemoveFilter(index);\n        }}\n        onMoveLabel={this.moveLabel}\n        onDropLabel={() => this.props.onChange(this.state.values)}\n        partitionColumn={this.state.partitionColumn}\n      />\n    );\n    this.state = {\n      values: filters,\n      options: this.optionsForSelect(this.props),\n      partitionColumn: null,\n    };\n  }\n\n  componentDidMount() {\n    const { datasource } = this.props;\n    if (datasource && datasource.type === 'table') {\n      const dbId = datasource.database?.id;\n      const {\n        datasource_name: name,\n        schema,\n        is_sqllab_view: isSqllabView,\n      } = datasource;\n\n      if (!isSqllabView && dbId && name && schema) {\n        SupersetClient.get({\n          endpoint: `/api/v1/database/${dbId}/table_extra/${name}/${schema}/`,\n        })\n          .then(({ json }) => {\n            if (json && json.partitions) {\n              const { partitions } = json;\n              // for now only show latest_partition option\n              // when table datasource has only 1 partition key.\n              if (\n                partitions &&\n                partitions.cols &&\n                Object.keys(partitions.cols).length === 1\n              ) {\n                this.setState({ partitionColumn: partitions.cols[0] });\n              }\n            }\n          })\n          .catch(error => {\n            logging.error('fetch extra_table_metadata:', error.statusText);\n          });\n      }\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.columns !== nextProps.columns) {\n      this.setState({ options: this.optionsForSelect(nextProps) });\n    }\n    if (this.props.value !== nextProps.value) {\n      this.setState({\n        values: (nextProps.value || []).map(filter =>\n          isDictionaryForAdhocFilter(filter) ? new AdhocFilter(filter) : filter,\n        ),\n      });\n    }\n  }\n\n  removeFilter(index) {\n    const valuesCopy = [...this.state.values];\n    valuesCopy.splice(index, 1);\n    this.setState(prevState => ({\n      ...prevState,\n      values: valuesCopy,\n    }));\n    this.props.onChange(valuesCopy);\n  }\n\n  onRemoveFilter(index) {\n    const { canDelete } = this.props;\n    const { values } = this.state;\n    const result = canDelete?.(values[index], values);\n    if (typeof result === 'string') {\n      warning({ title: t('Warning'), content: result });\n      return;\n    }\n    this.removeFilter(index);\n  }\n\n  onNewFilter(newFilter) {\n    const mappedOption = this.mapOption(newFilter);\n    if (mappedOption) {\n      this.setState(\n        prevState => ({\n          ...prevState,\n          values: [...prevState.values, mappedOption],\n        }),\n        () => {\n          this.props.onChange(this.state.values);\n        },\n      );\n    }\n  }\n\n  onFilterEdit(changedFilter) {\n    this.props.onChange(\n      this.state.values.map(value => {\n        if (value.filterOptionName === changedFilter.filterOptionName) {\n          return changedFilter;\n        }\n        return value;\n      }),\n    );\n  }\n\n  onChange(opts) {\n    const options = (opts || [])\n      .map(option => this.mapOption(option))\n      .filter(option => option);\n    this.props.onChange(options);\n  }\n\n  getMetricExpression(savedMetricName) {\n    return this.props.savedMetrics.find(\n      savedMetric => savedMetric.metric_name === savedMetricName,\n    ).expression;\n  }\n\n  moveLabel(dragIndex, hoverIndex) {\n    const { values } = this.state;\n\n    const newValues = [...values];\n    [newValues[hoverIndex], newValues[dragIndex]] = [\n      newValues[dragIndex],\n      newValues[hoverIndex],\n    ];\n    this.setState({ values: newValues });\n  }\n\n  mapOption(option) {\n    // already a AdhocFilter, skip\n    if (option instanceof AdhocFilter) {\n      return option;\n    }\n    // via datasource saved metric\n    if (option.saved_metric_name) {\n      return new AdhocFilter({\n        expressionType: EXPRESSION_TYPES.SQL,\n        subject: this.getMetricExpression(option.saved_metric_name),\n        operator:\n          OPERATOR_ENUM_TO_OPERATOR_TYPE[Operators.GREATER_THAN].operation,\n        comparator: 0,\n        clause: CLAUSES.HAVING,\n      });\n    }\n    // has a custom label, meaning it's custom column\n    if (option.label) {\n      return new AdhocFilter({\n        expressionType: EXPRESSION_TYPES.SQL,\n        subject: new AdhocMetric(option).translateToSql(),\n        operator:\n          OPERATOR_ENUM_TO_OPERATOR_TYPE[Operators.GREATER_THAN].operation,\n        comparator: 0,\n        clause: CLAUSES.HAVING,\n      });\n    }\n    // add a new filter item\n    if (option.column_name) {\n      return new AdhocFilter({\n        expressionType: EXPRESSION_TYPES.SIMPLE,\n        subject: option.column_name,\n        operator: OPERATOR_ENUM_TO_OPERATOR_TYPE[Operators.EQUALS].operation,\n        comparator: '',\n        clause: CLAUSES.WHERE,\n        isNew: true,\n      });\n    }\n    return null;\n  }\n\n  optionsForSelect(props) {\n    const options = [\n      ...props.columns,\n      ...ensureIsArray(props.selectedMetrics).map(\n        metric =>\n          metric &&\n          (typeof metric === 'string'\n            ? { saved_metric_name: metric }\n            : new AdhocMetric(metric)),\n      ),\n    ].filter(option => option);\n\n    return options\n      .reduce((results, option) => {\n        if (option.saved_metric_name) {\n          results.push({\n            ...option,\n            filterOptionName: option.saved_metric_name,\n          });\n        } else if (option.column_name) {\n          results.push({\n            ...option,\n            filterOptionName: `_col_${option.column_name}`,\n          });\n        } else if (option instanceof AdhocMetric) {\n          results.push({\n            ...option,\n            filterOptionName: `_adhocmetric_${option.label}`,\n          });\n        }\n        return results;\n      }, [])\n      .sort((a, b) =>\n        (a.saved_metric_name || a.column_name || a.label).localeCompare(\n          b.saved_metric_name || b.column_name || b.label,\n        ),\n      );\n  }\n\n  addNewFilterPopoverTrigger(trigger) {\n    return (\n      <AdhocFilterPopoverTrigger\n        operators={this.props.operators}\n        sections={this.props.sections}\n        adhocFilter={new AdhocFilter({})}\n        datasource={this.props.datasource}\n        options={this.state.options}\n        onFilterEdit={this.onNewFilter}\n        partitionColumn={this.state.partitionColumn}\n      >\n        {trigger}\n      </AdhocFilterPopoverTrigger>\n    );\n  }\n\n  render() {\n    const { theme } = this.props;\n    return (\n      <div className=\"metrics-select\" data-test=\"adhoc-filter-control\">\n        <HeaderContainer>\n          <ControlHeader {...this.props} />\n          {this.addNewFilterPopoverTrigger(\n            <AddIconButton data-test=\"add-filter-button\">\n              <Icons.PlusLarge\n                iconSize=\"s\"\n                iconColor={theme.colors.grayscale.light5}\n              />\n            </AddIconButton>,\n          )}\n        </HeaderContainer>\n        <LabelsContainer>\n          {this.state.values.length > 0\n            ? this.state.values.map((value, index) =>\n                this.valueRenderer(value, index),\n              )\n            : this.addNewFilterPopoverTrigger(\n                <AddControlLabel>\n                  <Icons.PlusSmall iconColor={theme.colors.grayscale.light1} />\n                  {t('Add filter')}\n                </AddControlLabel>,\n              )}\n        </LabelsContainer>\n      </div>\n    );\n  }\n}\n\nAdhocFilterControl.propTypes = propTypes;\nAdhocFilterControl.defaultProps = defaultProps;\n\nexport default withTheme(AdhocFilterControl);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}