{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Behavior, SuperChart, AppSection, t } from '@superset-ui/core';\nimport Loading from 'src/components/Loading';\nimport { INPUT_HEIGHT, INPUT_WIDTH, TIME_FILTER_INPUT_WIDTH } from './constants';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DefaultValue = (_ref) => {var _formFilter$defaultDa, _formFilter$defaultDa2, _formFilter$defaultDa3;let { hasDefaultValue, filterId, hasDataset, form, setDataMask, formData, enableNoResults } = _ref;\n  const formFilter = (form.getFieldValue('filters') || {})[filterId];\n  const queriesData = formFilter == null ? void 0 : formFilter.defaultValueQueriesData;\n  const loading = hasDataset && queriesData === null;\n  const value = formFilter == null ? void 0 : (_formFilter$defaultDa = formFilter.defaultDataMask) == null ? void 0 : (_formFilter$defaultDa2 = _formFilter$defaultDa.filterState) == null ? void 0 : _formFilter$defaultDa2.value;\n  const isMissingRequiredValue = hasDefaultValue && (value === null || value === undefined);\n  return loading ? ___EmotionJSX(Loading, { position: \"inline-centered\" }) : ___EmotionJSX(SuperChart, { height: INPUT_HEIGHT, width: (formFilter == null ? void 0 : formFilter.filterType) === 'filter_time' ?\n    TIME_FILTER_INPUT_WIDTH :\n    INPUT_WIDTH, appSection: AppSection.FILTER_CONFIG_MODAL, behaviors: [Behavior.NATIVE_FILTER], formData: formData\n    // For charts that don't have datasource we need workaround for empty placeholder\n    , queriesData: hasDataset ? formFilter == null ? void 0 : formFilter.defaultValueQueriesData : [{ data: [{}] }], chartType: formFilter == null ? void 0 : formFilter.filterType, hooks: { setDataMask }, enableNoResults: enableNoResults, filterState: {\n      ...(formFilter == null ? void 0 : (_formFilter$defaultDa3 = formFilter.defaultDataMask) == null ? void 0 : _formFilter$defaultDa3.filterState),\n      validateMessage: isMissingRequiredValue && t('Value is required'),\n      validateStatus: isMissingRequiredValue && 'error' } });\n\n};\nexport default DefaultValue;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SACEC,QADF,EAGEC,UAHF,EAIEC,UAJF,EAKEC,CALF,QAMO,mBANP;AAQA,OAAOC,OAAP,MAAoB,wBAApB;AAGA,SACEC,YADF,EAEEC,WAFF,EAGEC,uBAHF,QAIO,aAJP,C;AAgBA,MAAMC,YAAY,GAA0B,UAQvC,+EARwC,EAC3CC,eAD2C,EAE3CC,QAF2C,EAG3CC,UAH2C,EAI3CC,IAJ2C,EAK3CC,WAL2C,EAM3CC,QAN2C,EAO3CC,eAP2C,EAQxC;EACH,MAAMC,UAAU,GAAG,CAACJ,IAAI,CAACK,aAAL,CAAmB,SAAnB,KAAiC,EAAlC,EAAsCP,QAAtC,CAAnB;EACA,MAAMQ,WAAW,GAAGF,UAAH,oBAAGA,UAAU,CAAEG,uBAAhC;EACA,MAAMC,OAAO,GAAGT,UAAU,IAAIO,WAAW,KAAK,IAA9C;EACA,MAAMG,KAAK,GAAGL,UAAH,6CAAGA,UAAU,CAAEM,eAAf,+CAAG,sBAA6BC,WAAhC,qBAAG,uBAA0CF,KAAxD;EACA,MAAMG,sBAAsB,GAC1Bf,eAAe,KAAKY,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKI,SAAjC,CADjB;EAEA,OAAOL,OAAO,GACZ,cAAC,OAAD,IAAS,QAAQ,EAAC,iBAAlB,GADY,GAGZ,cAAC,UAAD,IACE,MAAM,EAAEf,YADV,EAEE,KAAK,EACH,WAAU,QAAV,sBAAU,CAAEqB,UAAZ,MAA2B,aAA3B;IACInB,uBADJ;IAEID,WALR,EAOE,UAAU,EAAEJ,UAAU,CAACyB,mBAPzB,EAQE,SAAS,EAAE,CAAC3B,QAAQ,CAAC4B,aAAV,CARb,EASE,QAAQ,EAAEd;IACV;IAVF,EAWE,WAAW,EACTH,UAAU,GAAGK,UAAH,oBAAGA,UAAU,CAAEG,uBAAf,GAAyC,CAAC,EAAEU,IAAI,EAAE,CAAC,EAAD,CAAR,EAAD,CAZvD,EAcE,SAAS,EAAEb,UAAF,oBAAEA,UAAU,CAAEU,UAdzB,EAeE,KAAK,EAAE,EAAEb,WAAF,EAfT,EAgBE,eAAe,EAAEE,eAhBnB,EAiBE,WAAW,EAAE;MACX,IAAGC,UAAH,8CAAGA,UAAU,CAAEM,eAAf,qBAAG,uBAA6BC,WAAhC,CADW;MAEXO,eAAe,EAAEN,sBAAsB,IAAIrB,CAAC,CAAC,mBAAD,CAFjC;MAGX4B,cAAc,EAAEP,sBAAsB,IAAI,OAH/B,EAjBf,GAHF;;AA2BD,CA1CD;AA4CA,eAAehB,YAAf","names":["React","Behavior","SuperChart","AppSection","t","Loading","INPUT_HEIGHT","INPUT_WIDTH","TIME_FILTER_INPUT_WIDTH","DefaultValue","hasDefaultValue","filterId","hasDataset","form","setDataMask","formData","enableNoResults","formFilter","getFieldValue","queriesData","defaultValueQueriesData","loading","value","defaultDataMask","filterState","isMissingRequiredValue","undefined","filterType","FILTER_CONFIG_MODAL","NATIVE_FILTER","data","validateMessage","validateStatus"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/DefaultValue.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FC } from 'react';\nimport {\n  Behavior,\n  SetDataMaskHook,\n  SuperChart,\n  AppSection,\n  t,\n} from '@superset-ui/core';\nimport { FormInstance } from 'src/components';\nimport Loading from 'src/components/Loading';\nimport { NativeFiltersForm } from '../types';\nimport { getFormData } from '../../utils';\nimport {\n  INPUT_HEIGHT,\n  INPUT_WIDTH,\n  TIME_FILTER_INPUT_WIDTH,\n} from './constants';\n\ntype DefaultValueProps = {\n  hasDefaultValue: boolean;\n  filterId: string;\n  setDataMask: SetDataMaskHook;\n  hasDataset: boolean;\n  form: FormInstance<NativeFiltersForm>;\n  formData: ReturnType<typeof getFormData>;\n  enableNoResults: boolean;\n};\n\nconst DefaultValue: FC<DefaultValueProps> = ({\n  hasDefaultValue,\n  filterId,\n  hasDataset,\n  form,\n  setDataMask,\n  formData,\n  enableNoResults,\n}) => {\n  const formFilter = (form.getFieldValue('filters') || {})[filterId];\n  const queriesData = formFilter?.defaultValueQueriesData;\n  const loading = hasDataset && queriesData === null;\n  const value = formFilter?.defaultDataMask?.filterState?.value;\n  const isMissingRequiredValue =\n    hasDefaultValue && (value === null || value === undefined);\n  return loading ? (\n    <Loading position=\"inline-centered\" />\n  ) : (\n    <SuperChart\n      height={INPUT_HEIGHT}\n      width={\n        formFilter?.filterType === 'filter_time'\n          ? TIME_FILTER_INPUT_WIDTH\n          : INPUT_WIDTH\n      }\n      appSection={AppSection.FILTER_CONFIG_MODAL}\n      behaviors={[Behavior.NATIVE_FILTER]}\n      formData={formData}\n      // For charts that don't have datasource we need workaround for empty placeholder\n      queriesData={\n        hasDataset ? formFilter?.defaultValueQueriesData : [{ data: [{}] }]\n      }\n      chartType={formFilter?.filterType}\n      hooks={{ setDataMask }}\n      enableNoResults={enableNoResults}\n      filterState={{\n        ...formFilter?.defaultDataMask?.filterState,\n        validateMessage: isMissingRequiredValue && t('Value is required'),\n        validateStatus: isMissingRequiredValue && 'error',\n      }}\n    />\n  );\n};\n\nexport default DefaultValue;\n"]},"metadata":{},"sourceType":"module"}