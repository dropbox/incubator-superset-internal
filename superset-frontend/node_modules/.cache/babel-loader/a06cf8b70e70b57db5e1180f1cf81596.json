{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { styled, t } from '@superset-ui/core';\nimport { useFilters, usePagination, useSortBy, useTable } from 'react-table';\nimport { Empty } from 'src/components';\nimport Pagination from 'src/components/Pagination';\nimport TableCollection from 'src/components/TableCollection';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DEFAULT_PAGE_SIZE = 10;\nexport var EmptyWrapperType;\n(function (EmptyWrapperType) {\n  EmptyWrapperType[\"Default\"] = \"Default\";\n  EmptyWrapperType[\"Small\"] = \"Small\";\n})(EmptyWrapperType || (EmptyWrapperType = {}));\nconst EmptyWrapper = styled.div`\n  margin: ${(_ref) => {let { theme } = _ref;return theme.gridUnit * 40;}}px 0;\n`;\nconst TableViewStyles = styled.div`\n  ${(_ref2) => {let { scrollTable, theme } = _ref2;return scrollTable &&\n  `\n    flex: 1 1 auto;\n    margin-bottom: ${theme.gridUnit * 4}px;\n    overflow: auto;\n  `;}}\n\n  .table-row {\n    ${(_ref3) => {let { theme, small } = _ref3;return !small && `height: ${theme.gridUnit * 11 - 1}px;`;}}\n\n    .table-cell {\n      ${(_ref4) => {let { theme, small } = _ref4;return small &&\n  `\n        padding-top: ${theme.gridUnit + 1}px;\n        padding-bottom: ${theme.gridUnit + 1}px;\n        line-height: 1.45;\n      `;}}\n    }\n  }\n\n  th[role='columnheader'] {\n    z-index: 1;\n    border-bottom: ${(_ref5) => {let { theme } = _ref5;return `${theme.gridUnit - 2}px solid ${theme.colors.grayscale.light2}`;}};\n    ${(_ref6) => {let { small } = _ref6;return small && `padding-bottom: 0;`;}}\n  }\n`;\nconst PaginationStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: ${(_ref7) => {let { theme } = _ref7;return theme.colors.grayscale.light5;}};\n\n  ${(_ref8) => {let { isPaginationSticky } = _ref8;return isPaginationSticky &&\n  `\n        position: sticky;\n        bottom: 0;\n        left: 0;\n    `;}};\n\n  .row-count-container {\n    margin-top: ${(_ref9) => {let { theme } = _ref9;return theme.gridUnit * 2;}}px;\n    color: ${(_ref10) => {let { theme } = _ref10;return theme.colors.grayscale.base;}};\n  }\n`;\nconst TableView = (_ref11) => {let { columns, data, pageSize: initialPageSize, totalCount = data.length, initialPageIndex, initialSortBy = [], loading = false, withPagination = true, emptyWrapperType = EmptyWrapperType.Default, noDataText, showRowCount = true, serverPagination = false, columnsForWrapText, onServerPagination = () => {}, scrollTopOnPagination = false, ...props } = _ref11;\n  const initialState = {\n    pageSize: initialPageSize != null ? initialPageSize : DEFAULT_PAGE_SIZE,\n    pageIndex: initialPageIndex != null ? initialPageIndex : 0,\n    sortBy: initialSortBy };\n\n  const { getTableProps, getTableBodyProps, headerGroups, page, rows, prepareRow, pageCount, gotoPage, state: { pageIndex, pageSize, sortBy } } = useTable({\n    columns,\n    data,\n    initialState,\n    manualPagination: serverPagination,\n    manualSortBy: serverPagination,\n    pageCount: Math.ceil(totalCount / initialState.pageSize) },\n  useFilters, useSortBy, usePagination);\n  const content = withPagination ? page : rows;\n  let EmptyWrapperComponent;\n  switch (emptyWrapperType) {\n    case EmptyWrapperType.Small:\n      EmptyWrapperComponent = (_ref12) => {let { children } = _ref12;return ___EmotionJSX(React.Fragment, null, children);};\n      break;\n    case EmptyWrapperType.Default:\n    default:\n      EmptyWrapperComponent = (_ref13) => {let { children } = _ref13;return ___EmotionJSX(EmptyWrapper, null, children);};}\n\n  const isEmpty = !loading && content.length === 0;\n  const hasPagination = pageCount > 1 && withPagination;\n  const tableRef = useRef(null);\n  const handleGotoPage = (p) => {\n    if (scrollTopOnPagination) {var _tableRef$current;\n      tableRef == null ? void 0 : (_tableRef$current = tableRef.current) == null ? void 0 : _tableRef$current.scroll(0, 0);\n    }\n    gotoPage(p);\n  };\n  useEffect(() => {\n    if (serverPagination && pageIndex !== initialState.pageIndex) {\n      onServerPagination({\n        pageIndex });\n\n    }\n  }, [pageIndex]);\n  useEffect(() => {\n    if (serverPagination && !isEqual(sortBy, initialState.sortBy)) {\n      onServerPagination({\n        pageIndex: 0,\n        sortBy });\n\n    }\n  }, [sortBy]);\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(TableViewStyles, _extends({}, props, { ref: tableRef }),\n  ___EmotionJSX(TableCollection, { getTableProps: getTableProps, getTableBodyProps: getTableBodyProps, prepareRow: prepareRow, headerGroups: headerGroups, rows: content, columns: columns, loading: loading, columnsForWrapText: columnsForWrapText }),\n  isEmpty && ___EmotionJSX(EmptyWrapperComponent, null,\n  noDataText ? ___EmotionJSX(Empty, { image: Empty.PRESENTED_IMAGE_SIMPLE, description: noDataText }) : ___EmotionJSX(Empty, { image: Empty.PRESENTED_IMAGE_SIMPLE }))),\n\n\n  hasPagination && ___EmotionJSX(PaginationStyles, { className: \"pagination-container\", isPaginationSticky: props.isPaginationSticky },\n  ___EmotionJSX(Pagination, { totalPages: pageCount || 0, currentPage: pageCount ? pageIndex + 1 : 0, onChange: (p) => handleGotoPage(p - 1), hideFirstAndLastPageLinks: true }),\n  showRowCount && ___EmotionJSX(\"div\", { className: \"row-count-container\" },\n  !loading &&\n  t('%s-%s of %s', pageSize * pageIndex + (page.length && 1), pageSize * pageIndex + page.length, totalCount))));\n\n\n\n};\nexport default /*#__PURE__*/React.memo(TableView);","map":{"version":3,"mappings":"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","names":["React","useEffect","useRef","isEqual","styled","t","useFilters","usePagination","useSortBy","useTable","Empty","Pagination","TableCollection","DEFAULT_PAGE_SIZE","EmptyWrapperType","EmptyWrapper","div","theme","gridUnit","TableViewStyles","scrollTable","small","colors","grayscale","light2","PaginationStyles","light5","isPaginationSticky","base","TableView","columns","data","pageSize","initialPageSize","totalCount","length","initialPageIndex","initialSortBy","loading","withPagination","emptyWrapperType","Default","noDataText","showRowCount","serverPagination","columnsForWrapText","onServerPagination","scrollTopOnPagination","props","initialState","pageIndex","sortBy","getTableProps","getTableBodyProps","headerGroups","page","rows","prepareRow","pageCount","gotoPage","state","manualPagination","manualSortBy","Math","ceil","content","EmptyWrapperComponent","Small","children","isEmpty","hasPagination","tableRef","handleGotoPage","p","current","scroll","PRESENTED_IMAGE_SIMPLE","memo"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/components/TableView/TableView.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { styled, t } from '@superset-ui/core';\nimport { useFilters, usePagination, useSortBy, useTable } from 'react-table';\nimport { Empty } from 'src/components';\nimport Pagination from 'src/components/Pagination';\nimport TableCollection from 'src/components/TableCollection';\nimport { SortByType, ServerPagination } from './types';\n\nconst DEFAULT_PAGE_SIZE = 10;\n\nexport enum EmptyWrapperType {\n  Default = 'Default',\n  Small = 'Small',\n}\n\nexport interface TableViewProps {\n  columns: any[];\n  data: any[];\n  pageSize?: number;\n  totalCount?: number;\n  serverPagination?: boolean;\n  onServerPagination?: (args: ServerPagination) => void;\n  initialPageIndex?: number;\n  initialSortBy?: SortByType;\n  loading?: boolean;\n  withPagination?: boolean;\n  emptyWrapperType?: EmptyWrapperType;\n  noDataText?: string;\n  className?: string;\n  isPaginationSticky?: boolean;\n  showRowCount?: boolean;\n  scrollTable?: boolean;\n  scrollTopOnPagination?: boolean;\n  small?: boolean;\n  columnsForWrapText?: string[];\n}\n\nconst EmptyWrapper = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 40}px 0;\n`;\n\nconst TableViewStyles = styled.div<{\n  isPaginationSticky?: boolean;\n  scrollTable?: boolean;\n  small?: boolean;\n}>`\n  ${({ scrollTable, theme }) =>\n    scrollTable &&\n    `\n    flex: 1 1 auto;\n    margin-bottom: ${theme.gridUnit * 4}px;\n    overflow: auto;\n  `}\n\n  .table-row {\n    ${({ theme, small }) => !small && `height: ${theme.gridUnit * 11 - 1}px;`}\n\n    .table-cell {\n      ${({ theme, small }) =>\n        small &&\n        `\n        padding-top: ${theme.gridUnit + 1}px;\n        padding-bottom: ${theme.gridUnit + 1}px;\n        line-height: 1.45;\n      `}\n    }\n  }\n\n  th[role='columnheader'] {\n    z-index: 1;\n    border-bottom: ${({ theme }) =>\n      `${theme.gridUnit - 2}px solid ${theme.colors.grayscale.light2}`};\n    ${({ small }) => small && `padding-bottom: 0;`}\n  }\n`;\n\nconst PaginationStyles = styled.div<{\n  isPaginationSticky?: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n\n  ${({ isPaginationSticky }) =>\n    isPaginationSticky &&\n    `\n        position: sticky;\n        bottom: 0;\n        left: 0;\n    `};\n\n  .row-count-container {\n    margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n`;\n\nconst TableView = ({\n  columns,\n  data,\n  pageSize: initialPageSize,\n  totalCount = data.length,\n  initialPageIndex,\n  initialSortBy = [],\n  loading = false,\n  withPagination = true,\n  emptyWrapperType = EmptyWrapperType.Default,\n  noDataText,\n  showRowCount = true,\n  serverPagination = false,\n  columnsForWrapText,\n  onServerPagination = () => {},\n  scrollTopOnPagination = false,\n  ...props\n}: TableViewProps) => {\n  const initialState = {\n    pageSize: initialPageSize ?? DEFAULT_PAGE_SIZE,\n    pageIndex: initialPageIndex ?? 0,\n    sortBy: initialSortBy,\n  };\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    rows,\n    prepareRow,\n    pageCount,\n    gotoPage,\n    state: { pageIndex, pageSize, sortBy },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState,\n      manualPagination: serverPagination,\n      manualSortBy: serverPagination,\n      pageCount: Math.ceil(totalCount / initialState.pageSize),\n    },\n    useFilters,\n    useSortBy,\n    usePagination,\n  );\n\n  const content = withPagination ? page : rows;\n\n  let EmptyWrapperComponent;\n  switch (emptyWrapperType) {\n    case EmptyWrapperType.Small:\n      EmptyWrapperComponent = ({ children }: any) => <>{children}</>;\n      break;\n    case EmptyWrapperType.Default:\n    default:\n      EmptyWrapperComponent = ({ children }: any) => (\n        <EmptyWrapper>{children}</EmptyWrapper>\n      );\n  }\n\n  const isEmpty = !loading && content.length === 0;\n  const hasPagination = pageCount > 1 && withPagination;\n  const tableRef = useRef<HTMLTableElement>(null);\n  const handleGotoPage = (p: number) => {\n    if (scrollTopOnPagination) {\n      tableRef?.current?.scroll(0, 0);\n    }\n    gotoPage(p);\n  };\n\n  useEffect(() => {\n    if (serverPagination && pageIndex !== initialState.pageIndex) {\n      onServerPagination({\n        pageIndex,\n      });\n    }\n  }, [pageIndex]);\n\n  useEffect(() => {\n    if (serverPagination && !isEqual(sortBy, initialState.sortBy)) {\n      onServerPagination({\n        pageIndex: 0,\n        sortBy,\n      });\n    }\n  }, [sortBy]);\n\n  return (\n    <>\n      <TableViewStyles {...props} ref={tableRef}>\n        <TableCollection\n          getTableProps={getTableProps}\n          getTableBodyProps={getTableBodyProps}\n          prepareRow={prepareRow}\n          headerGroups={headerGroups}\n          rows={content}\n          columns={columns}\n          loading={loading}\n          columnsForWrapText={columnsForWrapText}\n        />\n        {isEmpty && (\n          <EmptyWrapperComponent>\n            {noDataText ? (\n              <Empty\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                description={noDataText}\n              />\n            ) : (\n              <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n            )}\n          </EmptyWrapperComponent>\n        )}\n      </TableViewStyles>\n      {hasPagination && (\n        <PaginationStyles\n          className=\"pagination-container\"\n          isPaginationSticky={props.isPaginationSticky}\n        >\n          <Pagination\n            totalPages={pageCount || 0}\n            currentPage={pageCount ? pageIndex + 1 : 0}\n            onChange={(p: number) => handleGotoPage(p - 1)}\n            hideFirstAndLastPageLinks\n          />\n          {showRowCount && (\n            <div className=\"row-count-container\">\n              {!loading &&\n                t(\n                  '%s-%s of %s',\n                  pageSize * pageIndex + (page.length && 1),\n                  pageSize * pageIndex + page.length,\n                  totalCount,\n                )}\n            </div>\n          )}\n        </PaginationStyles>\n      )}\n    </>\n  );\n};\n\nexport default React.memo(TableView);\n"]},"metadata":{},"sourceType":"module"}