{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport copyTextToClipboard from 'src/utils/copy';\nimport { t, logging } from '@superset-ui/core';\nimport { Menu } from 'src/components/Menu';\nimport { getDashboardPermalink } from 'src/utils/urlUtils';\nimport { useSelector } from 'react-redux';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst ShareMenuItems = (props) => {\n  const { copyMenuItemTitle, emailMenuItemTitle, emailSubject, emailBody, addDangerToast, addSuccessToast, dashboardId, dashboardComponentId, ...rest } = props;\n  const { dataMask, activeTabs } = useSelector((state) => ({\n    dataMask: state.dataMask,\n    activeTabs: state.dashboardState.activeTabs }));\n\n  async function generateUrl() {\n    return getDashboardPermalink({\n      dashboardId,\n      dataMask,\n      activeTabs,\n      anchor: dashboardComponentId });\n\n  }\n  async function onCopyLink() {\n    try {\n      await copyTextToClipboard(generateUrl);\n      addSuccessToast(t('Copied to clipboard!'));\n    }\n    catch (error) {\n      logging.error(error);\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }\n  async function onShareByEmail() {\n    try {\n      const encodedBody = encodeURIComponent(`${emailBody}${await generateUrl()}`);\n      const encodedSubject = encodeURIComponent(emailSubject);\n      window.location.href = `mailto:?Subject=${encodedSubject}%20&Body=${encodedBody}`;\n    }\n    catch (error) {\n      logging.error(error);\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }\n  return ___EmotionJSX(Menu, { selectable: false },\n  ___EmotionJSX(Menu.Item, _extends({ key: \"copy-url\" }, rest),\n  ___EmotionJSX(\"div\", { onClick: onCopyLink, role: \"button\", tabIndex: 0 },\n  copyMenuItemTitle)),\n\n\n  ___EmotionJSX(Menu.Item, _extends({ key: \"share-by-email\" }, rest),\n  ___EmotionJSX(\"div\", { onClick: onShareByEmail, role: \"button\", tabIndex: 0 },\n  emailMenuItemTitle)));\n\n\n\n};__signature__(ShareMenuItems, \"useSelector{{ dataMask, activeTabs }}\", () => [useSelector]);const _default =\nShareMenuItems;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ShareMenuItems, \"ShareMenuItems\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/menu/ShareMenuItems/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/menu/ShareMenuItems/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"sWAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,gBAAhC;AACA,SAASC,CAAT,EAAYC,OAAZ,QAA2B,mBAA3B;AACA,SAASC,IAAT,QAAqB,qBAArB;AACA,SAASC,qBAAT,QAAsC,oBAAtC;AAEA,SAASC,WAAT,QAA4B,aAA5B,C;AAcA,MAAMC,cAAc,GAAG,CAACC,KAAD,KAA8B;EACnD,MAAM,EACJC,iBADI,EAEJC,kBAFI,EAGJC,YAHI,EAIJC,SAJI,EAKJC,cALI,EAMJC,eANI,EAOJC,WAPI,EAQJC,oBARI,EASJ,GAAGC,IATC,KAUFT,KAVJ;EAWA,MAAM,EAAEU,QAAF,EAAYC,UAAZ,KAA2Bb,WAAW,CAAC,CAACc,KAAD,MAAuB;IAClEF,QAAQ,EAAEE,KAAK,CAACF,QADkD;IAElEC,UAAU,EAAEC,KAAK,CAACC,cAAN,CAAqBF,UAFiC,EAAvB,CAAD,CAA5C;;EAKA,eAAeG,WAAf,GAA0B;IACxB,OAAOjB,qBAAqB,CAAC;MAC3BU,WAD2B;MAE3BG,QAF2B;MAG3BC,UAH2B;MAI3BI,MAAM,EAAEP,oBAJmB,EAAD,CAA5B;;EAMD;EAED,eAAeQ,UAAf,GAAyB;IACvB,IAAI;MACF,MAAMvB,mBAAmB,CAACqB,WAAD,CAAzB;MACAR,eAAe,CAACZ,CAAC,CAAC,sBAAD,CAAF,CAAf;IACD;IAAC,OAAOuB,KAAP,EAAc;MACdtB,OAAO,CAACsB,KAAR,CAAcA,KAAd;MACAZ,cAAc,CAACX,CAAC,CAAC,+CAAD,CAAF,CAAd;IACD;EACF;EAED,eAAewB,cAAf,GAA6B;IAC3B,IAAI;MACF,MAAMC,WAAW,GAAGC,kBAAkB,CACpC,GAAGhB,SAAS,GAAG,MAAMU,WAAW,EAAE,EADE,CAAtC;MAGA,MAAMO,cAAc,GAAGD,kBAAkB,CAACjB,YAAD,CAAzC;MACAmB,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,mBAAmBH,cAAc,YAAYF,WAAW,EAA/E;IACD;IAAC,OAAOF,KAAP,EAAc;MACdtB,OAAO,CAACsB,KAAR,CAAcA,KAAd;MACAZ,cAAc,CAACX,CAAC,CAAC,+CAAD,CAAF,CAAd;IACD;EACF;EAED,OACE,cAAC,IAAD,IAAM,UAAU,EAAE,KAAlB;EACE,cAAC,IAAD,CAAM,IAAN,aAAW,GAAG,EAAC,UAAf,IAA8Be,IAA9B;EACE,uBAAK,OAAO,EAAEO,UAAd,EAA0B,IAAI,EAAC,QAA/B,EAAwC,QAAQ,EAAE,CAAlD;EACGf,iBADH,CADF,CADF;;;EAME,cAAC,IAAD,CAAM,IAAN,aAAW,GAAG,EAAC,gBAAf,IAAoCQ,IAApC;EACE,uBAAK,OAAO,EAAES,cAAd,EAA8B,IAAI,EAAC,QAAnC,EAA4C,QAAQ,EAAE,CAAtD;EACGhB,kBADH,CADF,CANF,CADF;;;;AAcD,CA/DD,C,cAAMH,c,kDAY6BD,W;AAqDpBC,c,CAAf,wB,iLAjEMA,c","names":["React","copyTextToClipboard","t","logging","Menu","getDashboardPermalink","useSelector","ShareMenuItems","props","copyMenuItemTitle","emailMenuItemTitle","emailSubject","emailBody","addDangerToast","addSuccessToast","dashboardId","dashboardComponentId","rest","dataMask","activeTabs","state","dashboardState","generateUrl","anchor","onCopyLink","error","onShareByEmail","encodedBody","encodeURIComponent","encodedSubject","window","location","href"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/menu/ShareMenuItems/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport copyTextToClipboard from 'src/utils/copy';\nimport { t, logging } from '@superset-ui/core';\nimport { Menu } from 'src/components/Menu';\nimport { getDashboardPermalink } from 'src/utils/urlUtils';\nimport { RootState } from 'src/dashboard/types';\nimport { useSelector } from 'react-redux';\n\ninterface ShareMenuItemProps {\n  url?: string;\n  copyMenuItemTitle: string;\n  emailMenuItemTitle: string;\n  emailSubject: string;\n  emailBody: string;\n  addDangerToast: Function;\n  addSuccessToast: Function;\n  dashboardId: string | number;\n  dashboardComponentId?: string;\n}\n\nconst ShareMenuItems = (props: ShareMenuItemProps) => {\n  const {\n    copyMenuItemTitle,\n    emailMenuItemTitle,\n    emailSubject,\n    emailBody,\n    addDangerToast,\n    addSuccessToast,\n    dashboardId,\n    dashboardComponentId,\n    ...rest\n  } = props;\n  const { dataMask, activeTabs } = useSelector((state: RootState) => ({\n    dataMask: state.dataMask,\n    activeTabs: state.dashboardState.activeTabs,\n  }));\n\n  async function generateUrl() {\n    return getDashboardPermalink({\n      dashboardId,\n      dataMask,\n      activeTabs,\n      anchor: dashboardComponentId,\n    });\n  }\n\n  async function onCopyLink() {\n    try {\n      await copyTextToClipboard(generateUrl);\n      addSuccessToast(t('Copied to clipboard!'));\n    } catch (error) {\n      logging.error(error);\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }\n\n  async function onShareByEmail() {\n    try {\n      const encodedBody = encodeURIComponent(\n        `${emailBody}${await generateUrl()}`,\n      );\n      const encodedSubject = encodeURIComponent(emailSubject);\n      window.location.href = `mailto:?Subject=${encodedSubject}%20&Body=${encodedBody}`;\n    } catch (error) {\n      logging.error(error);\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }\n\n  return (\n    <Menu selectable={false}>\n      <Menu.Item key=\"copy-url\" {...rest}>\n        <div onClick={onCopyLink} role=\"button\" tabIndex={0}>\n          {copyMenuItemTitle}\n        </div>\n      </Menu.Item>\n      <Menu.Item key=\"share-by-email\" {...rest}>\n        <div onClick={onShareByEmail} role=\"button\" tabIndex={0}>\n          {emailMenuItemTitle}\n        </div>\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nexport default ShareMenuItems;\n"]},"metadata":{},"sourceType":"module"}