{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { forwardRef, useImperativeHandle, useState } from 'react';\nimport { t, styled } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { AntdInput } from 'src/components';\nimport { SELECT_WIDTH } from 'src/components/ListView/utils';\nimport { FormLabel } from 'src/components/Form';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Container = styled.div`\n  width: ${SELECT_WIDTH}px;\n`;\nconst SearchIcon = styled(Icons.Search)`\n  color: ${(_ref) => {let { theme } = _ref;return theme.colors.grayscale.light1;}};\n`;\nconst StyledInput = styled(AntdInput)`\n  border-radius: ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit;}}px;\n`;\nfunction SearchFilter(_ref3, ref) {let { Header, name, initialValue, onSubmit } = _ref3;\n  const [value, setValue] = useState(initialValue || '');\n  const handleSubmit = () => {\n    if (value) {\n      onSubmit(value.trim());\n    }\n  };\n  const handleChange = (e) => {\n    setValue(e.currentTarget.value);\n    if (e.currentTarget.value === '') {\n      onSubmit('');\n    }\n  };\n  useImperativeHandle(ref, () => ({\n    clearFilter: () => {\n      setValue('');\n      onSubmit('');\n    } }));\n\n  return ___EmotionJSX(Container, null,\n  ___EmotionJSX(FormLabel, null, Header),\n  ___EmotionJSX(StyledInput, { allowClear: true, \"data-test\": \"filters-search\", placeholder: t('Type a value'), name: name, value: value, onChange: handleChange, onPressEnter: handleSubmit, onBlur: handleSubmit, prefix: ___EmotionJSX(SearchIcon, { iconSize: \"l\" }) }));\n\n}__signature__(SearchFilter, \"useState{[value, setValue](initialValue || '')}\\nuseImperativeHandle{}\", () => [useImperativeHandle]);const _default = /*#__PURE__*/\nforwardRef(SearchFilter);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Container, \"Container\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ListView/Filters/Search.tsx\");reactHotLoader.register(SearchIcon, \"SearchIcon\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ListView/Filters/Search.tsx\");reactHotLoader.register(StyledInput, \"StyledInput\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ListView/Filters/Search.tsx\");reactHotLoader.register(SearchFilter, \"SearchFilter\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ListView/Filters/Search.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ListView/Filters/Search.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,mBAA5B,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,SAASC,CAAT,EAAYC,MAAZ,QAA0B,mBAA1B;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,SAAT,QAA0B,qBAA1B,C;AASA,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAG;WACjBH,YAAY;CADvB;AAIA,MAAMI,UAAU,GAAGP,MAAM,CAACC,KAAK,CAACO,MAAP,CAAc;WAC5B,eAAC,EAAEC,KAAF,EAAD,eAAeA,KAAK,CAACC,MAAN,CAAaC,SAAb,CAAuBC,MAAtC,EAA4C;CADvD;AAIA,MAAMC,WAAW,GAAGb,MAAM,CAACE,SAAD,CAAW;mBAClB,gBAAC,EAAEO,KAAF,EAAD,gBAAeA,KAAK,CAACK,QAArB,EAA6B;CADhD;AAIA,SAASC,YAAT,QAEEC,GAFF,EAEqC,KADnC,EAAEC,MAAF,EAAUC,IAAV,EAAgBC,YAAhB,EAA8BC,QAA9B,EACmC;EAEnC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAACqB,YAAY,IAAI,EAAjB,CAAlC;EACA,MAAMI,YAAY,GAAG,MAAK;IACxB,IAAIF,KAAJ,EAAW;MACTD,QAAQ,CAACC,KAAK,CAACG,IAAN,EAAD,CAAR;IACD;EACF,CAJD;EAKA,MAAMC,YAAY,GAAG,CAACC,CAAD,KAA2C;IAC9DJ,QAAQ,CAACI,CAAC,CAACC,aAAF,CAAgBN,KAAjB,CAAR;IACA,IAAIK,CAAC,CAACC,aAAF,CAAgBN,KAAhB,KAA0B,EAA9B,EAAkC;MAChCD,QAAQ,CAAC,EAAD,CAAR;IACD;EACF,CALD;EAOAvB,mBAAmB,CAACmB,GAAD,EAAM,OAAO;IAC9BY,WAAW,EAAE,MAAK;MAChBN,QAAQ,CAAC,EAAD,CAAR;MACAF,QAAQ,CAAC,EAAD,CAAR;IACD,CAJ6B,EAAP,CAAN,CAAnB;;EAOA,OACE,cAAC,SAAD;EACE,cAAC,SAAD,QAAYH,MAAZ,CADF;EAEE,cAAC,WAAD,IACE,UAAU,MADZ,EAEE,aAAU,gBAFZ,EAGE,WAAW,EAAElB,CAAC,CAAC,cAAD,CAHhB,EAIE,IAAI,EAAEmB,IAJR,EAKE,KAAK,EAAEG,KALT,EAME,QAAQ,EAAEI,YANZ,EAOE,YAAY,EAAEF,YAPhB,EAQE,MAAM,EAAEA,YARV,EASE,MAAM,EAAE,cAAC,UAAD,IAAY,QAAQ,EAAC,GAArB,GATV,GAFF,CADF;;AAgBD,C,cAxCQR,Y,mFAiBPlB,mB;AAyBaD,UAAU,CAACmB,YAAD,C,CAAzB,wB,iLAtDMV,S,sJAIAE,U,uJAIAM,W,wJAIGE,Y","names":["React","forwardRef","useImperativeHandle","useState","t","styled","Icons","AntdInput","SELECT_WIDTH","FormLabel","Container","div","SearchIcon","Search","theme","colors","grayscale","light1","StyledInput","gridUnit","SearchFilter","ref","Header","name","initialValue","onSubmit","value","setValue","handleSubmit","trim","handleChange","e","currentTarget","clearFilter"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/ListView/Filters/Search.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { forwardRef, useImperativeHandle, useState } from 'react';\nimport { t, styled } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { AntdInput } from 'src/components';\nimport { SELECT_WIDTH } from 'src/components/ListView/utils';\nimport { FormLabel } from 'src/components/Form';\nimport { BaseFilter, FilterHandler } from './Base';\n\ninterface SearchHeaderProps extends BaseFilter {\n  Header: string;\n  onSubmit: (val: string) => void;\n  name: string;\n}\n\nconst Container = styled.div`\n  width: ${SELECT_WIDTH}px;\n`;\n\nconst SearchIcon = styled(Icons.Search)`\n  color: ${({ theme }) => theme.colors.grayscale.light1};\n`;\n\nconst StyledInput = styled(AntdInput)`\n  border-radius: ${({ theme }) => theme.gridUnit}px;\n`;\n\nfunction SearchFilter(\n  { Header, name, initialValue, onSubmit }: SearchHeaderProps,\n  ref: React.RefObject<FilterHandler>,\n) {\n  const [value, setValue] = useState(initialValue || '');\n  const handleSubmit = () => {\n    if (value) {\n      onSubmit(value.trim());\n    }\n  };\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.currentTarget.value);\n    if (e.currentTarget.value === '') {\n      onSubmit('');\n    }\n  };\n\n  useImperativeHandle(ref, () => ({\n    clearFilter: () => {\n      setValue('');\n      onSubmit('');\n    },\n  }));\n\n  return (\n    <Container>\n      <FormLabel>{Header}</FormLabel>\n      <StyledInput\n        allowClear\n        data-test=\"filters-search\"\n        placeholder={t('Type a value')}\n        name={name}\n        value={value}\n        onChange={handleChange}\n        onPressEnter={handleSubmit}\n        onBlur={handleSubmit}\n        prefix={<SearchIcon iconSize=\"l\" />}\n      />\n    </Container>\n  );\n}\n\nexport default forwardRef(SearchFilter);\n"]},"metadata":{},"sourceType":"module"}