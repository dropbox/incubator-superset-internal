{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { hasGenericChartAxes, smartDateFormatter, t } from '@superset-ui/core';\nimport { D3_FORMAT_DOCS, D3_TIME_FORMAT_OPTIONS, getStandardizedControls, sections, temporalColumnMixin } from '@superset-ui/chart-controls';\nimport React from 'react';\nimport { headerFontSize, subheaderFontSize } from '../sharedControls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst config = {\n  controlPanelSections: [\n  sections.genericTime,\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    [hasGenericChartAxes ? 'x_axis' : null],\n    [hasGenericChartAxes ? 'time_grain_sqla' : null],\n    ['metric'],\n    ['adhoc_filters']] },\n\n\n  {\n    label: t('Options'),\n    tabOverride: 'data',\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'compare_lag',\n      config: {\n        type: 'TextControl',\n        label: t('Comparison Period Lag'),\n        isInt: true,\n        description: t('Based on granularity, number of time periods to compare against') } }],\n\n\n\n    [\n    {\n      name: 'compare_suffix',\n      config: {\n        type: 'TextControl',\n        label: t('Comparison suffix'),\n        description: t('Suffix to apply after the percentage display') } }],\n\n\n\n    [\n    {\n      name: 'show_timestamp',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Show Timestamp'),\n        renderTrigger: true,\n        default: false,\n        description: t('Whether to display the timestamp') } }],\n\n\n\n    [\n    {\n      name: 'show_trend_line',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Show Trend Line'),\n        renderTrigger: true,\n        default: true,\n        description: t('Whether to display the trend line') } }],\n\n\n\n    [\n    {\n      name: 'start_y_axis_at_zero',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Start y-axis at 0'),\n        renderTrigger: true,\n        default: true,\n        description: t('Start y-axis at zero. Uncheck to start y-axis at minimum value in the data.') } }],\n\n\n\n    [\n    {\n      name: 'time_range_fixed',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Fix to selected Time Range'),\n        description: t('Fix the trend line to the full time range specified in case filtered results do not include the start or end dates'),\n        renderTrigger: true,\n        visibility(props) {\n          const { time_range: timeRange } = props.form_data;\n          // only display this option when a time range is selected\n          return !!timeRange && timeRange !== 'No filter';\n        } } }]] },\n\n\n\n\n\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [\n    ['color_picker', null],\n    [headerFontSize],\n    [subheaderFontSize],\n    ['y_axis_format'],\n    [\n    {\n      name: 'time_format',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Date format'),\n        renderTrigger: true,\n        choices: D3_TIME_FORMAT_OPTIONS,\n        description: D3_FORMAT_DOCS,\n        default: smartDateFormatter.id } }],\n\n\n\n    [\n    {\n      name: 'force_timestamp_formatting',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Force date format'),\n        renderTrigger: true,\n        default: false,\n        description: t('Use date formatting even when metric value is not a timestamp') } }]] },\n\n\n\n\n\n  {\n    label: t('Advanced Analytics'),\n    expanded: false,\n    controlSetRows: [\n    // eslint-disable-next-line react/jsx-key\n    [___EmotionJSX(\"div\", { className: \"section-header\" }, t('Rolling Window'))],\n    [\n    {\n      name: 'rolling_type',\n      config: {\n        type: 'SelectControl',\n        label: t('Rolling Function'),\n        default: 'None',\n        choices: [\n        ['None', t('None')],\n        ['mean', t('mean')],\n        ['sum', t('sum')],\n        ['std', t('std')],\n        ['cumsum', t('cumsum')]],\n\n        description: t('Defines a rolling window function to apply, works along ' +\n        'with the [Periods] text box') } }],\n\n\n\n    [\n    {\n      name: 'rolling_periods',\n      config: {\n        type: 'TextControl',\n        label: t('Periods'),\n        isInt: true,\n        description: t('Defines the size of the rolling window function, ' +\n        'relative to the time granularity selected') } }],\n\n\n\n    [\n    {\n      name: 'min_periods',\n      config: {\n        type: 'TextControl',\n        label: t('Min Periods'),\n        isInt: true,\n        description: t('The minimum number of rolling periods required to show ' +\n        'a value. For instance if you do a cumulative sum on 7 days ' +\n        'you may want your \"Min Period\" to be 7, so that all data points ' +\n        'shown are the total of 7 periods. This will hide the \"ramp up\" ' +\n        'taking place over the first 7 periods') } }],\n\n\n\n    [___EmotionJSX(\"div\", { className: \"section-header\" }, t('Resample'))],\n    [\n    {\n      name: 'resample_rule',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Rule'),\n        default: null,\n        choices: [\n        ['1T', t('1 minutely frequency')],\n        ['1H', t('1 hourly frequency')],\n        ['1D', t('1 calendar day frequency')],\n        ['7D', t('7 calendar day frequency')],\n        ['1MS', t('1 month start frequency')],\n        ['1M', t('1 month end frequency')],\n        ['1AS', t('1 year start frequency')],\n        ['1A', t('1 year end frequency')]],\n\n        description: t('Pandas resample rule') } }],\n\n\n\n    [\n    {\n      name: 'resample_method',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Fill method'),\n        default: null,\n        choices: [\n        ['asfreq', t('Null imputation')],\n        ['zerofill', t('Zero imputation')],\n        ['linear', t('Linear interpolation')],\n        ['ffill', t('Forward values')],\n        ['bfill', t('Backward values')],\n        ['median', t('Median values')],\n        ['mean', t('Mean values')],\n        ['sum', t('Sum values')]],\n\n        description: t('Pandas resample method') } }]] }],\n\n\n\n\n\n\n  controlOverrides: {\n    y_axis_format: {\n      label: t('Number format') },\n\n    x_axis: {\n      label: t('TEMPORAL X-AXIS'),\n      ...temporalColumnMixin } },\n\n\n  formDataOverrides: (formData) => ({\n    ...formData,\n    metric: getStandardizedControls().shiftMetric() }) };\n\n\nexport default config;","map":{"version":3,"mappings":"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","names":["hasGenericChartAxes","smartDateFormatter","t","D3_FORMAT_DOCS","D3_TIME_FORMAT_OPTIONS","getStandardizedControls","sections","temporalColumnMixin","React","headerFontSize","subheaderFontSize","config","controlPanelSections","genericTime","label","expanded","controlSetRows","tabOverride","name","type","isInt","description","renderTrigger","default","visibility","props","time_range","timeRange","form_data","freeForm","choices","id","controlOverrides","y_axis_format","x_axis","formDataOverrides","formData","metric","shiftMetric"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/BigNumber/BigNumberWithTrendline/controlPanel.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { hasGenericChartAxes, smartDateFormatter, t } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  D3_FORMAT_DOCS,\n  D3_TIME_FORMAT_OPTIONS,\n  getStandardizedControls,\n  sections,\n  temporalColumnMixin,\n} from '@superset-ui/chart-controls';\nimport React from 'react';\nimport { headerFontSize, subheaderFontSize } from '../sharedControls';\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.genericTime,\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        [hasGenericChartAxes ? 'x_axis' : null],\n        [hasGenericChartAxes ? 'time_grain_sqla' : null],\n        ['metric'],\n        ['adhoc_filters'],\n      ],\n    },\n    {\n      label: t('Options'),\n      tabOverride: 'data',\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'compare_lag',\n            config: {\n              type: 'TextControl',\n              label: t('Comparison Period Lag'),\n              isInt: true,\n              description: t(\n                'Based on granularity, number of time periods to compare against',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'compare_suffix',\n            config: {\n              type: 'TextControl',\n              label: t('Comparison suffix'),\n              description: t('Suffix to apply after the percentage display'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'show_timestamp',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Show Timestamp'),\n              renderTrigger: true,\n              default: false,\n              description: t('Whether to display the timestamp'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'show_trend_line',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Show Trend Line'),\n              renderTrigger: true,\n              default: true,\n              description: t('Whether to display the trend line'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'start_y_axis_at_zero',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Start y-axis at 0'),\n              renderTrigger: true,\n              default: true,\n              description: t(\n                'Start y-axis at zero. Uncheck to start y-axis at minimum value in the data.',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'time_range_fixed',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Fix to selected Time Range'),\n              description: t(\n                'Fix the trend line to the full time range specified in case filtered results do not include the start or end dates',\n              ),\n              renderTrigger: true,\n              visibility(props) {\n                const { time_range: timeRange } = props.form_data;\n                // only display this option when a time range is selected\n                return !!timeRange && timeRange !== 'No filter';\n              },\n            },\n          },\n        ],\n      ],\n    },\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        ['color_picker', null],\n        [headerFontSize],\n        [subheaderFontSize],\n        ['y_axis_format'],\n        [\n          {\n            name: 'time_format',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Date format'),\n              renderTrigger: true,\n              choices: D3_TIME_FORMAT_OPTIONS,\n              description: D3_FORMAT_DOCS,\n              default: smartDateFormatter.id,\n            },\n          },\n        ],\n        [\n          {\n            name: 'force_timestamp_formatting',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Force date format'),\n              renderTrigger: true,\n              default: false,\n              description: t(\n                'Use date formatting even when metric value is not a timestamp',\n              ),\n            },\n          },\n        ],\n      ],\n    },\n    {\n      label: t('Advanced Analytics'),\n      expanded: false,\n      controlSetRows: [\n        // eslint-disable-next-line react/jsx-key\n        [<div className=\"section-header\">{t('Rolling Window')}</div>],\n        [\n          {\n            name: 'rolling_type',\n            config: {\n              type: 'SelectControl',\n              label: t('Rolling Function'),\n              default: 'None',\n              choices: [\n                ['None', t('None')],\n                ['mean', t('mean')],\n                ['sum', t('sum')],\n                ['std', t('std')],\n                ['cumsum', t('cumsum')],\n              ],\n              description: t(\n                'Defines a rolling window function to apply, works along ' +\n                  'with the [Periods] text box',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'rolling_periods',\n            config: {\n              type: 'TextControl',\n              label: t('Periods'),\n              isInt: true,\n              description: t(\n                'Defines the size of the rolling window function, ' +\n                  'relative to the time granularity selected',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'min_periods',\n            config: {\n              type: 'TextControl',\n              label: t('Min Periods'),\n              isInt: true,\n              description: t(\n                'The minimum number of rolling periods required to show ' +\n                  'a value. For instance if you do a cumulative sum on 7 days ' +\n                  'you may want your \"Min Period\" to be 7, so that all data points ' +\n                  'shown are the total of 7 periods. This will hide the \"ramp up\" ' +\n                  'taking place over the first 7 periods',\n              ),\n            },\n          },\n        ],\n        [<div className=\"section-header\">{t('Resample')}</div>],\n        [\n          {\n            name: 'resample_rule',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Rule'),\n              default: null,\n              choices: [\n                ['1T', t('1 minutely frequency')],\n                ['1H', t('1 hourly frequency')],\n                ['1D', t('1 calendar day frequency')],\n                ['7D', t('7 calendar day frequency')],\n                ['1MS', t('1 month start frequency')],\n                ['1M', t('1 month end frequency')],\n                ['1AS', t('1 year start frequency')],\n                ['1A', t('1 year end frequency')],\n              ],\n              description: t('Pandas resample rule'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'resample_method',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Fill method'),\n              default: null,\n              choices: [\n                ['asfreq', t('Null imputation')],\n                ['zerofill', t('Zero imputation')],\n                ['linear', t('Linear interpolation')],\n                ['ffill', t('Forward values')],\n                ['bfill', t('Backward values')],\n                ['median', t('Median values')],\n                ['mean', t('Mean values')],\n                ['sum', t('Sum values')],\n              ],\n              description: t('Pandas resample method'),\n            },\n          },\n        ],\n      ],\n    },\n  ],\n  controlOverrides: {\n    y_axis_format: {\n      label: t('Number format'),\n    },\n    x_axis: {\n      label: t('TEMPORAL X-AXIS'),\n      ...temporalColumnMixin,\n    },\n  },\n  formDataOverrides: formData => ({\n    ...formData,\n    metric: getStandardizedControls().shiftMetric(),\n  }),\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}