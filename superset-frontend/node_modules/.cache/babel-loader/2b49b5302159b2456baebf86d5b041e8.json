{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";import { t } from '@superset-ui/core';\n\nimport { isAggMode, isRawMode } from './shared';\nexport const orderByControlSetItem = {\n  name: 'order_by_cols',\n  config: {\n    type: 'SelectControl',\n    label: t('Ordering'),\n    description: t('Order results by selected columns'),\n    multi: true,\n    default: [],\n    mapStateToProps: (_ref) => {let { datasource } = _ref;return {\n        choices: datasource != null && datasource.hasOwnProperty('order_by_choices') ?\n        datasource == null ? void 0 : datasource.order_by_choices :\n        (datasource == null ? void 0 : datasource.columns) || [] };},\n\n    visibility: isRawMode,\n    resetOnHide: false } };\n\n\nexport const orderDescendingControlSetItem = {\n  name: 'order_desc',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Sort descending'),\n    default: true,\n    description: t('Whether to sort descending or ascending'),\n    visibility: (_ref2) => {let { controls } = _ref2;return !!(isAggMode({ controls }) &&\n      controls != null && controls.timeseries_limit_metric.value &&\n      !_isEmpty(controls == null ? void 0 : controls.timeseries_limit_metric.value));},\n    resetOnHide: false } };","map":{"version":3,"mappings":"sCAmBA,SAASA,CAAT,QAAkB,mBAAlB;;AAEA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,UAArC;AAEA,OAAO,MAAMC,qBAAqB,GAAmB;EACnDC,IAAI,EAAE,eAD6C;EAEnDC,MAAM,EAAE;IACNC,IAAI,EAAE,eADA;IAENC,KAAK,EAAEP,CAAC,CAAC,UAAD,CAFF;IAGNQ,WAAW,EAAER,CAAC,CAAC,mCAAD,CAHR;IAINS,KAAK,EAAE,IAJD;IAKNC,OAAO,EAAE,EALH;IAMNC,eAAe,EAAE,eAAC,EAAEC,UAAF,EAAD,eAAqB;QACpCC,OAAO,EAAED,UAAU,QAAV,cAAU,CAAEE,cAAZ,CAA2B,kBAA3B;QACJF,UADI,oBACJA,UAAsB,CAAEG,gBADpB;QAEL,WAAU,QAAV,sBAAU,CAAEC,OAAZ,KAAuB,EAHS,EAArB,EANX;;IAWNC,UAAU,EAAEf,SAXN;IAYNgB,WAAW,EAAE,KAZP,EAF2C,EAA9C;;;AAkBP,OAAO,MAAMC,6BAA6B,GAAmB;EAC3Df,IAAI,EAAE,YADqD;EAE3DC,MAAM,EAAE;IACNC,IAAI,EAAE,iBADA;IAENC,KAAK,EAAEP,CAAC,CAAC,iBAAD,CAFF;IAGNU,OAAO,EAAE,IAHH;IAINF,WAAW,EAAER,CAAC,CAAC,yCAAD,CAJR;IAKNiB,UAAU,EAAE,gBAAC,EAAEG,QAAF,EAAD,gBACV,CAAC,EACCnB,SAAS,CAAC,EAAEmB,QAAF,EAAD,CAAT;MACAA,QADA,YACAA,QAAQ,CAAEC,uBAAV,CAAkCC,KADlC;MAEA,CAAC,SAAQF,QAAR,oBAAQA,QAAQ,CAAEC,uBAAV,CAAkCC,KAA1C,CAHF,CADS,EALN;IAWNJ,WAAW,EAAE,KAXP,EAFmD,EAAtD","names":["t","isAggMode","isRawMode","orderByControlSetItem","name","config","type","label","description","multi","default","mapStateToProps","datasource","choices","hasOwnProperty","order_by_choices","columns","visibility","resetOnHide","orderDescendingControlSetItem","controls","timeseries_limit_metric","value"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/plugin-chart-handlebars/src/plugin/controls/orderBy.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ControlSetItem, Dataset } from '@superset-ui/chart-controls';\nimport { t } from '@superset-ui/core';\nimport { isEmpty } from 'lodash';\nimport { isAggMode, isRawMode } from './shared';\n\nexport const orderByControlSetItem: ControlSetItem = {\n  name: 'order_by_cols',\n  config: {\n    type: 'SelectControl',\n    label: t('Ordering'),\n    description: t('Order results by selected columns'),\n    multi: true,\n    default: [],\n    mapStateToProps: ({ datasource }) => ({\n      choices: datasource?.hasOwnProperty('order_by_choices')\n        ? (datasource as Dataset)?.order_by_choices\n        : datasource?.columns || [],\n    }),\n    visibility: isRawMode,\n    resetOnHide: false,\n  },\n};\n\nexport const orderDescendingControlSetItem: ControlSetItem = {\n  name: 'order_desc',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Sort descending'),\n    default: true,\n    description: t('Whether to sort descending or ascending'),\n    visibility: ({ controls }) =>\n      !!(\n        isAggMode({ controls }) &&\n        controls?.timeseries_limit_metric.value &&\n        !isEmpty(controls?.timeseries_limit_metric.value)\n      ),\n    resetOnHide: false,\n  },\n};\n"]},"metadata":{},"sourceType":"module"}