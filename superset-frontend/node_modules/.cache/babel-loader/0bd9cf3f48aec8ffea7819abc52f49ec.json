{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _pick from \"lodash/pick\";import _debounce from \"lodash/debounce\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\nstyled,\nt,\ncss,\nuseTheme,\nlogging,\nuseChangeEffect,\nuseComponentDidMount,\nusePrevious } from\n'@superset-ui/core';\n\nimport { Resizable } from 're-resizable';\nimport { usePluginContext } from 'src/components/DynamicPlugins';\nimport { Global } from '@emotion/react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport {\ngetItem,\nsetItem,\nLocalStorageKeys } from\n'src/utils/localStorageHelpers';\nimport { RESERVED_CHART_URL_PARAMS, URL_PARAMS } from 'src/constants';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport * as logActions from 'src/logger/actions';\nimport {\nLOG_ACTIONS_MOUNT_EXPLORER,\nLOG_ACTIONS_CHANGE_EXPLORE_CONTROLS } from\n'src/logger/LogUtils';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport cx from 'classnames';\nimport * as chartActions from 'src/components/Chart/chartAction';\nimport { fetchDatasourceMetadata } from 'src/dashboard/actions/datasources';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport { mergeExtraFormData } from 'src/dashboard/components/nativeFilters/utils';\nimport { postFormData, putFormData } from 'src/explore/exploreUtils/formData';\nimport { datasourcesActions } from 'src/explore/actions/datasourcesActions';\nimport { mountExploreUrl } from 'src/explore/exploreUtils';\nimport { getFormDataFromControls } from 'src/explore/controlUtils';\nimport * as exploreActions from 'src/explore/actions/exploreActions';\nimport * as saveModalActions from 'src/explore/actions/saveModalActions';\nimport { useTabId } from 'src/hooks/useTabId';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport ExploreChartPanel from '../ExploreChartPanel';\nimport ConnectedControlPanelsContainer from '../ControlPanelsContainer';\nimport SaveModal from '../SaveModal';\nimport DataSourcePanel from '../DatasourcePanel';\nimport ConnectedExploreChartHeader from '../ExploreChartHeader';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  ...ExploreChartPanel.propTypes,\n  actions: PropTypes.object.isRequired,\n  datasource_type: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number,\n  isDatasourceMetaLoading: PropTypes.bool.isRequired,\n  chart: chartPropShape.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  controls: PropTypes.object.isRequired,\n  forcedHeight: PropTypes.string,\n  form_data: PropTypes.object.isRequired,\n  standalone: PropTypes.bool.isRequired,\n  force: PropTypes.bool,\n  timeout: PropTypes.number,\n  impressionId: PropTypes.string,\n  vizType: PropTypes.string,\n  saveAction: PropTypes.string,\n  isSaveModalVisible: PropTypes.bool };\n\n\nconst ExploreContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  min-height: 0;\n`;\n\nconst ExplorePanelContainer = styled.div`\n  ${(_ref) => {let { theme } = _ref;return css`\n    background: ${theme.colors.grayscale.light5};\n    text-align: left;\n    position: relative;\n    width: 100%;\n    max-height: 100%;\n    min-height: 0;\n    display: flex;\n    flex: 1;\n    flex-wrap: nowrap;\n    border-top: 1px solid ${theme.colors.grayscale.light2};\n    .explore-column {\n      display: flex;\n      flex-direction: column;\n      padding: ${theme.gridUnit * 2}px 0;\n      max-height: 100%;\n    }\n    .data-source-selection {\n      background-color: ${theme.colors.grayscale.light5};\n      padding: ${theme.gridUnit * 2}px 0;\n      border-right: 1px solid ${theme.colors.grayscale.light2};\n    }\n    .main-explore-content {\n      flex: 1;\n      min-width: ${theme.gridUnit * 128}px;\n      border-left: 1px solid ${theme.colors.grayscale.light2};\n      padding: 0 ${theme.gridUnit * 4}px;\n      .panel {\n        margin-bottom: 0;\n      }\n    }\n    .controls-column {\n      align-self: flex-start;\n      padding: 0;\n    }\n    .title-container {\n      position: relative;\n      display: flex;\n      flex-direction: row;\n      padding: 0 ${theme.gridUnit * 2}px 0 ${theme.gridUnit * 4}px;\n      justify-content: space-between;\n      .horizontal-text {\n        font-size: ${theme.typography.sizes.m}px;\n      }\n    }\n    .no-show {\n      display: none;\n    }\n    .vertical-text {\n      writing-mode: vertical-rl;\n      text-orientation: mixed;\n    }\n    .sidebar {\n      height: 100%;\n      background-color: ${theme.colors.grayscale.light4};\n      padding: ${theme.gridUnit * 2}px;\n      width: ${theme.gridUnit * 8}px;\n    }\n    .collapse-icon > svg {\n      color: ${theme.colors.primary.base};\n    }\n  `;}};\n`;\n\nconst updateHistory = _debounce(\nasync (\nformData,\ndatasourceId,\ndatasourceType,\nisReplace,\nstandalone,\nforce,\ntitle,\ntabId) =>\n{\n  const payload = { ...formData };\n  const chartId = formData.slice_id;\n  const params = new URLSearchParams(window.location.search);\n  const additionalParam = Object.fromEntries(params);\n\n  if (chartId) {\n    additionalParam[URL_PARAMS.sliceId.name] = chartId;\n  } else {\n    additionalParam[URL_PARAMS.datasourceId.name] = datasourceId;\n    additionalParam[URL_PARAMS.datasourceType.name] = datasourceType;\n  }\n\n  const urlParams = (payload == null ? void 0 : payload.url_params) || {};\n  Object.entries(urlParams).forEach((_ref2) => {let [key, value] = _ref2;\n    if (!_includesInstanceProperty(RESERVED_CHART_URL_PARAMS).call(RESERVED_CHART_URL_PARAMS, key)) {\n      additionalParam[key] = value;\n    }\n  });\n\n  try {\n    let key;\n    let stateModifier;\n    if (isReplace) {\n      key = await postFormData(\n      datasourceId,\n      datasourceType,\n      formData,\n      chartId,\n      tabId);\n\n      stateModifier = 'replaceState';\n    } else {\n      key = getUrlParam(URL_PARAMS.formDataKey);\n      await putFormData(\n      datasourceId,\n      datasourceType,\n      key,\n      formData,\n      chartId,\n      tabId);\n\n      stateModifier = 'pushState';\n    }\n    // avoid race condition in case user changes route before explore updates the url\n    if (window.location.pathname.startsWith('/explore')) {\n      const url = mountExploreUrl(\n      standalone ? URL_PARAMS.standalone.name : null,\n      {\n        [URL_PARAMS.formDataKey.name]: key,\n        ...additionalParam },\n\n      force);\n\n      window.history[stateModifier](payload, title, url);\n    }\n  } catch (e) {\n    logging.warn('Failed at altering browser history', e);\n  }\n},\n1000);\n\n\nfunction ExploreViewContainer(props) {\n  const dynamicPluginContext = usePluginContext();\n  const dynamicPlugin = dynamicPluginContext.dynamicPlugins[props.vizType];\n  const isDynamicPluginLoading = dynamicPlugin && dynamicPlugin.mounting;\n  const wasDynamicPluginLoading = usePrevious(isDynamicPluginLoading);\n\n  /** the state of controls in the previous render */\n  const previousControls = usePrevious(props.controls);\n  /** the state of controls last time a query was triggered */\n  const [lastQueriedControls, setLastQueriedControls] = useState(\n  props.controls);\n\n\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [shouldForceUpdate, setShouldForceUpdate] = useState(-1);\n  const tabId = useTabId();\n\n  const theme = useTheme();\n\n  const defaultSidebarsWidth = {\n    controls_width: 320,\n    datasource_width: 300 };\n\n\n  const addHistory = useCallback(\n  async function (_temp) {let { isReplace = false, title } = _temp === void 0 ? {} : _temp;\n    const formData = props.dashboardId ?\n    {\n      ...props.form_data,\n      dashboardId: props.dashboardId } :\n\n    props.form_data;\n    const { id: datasourceId, type: datasourceType } = props.datasource;\n\n    updateHistory(\n    formData,\n    datasourceId,\n    datasourceType,\n    isReplace,\n    props.standalone,\n    props.force,\n    title,\n    tabId);\n\n  },\n  [\n  props.dashboardId,\n  props.form_data,\n  props.datasource.id,\n  props.datasource.type,\n  props.standalone,\n  props.force,\n  tabId]);\n\n\n\n  const handlePopstate = useCallback(() => {\n    const formData = window.history.state;\n    if (formData && Object.keys(formData).length) {\n      props.actions.setExploreControls(formData);\n      props.actions.postChartFormData(\n      formData,\n      props.force,\n      props.timeout,\n      props.chart.id);\n\n    }\n  }, [props.actions, props.chart.id, props.timeout]);\n\n  const onQuery = useCallback(() => {\n    props.actions.setForceQuery(false);\n    props.actions.triggerQuery(true, props.chart.id);\n    addHistory();\n    setLastQueriedControls(props.controls);\n  }, [props.controls, addHistory, props.actions, props.chart.id]);\n\n  const handleKeydown = useCallback(\n  (event) => {\n    const controlOrCommand = event.ctrlKey || event.metaKey;\n    if (controlOrCommand) {\n      const isEnter = event.key === 'Enter' || event.keyCode === 13;\n      const isS = event.key === 's' || event.keyCode === 83;\n      if (isEnter) {\n        onQuery();\n      } else if (isS) {\n        if (props.slice) {\n          props.actions.\n          saveSlice(props.form_data, {\n            action: 'overwrite',\n            slice_id: props.slice.slice_id,\n            slice_name: props.slice.slice_name,\n            add_to_dash: 'noSave',\n            goto_dash: false }).\n\n          then((_ref3) => {let { data } = _ref3;\n            window.location = data.slice.slice_url;\n          });\n        }\n      }\n    }\n  },\n  [onQuery, props.actions, props.form_data, props.slice]);\n\n\n  function onStop() {\n    if (props.chart && props.chart.queryController) {\n      props.chart.queryController.abort();\n    }\n  }\n\n  function toggleCollapse() {\n    setIsCollapsed(!isCollapsed);\n  }\n\n  useComponentDidMount(() => {\n    props.actions.logEvent(LOG_ACTIONS_MOUNT_EXPLORER);\n  });\n\n  useChangeEffect(tabId, (previous, current) => {\n    if (current) {\n      addHistory({ isReplace: true });\n    }\n  });\n\n  const previousHandlePopstate = usePrevious(handlePopstate);\n  useEffect(() => {\n    if (previousHandlePopstate) {\n      window.removeEventListener('popstate', previousHandlePopstate);\n    }\n    window.addEventListener('popstate', handlePopstate);\n    return () => {\n      window.removeEventListener('popstate', handlePopstate);\n    };\n  }, [handlePopstate, previousHandlePopstate]);\n\n  const previousHandleKeyDown = usePrevious(handleKeydown);\n  useEffect(() => {\n    if (previousHandleKeyDown) {\n      window.removeEventListener('keydown', previousHandleKeyDown);\n    }\n    document.addEventListener('keydown', handleKeydown);\n    return () => {\n      document.removeEventListener('keydown', handleKeydown);\n    };\n  }, [handleKeydown, previousHandleKeyDown]);\n\n  useEffect(() => {\n    if (wasDynamicPluginLoading && !isDynamicPluginLoading) {\n      // reload the controls now that we actually have the control config\n      props.actions.dynamicPluginControlsReady();\n    }\n  }, [isDynamicPluginLoading]);\n\n  useEffect(() => {\n    const hasError = Object.values(props.controls).some(\n    (control) =>\n    control.validationErrors && control.validationErrors.length > 0);\n\n    if (!hasError) {\n      props.actions.triggerQuery(true, props.chart.id);\n    }\n  }, []);\n\n  const reRenderChart = useCallback(\n  (controlsChanged) => {\n    const newQueryFormData = controlsChanged ?\n    {\n      ...props.chart.latestQueryFormData,\n      ...getFormDataFromControls(_pick(props.controls, controlsChanged)) } :\n\n    getFormDataFromControls(props.controls);\n    props.actions.updateQueryFormData(newQueryFormData, props.chart.id);\n    props.actions.renderTriggered(new Date().getTime(), props.chart.id);\n    addHistory();\n  },\n  [\n  addHistory,\n  props.actions,\n  props.chart.id,\n  props.chart.latestQueryFormData,\n  props.controls]);\n\n\n\n  // effect to run when controls change\n  useEffect(() => {\n    if (\n    previousControls &&\n    props.chart.latestQueryFormData.viz_type === props.controls.viz_type.value)\n    {\n      if (\n      props.controls.datasource && (\n      previousControls.datasource == null ||\n      props.controls.datasource.value !== previousControls.datasource.value))\n      {\n        // this should really be handled by actions\n        fetchDatasourceMetadata(props.form_data.datasource, true);\n      }\n\n      const changedControlKeys = Object.keys(props.controls).filter(\n      (key) =>\n      typeof previousControls[key] !== 'undefined' &&\n      !areObjectsEqual(\n      props.controls[key].value,\n      previousControls[key].value));\n\n\n\n      // this should also be handled by the actions that are actually changing the controls\n      const displayControlsChanged = changedControlKeys.filter(\n      (key) => props.controls[key].renderTrigger);\n\n      if (displayControlsChanged.length > 0) {\n        reRenderChart(displayControlsChanged);\n      }\n    }\n  }, [props.controls, props.ownState]);\n\n  const chartIsStale = useMemo(() => {\n    if (lastQueriedControls) {\n      const changedControlKeys = Object.keys(props.controls).filter(\n      (key) =>\n      typeof lastQueriedControls[key] !== 'undefined' &&\n      !areObjectsEqual(\n      props.controls[key].value,\n      lastQueriedControls[key].value,\n      { ignoreFields: ['datasourceWarning'] }));\n\n\n\n      return changedControlKeys.some(\n      (key) =>\n      !props.controls[key].renderTrigger &&\n      !props.controls[key].dontRefreshOnChange);\n\n    }\n    return false;\n  }, [lastQueriedControls, props.controls]);\n\n  useChangeEffect(props.saveAction, () => {var _context;\n    if (_includesInstanceProperty(_context = ['saveas', 'overwrite']).call(_context, props.saveAction)) {\n      onQuery();\n      addHistory({ isReplace: true });\n      props.actions.setSaveAction(null);\n    }\n  });\n\n  useEffect(() => {\n    if (props.ownState !== undefined) {\n      onQuery();\n      reRenderChart();\n    }\n  }, [props.ownState]);\n\n  if (chartIsStale) {\n    props.actions.logEvent(LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS);\n  }\n\n  const errorMessage = useMemo(() => {\n    const controlsWithErrors = Object.values(props.controls).filter(\n    (control) =>\n    control.validationErrors && control.validationErrors.length > 0);\n\n    if (controlsWithErrors.length === 0) {\n      return null;\n    }\n\n    const errorMessages = controlsWithErrors.map(\n    (control) => control.validationErrors);\n\n    const uniqueErrorMessages = [...new Set(errorMessages.flat())];\n\n    const errors = uniqueErrorMessages.\n    map((message) => {\n      const matchingLabels = controlsWithErrors.\n      filter((control) => {var _control$validationEr;return (_control$validationEr = control.validationErrors) == null ? void 0 : _includesInstanceProperty(_control$validationEr).call(_control$validationEr, message);}).\n      map((control) => control.label);\n      return [matchingLabels, message];\n    }).\n    map((_ref4) => {let [labels, message] = _ref4;return (\n        ___EmotionJSX(\"div\", { key: message },\n        labels.length > 1 ? t('Controls labeled ') : t('Control labeled '),\n        ___EmotionJSX(\"strong\", null, ` ${labels.join(', ')}`),\n        ___EmotionJSX(\"span\", null, \": \", message)));});\n\n\n\n    let errorMessage;\n    if (errors.length > 0) {\n      errorMessage = ___EmotionJSX(\"div\", { style: { textAlign: 'left' } }, errors);\n    }\n    return errorMessage;\n  }, [props.controls]);\n\n  function renderChartContainer() {\n    return (\n      ___EmotionJSX(ExploreChartPanel, _extends({},\n      props, {\n        errorMessage: errorMessage,\n        chartIsStale: chartIsStale,\n        onQuery: onQuery })));\n\n\n  }\n\n  function getSidebarWidths(key) {\n    return getItem(key, defaultSidebarsWidth[key]);\n  }\n\n  function setSidebarWidths(key, dimension) {\n    const newDimension = Number(getSidebarWidths(key)) + dimension.width;\n    setItem(key, newDimension);\n  }\n\n  if (props.standalone) {\n    return renderChartContainer();\n  }\n\n  return (\n    ___EmotionJSX(ExploreContainer, null,\n    ___EmotionJSX(ConnectedExploreChartHeader, {\n      actions: props.actions,\n      canOverwrite: props.can_overwrite,\n      canDownload: props.can_download,\n      dashboardId: props.dashboardId,\n      isStarred: props.isStarred,\n      slice: props.slice,\n      sliceName: props.sliceName,\n      table_name: props.table_name,\n      formData: props.form_data,\n      chart: props.chart,\n      ownState: props.ownState,\n      user: props.user,\n      reports: props.reports,\n      saveDisabled: errorMessage || props.chart.chartStatus === 'loading',\n      metadata: props.metadata }),\n\n    ___EmotionJSX(ExplorePanelContainer, { id: \"explore-container\" },\n    ___EmotionJSX(Global, {\n      styles: css`\n            .navbar {\n              margin-bottom: 0;\n            }\n            body {\n              height: 100vh;\n              max-height: 100vh;\n              overflow: hidden;\n            }\n            #app-menu,\n            #app {\n              flex: 1 1 auto;\n            }\n            #app {\n              flex-basis: 100%;\n              overflow: hidden;\n              height: 100%;\n            }\n            #app-menu {\n              flex-shrink: 0;\n            }\n          ` }),\n\n    ___EmotionJSX(Resizable, {\n      onResizeStop: (evt, direction, ref, d) => {\n        setShouldForceUpdate(d == null ? void 0 : d.width);\n        setSidebarWidths(LocalStorageKeys.datasource_width, d);\n      },\n      defaultSize: {\n        width: getSidebarWidths(LocalStorageKeys.datasource_width),\n        height: '100%' },\n\n      minWidth: defaultSidebarsWidth[LocalStorageKeys.datasource_width],\n      maxWidth: \"33%\",\n      enable: { right: true },\n      className:\n      isCollapsed ? 'no-show' : 'explore-column data-source-selection' },\n\n\n    ___EmotionJSX(\"div\", { className: \"title-container\" },\n    ___EmotionJSX(\"span\", { className: \"horizontal-text\" }, t('Chart Source')),\n    ___EmotionJSX(\"span\", {\n      role: \"button\",\n      tabIndex: 0,\n      className: \"action-button\",\n      onClick: toggleCollapse },\n\n    ___EmotionJSX(Icons.Expand, {\n      className: \"collapse-icon\",\n      iconColor: theme.colors.primary.base,\n      iconSize: \"l\" }))),\n\n\n\n    ___EmotionJSX(DataSourcePanel, {\n      formData: props.form_data,\n      datasource: props.datasource,\n      controls: props.controls,\n      actions: props.actions,\n      shouldForceUpdate: shouldForceUpdate,\n      user: props.user })),\n\n\n    isCollapsed ?\n    ___EmotionJSX(\"div\", {\n      className: \"sidebar\",\n      onClick: toggleCollapse,\n      \"data-test\": \"open-datasource-tab\",\n      role: \"button\",\n      tabIndex: 0 },\n\n    ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\" },\n    ___EmotionJSX(Tooltip, { title: t('Open Datasource tab') },\n    ___EmotionJSX(Icons.Collapse, {\n      className: \"collapse-icon\",\n      iconColor: theme.colors.primary.base,\n      iconSize: \"l\" })))) :\n\n\n\n\n    null,\n    ___EmotionJSX(Resizable, {\n      onResizeStop: (evt, direction, ref, d) =>\n      setSidebarWidths(LocalStorageKeys.controls_width, d),\n\n      defaultSize: {\n        width: getSidebarWidths(LocalStorageKeys.controls_width),\n        height: '100%' },\n\n      minWidth: defaultSidebarsWidth[LocalStorageKeys.controls_width],\n      maxWidth: \"33%\",\n      enable: { right: true },\n      className: \"col-sm-3 explore-column controls-column\" },\n\n    ___EmotionJSX(ConnectedControlPanelsContainer, {\n      exploreState: props.exploreState,\n      actions: props.actions,\n      form_data: props.form_data,\n      controls: props.controls,\n      chart: props.chart,\n      datasource_type: props.datasource_type,\n      isDatasourceMetaLoading: props.isDatasourceMetaLoading,\n      onQuery: onQuery,\n      onStop: onStop,\n      canStopQuery: props.can_add || props.can_overwrite,\n      errorMessage: errorMessage,\n      chartIsStale: chartIsStale })),\n\n\n    ___EmotionJSX(\"div\", {\n      className: cx(\n      'main-explore-content',\n      isCollapsed ? 'col-sm-9' : 'col-sm-7') },\n\n\n    renderChartContainer())),\n\n\n    props.isSaveModalVisible &&\n    ___EmotionJSX(SaveModal, {\n      addDangerToast: props.addDangerToast,\n      actions: props.actions,\n      form_data: props.form_data,\n      sliceName: props.sliceName,\n      dashboardId: props.dashboardId })));\n\n\n\n\n}__signature__(ExploreViewContainer, \"usePluginContext{dynamicPluginContext}\\nusePrevious{wasDynamicPluginLoading}\\nusePrevious{previousControls}\\nuseState{[lastQueriedControls, setLastQueriedControls](props.controls)}\\nuseState{[isCollapsed, setIsCollapsed](false)}\\nuseState{[shouldForceUpdate, setShouldForceUpdate](-1)}\\nuseTabId{tabId}\\nuseTheme{theme}\\nuseCallback{addHistory}\\nuseCallback{handlePopstate}\\nuseCallback{onQuery}\\nuseCallback{handleKeydown}\\nuseComponentDidMount{}\\nuseChangeEffect{}\\nusePrevious{previousHandlePopstate}\\nuseEffect{}\\nusePrevious{previousHandleKeyDown}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\\nuseCallback{reRenderChart}\\nuseEffect{}\\nuseMemo{chartIsStale}\\nuseChangeEffect{}\\nuseEffect{}\\nuseMemo{errorMessage}\", () => [usePluginContext, usePrevious, usePrevious, useTabId, useTheme, useComponentDidMount, useChangeEffect, usePrevious, usePrevious, useChangeEffect]);\n\nExploreViewContainer.propTypes = propTypes;\n\nfunction mapStateToProps(state) {var _ref5, _form_data$slice_id, _dataMask$slice_id, _explore$form_data, _datasource$column_fo, _ref6, _explore$sliceName, _dataMask$slice_id2;\n  const {\n    explore,\n    charts,\n    common,\n    impressionId,\n    dataMask,\n    reports,\n    user,\n    saveModal } =\n  state;\n  const { controls, slice, datasource, metadata } = explore;\n  const form_data = getFormDataFromControls(controls);\n  const slice_id = (_ref5 = (_form_data$slice_id = form_data.slice_id) != null ? _form_data$slice_id : slice == null ? void 0 : slice.slice_id) != null ? _ref5 : 0; // 0 - unsaved chart\n  form_data.extra_form_data = mergeExtraFormData(\n  { ...form_data.extra_form_data },\n  {\n    ...((_dataMask$slice_id = dataMask[slice_id]) == null ? void 0 : _dataMask$slice_id.ownState) });\n\n\n  const chart = charts[slice_id];\n\n  let dashboardId = Number((_explore$form_data = explore.form_data) == null ? void 0 : _explore$form_data.dashboardId);\n  if (Number.isNaN(dashboardId)) {\n    dashboardId = undefined;\n  }\n\n  return {\n    isDatasourceMetaLoading: explore.isDatasourceMetaLoading,\n    datasource,\n    datasource_type: datasource.type,\n    datasourceId: datasource.datasource_id,\n    dashboardId,\n    controls: explore.controls,\n    can_add: !!explore.can_add,\n    can_download: !!explore.can_download,\n    can_overwrite: !!explore.can_overwrite,\n    column_formats: (_datasource$column_fo = datasource == null ? void 0 : datasource.column_formats) != null ? _datasource$column_fo : null,\n    containerId: slice ?\n    `slice-container-${slice.slice_id}` :\n    'slice-container',\n    isStarred: explore.isStarred,\n    slice,\n    sliceName: (_ref6 = (_explore$sliceName = explore.sliceName) != null ? _explore$sliceName : slice == null ? void 0 : slice.slice_name) != null ? _ref6 : null,\n    triggerRender: explore.triggerRender,\n    form_data,\n    table_name: datasource.table_name,\n    vizType: form_data.viz_type,\n    standalone: !!explore.standalone,\n    force: !!explore.force,\n    chart,\n    timeout: common.conf.SUPERSET_WEBSERVER_TIMEOUT,\n    ownState: (_dataMask$slice_id2 = dataMask[slice_id]) == null ? void 0 : _dataMask$slice_id2.ownState,\n    impressionId,\n    user,\n    exploreState: explore,\n    reports,\n    metadata,\n    saveAction: explore.saveAction,\n    isSaveModalVisible: saveModal.isVisible };\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const actions = {\n    ...exploreActions,\n    ...datasourcesActions,\n    ...saveModalActions,\n    ...chartActions,\n    ...logActions };\n\n  return {\n    actions: bindActionCreators(actions, dispatch) };\n\n}const _default =\n\nconnect(\nmapStateToProps,\nmapDispatchToProps)(\nwithToasts( /*#__PURE__*/React.memo(ExploreViewContainer)));export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");reactHotLoader.register(ExploreContainer, \"ExploreContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");reactHotLoader.register(ExplorePanelContainer, \"ExplorePanelContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");reactHotLoader.register(updateHistory, \"updateHistory\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");reactHotLoader.register(ExploreViewContainer, \"ExploreViewContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","PropTypes","bindActionCreators","connect","styled","t","css","useTheme","logging","useChangeEffect","useComponentDidMount","usePrevious","Resizable","usePluginContext","Global","Tooltip","Icons","getItem","setItem","LocalStorageKeys","RESERVED_CHART_URL_PARAMS","URL_PARAMS","areObjectsEqual","logActions","LOG_ACTIONS_MOUNT_EXPLORER","LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS","getUrlParam","cx","chartActions","fetchDatasourceMetadata","chartPropShape","mergeExtraFormData","postFormData","putFormData","datasourcesActions","mountExploreUrl","getFormDataFromControls","exploreActions","saveModalActions","useTabId","withToasts","ExploreChartPanel","ConnectedControlPanelsContainer","SaveModal","DataSourcePanel","ConnectedExploreChartHeader","propTypes","actions","object","isRequired","datasource_type","string","dashboardId","number","isDatasourceMetaLoading","bool","chart","slice","sliceName","controls","forcedHeight","form_data","standalone","force","timeout","impressionId","vizType","saveAction","isSaveModalVisible","ExploreContainer","div","ExplorePanelContainer","theme","colors","grayscale","light5","light2","gridUnit","typography","sizes","m","light4","primary","base","updateHistory","formData","datasourceId","datasourceType","isReplace","title","tabId","payload","chartId","slice_id","params","URLSearchParams","window","location","search","additionalParam","Object","fromEntries","sliceId","name","urlParams","url_params","entries","forEach","key","value","stateModifier","formDataKey","pathname","startsWith","url","history","e","warn","ExploreViewContainer","props","dynamicPluginContext","dynamicPlugin","dynamicPlugins","isDynamicPluginLoading","mounting","wasDynamicPluginLoading","previousControls","lastQueriedControls","setLastQueriedControls","isCollapsed","setIsCollapsed","shouldForceUpdate","setShouldForceUpdate","defaultSidebarsWidth","controls_width","datasource_width","addHistory","id","type","datasource","handlePopstate","state","keys","length","setExploreControls","postChartFormData","onQuery","setForceQuery","triggerQuery","handleKeydown","event","controlOrCommand","ctrlKey","metaKey","isEnter","keyCode","isS","saveSlice","action","slice_name","add_to_dash","goto_dash","then","data","slice_url","onStop","queryController","abort","toggleCollapse","logEvent","previous","current","previousHandlePopstate","removeEventListener","addEventListener","previousHandleKeyDown","document","dynamicPluginControlsReady","hasError","values","some","control","validationErrors","reRenderChart","controlsChanged","newQueryFormData","latestQueryFormData","updateQueryFormData","renderTriggered","Date","getTime","viz_type","changedControlKeys","filter","displayControlsChanged","renderTrigger","ownState","chartIsStale","ignoreFields","dontRefreshOnChange","setSaveAction","undefined","errorMessage","controlsWithErrors","errorMessages","map","uniqueErrorMessages","Set","flat","errors","message","matchingLabels","label","labels","join","textAlign","renderChartContainer","getSidebarWidths","setSidebarWidths","dimension","newDimension","Number","width","can_overwrite","can_download","isStarred","table_name","user","reports","chartStatus","metadata","evt","direction","ref","d","height","right","exploreState","can_add","addDangerToast","mapStateToProps","explore","charts","common","dataMask","saveModal","extra_form_data","isNaN","datasource_id","column_formats","containerId","triggerRender","conf","SUPERSET_WEBSERVER_TIMEOUT","isVisible","mapDispatchToProps","dispatch","memo"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n  styled,\n  t,\n  css,\n  useTheme,\n  logging,\n  useChangeEffect,\n  useComponentDidMount,\n  usePrevious,\n} from '@superset-ui/core';\nimport { debounce, pick } from 'lodash';\nimport { Resizable } from 're-resizable';\nimport { usePluginContext } from 'src/components/DynamicPlugins';\nimport { Global } from '@emotion/react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport {\n  getItem,\n  setItem,\n  LocalStorageKeys,\n} from 'src/utils/localStorageHelpers';\nimport { RESERVED_CHART_URL_PARAMS, URL_PARAMS } from 'src/constants';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport * as logActions from 'src/logger/actions';\nimport {\n  LOG_ACTIONS_MOUNT_EXPLORER,\n  LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS,\n} from 'src/logger/LogUtils';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport cx from 'classnames';\nimport * as chartActions from 'src/components/Chart/chartAction';\nimport { fetchDatasourceMetadata } from 'src/dashboard/actions/datasources';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport { mergeExtraFormData } from 'src/dashboard/components/nativeFilters/utils';\nimport { postFormData, putFormData } from 'src/explore/exploreUtils/formData';\nimport { datasourcesActions } from 'src/explore/actions/datasourcesActions';\nimport { mountExploreUrl } from 'src/explore/exploreUtils';\nimport { getFormDataFromControls } from 'src/explore/controlUtils';\nimport * as exploreActions from 'src/explore/actions/exploreActions';\nimport * as saveModalActions from 'src/explore/actions/saveModalActions';\nimport { useTabId } from 'src/hooks/useTabId';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport ExploreChartPanel from '../ExploreChartPanel';\nimport ConnectedControlPanelsContainer from '../ControlPanelsContainer';\nimport SaveModal from '../SaveModal';\nimport DataSourcePanel from '../DatasourcePanel';\nimport ConnectedExploreChartHeader from '../ExploreChartHeader';\n\nconst propTypes = {\n  ...ExploreChartPanel.propTypes,\n  actions: PropTypes.object.isRequired,\n  datasource_type: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number,\n  isDatasourceMetaLoading: PropTypes.bool.isRequired,\n  chart: chartPropShape.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  controls: PropTypes.object.isRequired,\n  forcedHeight: PropTypes.string,\n  form_data: PropTypes.object.isRequired,\n  standalone: PropTypes.bool.isRequired,\n  force: PropTypes.bool,\n  timeout: PropTypes.number,\n  impressionId: PropTypes.string,\n  vizType: PropTypes.string,\n  saveAction: PropTypes.string,\n  isSaveModalVisible: PropTypes.bool,\n};\n\nconst ExploreContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  min-height: 0;\n`;\n\nconst ExplorePanelContainer = styled.div`\n  ${({ theme }) => css`\n    background: ${theme.colors.grayscale.light5};\n    text-align: left;\n    position: relative;\n    width: 100%;\n    max-height: 100%;\n    min-height: 0;\n    display: flex;\n    flex: 1;\n    flex-wrap: nowrap;\n    border-top: 1px solid ${theme.colors.grayscale.light2};\n    .explore-column {\n      display: flex;\n      flex-direction: column;\n      padding: ${theme.gridUnit * 2}px 0;\n      max-height: 100%;\n    }\n    .data-source-selection {\n      background-color: ${theme.colors.grayscale.light5};\n      padding: ${theme.gridUnit * 2}px 0;\n      border-right: 1px solid ${theme.colors.grayscale.light2};\n    }\n    .main-explore-content {\n      flex: 1;\n      min-width: ${theme.gridUnit * 128}px;\n      border-left: 1px solid ${theme.colors.grayscale.light2};\n      padding: 0 ${theme.gridUnit * 4}px;\n      .panel {\n        margin-bottom: 0;\n      }\n    }\n    .controls-column {\n      align-self: flex-start;\n      padding: 0;\n    }\n    .title-container {\n      position: relative;\n      display: flex;\n      flex-direction: row;\n      padding: 0 ${theme.gridUnit * 2}px 0 ${theme.gridUnit * 4}px;\n      justify-content: space-between;\n      .horizontal-text {\n        font-size: ${theme.typography.sizes.m}px;\n      }\n    }\n    .no-show {\n      display: none;\n    }\n    .vertical-text {\n      writing-mode: vertical-rl;\n      text-orientation: mixed;\n    }\n    .sidebar {\n      height: 100%;\n      background-color: ${theme.colors.grayscale.light4};\n      padding: ${theme.gridUnit * 2}px;\n      width: ${theme.gridUnit * 8}px;\n    }\n    .collapse-icon > svg {\n      color: ${theme.colors.primary.base};\n    }\n  `};\n`;\n\nconst updateHistory = debounce(\n  async (\n    formData,\n    datasourceId,\n    datasourceType,\n    isReplace,\n    standalone,\n    force,\n    title,\n    tabId,\n  ) => {\n    const payload = { ...formData };\n    const chartId = formData.slice_id;\n    const params = new URLSearchParams(window.location.search);\n    const additionalParam = Object.fromEntries(params);\n\n    if (chartId) {\n      additionalParam[URL_PARAMS.sliceId.name] = chartId;\n    } else {\n      additionalParam[URL_PARAMS.datasourceId.name] = datasourceId;\n      additionalParam[URL_PARAMS.datasourceType.name] = datasourceType;\n    }\n\n    const urlParams = payload?.url_params || {};\n    Object.entries(urlParams).forEach(([key, value]) => {\n      if (!RESERVED_CHART_URL_PARAMS.includes(key)) {\n        additionalParam[key] = value;\n      }\n    });\n\n    try {\n      let key;\n      let stateModifier;\n      if (isReplace) {\n        key = await postFormData(\n          datasourceId,\n          datasourceType,\n          formData,\n          chartId,\n          tabId,\n        );\n        stateModifier = 'replaceState';\n      } else {\n        key = getUrlParam(URL_PARAMS.formDataKey);\n        await putFormData(\n          datasourceId,\n          datasourceType,\n          key,\n          formData,\n          chartId,\n          tabId,\n        );\n        stateModifier = 'pushState';\n      }\n      // avoid race condition in case user changes route before explore updates the url\n      if (window.location.pathname.startsWith('/explore')) {\n        const url = mountExploreUrl(\n          standalone ? URL_PARAMS.standalone.name : null,\n          {\n            [URL_PARAMS.formDataKey.name]: key,\n            ...additionalParam,\n          },\n          force,\n        );\n        window.history[stateModifier](payload, title, url);\n      }\n    } catch (e) {\n      logging.warn('Failed at altering browser history', e);\n    }\n  },\n  1000,\n);\n\nfunction ExploreViewContainer(props) {\n  const dynamicPluginContext = usePluginContext();\n  const dynamicPlugin = dynamicPluginContext.dynamicPlugins[props.vizType];\n  const isDynamicPluginLoading = dynamicPlugin && dynamicPlugin.mounting;\n  const wasDynamicPluginLoading = usePrevious(isDynamicPluginLoading);\n\n  /** the state of controls in the previous render */\n  const previousControls = usePrevious(props.controls);\n  /** the state of controls last time a query was triggered */\n  const [lastQueriedControls, setLastQueriedControls] = useState(\n    props.controls,\n  );\n\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [shouldForceUpdate, setShouldForceUpdate] = useState(-1);\n  const tabId = useTabId();\n\n  const theme = useTheme();\n\n  const defaultSidebarsWidth = {\n    controls_width: 320,\n    datasource_width: 300,\n  };\n\n  const addHistory = useCallback(\n    async ({ isReplace = false, title } = {}) => {\n      const formData = props.dashboardId\n        ? {\n            ...props.form_data,\n            dashboardId: props.dashboardId,\n          }\n        : props.form_data;\n      const { id: datasourceId, type: datasourceType } = props.datasource;\n\n      updateHistory(\n        formData,\n        datasourceId,\n        datasourceType,\n        isReplace,\n        props.standalone,\n        props.force,\n        title,\n        tabId,\n      );\n    },\n    [\n      props.dashboardId,\n      props.form_data,\n      props.datasource.id,\n      props.datasource.type,\n      props.standalone,\n      props.force,\n      tabId,\n    ],\n  );\n\n  const handlePopstate = useCallback(() => {\n    const formData = window.history.state;\n    if (formData && Object.keys(formData).length) {\n      props.actions.setExploreControls(formData);\n      props.actions.postChartFormData(\n        formData,\n        props.force,\n        props.timeout,\n        props.chart.id,\n      );\n    }\n  }, [props.actions, props.chart.id, props.timeout]);\n\n  const onQuery = useCallback(() => {\n    props.actions.setForceQuery(false);\n    props.actions.triggerQuery(true, props.chart.id);\n    addHistory();\n    setLastQueriedControls(props.controls);\n  }, [props.controls, addHistory, props.actions, props.chart.id]);\n\n  const handleKeydown = useCallback(\n    event => {\n      const controlOrCommand = event.ctrlKey || event.metaKey;\n      if (controlOrCommand) {\n        const isEnter = event.key === 'Enter' || event.keyCode === 13;\n        const isS = event.key === 's' || event.keyCode === 83;\n        if (isEnter) {\n          onQuery();\n        } else if (isS) {\n          if (props.slice) {\n            props.actions\n              .saveSlice(props.form_data, {\n                action: 'overwrite',\n                slice_id: props.slice.slice_id,\n                slice_name: props.slice.slice_name,\n                add_to_dash: 'noSave',\n                goto_dash: false,\n              })\n              .then(({ data }) => {\n                window.location = data.slice.slice_url;\n              });\n          }\n        }\n      }\n    },\n    [onQuery, props.actions, props.form_data, props.slice],\n  );\n\n  function onStop() {\n    if (props.chart && props.chart.queryController) {\n      props.chart.queryController.abort();\n    }\n  }\n\n  function toggleCollapse() {\n    setIsCollapsed(!isCollapsed);\n  }\n\n  useComponentDidMount(() => {\n    props.actions.logEvent(LOG_ACTIONS_MOUNT_EXPLORER);\n  });\n\n  useChangeEffect(tabId, (previous, current) => {\n    if (current) {\n      addHistory({ isReplace: true });\n    }\n  });\n\n  const previousHandlePopstate = usePrevious(handlePopstate);\n  useEffect(() => {\n    if (previousHandlePopstate) {\n      window.removeEventListener('popstate', previousHandlePopstate);\n    }\n    window.addEventListener('popstate', handlePopstate);\n    return () => {\n      window.removeEventListener('popstate', handlePopstate);\n    };\n  }, [handlePopstate, previousHandlePopstate]);\n\n  const previousHandleKeyDown = usePrevious(handleKeydown);\n  useEffect(() => {\n    if (previousHandleKeyDown) {\n      window.removeEventListener('keydown', previousHandleKeyDown);\n    }\n    document.addEventListener('keydown', handleKeydown);\n    return () => {\n      document.removeEventListener('keydown', handleKeydown);\n    };\n  }, [handleKeydown, previousHandleKeyDown]);\n\n  useEffect(() => {\n    if (wasDynamicPluginLoading && !isDynamicPluginLoading) {\n      // reload the controls now that we actually have the control config\n      props.actions.dynamicPluginControlsReady();\n    }\n  }, [isDynamicPluginLoading]);\n\n  useEffect(() => {\n    const hasError = Object.values(props.controls).some(\n      control =>\n        control.validationErrors && control.validationErrors.length > 0,\n    );\n    if (!hasError) {\n      props.actions.triggerQuery(true, props.chart.id);\n    }\n  }, []);\n\n  const reRenderChart = useCallback(\n    controlsChanged => {\n      const newQueryFormData = controlsChanged\n        ? {\n            ...props.chart.latestQueryFormData,\n            ...getFormDataFromControls(pick(props.controls, controlsChanged)),\n          }\n        : getFormDataFromControls(props.controls);\n      props.actions.updateQueryFormData(newQueryFormData, props.chart.id);\n      props.actions.renderTriggered(new Date().getTime(), props.chart.id);\n      addHistory();\n    },\n    [\n      addHistory,\n      props.actions,\n      props.chart.id,\n      props.chart.latestQueryFormData,\n      props.controls,\n    ],\n  );\n\n  // effect to run when controls change\n  useEffect(() => {\n    if (\n      previousControls &&\n      props.chart.latestQueryFormData.viz_type === props.controls.viz_type.value\n    ) {\n      if (\n        props.controls.datasource &&\n        (previousControls.datasource == null ||\n          props.controls.datasource.value !== previousControls.datasource.value)\n      ) {\n        // this should really be handled by actions\n        fetchDatasourceMetadata(props.form_data.datasource, true);\n      }\n\n      const changedControlKeys = Object.keys(props.controls).filter(\n        key =>\n          typeof previousControls[key] !== 'undefined' &&\n          !areObjectsEqual(\n            props.controls[key].value,\n            previousControls[key].value,\n          ),\n      );\n\n      // this should also be handled by the actions that are actually changing the controls\n      const displayControlsChanged = changedControlKeys.filter(\n        key => props.controls[key].renderTrigger,\n      );\n      if (displayControlsChanged.length > 0) {\n        reRenderChart(displayControlsChanged);\n      }\n    }\n  }, [props.controls, props.ownState]);\n\n  const chartIsStale = useMemo(() => {\n    if (lastQueriedControls) {\n      const changedControlKeys = Object.keys(props.controls).filter(\n        key =>\n          typeof lastQueriedControls[key] !== 'undefined' &&\n          !areObjectsEqual(\n            props.controls[key].value,\n            lastQueriedControls[key].value,\n            { ignoreFields: ['datasourceWarning'] },\n          ),\n      );\n\n      return changedControlKeys.some(\n        key =>\n          !props.controls[key].renderTrigger &&\n          !props.controls[key].dontRefreshOnChange,\n      );\n    }\n    return false;\n  }, [lastQueriedControls, props.controls]);\n\n  useChangeEffect(props.saveAction, () => {\n    if (['saveas', 'overwrite'].includes(props.saveAction)) {\n      onQuery();\n      addHistory({ isReplace: true });\n      props.actions.setSaveAction(null);\n    }\n  });\n\n  useEffect(() => {\n    if (props.ownState !== undefined) {\n      onQuery();\n      reRenderChart();\n    }\n  }, [props.ownState]);\n\n  if (chartIsStale) {\n    props.actions.logEvent(LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS);\n  }\n\n  const errorMessage = useMemo(() => {\n    const controlsWithErrors = Object.values(props.controls).filter(\n      control =>\n        control.validationErrors && control.validationErrors.length > 0,\n    );\n    if (controlsWithErrors.length === 0) {\n      return null;\n    }\n\n    const errorMessages = controlsWithErrors.map(\n      control => control.validationErrors,\n    );\n    const uniqueErrorMessages = [...new Set(errorMessages.flat())];\n\n    const errors = uniqueErrorMessages\n      .map(message => {\n        const matchingLabels = controlsWithErrors\n          .filter(control => control.validationErrors?.includes(message))\n          .map(control => control.label);\n        return [matchingLabels, message];\n      })\n      .map(([labels, message]) => (\n        <div key={message}>\n          {labels.length > 1 ? t('Controls labeled ') : t('Control labeled ')}\n          <strong>{` ${labels.join(', ')}`}</strong>\n          <span>: {message}</span>\n        </div>\n      ));\n\n    let errorMessage;\n    if (errors.length > 0) {\n      errorMessage = <div style={{ textAlign: 'left' }}>{errors}</div>;\n    }\n    return errorMessage;\n  }, [props.controls]);\n\n  function renderChartContainer() {\n    return (\n      <ExploreChartPanel\n        {...props}\n        errorMessage={errorMessage}\n        chartIsStale={chartIsStale}\n        onQuery={onQuery}\n      />\n    );\n  }\n\n  function getSidebarWidths(key) {\n    return getItem(key, defaultSidebarsWidth[key]);\n  }\n\n  function setSidebarWidths(key, dimension) {\n    const newDimension = Number(getSidebarWidths(key)) + dimension.width;\n    setItem(key, newDimension);\n  }\n\n  if (props.standalone) {\n    return renderChartContainer();\n  }\n\n  return (\n    <ExploreContainer>\n      <ConnectedExploreChartHeader\n        actions={props.actions}\n        canOverwrite={props.can_overwrite}\n        canDownload={props.can_download}\n        dashboardId={props.dashboardId}\n        isStarred={props.isStarred}\n        slice={props.slice}\n        sliceName={props.sliceName}\n        table_name={props.table_name}\n        formData={props.form_data}\n        chart={props.chart}\n        ownState={props.ownState}\n        user={props.user}\n        reports={props.reports}\n        saveDisabled={errorMessage || props.chart.chartStatus === 'loading'}\n        metadata={props.metadata}\n      />\n      <ExplorePanelContainer id=\"explore-container\">\n        <Global\n          styles={css`\n            .navbar {\n              margin-bottom: 0;\n            }\n            body {\n              height: 100vh;\n              max-height: 100vh;\n              overflow: hidden;\n            }\n            #app-menu,\n            #app {\n              flex: 1 1 auto;\n            }\n            #app {\n              flex-basis: 100%;\n              overflow: hidden;\n              height: 100%;\n            }\n            #app-menu {\n              flex-shrink: 0;\n            }\n          `}\n        />\n        <Resizable\n          onResizeStop={(evt, direction, ref, d) => {\n            setShouldForceUpdate(d?.width);\n            setSidebarWidths(LocalStorageKeys.datasource_width, d);\n          }}\n          defaultSize={{\n            width: getSidebarWidths(LocalStorageKeys.datasource_width),\n            height: '100%',\n          }}\n          minWidth={defaultSidebarsWidth[LocalStorageKeys.datasource_width]}\n          maxWidth=\"33%\"\n          enable={{ right: true }}\n          className={\n            isCollapsed ? 'no-show' : 'explore-column data-source-selection'\n          }\n        >\n          <div className=\"title-container\">\n            <span className=\"horizontal-text\">{t('Chart Source')}</span>\n            <span\n              role=\"button\"\n              tabIndex={0}\n              className=\"action-button\"\n              onClick={toggleCollapse}\n            >\n              <Icons.Expand\n                className=\"collapse-icon\"\n                iconColor={theme.colors.primary.base}\n                iconSize=\"l\"\n              />\n            </span>\n          </div>\n          <DataSourcePanel\n            formData={props.form_data}\n            datasource={props.datasource}\n            controls={props.controls}\n            actions={props.actions}\n            shouldForceUpdate={shouldForceUpdate}\n            user={props.user}\n          />\n        </Resizable>\n        {isCollapsed ? (\n          <div\n            className=\"sidebar\"\n            onClick={toggleCollapse}\n            data-test=\"open-datasource-tab\"\n            role=\"button\"\n            tabIndex={0}\n          >\n            <span role=\"button\" tabIndex={0} className=\"action-button\">\n              <Tooltip title={t('Open Datasource tab')}>\n                <Icons.Collapse\n                  className=\"collapse-icon\"\n                  iconColor={theme.colors.primary.base}\n                  iconSize=\"l\"\n                />\n              </Tooltip>\n            </span>\n          </div>\n        ) : null}\n        <Resizable\n          onResizeStop={(evt, direction, ref, d) =>\n            setSidebarWidths(LocalStorageKeys.controls_width, d)\n          }\n          defaultSize={{\n            width: getSidebarWidths(LocalStorageKeys.controls_width),\n            height: '100%',\n          }}\n          minWidth={defaultSidebarsWidth[LocalStorageKeys.controls_width]}\n          maxWidth=\"33%\"\n          enable={{ right: true }}\n          className=\"col-sm-3 explore-column controls-column\"\n        >\n          <ConnectedControlPanelsContainer\n            exploreState={props.exploreState}\n            actions={props.actions}\n            form_data={props.form_data}\n            controls={props.controls}\n            chart={props.chart}\n            datasource_type={props.datasource_type}\n            isDatasourceMetaLoading={props.isDatasourceMetaLoading}\n            onQuery={onQuery}\n            onStop={onStop}\n            canStopQuery={props.can_add || props.can_overwrite}\n            errorMessage={errorMessage}\n            chartIsStale={chartIsStale}\n          />\n        </Resizable>\n        <div\n          className={cx(\n            'main-explore-content',\n            isCollapsed ? 'col-sm-9' : 'col-sm-7',\n          )}\n        >\n          {renderChartContainer()}\n        </div>\n      </ExplorePanelContainer>\n      {props.isSaveModalVisible && (\n        <SaveModal\n          addDangerToast={props.addDangerToast}\n          actions={props.actions}\n          form_data={props.form_data}\n          sliceName={props.sliceName}\n          dashboardId={props.dashboardId}\n        />\n      )}\n    </ExploreContainer>\n  );\n}\n\nExploreViewContainer.propTypes = propTypes;\n\nfunction mapStateToProps(state) {\n  const {\n    explore,\n    charts,\n    common,\n    impressionId,\n    dataMask,\n    reports,\n    user,\n    saveModal,\n  } = state;\n  const { controls, slice, datasource, metadata } = explore;\n  const form_data = getFormDataFromControls(controls);\n  const slice_id = form_data.slice_id ?? slice?.slice_id ?? 0; // 0 - unsaved chart\n  form_data.extra_form_data = mergeExtraFormData(\n    { ...form_data.extra_form_data },\n    {\n      ...dataMask[slice_id]?.ownState,\n    },\n  );\n  const chart = charts[slice_id];\n\n  let dashboardId = Number(explore.form_data?.dashboardId);\n  if (Number.isNaN(dashboardId)) {\n    dashboardId = undefined;\n  }\n\n  return {\n    isDatasourceMetaLoading: explore.isDatasourceMetaLoading,\n    datasource,\n    datasource_type: datasource.type,\n    datasourceId: datasource.datasource_id,\n    dashboardId,\n    controls: explore.controls,\n    can_add: !!explore.can_add,\n    can_download: !!explore.can_download,\n    can_overwrite: !!explore.can_overwrite,\n    column_formats: datasource?.column_formats ?? null,\n    containerId: slice\n      ? `slice-container-${slice.slice_id}`\n      : 'slice-container',\n    isStarred: explore.isStarred,\n    slice,\n    sliceName: explore.sliceName ?? slice?.slice_name ?? null,\n    triggerRender: explore.triggerRender,\n    form_data,\n    table_name: datasource.table_name,\n    vizType: form_data.viz_type,\n    standalone: !!explore.standalone,\n    force: !!explore.force,\n    chart,\n    timeout: common.conf.SUPERSET_WEBSERVER_TIMEOUT,\n    ownState: dataMask[slice_id]?.ownState,\n    impressionId,\n    user,\n    exploreState: explore,\n    reports,\n    metadata,\n    saveAction: explore.saveAction,\n    isSaveModalVisible: saveModal.isVisible,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const actions = {\n    ...exploreActions,\n    ...datasourcesActions,\n    ...saveModalActions,\n    ...chartActions,\n    ...logActions,\n  };\n  return {\n    actions: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withToasts(React.memo(ExploreViewContainer)));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}