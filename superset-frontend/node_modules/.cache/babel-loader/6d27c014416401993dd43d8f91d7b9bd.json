{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport { AntdCheckbox } from 'src/components';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  min-height: ${(_ref) => {let { theme } = _ref;return theme.gridUnit * 10;}}px;\n  padding-top: ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit * 2 + 2;}}px;\n\n  .checkbox {\n    margin-bottom: ${(_ref3) => {let { theme, checked } = _ref3;return checked ? theme.gridUnit : 0;}}px;\n  }\n\n  & > div {\n    margin-bottom: ${(_ref4) => {let { theme } = _ref4;return theme.gridUnit * 2;}}px;\n  }\n`;\nconst ChildrenContainer = styled.div`\n  margin-left: ${(_ref5) => {let { theme } = _ref5;return theme.gridUnit * 6;}}px;\n`;\nconst CollapsibleControl = (props) => {\n  const { checked, disabled, title, tooltip, children, onChange = () => {}, initialValue = false } = props;\n  const [isChecked, setIsChecked] = useState(initialValue);\n  useEffect(() => {\n    // if external `checked` changed to `undefined`, it means that we work now in uncontrolled mode with local state\n    // and we need ignore external value\n    if (checked !== undefined) {\n      setIsChecked(checked);\n    }\n  }, [checked]);\n  return ___EmotionJSX(StyledContainer, { checked: isChecked },\n  ___EmotionJSX(AntdCheckbox, { className: \"checkbox\", checked: isChecked, disabled: disabled, onChange: (e) => {\n      const value = e.target.checked;\n      // external `checked` value has more priority then local state\n      if (checked === undefined) {\n        // uncontrolled mode\n        setIsChecked(value);\n      }\n      onChange(value);\n    } },\n  ___EmotionJSX(React.Fragment, null,\n  title, \"\\xA0\",\n  tooltip && ___EmotionJSX(InfoTooltipWithTrigger, { placement: \"top\", tooltip: tooltip }))),\n\n\n  isChecked && ___EmotionJSX(ChildrenContainer, null, children));\n\n};__signature__(CollapsibleControl, \"useState{[isChecked, setIsChecked](initialValue)}\\nuseEffect{}\");\nexport { CollapsibleControl };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledContainer, \"StyledContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/CollapsibleControl.tsx\");reactHotLoader.register(ChildrenContainer, \"ChildrenContainer\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/CollapsibleControl.tsx\");reactHotLoader.register(CollapsibleControl, \"CollapsibleControl\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/CollapsibleControl.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,IAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,sBAAT,QAAuC,6BAAvC,C;AAYA,MAAMC,eAAe,GAAGH,MAAM,CAACI,GAAyB;;;;;gBAKxC,eAAC,EAAEC,KAAF,EAAD,eAAeA,KAAK,CAACC,QAAN,GAAiB,EAAhC,EAAkC;iBACjC,gBAAC,EAAED,KAAF,EAAD,gBAAeA,KAAK,CAACC,QAAN,GAAiB,CAAjB,GAAqB,CAApC,EAAqC;;;qBAGjC,gBAAC,EAAED,KAAF,EAASE,OAAT,EAAD,gBAAyBA,OAAO,GAAGF,KAAK,CAACC,QAAT,GAAoB,CAApD,EAAsD;;;;qBAItD,gBAAC,EAAED,KAAF,EAAD,gBAAeA,KAAK,CAACC,QAAN,GAAiB,CAAhC,EAAiC;;CAbtD;AAiBA,MAAME,iBAAiB,GAAGR,MAAM,CAACI,GAAG;iBACnB,gBAAC,EAAEC,KAAF,EAAD,gBAAeA,KAAK,CAACC,QAAN,GAAiB,CAAhC,EAAiC;CADlD;AAIA,MAAMG,kBAAkB,GAAG,CAACC,KAAD,KAAmC;EAC5D,MAAM,EACJH,OADI,EAEJI,QAFI,EAGJC,KAHI,EAIJC,OAJI,EAKJC,QALI,EAMJC,QAAQ,GAAG,MAAK,CAAG,CANf,EAOJC,YAAY,GAAG,KAPX,KAQFN,KARJ;EASA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAACiB,YAAD,CAA1C;EAEAlB,SAAS,CAAC,MAAK;IACb;IACA;IACA,IAAIS,OAAO,KAAKY,SAAhB,EAA2B;MACzBD,YAAY,CAACX,OAAD,CAAZ;IACD;EACF,CANQ,EAMN,CAACA,OAAD,CANM,CAAT;EAQA,OACE,cAAC,eAAD,IAAiB,OAAO,EAAEU,SAA1B;EACE,cAAC,YAAD,IACE,SAAS,EAAC,UADZ,EAEE,OAAO,EAAEA,SAFX,EAGE,QAAQ,EAAEN,QAHZ,EAIE,QAAQ,EAAE,EAAC,KAAG;MACZ,MAAMS,KAAK,GAAGC,CAAC,CAACC,MAAF,CAASf,OAAvB;MACA;MACA,IAAIA,OAAO,KAAKY,SAAhB,EAA2B;QACzB;QACAD,YAAY,CAACE,KAAD,CAAZ;MACD;MACDL,QAAQ,CAACK,KAAD,CAAR;IACD,CAZH;EAcE;EACGR,KADH;EAEGC,OAAO,IACN,cAAC,sBAAD,IAAwB,SAAS,EAAC,KAAlC,EAAwC,OAAO,EAAEA,OAAjD,GAHJ,CAdF,CADF;;;EAsBGI,SAAS,IAAI,cAAC,iBAAD,QAAoBH,QAApB,CAtBhB,CADF;;AA0BD,CA9CD,C,cAAML,kB;AAgDN,SAASA,kBAAT,G,iLArEMN,e,oNAiBAK,iB,sNAIAC,kB","names":["React","useEffect","useState","styled","AntdCheckbox","InfoTooltipWithTrigger","StyledContainer","div","theme","gridUnit","checked","ChildrenContainer","CollapsibleControl","props","disabled","title","tooltip","children","onChange","initialValue","isChecked","setIsChecked","undefined","value","e","target"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/CollapsibleControl.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ReactNode, useEffect, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport { AntdCheckbox } from 'src/components';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\n\ninterface CollapsibleControlProps {\n  initialValue?: boolean;\n  disabled?: boolean;\n  checked?: boolean;\n  title: string;\n  tooltip?: string;\n  children: ReactNode;\n  onChange?: (checked: boolean) => void;\n}\n\nconst StyledContainer = styled.div<{ checked: boolean }>`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  padding-top: ${({ theme }) => theme.gridUnit * 2 + 2}px;\n\n  .checkbox {\n    margin-bottom: ${({ theme, checked }) => (checked ? theme.gridUnit : 0)}px;\n  }\n\n  & > div {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n`;\n\nconst ChildrenContainer = styled.div`\n  margin-left: ${({ theme }) => theme.gridUnit * 6}px;\n`;\n\nconst CollapsibleControl = (props: CollapsibleControlProps) => {\n  const {\n    checked,\n    disabled,\n    title,\n    tooltip,\n    children,\n    onChange = () => {},\n    initialValue = false,\n  } = props;\n  const [isChecked, setIsChecked] = useState(initialValue);\n\n  useEffect(() => {\n    // if external `checked` changed to `undefined`, it means that we work now in uncontrolled mode with local state\n    // and we need ignore external value\n    if (checked !== undefined) {\n      setIsChecked(checked);\n    }\n  }, [checked]);\n\n  return (\n    <StyledContainer checked={isChecked}>\n      <AntdCheckbox\n        className=\"checkbox\"\n        checked={isChecked}\n        disabled={disabled}\n        onChange={e => {\n          const value = e.target.checked;\n          // external `checked` value has more priority then local state\n          if (checked === undefined) {\n            // uncontrolled mode\n            setIsChecked(value);\n          }\n          onChange(value);\n        }}\n      >\n        <>\n          {title}&nbsp;\n          {tooltip && (\n            <InfoTooltipWithTrigger placement=\"top\" tooltip={tooltip} />\n          )}\n        </>\n      </AntdCheckbox>\n      {isChecked && <ChildrenContainer>{children}</ChildrenContainer>}\n    </StyledContainer>\n  );\n};\n\nexport { CollapsibleControl, CollapsibleControlProps };\n"]},"metadata":{},"sourceType":"module"}