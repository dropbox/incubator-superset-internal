{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-use-before-define: [\"error\", { \"functions\": false }] */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable react/sort-prop-types */\nimport d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport nv from 'nvd3-fork';\nimport {\ngetTimeFormatter,\ngetNumberFormatter,\nCategoricalColorNamespace } from\n'@superset-ui/core';\n\nconst propTypes = {\n  // Data is an object hashed by numeric value, perhaps timestamp\n  data: PropTypes.objectOf(\n  PropTypes.arrayOf(\n  PropTypes.shape({\n    key: PropTypes.arrayOf(PropTypes.string),\n    name: PropTypes.arrayOf(PropTypes.string),\n    time: PropTypes.number,\n    value: PropTypes.number }))),\n\n\n\n  width: PropTypes.number,\n  height: PropTypes.number,\n  dateTimeFormat: PropTypes.string,\n  numberFormat: PropTypes.string,\n  useRichTooltip: PropTypes.bool,\n  useAreaProportions: PropTypes.bool };\n\n\nfunction copyArc(d) {\n  return {\n    startAngle: d.startAngle,\n    endAngle: d.endAngle,\n    innerRadius: d.innerRadius,\n    outerRadius: d.outerRadius };\n\n}\n\nfunction sortValues(a, b) {\n  if (a.value === b.value) {\n    return a.name > b.name ? 1 : -1;\n  }\n\n  return b.value - a.value;\n}\n\nfunction Rose(element, props) {\n  const {\n    data,\n    width,\n    height,\n    colorScheme,\n    dateTimeFormat,\n    numberFormat,\n    useRichTooltip,\n    useAreaProportions,\n    sliceId } =\n  props;\n\n  const div = d3.select(element);\n  div.classed('superset-legacy-chart-rose', true);\n\n  const datum = data;\n  const times = Object.keys(datum).\n  map((t) => parseInt(t, 10)).\n  sort((a, b) => a - b);\n  const numGrains = times.length;\n  const numGroups = datum[times[0]].length;\n  const format = getNumberFormatter(numberFormat);\n  const timeFormat = getTimeFormatter(dateTimeFormat);\n  const colorFn = CategoricalColorNamespace.getScale(colorScheme);\n\n  d3.select('.nvtooltip').remove();\n  div.selectAll('*').remove();\n\n  const arc = d3.svg.arc();\n  const legend = nv.models.legend();\n  const tooltip = nv.models.tooltip();\n  const state = { disabled: datum[times[0]].map(() => false) };\n\n  const svg = div.append('svg').attr('width', width).attr('height', height);\n\n  const g = svg.append('g').attr('class', 'rose').append('g');\n\n  const legendWrap = g.append('g').attr('class', 'legendWrap');\n\n  function legendData(adatum) {\n    return adatum[times[0]].map((v, i) => ({\n      disabled: state.disabled[i],\n      key: v.name }));\n\n  }\n\n  function tooltipData(d, i, adatum) {\n    const timeIndex = Math.floor(d.arcId / numGroups);\n    const series = useRichTooltip ?\n    adatum[times[timeIndex]].\n    filter((v) => !state.disabled[v.id % numGroups]).\n    map((v) => ({\n      key: v.name,\n      value: v.value,\n      color: colorFn(v.name, sliceId),\n      highlight: v.id === d.arcId })) :\n\n    [{ key: d.name, value: d.val, color: colorFn(d.name, sliceId) }];\n\n    return {\n      key: 'Date',\n      value: d.time,\n      series };\n\n  }\n\n  legend.width(width).color((d) => colorFn(d.key, sliceId));\n  legendWrap.datum(legendData(datum)).call(legend);\n\n  tooltip.headerFormatter(timeFormat).valueFormatter(format);\n  tooltip.classes('tooltip');\n\n  // Compute max radius, which the largest value will occupy\n  const roseHeight = height - legend.height();\n  const margin = { top: legend.height() };\n  const edgeMargin = 35; // space between outermost radius and slice edge\n  const maxRadius = Math.min(width, roseHeight) / 2 - edgeMargin;\n  const labelThreshold = 0.05;\n  const gro = 8; // mouseover radius growth in pixels\n  const mini = 0.075;\n\n  const centerTranslate = `translate(${width / 2},${\n  roseHeight / 2 + margin.top\n  })`;\n  const roseWrap = g.\n  append('g').\n  attr('transform', centerTranslate).\n  attr('class', 'roseWrap');\n\n  const labelsWrap = g.\n  append('g').\n  attr('transform', centerTranslate).\n  attr('class', 'labelsWrap');\n\n  const groupLabelsWrap = g.\n  append('g').\n  attr('transform', centerTranslate).\n  attr('class', 'groupLabelsWrap');\n\n  // Compute inner and outer angles for each data point\n  function computeArcStates(adatum) {\n    // Find the max sum of values across all time\n    let maxSum = 0;\n    let grain = 0;\n    const sums = [];\n    for (const t of times) {\n      const sum = datum[t].reduce(\n      (a, v, i) => a + (state.disabled[i] ? 0 : v.value),\n      0);\n\n      maxSum = sum > maxSum ? sum : maxSum;\n      sums[grain] = sum;\n      grain += 1;\n    }\n\n    // Compute angle occupied by each time grain\n    const dtheta = Math.PI * 2 / numGrains;\n    const angles = [];\n    for (let i = 0; i <= numGrains; i += 1) {\n      angles.push(dtheta * i - Math.PI / 2);\n    }\n\n    // Compute proportion\n    const P = maxRadius / maxSum;\n    const Q = P * maxRadius;\n    const computeOuterRadius = (value, innerRadius) =>\n    useAreaProportions ?\n    Math.sqrt(Q * value + innerRadius * innerRadius) :\n    P * value + innerRadius;\n\n    const arcSt = {\n      data: [],\n      extend: {},\n      push: {},\n      pieStart: {},\n      pie: {},\n      pieOver: {},\n      mini: {},\n      labels: [],\n      groupLabels: [] };\n\n    let arcId = 0;\n    for (let i = 0; i < numGrains; i += 1) {\n      const t = times[i];\n      const startAngle = angles[i];\n      const endAngle = angles[i + 1];\n      const G = 2 * Math.PI / sums[i];\n      let innerRadius = 0;\n      let outerRadius;\n      let pieStartAngle = 0;\n      let pieEndAngle;\n      for (const v of adatum[t]) {\n        const val = state.disabled[arcId % numGroups] ? 0 : v.value;\n        const { name, time } = v;\n        v.id = arcId;\n        outerRadius = computeOuterRadius(val, innerRadius);\n        arcSt.data.push({\n          startAngle,\n          endAngle,\n          innerRadius,\n          outerRadius,\n          name,\n          arcId,\n          val,\n          time });\n\n        arcSt.extend[arcId] = {\n          startAngle,\n          endAngle,\n          innerRadius,\n          name,\n          outerRadius: outerRadius + gro };\n\n        arcSt.push[arcId] = {\n          startAngle,\n          endAngle,\n          innerRadius: innerRadius + gro,\n          outerRadius: outerRadius + gro };\n\n        arcSt.pieStart[arcId] = {\n          startAngle,\n          endAngle,\n          innerRadius: mini * maxRadius,\n          outerRadius: maxRadius };\n\n        arcSt.mini[arcId] = {\n          startAngle,\n          endAngle,\n          innerRadius: innerRadius * mini,\n          outerRadius: outerRadius * mini };\n\n        arcId += 1;\n        innerRadius = outerRadius;\n      }\n      const labelArc = { ...arcSt.data[i * numGroups] };\n      labelArc.outerRadius = maxRadius + 20;\n      labelArc.innerRadius = maxRadius + 15;\n      arcSt.labels.push(labelArc);\n      for (const v of adatum[t].concat().sort(sortValues)) {\n        const val = state.disabled[v.id % numGroups] ? 0 : v.value;\n        pieEndAngle = G * val + pieStartAngle;\n        arcSt.pie[v.id] = {\n          startAngle: pieStartAngle,\n          endAngle: pieEndAngle,\n          innerRadius: maxRadius * mini,\n          outerRadius: maxRadius,\n          percent: v.value / sums[i] };\n\n        arcSt.pieOver[v.id] = {\n          startAngle: pieStartAngle,\n          endAngle: pieEndAngle,\n          innerRadius: maxRadius * mini,\n          outerRadius: maxRadius + gro };\n\n        pieStartAngle = pieEndAngle;\n      }\n    }\n    arcSt.groupLabels = arcSt.data.slice(0, numGroups);\n\n    return arcSt;\n  }\n\n  let arcSt = computeArcStates(datum);\n\n  function tween(target, resFunc) {\n    return function doTween(d) {\n      const interpolate = d3.interpolate(copyArc(d), copyArc(target));\n\n      return (t) => resFunc(Object.assign(d, interpolate(t)));\n    };\n  }\n\n  function arcTween(target) {\n    return tween(target, (d) => arc(d));\n  }\n\n  function translateTween(target) {\n    return tween(target, (d) => `translate(${arc.centroid(d)})`);\n  }\n\n  // Grab the ID range of segments stand between\n  // this segment and the edge of the circle\n  const segmentsToEdgeCache = {};\n  function getSegmentsToEdge(arcId) {\n    if (segmentsToEdgeCache[arcId]) {\n      return segmentsToEdgeCache[arcId];\n    }\n    const timeIndex = Math.floor(arcId / numGroups);\n    segmentsToEdgeCache[arcId] = [arcId + 1, numGroups * (timeIndex + 1) - 1];\n\n    return segmentsToEdgeCache[arcId];\n  }\n\n  // Get the IDs of all segments in a timeIndex\n  const segmentsInTimeCache = {};\n  function getSegmentsInTime(arcId) {\n    if (segmentsInTimeCache[arcId]) {\n      return segmentsInTimeCache[arcId];\n    }\n    const timeIndex = Math.floor(arcId / numGroups);\n    segmentsInTimeCache[arcId] = [\n    timeIndex * numGroups,\n    (timeIndex + 1) * numGroups - 1];\n\n\n    return segmentsInTimeCache[arcId];\n  }\n\n  let clickId = -1;\n  let inTransition = false;\n  const ae = roseWrap.\n  selectAll('g').\n  data(JSON.parse(JSON.stringify(arcSt.data))) // deep copy data state\n  .enter().\n  append('g').\n  attr('class', 'segment').\n  classed('clickable', true).\n  on('mouseover', mouseover).\n  on('mouseout', mouseout).\n  on('mousemove', mousemove).\n  on('click', click);\n\n  const labels = labelsWrap.\n  selectAll('g').\n  data(JSON.parse(JSON.stringify(arcSt.labels))).\n  enter().\n  append('g').\n  attr('class', 'roseLabel').\n  attr('transform', (d) => `translate(${arc.centroid(d)})`);\n\n  labels.\n  append('text').\n  style('text-anchor', 'middle').\n  style('fill', '#000').\n  text((d) => timeFormat(d.time));\n\n  const groupLabels = groupLabelsWrap.\n  selectAll('g').\n  data(JSON.parse(JSON.stringify(arcSt.groupLabels))).\n  enter().\n  append('g');\n\n  groupLabels.\n  style('opacity', 0).\n  attr('class', 'roseGroupLabels').\n  append('text').\n  style('text-anchor', 'middle').\n  style('fill', '#000').\n  text((d) => d.name);\n\n  const arcs = ae.\n  append('path').\n  attr('class', 'arc').\n  attr('fill', (d) => colorFn(d.name, sliceId)).\n  attr('d', arc);\n\n  function mousemove() {\n    tooltip();\n  }\n\n  function mouseover(b, i) {\n    tooltip.data(tooltipData(b, i, datum)).hidden(false);\n    const $this = d3.select(this);\n    $this.classed('hover', true);\n    if (clickId < 0 && !inTransition) {\n      $this.\n      select('path').\n      interrupt().\n      transition().\n      duration(180).\n      attrTween('d', arcTween(arcSt.extend[i]));\n      const edge = getSegmentsToEdge(i);\n      arcs.\n      filter((d) => edge[0] <= d.arcId && d.arcId <= edge[1]).\n      interrupt().\n      transition().\n      duration(180).\n      attrTween('d', (d) => arcTween(arcSt.push[d.arcId])(d));\n    } else if (!inTransition) {\n      const segments = getSegmentsInTime(clickId);\n      if (segments[0] <= b.arcId && b.arcId <= segments[1]) {\n        $this.\n        select('path').\n        interrupt().\n        transition().\n        duration(180).\n        attrTween('d', arcTween(arcSt.pieOver[i]));\n      }\n    }\n  }\n\n  function mouseout(b, i) {\n    tooltip.hidden(true);\n    const $this = d3.select(this);\n    $this.classed('hover', false);\n    if (clickId < 0 && !inTransition) {\n      $this.\n      select('path').\n      interrupt().\n      transition().\n      duration(180).\n      attrTween('d', arcTween(arcSt.data[i]));\n      const edge = getSegmentsToEdge(i);\n      arcs.\n      filter((d) => edge[0] <= d.arcId && d.arcId <= edge[1]).\n      interrupt().\n      transition().\n      duration(180).\n      attrTween('d', (d) => arcTween(arcSt.data[d.arcId])(d));\n    } else if (!inTransition) {\n      const segments = getSegmentsInTime(clickId);\n      if (segments[0] <= b.arcId && b.arcId <= segments[1]) {\n        $this.\n        select('path').\n        interrupt().\n        transition().\n        duration(180).\n        attrTween('d', arcTween(arcSt.pie[i]));\n      }\n    }\n  }\n\n  function click(b, i) {\n    if (inTransition) {\n      return;\n    }\n    const delay = d3.event.altKey ? 3750 : 375;\n    const segments = getSegmentsInTime(i);\n    if (clickId < 0) {\n      inTransition = true;\n      clickId = i;\n      labels.\n      interrupt().\n      transition().\n      duration(delay).\n      attrTween('transform', (d) =>\n      translateTween({\n        outerRadius: 0,\n        innerRadius: 0,\n        startAngle: d.startAngle,\n        endAngle: d.endAngle })(\n      d)).\n\n      style('opacity', 0);\n      groupLabels.\n      attr(\n      'transform',\n      `translate(${arc.centroid({\n        outerRadius: maxRadius + 20,\n        innerRadius: maxRadius + 15,\n        startAngle: arcSt.data[i].startAngle,\n        endAngle: arcSt.data[i].endAngle })\n      })`).\n\n      interrupt().\n      transition().\n      delay(delay).\n      duration(delay).\n      attrTween('transform', (d) =>\n      translateTween({\n        outerRadius: maxRadius + 20,\n        innerRadius: maxRadius + 15,\n        startAngle: arcSt.pie[segments[0] + d.arcId].startAngle,\n        endAngle: arcSt.pie[segments[0] + d.arcId].endAngle })(\n      d)).\n\n      style('opacity', (d) =>\n      state.disabled[d.arcId] ||\n      arcSt.pie[segments[0] + d.arcId].percent < labelThreshold ?\n      0 :\n      1);\n\n      ae.classed(\n      'clickable',\n      (d) => segments[0] > d.arcId || d.arcId > segments[1]);\n\n      arcs.\n      filter((d) => segments[0] <= d.arcId && d.arcId <= segments[1]).\n      interrupt().\n      transition().\n      duration(delay).\n      attrTween('d', (d) => arcTween(arcSt.pieStart[d.arcId])(d)).\n      transition().\n      duration(delay).\n      attrTween('d', (d) => arcTween(arcSt.pie[d.arcId])(d)).\n      each('end', () => {\n        inTransition = false;\n      });\n      arcs.\n      filter((d) => segments[0] > d.arcId || d.arcId > segments[1]).\n      interrupt().\n      transition().\n      duration(delay).\n      attrTween('d', (d) => arcTween(arcSt.mini[d.arcId])(d));\n    } else if (clickId < segments[0] || segments[1] < clickId) {\n      inTransition = true;\n      const clickSegments = getSegmentsInTime(clickId);\n      labels.\n      interrupt().\n      transition().\n      delay(delay).\n      duration(delay).\n      attrTween('transform', (d) =>\n      translateTween(arcSt.labels[d.arcId / numGroups])(d)).\n\n      style('opacity', 1);\n      groupLabels.\n      interrupt().\n      transition().\n      duration(delay).\n      attrTween(\n      'transform',\n      translateTween({\n        outerRadius: maxRadius + 20,\n        innerRadius: maxRadius + 15,\n        startAngle: arcSt.data[clickId].startAngle,\n        endAngle: arcSt.data[clickId].endAngle })).\n\n\n      style('opacity', 0);\n      ae.classed('clickable', true);\n      arcs.\n      filter((d) => clickSegments[0] <= d.arcId && d.arcId <= clickSegments[1]).\n      interrupt().\n      transition().\n      duration(delay).\n      attrTween('d', (d) => arcTween(arcSt.pieStart[d.arcId])(d)).\n      transition().\n      duration(delay).\n      attrTween('d', (d) => arcTween(arcSt.data[d.arcId])(d)).\n      each('end', () => {\n        clickId = -1;\n        inTransition = false;\n      });\n      arcs.\n      filter((d) => clickSegments[0] > d.arcId || d.arcId > clickSegments[1]).\n      interrupt().\n      transition().\n      delay(delay).\n      duration(delay).\n      attrTween('d', (d) => arcTween(arcSt.data[d.arcId])(d));\n    }\n  }\n\n  function updateActive() {\n    const delay = d3.event.altKey ? 3000 : 300;\n    legendWrap.datum(legendData(datum)).call(legend);\n    const nArcSt = computeArcStates(datum);\n    inTransition = true;\n    if (clickId < 0) {\n      arcs.\n      style('opacity', 1).\n      interrupt().\n      transition().\n      duration(delay).\n      attrTween('d', (d) => arcTween(nArcSt.data[d.arcId])(d)).\n      each('end', () => {\n        inTransition = false;\n        arcSt = nArcSt;\n      }).\n      transition().\n      duration(0).\n      style('opacity', (d) => state.disabled[d.arcId % numGroups] ? 0 : 1);\n    } else {\n      const segments = getSegmentsInTime(clickId);\n      arcs.\n      style('opacity', 1).\n      interrupt().\n      transition().\n      duration(delay).\n      attrTween('d', (d) =>\n      segments[0] <= d.arcId && d.arcId <= segments[1] ?\n      arcTween(nArcSt.pie[d.arcId])(d) :\n      arcTween(nArcSt.mini[d.arcId])(d)).\n\n      each('end', () => {\n        inTransition = false;\n        arcSt = nArcSt;\n      }).\n      transition().\n      duration(0).\n      style('opacity', (d) => state.disabled[d.arcId % numGroups] ? 0 : 1);\n      groupLabels.\n      interrupt().\n      transition().\n      duration(delay).\n      attrTween('transform', (d) =>\n      translateTween({\n        outerRadius: maxRadius + 20,\n        innerRadius: maxRadius + 15,\n        startAngle: nArcSt.pie[segments[0] + d.arcId].startAngle,\n        endAngle: nArcSt.pie[segments[0] + d.arcId].endAngle })(\n      d)).\n\n      style('opacity', (d) =>\n      state.disabled[d.arcId] ||\n      arcSt.pie[segments[0] + d.arcId].percent < labelThreshold ?\n      0 :\n      1);\n\n    }\n  }\n\n  legend.dispatch.on('stateChange', (newState) => {\n    if (state.disabled !== newState.disabled) {\n      state.disabled = newState.disabled;\n      updateActive();\n    }\n  });\n}\n\nRose.displayName = 'Rose';\nRose.propTypes = propTypes;\n\nexport default Rose;","map":{"version":3,"names":["d3","PropTypes","nv","getTimeFormatter","getNumberFormatter","CategoricalColorNamespace","propTypes","data","objectOf","arrayOf","shape","key","string","name","time","number","value","width","height","dateTimeFormat","numberFormat","useRichTooltip","bool","useAreaProportions","copyArc","d","startAngle","endAngle","innerRadius","outerRadius","sortValues","a","b","Rose","element","props","colorScheme","sliceId","div","select","classed","datum","times","Object","keys","map","t","parseInt","sort","numGrains","length","numGroups","format","timeFormat","colorFn","getScale","remove","selectAll","arc","svg","legend","models","tooltip","state","disabled","append","attr","g","legendWrap","legendData","adatum","v","i","tooltipData","timeIndex","Math","floor","arcId","series","filter","id","color","highlight","val","call","headerFormatter","valueFormatter","classes","roseHeight","margin","top","edgeMargin","maxRadius","min","labelThreshold","gro","mini","centerTranslate","roseWrap","labelsWrap","groupLabelsWrap","computeArcStates","maxSum","grain","sums","sum","reduce","dtheta","PI","angles","push","P","Q","computeOuterRadius","sqrt","arcSt","extend","pieStart","pie","pieOver","labels","groupLabels","G","pieStartAngle","pieEndAngle","labelArc","concat","percent","slice","tween","target","resFunc","doTween","interpolate","assign","arcTween","translateTween","centroid","segmentsToEdgeCache","getSegmentsToEdge","segmentsInTimeCache","getSegmentsInTime","clickId","inTransition","ae","JSON","parse","stringify","enter","on","mouseover","mouseout","mousemove","click","style","text","arcs","hidden","$this","interrupt","transition","duration","attrTween","edge","segments","delay","event","altKey","each","clickSegments","updateActive","nArcSt","dispatch","newState","displayName"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/legacy-plugin-chart-rose/src/Rose.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-use-before-define: [\"error\", { \"functions\": false }] */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable react/sort-prop-types */\nimport d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport nv from 'nvd3-fork';\nimport {\n  getTimeFormatter,\n  getNumberFormatter,\n  CategoricalColorNamespace,\n} from '@superset-ui/core';\n\nconst propTypes = {\n  // Data is an object hashed by numeric value, perhaps timestamp\n  data: PropTypes.objectOf(\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.arrayOf(PropTypes.string),\n        name: PropTypes.arrayOf(PropTypes.string),\n        time: PropTypes.number,\n        value: PropTypes.number,\n      }),\n    ),\n  ),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  dateTimeFormat: PropTypes.string,\n  numberFormat: PropTypes.string,\n  useRichTooltip: PropTypes.bool,\n  useAreaProportions: PropTypes.bool,\n};\n\nfunction copyArc(d) {\n  return {\n    startAngle: d.startAngle,\n    endAngle: d.endAngle,\n    innerRadius: d.innerRadius,\n    outerRadius: d.outerRadius,\n  };\n}\n\nfunction sortValues(a, b) {\n  if (a.value === b.value) {\n    return a.name > b.name ? 1 : -1;\n  }\n\n  return b.value - a.value;\n}\n\nfunction Rose(element, props) {\n  const {\n    data,\n    width,\n    height,\n    colorScheme,\n    dateTimeFormat,\n    numberFormat,\n    useRichTooltip,\n    useAreaProportions,\n    sliceId,\n  } = props;\n\n  const div = d3.select(element);\n  div.classed('superset-legacy-chart-rose', true);\n\n  const datum = data;\n  const times = Object.keys(datum)\n    .map(t => parseInt(t, 10))\n    .sort((a, b) => a - b);\n  const numGrains = times.length;\n  const numGroups = datum[times[0]].length;\n  const format = getNumberFormatter(numberFormat);\n  const timeFormat = getTimeFormatter(dateTimeFormat);\n  const colorFn = CategoricalColorNamespace.getScale(colorScheme);\n\n  d3.select('.nvtooltip').remove();\n  div.selectAll('*').remove();\n\n  const arc = d3.svg.arc();\n  const legend = nv.models.legend();\n  const tooltip = nv.models.tooltip();\n  const state = { disabled: datum[times[0]].map(() => false) };\n\n  const svg = div.append('svg').attr('width', width).attr('height', height);\n\n  const g = svg.append('g').attr('class', 'rose').append('g');\n\n  const legendWrap = g.append('g').attr('class', 'legendWrap');\n\n  function legendData(adatum) {\n    return adatum[times[0]].map((v, i) => ({\n      disabled: state.disabled[i],\n      key: v.name,\n    }));\n  }\n\n  function tooltipData(d, i, adatum) {\n    const timeIndex = Math.floor(d.arcId / numGroups);\n    const series = useRichTooltip\n      ? adatum[times[timeIndex]]\n          .filter(v => !state.disabled[v.id % numGroups])\n          .map(v => ({\n            key: v.name,\n            value: v.value,\n            color: colorFn(v.name, sliceId),\n            highlight: v.id === d.arcId,\n          }))\n      : [{ key: d.name, value: d.val, color: colorFn(d.name, sliceId) }];\n\n    return {\n      key: 'Date',\n      value: d.time,\n      series,\n    };\n  }\n\n  legend.width(width).color(d => colorFn(d.key, sliceId));\n  legendWrap.datum(legendData(datum)).call(legend);\n\n  tooltip.headerFormatter(timeFormat).valueFormatter(format);\n  tooltip.classes('tooltip');\n\n  // Compute max radius, which the largest value will occupy\n  const roseHeight = height - legend.height();\n  const margin = { top: legend.height() };\n  const edgeMargin = 35; // space between outermost radius and slice edge\n  const maxRadius = Math.min(width, roseHeight) / 2 - edgeMargin;\n  const labelThreshold = 0.05;\n  const gro = 8; // mouseover radius growth in pixels\n  const mini = 0.075;\n\n  const centerTranslate = `translate(${width / 2},${\n    roseHeight / 2 + margin.top\n  })`;\n  const roseWrap = g\n    .append('g')\n    .attr('transform', centerTranslate)\n    .attr('class', 'roseWrap');\n\n  const labelsWrap = g\n    .append('g')\n    .attr('transform', centerTranslate)\n    .attr('class', 'labelsWrap');\n\n  const groupLabelsWrap = g\n    .append('g')\n    .attr('transform', centerTranslate)\n    .attr('class', 'groupLabelsWrap');\n\n  // Compute inner and outer angles for each data point\n  function computeArcStates(adatum) {\n    // Find the max sum of values across all time\n    let maxSum = 0;\n    let grain = 0;\n    const sums = [];\n    for (const t of times) {\n      const sum = datum[t].reduce(\n        (a, v, i) => a + (state.disabled[i] ? 0 : v.value),\n        0,\n      );\n      maxSum = sum > maxSum ? sum : maxSum;\n      sums[grain] = sum;\n      grain += 1;\n    }\n\n    // Compute angle occupied by each time grain\n    const dtheta = (Math.PI * 2) / numGrains;\n    const angles = [];\n    for (let i = 0; i <= numGrains; i += 1) {\n      angles.push(dtheta * i - Math.PI / 2);\n    }\n\n    // Compute proportion\n    const P = maxRadius / maxSum;\n    const Q = P * maxRadius;\n    const computeOuterRadius = (value, innerRadius) =>\n      useAreaProportions\n        ? Math.sqrt(Q * value + innerRadius * innerRadius)\n        : P * value + innerRadius;\n\n    const arcSt = {\n      data: [],\n      extend: {},\n      push: {},\n      pieStart: {},\n      pie: {},\n      pieOver: {},\n      mini: {},\n      labels: [],\n      groupLabels: [],\n    };\n    let arcId = 0;\n    for (let i = 0; i < numGrains; i += 1) {\n      const t = times[i];\n      const startAngle = angles[i];\n      const endAngle = angles[i + 1];\n      const G = (2 * Math.PI) / sums[i];\n      let innerRadius = 0;\n      let outerRadius;\n      let pieStartAngle = 0;\n      let pieEndAngle;\n      for (const v of adatum[t]) {\n        const val = state.disabled[arcId % numGroups] ? 0 : v.value;\n        const { name, time } = v;\n        v.id = arcId;\n        outerRadius = computeOuterRadius(val, innerRadius);\n        arcSt.data.push({\n          startAngle,\n          endAngle,\n          innerRadius,\n          outerRadius,\n          name,\n          arcId,\n          val,\n          time,\n        });\n        arcSt.extend[arcId] = {\n          startAngle,\n          endAngle,\n          innerRadius,\n          name,\n          outerRadius: outerRadius + gro,\n        };\n        arcSt.push[arcId] = {\n          startAngle,\n          endAngle,\n          innerRadius: innerRadius + gro,\n          outerRadius: outerRadius + gro,\n        };\n        arcSt.pieStart[arcId] = {\n          startAngle,\n          endAngle,\n          innerRadius: mini * maxRadius,\n          outerRadius: maxRadius,\n        };\n        arcSt.mini[arcId] = {\n          startAngle,\n          endAngle,\n          innerRadius: innerRadius * mini,\n          outerRadius: outerRadius * mini,\n        };\n        arcId += 1;\n        innerRadius = outerRadius;\n      }\n      const labelArc = { ...arcSt.data[i * numGroups] };\n      labelArc.outerRadius = maxRadius + 20;\n      labelArc.innerRadius = maxRadius + 15;\n      arcSt.labels.push(labelArc);\n      for (const v of adatum[t].concat().sort(sortValues)) {\n        const val = state.disabled[v.id % numGroups] ? 0 : v.value;\n        pieEndAngle = G * val + pieStartAngle;\n        arcSt.pie[v.id] = {\n          startAngle: pieStartAngle,\n          endAngle: pieEndAngle,\n          innerRadius: maxRadius * mini,\n          outerRadius: maxRadius,\n          percent: v.value / sums[i],\n        };\n        arcSt.pieOver[v.id] = {\n          startAngle: pieStartAngle,\n          endAngle: pieEndAngle,\n          innerRadius: maxRadius * mini,\n          outerRadius: maxRadius + gro,\n        };\n        pieStartAngle = pieEndAngle;\n      }\n    }\n    arcSt.groupLabels = arcSt.data.slice(0, numGroups);\n\n    return arcSt;\n  }\n\n  let arcSt = computeArcStates(datum);\n\n  function tween(target, resFunc) {\n    return function doTween(d) {\n      const interpolate = d3.interpolate(copyArc(d), copyArc(target));\n\n      return t => resFunc(Object.assign(d, interpolate(t)));\n    };\n  }\n\n  function arcTween(target) {\n    return tween(target, d => arc(d));\n  }\n\n  function translateTween(target) {\n    return tween(target, d => `translate(${arc.centroid(d)})`);\n  }\n\n  // Grab the ID range of segments stand between\n  // this segment and the edge of the circle\n  const segmentsToEdgeCache = {};\n  function getSegmentsToEdge(arcId) {\n    if (segmentsToEdgeCache[arcId]) {\n      return segmentsToEdgeCache[arcId];\n    }\n    const timeIndex = Math.floor(arcId / numGroups);\n    segmentsToEdgeCache[arcId] = [arcId + 1, numGroups * (timeIndex + 1) - 1];\n\n    return segmentsToEdgeCache[arcId];\n  }\n\n  // Get the IDs of all segments in a timeIndex\n  const segmentsInTimeCache = {};\n  function getSegmentsInTime(arcId) {\n    if (segmentsInTimeCache[arcId]) {\n      return segmentsInTimeCache[arcId];\n    }\n    const timeIndex = Math.floor(arcId / numGroups);\n    segmentsInTimeCache[arcId] = [\n      timeIndex * numGroups,\n      (timeIndex + 1) * numGroups - 1,\n    ];\n\n    return segmentsInTimeCache[arcId];\n  }\n\n  let clickId = -1;\n  let inTransition = false;\n  const ae = roseWrap\n    .selectAll('g')\n    .data(JSON.parse(JSON.stringify(arcSt.data))) // deep copy data state\n    .enter()\n    .append('g')\n    .attr('class', 'segment')\n    .classed('clickable', true)\n    .on('mouseover', mouseover)\n    .on('mouseout', mouseout)\n    .on('mousemove', mousemove)\n    .on('click', click);\n\n  const labels = labelsWrap\n    .selectAll('g')\n    .data(JSON.parse(JSON.stringify(arcSt.labels)))\n    .enter()\n    .append('g')\n    .attr('class', 'roseLabel')\n    .attr('transform', d => `translate(${arc.centroid(d)})`);\n\n  labels\n    .append('text')\n    .style('text-anchor', 'middle')\n    .style('fill', '#000')\n    .text(d => timeFormat(d.time));\n\n  const groupLabels = groupLabelsWrap\n    .selectAll('g')\n    .data(JSON.parse(JSON.stringify(arcSt.groupLabels)))\n    .enter()\n    .append('g');\n\n  groupLabels\n    .style('opacity', 0)\n    .attr('class', 'roseGroupLabels')\n    .append('text')\n    .style('text-anchor', 'middle')\n    .style('fill', '#000')\n    .text(d => d.name);\n\n  const arcs = ae\n    .append('path')\n    .attr('class', 'arc')\n    .attr('fill', d => colorFn(d.name, sliceId))\n    .attr('d', arc);\n\n  function mousemove() {\n    tooltip();\n  }\n\n  function mouseover(b, i) {\n    tooltip.data(tooltipData(b, i, datum)).hidden(false);\n    const $this = d3.select(this);\n    $this.classed('hover', true);\n    if (clickId < 0 && !inTransition) {\n      $this\n        .select('path')\n        .interrupt()\n        .transition()\n        .duration(180)\n        .attrTween('d', arcTween(arcSt.extend[i]));\n      const edge = getSegmentsToEdge(i);\n      arcs\n        .filter(d => edge[0] <= d.arcId && d.arcId <= edge[1])\n        .interrupt()\n        .transition()\n        .duration(180)\n        .attrTween('d', d => arcTween(arcSt.push[d.arcId])(d));\n    } else if (!inTransition) {\n      const segments = getSegmentsInTime(clickId);\n      if (segments[0] <= b.arcId && b.arcId <= segments[1]) {\n        $this\n          .select('path')\n          .interrupt()\n          .transition()\n          .duration(180)\n          .attrTween('d', arcTween(arcSt.pieOver[i]));\n      }\n    }\n  }\n\n  function mouseout(b, i) {\n    tooltip.hidden(true);\n    const $this = d3.select(this);\n    $this.classed('hover', false);\n    if (clickId < 0 && !inTransition) {\n      $this\n        .select('path')\n        .interrupt()\n        .transition()\n        .duration(180)\n        .attrTween('d', arcTween(arcSt.data[i]));\n      const edge = getSegmentsToEdge(i);\n      arcs\n        .filter(d => edge[0] <= d.arcId && d.arcId <= edge[1])\n        .interrupt()\n        .transition()\n        .duration(180)\n        .attrTween('d', d => arcTween(arcSt.data[d.arcId])(d));\n    } else if (!inTransition) {\n      const segments = getSegmentsInTime(clickId);\n      if (segments[0] <= b.arcId && b.arcId <= segments[1]) {\n        $this\n          .select('path')\n          .interrupt()\n          .transition()\n          .duration(180)\n          .attrTween('d', arcTween(arcSt.pie[i]));\n      }\n    }\n  }\n\n  function click(b, i) {\n    if (inTransition) {\n      return;\n    }\n    const delay = d3.event.altKey ? 3750 : 375;\n    const segments = getSegmentsInTime(i);\n    if (clickId < 0) {\n      inTransition = true;\n      clickId = i;\n      labels\n        .interrupt()\n        .transition()\n        .duration(delay)\n        .attrTween('transform', d =>\n          translateTween({\n            outerRadius: 0,\n            innerRadius: 0,\n            startAngle: d.startAngle,\n            endAngle: d.endAngle,\n          })(d),\n        )\n        .style('opacity', 0);\n      groupLabels\n        .attr(\n          'transform',\n          `translate(${arc.centroid({\n            outerRadius: maxRadius + 20,\n            innerRadius: maxRadius + 15,\n            startAngle: arcSt.data[i].startAngle,\n            endAngle: arcSt.data[i].endAngle,\n          })})`,\n        )\n        .interrupt()\n        .transition()\n        .delay(delay)\n        .duration(delay)\n        .attrTween('transform', d =>\n          translateTween({\n            outerRadius: maxRadius + 20,\n            innerRadius: maxRadius + 15,\n            startAngle: arcSt.pie[segments[0] + d.arcId].startAngle,\n            endAngle: arcSt.pie[segments[0] + d.arcId].endAngle,\n          })(d),\n        )\n        .style('opacity', d =>\n          state.disabled[d.arcId] ||\n          arcSt.pie[segments[0] + d.arcId].percent < labelThreshold\n            ? 0\n            : 1,\n        );\n      ae.classed(\n        'clickable',\n        d => segments[0] > d.arcId || d.arcId > segments[1],\n      );\n      arcs\n        .filter(d => segments[0] <= d.arcId && d.arcId <= segments[1])\n        .interrupt()\n        .transition()\n        .duration(delay)\n        .attrTween('d', d => arcTween(arcSt.pieStart[d.arcId])(d))\n        .transition()\n        .duration(delay)\n        .attrTween('d', d => arcTween(arcSt.pie[d.arcId])(d))\n        .each('end', () => {\n          inTransition = false;\n        });\n      arcs\n        .filter(d => segments[0] > d.arcId || d.arcId > segments[1])\n        .interrupt()\n        .transition()\n        .duration(delay)\n        .attrTween('d', d => arcTween(arcSt.mini[d.arcId])(d));\n    } else if (clickId < segments[0] || segments[1] < clickId) {\n      inTransition = true;\n      const clickSegments = getSegmentsInTime(clickId);\n      labels\n        .interrupt()\n        .transition()\n        .delay(delay)\n        .duration(delay)\n        .attrTween('transform', d =>\n          translateTween(arcSt.labels[d.arcId / numGroups])(d),\n        )\n        .style('opacity', 1);\n      groupLabels\n        .interrupt()\n        .transition()\n        .duration(delay)\n        .attrTween(\n          'transform',\n          translateTween({\n            outerRadius: maxRadius + 20,\n            innerRadius: maxRadius + 15,\n            startAngle: arcSt.data[clickId].startAngle,\n            endAngle: arcSt.data[clickId].endAngle,\n          }),\n        )\n        .style('opacity', 0);\n      ae.classed('clickable', true);\n      arcs\n        .filter(d => clickSegments[0] <= d.arcId && d.arcId <= clickSegments[1])\n        .interrupt()\n        .transition()\n        .duration(delay)\n        .attrTween('d', d => arcTween(arcSt.pieStart[d.arcId])(d))\n        .transition()\n        .duration(delay)\n        .attrTween('d', d => arcTween(arcSt.data[d.arcId])(d))\n        .each('end', () => {\n          clickId = -1;\n          inTransition = false;\n        });\n      arcs\n        .filter(d => clickSegments[0] > d.arcId || d.arcId > clickSegments[1])\n        .interrupt()\n        .transition()\n        .delay(delay)\n        .duration(delay)\n        .attrTween('d', d => arcTween(arcSt.data[d.arcId])(d));\n    }\n  }\n\n  function updateActive() {\n    const delay = d3.event.altKey ? 3000 : 300;\n    legendWrap.datum(legendData(datum)).call(legend);\n    const nArcSt = computeArcStates(datum);\n    inTransition = true;\n    if (clickId < 0) {\n      arcs\n        .style('opacity', 1)\n        .interrupt()\n        .transition()\n        .duration(delay)\n        .attrTween('d', d => arcTween(nArcSt.data[d.arcId])(d))\n        .each('end', () => {\n          inTransition = false;\n          arcSt = nArcSt;\n        })\n        .transition()\n        .duration(0)\n        .style('opacity', d => (state.disabled[d.arcId % numGroups] ? 0 : 1));\n    } else {\n      const segments = getSegmentsInTime(clickId);\n      arcs\n        .style('opacity', 1)\n        .interrupt()\n        .transition()\n        .duration(delay)\n        .attrTween('d', d =>\n          segments[0] <= d.arcId && d.arcId <= segments[1]\n            ? arcTween(nArcSt.pie[d.arcId])(d)\n            : arcTween(nArcSt.mini[d.arcId])(d),\n        )\n        .each('end', () => {\n          inTransition = false;\n          arcSt = nArcSt;\n        })\n        .transition()\n        .duration(0)\n        .style('opacity', d => (state.disabled[d.arcId % numGroups] ? 0 : 1));\n      groupLabels\n        .interrupt()\n        .transition()\n        .duration(delay)\n        .attrTween('transform', d =>\n          translateTween({\n            outerRadius: maxRadius + 20,\n            innerRadius: maxRadius + 15,\n            startAngle: nArcSt.pie[segments[0] + d.arcId].startAngle,\n            endAngle: nArcSt.pie[segments[0] + d.arcId].endAngle,\n          })(d),\n        )\n        .style('opacity', d =>\n          state.disabled[d.arcId] ||\n          arcSt.pie[segments[0] + d.arcId].percent < labelThreshold\n            ? 0\n            : 1,\n        );\n    }\n  }\n\n  legend.dispatch.on('stateChange', newState => {\n    if (state.disabled !== newState.disabled) {\n      state.disabled = newState.disabled;\n      updateActive();\n    }\n  });\n}\n\nRose.displayName = 'Rose';\nRose.propTypes = propTypes;\n\nexport default Rose;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}