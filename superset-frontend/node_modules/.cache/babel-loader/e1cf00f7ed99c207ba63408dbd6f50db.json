{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getStandardizedControls, sections } from '@superset-ui/chart-controls';\nimport { FeatureFlag, isFeatureEnabled, t } from '@superset-ui/core';\nimport timeGrainSqlaAnimationOverrides from '../../utilities/controls';\nimport { formatSelectOptions } from '../../utilities/utils';\nimport { filterNulls, autozoom, jsColumns, jsDataMutator, jsTooltip, jsOnclickHref, legendFormat, legendPosition, lineColumn, fillColorPicker, strokeColorPicker, filled, stroked, extruded, viewport, pointRadiusFixed, multiplier, lineWidth, lineType, reverseLongLat, mapboxStyle } from '../../utilities/Shared_DeckGL';\nimport { dndLineColumn } from '../../utilities/sharedDndControls';\nconst lines = isFeatureEnabled(FeatureFlag.ENABLE_EXPLORE_DRAG_AND_DROP) ?\ndndLineColumn :\nlineColumn;\nconst config = {\n  controlPanelSections: [\n  sections.legacyRegularTime,\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      ...lines,\n      config: {\n        ...lines.config,\n        label: t('Polygon Column') } }],\n\n\n\n    [\n    {\n      ...lineType,\n      config: {\n        ...lineType.config,\n        label: t('Polygon Encoding') } }],\n\n\n\n    ['adhoc_filters'],\n    ['metric'],\n    [\n    {\n      ...pointRadiusFixed,\n      config: {\n        ...pointRadiusFixed.config,\n        label: t('Elevation') } }],\n\n\n\n    ['row_limit'],\n    [reverseLongLat],\n    [filterNulls]] },\n\n\n  {\n    label: t('Map'),\n    expanded: true,\n    controlSetRows: [\n    [mapboxStyle, viewport],\n    [autozoom, null]] },\n\n\n  {\n    label: t('Polygon Settings'),\n    expanded: true,\n    controlSetRows: [\n    [fillColorPicker, strokeColorPicker],\n    [filled, stroked],\n    [extruded, multiplier],\n    [lineWidth, null],\n    [\n    'linear_color_scheme',\n    {\n      name: 'opacity',\n      config: {\n        type: 'SliderControl',\n        label: t('Opacity'),\n        default: 80,\n        step: 1,\n        min: 0,\n        max: 100,\n        renderTrigger: true,\n        description: t('Opacity, expects values between 0 and 100') } }],\n\n\n\n    [\n    {\n      name: 'num_buckets',\n      config: {\n        type: 'SelectControl',\n        multi: false,\n        freeForm: true,\n        label: t('Number of buckets to group data'),\n        default: 5,\n        choices: formatSelectOptions([2, 3, 5, 10]),\n        description: t('How many buckets should the data be grouped in.'),\n        renderTrigger: true } },\n\n\n    {\n      name: 'break_points',\n      config: {\n        type: 'SelectControl',\n        multi: true,\n        freeForm: true,\n        label: t('Bucket break points'),\n        choices: formatSelectOptions([]),\n        description: t('List of n+1 values for bucketing metric into n buckets.'),\n        renderTrigger: true } }],\n\n\n\n    [\n    {\n      name: 'table_filter',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Emit Filter Events'),\n        renderTrigger: true,\n        default: false,\n        description: t('Whether to apply filter when items are clicked') } },\n\n\n    {\n      name: 'toggle_polygons',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Multiple filtering'),\n        renderTrigger: true,\n        default: true,\n        description: t('Allow sending multiple polygons as a filter event') } }],\n\n\n\n    [legendPosition, legendFormat]] },\n\n\n  {\n    label: t('Advanced'),\n    controlSetRows: [\n    [jsColumns],\n    [jsDataMutator],\n    [jsTooltip],\n    [jsOnclickHref]] }],\n\n\n\n  controlOverrides: {\n    metric: {\n      validators: [] },\n\n    time_grain_sqla: timeGrainSqlaAnimationOverrides },\n\n  formDataOverrides: (formData) => ({\n    ...formData,\n    metric: getStandardizedControls().shiftMetric() }) };\n\n\nexport default config;","map":{"version":3,"mappings":"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","names":["getStandardizedControls","sections","FeatureFlag","isFeatureEnabled","t","timeGrainSqlaAnimationOverrides","formatSelectOptions","filterNulls","autozoom","jsColumns","jsDataMutator","jsTooltip","jsOnclickHref","legendFormat","legendPosition","lineColumn","fillColorPicker","strokeColorPicker","filled","stroked","extruded","viewport","pointRadiusFixed","multiplier","lineWidth","lineType","reverseLongLat","mapboxStyle","dndLineColumn","lines","ENABLE_EXPLORE_DRAG_AND_DROP","config","controlPanelSections","legacyRegularTime","label","expanded","controlSetRows","name","type","default","step","min","max","renderTrigger","description","multi","freeForm","choices","controlOverrides","metric","validators","time_grain_sqla","formDataOverrides","formData","shiftMetric"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Polygon/controlPanel.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ControlPanelConfig,\n  getStandardizedControls,\n  sections,\n} from '@superset-ui/chart-controls';\nimport { FeatureFlag, isFeatureEnabled, t } from '@superset-ui/core';\nimport timeGrainSqlaAnimationOverrides from '../../utilities/controls';\nimport { formatSelectOptions } from '../../utilities/utils';\nimport {\n  filterNulls,\n  autozoom,\n  jsColumns,\n  jsDataMutator,\n  jsTooltip,\n  jsOnclickHref,\n  legendFormat,\n  legendPosition,\n  lineColumn,\n  fillColorPicker,\n  strokeColorPicker,\n  filled,\n  stroked,\n  extruded,\n  viewport,\n  pointRadiusFixed,\n  multiplier,\n  lineWidth,\n  lineType,\n  reverseLongLat,\n  mapboxStyle,\n} from '../../utilities/Shared_DeckGL';\nimport { dndLineColumn } from '../../utilities/sharedDndControls';\n\nconst lines = isFeatureEnabled(FeatureFlag.ENABLE_EXPLORE_DRAG_AND_DROP)\n  ? dndLineColumn\n  : lineColumn;\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.legacyRegularTime,\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            ...lines,\n            config: {\n              ...lines.config,\n              label: t('Polygon Column'),\n            },\n          },\n        ],\n        [\n          {\n            ...lineType,\n            config: {\n              ...lineType.config,\n              label: t('Polygon Encoding'),\n            },\n          },\n        ],\n        ['adhoc_filters'],\n        ['metric'],\n        [\n          {\n            ...pointRadiusFixed,\n            config: {\n              ...pointRadiusFixed.config,\n              label: t('Elevation'),\n            },\n          },\n        ],\n        ['row_limit'],\n        [reverseLongLat],\n        [filterNulls],\n      ],\n    },\n    {\n      label: t('Map'),\n      expanded: true,\n      controlSetRows: [\n        [mapboxStyle, viewport],\n        [autozoom, null],\n      ],\n    },\n    {\n      label: t('Polygon Settings'),\n      expanded: true,\n      controlSetRows: [\n        [fillColorPicker, strokeColorPicker],\n        [filled, stroked],\n        [extruded, multiplier],\n        [lineWidth, null],\n        [\n          'linear_color_scheme',\n          {\n            name: 'opacity',\n            config: {\n              type: 'SliderControl',\n              label: t('Opacity'),\n              default: 80,\n              step: 1,\n              min: 0,\n              max: 100,\n              renderTrigger: true,\n              description: t('Opacity, expects values between 0 and 100'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'num_buckets',\n            config: {\n              type: 'SelectControl',\n              multi: false,\n              freeForm: true,\n              label: t('Number of buckets to group data'),\n              default: 5,\n              choices: formatSelectOptions([2, 3, 5, 10]),\n              description: t('How many buckets should the data be grouped in.'),\n              renderTrigger: true,\n            },\n          },\n          {\n            name: 'break_points',\n            config: {\n              type: 'SelectControl',\n              multi: true,\n              freeForm: true,\n              label: t('Bucket break points'),\n              choices: formatSelectOptions([]),\n              description: t(\n                'List of n+1 values for bucketing metric into n buckets.',\n              ),\n              renderTrigger: true,\n            },\n          },\n        ],\n        [\n          {\n            name: 'table_filter',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Emit Filter Events'),\n              renderTrigger: true,\n              default: false,\n              description: t('Whether to apply filter when items are clicked'),\n            },\n          },\n          {\n            name: 'toggle_polygons',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Multiple filtering'),\n              renderTrigger: true,\n              default: true,\n              description: t(\n                'Allow sending multiple polygons as a filter event',\n              ),\n            },\n          },\n        ],\n        [legendPosition, legendFormat],\n      ],\n    },\n    {\n      label: t('Advanced'),\n      controlSetRows: [\n        [jsColumns],\n        [jsDataMutator],\n        [jsTooltip],\n        [jsOnclickHref],\n      ],\n    },\n  ],\n  controlOverrides: {\n    metric: {\n      validators: [],\n    },\n    time_grain_sqla: timeGrainSqlaAnimationOverrides,\n  },\n  formDataOverrides: formData => ({\n    ...formData,\n    metric: getStandardizedControls().shiftMetric(),\n  }),\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}