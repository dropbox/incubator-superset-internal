{"ast":null,"code":"import _throttle from \"lodash/throttle\";import _kebabCase from \"lodash/kebabCase\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport d3 from 'd3';\nimport moment from 'moment';\nimport nv from 'nvd3-fork';\nimport PropTypes from 'prop-types';\nimport {\nCategoricalColorNamespace,\nevalExpression,\ngetNumberFormatter,\ngetTimeFormatter,\nisDefined,\nNumberFormats,\nsmartDateVerboseFormatter,\nt } from\n'@superset-ui/core';\n\nimport 'nvd3-fork/build/nv.d3.css';\n\n/* eslint-disable-next-line */\nimport ANNOTATION_TYPES, {\napplyNativeColumns } from\n'./vendor/superset/AnnotationTypes';\nimport isTruthy from './utils/isTruthy';\nimport {\ncleanColorInput,\ncomputeBarChartWidth,\ncomputeYDomain,\ncomputeStackedYDomain,\ndrawBarValues,\ngenerateBubbleTooltipContent,\ngenerateCompareTooltipContent,\ngenerateRichLineTooltipContent,\ngenerateTimePivotTooltip,\ngenerateTooltipClassName,\ngenerateAreaChartTooltipContent,\ngetMaxLabelSize,\ngetTimeOrNumberFormatter,\nhideTooltips,\ntipFactory,\ntryNumify,\nremoveTooltip,\nsetAxisShowMaxMin,\nstringifyTimeRange,\nwrapTooltip } from\n'./utils';\nimport {\nannotationLayerType,\nboxPlotValueType,\nbulletDataType,\ncategoryAndValueXYType,\nrgbObjectType,\nnumericXYType,\nnumberOrAutoType,\nstringOrObjectWithLabelType } from\n'./PropTypes';\n\nconst NO_DATA_RENDER_DATA = [\n{ text: 'No data', dy: '-.75em', class: 'header' },\n{\n  text: 'Adjust filters or check the Datasource.',\n  dy: '.75em',\n  class: 'body' }];\n\n\n\n// Override the noData render function to make a prettier UX\n// Code adapted from https://github.com/novus/nvd3/blob/master/src/utils.js#L653\nnv.utils.noData = function noData(chart, container) {\n  const opt = chart.options();\n  const margin = opt.margin();\n  const height = nv.utils.availableHeight(null, container, margin);\n  const width = nv.utils.availableWidth(null, container, margin);\n  const x = margin.left + width / 2;\n  const y = margin.top + height / 2;\n\n  // Remove any previously created chart components\n  container.selectAll('g').remove();\n\n  const noDataText = container.\n  selectAll('.nv-noData').\n  data(NO_DATA_RENDER_DATA);\n\n  noDataText.\n  enter().\n  append('text').\n  attr('class', (d) => `nvd3 nv-noData ${d.class}`).\n  attr('dy', (d) => d.dy).\n  style('text-anchor', 'middle');\n\n  noDataText.\n  attr('x', x).\n  attr('y', y).\n  text((d) => d.text);\n};\n\nconst { getColor, getScale } = CategoricalColorNamespace;\n\n// Limit on how large axes margins can grow as the chart window is resized\nconst MAX_MARGIN_PAD = 30;\nconst MIN_HEIGHT_FOR_BRUSH = 480;\nconst MAX_NO_CHARACTERS_IN_LABEL = 40;\n\nconst BREAKPOINTS = {\n  small: 340 };\n\n\nconst TIMESERIES_VIZ_TYPES = ['line', 'area', 'compare', 'bar', 'time_pivot'];\n\nconst CHART_ID_PREFIX = 'chart-id-';\n\nconst propTypes = {\n  data: PropTypes.oneOfType([\n  PropTypes.arrayOf(\n  PropTypes.oneOfType([\n  // pie\n  categoryAndValueXYType,\n  // dist-bar\n  PropTypes.shape({\n    key: PropTypes.string,\n    values: PropTypes.arrayOf(categoryAndValueXYType) }),\n\n  // area, line, compare, bar\n  PropTypes.shape({\n    key: PropTypes.arrayOf(PropTypes.string),\n    values: PropTypes.arrayOf(numericXYType) }),\n\n  // dual-line\n  PropTypes.shape({\n    classed: PropTypes.string,\n    key: PropTypes.string,\n    type: PropTypes.string,\n    values: PropTypes.arrayOf(numericXYType),\n    yAxis: PropTypes.number }),\n\n  // box-plot\n  PropTypes.shape({\n    label: PropTypes.string,\n    values: PropTypes.arrayOf(boxPlotValueType) }),\n\n  // bubble\n  PropTypes.shape({\n    key: PropTypes.string,\n    values: PropTypes.arrayOf(PropTypes.object) })])),\n\n\n\n  // bullet\n  bulletDataType]),\n\n  width: PropTypes.number,\n  height: PropTypes.number,\n  annotationData: PropTypes.object,\n  annotationLayers: PropTypes.arrayOf(annotationLayerType),\n  bottomMargin: numberOrAutoType,\n  colorScheme: PropTypes.string,\n  comparisonType: PropTypes.string,\n  contribution: PropTypes.bool,\n  leftMargin: numberOrAutoType,\n  onError: PropTypes.func,\n  showLegend: PropTypes.bool,\n  showMarkers: PropTypes.bool,\n  useRichTooltip: PropTypes.bool,\n  vizType: PropTypes.oneOf([\n  'area',\n  'bar',\n  'box_plot',\n  'bubble',\n  'bullet',\n  'compare',\n  'column',\n  'dist_bar',\n  'line',\n  'time_pivot',\n  'pie']),\n\n  xAxisFormat: PropTypes.string,\n  numberFormat: PropTypes.string,\n  xAxisLabel: PropTypes.string,\n  xAxisShowMinMax: PropTypes.bool,\n  xIsLogScale: PropTypes.bool,\n  xTicksLayout: PropTypes.oneOf(['auto', 'staggered', '45°']),\n  yAxisFormat: PropTypes.string,\n  yAxisBounds: PropTypes.arrayOf(PropTypes.number),\n  yAxisLabel: PropTypes.string,\n  yAxisShowMinMax: PropTypes.bool,\n  yIsLogScale: PropTypes.bool,\n  // 'dist-bar' only\n  orderBars: PropTypes.bool,\n  // 'bar' or 'dist-bar'\n  isBarStacked: PropTypes.bool,\n  showBarValue: PropTypes.bool,\n  // 'bar', 'dist-bar' or 'column'\n  reduceXTicks: PropTypes.bool,\n  // 'bar', 'dist-bar' or 'area'\n  showControls: PropTypes.bool,\n  // 'line' only\n  showBrush: PropTypes.oneOf([true, 'yes', false, 'no', 'auto']),\n  onBrushEnd: PropTypes.func,\n  // 'line-multi' or 'dual-line'\n  yAxis2Format: PropTypes.string,\n  // 'line', 'time-pivot', 'dual-line' or 'line-multi'\n  lineInterpolation: PropTypes.string,\n  // 'pie' only\n  isDonut: PropTypes.bool,\n  isPieLabelOutside: PropTypes.bool,\n  pieLabelType: PropTypes.oneOf([\n  'key',\n  'value',\n  'percent',\n  'key_value',\n  'key_percent',\n  'key_value_percent']),\n\n  showLabels: PropTypes.bool,\n  // 'area' only\n  areaStackedStyle: PropTypes.string,\n  // 'bubble' only\n  entity: PropTypes.string,\n  maxBubbleSize: PropTypes.number,\n  xField: stringOrObjectWithLabelType,\n  yField: stringOrObjectWithLabelType,\n  sizeField: stringOrObjectWithLabelType,\n  // time-pivot only\n  baseColor: rgbObjectType };\n\n\nconst NOOP = () => {};\nconst formatter = getNumberFormatter();\n\nfunction nvd3Vis(element, props) {\n  const {\n    data,\n    width: maxWidth,\n    height: maxHeight,\n    annotationData,\n    annotationLayers = [],\n    areaStackedStyle,\n    baseColor,\n    bottomMargin,\n    colorScheme,\n    comparisonType,\n    contribution,\n    entity,\n    isBarStacked,\n    isDonut,\n    isPieLabelOutside,\n    leftMargin,\n    lineInterpolation = 'linear',\n    markerLabels,\n    markerLines,\n    markerLineLabels,\n    markers,\n    maxBubbleSize,\n    onBrushEnd = NOOP,\n    onError = NOOP,\n    orderBars,\n    pieLabelType,\n    rangeLabels,\n    ranges,\n    reduceXTicks = false,\n    showBarValue,\n    showBrush,\n    showControls,\n    showLabels,\n    showLegend,\n    showMarkers,\n    sizeField,\n    useRichTooltip,\n    vizType,\n    xAxisFormat,\n    numberFormat,\n    xAxisLabel,\n    xAxisShowMinMax = false,\n    xField,\n    xIsLogScale,\n    xTicksLayout,\n    yAxisFormat,\n    yAxisBounds,\n    yAxisLabel,\n    yAxisShowMinMax = false,\n    yAxis2ShowMinMax = false,\n    yField,\n    yIsLogScale,\n    sliceId } =\n  props;\n\n  const isExplore = document.querySelector('#explorer-container') !== null;\n  const container = element;\n  container.innerHTML = '';\n  const activeAnnotationLayers = annotationLayers.filter((layer) => layer.show);\n\n  // Search for the chart id in a parent div from the nvd3 chart\n  let chartContainer = container;\n  let chartId = null;\n  while (chartContainer.parentElement) {\n    if (chartContainer.parentElement.id.startsWith(CHART_ID_PREFIX)) {\n      chartId = chartContainer.parentElement.id;\n      break;\n    }\n\n    chartContainer = chartContainer.parentElement;\n  }\n\n  let chart;\n  let width = maxWidth;\n  let colorKey = 'key';\n\n  container.style.width = `${maxWidth}px`;\n  container.style.height = `${maxHeight}px`;\n\n  function isVizTypes(types) {\n    return _includesInstanceProperty(types).call(types, vizType);\n  }\n\n  const drawGraph = function drawGraph() {var _context;\n    const d3Element = d3.select(element);\n    d3Element.classed('superset-legacy-chart-nvd3', true);\n    d3Element.classed(`superset-legacy-chart-nvd3-${_kebabCase(vizType)}`, true);\n    let svg = d3Element.select('svg');\n    if (svg.empty()) {\n      svg = d3Element.append('svg');\n    }\n    const height = vizType === 'bullet' ? Math.min(maxHeight, 50) : maxHeight;\n    const isTimeSeries = isVizTypes(TIMESERIES_VIZ_TYPES);\n\n    // Handling xAxis ticks settings\n    const staggerLabels = xTicksLayout === 'staggered';\n    const xLabelRotation =\n    xTicksLayout === 'auto' && isVizTypes(['column', 'dist_bar']) ||\n    xTicksLayout === '45°' ?\n    45 :\n    0;\n    if (xLabelRotation === 45 && isTruthy(showBrush)) {\n      onError(\n      t('You cannot use 45° tick layout along with the time range filter'));\n\n\n      return null;\n    }\n\n    const canShowBrush =\n    isTruthy(showBrush) ||\n    showBrush === 'auto' &&\n    maxHeight >= MIN_HEIGHT_FOR_BRUSH &&\n    xTicksLayout !== '45°';\n    const numberFormatter = getNumberFormatter(numberFormat);\n\n    switch (vizType) {\n      case 'line':\n        if (canShowBrush) {\n          chart = nv.models.lineWithFocusChart();\n          if (staggerLabels) {\n            // Give a bit more room to focus area if X axis ticks are staggered\n            chart.focus.margin({ bottom: 40 });\n            chart.focusHeight(80);\n          }\n          chart.focus.xScale(d3.time.scale.utc());\n        } else {\n          chart = nv.models.lineChart();\n        }\n        chart.xScale(d3.time.scale.utc());\n        chart.interpolate(lineInterpolation);\n        chart.clipEdge(false);\n        break;\n\n      case 'time_pivot':\n        chart = nv.models.lineChart();\n        chart.xScale(d3.time.scale.utc());\n        chart.interpolate(lineInterpolation);\n        break;\n\n      case 'bar':\n        chart = nv.models.\n        multiBarChart().\n        showControls(showControls).\n        groupSpacing(0.1);\n\n        if (!reduceXTicks) {\n          width = computeBarChartWidth(data, isBarStacked, maxWidth);\n        }\n        chart.width(width);\n        chart.xAxis.showMaxMin(false);\n        chart.stacked(isBarStacked);\n        break;\n\n      case 'dist_bar':\n        chart = nv.models.\n        multiBarChart().\n        showControls(showControls).\n        reduceXTicks(reduceXTicks).\n        groupSpacing(0.1); // Distance between each group of bars.\n\n        chart.xAxis.showMaxMin(false);\n\n        chart.stacked(isBarStacked);\n        if (orderBars) {\n          data.forEach((d) => {\n            const newValues = [...d.values]; // need to copy values to avoid redux store changed.\n            // eslint-disable-next-line no-param-reassign\n            d.values = newValues.sort((a, b) =>\n            tryNumify(a.x) < tryNumify(b.x) ? -1 : 1);\n\n          });\n        }\n        if (!reduceXTicks) {\n          width = computeBarChartWidth(data, isBarStacked, maxWidth);\n        }\n        chart.width(width);\n        break;\n\n      case 'pie':\n        chart = nv.models.pieChart();\n        colorKey = 'x';\n        chart.valueFormat(numberFormatter);\n        if (isDonut) {\n          chart.donut(true);\n        }\n        chart.showLabels(showLabels);\n        chart.labelsOutside(isPieLabelOutside);\n        // Configure the minimum slice size for labels to show up\n        chart.labelThreshold(0.05);\n        chart.cornerRadius(true);\n\n        if (_includesInstanceProperty(_context = ['key', 'value', 'percent']).call(_context, pieLabelType)) {\n          chart.labelType(pieLabelType);\n        } else if (pieLabelType === 'key_value') {\n          chart.labelType((d) => `${d.data.x}: ${numberFormatter(d.data.y)}`);\n        } else {\n          // pieLabelType in ['key_percent', 'key_value_percent']\n          const total = d3.sum(data, (d) => d.y);\n          const percentFormatter = getNumberFormatter(\n          NumberFormats.PERCENT_2_POINT);\n\n          if (pieLabelType === 'key_percent') {\n            chart.tooltip.valueFormatter((d) => percentFormatter(d));\n            chart.labelType(\n            (d) => `${d.data.x}: ${percentFormatter(d.data.y / total)}`);\n\n          } else {\n            // pieLabelType === 'key_value_percent'\n            chart.tooltip.valueFormatter(\n            (d) => `${numberFormatter(d)} (${percentFormatter(d / total)})`);\n\n            chart.labelType(\n            (d) =>\n            `${d.data.x}: ${numberFormatter(d.data.y)} (${percentFormatter(\n            d.data.y / total)\n            })`);\n\n          }\n        }\n        // Pie chart does not need top margin\n        chart.margin({ top: 0 });\n        break;\n\n      case 'column':\n        chart = nv.models.multiBarChart().reduceXTicks(false);\n        break;\n\n      case 'compare':\n        chart = nv.models.cumulativeLineChart();\n        chart.xScale(d3.time.scale.utc());\n        chart.useInteractiveGuideline(true);\n        chart.xAxis.showMaxMin(false);\n        break;\n\n      case 'bubble':\n        chart = nv.models.scatterChart();\n        chart.showDistX(false);\n        chart.showDistY(false);\n        chart.tooltip.contentGenerator((d) =>\n        generateBubbleTooltipContent({\n          point: d.point,\n          entity,\n          xField,\n          yField,\n          sizeField,\n          xFormatter: getTimeOrNumberFormatter(xAxisFormat),\n          yFormatter: getTimeOrNumberFormatter(yAxisFormat),\n          sizeFormatter: formatter }));\n\n\n        chart.pointRange([5, maxBubbleSize ** 2]);\n        chart.pointDomain([\n        0,\n        d3.max(data, (d) => d3.max(d.values, (v) => v.size))]);\n\n        break;\n\n      case 'area':\n        chart = nv.models.stackedAreaChart();\n        chart.showControls(showControls);\n        chart.style(areaStackedStyle);\n        chart.xScale(d3.time.scale.utc());\n        break;\n\n      case 'box_plot':\n        colorKey = 'label';\n        chart = nv.models.boxPlotChart();\n        chart.x((d) => d.label);\n        chart.maxBoxWidth(75); // prevent boxes from being incredibly wide\n        break;\n\n      case 'bullet':\n        chart = nv.models.bulletChart();\n        data.rangeLabels = rangeLabels;\n        data.ranges = ranges;\n        data.markerLabels = markerLabels;\n        data.markerLines = markerLines;\n        data.markerLineLabels = markerLineLabels;\n        data.markers = markers;\n        break;\n\n      default:\n        throw new Error(`Unrecognized visualization for nvd3${vizType}`);}\n\n    // Assuming the container has padding already other than for top margin\n    chart.margin({ left: 0, bottom: 0 });\n\n    if (showBarValue) {\n      drawBarValues(svg, data, isBarStacked, yAxisFormat);\n      chart.dispatch.on('stateChange.drawBarValues', () => {\n        drawBarValues(svg, data, isBarStacked, yAxisFormat);\n      });\n    }\n\n    if (canShowBrush && onBrushEnd !== NOOP) {\n      if (chart.focus) {\n        chart.focus.dispatch.on('brush', (event) => {\n          const timeRange = stringifyTimeRange(event.extent);\n          if (timeRange) {\n            event.brush.on('brushend', () => {\n              onBrushEnd(timeRange);\n            });\n          }\n        });\n      }\n    }\n\n    if (chart.xAxis && chart.xAxis.staggerLabels) {\n      chart.xAxis.staggerLabels(staggerLabels);\n    }\n    if (chart.xAxis && chart.xAxis.rotateLabels) {\n      chart.xAxis.rotateLabels(xLabelRotation);\n    }\n    if (chart.x2Axis && chart.x2Axis.staggerLabels) {\n      chart.x2Axis.staggerLabels(staggerLabels);\n    }\n    if (chart.x2Axis && chart.x2Axis.rotateLabels) {\n      chart.x2Axis.rotateLabels(xLabelRotation);\n    }\n\n    if ('showLegend' in chart && typeof showLegend !== 'undefined') {\n      if (width < BREAKPOINTS.small && vizType !== 'pie') {\n        chart.showLegend(false);\n      } else {\n        chart.showLegend(showLegend);\n      }\n    }\n\n    if (yIsLogScale) {\n      chart.yScale(d3.scale.log());\n    }\n    if (xIsLogScale) {\n      chart.xScale(d3.scale.log());\n    }\n\n    let xAxisFormatter;\n    if (isTimeSeries) {\n      xAxisFormatter = getTimeFormatter(xAxisFormat);\n      // In tooltips, always use the verbose time format\n      chart.interactiveLayer.tooltip.headerFormatter(smartDateVerboseFormatter);\n    } else {\n      xAxisFormatter = getTimeOrNumberFormatter(xAxisFormat);\n    }\n    if (chart.x2Axis && chart.x2Axis.tickFormat) {\n      chart.x2Axis.tickFormat(xAxisFormatter);\n    }\n    if (chart.xAxis && chart.xAxis.tickFormat) {\n      const isXAxisString = isVizTypes(['dist_bar', 'box_plot']);\n      if (isXAxisString) {\n        chart.xAxis.tickFormat((d) =>\n        d.length > MAX_NO_CHARACTERS_IN_LABEL ?\n        `${d.slice(0, Math.max(0, MAX_NO_CHARACTERS_IN_LABEL))}…` :\n        d);\n\n      } else {\n        chart.xAxis.tickFormat(xAxisFormatter);\n      }\n    }\n\n    let yAxisFormatter = getTimeOrNumberFormatter(yAxisFormat);\n    if (chart.yAxis && chart.yAxis.tickFormat) {\n      if (\n      (contribution || comparisonType === 'percentage') && (\n      !yAxisFormat ||\n      yAxisFormat === NumberFormats.SMART_NUMBER ||\n      yAxisFormat === NumberFormats.SMART_NUMBER_SIGNED))\n      {\n        // When computing a \"Percentage\" or \"Contribution\" selected,\n        // force a percentage format if no custom formatting set\n        yAxisFormatter = getNumberFormatter(NumberFormats.PERCENT_1_POINT);\n      }\n      chart.yAxis.tickFormat(yAxisFormatter);\n    }\n    if (chart.y2Axis && chart.y2Axis.tickFormat) {\n      chart.y2Axis.tickFormat(yAxisFormatter);\n    }\n\n    if (chart.yAxis) {\n      chart.yAxis.ticks(5);\n    }\n    if (chart.y2Axis) {\n      chart.y2Axis.ticks(5);\n    }\n\n    // Set showMaxMin for all axis\n    setAxisShowMaxMin(chart.xAxis, xAxisShowMinMax);\n    setAxisShowMaxMin(chart.x2Axis, xAxisShowMinMax);\n    setAxisShowMaxMin(chart.yAxis, yAxisShowMinMax);\n    setAxisShowMaxMin(chart.y2Axis, yAxis2ShowMinMax || yAxisShowMinMax);\n\n    if (vizType === 'time_pivot') {\n      if (baseColor) {\n        const { r, g, b } = baseColor;\n        chart.color((d) => {\n          const alpha = d.rank > 0 ? d.perc * 0.5 : 1;\n\n          return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n        });\n      }\n\n      chart.useInteractiveGuideline(true);\n      chart.interactiveLayer.tooltip.contentGenerator((d) =>\n      generateTimePivotTooltip(d, xAxisFormatter, yAxisFormatter));\n\n    } else if (vizType !== 'bullet') {\n      const colorFn = getScale(colorScheme);\n      chart.color(\n      (d) => d.color || colorFn(cleanColorInput(d[colorKey]), sliceId));\n\n    }\n\n    if (isVizTypes(['line', 'area', 'bar', 'dist_bar']) && useRichTooltip) {\n      chart.useInteractiveGuideline(true);\n      if (vizType === 'line' || vizType === 'bar') {\n        chart.interactiveLayer.tooltip.contentGenerator((d) =>\n        generateRichLineTooltipContent(\n        d,\n        smartDateVerboseFormatter,\n        yAxisFormatter));\n\n\n      } else if (vizType === 'dist_bar') {\n        chart.interactiveLayer.tooltip.contentGenerator((d) =>\n        generateCompareTooltipContent(d, yAxisFormatter));\n\n      } else {\n        // area chart\n        chart.interactiveLayer.tooltip.contentGenerator((d) =>\n        generateAreaChartTooltipContent(\n        d,\n        smartDateVerboseFormatter,\n        yAxisFormatter,\n        chart));\n\n\n      }\n    }\n\n    if (isVizTypes(['compare'])) {\n      chart.interactiveLayer.tooltip.contentGenerator((d) =>\n      generateCompareTooltipContent(d, yAxisFormatter));\n\n    }\n\n    // This is needed for correct chart dimensions if a chart is rendered in a hidden container\n    chart.width(width);\n    chart.height(height);\n\n    svg.\n    datum(data).\n    transition().\n    duration(500).\n    attr('height', height).\n    attr('width', width).\n    call(chart);\n\n    // For log scale, only show 1, 10, 100, 1000, ...\n    if (yIsLogScale) {\n      chart.yAxis.tickFormat((d) =>\n      d !== 0 && Math.log10(d) % 1 === 0 ? yAxisFormatter(d) : '');\n\n    }\n\n    if (xLabelRotation > 0) {\n      // shift labels to the left so they look better\n      const xTicks = svg.select('.nv-x.nv-axis > g').selectAll('g');\n      xTicks.selectAll('text').attr('dx', -6.5);\n    }\n\n    const applyYAxisBounds = () => {\n      if (\n      chart.yDomain &&\n      Array.isArray(yAxisBounds) &&\n      yAxisBounds.length === 2)\n      {\n        const [customMin, customMax] = yAxisBounds;\n        const hasCustomMin = isDefined(customMin) && !Number.isNaN(customMin);\n        const hasCustomMax = isDefined(customMax) && !Number.isNaN(customMax);\n\n        if (\n        (hasCustomMin || hasCustomMax) &&\n        vizType === 'area' &&\n        chart.style() === 'expand')\n        {\n          // Because there are custom bounds, we need to override them back to 0%-100% since this\n          // is an expanded area chart\n          chart.yDomain([0, 1]);\n        } else if (\n        (hasCustomMin || hasCustomMax) &&\n        vizType === 'area' &&\n        chart.style() === 'stream')\n        {\n          // Because there are custom bounds, we need to override them back to the domain of the\n          // data since this is a stream area chart\n          chart.yDomain(computeStackedYDomain(data));\n        } else if (hasCustomMin && hasCustomMax) {\n          // Override the y domain if there's both a custom min and max\n          chart.yDomain([customMin, customMax]);\n          chart.clipEdge(true);\n        } else if (hasCustomMin || hasCustomMax) {\n          // Only one of the bounds has been set, so we need to manually calculate the other one\n          let [trueMin, trueMax] = [0, 1];\n\n          // These viz types can be stacked\n          // They correspond to the nvd3 stackedAreaChart and multiBarChart\n          if (\n          vizType === 'area' ||\n          isVizTypes(['bar', 'dist_bar']) && chart.stacked())\n          {\n            // This is a stacked area chart or a stacked bar chart\n            [trueMin, trueMax] = computeStackedYDomain(data);\n          } else {\n            [trueMin, trueMax] = computeYDomain(data);\n          }\n\n          const min = hasCustomMin ? customMin : trueMin;\n          const max = hasCustomMax ? customMax : trueMax;\n          chart.yDomain([min, max]);\n          chart.clipEdge(true);\n        }\n      }\n    };\n    applyYAxisBounds();\n\n    // Also reapply on each state change to account for enabled/disabled series\n    if (chart.dispatch && chart.dispatch.stateChange) {\n      chart.dispatch.on('stateChange.applyYAxisBounds', applyYAxisBounds);\n    }\n\n    if (showMarkers) {\n      svg.\n      selectAll('.nv-point').\n      style('stroke-opacity', 1).\n      style('fill-opacity', 1);\n\n      // redo on legend toggle; nvd3 calls the callback *before* the line is\n      // drawn, so we need to add a small delay here\n      chart.dispatch.on('stateChange.showMarkers', () => {\n        setTimeout(() => {\n          svg.\n          selectAll('.nv-point').\n          style('stroke-opacity', 1).\n          style('fill-opacity', 1);\n        }, 10);\n      });\n    }\n\n    if (chart.yAxis !== undefined || chart.yAxis2 !== undefined) {\n      // Hack to adjust y axis left margin to accommodate long numbers\n      const marginPad = Math.ceil(\n      Math.min(maxWidth * (isExplore ? 0.01 : 0.03), MAX_MARGIN_PAD));\n\n      // Hack to adjust margins to accommodate long axis tick labels.\n      // - has to be done only after the chart has been rendered once\n      // - measure the width or height of the labels\n      // ---- (x axis labels are rotated 45 degrees so we use height),\n      // - adjust margins based on these measures and render again\n      const margins = chart.margin();\n      if (chart.xAxis) {\n        margins.bottom = 28;\n      }\n      const maxYAxisLabelWidth = getMaxLabelSize(\n      svg,\n      chart.yAxis2 ? 'nv-y1' : 'nv-y');\n\n      const maxXAxisLabelHeight = getMaxLabelSize(svg, 'nv-x');\n      margins.left = maxYAxisLabelWidth + marginPad;\n\n      if (yAxisLabel && yAxisLabel !== '') {\n        margins.left += 25;\n      }\n      if (showBarValue) {\n        // Add more margin to avoid label colliding with legend.\n        margins.top += 24;\n      }\n      if (xAxisShowMinMax) {\n        // If x bounds are shown, we need a right margin\n        margins.right = Math.max(20, maxXAxisLabelHeight / 2) + marginPad;\n      }\n      if (xLabelRotation === 45) {\n        margins.bottom =\n        maxXAxisLabelHeight * Math.sin(Math.PI * xLabelRotation / 180) +\n        marginPad +\n        30;\n        margins.right =\n        maxXAxisLabelHeight * Math.cos(Math.PI * xLabelRotation / 180) +\n        marginPad;\n      } else if (staggerLabels) {\n        margins.bottom = 40;\n      }\n\n      if (bottomMargin && bottomMargin !== 'auto') {\n        margins.bottom = parseInt(bottomMargin, 10);\n      }\n      if (leftMargin && leftMargin !== 'auto') {\n        margins.left = leftMargin;\n      }\n\n      if (xAxisLabel && xAxisLabel !== '' && chart.xAxis) {\n        margins.bottom += 25;\n        let distance = 0;\n        if (margins.bottom && !Number.isNaN(margins.bottom)) {\n          distance = margins.bottom - 45;\n        }\n        // nvd3 bug axisLabelDistance is disregarded on xAxis\n        // https://github.com/krispo/angular-nvd3/issues/90\n        chart.xAxis.axisLabel(xAxisLabel).axisLabelDistance(distance);\n      }\n\n      if (yAxisLabel && yAxisLabel !== '' && chart.yAxis) {\n        let distance = 0;\n        if (margins.left && !Number.isNaN(margins.left)) {\n          distance = margins.left - 70;\n        }\n        chart.yAxis.axisLabel(yAxisLabel).axisLabelDistance(distance);\n      }\n      if (isTimeSeries && annotationData && activeAnnotationLayers.length > 0) {\n        // Time series annotations add additional data\n        const timeSeriesAnnotations = activeAnnotationLayers.\n        filter(\n        (layer) => layer.annotationType === ANNOTATION_TYPES.TIME_SERIES).\n\n        reduce(\n        (bushel, a) =>\n        bushel.concat(\n        (annotationData[a.name] || []).map((series) => {\n          if (!series) {\n            return {};\n          }\n          const key = Array.isArray(series.key) ?\n          `${a.name}, ${series.key.join(', ')}` :\n          `${a.name}, ${series.key}`;\n\n          return {\n            ...series,\n            key,\n            color: a.color,\n            strokeWidth: a.width,\n            classed: `${a.opacity} ${a.style} nv-timeseries-annotation-layer showMarkers${a.showMarkers} hideLine${a.hideLine}` };\n\n        })),\n\n        []);\n\n        data.push(...timeSeriesAnnotations);\n      }\n\n      // Uniquely identify tooltips based on chartId so this chart instance only\n      // controls its own tooltips\n      if (chartId) {\n        if (chart && chart.interactiveLayer && chart.interactiveLayer.tooltip) {\n          chart.interactiveLayer.tooltip.classes([\n          generateTooltipClassName(chartId)]);\n\n        }\n\n        if (chart && chart.tooltip) {\n          chart.tooltip.classes([generateTooltipClassName(chartId)]);\n        }\n      }\n\n      // render chart\n      chart.margin(margins);\n      svg.\n      datum(data).\n      transition().\n      duration(500).\n      attr('width', width).\n      attr('height', height).\n      call(chart);\n\n      // On scroll, hide (not remove) tooltips so they can reappear on hover.\n      // Throttle to only 4x/second.\n      window.addEventListener(\n      'scroll',\n      _throttle(() => hideTooltips(false), 250));\n\n\n      // The below code should be run AFTER rendering because chart is updated in call()\n      if (isTimeSeries && activeAnnotationLayers.length > 0) {\n        // Formula annotations\n        const formulas = activeAnnotationLayers.filter(\n        (a) => a.annotationType === ANNOTATION_TYPES.FORMULA);\n\n\n        let xMax;\n        let xMin;\n        let xScale;\n        if (vizType === 'bar') {\n          xMin = d3.min(data[0].values, (d) => d.x);\n          xMax = d3.max(data[0].values, (d) => d.x);\n          xScale = d3.scale.\n          quantile().\n          domain([xMin, xMax]).\n          range(chart.xAxis.range());\n        } else {\n          xMin = chart.xAxis.scale().domain()[0].valueOf();\n          xMax = chart.xAxis.scale().domain()[1].valueOf();\n          if (chart.xScale) {\n            xScale = chart.xScale();\n          } else if (chart.xAxis.scale) {\n            xScale = chart.xAxis.scale();\n          } else {\n            xScale = d3.scale.linear();\n          }\n        }\n        if (xScale && xScale.clamp) {\n          xScale.clamp(true);\n        }\n\n        if (formulas.length > 0) {\n          const xValues = [];\n          if (vizType === 'bar') {\n            // For bar-charts we want one data point evaluated for every\n            // data point that will be displayed.\n            const distinct = data.reduce((xVals, d) => {\n              d.values.forEach((x) => xVals.add(x.x));\n\n              return xVals;\n            }, new Set());\n            xValues.push(...distinct.values());\n            xValues.sort();\n          } else {\n            // For every other time visualization it should be ok, to have a\n            // data points in even intervals.\n            let period = Math.min(\n            ...data.map((d) =>\n            Math.min(\n            ...d.values.slice(1).map((v, i) => v.x - d.values[i].x))));\n\n\n\n            const dataPoints = (xMax - xMin) / (period || 1);\n            // make sure that there are enough data points and not too many\n            period = dataPoints < 100 ? (xMax - xMin) / 100 : period;\n            period = dataPoints > 500 ? (xMax - xMin) / 500 : period;\n            xValues.push(xMin);\n            for (let x = xMin; x < xMax; x += period) {\n              xValues.push(x);\n            }\n            xValues.push(xMax);\n          }\n          const formulaData = formulas.map((fo) => {\n            const { value: expression } = fo;\n            return {\n              key: fo.name,\n              values: xValues.map((x) => ({\n                x,\n                y: evalExpression(expression, x) })),\n\n              color: fo.color,\n              strokeWidth: fo.width,\n              classed: `${fo.opacity} ${fo.style}` };\n\n          });\n          data.push(...formulaData);\n        }\n        const xAxis = chart.xAxis1 ? chart.xAxis1 : chart.xAxis;\n        const yAxis = chart.yAxis1 ? chart.yAxis1 : chart.yAxis;\n        const chartWidth = xAxis.scale().range()[1];\n        const annotationHeight = yAxis.scale().range()[0];\n\n        if (annotationData) {\n          // Event annotations\n          activeAnnotationLayers.\n          filter(\n          (x) =>\n          x.annotationType === ANNOTATION_TYPES.EVENT &&\n          annotationData &&\n          annotationData[x.name]).\n\n          forEach((config, index) => {\n            const e = applyNativeColumns(config);\n            // Add event annotation layer\n            const annotations = d3.\n            select(element).\n            select('.nv-wrap').\n            append('g').\n            attr('class', `nv-event-annotation-layer-${index}`);\n            const aColor =\n            e.color || getColor(cleanColorInput(e.name), colorScheme);\n\n            const tip = tipFactory({\n              ...e,\n              annotationTipClass: `arrow-down nv-event-annotation-layer-${config.sourceType}` });\n\n            const records = (annotationData[e.name].records || []).\n            map((r) => {\n              const timeValue = new Date(moment.utc(r[e.timeColumn]));\n\n              return {\n                ...r,\n                [e.timeColumn]: timeValue };\n\n            }).\n            filter(\n            (record) =>\n            !Number.isNaN(record[e.timeColumn].getMilliseconds()));\n\n\n            if (records.length > 0) {\n              annotations.\n              selectAll('line').\n              data(records).\n              enter().\n              append('line').\n              attr({\n                x1: (d) => xScale(new Date(d[e.timeColumn])),\n                y1: 0,\n                x2: (d) => xScale(new Date(d[e.timeColumn])),\n                y2: annotationHeight }).\n\n              attr('class', `${e.opacity} ${e.style}`).\n              style('stroke', aColor).\n              style('stroke-width', e.width).\n              on('mouseover', tip.show).\n              on('mouseout', tip.hide).\n              call(tip);\n            }\n\n            // update annotation positions on brush event\n            if (chart.focus) {\n              chart.focus.dispatch.on('onBrush.event-annotation', () => {\n                annotations.\n                selectAll('line').\n                data(records).\n                attr({\n                  x1: (d) => xScale(new Date(d[e.timeColumn])),\n                  y1: 0,\n                  x2: (d) => xScale(new Date(d[e.timeColumn])),\n                  y2: annotationHeight,\n                  opacity: (d) => {\n                    const x = xScale(new Date(d[e.timeColumn]));\n\n                    return x > 0 && x < chartWidth ? 1 : 0;\n                  } });\n\n              });\n            }\n          });\n\n          // Interval annotations\n          activeAnnotationLayers.\n          filter(\n          (x) =>\n          x.annotationType === ANNOTATION_TYPES.INTERVAL &&\n          annotationData &&\n          annotationData[x.name]).\n\n          forEach((config, index) => {\n            const e = applyNativeColumns(config);\n            // Add interval annotation layer\n            const annotations = d3.\n            select(element).\n            select('.nv-wrap').\n            append('g').\n            attr('class', `nv-interval-annotation-layer-${index}`);\n\n            const aColor =\n            e.color || getColor(cleanColorInput(e.name), colorScheme);\n            const tip = tipFactory(e);\n\n            const records = (annotationData[e.name].records || []).\n            map((r) => {\n              const timeValue = new Date(moment.utc(r[e.timeColumn]));\n              const intervalEndValue = new Date(\n              moment.utc(r[e.intervalEndColumn]));\n\n\n              return {\n                ...r,\n                [e.timeColumn]: timeValue,\n                [e.intervalEndColumn]: intervalEndValue };\n\n            }).\n            filter(\n            (record) =>\n            !Number.isNaN(record[e.timeColumn].getMilliseconds()) &&\n            !Number.isNaN(\n            record[e.intervalEndColumn].getMilliseconds()));\n\n\n\n            if (records.length > 0) {\n              annotations.\n              selectAll('rect').\n              data(records).\n              enter().\n              append('rect').\n              attr({\n                x: (d) =>\n                Math.min(\n                xScale(new Date(d[e.timeColumn])),\n                xScale(new Date(d[e.intervalEndColumn]))),\n\n                y: 0,\n                width: (d) =>\n                Math.max(\n                Math.abs(\n                xScale(new Date(d[e.intervalEndColumn])) -\n                xScale(new Date(d[e.timeColumn]))),\n\n                1),\n\n                height: annotationHeight }).\n\n              attr('class', `${e.opacity} ${e.style}`).\n              style('stroke-width', e.width).\n              style('stroke', aColor).\n              style('fill', aColor).\n              style('fill-opacity', 0.2).\n              on('mouseover', tip.show).\n              on('mouseout', tip.hide).\n              call(tip);\n            }\n\n            // update annotation positions on brush event\n            if (chart.focus) {\n              chart.focus.dispatch.on('onBrush.interval-annotation', () => {\n                annotations.\n                selectAll('rect').\n                data(records).\n                attr({\n                  x: (d) => xScale(new Date(d[e.timeColumn])),\n                  width: (d) => {\n                    const x1 = xScale(new Date(d[e.timeColumn]));\n                    const x2 = xScale(new Date(d[e.intervalEndColumn]));\n\n                    return x2 - x1;\n                  } });\n\n              });\n            }\n          });\n        }\n\n        // rerender chart appended with annotation layer\n        svg.datum(data).attr('height', height).attr('width', width).call(chart);\n\n        // Display styles for Time Series Annotations\n        chart.dispatch.on('renderEnd.timeseries-annotation', () => {\n          d3.selectAll(\n          '.slice_container .nv-timeseries-annotation-layer.showMarkerstrue .nv-point').\n\n          style('stroke-opacity', 1).\n          style('fill-opacity', 1);\n          d3.selectAll(\n          '.slice_container .nv-timeseries-annotation-layer.hideLinetrue').\n          style('stroke-width', 0);\n        });\n      }\n    }\n\n    wrapTooltip(chart);\n\n    return chart;\n  };\n\n  // Remove tooltips before rendering chart, if the chart is being re-rendered sometimes\n  // there are left over tooltips in the dom,\n  // this will clear them before rendering the chart again.\n  if (chartId) {\n    removeTooltip(chartId);\n  } else {\n    hideTooltips(true);\n  }\n\n  nv.addGraph(drawGraph);\n}\n\nnvd3Vis.displayName = 'NVD3';\nnvd3Vis.propTypes = propTypes;\nexport default nvd3Vis;","map":{"version":3,"names":["d3","moment","nv","PropTypes","CategoricalColorNamespace","evalExpression","getNumberFormatter","getTimeFormatter","isDefined","NumberFormats","smartDateVerboseFormatter","t","ANNOTATION_TYPES","applyNativeColumns","isTruthy","cleanColorInput","computeBarChartWidth","computeYDomain","computeStackedYDomain","drawBarValues","generateBubbleTooltipContent","generateCompareTooltipContent","generateRichLineTooltipContent","generateTimePivotTooltip","generateTooltipClassName","generateAreaChartTooltipContent","getMaxLabelSize","getTimeOrNumberFormatter","hideTooltips","tipFactory","tryNumify","removeTooltip","setAxisShowMaxMin","stringifyTimeRange","wrapTooltip","annotationLayerType","boxPlotValueType","bulletDataType","categoryAndValueXYType","rgbObjectType","numericXYType","numberOrAutoType","stringOrObjectWithLabelType","NO_DATA_RENDER_DATA","text","dy","class","utils","noData","chart","container","opt","options","margin","height","availableHeight","width","availableWidth","x","left","y","top","selectAll","remove","noDataText","data","enter","append","attr","d","style","getColor","getScale","MAX_MARGIN_PAD","MIN_HEIGHT_FOR_BRUSH","MAX_NO_CHARACTERS_IN_LABEL","BREAKPOINTS","small","TIMESERIES_VIZ_TYPES","CHART_ID_PREFIX","propTypes","oneOfType","arrayOf","shape","key","string","values","classed","type","yAxis","number","label","object","annotationData","annotationLayers","bottomMargin","colorScheme","comparisonType","contribution","bool","leftMargin","onError","func","showLegend","showMarkers","useRichTooltip","vizType","oneOf","xAxisFormat","numberFormat","xAxisLabel","xAxisShowMinMax","xIsLogScale","xTicksLayout","yAxisFormat","yAxisBounds","yAxisLabel","yAxisShowMinMax","yIsLogScale","orderBars","isBarStacked","showBarValue","reduceXTicks","showControls","showBrush","onBrushEnd","yAxis2Format","lineInterpolation","isDonut","isPieLabelOutside","pieLabelType","showLabels","areaStackedStyle","entity","maxBubbleSize","xField","yField","sizeField","baseColor","NOOP","formatter","nvd3Vis","element","props","maxWidth","maxHeight","markerLabels","markerLines","markerLineLabels","markers","rangeLabels","ranges","yAxis2ShowMinMax","sliceId","isExplore","document","querySelector","innerHTML","activeAnnotationLayers","filter","layer","show","chartContainer","chartId","parentElement","id","startsWith","colorKey","isVizTypes","types","drawGraph","d3Element","select","svg","empty","Math","min","isTimeSeries","staggerLabels","xLabelRotation","canShowBrush","numberFormatter","models","lineWithFocusChart","focus","bottom","focusHeight","xScale","time","scale","utc","lineChart","interpolate","clipEdge","multiBarChart","groupSpacing","xAxis","showMaxMin","stacked","forEach","newValues","sort","a","b","pieChart","valueFormat","donut","labelsOutside","labelThreshold","cornerRadius","labelType","total","sum","percentFormatter","PERCENT_2_POINT","tooltip","valueFormatter","cumulativeLineChart","useInteractiveGuideline","scatterChart","showDistX","showDistY","contentGenerator","point","xFormatter","yFormatter","sizeFormatter","pointRange","pointDomain","max","v","size","stackedAreaChart","boxPlotChart","maxBoxWidth","bulletChart","Error","dispatch","on","event","timeRange","extent","brush","rotateLabels","x2Axis","yScale","log","xAxisFormatter","interactiveLayer","headerFormatter","tickFormat","isXAxisString","length","slice","yAxisFormatter","SMART_NUMBER","SMART_NUMBER_SIGNED","PERCENT_1_POINT","y2Axis","ticks","r","g","color","alpha","rank","perc","colorFn","datum","transition","duration","call","log10","xTicks","applyYAxisBounds","yDomain","Array","isArray","customMin","customMax","hasCustomMin","Number","isNaN","hasCustomMax","trueMin","trueMax","stateChange","setTimeout","undefined","yAxis2","marginPad","ceil","margins","maxYAxisLabelWidth","maxXAxisLabelHeight","right","sin","PI","cos","parseInt","distance","axisLabel","axisLabelDistance","timeSeriesAnnotations","annotationType","TIME_SERIES","reduce","bushel","concat","name","map","series","join","strokeWidth","opacity","hideLine","push","classes","window","addEventListener","formulas","FORMULA","xMax","xMin","quantile","domain","range","valueOf","linear","clamp","xValues","distinct","xVals","add","Set","period","i","dataPoints","formulaData","fo","value","expression","xAxis1","yAxis1","chartWidth","annotationHeight","EVENT","config","index","e","annotations","aColor","tip","annotationTipClass","sourceType","records","timeValue","Date","timeColumn","record","getMilliseconds","x1","y1","x2","y2","hide","INTERVAL","intervalEndValue","intervalEndColumn","abs","addGraph","displayName"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js"],"sourcesContent":["/* eslint-disable react/sort-prop-types */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { kebabCase, throttle } from 'lodash';\nimport d3 from 'd3';\nimport moment from 'moment';\nimport nv from 'nvd3-fork';\nimport PropTypes from 'prop-types';\nimport {\n  CategoricalColorNamespace,\n  evalExpression,\n  getNumberFormatter,\n  getTimeFormatter,\n  isDefined,\n  NumberFormats,\n  smartDateVerboseFormatter,\n  t,\n} from '@superset-ui/core';\n\nimport 'nvd3-fork/build/nv.d3.css';\n\n/* eslint-disable-next-line */\nimport ANNOTATION_TYPES, {\n  applyNativeColumns,\n} from './vendor/superset/AnnotationTypes';\nimport isTruthy from './utils/isTruthy';\nimport {\n  cleanColorInput,\n  computeBarChartWidth,\n  computeYDomain,\n  computeStackedYDomain,\n  drawBarValues,\n  generateBubbleTooltipContent,\n  generateCompareTooltipContent,\n  generateRichLineTooltipContent,\n  generateTimePivotTooltip,\n  generateTooltipClassName,\n  generateAreaChartTooltipContent,\n  getMaxLabelSize,\n  getTimeOrNumberFormatter,\n  hideTooltips,\n  tipFactory,\n  tryNumify,\n  removeTooltip,\n  setAxisShowMaxMin,\n  stringifyTimeRange,\n  wrapTooltip,\n} from './utils';\nimport {\n  annotationLayerType,\n  boxPlotValueType,\n  bulletDataType,\n  categoryAndValueXYType,\n  rgbObjectType,\n  numericXYType,\n  numberOrAutoType,\n  stringOrObjectWithLabelType,\n} from './PropTypes';\n\nconst NO_DATA_RENDER_DATA = [\n  { text: 'No data', dy: '-.75em', class: 'header' },\n  {\n    text: 'Adjust filters or check the Datasource.',\n    dy: '.75em',\n    class: 'body',\n  },\n];\n\n// Override the noData render function to make a prettier UX\n// Code adapted from https://github.com/novus/nvd3/blob/master/src/utils.js#L653\nnv.utils.noData = function noData(chart, container) {\n  const opt = chart.options();\n  const margin = opt.margin();\n  const height = nv.utils.availableHeight(null, container, margin);\n  const width = nv.utils.availableWidth(null, container, margin);\n  const x = margin.left + width / 2;\n  const y = margin.top + height / 2;\n\n  // Remove any previously created chart components\n  container.selectAll('g').remove();\n\n  const noDataText = container\n    .selectAll('.nv-noData')\n    .data(NO_DATA_RENDER_DATA);\n\n  noDataText\n    .enter()\n    .append('text')\n    .attr('class', d => `nvd3 nv-noData ${d.class}`)\n    .attr('dy', d => d.dy)\n    .style('text-anchor', 'middle');\n\n  noDataText\n    .attr('x', x)\n    .attr('y', y)\n    .text(d => d.text);\n};\n\nconst { getColor, getScale } = CategoricalColorNamespace;\n\n// Limit on how large axes margins can grow as the chart window is resized\nconst MAX_MARGIN_PAD = 30;\nconst MIN_HEIGHT_FOR_BRUSH = 480;\nconst MAX_NO_CHARACTERS_IN_LABEL = 40;\n\nconst BREAKPOINTS = {\n  small: 340,\n};\n\nconst TIMESERIES_VIZ_TYPES = ['line', 'area', 'compare', 'bar', 'time_pivot'];\n\nconst CHART_ID_PREFIX = 'chart-id-';\n\nconst propTypes = {\n  data: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        // pie\n        categoryAndValueXYType,\n        // dist-bar\n        PropTypes.shape({\n          key: PropTypes.string,\n          values: PropTypes.arrayOf(categoryAndValueXYType),\n        }),\n        // area, line, compare, bar\n        PropTypes.shape({\n          key: PropTypes.arrayOf(PropTypes.string),\n          values: PropTypes.arrayOf(numericXYType),\n        }),\n        // dual-line\n        PropTypes.shape({\n          classed: PropTypes.string,\n          key: PropTypes.string,\n          type: PropTypes.string,\n          values: PropTypes.arrayOf(numericXYType),\n          yAxis: PropTypes.number,\n        }),\n        // box-plot\n        PropTypes.shape({\n          label: PropTypes.string,\n          values: PropTypes.arrayOf(boxPlotValueType),\n        }),\n        // bubble\n        PropTypes.shape({\n          key: PropTypes.string,\n          values: PropTypes.arrayOf(PropTypes.object),\n        }),\n      ]),\n    ),\n    // bullet\n    bulletDataType,\n  ]),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  annotationData: PropTypes.object,\n  annotationLayers: PropTypes.arrayOf(annotationLayerType),\n  bottomMargin: numberOrAutoType,\n  colorScheme: PropTypes.string,\n  comparisonType: PropTypes.string,\n  contribution: PropTypes.bool,\n  leftMargin: numberOrAutoType,\n  onError: PropTypes.func,\n  showLegend: PropTypes.bool,\n  showMarkers: PropTypes.bool,\n  useRichTooltip: PropTypes.bool,\n  vizType: PropTypes.oneOf([\n    'area',\n    'bar',\n    'box_plot',\n    'bubble',\n    'bullet',\n    'compare',\n    'column',\n    'dist_bar',\n    'line',\n    'time_pivot',\n    'pie',\n  ]),\n  xAxisFormat: PropTypes.string,\n  numberFormat: PropTypes.string,\n  xAxisLabel: PropTypes.string,\n  xAxisShowMinMax: PropTypes.bool,\n  xIsLogScale: PropTypes.bool,\n  xTicksLayout: PropTypes.oneOf(['auto', 'staggered', '45°']),\n  yAxisFormat: PropTypes.string,\n  yAxisBounds: PropTypes.arrayOf(PropTypes.number),\n  yAxisLabel: PropTypes.string,\n  yAxisShowMinMax: PropTypes.bool,\n  yIsLogScale: PropTypes.bool,\n  // 'dist-bar' only\n  orderBars: PropTypes.bool,\n  // 'bar' or 'dist-bar'\n  isBarStacked: PropTypes.bool,\n  showBarValue: PropTypes.bool,\n  // 'bar', 'dist-bar' or 'column'\n  reduceXTicks: PropTypes.bool,\n  // 'bar', 'dist-bar' or 'area'\n  showControls: PropTypes.bool,\n  // 'line' only\n  showBrush: PropTypes.oneOf([true, 'yes', false, 'no', 'auto']),\n  onBrushEnd: PropTypes.func,\n  // 'line-multi' or 'dual-line'\n  yAxis2Format: PropTypes.string,\n  // 'line', 'time-pivot', 'dual-line' or 'line-multi'\n  lineInterpolation: PropTypes.string,\n  // 'pie' only\n  isDonut: PropTypes.bool,\n  isPieLabelOutside: PropTypes.bool,\n  pieLabelType: PropTypes.oneOf([\n    'key',\n    'value',\n    'percent',\n    'key_value',\n    'key_percent',\n    'key_value_percent',\n  ]),\n  showLabels: PropTypes.bool,\n  // 'area' only\n  areaStackedStyle: PropTypes.string,\n  // 'bubble' only\n  entity: PropTypes.string,\n  maxBubbleSize: PropTypes.number,\n  xField: stringOrObjectWithLabelType,\n  yField: stringOrObjectWithLabelType,\n  sizeField: stringOrObjectWithLabelType,\n  // time-pivot only\n  baseColor: rgbObjectType,\n};\n\nconst NOOP = () => {};\nconst formatter = getNumberFormatter();\n\nfunction nvd3Vis(element, props) {\n  const {\n    data,\n    width: maxWidth,\n    height: maxHeight,\n    annotationData,\n    annotationLayers = [],\n    areaStackedStyle,\n    baseColor,\n    bottomMargin,\n    colorScheme,\n    comparisonType,\n    contribution,\n    entity,\n    isBarStacked,\n    isDonut,\n    isPieLabelOutside,\n    leftMargin,\n    lineInterpolation = 'linear',\n    markerLabels,\n    markerLines,\n    markerLineLabels,\n    markers,\n    maxBubbleSize,\n    onBrushEnd = NOOP,\n    onError = NOOP,\n    orderBars,\n    pieLabelType,\n    rangeLabels,\n    ranges,\n    reduceXTicks = false,\n    showBarValue,\n    showBrush,\n    showControls,\n    showLabels,\n    showLegend,\n    showMarkers,\n    sizeField,\n    useRichTooltip,\n    vizType,\n    xAxisFormat,\n    numberFormat,\n    xAxisLabel,\n    xAxisShowMinMax = false,\n    xField,\n    xIsLogScale,\n    xTicksLayout,\n    yAxisFormat,\n    yAxisBounds,\n    yAxisLabel,\n    yAxisShowMinMax = false,\n    yAxis2ShowMinMax = false,\n    yField,\n    yIsLogScale,\n    sliceId,\n  } = props;\n\n  const isExplore = document.querySelector('#explorer-container') !== null;\n  const container = element;\n  container.innerHTML = '';\n  const activeAnnotationLayers = annotationLayers.filter(layer => layer.show);\n\n  // Search for the chart id in a parent div from the nvd3 chart\n  let chartContainer = container;\n  let chartId = null;\n  while (chartContainer.parentElement) {\n    if (chartContainer.parentElement.id.startsWith(CHART_ID_PREFIX)) {\n      chartId = chartContainer.parentElement.id;\n      break;\n    }\n\n    chartContainer = chartContainer.parentElement;\n  }\n\n  let chart;\n  let width = maxWidth;\n  let colorKey = 'key';\n\n  container.style.width = `${maxWidth}px`;\n  container.style.height = `${maxHeight}px`;\n\n  function isVizTypes(types) {\n    return types.includes(vizType);\n  }\n\n  const drawGraph = function drawGraph() {\n    const d3Element = d3.select(element);\n    d3Element.classed('superset-legacy-chart-nvd3', true);\n    d3Element.classed(`superset-legacy-chart-nvd3-${kebabCase(vizType)}`, true);\n    let svg = d3Element.select('svg');\n    if (svg.empty()) {\n      svg = d3Element.append('svg');\n    }\n    const height = vizType === 'bullet' ? Math.min(maxHeight, 50) : maxHeight;\n    const isTimeSeries = isVizTypes(TIMESERIES_VIZ_TYPES);\n\n    // Handling xAxis ticks settings\n    const staggerLabels = xTicksLayout === 'staggered';\n    const xLabelRotation =\n      (xTicksLayout === 'auto' && isVizTypes(['column', 'dist_bar'])) ||\n      xTicksLayout === '45°'\n        ? 45\n        : 0;\n    if (xLabelRotation === 45 && isTruthy(showBrush)) {\n      onError(\n        t('You cannot use 45° tick layout along with the time range filter'),\n      );\n\n      return null;\n    }\n\n    const canShowBrush =\n      isTruthy(showBrush) ||\n      (showBrush === 'auto' &&\n        maxHeight >= MIN_HEIGHT_FOR_BRUSH &&\n        xTicksLayout !== '45°');\n    const numberFormatter = getNumberFormatter(numberFormat);\n\n    switch (vizType) {\n      case 'line':\n        if (canShowBrush) {\n          chart = nv.models.lineWithFocusChart();\n          if (staggerLabels) {\n            // Give a bit more room to focus area if X axis ticks are staggered\n            chart.focus.margin({ bottom: 40 });\n            chart.focusHeight(80);\n          }\n          chart.focus.xScale(d3.time.scale.utc());\n        } else {\n          chart = nv.models.lineChart();\n        }\n        chart.xScale(d3.time.scale.utc());\n        chart.interpolate(lineInterpolation);\n        chart.clipEdge(false);\n        break;\n\n      case 'time_pivot':\n        chart = nv.models.lineChart();\n        chart.xScale(d3.time.scale.utc());\n        chart.interpolate(lineInterpolation);\n        break;\n\n      case 'bar':\n        chart = nv.models\n          .multiBarChart()\n          .showControls(showControls)\n          .groupSpacing(0.1);\n\n        if (!reduceXTicks) {\n          width = computeBarChartWidth(data, isBarStacked, maxWidth);\n        }\n        chart.width(width);\n        chart.xAxis.showMaxMin(false);\n        chart.stacked(isBarStacked);\n        break;\n\n      case 'dist_bar':\n        chart = nv.models\n          .multiBarChart()\n          .showControls(showControls)\n          .reduceXTicks(reduceXTicks)\n          .groupSpacing(0.1); // Distance between each group of bars.\n\n        chart.xAxis.showMaxMin(false);\n\n        chart.stacked(isBarStacked);\n        if (orderBars) {\n          data.forEach(d => {\n            const newValues = [...d.values]; // need to copy values to avoid redux store changed.\n            // eslint-disable-next-line no-param-reassign\n            d.values = newValues.sort((a, b) =>\n              tryNumify(a.x) < tryNumify(b.x) ? -1 : 1,\n            );\n          });\n        }\n        if (!reduceXTicks) {\n          width = computeBarChartWidth(data, isBarStacked, maxWidth);\n        }\n        chart.width(width);\n        break;\n\n      case 'pie':\n        chart = nv.models.pieChart();\n        colorKey = 'x';\n        chart.valueFormat(numberFormatter);\n        if (isDonut) {\n          chart.donut(true);\n        }\n        chart.showLabels(showLabels);\n        chart.labelsOutside(isPieLabelOutside);\n        // Configure the minimum slice size for labels to show up\n        chart.labelThreshold(0.05);\n        chart.cornerRadius(true);\n\n        if (['key', 'value', 'percent'].includes(pieLabelType)) {\n          chart.labelType(pieLabelType);\n        } else if (pieLabelType === 'key_value') {\n          chart.labelType(d => `${d.data.x}: ${numberFormatter(d.data.y)}`);\n        } else {\n          // pieLabelType in ['key_percent', 'key_value_percent']\n          const total = d3.sum(data, d => d.y);\n          const percentFormatter = getNumberFormatter(\n            NumberFormats.PERCENT_2_POINT,\n          );\n          if (pieLabelType === 'key_percent') {\n            chart.tooltip.valueFormatter(d => percentFormatter(d));\n            chart.labelType(\n              d => `${d.data.x}: ${percentFormatter(d.data.y / total)}`,\n            );\n          } else {\n            // pieLabelType === 'key_value_percent'\n            chart.tooltip.valueFormatter(\n              d => `${numberFormatter(d)} (${percentFormatter(d / total)})`,\n            );\n            chart.labelType(\n              d =>\n                `${d.data.x}: ${numberFormatter(d.data.y)} (${percentFormatter(\n                  d.data.y / total,\n                )})`,\n            );\n          }\n        }\n        // Pie chart does not need top margin\n        chart.margin({ top: 0 });\n        break;\n\n      case 'column':\n        chart = nv.models.multiBarChart().reduceXTicks(false);\n        break;\n\n      case 'compare':\n        chart = nv.models.cumulativeLineChart();\n        chart.xScale(d3.time.scale.utc());\n        chart.useInteractiveGuideline(true);\n        chart.xAxis.showMaxMin(false);\n        break;\n\n      case 'bubble':\n        chart = nv.models.scatterChart();\n        chart.showDistX(false);\n        chart.showDistY(false);\n        chart.tooltip.contentGenerator(d =>\n          generateBubbleTooltipContent({\n            point: d.point,\n            entity,\n            xField,\n            yField,\n            sizeField,\n            xFormatter: getTimeOrNumberFormatter(xAxisFormat),\n            yFormatter: getTimeOrNumberFormatter(yAxisFormat),\n            sizeFormatter: formatter,\n          }),\n        );\n        chart.pointRange([5, maxBubbleSize ** 2]);\n        chart.pointDomain([\n          0,\n          d3.max(data, d => d3.max(d.values, v => v.size)),\n        ]);\n        break;\n\n      case 'area':\n        chart = nv.models.stackedAreaChart();\n        chart.showControls(showControls);\n        chart.style(areaStackedStyle);\n        chart.xScale(d3.time.scale.utc());\n        break;\n\n      case 'box_plot':\n        colorKey = 'label';\n        chart = nv.models.boxPlotChart();\n        chart.x(d => d.label);\n        chart.maxBoxWidth(75); // prevent boxes from being incredibly wide\n        break;\n\n      case 'bullet':\n        chart = nv.models.bulletChart();\n        data.rangeLabels = rangeLabels;\n        data.ranges = ranges;\n        data.markerLabels = markerLabels;\n        data.markerLines = markerLines;\n        data.markerLineLabels = markerLineLabels;\n        data.markers = markers;\n        break;\n\n      default:\n        throw new Error(`Unrecognized visualization for nvd3${vizType}`);\n    }\n    // Assuming the container has padding already other than for top margin\n    chart.margin({ left: 0, bottom: 0 });\n\n    if (showBarValue) {\n      drawBarValues(svg, data, isBarStacked, yAxisFormat);\n      chart.dispatch.on('stateChange.drawBarValues', () => {\n        drawBarValues(svg, data, isBarStacked, yAxisFormat);\n      });\n    }\n\n    if (canShowBrush && onBrushEnd !== NOOP) {\n      if (chart.focus) {\n        chart.focus.dispatch.on('brush', event => {\n          const timeRange = stringifyTimeRange(event.extent);\n          if (timeRange) {\n            event.brush.on('brushend', () => {\n              onBrushEnd(timeRange);\n            });\n          }\n        });\n      }\n    }\n\n    if (chart.xAxis && chart.xAxis.staggerLabels) {\n      chart.xAxis.staggerLabels(staggerLabels);\n    }\n    if (chart.xAxis && chart.xAxis.rotateLabels) {\n      chart.xAxis.rotateLabels(xLabelRotation);\n    }\n    if (chart.x2Axis && chart.x2Axis.staggerLabels) {\n      chart.x2Axis.staggerLabels(staggerLabels);\n    }\n    if (chart.x2Axis && chart.x2Axis.rotateLabels) {\n      chart.x2Axis.rotateLabels(xLabelRotation);\n    }\n\n    if ('showLegend' in chart && typeof showLegend !== 'undefined') {\n      if (width < BREAKPOINTS.small && vizType !== 'pie') {\n        chart.showLegend(false);\n      } else {\n        chart.showLegend(showLegend);\n      }\n    }\n\n    if (yIsLogScale) {\n      chart.yScale(d3.scale.log());\n    }\n    if (xIsLogScale) {\n      chart.xScale(d3.scale.log());\n    }\n\n    let xAxisFormatter;\n    if (isTimeSeries) {\n      xAxisFormatter = getTimeFormatter(xAxisFormat);\n      // In tooltips, always use the verbose time format\n      chart.interactiveLayer.tooltip.headerFormatter(smartDateVerboseFormatter);\n    } else {\n      xAxisFormatter = getTimeOrNumberFormatter(xAxisFormat);\n    }\n    if (chart.x2Axis && chart.x2Axis.tickFormat) {\n      chart.x2Axis.tickFormat(xAxisFormatter);\n    }\n    if (chart.xAxis && chart.xAxis.tickFormat) {\n      const isXAxisString = isVizTypes(['dist_bar', 'box_plot']);\n      if (isXAxisString) {\n        chart.xAxis.tickFormat(d =>\n          d.length > MAX_NO_CHARACTERS_IN_LABEL\n            ? `${d.slice(0, Math.max(0, MAX_NO_CHARACTERS_IN_LABEL))}…`\n            : d,\n        );\n      } else {\n        chart.xAxis.tickFormat(xAxisFormatter);\n      }\n    }\n\n    let yAxisFormatter = getTimeOrNumberFormatter(yAxisFormat);\n    if (chart.yAxis && chart.yAxis.tickFormat) {\n      if (\n        (contribution || comparisonType === 'percentage') &&\n        (!yAxisFormat ||\n          yAxisFormat === NumberFormats.SMART_NUMBER ||\n          yAxisFormat === NumberFormats.SMART_NUMBER_SIGNED)\n      ) {\n        // When computing a \"Percentage\" or \"Contribution\" selected,\n        // force a percentage format if no custom formatting set\n        yAxisFormatter = getNumberFormatter(NumberFormats.PERCENT_1_POINT);\n      }\n      chart.yAxis.tickFormat(yAxisFormatter);\n    }\n    if (chart.y2Axis && chart.y2Axis.tickFormat) {\n      chart.y2Axis.tickFormat(yAxisFormatter);\n    }\n\n    if (chart.yAxis) {\n      chart.yAxis.ticks(5);\n    }\n    if (chart.y2Axis) {\n      chart.y2Axis.ticks(5);\n    }\n\n    // Set showMaxMin for all axis\n    setAxisShowMaxMin(chart.xAxis, xAxisShowMinMax);\n    setAxisShowMaxMin(chart.x2Axis, xAxisShowMinMax);\n    setAxisShowMaxMin(chart.yAxis, yAxisShowMinMax);\n    setAxisShowMaxMin(chart.y2Axis, yAxis2ShowMinMax || yAxisShowMinMax);\n\n    if (vizType === 'time_pivot') {\n      if (baseColor) {\n        const { r, g, b } = baseColor;\n        chart.color(d => {\n          const alpha = d.rank > 0 ? d.perc * 0.5 : 1;\n\n          return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n        });\n      }\n\n      chart.useInteractiveGuideline(true);\n      chart.interactiveLayer.tooltip.contentGenerator(d =>\n        generateTimePivotTooltip(d, xAxisFormatter, yAxisFormatter),\n      );\n    } else if (vizType !== 'bullet') {\n      const colorFn = getScale(colorScheme);\n      chart.color(\n        d => d.color || colorFn(cleanColorInput(d[colorKey]), sliceId),\n      );\n    }\n\n    if (isVizTypes(['line', 'area', 'bar', 'dist_bar']) && useRichTooltip) {\n      chart.useInteractiveGuideline(true);\n      if (vizType === 'line' || vizType === 'bar') {\n        chart.interactiveLayer.tooltip.contentGenerator(d =>\n          generateRichLineTooltipContent(\n            d,\n            smartDateVerboseFormatter,\n            yAxisFormatter,\n          ),\n        );\n      } else if (vizType === 'dist_bar') {\n        chart.interactiveLayer.tooltip.contentGenerator(d =>\n          generateCompareTooltipContent(d, yAxisFormatter),\n        );\n      } else {\n        // area chart\n        chart.interactiveLayer.tooltip.contentGenerator(d =>\n          generateAreaChartTooltipContent(\n            d,\n            smartDateVerboseFormatter,\n            yAxisFormatter,\n            chart,\n          ),\n        );\n      }\n    }\n\n    if (isVizTypes(['compare'])) {\n      chart.interactiveLayer.tooltip.contentGenerator(d =>\n        generateCompareTooltipContent(d, yAxisFormatter),\n      );\n    }\n\n    // This is needed for correct chart dimensions if a chart is rendered in a hidden container\n    chart.width(width);\n    chart.height(height);\n\n    svg\n      .datum(data)\n      .transition()\n      .duration(500)\n      .attr('height', height)\n      .attr('width', width)\n      .call(chart);\n\n    // For log scale, only show 1, 10, 100, 1000, ...\n    if (yIsLogScale) {\n      chart.yAxis.tickFormat(d =>\n        d !== 0 && Math.log10(d) % 1 === 0 ? yAxisFormatter(d) : '',\n      );\n    }\n\n    if (xLabelRotation > 0) {\n      // shift labels to the left so they look better\n      const xTicks = svg.select('.nv-x.nv-axis > g').selectAll('g');\n      xTicks.selectAll('text').attr('dx', -6.5);\n    }\n\n    const applyYAxisBounds = () => {\n      if (\n        chart.yDomain &&\n        Array.isArray(yAxisBounds) &&\n        yAxisBounds.length === 2\n      ) {\n        const [customMin, customMax] = yAxisBounds;\n        const hasCustomMin = isDefined(customMin) && !Number.isNaN(customMin);\n        const hasCustomMax = isDefined(customMax) && !Number.isNaN(customMax);\n\n        if (\n          (hasCustomMin || hasCustomMax) &&\n          vizType === 'area' &&\n          chart.style() === 'expand'\n        ) {\n          // Because there are custom bounds, we need to override them back to 0%-100% since this\n          // is an expanded area chart\n          chart.yDomain([0, 1]);\n        } else if (\n          (hasCustomMin || hasCustomMax) &&\n          vizType === 'area' &&\n          chart.style() === 'stream'\n        ) {\n          // Because there are custom bounds, we need to override them back to the domain of the\n          // data since this is a stream area chart\n          chart.yDomain(computeStackedYDomain(data));\n        } else if (hasCustomMin && hasCustomMax) {\n          // Override the y domain if there's both a custom min and max\n          chart.yDomain([customMin, customMax]);\n          chart.clipEdge(true);\n        } else if (hasCustomMin || hasCustomMax) {\n          // Only one of the bounds has been set, so we need to manually calculate the other one\n          let [trueMin, trueMax] = [0, 1];\n\n          // These viz types can be stacked\n          // They correspond to the nvd3 stackedAreaChart and multiBarChart\n          if (\n            vizType === 'area' ||\n            (isVizTypes(['bar', 'dist_bar']) && chart.stacked())\n          ) {\n            // This is a stacked area chart or a stacked bar chart\n            [trueMin, trueMax] = computeStackedYDomain(data);\n          } else {\n            [trueMin, trueMax] = computeYDomain(data);\n          }\n\n          const min = hasCustomMin ? customMin : trueMin;\n          const max = hasCustomMax ? customMax : trueMax;\n          chart.yDomain([min, max]);\n          chart.clipEdge(true);\n        }\n      }\n    };\n    applyYAxisBounds();\n\n    // Also reapply on each state change to account for enabled/disabled series\n    if (chart.dispatch && chart.dispatch.stateChange) {\n      chart.dispatch.on('stateChange.applyYAxisBounds', applyYAxisBounds);\n    }\n\n    if (showMarkers) {\n      svg\n        .selectAll('.nv-point')\n        .style('stroke-opacity', 1)\n        .style('fill-opacity', 1);\n\n      // redo on legend toggle; nvd3 calls the callback *before* the line is\n      // drawn, so we need to add a small delay here\n      chart.dispatch.on('stateChange.showMarkers', () => {\n        setTimeout(() => {\n          svg\n            .selectAll('.nv-point')\n            .style('stroke-opacity', 1)\n            .style('fill-opacity', 1);\n        }, 10);\n      });\n    }\n\n    if (chart.yAxis !== undefined || chart.yAxis2 !== undefined) {\n      // Hack to adjust y axis left margin to accommodate long numbers\n      const marginPad = Math.ceil(\n        Math.min(maxWidth * (isExplore ? 0.01 : 0.03), MAX_MARGIN_PAD),\n      );\n      // Hack to adjust margins to accommodate long axis tick labels.\n      // - has to be done only after the chart has been rendered once\n      // - measure the width or height of the labels\n      // ---- (x axis labels are rotated 45 degrees so we use height),\n      // - adjust margins based on these measures and render again\n      const margins = chart.margin();\n      if (chart.xAxis) {\n        margins.bottom = 28;\n      }\n      const maxYAxisLabelWidth = getMaxLabelSize(\n        svg,\n        chart.yAxis2 ? 'nv-y1' : 'nv-y',\n      );\n      const maxXAxisLabelHeight = getMaxLabelSize(svg, 'nv-x');\n      margins.left = maxYAxisLabelWidth + marginPad;\n\n      if (yAxisLabel && yAxisLabel !== '') {\n        margins.left += 25;\n      }\n      if (showBarValue) {\n        // Add more margin to avoid label colliding with legend.\n        margins.top += 24;\n      }\n      if (xAxisShowMinMax) {\n        // If x bounds are shown, we need a right margin\n        margins.right = Math.max(20, maxXAxisLabelHeight / 2) + marginPad;\n      }\n      if (xLabelRotation === 45) {\n        margins.bottom =\n          maxXAxisLabelHeight * Math.sin((Math.PI * xLabelRotation) / 180) +\n          marginPad +\n          30;\n        margins.right =\n          maxXAxisLabelHeight * Math.cos((Math.PI * xLabelRotation) / 180) +\n          marginPad;\n      } else if (staggerLabels) {\n        margins.bottom = 40;\n      }\n\n      if (bottomMargin && bottomMargin !== 'auto') {\n        margins.bottom = parseInt(bottomMargin, 10);\n      }\n      if (leftMargin && leftMargin !== 'auto') {\n        margins.left = leftMargin;\n      }\n\n      if (xAxisLabel && xAxisLabel !== '' && chart.xAxis) {\n        margins.bottom += 25;\n        let distance = 0;\n        if (margins.bottom && !Number.isNaN(margins.bottom)) {\n          distance = margins.bottom - 45;\n        }\n        // nvd3 bug axisLabelDistance is disregarded on xAxis\n        // https://github.com/krispo/angular-nvd3/issues/90\n        chart.xAxis.axisLabel(xAxisLabel).axisLabelDistance(distance);\n      }\n\n      if (yAxisLabel && yAxisLabel !== '' && chart.yAxis) {\n        let distance = 0;\n        if (margins.left && !Number.isNaN(margins.left)) {\n          distance = margins.left - 70;\n        }\n        chart.yAxis.axisLabel(yAxisLabel).axisLabelDistance(distance);\n      }\n      if (isTimeSeries && annotationData && activeAnnotationLayers.length > 0) {\n        // Time series annotations add additional data\n        const timeSeriesAnnotations = activeAnnotationLayers\n          .filter(\n            layer => layer.annotationType === ANNOTATION_TYPES.TIME_SERIES,\n          )\n          .reduce(\n            (bushel, a) =>\n              bushel.concat(\n                (annotationData[a.name] || []).map(series => {\n                  if (!series) {\n                    return {};\n                  }\n                  const key = Array.isArray(series.key)\n                    ? `${a.name}, ${series.key.join(', ')}`\n                    : `${a.name}, ${series.key}`;\n\n                  return {\n                    ...series,\n                    key,\n                    color: a.color,\n                    strokeWidth: a.width,\n                    classed: `${a.opacity} ${a.style} nv-timeseries-annotation-layer showMarkers${a.showMarkers} hideLine${a.hideLine}`,\n                  };\n                }),\n              ),\n            [],\n          );\n        data.push(...timeSeriesAnnotations);\n      }\n\n      // Uniquely identify tooltips based on chartId so this chart instance only\n      // controls its own tooltips\n      if (chartId) {\n        if (chart && chart.interactiveLayer && chart.interactiveLayer.tooltip) {\n          chart.interactiveLayer.tooltip.classes([\n            generateTooltipClassName(chartId),\n          ]);\n        }\n\n        if (chart && chart.tooltip) {\n          chart.tooltip.classes([generateTooltipClassName(chartId)]);\n        }\n      }\n\n      // render chart\n      chart.margin(margins);\n      svg\n        .datum(data)\n        .transition()\n        .duration(500)\n        .attr('width', width)\n        .attr('height', height)\n        .call(chart);\n\n      // On scroll, hide (not remove) tooltips so they can reappear on hover.\n      // Throttle to only 4x/second.\n      window.addEventListener(\n        'scroll',\n        throttle(() => hideTooltips(false), 250),\n      );\n\n      // The below code should be run AFTER rendering because chart is updated in call()\n      if (isTimeSeries && activeAnnotationLayers.length > 0) {\n        // Formula annotations\n        const formulas = activeAnnotationLayers.filter(\n          a => a.annotationType === ANNOTATION_TYPES.FORMULA,\n        );\n\n        let xMax;\n        let xMin;\n        let xScale;\n        if (vizType === 'bar') {\n          xMin = d3.min(data[0].values, d => d.x);\n          xMax = d3.max(data[0].values, d => d.x);\n          xScale = d3.scale\n            .quantile()\n            .domain([xMin, xMax])\n            .range(chart.xAxis.range());\n        } else {\n          xMin = chart.xAxis.scale().domain()[0].valueOf();\n          xMax = chart.xAxis.scale().domain()[1].valueOf();\n          if (chart.xScale) {\n            xScale = chart.xScale();\n          } else if (chart.xAxis.scale) {\n            xScale = chart.xAxis.scale();\n          } else {\n            xScale = d3.scale.linear();\n          }\n        }\n        if (xScale && xScale.clamp) {\n          xScale.clamp(true);\n        }\n\n        if (formulas.length > 0) {\n          const xValues = [];\n          if (vizType === 'bar') {\n            // For bar-charts we want one data point evaluated for every\n            // data point that will be displayed.\n            const distinct = data.reduce((xVals, d) => {\n              d.values.forEach(x => xVals.add(x.x));\n\n              return xVals;\n            }, new Set());\n            xValues.push(...distinct.values());\n            xValues.sort();\n          } else {\n            // For every other time visualization it should be ok, to have a\n            // data points in even intervals.\n            let period = Math.min(\n              ...data.map(d =>\n                Math.min(\n                  ...d.values.slice(1).map((v, i) => v.x - d.values[i].x),\n                ),\n              ),\n            );\n            const dataPoints = (xMax - xMin) / (period || 1);\n            // make sure that there are enough data points and not too many\n            period = dataPoints < 100 ? (xMax - xMin) / 100 : period;\n            period = dataPoints > 500 ? (xMax - xMin) / 500 : period;\n            xValues.push(xMin);\n            for (let x = xMin; x < xMax; x += period) {\n              xValues.push(x);\n            }\n            xValues.push(xMax);\n          }\n          const formulaData = formulas.map(fo => {\n            const { value: expression } = fo;\n            return {\n              key: fo.name,\n              values: xValues.map(x => ({\n                x,\n                y: evalExpression(expression, x),\n              })),\n              color: fo.color,\n              strokeWidth: fo.width,\n              classed: `${fo.opacity} ${fo.style}`,\n            };\n          });\n          data.push(...formulaData);\n        }\n        const xAxis = chart.xAxis1 ? chart.xAxis1 : chart.xAxis;\n        const yAxis = chart.yAxis1 ? chart.yAxis1 : chart.yAxis;\n        const chartWidth = xAxis.scale().range()[1];\n        const annotationHeight = yAxis.scale().range()[0];\n\n        if (annotationData) {\n          // Event annotations\n          activeAnnotationLayers\n            .filter(\n              x =>\n                x.annotationType === ANNOTATION_TYPES.EVENT &&\n                annotationData &&\n                annotationData[x.name],\n            )\n            .forEach((config, index) => {\n              const e = applyNativeColumns(config);\n              // Add event annotation layer\n              const annotations = d3\n                .select(element)\n                .select('.nv-wrap')\n                .append('g')\n                .attr('class', `nv-event-annotation-layer-${index}`);\n              const aColor =\n                e.color || getColor(cleanColorInput(e.name), colorScheme);\n\n              const tip = tipFactory({\n                ...e,\n                annotationTipClass: `arrow-down nv-event-annotation-layer-${config.sourceType}`,\n              });\n              const records = (annotationData[e.name].records || [])\n                .map(r => {\n                  const timeValue = new Date(moment.utc(r[e.timeColumn]));\n\n                  return {\n                    ...r,\n                    [e.timeColumn]: timeValue,\n                  };\n                })\n                .filter(\n                  record =>\n                    !Number.isNaN(record[e.timeColumn].getMilliseconds()),\n                );\n\n              if (records.length > 0) {\n                annotations\n                  .selectAll('line')\n                  .data(records)\n                  .enter()\n                  .append('line')\n                  .attr({\n                    x1: d => xScale(new Date(d[e.timeColumn])),\n                    y1: 0,\n                    x2: d => xScale(new Date(d[e.timeColumn])),\n                    y2: annotationHeight,\n                  })\n                  .attr('class', `${e.opacity} ${e.style}`)\n                  .style('stroke', aColor)\n                  .style('stroke-width', e.width)\n                  .on('mouseover', tip.show)\n                  .on('mouseout', tip.hide)\n                  .call(tip);\n              }\n\n              // update annotation positions on brush event\n              if (chart.focus) {\n                chart.focus.dispatch.on('onBrush.event-annotation', () => {\n                  annotations\n                    .selectAll('line')\n                    .data(records)\n                    .attr({\n                      x1: d => xScale(new Date(d[e.timeColumn])),\n                      y1: 0,\n                      x2: d => xScale(new Date(d[e.timeColumn])),\n                      y2: annotationHeight,\n                      opacity: d => {\n                        const x = xScale(new Date(d[e.timeColumn]));\n\n                        return x > 0 && x < chartWidth ? 1 : 0;\n                      },\n                    });\n                });\n              }\n            });\n\n          // Interval annotations\n          activeAnnotationLayers\n            .filter(\n              x =>\n                x.annotationType === ANNOTATION_TYPES.INTERVAL &&\n                annotationData &&\n                annotationData[x.name],\n            )\n            .forEach((config, index) => {\n              const e = applyNativeColumns(config);\n              // Add interval annotation layer\n              const annotations = d3\n                .select(element)\n                .select('.nv-wrap')\n                .append('g')\n                .attr('class', `nv-interval-annotation-layer-${index}`);\n\n              const aColor =\n                e.color || getColor(cleanColorInput(e.name), colorScheme);\n              const tip = tipFactory(e);\n\n              const records = (annotationData[e.name].records || [])\n                .map(r => {\n                  const timeValue = new Date(moment.utc(r[e.timeColumn]));\n                  const intervalEndValue = new Date(\n                    moment.utc(r[e.intervalEndColumn]),\n                  );\n\n                  return {\n                    ...r,\n                    [e.timeColumn]: timeValue,\n                    [e.intervalEndColumn]: intervalEndValue,\n                  };\n                })\n                .filter(\n                  record =>\n                    !Number.isNaN(record[e.timeColumn].getMilliseconds()) &&\n                    !Number.isNaN(\n                      record[e.intervalEndColumn].getMilliseconds(),\n                    ),\n                );\n\n              if (records.length > 0) {\n                annotations\n                  .selectAll('rect')\n                  .data(records)\n                  .enter()\n                  .append('rect')\n                  .attr({\n                    x: d =>\n                      Math.min(\n                        xScale(new Date(d[e.timeColumn])),\n                        xScale(new Date(d[e.intervalEndColumn])),\n                      ),\n                    y: 0,\n                    width: d =>\n                      Math.max(\n                        Math.abs(\n                          xScale(new Date(d[e.intervalEndColumn])) -\n                            xScale(new Date(d[e.timeColumn])),\n                        ),\n                        1,\n                      ),\n                    height: annotationHeight,\n                  })\n                  .attr('class', `${e.opacity} ${e.style}`)\n                  .style('stroke-width', e.width)\n                  .style('stroke', aColor)\n                  .style('fill', aColor)\n                  .style('fill-opacity', 0.2)\n                  .on('mouseover', tip.show)\n                  .on('mouseout', tip.hide)\n                  .call(tip);\n              }\n\n              // update annotation positions on brush event\n              if (chart.focus) {\n                chart.focus.dispatch.on('onBrush.interval-annotation', () => {\n                  annotations\n                    .selectAll('rect')\n                    .data(records)\n                    .attr({\n                      x: d => xScale(new Date(d[e.timeColumn])),\n                      width: d => {\n                        const x1 = xScale(new Date(d[e.timeColumn]));\n                        const x2 = xScale(new Date(d[e.intervalEndColumn]));\n\n                        return x2 - x1;\n                      },\n                    });\n                });\n              }\n            });\n        }\n\n        // rerender chart appended with annotation layer\n        svg.datum(data).attr('height', height).attr('width', width).call(chart);\n\n        // Display styles for Time Series Annotations\n        chart.dispatch.on('renderEnd.timeseries-annotation', () => {\n          d3.selectAll(\n            '.slice_container .nv-timeseries-annotation-layer.showMarkerstrue .nv-point',\n          )\n            .style('stroke-opacity', 1)\n            .style('fill-opacity', 1);\n          d3.selectAll(\n            '.slice_container .nv-timeseries-annotation-layer.hideLinetrue',\n          ).style('stroke-width', 0);\n        });\n      }\n    }\n\n    wrapTooltip(chart);\n\n    return chart;\n  };\n\n  // Remove tooltips before rendering chart, if the chart is being re-rendered sometimes\n  // there are left over tooltips in the dom,\n  // this will clear them before rendering the chart again.\n  if (chartId) {\n    removeTooltip(chartId);\n  } else {\n    hideTooltips(true);\n  }\n\n  nv.addGraph(drawGraph);\n}\n\nnvd3Vis.displayName = 'NVD3';\nnvd3Vis.propTypes = propTypes;\nexport default nvd3Vis;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}