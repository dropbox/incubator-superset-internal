{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { NEW_COMPONENTS_SOURCE_ID } from './constants';\nimport findParentId from './findParentId';\nimport getDetailedComponentWidth from './getDetailedComponentWidth';\nimport newComponentFactory from './newComponentFactory';\n\nexport default function getComponentWidthFromDrop(_ref)\n\n\n{let { dropResult, layout: components } = _ref;\n  const { source, destination, dragging } = dropResult;\n\n  const isNewComponent = source.id === NEW_COMPONENTS_SOURCE_ID;\n  const component = isNewComponent ?\n  newComponentFactory(dragging.type) :\n  components[dragging.id] || {};\n\n  // moving a component within the same container shouldn't change its width\n  if (source.id === destination.id) {\n    return component.meta.width;\n  }\n\n  const { width: draggingWidth, minimumWidth: minDraggingWidth } =\n  getDetailedComponentWidth({\n    component,\n    components });\n\n\n  const { width: destinationWidth, occupiedWidth: draggingOccupiedWidth } =\n  getDetailedComponentWidth({\n    id: destination.id,\n    components });\n\n\n  let destinationCapacity = Number(destinationWidth - draggingOccupiedWidth);\n\n  if (Number.isNaN(destinationCapacity)) {\n    const { width: grandparentWidth, occupiedWidth: grandparentOccupiedWidth } =\n    getDetailedComponentWidth({\n      id: findParentId({\n        childId: destination.id,\n        layout: components }),\n\n      components });\n\n\n    destinationCapacity = Number(grandparentWidth - grandparentOccupiedWidth);\n  }\n\n  if (\n  Number.isNaN(destinationCapacity) ||\n  Number.isNaN(Number(draggingWidth)))\n  {\n    return draggingWidth;\n  }\n  if (destinationCapacity >= draggingWidth) {\n    return draggingWidth;\n  }\n  if (destinationCapacity >= minDraggingWidth) {\n    return destinationCapacity;\n  }\n\n  return -1;\n}","map":{"version":3,"names":["NEW_COMPONENTS_SOURCE_ID","findParentId","getDetailedComponentWidth","newComponentFactory","getComponentWidthFromDrop","dropResult","layout","components","source","destination","dragging","isNewComponent","id","component","type","meta","width","draggingWidth","minimumWidth","minDraggingWidth","destinationWidth","occupiedWidth","draggingOccupiedWidth","destinationCapacity","Number","isNaN","grandparentWidth","grandparentOccupiedWidth","childId"],"sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/util/getComponentWidthFromDrop.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { NEW_COMPONENTS_SOURCE_ID } from './constants';\nimport findParentId from './findParentId';\nimport getDetailedComponentWidth from './getDetailedComponentWidth';\nimport newComponentFactory from './newComponentFactory';\n\nexport default function getComponentWidthFromDrop({\n  dropResult,\n  layout: components,\n}) {\n  const { source, destination, dragging } = dropResult;\n\n  const isNewComponent = source.id === NEW_COMPONENTS_SOURCE_ID;\n  const component = isNewComponent\n    ? newComponentFactory(dragging.type)\n    : components[dragging.id] || {};\n\n  // moving a component within the same container shouldn't change its width\n  if (source.id === destination.id) {\n    return component.meta.width;\n  }\n\n  const { width: draggingWidth, minimumWidth: minDraggingWidth } =\n    getDetailedComponentWidth({\n      component,\n      components,\n    });\n\n  const { width: destinationWidth, occupiedWidth: draggingOccupiedWidth } =\n    getDetailedComponentWidth({\n      id: destination.id,\n      components,\n    });\n\n  let destinationCapacity = Number(destinationWidth - draggingOccupiedWidth);\n\n  if (Number.isNaN(destinationCapacity)) {\n    const { width: grandparentWidth, occupiedWidth: grandparentOccupiedWidth } =\n      getDetailedComponentWidth({\n        id: findParentId({\n          childId: destination.id,\n          layout: components,\n        }),\n        components,\n      });\n\n    destinationCapacity = Number(grandparentWidth - grandparentOccupiedWidth);\n  }\n\n  if (\n    Number.isNaN(destinationCapacity) ||\n    Number.isNaN(Number(draggingWidth))\n  ) {\n    return draggingWidth;\n  }\n  if (destinationCapacity >= draggingWidth) {\n    return draggingWidth;\n  }\n  if (destinationCapacity >= minDraggingWidth) {\n    return destinationCapacity;\n  }\n\n  return -1;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,wBAAT,QAAyC,aAAzC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;;AAEA,eAAe,SAASC,yBAAT;;;AAGZ,KAH+C,EAChDC,UADgD,EAEhDC,MAAM,EAAEC,UAFwC,EAG/C;EACD,MAAM,EAAEC,MAAF,EAAUC,WAAV,EAAuBC,QAAvB,KAAoCL,UAA1C;;EAEA,MAAMM,cAAc,GAAGH,MAAM,CAACI,EAAP,KAAcZ,wBAArC;EACA,MAAMa,SAAS,GAAGF,cAAc;EAC5BR,mBAAmB,CAACO,QAAQ,CAACI,IAAV,CADS;EAE5BP,UAAU,CAACG,QAAQ,CAACE,EAAV,CAAV,IAA2B,EAF/B;;EAIA;EACA,IAAIJ,MAAM,CAACI,EAAP,KAAcH,WAAW,CAACG,EAA9B,EAAkC;IAChC,OAAOC,SAAS,CAACE,IAAV,CAAeC,KAAtB;EACD;;EAED,MAAM,EAAEA,KAAK,EAAEC,aAAT,EAAwBC,YAAY,EAAEC,gBAAtC;EACJjB,yBAAyB,CAAC;IACxBW,SADwB;IAExBN,UAFwB,EAAD,CAD3B;;;EAMA,MAAM,EAAES,KAAK,EAAEI,gBAAT,EAA2BC,aAAa,EAAEC,qBAA1C;EACJpB,yBAAyB,CAAC;IACxBU,EAAE,EAAEH,WAAW,CAACG,EADQ;IAExBL,UAFwB,EAAD,CAD3B;;;EAMA,IAAIgB,mBAAmB,GAAGC,MAAM,CAACJ,gBAAgB,GAAGE,qBAApB,CAAhC;;EAEA,IAAIE,MAAM,CAACC,KAAP,CAAaF,mBAAb,CAAJ,EAAuC;IACrC,MAAM,EAAEP,KAAK,EAAEU,gBAAT,EAA2BL,aAAa,EAAEM,wBAA1C;IACJzB,yBAAyB,CAAC;MACxBU,EAAE,EAAEX,YAAY,CAAC;QACf2B,OAAO,EAAEnB,WAAW,CAACG,EADN;QAEfN,MAAM,EAAEC,UAFO,EAAD,CADQ;;MAKxBA,UALwB,EAAD,CAD3B;;;IASAgB,mBAAmB,GAAGC,MAAM,CAACE,gBAAgB,GAAGC,wBAApB,CAA5B;EACD;;EAED;EACEH,MAAM,CAACC,KAAP,CAAaF,mBAAb;EACAC,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACP,aAAD,CAAnB,CAFF;EAGE;IACA,OAAOA,aAAP;EACD;EACD,IAAIM,mBAAmB,IAAIN,aAA3B,EAA0C;IACxC,OAAOA,aAAP;EACD;EACD,IAAIM,mBAAmB,IAAIJ,gBAA3B,EAA6C;IAC3C,OAAOI,mBAAP;EACD;;EAED,OAAO,CAAC,CAAR;AACD"},"metadata":{},"sourceType":"module"}