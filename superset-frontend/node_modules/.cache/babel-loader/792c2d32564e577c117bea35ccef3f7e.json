{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { t } from '@superset-ui/core';\nimport { DASHBOARD_ROOT_ID } from 'src/dashboard/util/constants';\nimport { CHART_TYPE } from 'src/dashboard/util/componentTypes';\nimport { useChartIds } from 'src/dashboard/util/charts/useChartIds';\nconst extractTabLabel = (tab) => {var _tab$meta, _tab$meta2;return (tab == null ? void 0 : (_tab$meta = tab.meta) == null ? void 0 : _tab$meta.text) || (tab == null ? void 0 : (_tab$meta2 = tab.meta) == null ? void 0 : _tab$meta2.defaultText) || '';};\nconst extractChartLabel = (chart) => {var _chart$meta, _chart$meta2;return (chart == null ? void 0 : (_chart$meta = chart.meta) == null ? void 0 : _chart$meta.sliceNameOverride) || (chart == null ? void 0 : (_chart$meta2 = chart.meta) == null ? void 0 : _chart$meta2.sliceName) || (chart == null ? void 0 : chart.id) || '';};\nexport const useFilterScope = (filter) => {\n  const layout = useSelector((state) => state.dashboardLayout.present);\n  const chartIds = useChartIds();\n  return useMemo(() => {var _topLevelTabs;\n    let topLevelTabs;\n    const topElementId = layout[DASHBOARD_ROOT_ID].children[0];\n    if (topElementId.startsWith('TABS-')) {\n      topLevelTabs = layout[topElementId].children;\n    }\n    // no charts in scope\n    if (filter.scope.rootPath.length === 0) {\n      return undefined;\n    }\n    // all charts in scope\n    // no charts excluded and no top level tabs\n    // OR no charts excluded and every top level tab is in rootPath\n    if (filter.scope.excluded.length === 0 && (\n    filter.scope.rootPath[0] === DASHBOARD_ROOT_ID || (_topLevelTabs =\n    topLevelTabs) != null && _topLevelTabs.every((topLevelTab) => {var _context;return _includesInstanceProperty(_context = filter.scope.rootPath).call(_context, topLevelTab);}))) {\n      return { all: [t('All charts')] };\n    }\n    // no charts excluded and not every top level tab in scope\n    // returns \"TAB1, TAB2\"\n    if (filter.scope.excluded.length === 0 && topLevelTabs) {\n      return {\n        tabs: filter.scope.rootPath.\n        map((tabId) => extractTabLabel(layout[tabId])).\n        filter(Boolean) };\n\n    }\n    const layoutCharts = Object.values(layout).filter((layoutElement) => layoutElement.type === CHART_TYPE);\n    // no top level tabs, charts excluded\n    // returns \"CHART1, CHART2\"\n    if (filter.scope.rootPath[0] === DASHBOARD_ROOT_ID) {\n      return {\n        charts: chartIds.\n        filter((chartId) => {var _context2;return !_includesInstanceProperty(_context2 = filter.scope.excluded).call(_context2, chartId);}).\n        map((chartId) => {\n          const layoutElement = layoutCharts.find((layoutChart) => layoutChart.meta.chartId === chartId);\n          return extractChartLabel(layoutElement);\n        }).\n        filter(Boolean) };\n\n    }\n    // top level tabs, charts excluded\n    // returns \"TAB1, TAB2, CHART1\"\n    if (topLevelTabs) {\n      // We start assuming that all charts are in scope for all tabs in the root path\n      const topLevelTabsInFullScope = [...filter.scope.rootPath];\n      const layoutChartElementsInTabsInScope = layoutCharts.filter((element) => element.parents.some((parent) => _includesInstanceProperty(topLevelTabsInFullScope).call(topLevelTabsInFullScope, parent)));\n      // Exclude the tabs that contain excluded charts\n      filter.scope.excluded.forEach((chartId) => {\n        const excludedIndex = topLevelTabsInFullScope.findIndex((tabId) => {var _layoutChartElementsI, _context3;return (_layoutChartElementsI = layoutChartElementsInTabsInScope.\n          find((chart) => chart.meta.chartId === chartId)) == null ? void 0 : _includesInstanceProperty(_context3 = _layoutChartElementsI.\n          parents).call(_context3, tabId);});\n        if (excludedIndex > -1) {\n          topLevelTabsInFullScope.splice(excludedIndex, 1);\n        }\n      });\n      // Handle charts that are in scope but belong to excluded tabs.\n      const chartsInExcludedTabs = chartIds.\n      filter((chartId) => {var _context4;return !_includesInstanceProperty(_context4 = filter.scope.excluded).call(_context4, chartId);}).\n      reduce((acc, chartId) => {\n        const layoutChartElementInExcludedTab = layoutChartElementsInTabsInScope.find((element) => element.meta.chartId === chartId &&\n        element.parents.every((parent) => !_includesInstanceProperty(topLevelTabsInFullScope).call(topLevelTabsInFullScope, parent)));\n        if (layoutChartElementInExcludedTab) {\n          acc.push(layoutChartElementInExcludedTab);\n        }\n        return acc;\n      }, []);\n      // Join tab names and chart names\n      return {\n        tabs: topLevelTabsInFullScope.\n        map((tabId) => extractTabLabel(layout[tabId])).\n        filter(Boolean),\n        charts: chartsInExcludedTabs.map(extractChartLabel).filter(Boolean) };\n\n    }\n    return undefined;\n  }, [chartIds, filter.scope.excluded, filter.scope.rootPath, layout]);\n};__signature__(useFilterScope, \"useSelector{layout}\\nuseChartIds{chartIds}\\nuseMemo{}\", () => [useSelector, useChartIds]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(extractTabLabel, \"extractTabLabel\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/useFilterScope.ts\");reactHotLoader.register(extractChartLabel, \"extractChartLabel\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/useFilterScope.ts\");reactHotLoader.register(useFilterScope, \"useFilterScope\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/useFilterScope.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["useMemo","useSelector","t","DASHBOARD_ROOT_ID","CHART_TYPE","useChartIds","extractTabLabel","tab","meta","text","defaultText","extractChartLabel","chart","sliceNameOverride","sliceName","id","useFilterScope","filter","layout","state","dashboardLayout","present","chartIds","topLevelTabs","topElementId","children","startsWith","scope","rootPath","length","undefined","excluded","every","topLevelTab","all","tabs","map","tabId","Boolean","layoutCharts","Object","values","layoutElement","type","charts","chartId","find","layoutChart","topLevelTabsInFullScope","layoutChartElementsInTabsInScope","element","parents","some","parent","forEach","excludedIndex","findIndex","splice","chartsInExcludedTabs","reduce","acc","layoutChartElementInExcludedTab","push"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/useFilterScope.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Filter, t } from '@superset-ui/core';\nimport { Layout, LayoutItem, RootState } from 'src/dashboard/types';\nimport { DASHBOARD_ROOT_ID } from 'src/dashboard/util/constants';\nimport { CHART_TYPE } from 'src/dashboard/util/componentTypes';\nimport { useChartIds } from 'src/dashboard/util/charts/useChartIds';\n\nconst extractTabLabel = (tab?: LayoutItem) =>\n  tab?.meta?.text || tab?.meta?.defaultText || '';\nconst extractChartLabel = (chart?: LayoutItem) =>\n  chart?.meta?.sliceNameOverride || chart?.meta?.sliceName || chart?.id || '';\n\nexport const useFilterScope = (filter: Filter) => {\n  const layout = useSelector<RootState, Layout>(\n    state => state.dashboardLayout.present,\n  );\n  const chartIds = useChartIds();\n\n  return useMemo(() => {\n    let topLevelTabs: string[] | undefined;\n    const topElementId = layout[DASHBOARD_ROOT_ID].children[0];\n    if (topElementId.startsWith('TABS-')) {\n      topLevelTabs = layout[topElementId].children;\n    }\n\n    // no charts in scope\n    if (filter.scope.rootPath.length === 0) {\n      return undefined;\n    }\n\n    // all charts in scope\n    // no charts excluded and no top level tabs\n    // OR no charts excluded and every top level tab is in rootPath\n    if (\n      filter.scope.excluded.length === 0 &&\n      (filter.scope.rootPath[0] === DASHBOARD_ROOT_ID ||\n        topLevelTabs?.every(topLevelTab =>\n          filter.scope.rootPath.includes(topLevelTab),\n        ))\n    ) {\n      return { all: [t('All charts')] };\n    }\n\n    // no charts excluded and not every top level tab in scope\n    // returns \"TAB1, TAB2\"\n    if (filter.scope.excluded.length === 0 && topLevelTabs) {\n      return {\n        tabs: filter.scope.rootPath\n          .map(tabId => extractTabLabel(layout[tabId]))\n          .filter(Boolean),\n      };\n    }\n\n    const layoutCharts = Object.values(layout).filter(\n      layoutElement => layoutElement.type === CHART_TYPE,\n    );\n\n    // no top level tabs, charts excluded\n    // returns \"CHART1, CHART2\"\n    if (filter.scope.rootPath[0] === DASHBOARD_ROOT_ID) {\n      return {\n        charts: chartIds\n          .filter(chartId => !filter.scope.excluded.includes(chartId))\n          .map(chartId => {\n            const layoutElement = layoutCharts.find(\n              layoutChart => layoutChart.meta.chartId === chartId,\n            );\n            return extractChartLabel(layoutElement);\n          })\n          .filter(Boolean),\n      };\n    }\n\n    // top level tabs, charts excluded\n    // returns \"TAB1, TAB2, CHART1\"\n    if (topLevelTabs) {\n      // We start assuming that all charts are in scope for all tabs in the root path\n      const topLevelTabsInFullScope = [...filter.scope.rootPath];\n      const layoutChartElementsInTabsInScope = layoutCharts.filter(element =>\n        element.parents.some(parent =>\n          topLevelTabsInFullScope.includes(parent),\n        ),\n      );\n      // Exclude the tabs that contain excluded charts\n      filter.scope.excluded.forEach(chartId => {\n        const excludedIndex = topLevelTabsInFullScope.findIndex(tabId =>\n          layoutChartElementsInTabsInScope\n            .find(chart => chart.meta.chartId === chartId)\n            ?.parents.includes(tabId),\n        );\n        if (excludedIndex > -1) {\n          topLevelTabsInFullScope.splice(excludedIndex, 1);\n        }\n      });\n      // Handle charts that are in scope but belong to excluded tabs.\n      const chartsInExcludedTabs = chartIds\n        .filter(chartId => !filter.scope.excluded.includes(chartId))\n        .reduce((acc: LayoutItem[], chartId) => {\n          const layoutChartElementInExcludedTab =\n            layoutChartElementsInTabsInScope.find(\n              element =>\n                element.meta.chartId === chartId &&\n                element.parents.every(\n                  parent => !topLevelTabsInFullScope.includes(parent),\n                ),\n            );\n          if (layoutChartElementInExcludedTab) {\n            acc.push(layoutChartElementInExcludedTab);\n          }\n          return acc;\n        }, []);\n      // Join tab names and chart names\n      return {\n        tabs: topLevelTabsInFullScope\n          .map(tabId => extractTabLabel(layout[tabId]))\n          .filter(Boolean),\n        charts: chartsInExcludedTabs.map(extractChartLabel).filter(Boolean),\n      };\n    }\n\n    return undefined;\n  }, [chartIds, filter.scope.excluded, filter.scope.rootPath, layout]);\n};\n"]},"metadata":{},"sourceType":"module"}