{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport default class ChartMetadata {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  constructor(config) {this.name = void 0;this.canBeAnnotationTypes = void 0;this.canBeAnnotationTypesLookup = void 0;this.credits = void 0;this.description = void 0;this.show = void 0;this.supportedAnnotationTypes = void 0;this.thumbnail = void 0;this.useLegacyApi = void 0;this.behaviors = void 0;this.datasourceCount = void 0;this.enableNoResults = void 0;this.exampleGallery = void 0;this.tags = void 0;this.category = void 0;this.deprecated = void 0;this.label = void 0;this.labelExplanation = void 0;this.queryObjectCount = void 0;\n    const { name, canBeAnnotationTypes = [], credits = [], description = '', show = true, supportedAnnotationTypes = [], thumbnail, useLegacyApi = false, behaviors = [], datasourceCount = 1, enableNoResults = true, exampleGallery = [], tags = [], category = null, deprecated = false, label = null, labelExplanation = null, queryObjectCount = 1 } = config;\n    this.name = name;\n    this.credits = credits;\n    this.description = description;\n    this.show = show;\n    this.canBeAnnotationTypes = canBeAnnotationTypes;\n    this.canBeAnnotationTypesLookup = canBeAnnotationTypes.reduce((prev, type) => {\n      const lookup = prev;\n      lookup[type] = true;\n      return lookup;\n    }, {});\n    this.supportedAnnotationTypes = supportedAnnotationTypes;\n    this.thumbnail = thumbnail;\n    this.useLegacyApi = useLegacyApi;\n    this.behaviors = behaviors;\n    this.datasourceCount = datasourceCount;\n    this.enableNoResults = enableNoResults;\n    this.exampleGallery = exampleGallery;\n    this.tags = tags;\n    this.category = category;\n    this.deprecated = deprecated;\n    this.label = label;\n    this.labelExplanation = labelExplanation;\n    this.queryObjectCount = queryObjectCount;\n  }\n  canBeAnnotationType(type) {\n    return this.canBeAnnotationTypesLookup[type] || false;\n  }\n  clone() {\n    return new ChartMetadata(this);\n  }}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAqDA,eAAc,MAAOA,aAAP,CAAoB;;;;;;;;;;;;;;;;;;;;EAuChCC,YAAYC,MAAZ,EAAuC,MAtCvCC,IAsCuC,eApCvCC,oBAoCuC,eAlCvCC,0BAkCuC,eAhCvCC,OAgCuC,eA9BvCC,WA8BuC,eA5BvCC,IA4BuC,eA1BvCC,wBA0BuC,eAxBvCC,SAwBuC,eAtBvCC,YAsBuC,eApBvCC,SAoBuC,eAlBvCC,eAkBuC,eAhBvCC,eAgBuC,eAdvCC,cAcuC,eAZvCC,IAYuC,eAVvCC,QAUuC,eARvCC,UAQuC,eANvCC,KAMuC,eAJvCC,gBAIuC,eAFvCC,gBAEuC;IACrC,MAAM,EACJlB,IADI,EAEJC,oBAAoB,GAAG,EAFnB,EAGJE,OAAO,GAAG,EAHN,EAIJC,WAAW,GAAG,EAJV,EAKJC,IAAI,GAAG,IALH,EAMJC,wBAAwB,GAAG,EANvB,EAOJC,SAPI,EAQJC,YAAY,GAAG,KARX,EASJC,SAAS,GAAG,EATR,EAUJC,eAAe,GAAG,CAVd,EAWJC,eAAe,GAAG,IAXd,EAYJC,cAAc,GAAG,EAZb,EAaJC,IAAI,GAAG,EAbH,EAcJC,QAAQ,GAAG,IAdP,EAeJC,UAAU,GAAG,KAfT,EAgBJC,KAAK,GAAG,IAhBJ,EAiBJC,gBAAgB,GAAG,IAjBf,EAkBJC,gBAAgB,GAAG,CAlBf,KAmBFnB,MAnBJ;IAqBA,KAAKC,IAAL,GAAYA,IAAZ;IACA,KAAKG,OAAL,GAAeA,OAAf;IACA,KAAKC,WAAL,GAAmBA,WAAnB;IACA,KAAKC,IAAL,GAAYA,IAAZ;IACA,KAAKJ,oBAAL,GAA4BA,oBAA5B;IACA,KAAKC,0BAAL,GAAkCD,oBAAoB,CAACkB,MAArB,CAChC,CAACC,IAAD,EAAoBC,IAApB,KAAoC;MAClC,MAAMC,MAAM,GAAGF,IAAf;MACAE,MAAM,CAACD,IAAD,CAAN,GAAe,IAAf;MAEA,OAAOC,MAAP;IACD,CAN+B,EAOhC,EAPgC,CAAlC;IASA,KAAKhB,wBAAL,GAAgCA,wBAAhC;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKC,YAAL,GAAoBA,YAApB;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKC,eAAL,GAAuBA,eAAvB;IACA,KAAKC,eAAL,GAAuBA,eAAvB;IACA,KAAKC,cAAL,GAAsBA,cAAtB;IACA,KAAKC,IAAL,GAAYA,IAAZ;IACA,KAAKC,QAAL,GAAgBA,QAAhB;IACA,KAAKC,UAAL,GAAkBA,UAAlB;IACA,KAAKC,KAAL,GAAaA,KAAb;IACA,KAAKC,gBAAL,GAAwBA,gBAAxB;IACA,KAAKC,gBAAL,GAAwBA,gBAAxB;EACD;EAEDK,mBAAmB,CAACF,IAAD,EAAa;IAC9B,OAAO,KAAKnB,0BAAL,CAAgCmB,IAAhC,KAAyC,KAAhD;EACD;EAEDG,KAAK;IACH,OAAO,IAAI3B,aAAJ,CAAkB,IAAlB,CAAP;EACD,CAhG+B","names":["ChartMetadata","constructor","config","name","canBeAnnotationTypes","canBeAnnotationTypesLookup","credits","description","show","supportedAnnotationTypes","thumbnail","useLegacyApi","behaviors","datasourceCount","enableNoResults","exampleGallery","tags","category","deprecated","label","labelExplanation","queryObjectCount","reduce","prev","type","lookup","canBeAnnotationType","clone"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/chart/models/ChartMetadata.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Behavior, ChartLabel } from '../types/Base';\n\ninterface LookupTable {\n  [key: string]: boolean;\n}\n\nexport interface ExampleImage {\n  url: string;\n  caption?: string;\n}\n\nexport interface ChartMetadataConfig {\n  name: string;\n  canBeAnnotationTypes?: string[];\n  credits?: string[];\n  description?: string;\n  datasourceCount?: number;\n  enableNoResults?: boolean;\n  show?: boolean;\n  supportedAnnotationTypes?: string[];\n  thumbnail: string;\n  useLegacyApi?: boolean;\n  behaviors?: Behavior[];\n  exampleGallery?: ExampleImage[];\n  tags?: string[];\n  category?: string | null;\n  // deprecated: true hides a chart from all viz picker interactions.\n  deprecated?: boolean;\n  // label: ChartLabel.DEPRECATED which will display a \"deprecated\" label on the chart.\n  label?: ChartLabel | null;\n  labelExplanation?: string | null;\n  queryObjectCount?: number;\n}\n\nexport default class ChartMetadata {\n  name: string;\n\n  canBeAnnotationTypes?: string[];\n\n  canBeAnnotationTypesLookup: LookupTable;\n\n  credits: string[];\n\n  description: string;\n\n  show: boolean;\n\n  supportedAnnotationTypes: string[];\n\n  thumbnail: string;\n\n  useLegacyApi: boolean;\n\n  behaviors: Behavior[];\n\n  datasourceCount: number;\n\n  enableNoResults: boolean;\n\n  exampleGallery: ExampleImage[];\n\n  tags: string[];\n\n  category: string | null;\n\n  deprecated?: boolean;\n\n  label?: ChartLabel | null;\n\n  labelExplanation?: string | null;\n\n  queryObjectCount: number;\n\n  constructor(config: ChartMetadataConfig) {\n    const {\n      name,\n      canBeAnnotationTypes = [],\n      credits = [],\n      description = '',\n      show = true,\n      supportedAnnotationTypes = [],\n      thumbnail,\n      useLegacyApi = false,\n      behaviors = [],\n      datasourceCount = 1,\n      enableNoResults = true,\n      exampleGallery = [],\n      tags = [],\n      category = null,\n      deprecated = false,\n      label = null,\n      labelExplanation = null,\n      queryObjectCount = 1,\n    } = config;\n\n    this.name = name;\n    this.credits = credits;\n    this.description = description;\n    this.show = show;\n    this.canBeAnnotationTypes = canBeAnnotationTypes;\n    this.canBeAnnotationTypesLookup = canBeAnnotationTypes.reduce(\n      (prev: LookupTable, type: string) => {\n        const lookup = prev;\n        lookup[type] = true;\n\n        return lookup;\n      },\n      {},\n    );\n    this.supportedAnnotationTypes = supportedAnnotationTypes;\n    this.thumbnail = thumbnail;\n    this.useLegacyApi = useLegacyApi;\n    this.behaviors = behaviors;\n    this.datasourceCount = datasourceCount;\n    this.enableNoResults = enableNoResults;\n    this.exampleGallery = exampleGallery;\n    this.tags = tags;\n    this.category = category;\n    this.deprecated = deprecated;\n    this.label = label;\n    this.labelExplanation = labelExplanation;\n    this.queryObjectCount = queryObjectCount;\n  }\n\n  canBeAnnotationType(type: string): boolean {\n    return this.canBeAnnotationTypesLookup[type] || false;\n  }\n\n  clone() {\n    return new ChartMetadata(this);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}