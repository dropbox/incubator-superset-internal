{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { getSharedLabelColor, isDefined, makeApi, SharedLabelColorSource, t } from '@superset-ui/core';\nimport Loading from 'src/components/Loading';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport getFormDataWithExtraFilters from 'src/dashboard/util/charts/getFormDataWithExtraFilters';\nimport { getAppliedFilterValues } from 'src/dashboard/util/activeDashboardFilters';\nimport { getParsedExploreURLParams } from 'src/explore/exploreUtils/getParsedExploreURLParams';\nimport { hydrateExplore } from 'src/explore/actions/hydrateExplore';\nimport ExploreViewContainer from 'src/explore/components/ExploreViewContainer';\nimport { fallbackExploreInitialData } from 'src/explore/fixtures';\nimport { getItem, LocalStorageKeys } from 'src/utils/localStorageHelpers';\nimport { getFormDataWithDashboardContext } from 'src/explore/controlUtils/getFormDataWithDashboardContext';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst isValidResult = (rv) => {var _rv$result, _rv$result2, _rv$result2$dataset;return (rv == null ? void 0 : (_rv$result = rv.result) == null ? void 0 : _rv$result.form_data) && isDefined(rv == null ? void 0 : (_rv$result2 = rv.result) == null ? void 0 : (_rv$result2$dataset = _rv$result2.dataset) == null ? void 0 : _rv$result2$dataset.id);};\nconst fetchExploreData = async (exploreUrlParams) => {\n  try {var _rv$result3;\n    const rv = await makeApi({\n      method: 'GET',\n      endpoint: 'api/v1/explore/' })(\n    exploreUrlParams);\n    if (isValidResult(rv)) {\n      return rv;\n    }\n    let message = t('Failed to load chart data');\n    const responseError = rv == null ? void 0 : (_rv$result3 = rv.result) == null ? void 0 : _rv$result3.message;\n    if (responseError) {\n      message = `${message}:\\n${responseError}`;\n    }\n    throw new Error(message);\n  }\n  catch (err) {\n    // todo: encapsulate the error handler\n    const clientError = await getClientErrorObject(err);\n    throw new Error(clientError.message ||\n    clientError.error ||\n    t('Failed to load chart data.'));\n  }\n};\nconst getDashboardPageContext = (pageId) => {\n  if (!pageId) {\n    return null;\n  }\n  return getItem(LocalStorageKeys.dashboard__explore_context, {})[pageId] || null;\n};\nconst getDashboardContextFormData = () => {\n  const dashboardPageId = getUrlParam(URL_PARAMS.dashboardPageId);\n  const dashboardContext = getDashboardPageContext(dashboardPageId);\n  if (dashboardContext) {\n    const sliceId = getUrlParam(URL_PARAMS.sliceId) || 0;\n    const { labelColors, sharedLabelColors, colorScheme, chartConfiguration, nativeFilters, filterBoxFilters, dataMask, dashboardId } = dashboardContext;\n    const dashboardContextWithFilters = getFormDataWithExtraFilters({\n      chart: { id: sliceId },\n      filters: getAppliedFilterValues(sliceId, filterBoxFilters),\n      nativeFilters,\n      chartConfiguration,\n      colorScheme,\n      dataMask,\n      labelColors,\n      sharedLabelColors,\n      sliceId,\n      allSliceIds: [sliceId],\n      extraControls: {} });\n\n    Object.assign(dashboardContextWithFilters, { dashboardId });\n    return dashboardContextWithFilters;\n  }\n  return null;\n};\nexport default function ExplorePage() {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const isExploreInitialized = useRef(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    const exploreUrlParams = getParsedExploreURLParams(location);\n    const saveAction = getUrlParam(URL_PARAMS.saveAction);\n    const dashboardContextFormData = getDashboardContextFormData();\n    if (!isExploreInitialized.current || !!saveAction) {\n      fetchExploreData(exploreUrlParams).\n      then((_ref) => {let { result } = _ref;\n        const formData = !isExploreInitialized.current && dashboardContextFormData ?\n        getFormDataWithDashboardContext(result.form_data, dashboardContextFormData) :\n        result.form_data;\n        dispatch(hydrateExplore({\n          ...result,\n          form_data: formData,\n          saveAction }));\n\n      }).\n      catch((err) => {\n        dispatch(hydrateExplore(fallbackExploreInitialData));\n        dispatch(addDangerToast(err.message));\n      }).\n      finally(() => {\n        setIsLoaded(true);\n        isExploreInitialized.current = true;\n      });\n    }\n    getSharedLabelColor().source = SharedLabelColorSource.explore;\n  }, [dispatch, location]);\n  if (!isLoaded) {\n    return ___EmotionJSX(Loading, null);\n  }\n  return ___EmotionJSX(ExploreViewContainer, null);\n}__signature__(ExplorePage, \"useState{[isLoaded, setIsLoaded](false)}\\nuseRef{isExploreInitialized}\\nuseDispatch{dispatch}\\nuseLocation{location}\\nuseEffect{}\", () => [useDispatch, useLocation]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(isValidResult, \"isValidResult\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/Chart/index.tsx\");reactHotLoader.register(fetchExploreData, \"fetchExploreData\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/Chart/index.tsx\");reactHotLoader.register(getDashboardPageContext, \"getDashboardPageContext\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/Chart/index.tsx\");reactHotLoader.register(getDashboardContextFormData, \"getDashboardContextFormData\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/Chart/index.tsx\");reactHotLoader.register(ExplorePage, \"ExplorePage\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/Chart/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"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","names":["React","useEffect","useRef","useState","useDispatch","useLocation","getSharedLabelColor","isDefined","makeApi","SharedLabelColorSource","t","Loading","addDangerToast","getUrlParam","URL_PARAMS","getClientErrorObject","getFormDataWithExtraFilters","getAppliedFilterValues","getParsedExploreURLParams","hydrateExplore","ExploreViewContainer","fallbackExploreInitialData","getItem","LocalStorageKeys","getFormDataWithDashboardContext","isValidResult","rv","result","form_data","dataset","id","fetchExploreData","exploreUrlParams","method","endpoint","message","responseError","Error","err","clientError","error","getDashboardPageContext","pageId","dashboard__explore_context","getDashboardContextFormData","dashboardPageId","dashboardContext","sliceId","labelColors","sharedLabelColors","colorScheme","chartConfiguration","nativeFilters","filterBoxFilters","dataMask","dashboardId","dashboardContextWithFilters","chart","filters","allSliceIds","extraControls","Object","assign","ExplorePage","isLoaded","setIsLoaded","isExploreInitialized","dispatch","location","saveAction","dashboardContextFormData","current","then","formData","catch","finally","source","explore"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/pages/Chart/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport {\n  getSharedLabelColor,\n  isDefined,\n  JsonObject,\n  makeApi,\n  SharedLabelColorSource,\n  t,\n} from '@superset-ui/core';\nimport Loading from 'src/components/Loading';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport getFormDataWithExtraFilters from 'src/dashboard/util/charts/getFormDataWithExtraFilters';\nimport { getAppliedFilterValues } from 'src/dashboard/util/activeDashboardFilters';\nimport { getParsedExploreURLParams } from 'src/explore/exploreUtils/getParsedExploreURLParams';\nimport { hydrateExplore } from 'src/explore/actions/hydrateExplore';\nimport ExploreViewContainer from 'src/explore/components/ExploreViewContainer';\nimport { ExploreResponsePayload, SaveActionType } from 'src/explore/types';\nimport { fallbackExploreInitialData } from 'src/explore/fixtures';\nimport { getItem, LocalStorageKeys } from 'src/utils/localStorageHelpers';\nimport { getFormDataWithDashboardContext } from 'src/explore/controlUtils/getFormDataWithDashboardContext';\n\nconst isValidResult = (rv: JsonObject): boolean =>\n  rv?.result?.form_data && isDefined(rv?.result?.dataset?.id);\n\nconst fetchExploreData = async (exploreUrlParams: URLSearchParams) => {\n  try {\n    const rv = await makeApi<{}, ExploreResponsePayload>({\n      method: 'GET',\n      endpoint: 'api/v1/explore/',\n    })(exploreUrlParams);\n    if (isValidResult(rv)) {\n      return rv;\n    }\n    let message = t('Failed to load chart data');\n    const responseError = rv?.result?.message;\n    if (responseError) {\n      message = `${message}:\\n${responseError}`;\n    }\n    throw new Error(message);\n  } catch (err) {\n    // todo: encapsulate the error handler\n    const clientError = await getClientErrorObject(err);\n    throw new Error(\n      clientError.message ||\n        clientError.error ||\n        t('Failed to load chart data.'),\n    );\n  }\n};\n\nconst getDashboardPageContext = (pageId?: string | null) => {\n  if (!pageId) {\n    return null;\n  }\n  return (\n    getItem(LocalStorageKeys.dashboard__explore_context, {})[pageId] || null\n  );\n};\n\nconst getDashboardContextFormData = () => {\n  const dashboardPageId = getUrlParam(URL_PARAMS.dashboardPageId);\n  const dashboardContext = getDashboardPageContext(dashboardPageId);\n  if (dashboardContext) {\n    const sliceId = getUrlParam(URL_PARAMS.sliceId) || 0;\n    const {\n      labelColors,\n      sharedLabelColors,\n      colorScheme,\n      chartConfiguration,\n      nativeFilters,\n      filterBoxFilters,\n      dataMask,\n      dashboardId,\n    } = dashboardContext;\n    const dashboardContextWithFilters = getFormDataWithExtraFilters({\n      chart: { id: sliceId },\n      filters: getAppliedFilterValues(sliceId, filterBoxFilters),\n      nativeFilters,\n      chartConfiguration,\n      colorScheme,\n      dataMask,\n      labelColors,\n      sharedLabelColors,\n      sliceId,\n      allSliceIds: [sliceId],\n      extraControls: {},\n    });\n    Object.assign(dashboardContextWithFilters, { dashboardId });\n    return dashboardContextWithFilters;\n  }\n  return null;\n};\n\nexport default function ExplorePage() {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const isExploreInitialized = useRef(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    const exploreUrlParams = getParsedExploreURLParams(location);\n    const saveAction = getUrlParam(\n      URL_PARAMS.saveAction,\n    ) as SaveActionType | null;\n    const dashboardContextFormData = getDashboardContextFormData();\n    if (!isExploreInitialized.current || !!saveAction) {\n      fetchExploreData(exploreUrlParams)\n        .then(({ result }) => {\n          const formData =\n            !isExploreInitialized.current && dashboardContextFormData\n              ? getFormDataWithDashboardContext(\n                  result.form_data,\n                  dashboardContextFormData,\n                )\n              : result.form_data;\n          dispatch(\n            hydrateExplore({\n              ...result,\n              form_data: formData,\n              saveAction,\n            }),\n          );\n        })\n        .catch(err => {\n          dispatch(hydrateExplore(fallbackExploreInitialData));\n          dispatch(addDangerToast(err.message));\n        })\n        .finally(() => {\n          setIsLoaded(true);\n          isExploreInitialized.current = true;\n        });\n    }\n    getSharedLabelColor().source = SharedLabelColorSource.explore;\n  }, [dispatch, location]);\n\n  if (!isLoaded) {\n    return <Loading />;\n  }\n  return <ExploreViewContainer />;\n}\n"]},"metadata":{},"sourceType":"module"}