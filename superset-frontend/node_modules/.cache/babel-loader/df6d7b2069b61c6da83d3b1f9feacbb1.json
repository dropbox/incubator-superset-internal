{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport var RollingType;\n(function (RollingType) {\n  RollingType[\"Mean\"] = \"mean\";\n  RollingType[\"Sum\"] = \"sum\";\n  RollingType[\"Std\"] = \"std\";\n  RollingType[\"Cumsum\"] = \"cumsum\";\n})(RollingType || (RollingType = {}));\nexport var ComparisonType;\n(function (ComparisonType) {\n  ComparisonType[\"Values\"] = \"values\";\n  ComparisonType[\"Difference\"] = \"difference\";\n  ComparisonType[\"Percentage\"] = \"percentage\";\n  ComparisonType[\"Ratio\"] = \"ratio\";\n})(ComparisonType || (ComparisonType = {}));const _default =\n{};export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(RollingType, \"RollingType\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/query/types/AdvancedAnalytics.ts\");reactHotLoader.register(ComparisonType, \"ComparisonType\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/query/types/AdvancedAnalytics.ts\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/query/types/AdvancedAnalytics.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;AACA;;;;;;;;;;;;;;;;;;AAkBA,WAAYA,WAAZ;AAAA,WAAYA,WAAZ,EAAuB;EACrBA;EACAA;EACAA;EACAA;AACD,CALD,EAAYA,WAAW,KAAXA,WAAW,MAAvB;AAYA,WAAYC,cAAZ;AAAA,WAAYA,cAAZ,EAA0B;EACxBA;EACAA;EACAA;EACAA;AACD,CALD,EAAYA,cAAc,KAAdA,cAAc,MAA1B,E;AAWe,E,CAAf,wB,iLAvBYD,W,4KAYAC,c","names":["RollingType","ComparisonType"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/packages/superset-ui-core/src/query/types/AdvancedAnalytics.ts"],"sourcesContent":["/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport enum RollingType {\n  Mean = 'mean',\n  Sum = 'sum',\n  Std = 'std',\n  Cumsum = 'cumsum',\n}\nexport interface RollingWindow {\n  rolling_type?: RollingType;\n  rolling_periods?: number;\n  min_periods?: number;\n}\n\nexport enum ComparisonType {\n  Values = 'values',\n  Difference = 'difference',\n  Percentage = 'percentage',\n  Ratio = 'ratio',\n}\nexport interface TimeCompare {\n  time_compare?: string;\n  comparison_type?: ComparisonType;\n}\n\nexport default {};\n"]},"metadata":{},"sourceType":"module"}