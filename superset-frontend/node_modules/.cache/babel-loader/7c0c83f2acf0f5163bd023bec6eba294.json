{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { D3_FORMAT_OPTIONS, D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT, sections, sharedControls, getStandardizedControls, D3_FORMAT_DOCS } from '@superset-ui/chart-controls';\nimport { DEFAULT_FORM_DATA, EchartsFunnelLabelTypeType } from './types';\nimport { legendSection } from '../controls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst { labelType, numberFormat, showLabels } = DEFAULT_FORM_DATA;\nconst funnelLegendSection = [...legendSection];\nfunnelLegendSection.splice(2, 1);\nconst config = {\n  controlPanelSections: [\n  sections.legacyRegularTime,\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    ['groupby'],\n    ['metric'],\n    ['adhoc_filters'],\n    [\n    {\n      name: 'row_limit',\n      config: {\n        ...sharedControls.row_limit,\n        default: 10 } }],\n\n\n\n    [\n    {\n      name: 'sort_by_metric',\n      config: {\n        default: true,\n        type: 'CheckboxControl',\n        label: t('Sort by metric'),\n        description: t('Whether to sort results by the selected metric in descending order.') } }]] },\n\n\n\n\n\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [\n    ['color_scheme'],\n    ...funnelLegendSection,\n    // eslint-disable-next-line react/jsx-key\n    [___EmotionJSX(\"div\", { className: \"section-header\" }, t('Labels'))],\n    [\n    {\n      name: 'label_type',\n      config: {\n        type: 'SelectControl',\n        label: t('Label Type'),\n        default: labelType,\n        renderTrigger: true,\n        choices: [\n        [EchartsFunnelLabelTypeType.Key, t('Category Name')],\n        [EchartsFunnelLabelTypeType.Value, t('Value')],\n        [EchartsFunnelLabelTypeType.Percent, t('Percentage')],\n        [EchartsFunnelLabelTypeType.KeyValue, t('Category and Value')],\n        [\n        EchartsFunnelLabelTypeType.KeyPercent,\n        t('Category and Percentage')],\n\n        [\n        EchartsFunnelLabelTypeType.KeyValuePercent,\n        t('Category, Value and Percentage')]],\n\n\n        description: t('What should be shown on the label?') } }],\n\n\n\n    [\n    {\n      name: 'number_format',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Number format'),\n        renderTrigger: true,\n        default: numberFormat,\n        choices: D3_FORMAT_OPTIONS,\n        description: `${D3_FORMAT_DOCS} ${D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT}` } }],\n\n\n\n    [\n    {\n      name: 'show_labels',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Show Labels'),\n        renderTrigger: true,\n        default: showLabels,\n        description: t('Whether to display the labels.') } }]] }],\n\n\n\n\n\n\n  onInit(state) {\n    return {\n      ...state,\n      row_limit: {\n        ...state.row_limit,\n        value: state.row_limit.default } };\n\n\n  },\n  formDataOverrides: (formData) => ({\n    ...formData,\n    metric: getStandardizedControls().shiftMetric(),\n    groupby: getStandardizedControls().popAllColumns() }) };\n\n\nexport default config;","map":{"version":3,"mappings":"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","names":["React","t","D3_FORMAT_OPTIONS","D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT","sections","sharedControls","getStandardizedControls","D3_FORMAT_DOCS","DEFAULT_FORM_DATA","EchartsFunnelLabelTypeType","legendSection","labelType","numberFormat","showLabels","funnelLegendSection","splice","config","controlPanelSections","legacyRegularTime","label","expanded","controlSetRows","name","row_limit","default","type","description","renderTrigger","choices","Key","Value","Percent","KeyValue","KeyPercent","KeyValuePercent","freeForm","onInit","state","value","formDataOverrides","formData","metric","shiftMetric","groupby","popAllColumns"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Funnel/controlPanel.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  D3_FORMAT_OPTIONS,\n  D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT,\n  sections,\n  sharedControls,\n  ControlStateMapping,\n  getStandardizedControls,\n  D3_FORMAT_DOCS,\n} from '@superset-ui/chart-controls';\nimport { DEFAULT_FORM_DATA, EchartsFunnelLabelTypeType } from './types';\nimport { legendSection } from '../controls';\n\nconst { labelType, numberFormat, showLabels } = DEFAULT_FORM_DATA;\n\nconst funnelLegendSection = [...legendSection];\nfunnelLegendSection.splice(2, 1);\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.legacyRegularTime,\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        ['groupby'],\n        ['metric'],\n        ['adhoc_filters'],\n        [\n          {\n            name: 'row_limit',\n            config: {\n              ...sharedControls.row_limit,\n              default: 10,\n            },\n          },\n        ],\n        [\n          {\n            name: 'sort_by_metric',\n            config: {\n              default: true,\n              type: 'CheckboxControl',\n              label: t('Sort by metric'),\n              description: t(\n                'Whether to sort results by the selected metric in descending order.',\n              ),\n            },\n          },\n        ],\n      ],\n    },\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        ['color_scheme'],\n        ...funnelLegendSection,\n        // eslint-disable-next-line react/jsx-key\n        [<div className=\"section-header\">{t('Labels')}</div>],\n        [\n          {\n            name: 'label_type',\n            config: {\n              type: 'SelectControl',\n              label: t('Label Type'),\n              default: labelType,\n              renderTrigger: true,\n              choices: [\n                [EchartsFunnelLabelTypeType.Key, t('Category Name')],\n                [EchartsFunnelLabelTypeType.Value, t('Value')],\n                [EchartsFunnelLabelTypeType.Percent, t('Percentage')],\n                [EchartsFunnelLabelTypeType.KeyValue, t('Category and Value')],\n                [\n                  EchartsFunnelLabelTypeType.KeyPercent,\n                  t('Category and Percentage'),\n                ],\n                [\n                  EchartsFunnelLabelTypeType.KeyValuePercent,\n                  t('Category, Value and Percentage'),\n                ],\n              ],\n              description: t('What should be shown on the label?'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'number_format',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Number format'),\n              renderTrigger: true,\n              default: numberFormat,\n              choices: D3_FORMAT_OPTIONS,\n              description: `${D3_FORMAT_DOCS} ${D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT}`,\n            },\n          },\n        ],\n        [\n          {\n            name: 'show_labels',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Show Labels'),\n              renderTrigger: true,\n              default: showLabels,\n              description: t('Whether to display the labels.'),\n            },\n          },\n        ],\n      ],\n    },\n  ],\n  onInit(state: ControlStateMapping) {\n    return {\n      ...state,\n      row_limit: {\n        ...state.row_limit,\n        value: state.row_limit.default,\n      },\n    };\n  },\n  formDataOverrides: formData => ({\n    ...formData,\n    metric: getStandardizedControls().shiftMetric(),\n    groupby: getStandardizedControls().popAllColumns(),\n  }),\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}