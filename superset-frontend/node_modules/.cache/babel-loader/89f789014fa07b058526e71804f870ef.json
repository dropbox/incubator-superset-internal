{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useDatasetsList from 'src/features/datasets/hooks/useDatasetLists';\nimport Header from 'src/features/datasets/AddDataset/Header';\nimport EditPage from 'src/features/datasets/AddDataset/EditDataset';\nimport DatasetPanel from 'src/features/datasets/AddDataset/DatasetPanel';\nimport LeftPanel from 'src/features/datasets/AddDataset/LeftPanel';\nimport Footer from 'src/features/datasets/AddDataset/Footer';\nimport { DatasetActionType } from 'src/features/datasets/AddDataset/types';\nimport DatasetLayout from 'src/features/datasets/DatasetLayout';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport function datasetReducer(state, action) {\n  const trimmedState = {\n    ...(state || {}) };\n\n  switch (action.type) {\n    case DatasetActionType.selectDatabase:\n      return {\n        ...trimmedState,\n        ...action.payload,\n        schema: null,\n        table_name: null };\n\n    case DatasetActionType.selectSchema:\n      return {\n        ...trimmedState,\n        [action.payload.name]: action.payload.value,\n        table_name: null };\n\n    case DatasetActionType.selectTable:\n      return {\n        ...trimmedState,\n        [action.payload.name]: action.payload.value };\n\n    case DatasetActionType.changeDataset:\n      return {\n        ...trimmedState,\n        [action.payload.name]: action.payload.value };\n\n    default:\n      return null;}\n\n}\nconst prevUrl = '/tablemodelview/list/?pageIndex=0&sortColumn=changed_on_delta_humanized&sortOrder=desc';\nexport default function AddDataset() {\n  const [dataset, setDataset] = useReducer(datasetReducer, null);\n  const [hasColumns, setHasColumns] = useState(false);\n  const [editPageIsVisible, setEditPageIsVisible] = useState(false);\n  const { datasets, datasetNames } = useDatasetsList(dataset == null ? void 0 : dataset.db, dataset == null ? void 0 : dataset.schema);\n  const { datasetId: id } = useParams();\n  useEffect(() => {\n    if (!Number.isNaN(parseInt(id, 10))) {\n      setEditPageIsVisible(true);\n    }\n  }, [id]);\n  const HeaderComponent = () => ___EmotionJSX(Header, { setDataset: setDataset, title: dataset == null ? void 0 : dataset.table_name });\n  const LeftPanelComponent = () => ___EmotionJSX(LeftPanel, { setDataset: setDataset, dataset: dataset, datasetNames: datasetNames });\n  const EditPageComponent = () => ___EmotionJSX(EditPage, { id: id });\n  const DatasetPanelComponent = () => {var _dataset$db;return ___EmotionJSX(DatasetPanel, { tableName: dataset == null ? void 0 : dataset.table_name, dbId: dataset == null ? void 0 : (_dataset$db = dataset.db) == null ? void 0 : _dataset$db.id, schema: dataset == null ? void 0 : dataset.schema, setHasColumns: setHasColumns, datasets: datasets });};\n  const FooterComponent = () => ___EmotionJSX(Footer, { url: prevUrl, datasetObject: dataset, hasColumns: hasColumns, datasets: datasetNames });\n  return ___EmotionJSX(DatasetLayout, { header: HeaderComponent(), leftPanel: editPageIsVisible ? null : LeftPanelComponent(), datasetPanel: editPageIsVisible ? EditPageComponent() : DatasetPanelComponent(), footer: FooterComponent() });\n}","map":{"version":3,"mappings":"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","names":["React","useReducer","useEffect","useState","useParams","useDatasetsList","Header","EditPage","DatasetPanel","LeftPanel","Footer","DatasetActionType","DatasetLayout","datasetReducer","state","action","trimmedState","type","selectDatabase","payload","schema","table_name","selectSchema","name","value","selectTable","changeDataset","prevUrl","AddDataset","dataset","setDataset","hasColumns","setHasColumns","editPageIsVisible","setEditPageIsVisible","datasets","datasetNames","db","datasetId","id","Number","isNaN","parseInt","HeaderComponent","LeftPanelComponent","EditPageComponent","DatasetPanelComponent","FooterComponent"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/pages/DatasetCreation/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, Reducer, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useDatasetsList from 'src/features/datasets/hooks/useDatasetLists';\nimport Header from 'src/features/datasets/AddDataset/Header';\nimport EditPage from 'src/features/datasets/AddDataset/EditDataset';\nimport DatasetPanel from 'src/features/datasets/AddDataset/DatasetPanel';\nimport LeftPanel from 'src/features/datasets/AddDataset/LeftPanel';\nimport Footer from 'src/features/datasets/AddDataset/Footer';\nimport {\n  DatasetActionType,\n  DatasetObject,\n  DSReducerActionType,\n} from 'src/features/datasets/AddDataset/types';\nimport DatasetLayout from 'src/features/datasets/DatasetLayout';\n\ntype Schema = {\n  schema: string;\n};\n\nexport function datasetReducer(\n  state: DatasetObject | null,\n  action: DSReducerActionType,\n): Partial<DatasetObject> | Schema | null {\n  const trimmedState = {\n    ...(state || {}),\n  };\n\n  switch (action.type) {\n    case DatasetActionType.selectDatabase:\n      return {\n        ...trimmedState,\n        ...action.payload,\n        schema: null,\n        table_name: null,\n      };\n    case DatasetActionType.selectSchema:\n      return {\n        ...trimmedState,\n        [action.payload.name]: action.payload.value,\n        table_name: null,\n      };\n    case DatasetActionType.selectTable:\n      return {\n        ...trimmedState,\n        [action.payload.name]: action.payload.value,\n      };\n    case DatasetActionType.changeDataset:\n      return {\n        ...trimmedState,\n        [action.payload.name]: action.payload.value,\n      };\n    default:\n      return null;\n  }\n}\n\nconst prevUrl =\n  '/tablemodelview/list/?pageIndex=0&sortColumn=changed_on_delta_humanized&sortOrder=desc';\n\nexport default function AddDataset() {\n  const [dataset, setDataset] = useReducer<\n    Reducer<Partial<DatasetObject> | null, DSReducerActionType>\n  >(datasetReducer, null);\n  const [hasColumns, setHasColumns] = useState(false);\n  const [editPageIsVisible, setEditPageIsVisible] = useState(false);\n\n  const { datasets, datasetNames } = useDatasetsList(\n    dataset?.db,\n    dataset?.schema,\n  );\n\n  const { datasetId: id } = useParams<{ datasetId: string }>();\n  useEffect(() => {\n    if (!Number.isNaN(parseInt(id, 10))) {\n      setEditPageIsVisible(true);\n    }\n  }, [id]);\n\n  const HeaderComponent = () => (\n    <Header setDataset={setDataset} title={dataset?.table_name} />\n  );\n\n  const LeftPanelComponent = () => (\n    <LeftPanel\n      setDataset={setDataset}\n      dataset={dataset}\n      datasetNames={datasetNames}\n    />\n  );\n\n  const EditPageComponent = () => <EditPage id={id} />;\n\n  const DatasetPanelComponent = () => (\n    <DatasetPanel\n      tableName={dataset?.table_name}\n      dbId={dataset?.db?.id}\n      schema={dataset?.schema}\n      setHasColumns={setHasColumns}\n      datasets={datasets}\n    />\n  );\n\n  const FooterComponent = () => (\n    <Footer\n      url={prevUrl}\n      datasetObject={dataset}\n      hasColumns={hasColumns}\n      datasets={datasetNames}\n    />\n  );\n\n  return (\n    <DatasetLayout\n      header={HeaderComponent()}\n      leftPanel={editPageIsVisible ? null : LeftPanelComponent()}\n      datasetPanel={\n        editPageIsVisible ? EditPageComponent() : DatasetPanelComponent()\n      }\n      footer={FooterComponent()}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}