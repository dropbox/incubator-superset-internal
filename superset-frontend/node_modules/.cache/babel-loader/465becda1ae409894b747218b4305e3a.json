{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react/sort-prop-types */\nimport d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { extent as d3Extent } from 'd3-array';\nimport {\ngetNumberFormatter,\ngetSequentialSchemeRegistry,\nCategoricalColorNamespace } from\n'@superset-ui/core';\nimport countries, { countryOptions } from './countries';\n\nconst propTypes = {\n  data: PropTypes.arrayOf(\n  PropTypes.shape({\n    country_id: PropTypes.string,\n    metric: PropTypes.number })),\n\n\n  width: PropTypes.number,\n  height: PropTypes.number,\n  country: PropTypes.string,\n  linearColorScheme: PropTypes.string,\n  mapBaseUrl: PropTypes.string,\n  numberFormat: PropTypes.string };\n\n\nconst maps = {};\n\nfunction CountryMap(element, props) {\n  const {\n    data,\n    width,\n    height,\n    country,\n    linearColorScheme,\n    numberFormat,\n    colorScheme,\n    sliceId } =\n  props;\n\n  const container = element;\n  const format = getNumberFormatter(numberFormat);\n  const linearColorScale = getSequentialSchemeRegistry().\n  get(linearColorScheme).\n  createLinearScale(d3Extent(data, (v) => v.metric));\n  const colorScale = CategoricalColorNamespace.getScale(colorScheme);\n\n  const colorMap = {};\n  data.forEach((d) => {\n    colorMap[d.country_id] = colorScheme ?\n    colorScale(d.country_id, sliceId) :\n    linearColorScale(d.metric);\n  });\n  const colorFn = (d) => colorMap[d.properties.ISO] || 'none';\n\n  const path = d3.geo.path();\n  const div = d3.select(container);\n  div.classed('superset-legacy-chart-country-map', true);\n  div.selectAll('*').remove();\n  container.style.height = `${height}px`;\n  container.style.width = `${width}px`;\n  const svg = div.\n  append('svg:svg').\n  attr('width', width).\n  attr('height', height).\n  attr('preserveAspectRatio', 'xMidYMid meet');\n  const backgroundRect = svg.\n  append('rect').\n  attr('class', 'background').\n  attr('width', width).\n  attr('height', height);\n  const g = svg.append('g');\n  const mapLayer = g.append('g').classed('map-layer', true);\n  const textLayer = g.\n  append('g').\n  classed('text-layer', true).\n  attr('transform', `translate(${width / 2}, 45)`);\n  const bigText = textLayer.append('text').classed('big-text', true);\n  const resultText = textLayer.\n  append('text').\n  classed('result-text', true).\n  attr('dy', '1em');\n\n  let centered;\n\n  const clicked = function clicked(d) {\n    const hasCenter = d && centered !== d;\n    let x;\n    let y;\n    let k;\n    const halfWidth = width / 2;\n    const halfHeight = height / 2;\n\n    if (hasCenter) {\n      const centroid = path.centroid(d);\n      [x, y] = centroid;\n      k = 4;\n      centered = d;\n    } else {\n      x = halfWidth;\n      y = halfHeight;\n      k = 1;\n      centered = null;\n    }\n\n    g.transition().\n    duration(750).\n    attr(\n    'transform',\n    `translate(${halfWidth},${halfHeight})scale(${k})translate(${-x},${-y})`);\n\n    textLayer.\n    style('opacity', 0).\n    attr(\n    'transform',\n    `translate(0,0)translate(${x},${hasCenter ? y - 5 : 45})`).\n\n    transition().\n    duration(750).\n    style('opacity', 1);\n    bigText.\n    transition().\n    duration(750).\n    style('font-size', hasCenter ? 6 : 16);\n    resultText.\n    transition().\n    duration(750).\n    style('font-size', hasCenter ? 16 : 24);\n  };\n\n  backgroundRect.on('click', clicked);\n\n  const selectAndDisplayNameOfRegion = function selectAndDisplayNameOfRegion(\n  feature)\n  {\n    let name = '';\n    if (feature && feature.properties) {\n      if (feature.properties.ID_2) {\n        name = feature.properties.NAME_2;\n      } else {\n        name = feature.properties.NAME_1;\n      }\n    }\n    bigText.text(name);\n  };\n\n  const updateMetrics = function updateMetrics(region) {\n    if (region.length > 0) {\n      resultText.text(format(region[0].metric));\n    }\n  };\n\n  const mouseenter = function mouseenter(d) {\n    // Darken color\n    let c = colorFn(d);\n    if (c !== 'none') {\n      c = d3.rgb(c).darker().toString();\n    }\n    d3.select(this).style('fill', c);\n    selectAndDisplayNameOfRegion(d);\n    const result = data.filter(\n    (region) => region.country_id === d.properties.ISO);\n\n    updateMetrics(result);\n  };\n\n  const mouseout = function mouseout() {\n    d3.select(this).style('fill', colorFn);\n    bigText.text('');\n    resultText.text('');\n  };\n\n  function drawMap(mapData) {\n    const { features } = mapData;\n    const center = d3.geo.centroid(mapData);\n    const scale = 100;\n    const projection = d3.geo.\n    mercator().\n    scale(scale).\n    center(center).\n    translate([width / 2, height / 2]);\n    path.projection(projection);\n\n    // Compute scale that fits container.\n    const bounds = path.bounds(mapData);\n    const hscale = scale * width / (bounds[1][0] - bounds[0][0]);\n    const vscale = scale * height / (bounds[1][1] - bounds[0][1]);\n    const newScale = hscale < vscale ? hscale : vscale;\n\n    // Compute bounds and offset using the updated scale.\n    projection.scale(newScale);\n    const newBounds = path.bounds(mapData);\n    projection.translate([\n    width - (newBounds[0][0] + newBounds[1][0]) / 2,\n    height - (newBounds[0][1] + newBounds[1][1]) / 2]);\n\n\n    // Draw each province as a path\n    mapLayer.\n    selectAll('path').\n    data(features).\n    enter().\n    append('path').\n    attr('d', path).\n    attr('class', 'region').\n    attr('vector-effect', 'non-scaling-stroke').\n    style('fill', colorFn).\n    on('mouseenter', mouseenter).\n    on('mouseout', mouseout).\n    on('click', clicked);\n  }\n\n  const map = maps[country];\n  if (map) {\n    drawMap(map);\n  } else {\n    const url = countries[country];\n    d3.json(url, (error, mapData) => {\n      if (error) {var _countryOptions$find;\n        const countryName =\n        ((_countryOptions$find = countryOptions.find((x) => x[0] === country)) == null ? void 0 : _countryOptions$find[1]) || country;\n        d3.select(element).html(\n        `<div class=\"alert alert-danger\">Could not load map data for ${countryName}</div>`);\n\n      } else {\n        maps[country] = mapData;\n        drawMap(mapData);\n      }\n    });\n  }\n}\n\nCountryMap.displayName = 'CountryMap';\nCountryMap.propTypes = propTypes;\n\nexport default CountryMap;","map":{"version":3,"names":["d3","PropTypes","extent","d3Extent","getNumberFormatter","getSequentialSchemeRegistry","CategoricalColorNamespace","countries","countryOptions","propTypes","data","arrayOf","shape","country_id","string","metric","number","width","height","country","linearColorScheme","mapBaseUrl","numberFormat","maps","CountryMap","element","props","colorScheme","sliceId","container","format","linearColorScale","get","createLinearScale","v","colorScale","getScale","colorMap","forEach","d","colorFn","properties","ISO","path","geo","div","select","classed","selectAll","remove","style","svg","append","attr","backgroundRect","g","mapLayer","textLayer","bigText","resultText","centered","clicked","hasCenter","x","y","k","halfWidth","halfHeight","centroid","transition","duration","on","selectAndDisplayNameOfRegion","feature","name","ID_2","NAME_2","NAME_1","text","updateMetrics","region","length","mouseenter","c","rgb","darker","toString","result","filter","mouseout","drawMap","mapData","features","center","scale","projection","mercator","translate","bounds","hscale","vscale","newScale","newBounds","enter","map","url","json","error","countryName","find","html","displayName"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/plugins/legacy-plugin-chart-country-map/src/CountryMap.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react/sort-prop-types */\nimport d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { extent as d3Extent } from 'd3-array';\nimport {\n  getNumberFormatter,\n  getSequentialSchemeRegistry,\n  CategoricalColorNamespace,\n} from '@superset-ui/core';\nimport countries, { countryOptions } from './countries';\n\nconst propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      country_id: PropTypes.string,\n      metric: PropTypes.number,\n    }),\n  ),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  country: PropTypes.string,\n  linearColorScheme: PropTypes.string,\n  mapBaseUrl: PropTypes.string,\n  numberFormat: PropTypes.string,\n};\n\nconst maps = {};\n\nfunction CountryMap(element, props) {\n  const {\n    data,\n    width,\n    height,\n    country,\n    linearColorScheme,\n    numberFormat,\n    colorScheme,\n    sliceId,\n  } = props;\n\n  const container = element;\n  const format = getNumberFormatter(numberFormat);\n  const linearColorScale = getSequentialSchemeRegistry()\n    .get(linearColorScheme)\n    .createLinearScale(d3Extent(data, v => v.metric));\n  const colorScale = CategoricalColorNamespace.getScale(colorScheme);\n\n  const colorMap = {};\n  data.forEach(d => {\n    colorMap[d.country_id] = colorScheme\n      ? colorScale(d.country_id, sliceId)\n      : linearColorScale(d.metric);\n  });\n  const colorFn = d => colorMap[d.properties.ISO] || 'none';\n\n  const path = d3.geo.path();\n  const div = d3.select(container);\n  div.classed('superset-legacy-chart-country-map', true);\n  div.selectAll('*').remove();\n  container.style.height = `${height}px`;\n  container.style.width = `${width}px`;\n  const svg = div\n    .append('svg:svg')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('preserveAspectRatio', 'xMidYMid meet');\n  const backgroundRect = svg\n    .append('rect')\n    .attr('class', 'background')\n    .attr('width', width)\n    .attr('height', height);\n  const g = svg.append('g');\n  const mapLayer = g.append('g').classed('map-layer', true);\n  const textLayer = g\n    .append('g')\n    .classed('text-layer', true)\n    .attr('transform', `translate(${width / 2}, 45)`);\n  const bigText = textLayer.append('text').classed('big-text', true);\n  const resultText = textLayer\n    .append('text')\n    .classed('result-text', true)\n    .attr('dy', '1em');\n\n  let centered;\n\n  const clicked = function clicked(d) {\n    const hasCenter = d && centered !== d;\n    let x;\n    let y;\n    let k;\n    const halfWidth = width / 2;\n    const halfHeight = height / 2;\n\n    if (hasCenter) {\n      const centroid = path.centroid(d);\n      [x, y] = centroid;\n      k = 4;\n      centered = d;\n    } else {\n      x = halfWidth;\n      y = halfHeight;\n      k = 1;\n      centered = null;\n    }\n\n    g.transition()\n      .duration(750)\n      .attr(\n        'transform',\n        `translate(${halfWidth},${halfHeight})scale(${k})translate(${-x},${-y})`,\n      );\n    textLayer\n      .style('opacity', 0)\n      .attr(\n        'transform',\n        `translate(0,0)translate(${x},${hasCenter ? y - 5 : 45})`,\n      )\n      .transition()\n      .duration(750)\n      .style('opacity', 1);\n    bigText\n      .transition()\n      .duration(750)\n      .style('font-size', hasCenter ? 6 : 16);\n    resultText\n      .transition()\n      .duration(750)\n      .style('font-size', hasCenter ? 16 : 24);\n  };\n\n  backgroundRect.on('click', clicked);\n\n  const selectAndDisplayNameOfRegion = function selectAndDisplayNameOfRegion(\n    feature,\n  ) {\n    let name = '';\n    if (feature && feature.properties) {\n      if (feature.properties.ID_2) {\n        name = feature.properties.NAME_2;\n      } else {\n        name = feature.properties.NAME_1;\n      }\n    }\n    bigText.text(name);\n  };\n\n  const updateMetrics = function updateMetrics(region) {\n    if (region.length > 0) {\n      resultText.text(format(region[0].metric));\n    }\n  };\n\n  const mouseenter = function mouseenter(d) {\n    // Darken color\n    let c = colorFn(d);\n    if (c !== 'none') {\n      c = d3.rgb(c).darker().toString();\n    }\n    d3.select(this).style('fill', c);\n    selectAndDisplayNameOfRegion(d);\n    const result = data.filter(\n      region => region.country_id === d.properties.ISO,\n    );\n    updateMetrics(result);\n  };\n\n  const mouseout = function mouseout() {\n    d3.select(this).style('fill', colorFn);\n    bigText.text('');\n    resultText.text('');\n  };\n\n  function drawMap(mapData) {\n    const { features } = mapData;\n    const center = d3.geo.centroid(mapData);\n    const scale = 100;\n    const projection = d3.geo\n      .mercator()\n      .scale(scale)\n      .center(center)\n      .translate([width / 2, height / 2]);\n    path.projection(projection);\n\n    // Compute scale that fits container.\n    const bounds = path.bounds(mapData);\n    const hscale = (scale * width) / (bounds[1][0] - bounds[0][0]);\n    const vscale = (scale * height) / (bounds[1][1] - bounds[0][1]);\n    const newScale = hscale < vscale ? hscale : vscale;\n\n    // Compute bounds and offset using the updated scale.\n    projection.scale(newScale);\n    const newBounds = path.bounds(mapData);\n    projection.translate([\n      width - (newBounds[0][0] + newBounds[1][0]) / 2,\n      height - (newBounds[0][1] + newBounds[1][1]) / 2,\n    ]);\n\n    // Draw each province as a path\n    mapLayer\n      .selectAll('path')\n      .data(features)\n      .enter()\n      .append('path')\n      .attr('d', path)\n      .attr('class', 'region')\n      .attr('vector-effect', 'non-scaling-stroke')\n      .style('fill', colorFn)\n      .on('mouseenter', mouseenter)\n      .on('mouseout', mouseout)\n      .on('click', clicked);\n  }\n\n  const map = maps[country];\n  if (map) {\n    drawMap(map);\n  } else {\n    const url = countries[country];\n    d3.json(url, (error, mapData) => {\n      if (error) {\n        const countryName =\n          countryOptions.find(x => x[0] === country)?.[1] || country;\n        d3.select(element).html(\n          `<div class=\"alert alert-danger\">Could not load map data for ${countryName}</div>`,\n        );\n      } else {\n        maps[country] = mapData;\n        drawMap(mapData);\n      }\n    });\n  }\n}\n\nCountryMap.displayName = 'CountryMap';\nCountryMap.propTypes = propTypes;\n\nexport default CountryMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}