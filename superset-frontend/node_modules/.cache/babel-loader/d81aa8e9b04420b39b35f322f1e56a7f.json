{"ast":null,"code":"import _debounce from \"lodash/debounce\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass DebouncedMessageQueue {\n  constructor(_ref)\n\n\n\n  {let { callback = () => {}, sizeThreshold = 1000, delayThreshold = 1000 } = _ref;\n    this.queue = [];\n    this.sizeThreshold = sizeThreshold;\n    this.delayThreshold = delayThreshold;\n\n    this.trigger = _debounce(this.trigger.bind(this), this.delayThreshold);\n    this.callback = callback;\n  }\n\n  append(eventData) {\n    this.queue.push(eventData);\n    this.trigger();\n  }\n\n  trigger() {\n    if (this.queue.length > 0) {\n      const events = this.queue.splice(0, this.sizeThreshold);\n      this.callback.call(null, events);\n\n      // If there are remaining items, call it again.\n      if (this.queue.length > 0) {\n        this.trigger();\n      }\n    }\n  }}\n\n\nexport default DebouncedMessageQueue;","map":{"version":3,"names":["DebouncedMessageQueue","constructor","callback","sizeThreshold","delayThreshold","queue","trigger","bind","append","eventData","push","length","events","splice","call"],"sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/utils/DebouncedMessageQueue.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { debounce } from 'lodash';\n\nclass DebouncedMessageQueue {\n  constructor({\n    callback = () => {},\n    sizeThreshold = 1000,\n    delayThreshold = 1000,\n  }) {\n    this.queue = [];\n    this.sizeThreshold = sizeThreshold;\n    this.delayThreshold = delayThreshold;\n\n    this.trigger = debounce(this.trigger.bind(this), this.delayThreshold);\n    this.callback = callback;\n  }\n\n  append(eventData) {\n    this.queue.push(eventData);\n    this.trigger();\n  }\n\n  trigger() {\n    if (this.queue.length > 0) {\n      const events = this.queue.splice(0, this.sizeThreshold);\n      this.callback.call(null, events);\n\n      // If there are remaining items, call it again.\n      if (this.queue.length > 0) {\n        this.trigger();\n      }\n    }\n  }\n}\n\nexport default DebouncedMessageQueue;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA,MAAMA,qBAAN,CAA4B;EAC1BC,WAAW;;;;EAIR,KAJS,EACVC,QAAQ,GAAG,MAAM,CAAE,CADT,EAEVC,aAAa,GAAG,IAFN,EAGVC,cAAc,GAAG,IAHP,EAIT;IACD,KAAKC,KAAL,GAAa,EAAb;IACA,KAAKF,aAAL,GAAqBA,aAArB;IACA,KAAKC,cAAL,GAAsBA,cAAtB;;IAEA,KAAKE,OAAL,GAAe,UAAS,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAT,EAAkC,KAAKH,cAAvC,CAAf;IACA,KAAKF,QAAL,GAAgBA,QAAhB;EACD;;EAEDM,MAAM,CAACC,SAAD,EAAY;IAChB,KAAKJ,KAAL,CAAWK,IAAX,CAAgBD,SAAhB;IACA,KAAKH,OAAL;EACD;;EAEDA,OAAO,GAAG;IACR,IAAI,KAAKD,KAAL,CAAWM,MAAX,GAAoB,CAAxB,EAA2B;MACzB,MAAMC,MAAM,GAAG,KAAKP,KAAL,CAAWQ,MAAX,CAAkB,CAAlB,EAAqB,KAAKV,aAA1B,CAAf;MACA,KAAKD,QAAL,CAAcY,IAAd,CAAmB,IAAnB,EAAyBF,MAAzB;;MAEA;MACA,IAAI,KAAKP,KAAL,CAAWM,MAAX,GAAoB,CAAxB,EAA2B;QACzB,KAAKL,OAAL;MACD;IACF;EACF,CA7ByB;;;AAgC5B,eAAeN,qBAAf"},"metadata":{},"sourceType":"module"}