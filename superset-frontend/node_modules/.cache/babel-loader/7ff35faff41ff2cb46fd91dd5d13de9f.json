{"ast":null,"code":"import { css as _css } from \"@emotion/react\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React from 'react';\nimport rison from 'rison';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { css, DatasourceType, isFeatureEnabled, FeatureFlag, isDefined, styled, SupersetClient, t } from '@superset-ui/core';\nimport { Input } from 'src/components/Input';\nimport { Form, FormItem } from 'src/components/Form';\nimport Alert from 'src/components/Alert';\nimport Modal from 'src/components/Modal';\nimport { Radio } from 'src/components/Radio';\nimport Button from 'src/components/Button';\nimport { AsyncSelect } from 'src/components';\nimport Loading from 'src/components/Loading';\nimport { canUserEditDashboard } from 'src/dashboard/util/permissionUtils';\nimport { setSaveChartModalVisibility } from 'src/explore/actions/saveModalActions';\n// Session storage key for recent dashboard\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";const SK_DASHBOARD_ID = 'save_chart_recent_dashboard';\nexport const StyledModal = styled(Modal)`\n  .ant-modal-body {\n    overflow: visible;\n  }\n  i {\n    position: absolute;\n    top: -${(_ref) => {let { theme } = _ref;return theme.gridUnit * 5.25;}}px;\n    left: ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit * 26.75;}}px;\n  }\n`;\nclass SaveModal extends React.Component {\n  constructor(props) {var _props$datasource, _props$form_data;\n    super(props);this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    handleDatasetNameChange = (e) => {\n      // @ts-expect-error\n      this.setState({ datasetName: e.target.value });\n    };this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    loadDashboard = async (id) => {\n      const response = await SupersetClient.get({\n        endpoint: `/api/v1/dashboard/${id}` });\n\n      return response.json.result;\n    };this.\n    loadDashboards = async (search, page, pageSize) => {\n      const queryParams = rison.encode({\n        columns: ['id', 'dashboard_title'],\n        filters: [\n        {\n          col: 'dashboard_title',\n          opr: 'ct',\n          value: search },\n\n        {\n          col: 'owners',\n          opr: 'rel_m_m',\n          value: this.props.user.userId }],\n\n\n        page,\n        page_size: pageSize,\n        order_column: 'dashboard_title' });\n\n      const { json } = await SupersetClient.get({\n        endpoint: `/api/v1/dashboard/?q=${queryParams}` });\n\n      const { result, count } = json;\n      return {\n        data: result.map((dashboard) => ({\n          value: dashboard.id,\n          label: dashboard.dashboard_title })),\n\n        totalCount: count };\n\n    };this.\n    renderSaveChartModal = () => {var _this$props$datasourc;\n      const info = this.info();\n      return ___EmotionJSX(Form, { layout: \"vertical\" },\n      ___EmotionJSX(FormItem, null,\n      ___EmotionJSX(Radio, { id: \"overwrite-radio\", disabled: !this.canOverwriteSlice(), checked: this.state.action === 'overwrite', onChange: () => this.changeAction('overwrite') },\n      t('Save (Overwrite)')),\n\n      ___EmotionJSX(Radio, { id: \"saveas-radio\", checked: this.state.action === 'saveas', onChange: () => this.changeAction('saveas') },\n      t('Save as...'))),\n\n\n      ___EmotionJSX(\"hr\", null),\n      ___EmotionJSX(FormItem, { label: t('Chart name'), required: true },\n      ___EmotionJSX(Input, { name: \"new_slice_name\", type: \"text\", placeholder: \"Name\", value: this.state.newSliceName, onChange: this.onSliceNameChange })),\n\n      ((_this$props$datasourc = this.props.datasource) == null ? void 0 : _this$props$datasourc.type) === 'query' && ___EmotionJSX(FormItem, { label: t('Dataset Name'), required: true },\n      ___EmotionJSX(InfoTooltipWithTrigger, { tooltip: t('A reusable dataset will be saved with your chart.'), placement: \"right\" }),\n      ___EmotionJSX(Input, { name: \"dataset_name\", type: \"text\", placeholder: \"Dataset Name\", value: this.state.datasetName, onChange: this.handleDatasetNameChange })),\n\n      !(isFeatureEnabled(FeatureFlag.DASHBOARD_NATIVE_FILTERS) &&\n      this.state.vizType === 'filter_box') && ___EmotionJSX(FormItem, { label: t('Add to dashboard') },\n      ___EmotionJSX(AsyncSelect, { allowClear: true, allowNewOptions: true, ariaLabel: t('Select a dashboard'), options: this.loadDashboards, onChange: this.onDashboardChange, value: this.state.dashboard, placeholder: ___EmotionJSX(\"div\", null,\n        ___EmotionJSX(\"b\", null, t('Select')),\n        t(' a dashboard OR '),\n        ___EmotionJSX(\"b\", null, t('create')),\n        t(' a new one')) })),\n\n\n      info && ___EmotionJSX(Alert, { type: \"info\", message: info, closable: false }),\n      this.props.alert && ___EmotionJSX(Alert, { css: /*#__PURE__*/_css({ marginTop: info ? 16 : undefined }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:SaveModal;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), type: \"warning\", message: this.props.alert, closable: false }));\n\n    };this.\n    info = () => {\n      const isNewDashboard = this.isNewDashboard();\n      let chartWillBeCreated = false;\n      if (this.props.slice && (\n      this.state.action !== 'overwrite' || !this.canOverwriteSlice())) {\n        chartWillBeCreated = true;\n      }\n      if (chartWillBeCreated && isNewDashboard) {\n        return t('A new chart and dashboard will be created.');\n      }\n      if (chartWillBeCreated) {\n        return t('A new chart will be created.');\n      }\n      if (isNewDashboard) {\n        return t('A new dashboard will be created.');\n      }\n      return null;\n    };this.\n    renderFooter = () => {var _this$props$datasourc2, _this$props$datasourc3;return ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(Button, { id: \"btn_cancel\", buttonSize: \"small\", onClick: this.onHide },\n      t('Cancel')),\n\n      ___EmotionJSX(Button, { id: \"btn_modal_save_goto_dash\", buttonSize: \"small\", disabled: !this.state.newSliceName ||\n        !this.state.dashboard ||\n        ((_this$props$datasourc2 = this.props.datasource) == null ? void 0 : _this$props$datasourc2.type) !== DatasourceType.Table &&\n        !this.state.datasetName ||\n        isFeatureEnabled(FeatureFlag.DASHBOARD_NATIVE_FILTERS) &&\n        this.state.vizType === 'filter_box', onClick: () => this.saveOrOverwrite(true) },\n      t('Save & go to dashboard')),\n\n      ___EmotionJSX(Button, { id: \"btn_modal_save\", buttonSize: \"small\", buttonStyle: \"primary\", onClick: () => this.saveOrOverwrite(false), disabled: this.state.isLoading ||\n        !this.state.newSliceName ||\n        ((_this$props$datasourc3 = this.props.datasource) == null ? void 0 : _this$props$datasourc3.type) !== DatasourceType.Table &&\n        !this.state.datasetName },\n      t('Save')));};this.state = { newSliceName: props.sliceName, datasetName: (_props$datasource = props.datasource) == null ? void 0 : _props$datasource.name, action: this.canOverwriteSlice() ? 'overwrite' : 'saveas', isLoading: false, vizType: (_props$form_data = props.form_data) == null ? void 0 : _props$form_data.viz_type, dashboard: undefined };this.onDashboardChange = this.onDashboardChange.bind(this);this.onSliceNameChange = this.onSliceNameChange.bind(this);this.changeAction = this.changeAction.bind(this);this.saveOrOverwrite = this.saveOrOverwrite.bind(this);this.isNewDashboard = this.isNewDashboard.bind(this);this.onHide = this.onHide.bind(this);}isNewDashboard() {const { dashboard } = this.state;return typeof (dashboard == null ? void 0 : dashboard.value) === 'string';}canOverwriteSlice() {var _this$props$slice, _this$props$slice$own, _this$props$slice2;return ((_this$props$slice = this.props.slice) == null ? void 0 : (_this$props$slice$own = _this$props$slice.owners) == null ? void 0 : _includesInstanceProperty(_this$props$slice$own).call(_this$props$slice$own, this.props.user.userId)) && !((_this$props$slice2 = this.props.slice) != null && _this$props$slice2.is_managed_externally);}async componentDidMount() {let { dashboardId } = this.props;if (!dashboardId) {const lastDashboard = sessionStorage.getItem(SK_DASHBOARD_ID);dashboardId = lastDashboard && parseInt(lastDashboard, 10);}if (dashboardId) {try {const result = await this.loadDashboard(dashboardId);if (canUserEditDashboard(result, this.props.user)) {this.setState({ dashboard: { label: result.dashboard_title, value: result.id } });}} catch (error) {this.props.actions.addDangerToast(t('An error occurred while loading dashboard information.'));}}}onSliceNameChange(event) {this.setState({ newSliceName: event.target.value });}onDashboardChange(dashboard) {this.setState({ dashboard });}changeAction(action) {this.setState({ action });}onHide() {this.props.dispatch(setSaveChartModalVisibility(false));}async saveOrOverwrite(gotodash) {this.setState({ isLoading: true });try {var _this$props$datasourc4;if (((_this$props$datasourc4 = this.props.datasource) == null ? void 0 : _this$props$datasourc4.type) === DatasourceType.Query) {const { schema, sql, database } = this.props.datasource;const { templateParams } = this.props.datasource;await this.props.actions.saveDataset({ schema, sql, database, templateParams, datasourceName: this.state.datasetName });} //  Get chart dashboards\n      let sliceDashboards = [];if (this.props.slice && this.state.action === 'overwrite') {sliceDashboards = await this.props.actions.getSliceDashboards(this.props.slice);}const formData = this.props.form_data || {};delete formData.url_params;let dashboard = null;if (this.state.dashboard) {var _dashboard;let validId = this.state.dashboard.value;if (this.isNewDashboard()) {const response = await this.props.actions.createDashboard(this.state.dashboard.label);validId = response.id;}try {dashboard = await this.loadDashboard(validId);} catch (error) {this.props.actions.saveSliceFailed();return;}if (isDefined(dashboard) && isDefined((_dashboard = dashboard) == null ? void 0 : _dashboard.id)) {sliceDashboards = _includesInstanceProperty(sliceDashboards).call(sliceDashboards, dashboard.id) ? sliceDashboards : [...sliceDashboards, dashboard.id];formData.dashboards = sliceDashboards;}} // Sets the form data\n      this.props.actions.setFormData({ ...formData }); //  Update or create slice\n      let value;if (this.state.action === 'overwrite') {value = await this.props.actions.updateSlice(this.props.slice, this.state.newSliceName, sliceDashboards, dashboard ? { title: dashboard.dashboard_title, new: this.isNewDashboard() } : null);} else {value = await this.props.actions.createSlice(this.state.newSliceName, sliceDashboards, dashboard ? { title: dashboard.dashboard_title, new: this.isNewDashboard() } : null);}if (dashboard) {sessionStorage.setItem(SK_DASHBOARD_ID, `${dashboard.id}`);} else {sessionStorage.removeItem(SK_DASHBOARD_ID);} // Go to new dashboard url\n      if (gotodash && dashboard) {this.props.history.push(dashboard.url);return;}const searchParams = new URLSearchParams(window.location.search);searchParams.set('save_action', this.state.action);if (this.state.action !== 'overwrite') {searchParams.delete('form_data_key');}if (this.state.action === 'saveas') {searchParams.set('slice_id', value.id.toString());}this.props.history.replace(`/explore/?${searchParams.toString()}`);this.setState({ isLoading: false });this.onHide();} finally {this.setState({ isLoading: false });}}render() {return ___EmotionJSX(StyledModal, { show: this.props.isVisible, onHide: this.onHide, title: t('Save chart'), footer: this.renderFooter() },\n    this.state.isLoading ? ___EmotionJSX(\"div\", { css: css`\n              display: flex;\n              justify-content: center;\n            ` },\n    ___EmotionJSX(Loading, { position: \"normal\" })) :\n    this.renderSaveChartModal());\n\n  }}\n\nfunction mapStateToProps(_ref3) {let { explore, saveModal, user } = _ref3;\n  return {\n    datasource: explore.datasource,\n    slice: explore.slice,\n    user,\n    dashboards: saveModal.dashboards,\n    alert: saveModal.saveModalAlert,\n    isVisible: saveModal.isVisible };\n\n}\nexport default withRouter(connect(mapStateToProps)(SaveModal));","map":{"version":3,"mappings":"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","names":["React","rison","connect","withRouter","InfoTooltipWithTrigger","css","DatasourceType","isFeatureEnabled","FeatureFlag","isDefined","styled","SupersetClient","t","Input","Form","FormItem","Alert","Modal","Radio","Button","AsyncSelect","Loading","canUserEditDashboard","setSaveChartModalVisibility","SK_DASHBOARD_ID","StyledModal","theme","gridUnit","SaveModal","Component","constructor","props","handleDatasetNameChange","e","setState","datasetName","target","value","loadDashboard","id","response","get","endpoint","json","result","loadDashboards","search","page","pageSize","queryParams","encode","columns","filters","col","opr","user","userId","page_size","order_column","count","data","map","dashboard","label","dashboard_title","totalCount","renderSaveChartModal","info","canOverwriteSlice","state","action","changeAction","newSliceName","onSliceNameChange","datasource","type","DASHBOARD_NATIVE_FILTERS","vizType","onDashboardChange","alert","marginTop","undefined","isNewDashboard","chartWillBeCreated","slice","renderFooter","onHide","Table","saveOrOverwrite","isLoading","sliceName","name","form_data","viz_type","bind","owners","is_managed_externally","componentDidMount","dashboardId","lastDashboard","sessionStorage","getItem","parseInt","error","actions","addDangerToast","event","dispatch","gotodash","Query","schema","sql","database","templateParams","saveDataset","datasourceName","sliceDashboards","getSliceDashboards","formData","url_params","validId","createDashboard","saveSliceFailed","dashboards","setFormData","updateSlice","title","new","createSlice","setItem","removeItem","history","push","url","searchParams","URLSearchParams","window","location","set","delete","toString","replace","render","isVisible","mapStateToProps","explore","saveModal","saveModalAlert"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/explore/components/SaveModal.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React from 'react';\nimport { Dispatch } from 'redux';\nimport rison from 'rison';\nimport { connect } from 'react-redux';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport {\n  css,\n  DatasourceType,\n  isFeatureEnabled,\n  FeatureFlag,\n  isDefined,\n  styled,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\nimport { Input } from 'src/components/Input';\nimport { Form, FormItem } from 'src/components/Form';\nimport Alert from 'src/components/Alert';\nimport Modal from 'src/components/Modal';\nimport { Radio } from 'src/components/Radio';\nimport Button from 'src/components/Button';\nimport { AsyncSelect } from 'src/components';\nimport Loading from 'src/components/Loading';\nimport { canUserEditDashboard } from 'src/dashboard/util/permissionUtils';\nimport { setSaveChartModalVisibility } from 'src/explore/actions/saveModalActions';\nimport { SaveActionType } from 'src/explore/types';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport { Dashboard } from 'src/types/Dashboard';\n\n// Session storage key for recent dashboard\nconst SK_DASHBOARD_ID = 'save_chart_recent_dashboard';\n\ninterface SaveModalProps extends RouteComponentProps {\n  addDangerToast: (msg: string) => void;\n  actions: Record<string, any>;\n  form_data?: Record<string, any>;\n  user: UserWithPermissionsAndRoles;\n  alert?: string;\n  sliceName?: string;\n  slice?: Record<string, any>;\n  datasource?: Record<string, any>;\n  dashboardId: '' | number | null;\n  isVisible: boolean;\n  dispatch: Dispatch;\n}\n\ntype SaveModalState = {\n  newSliceName?: string;\n  datasetName: string;\n  action: SaveActionType;\n  isLoading: boolean;\n  saveStatus?: string | null;\n  vizType?: string;\n  dashboard?: { label: string; value: string | number };\n};\n\nexport const StyledModal = styled(Modal)`\n  .ant-modal-body {\n    overflow: visible;\n  }\n  i {\n    position: absolute;\n    top: -${({ theme }) => theme.gridUnit * 5.25}px;\n    left: ${({ theme }) => theme.gridUnit * 26.75}px;\n  }\n`;\n\nclass SaveModal extends React.Component<SaveModalProps, SaveModalState> {\n  constructor(props: SaveModalProps) {\n    super(props);\n    this.state = {\n      newSliceName: props.sliceName,\n      datasetName: props.datasource?.name,\n      action: this.canOverwriteSlice() ? 'overwrite' : 'saveas',\n      isLoading: false,\n      vizType: props.form_data?.viz_type,\n      dashboard: undefined,\n    };\n    this.onDashboardChange = this.onDashboardChange.bind(this);\n    this.onSliceNameChange = this.onSliceNameChange.bind(this);\n    this.changeAction = this.changeAction.bind(this);\n    this.saveOrOverwrite = this.saveOrOverwrite.bind(this);\n    this.isNewDashboard = this.isNewDashboard.bind(this);\n    this.onHide = this.onHide.bind(this);\n  }\n\n  isNewDashboard(): boolean {\n    const { dashboard } = this.state;\n    return typeof dashboard?.value === 'string';\n  }\n\n  canOverwriteSlice(): boolean {\n    return (\n      this.props.slice?.owners?.includes(this.props.user.userId) &&\n      !this.props.slice?.is_managed_externally\n    );\n  }\n\n  async componentDidMount() {\n    let { dashboardId } = this.props;\n    if (!dashboardId) {\n      const lastDashboard = sessionStorage.getItem(SK_DASHBOARD_ID);\n      dashboardId = lastDashboard && parseInt(lastDashboard, 10);\n    }\n    if (dashboardId) {\n      try {\n        const result = (await this.loadDashboard(dashboardId)) as Dashboard;\n        if (canUserEditDashboard(result, this.props.user)) {\n          this.setState({\n            dashboard: { label: result.dashboard_title, value: result.id },\n          });\n        }\n      } catch (error) {\n        this.props.actions.addDangerToast(\n          t('An error occurred while loading dashboard information.'),\n        );\n      }\n    }\n  }\n\n  handleDatasetNameChange = (e: React.FormEvent<HTMLInputElement>) => {\n    // @ts-expect-error\n    this.setState({ datasetName: e.target.value });\n  };\n\n  onSliceNameChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ newSliceName: event.target.value });\n  }\n\n  onDashboardChange(dashboard: { label: string; value: string | number }) {\n    this.setState({ dashboard });\n  }\n\n  changeAction(action: SaveActionType) {\n    this.setState({ action });\n  }\n\n  onHide() {\n    this.props.dispatch(setSaveChartModalVisibility(false));\n  }\n\n  async saveOrOverwrite(gotodash: boolean) {\n    this.setState({ isLoading: true });\n\n    //  Create or retrieve dashboard\n    type DashboardGetResponse = {\n      id: number;\n      url: string;\n      dashboard_title: string;\n    };\n\n    try {\n      if (this.props.datasource?.type === DatasourceType.Query) {\n        const { schema, sql, database } = this.props.datasource;\n        const { templateParams } = this.props.datasource;\n\n        await this.props.actions.saveDataset({\n          schema,\n          sql,\n          database,\n          templateParams,\n          datasourceName: this.state.datasetName,\n        });\n      }\n\n      //  Get chart dashboards\n      let sliceDashboards: number[] = [];\n      if (this.props.slice && this.state.action === 'overwrite') {\n        sliceDashboards = await this.props.actions.getSliceDashboards(\n          this.props.slice,\n        );\n      }\n\n      const formData = this.props.form_data || {};\n      delete formData.url_params;\n\n      let dashboard: DashboardGetResponse | null = null;\n      if (this.state.dashboard) {\n        let validId = this.state.dashboard.value;\n        if (this.isNewDashboard()) {\n          const response = await this.props.actions.createDashboard(\n            this.state.dashboard.label,\n          );\n          validId = response.id;\n        }\n\n        try {\n          dashboard = await this.loadDashboard(validId as number);\n        } catch (error) {\n          this.props.actions.saveSliceFailed();\n          return;\n        }\n\n        if (isDefined(dashboard) && isDefined(dashboard?.id)) {\n          sliceDashboards = sliceDashboards.includes(dashboard.id)\n            ? sliceDashboards\n            : [...sliceDashboards, dashboard.id];\n          formData.dashboards = sliceDashboards;\n        }\n      }\n\n      // Sets the form data\n      this.props.actions.setFormData({ ...formData });\n\n      //  Update or create slice\n      let value: { id: number };\n      if (this.state.action === 'overwrite') {\n        value = await this.props.actions.updateSlice(\n          this.props.slice,\n          this.state.newSliceName,\n          sliceDashboards,\n          dashboard\n            ? {\n                title: dashboard.dashboard_title,\n                new: this.isNewDashboard(),\n              }\n            : null,\n        );\n      } else {\n        value = await this.props.actions.createSlice(\n          this.state.newSliceName,\n          sliceDashboards,\n          dashboard\n            ? {\n                title: dashboard.dashboard_title,\n                new: this.isNewDashboard(),\n              }\n            : null,\n        );\n      }\n\n      if (dashboard) {\n        sessionStorage.setItem(SK_DASHBOARD_ID, `${dashboard.id}`);\n      } else {\n        sessionStorage.removeItem(SK_DASHBOARD_ID);\n      }\n\n      // Go to new dashboard url\n      if (gotodash && dashboard) {\n        this.props.history.push(dashboard.url);\n        return;\n      }\n\n      const searchParams = new URLSearchParams(window.location.search);\n      searchParams.set('save_action', this.state.action);\n      if (this.state.action !== 'overwrite') {\n        searchParams.delete('form_data_key');\n      }\n      if (this.state.action === 'saveas') {\n        searchParams.set('slice_id', value.id.toString());\n      }\n      this.props.history.replace(`/explore/?${searchParams.toString()}`);\n\n      this.setState({ isLoading: false });\n      this.onHide();\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  loadDashboard = async (id: number) => {\n    const response = await SupersetClient.get({\n      endpoint: `/api/v1/dashboard/${id}`,\n    });\n    return response.json.result;\n  };\n\n  loadDashboards = async (search: string, page: number, pageSize: number) => {\n    const queryParams = rison.encode({\n      columns: ['id', 'dashboard_title'],\n      filters: [\n        {\n          col: 'dashboard_title',\n          opr: 'ct',\n          value: search,\n        },\n        {\n          col: 'owners',\n          opr: 'rel_m_m',\n          value: this.props.user.userId,\n        },\n      ],\n      page,\n      page_size: pageSize,\n      order_column: 'dashboard_title',\n    });\n\n    const { json } = await SupersetClient.get({\n      endpoint: `/api/v1/dashboard/?q=${queryParams}`,\n    });\n    const { result, count } = json;\n    return {\n      data: result.map(\n        (dashboard: { id: number; dashboard_title: string }) => ({\n          value: dashboard.id,\n          label: dashboard.dashboard_title,\n        }),\n      ),\n      totalCount: count,\n    };\n  };\n\n  renderSaveChartModal = () => {\n    const info = this.info();\n    return (\n      <Form data-test=\"save-modal-body\" layout=\"vertical\">\n        <FormItem data-test=\"radio-group\">\n          <Radio\n            id=\"overwrite-radio\"\n            disabled={!this.canOverwriteSlice()}\n            checked={this.state.action === 'overwrite'}\n            onChange={() => this.changeAction('overwrite')}\n            data-test=\"save-overwrite-radio\"\n          >\n            {t('Save (Overwrite)')}\n          </Radio>\n          <Radio\n            id=\"saveas-radio\"\n            data-test=\"saveas-radio\"\n            checked={this.state.action === 'saveas'}\n            onChange={() => this.changeAction('saveas')}\n          >\n            {t('Save as...')}\n          </Radio>\n        </FormItem>\n        <hr />\n        <FormItem label={t('Chart name')} required>\n          <Input\n            name=\"new_slice_name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            value={this.state.newSliceName}\n            onChange={this.onSliceNameChange}\n            data-test=\"new-chart-name\"\n          />\n        </FormItem>\n        {this.props.datasource?.type === 'query' && (\n          <FormItem label={t('Dataset Name')} required>\n            <InfoTooltipWithTrigger\n              tooltip={t('A reusable dataset will be saved with your chart.')}\n              placement=\"right\"\n            />\n            <Input\n              name=\"dataset_name\"\n              type=\"text\"\n              placeholder=\"Dataset Name\"\n              value={this.state.datasetName}\n              onChange={this.handleDatasetNameChange}\n              data-test=\"new-dataset-name\"\n            />\n          </FormItem>\n        )}\n        {!(\n          isFeatureEnabled(FeatureFlag.DASHBOARD_NATIVE_FILTERS) &&\n          this.state.vizType === 'filter_box'\n        ) && (\n          <FormItem\n            label={t('Add to dashboard')}\n            data-test=\"save-chart-modal-select-dashboard-form\"\n          >\n            <AsyncSelect\n              allowClear\n              allowNewOptions\n              ariaLabel={t('Select a dashboard')}\n              options={this.loadDashboards}\n              onChange={this.onDashboardChange}\n              value={this.state.dashboard}\n              placeholder={\n                <div>\n                  <b>{t('Select')}</b>\n                  {t(' a dashboard OR ')}\n                  <b>{t('create')}</b>\n                  {t(' a new one')}\n                </div>\n              }\n            />\n          </FormItem>\n        )}\n        {info && <Alert type=\"info\" message={info} closable={false} />}\n        {this.props.alert && (\n          <Alert\n            css={{ marginTop: info ? 16 : undefined }}\n            type=\"warning\"\n            message={this.props.alert}\n            closable={false}\n          />\n        )}\n      </Form>\n    );\n  };\n\n  info = () => {\n    const isNewDashboard = this.isNewDashboard();\n    let chartWillBeCreated = false;\n    if (\n      this.props.slice &&\n      (this.state.action !== 'overwrite' || !this.canOverwriteSlice())\n    ) {\n      chartWillBeCreated = true;\n    }\n    if (chartWillBeCreated && isNewDashboard) {\n      return t('A new chart and dashboard will be created.');\n    }\n    if (chartWillBeCreated) {\n      return t('A new chart will be created.');\n    }\n    if (isNewDashboard) {\n      return t('A new dashboard will be created.');\n    }\n    return null;\n  };\n\n  renderFooter = () => (\n    <div data-test=\"save-modal-footer\">\n      <Button id=\"btn_cancel\" buttonSize=\"small\" onClick={this.onHide}>\n        {t('Cancel')}\n      </Button>\n      <Button\n        id=\"btn_modal_save_goto_dash\"\n        buttonSize=\"small\"\n        disabled={\n          !this.state.newSliceName ||\n          !this.state.dashboard ||\n          (this.props.datasource?.type !== DatasourceType.Table &&\n            !this.state.datasetName) ||\n          (isFeatureEnabled(FeatureFlag.DASHBOARD_NATIVE_FILTERS) &&\n            this.state.vizType === 'filter_box')\n        }\n        onClick={() => this.saveOrOverwrite(true)}\n      >\n        {t('Save & go to dashboard')}\n      </Button>\n      <Button\n        id=\"btn_modal_save\"\n        buttonSize=\"small\"\n        buttonStyle=\"primary\"\n        onClick={() => this.saveOrOverwrite(false)}\n        disabled={\n          this.state.isLoading ||\n          !this.state.newSliceName ||\n          (this.props.datasource?.type !== DatasourceType.Table &&\n            !this.state.datasetName)\n        }\n        data-test=\"btn-modal-save\"\n      >\n        {t('Save')}\n      </Button>\n    </div>\n  );\n\n  render() {\n    return (\n      <StyledModal\n        show={this.props.isVisible}\n        onHide={this.onHide}\n        title={t('Save chart')}\n        footer={this.renderFooter()}\n      >\n        {this.state.isLoading ? (\n          <div\n            css={css`\n              display: flex;\n              justify-content: center;\n            `}\n          >\n            <Loading position=\"normal\" />\n          </div>\n        ) : (\n          this.renderSaveChartModal()\n        )}\n      </StyledModal>\n    );\n  }\n}\n\ninterface StateProps {\n  datasource: any;\n  slice: any;\n  user: UserWithPermissionsAndRoles;\n  dashboards: any;\n  alert: any;\n  isVisible: boolean;\n}\n\nfunction mapStateToProps({\n  explore,\n  saveModal,\n  user,\n}: Record<string, any>): StateProps {\n  return {\n    datasource: explore.datasource,\n    slice: explore.slice,\n    user,\n    dashboards: saveModal.dashboards,\n    alert: saveModal.saveModalAlert,\n    isVisible: saveModal.isVisible,\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(SaveModal));\n"]},"metadata":{},"sourceType":"module"}