{"ast":null,"code":"// Using bem standard\nexport const testWithId = function (prefix, idOnly) {if (idOnly === void 0) {idOnly = false;}return function (id, localIdOnly) {if (localIdOnly === void 0) {localIdOnly = false;}\n    const resultIdOnly = localIdOnly || idOnly;\n    if (!id && prefix) {\n      return resultIdOnly ? prefix : { 'data-test': prefix };\n    }\n    if (id && !prefix) {\n      return resultIdOnly ? id : { 'data-test': id };\n    }\n    if (!id && !prefix) {\n      console.warn('testWithId function has missed \"prefix\" and \"id\" params');\n      return resultIdOnly ? '' : { 'data-test': '' };\n    }\n    const newId = `${prefix}__${id}`;\n    return resultIdOnly ? newId : { 'data-test': newId };\n  };};","map":{"version":3,"mappings":"AAsBA;AACA,OAAO,MAAMA,UAAU,GACrB,UACEC,MADF,EAEEC,MAFF,OAEEA,MAFF,cAEEA,MAFF,GAEW,KAFX,SAIA,UAACC,EAAD,EAAcC,WAAd,EAAwD,KAA1CA,WAA0C,cAA1CA,WAA0C,GAA5B,KAA4B;IACtD,MAAMC,YAAY,GAAGD,WAAW,IAAIF,MAApC;IACA,IAAI,CAACC,EAAD,IAAOF,MAAX,EAAmB;MACjB,OACEI,YAAY,GAAGJ,MAAH,GAAY,EAAE,aAAaA,MAAf,EAD1B;IAGD;IACD,IAAIE,EAAE,IAAI,CAACF,MAAX,EAAmB;MACjB,OAAQI,YAAY,GAAGF,EAAH,GAAQ,EAAE,aAAaA,EAAf,EAA5B;IACD;IACD,IAAI,CAACA,EAAD,IAAO,CAACF,MAAZ,EAAoB;MAClBK,OAAO,CAACC,IAAR,CAAa,yDAAb;MACA,OAAQF,YAAY,GAAG,EAAH,GAAQ,EAAE,aAAa,EAAf,EAA5B;IACD;IACD,MAAMG,KAAK,GAAG,GAAGP,MAAM,KAAKE,EAAE,EAA9B;IACA,OAAQE,YAAY,GAAGG,KAAH,GAAW,EAAE,aAAaA,KAAf,EAA/B;EACD,CApBD,EADK","names":["testWithId","prefix","idOnly","id","localIdOnly","resultIdOnly","console","warn","newId"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/utils/testUtils.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { JsonObject } from '@superset-ui/core';\n\ntype TestWithIdType<T> = T extends string ? string : { 'data-test': string };\n\n// Using bem standard\nexport const testWithId =\n  <T extends string | JsonObject = JsonObject>(\n    prefix?: string,\n    idOnly = false,\n  ) =>\n  (id?: string, localIdOnly = false): TestWithIdType<T> => {\n    const resultIdOnly = localIdOnly || idOnly;\n    if (!id && prefix) {\n      return (\n        resultIdOnly ? prefix : { 'data-test': prefix }\n      ) as TestWithIdType<T>;\n    }\n    if (id && !prefix) {\n      return (resultIdOnly ? id : { 'data-test': id }) as TestWithIdType<T>;\n    }\n    if (!id && !prefix) {\n      console.warn('testWithId function has missed \"prefix\" and \"id\" params');\n      return (resultIdOnly ? '' : { 'data-test': '' }) as TestWithIdType<T>;\n    }\n    const newId = `${prefix}__${id}`;\n    return (resultIdOnly ? newId : { 'data-test': newId }) as TestWithIdType<T>;\n  };\n"]},"metadata":{},"sourceType":"module"}