{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { getTimeFormatter, TimeFormats } from '@superset-ui/core';\nimport NullCell from '../NullCell';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction TimeCell(_ref) {let { format = TimeFormats.DATABASE_DATETIME, value } = _ref;\n  if (value) {\n    return ___EmotionJSX(\"span\", null, getTimeFormatter(format).format(value));\n  }\n  return ___EmotionJSX(NullCell, null);\n}const _default =\nTimeCell;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TimeCell, \"TimeCell\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Table/cell-renderers/TimeCell/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Table/cell-renderers/TimeCell/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,mBAA9C;AACA,OAAOC,QAAP,MAAqB,aAArB,C;AAOA,SAASC,QAAT,OAGgB,KAHE,EAChBC,MAAM,GAAGH,WAAW,CAACI,iBADL,EAEhBC,KAFgB,EAGF;EACd,IAAIA,KAAJ,EAAW;IACT,OAAO,4BAAON,gBAAgB,CAACI,MAAD,CAAhB,CAAyBA,MAAzB,CAAgCE,KAAhC,CAAP,CAAP;EACD;EACD,OAAO,cAAC,QAAD,OAAP;AACD,C;AAEcH,Q,CAAf,wB,iLAVSA,Q","names":["React","getTimeFormatter","TimeFormats","NullCell","TimeCell","format","DATABASE_DATETIME","value"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/Table/cell-renderers/TimeCell/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { getTimeFormatter, TimeFormats } from '@superset-ui/core';\nimport NullCell from '../NullCell';\n\nexport interface TimeCellProps {\n  format?: string;\n  value?: number | Date;\n}\n\nfunction TimeCell({\n  format = TimeFormats.DATABASE_DATETIME,\n  value,\n}: TimeCellProps) {\n  if (value) {\n    return <span>{getTimeFormatter(format).format(value)}</span>;\n  }\n  return <NullCell />;\n}\n\nexport default TimeCell;\n"]},"metadata":{},"sourceType":"module"}