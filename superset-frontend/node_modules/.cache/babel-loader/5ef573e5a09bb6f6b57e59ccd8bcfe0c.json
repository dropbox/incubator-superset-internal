{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { FeatureFlag, isFeatureEnabled, t } from '@superset-ui/core';\nimport { getStandardizedControls, sections, sharedControls } from '@superset-ui/chart-controls';\nimport { DEFAULT_FORM_DATA } from './constants';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst requiredEntity = {\n  ...sharedControls.entity,\n  clearable: false };\n\nconst optionalEntity = {\n  ...sharedControls.entity,\n  clearable: true,\n  validators: [] };\n\nconst controlPanel = {\n  controlPanelSections: [\n  sections.legacyRegularTime,\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'id',\n      config: {\n        ...requiredEntity,\n        label: t('Id'),\n        description: t('Name of the id column') } }],\n\n\n\n    [\n    {\n      name: 'parent',\n      config: {\n        ...requiredEntity,\n        label: t('Parent'),\n        description: t('Name of the column containing the id of the parent node') } }],\n\n\n\n    [\n    {\n      name: 'name',\n      config: {\n        ...optionalEntity,\n        label: t('Name'),\n        description: t('Optional name of the data column.') } }],\n\n\n\n    [\n    {\n      name: 'root_node_id',\n      config: {\n        ...optionalEntity,\n        renderTrigger: true,\n        type: 'TextControl',\n        label: t('Root node id'),\n        description: t('Id of root node of the tree.') } }],\n\n\n\n    [\n    {\n      name: 'metric',\n      config: {\n        ...optionalEntity,\n        type: isFeatureEnabled(FeatureFlag.ENABLE_EXPLORE_DRAG_AND_DROP) ?\n        'DndMetricSelect' :\n        'MetricsControl',\n        label: t('Metric'),\n        description: t('Metric for node values') } }],\n\n\n\n    ['adhoc_filters'],\n    ['row_limit']] },\n\n\n  {\n    label: t('Chart options'),\n    expanded: true,\n    controlSetRows: [\n    [___EmotionJSX(\"div\", { className: \"section-header\" }, t('Layout'))],\n    [\n    {\n      name: 'layout',\n      config: {\n        type: 'RadioButtonControl',\n        renderTrigger: true,\n        label: t('Tree layout'),\n        default: DEFAULT_FORM_DATA.layout,\n        options: [\n        ['orthogonal', t('Orthogonal')],\n        ['radial', t('Radial')]],\n\n        description: t('Layout type of tree') } }],\n\n\n\n    [\n    {\n      name: 'orient',\n      config: {\n        type: 'RadioButtonControl',\n        renderTrigger: true,\n        label: t('Tree orientation'),\n        default: DEFAULT_FORM_DATA.orient,\n        options: [\n        ['LR', t('Left to Right')],\n        ['RL', t('Right to Left')],\n        ['TB', t('Top to Bottom')],\n        ['BT', t('Bottom to Top')]],\n\n        description: t('Orientation of tree'),\n        visibility(_ref) {let { form_data: { layout } } = _ref;\n          return (layout || DEFAULT_FORM_DATA.layout) === 'orthogonal';\n        } } }],\n\n\n\n    [\n    {\n      name: 'node_label_position',\n      config: {\n        type: 'RadioButtonControl',\n        renderTrigger: true,\n        label: t('Node label position'),\n        default: DEFAULT_FORM_DATA.nodeLabelPosition,\n        options: [\n        ['left', t('left')],\n        ['top', t('top')],\n        ['right', t('right')],\n        ['bottom', t('bottom')]],\n\n        description: t('Position of intermediate node label on tree') } }],\n\n\n\n    [\n    {\n      name: 'child_label_position',\n      config: {\n        type: 'RadioButtonControl',\n        renderTrigger: true,\n        label: t('Child label position'),\n        default: DEFAULT_FORM_DATA.childLabelPosition,\n        options: [\n        ['left', t('left')],\n        ['top', t('top')],\n        ['right', t('right')],\n        ['bottom', t('bottom')]],\n\n        description: t('Position of child node label on tree') } }],\n\n\n\n    [\n    {\n      name: 'emphasis',\n      config: {\n        type: 'RadioButtonControl',\n        renderTrigger: true,\n        label: t('Emphasis'),\n        default: DEFAULT_FORM_DATA.emphasis,\n        options: [\n        ['ancestor', t('ancestor')],\n        ['descendant', t('descendant')]],\n\n        description: t('Which relatives to highlight on hover'),\n        visibility(_ref2) {let { form_data: { layout } } = _ref2;\n          return (layout || DEFAULT_FORM_DATA.layout) === 'orthogonal';\n        } } }],\n\n\n\n    [\n    {\n      name: 'symbol',\n      config: {\n        type: 'SelectControl',\n        renderTrigger: true,\n        label: t('Symbol'),\n        default: DEFAULT_FORM_DATA.symbol,\n        options: [\n        {\n          label: t('Empty circle'),\n          value: 'emptyCircle' },\n\n        {\n          label: t('Circle'),\n          value: 'circle' },\n\n        {\n          label: t('Rectangle'),\n          value: 'rect' },\n\n        {\n          label: t('Triangle'),\n          value: 'triangle' },\n\n        {\n          label: t('Diamond'),\n          value: 'diamond' },\n\n        {\n          label: t('Pin'),\n          value: 'pin' },\n\n        {\n          label: t('Arrow'),\n          value: 'arrow' },\n\n        {\n          label: t('None'),\n          value: 'none' }],\n\n\n        description: t('Layout type of tree') } }],\n\n\n\n    [\n    {\n      name: 'symbolSize',\n      config: {\n        type: 'SliderControl',\n        label: t('Symbol size'),\n        renderTrigger: true,\n        min: 5,\n        max: 30,\n        step: 2,\n        default: DEFAULT_FORM_DATA.symbolSize,\n        description: t('Size of edge symbols') } }],\n\n\n\n    [\n    {\n      name: 'roam',\n      config: {\n        type: 'SelectControl',\n        label: t('Enable graph roaming'),\n        renderTrigger: true,\n        default: DEFAULT_FORM_DATA.roam,\n        choices: [\n        [false, t('Disabled')],\n        ['scale', t('Scale only')],\n        ['move', t('Move only')],\n        [true, t('Scale and Move')]],\n\n        description: t('Whether to enable changing graph position and scaling.') } }]] }],\n\n\n\n\n\n\n  formDataOverrides: (formData) => ({\n    ...formData,\n    metric: getStandardizedControls().shiftMetric() }) };\n\n\nexport default controlPanel;","map":{"version":3,"mappings":"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","names":["React","FeatureFlag","isFeatureEnabled","t","getStandardizedControls","sections","sharedControls","DEFAULT_FORM_DATA","requiredEntity","entity","clearable","optionalEntity","validators","controlPanel","controlPanelSections","legacyRegularTime","label","expanded","controlSetRows","name","config","description","renderTrigger","type","ENABLE_EXPLORE_DRAG_AND_DROP","default","layout","options","orient","visibility","form_data","nodeLabelPosition","childLabelPosition","emphasis","symbol","value","min","max","step","symbolSize","roam","choices","formDataOverrides","formData","metric","shiftMetric"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/plugins/plugin-chart-echarts/src/Tree/controlPanel.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { FeatureFlag, isFeatureEnabled, t } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  getStandardizedControls,\n  sections,\n  sharedControls,\n} from '@superset-ui/chart-controls';\nimport { DEFAULT_FORM_DATA } from './constants';\n\nconst requiredEntity = {\n  ...sharedControls.entity,\n  clearable: false,\n};\nconst optionalEntity = {\n  ...sharedControls.entity,\n  clearable: true,\n  validators: [],\n};\n\nconst controlPanel: ControlPanelConfig = {\n  controlPanelSections: [\n    sections.legacyRegularTime,\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'id',\n            config: {\n              ...requiredEntity,\n              label: t('Id'),\n              description: t('Name of the id column'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'parent',\n            config: {\n              ...requiredEntity,\n              label: t('Parent'),\n              description: t(\n                'Name of the column containing the id of the parent node',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'name',\n            config: {\n              ...optionalEntity,\n              label: t('Name'),\n              description: t('Optional name of the data column.'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'root_node_id',\n            config: {\n              ...optionalEntity,\n              renderTrigger: true,\n              type: 'TextControl',\n              label: t('Root node id'),\n              description: t('Id of root node of the tree.'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'metric',\n            config: {\n              ...optionalEntity,\n              type: isFeatureEnabled(FeatureFlag.ENABLE_EXPLORE_DRAG_AND_DROP)\n                ? 'DndMetricSelect'\n                : 'MetricsControl',\n              label: t('Metric'),\n              description: t('Metric for node values'),\n            },\n          },\n        ],\n        ['adhoc_filters'],\n        ['row_limit'],\n      ],\n    },\n    {\n      label: t('Chart options'),\n      expanded: true,\n      controlSetRows: [\n        [<div className=\"section-header\">{t('Layout')}</div>],\n        [\n          {\n            name: 'layout',\n            config: {\n              type: 'RadioButtonControl',\n              renderTrigger: true,\n              label: t('Tree layout'),\n              default: DEFAULT_FORM_DATA.layout,\n              options: [\n                ['orthogonal', t('Orthogonal')],\n                ['radial', t('Radial')],\n              ],\n              description: t('Layout type of tree'),\n            },\n          },\n        ],\n\n        [\n          {\n            name: 'orient',\n            config: {\n              type: 'RadioButtonControl',\n              renderTrigger: true,\n              label: t('Tree orientation'),\n              default: DEFAULT_FORM_DATA.orient,\n              options: [\n                ['LR', t('Left to Right')],\n                ['RL', t('Right to Left')],\n                ['TB', t('Top to Bottom')],\n                ['BT', t('Bottom to Top')],\n              ],\n              description: t('Orientation of tree'),\n              visibility({ form_data: { layout } }) {\n                return (layout || DEFAULT_FORM_DATA.layout) === 'orthogonal';\n              },\n            },\n          },\n        ],\n        [\n          {\n            name: 'node_label_position',\n            config: {\n              type: 'RadioButtonControl',\n              renderTrigger: true,\n              label: t('Node label position'),\n              default: DEFAULT_FORM_DATA.nodeLabelPosition,\n              options: [\n                ['left', t('left')],\n                ['top', t('top')],\n                ['right', t('right')],\n                ['bottom', t('bottom')],\n              ],\n              description: t('Position of intermediate node label on tree'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'child_label_position',\n            config: {\n              type: 'RadioButtonControl',\n              renderTrigger: true,\n              label: t('Child label position'),\n              default: DEFAULT_FORM_DATA.childLabelPosition,\n              options: [\n                ['left', t('left')],\n                ['top', t('top')],\n                ['right', t('right')],\n                ['bottom', t('bottom')],\n              ],\n              description: t('Position of child node label on tree'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'emphasis',\n            config: {\n              type: 'RadioButtonControl',\n              renderTrigger: true,\n              label: t('Emphasis'),\n              default: DEFAULT_FORM_DATA.emphasis,\n              options: [\n                ['ancestor', t('ancestor')],\n                ['descendant', t('descendant')],\n              ],\n              description: t('Which relatives to highlight on hover'),\n              visibility({ form_data: { layout } }) {\n                return (layout || DEFAULT_FORM_DATA.layout) === 'orthogonal';\n              },\n            },\n          },\n        ],\n        [\n          {\n            name: 'symbol',\n            config: {\n              type: 'SelectControl',\n              renderTrigger: true,\n              label: t('Symbol'),\n              default: DEFAULT_FORM_DATA.symbol,\n              options: [\n                {\n                  label: t('Empty circle'),\n                  value: 'emptyCircle',\n                },\n                {\n                  label: t('Circle'),\n                  value: 'circle',\n                },\n                {\n                  label: t('Rectangle'),\n                  value: 'rect',\n                },\n                {\n                  label: t('Triangle'),\n                  value: 'triangle',\n                },\n                {\n                  label: t('Diamond'),\n                  value: 'diamond',\n                },\n                {\n                  label: t('Pin'),\n                  value: 'pin',\n                },\n                {\n                  label: t('Arrow'),\n                  value: 'arrow',\n                },\n                {\n                  label: t('None'),\n                  value: 'none',\n                },\n              ],\n              description: t('Layout type of tree'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'symbolSize',\n            config: {\n              type: 'SliderControl',\n              label: t('Symbol size'),\n              renderTrigger: true,\n              min: 5,\n              max: 30,\n              step: 2,\n              default: DEFAULT_FORM_DATA.symbolSize,\n              description: t('Size of edge symbols'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'roam',\n            config: {\n              type: 'SelectControl',\n              label: t('Enable graph roaming'),\n              renderTrigger: true,\n              default: DEFAULT_FORM_DATA.roam,\n              choices: [\n                [false, t('Disabled')],\n                ['scale', t('Scale only')],\n                ['move', t('Move only')],\n                [true, t('Scale and Move')],\n              ],\n              description: t(\n                'Whether to enable changing graph position and scaling.',\n              ),\n            },\n          },\n        ],\n      ],\n    },\n  ],\n  formDataOverrides: formData => ({\n    ...formData,\n    metric: getStandardizedControls().shiftMetric(),\n  }),\n};\n\nexport default controlPanel;\n"]},"metadata":{},"sourceType":"module"}