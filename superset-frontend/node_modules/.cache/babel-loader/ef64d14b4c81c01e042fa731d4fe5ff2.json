{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, css, t } from '@superset-ui/core';\nimport { Empty } from 'src/components';\nimport Button from 'src/components/Button';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport var EmptyStateSize;\n(function (EmptyStateSize) {\n  EmptyStateSize[EmptyStateSize[\"Small\"] = 0] = \"Small\";\n  EmptyStateSize[EmptyStateSize[\"Medium\"] = 1] = \"Medium\";\n  EmptyStateSize[EmptyStateSize[\"Big\"] = 2] = \"Big\";\n})(EmptyStateSize || (EmptyStateSize = {}));\nconst EmptyStateContainer = styled.div`\n  ${(_ref) => {let { theme } = _ref;return css`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n    justify-content: center;\n    padding: ${theme.gridUnit * 4}px;\n    text-align: center;\n\n    & .ant-empty-image svg {\n      width: auto;\n    }\n\n    & a,\n    & span[role='button'] {\n      color: inherit;\n      text-decoration: underline;\n      &:hover {\n        color: ${theme.colors.grayscale.base};\n      }\n    }\n  `;}}\n`;\nconst TextContainer = styled.div``;\nconst Title = styled.p`\n  ${(_ref2) => {let { theme } = _ref2;return css`\n    font-size: ${theme.typography.sizes.m}px;\n    color: ${theme.colors.grayscale.light1};\n    margin: ${theme.gridUnit * 2}px 0 0 0;\n    font-weight: ${theme.typography.weights.bold};\n  `;}}\n`;\nconst BigTitle = styled(Title)`\n  ${(_ref3) => {let { theme } = _ref3;return css`\n    font-size: ${theme.typography.sizes.l}px;\n    color: ${theme.colors.grayscale.light1};\n    margin-top: ${theme.gridUnit * 4}px;\n  `;}}\n`;\nconst Description = styled.p`\n  ${(_ref4) => {let { theme } = _ref4;return css`\n    font-size: ${theme.typography.sizes.s}px;\n    color: ${theme.colors.grayscale.light1};\n    margin: ${theme.gridUnit * 2}px 0 0 0;\n  `;}}\n`;\nconst BigDescription = styled(Description)`\n  ${(_ref5) => {let { theme } = _ref5;return css`\n    font-size: ${theme.typography.sizes.m}px;\n  `;}}\n`;\nconst SmallDescription = styled(Description)`\n  ${(_ref6) => {let { theme } = _ref6;return css`\n    margin-top: ${theme.gridUnit}px;\n    line-height: 1.2;\n  `;}}\n`;\nconst ActionButton = styled(Button)`\n  ${(_ref7) => {let { theme } = _ref7;return css`\n    margin-top: ${theme.gridUnit * 4}px;\n    z-index: 1;\n  `;}}\n`;\nconst getImage = (image) => typeof image === 'string' ? `/static/assets/images/${image}` : image;\nconst getImageHeight = (size) => {\n  switch (size) {\n    case EmptyStateSize.Small:\n      return { height: '50px' };\n    case EmptyStateSize.Medium:\n      return { height: '80px' };\n    case EmptyStateSize.Big:\n      return { height: '150px' };\n    default:\n      return { height: '50px' };}\n\n};\nconst ImageContainer = (_ref8) => {let { image, size } = _ref8;return ___EmotionJSX(Empty, { description: false, image: getImage(image), imageStyle: getImageHeight(size) });};\nconst handleMouseDown = (e) => {\n  e.preventDefault();\n  e.stopPropagation();\n};\nexport const EmptyStateBig = (_ref9) => {let { title, image, description, buttonAction, buttonText, className } = _ref9;return ___EmotionJSX(EmptyStateContainer, { className: className },\n  image && ___EmotionJSX(ImageContainer, { image: image, size: EmptyStateSize.Big }),\n  ___EmotionJSX(TextContainer, { css: (theme) => css`\n        max-width: ${theme.gridUnit * 150}px;\n      ` },\n  ___EmotionJSX(BigTitle, null, title),\n  description && ___EmotionJSX(BigDescription, null, description),\n  buttonAction && buttonText && ___EmotionJSX(ActionButton, { buttonStyle: \"primary\", onClick: buttonAction, onMouseDown: handleMouseDown },\n  buttonText)));};\n\n\n\nexport const EmptyStateMedium = (_ref10) => {let { title, image, description, buttonAction, buttonText } = _ref10;return ___EmotionJSX(EmptyStateContainer, null,\n  image && ___EmotionJSX(ImageContainer, { image: image, size: EmptyStateSize.Medium }),\n  ___EmotionJSX(TextContainer, { css: (theme) => css`\n        max-width: ${theme.gridUnit * 100}px;\n      ` },\n  ___EmotionJSX(Title, null, title),\n  description && ___EmotionJSX(Description, null, description),\n  buttonText && buttonAction && ___EmotionJSX(ActionButton, { buttonStyle: \"primary\", onClick: buttonAction, onMouseDown: handleMouseDown },\n  buttonText)));};\n\n\n\nexport const EmptyStateSmall = (_ref11) => {let { title, image, description } = _ref11;return ___EmotionJSX(EmptyStateContainer, null,\n  image && ___EmotionJSX(ImageContainer, { image: image, size: EmptyStateSize.Small }),\n  ___EmotionJSX(TextContainer, { css: (theme) => css`\n        max-width: ${theme.gridUnit * 75}px;\n      ` },\n  ___EmotionJSX(Title, null, title),\n  description && ___EmotionJSX(SmallDescription, null, description)));};\n\n\nconst TRANSLATIONS = {\n  NO_DATABASES_MATCH_TITLE: t('No databases match your search'),\n  NO_DATABASES_AVAILABLE_TITLE: t('There are no databases available'),\n  MANAGE_YOUR_DATABASES_TEXT: t('Manage your databases'),\n  HERE_TEXT: t('here') };\n\nexport const emptyStateComponent = (emptyResultsWithSearch) => ___EmotionJSX(EmptyStateSmall, { image: \"empty.svg\", title: emptyResultsWithSearch ?\n  TRANSLATIONS.NO_DATABASES_MATCH_TITLE :\n  TRANSLATIONS.NO_DATABASES_AVAILABLE_TITLE, description: ___EmotionJSX(\"p\", null,\n  TRANSLATIONS.MANAGE_YOUR_DATABASES_TEXT, ' ',\n  ___EmotionJSX(\"a\", { href: \"/databaseview/list\" }, TRANSLATIONS.HERE_TEXT)) });","map":{"version":3,"mappings":"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","names":["React","styled","css","t","Empty","Button","EmptyStateSize","EmptyStateContainer","div","theme","gridUnit","colors","grayscale","base","TextContainer","Title","p","typography","sizes","m","light1","weights","bold","BigTitle","l","Description","s","BigDescription","SmallDescription","ActionButton","getImage","image","getImageHeight","size","Small","height","Medium","Big","ImageContainer","handleMouseDown","e","preventDefault","stopPropagation","EmptyStateBig","title","description","buttonAction","buttonText","className","EmptyStateMedium","EmptyStateSmall","TRANSLATIONS","NO_DATABASES_MATCH_TITLE","NO_DATABASES_AVAILABLE_TITLE","MANAGE_YOUR_DATABASES_TEXT","HERE_TEXT","emptyStateComponent","emptyResultsWithSearch"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/components/EmptyState/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { ReactNode, SyntheticEvent } from 'react';\nimport { styled, css, SupersetTheme, t } from '@superset-ui/core';\nimport { Empty } from 'src/components';\nimport Button from 'src/components/Button';\n\nexport enum EmptyStateSize {\n  Small,\n  Medium,\n  Big,\n}\n\nexport interface EmptyStateSmallProps {\n  title: ReactNode;\n  description?: ReactNode;\n  image?: ReactNode;\n}\n\nexport interface EmptyStateProps extends EmptyStateSmallProps {\n  buttonText?: ReactNode;\n  buttonAction?: React.MouseEventHandler<HTMLElement>;\n  className?: string;\n}\n\nexport interface ImageContainerProps {\n  image: ReactNode;\n  size: EmptyStateSize;\n}\n\nconst EmptyStateContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n    justify-content: center;\n    padding: ${theme.gridUnit * 4}px;\n    text-align: center;\n\n    & .ant-empty-image svg {\n      width: auto;\n    }\n\n    & a,\n    & span[role='button'] {\n      color: inherit;\n      text-decoration: underline;\n      &:hover {\n        color: ${theme.colors.grayscale.base};\n      }\n    }\n  `}\n`;\n\nconst TextContainer = styled.div``;\n\nconst Title = styled.p`\n  ${({ theme }) => css`\n    font-size: ${theme.typography.sizes.m}px;\n    color: ${theme.colors.grayscale.light1};\n    margin: ${theme.gridUnit * 2}px 0 0 0;\n    font-weight: ${theme.typography.weights.bold};\n  `}\n`;\n\nconst BigTitle = styled(Title)`\n  ${({ theme }) => css`\n    font-size: ${theme.typography.sizes.l}px;\n    color: ${theme.colors.grayscale.light1};\n    margin-top: ${theme.gridUnit * 4}px;\n  `}\n`;\n\nconst Description = styled.p`\n  ${({ theme }) => css`\n    font-size: ${theme.typography.sizes.s}px;\n    color: ${theme.colors.grayscale.light1};\n    margin: ${theme.gridUnit * 2}px 0 0 0;\n  `}\n`;\n\nconst BigDescription = styled(Description)`\n  ${({ theme }) => css`\n    font-size: ${theme.typography.sizes.m}px;\n  `}\n`;\n\nconst SmallDescription = styled(Description)`\n  ${({ theme }) => css`\n    margin-top: ${theme.gridUnit}px;\n    line-height: 1.2;\n  `}\n`;\n\nconst ActionButton = styled(Button)`\n  ${({ theme }) => css`\n    margin-top: ${theme.gridUnit * 4}px;\n    z-index: 1;\n  `}\n`;\n\nconst getImage = (image: string | ReactNode) =>\n  typeof image === 'string' ? `/static/assets/images/${image}` : image;\n\nconst getImageHeight = (size: EmptyStateSize) => {\n  switch (size) {\n    case EmptyStateSize.Small:\n      return { height: '50px' };\n    case EmptyStateSize.Medium:\n      return { height: '80px' };\n    case EmptyStateSize.Big:\n      return { height: '150px' };\n    default:\n      return { height: '50px' };\n  }\n};\n\nconst ImageContainer = ({ image, size }: ImageContainerProps) => (\n  <Empty\n    description={false}\n    image={getImage(image)}\n    imageStyle={getImageHeight(size)}\n  />\n);\n\nconst handleMouseDown = (e: SyntheticEvent) => {\n  e.preventDefault();\n  e.stopPropagation();\n};\n\nexport const EmptyStateBig = ({\n  title,\n  image,\n  description,\n  buttonAction,\n  buttonText,\n  className,\n}: EmptyStateProps) => (\n  <EmptyStateContainer className={className}>\n    {image && <ImageContainer image={image} size={EmptyStateSize.Big} />}\n    <TextContainer\n      css={(theme: SupersetTheme) => css`\n        max-width: ${theme.gridUnit * 150}px;\n      `}\n    >\n      <BigTitle>{title}</BigTitle>\n      {description && <BigDescription>{description}</BigDescription>}\n      {buttonAction && buttonText && (\n        <ActionButton\n          buttonStyle=\"primary\"\n          onClick={buttonAction}\n          onMouseDown={handleMouseDown}\n        >\n          {buttonText}\n        </ActionButton>\n      )}\n    </TextContainer>\n  </EmptyStateContainer>\n);\n\nexport const EmptyStateMedium = ({\n  title,\n  image,\n  description,\n  buttonAction,\n  buttonText,\n}: EmptyStateProps) => (\n  <EmptyStateContainer>\n    {image && <ImageContainer image={image} size={EmptyStateSize.Medium} />}\n    <TextContainer\n      css={(theme: SupersetTheme) => css`\n        max-width: ${theme.gridUnit * 100}px;\n      `}\n    >\n      <Title>{title}</Title>\n      {description && <Description>{description}</Description>}\n      {buttonText && buttonAction && (\n        <ActionButton\n          buttonStyle=\"primary\"\n          onClick={buttonAction}\n          onMouseDown={handleMouseDown}\n        >\n          {buttonText}\n        </ActionButton>\n      )}\n    </TextContainer>\n  </EmptyStateContainer>\n);\n\nexport const EmptyStateSmall = ({\n  title,\n  image,\n  description,\n}: EmptyStateSmallProps) => (\n  <EmptyStateContainer>\n    {image && <ImageContainer image={image} size={EmptyStateSize.Small} />}\n    <TextContainer\n      css={(theme: SupersetTheme) => css`\n        max-width: ${theme.gridUnit * 75}px;\n      `}\n    >\n      <Title>{title}</Title>\n      {description && <SmallDescription>{description}</SmallDescription>}\n    </TextContainer>\n  </EmptyStateContainer>\n);\n\nconst TRANSLATIONS = {\n  NO_DATABASES_MATCH_TITLE: t('No databases match your search'),\n  NO_DATABASES_AVAILABLE_TITLE: t('There are no databases available'),\n  MANAGE_YOUR_DATABASES_TEXT: t('Manage your databases'),\n  HERE_TEXT: t('here'),\n};\n\nexport const emptyStateComponent = (emptyResultsWithSearch: boolean) => (\n  <EmptyStateSmall\n    image=\"empty.svg\"\n    title={\n      emptyResultsWithSearch\n        ? TRANSLATIONS.NO_DATABASES_MATCH_TITLE\n        : TRANSLATIONS.NO_DATABASES_AVAILABLE_TITLE\n    }\n    description={\n      <p>\n        {TRANSLATIONS.MANAGE_YOUR_DATABASES_TEXT}{' '}\n        <a href=\"/databaseview/list\">{TRANSLATIONS.HERE_TEXT}</a>\n      </p>\n    }\n  />\n);\n"]},"metadata":{},"sourceType":"module"}