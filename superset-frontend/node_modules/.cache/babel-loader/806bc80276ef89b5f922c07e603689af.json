{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// Menu App. Used in views that do not already include the Menu component in the layout.\n// eg, backend rendered views\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport { CacheProvider } from '@emotion/react';\nimport { QueryParamProvider } from 'use-query-params';\nimport createCache from '@emotion/cache';\nimport { ThemeProvider } from '@superset-ui/core';\nimport Menu from 'src/features/home/Menu';\nimport { theme } from 'src/preamble';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport { setupStore } from './store';\n// Disable connecting to redux debugger so that the React app injected\n// Below the menu like SqlLab or Explore can connect its redux store to the debugger\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";const store = setupStore({ disableDebugger: true });\nconst bootstrapData = getBootstrapData();\nconst menu = { ...bootstrapData.common.menu_data };\nconst emotionCache = createCache({\n  key: 'menu' });\n\nconst app =\n// @ts-ignore: emotion types defs are incompatible between core and cache\n___EmotionJSX(CacheProvider, { value: emotionCache },\n___EmotionJSX(ThemeProvider, { theme: theme },\n___EmotionJSX(Provider, { store: store },\n___EmotionJSX(BrowserRouter, null,\n___EmotionJSX(QueryParamProvider, { ReactRouterRoute: Route, stringifyOptions: { encode: false } },\n___EmotionJSX(Menu, { data: menu }))))));\n\n\n\n\n\nReactDOM.render(app, document.getElementById('app-menu'));;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(store, \"store\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/views/menu.tsx\");reactHotLoader.register(bootstrapData, \"bootstrapData\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/views/menu.tsx\");reactHotLoader.register(menu, \"menu\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/views/menu.tsx\");reactHotLoader.register(emotionCache, \"emotionCache\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/views/menu.tsx\");reactHotLoader.register(app, \"app\", \"/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/views/menu.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,kBAArC;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,SAASC,UAAT,QAA2B,SAA3B;AAEA;AACA;sDACA,MAAMC,KAAK,GAAGD,UAAU,CAAC,EAAEE,eAAe,EAAE,IAAnB,EAAD,CAAxB;AACA,MAAMC,aAAa,GAAGJ,gBAAgB,EAAtC;AACA,MAAMK,IAAI,GAAG,EAAE,GAAGD,aAAa,CAACE,MAAd,CAAqBC,SAA1B,EAAb;AAEA,MAAMC,YAAY,GAAGZ,WAAW,CAAC;EAC/Ba,GAAG,EAAE,MAD0B,EAAD,CAAhC;;AAIA,MAAMC,GAAG;AACP;AACA,cAAC,aAAD,IAAe,KAAK,EAAEF,YAAtB;AACE,cAAC,aAAD,IAAe,KAAK,EAAET,KAAtB;AACE,cAAC,QAAD,IAAU,KAAK,EAAEG,KAAjB;AACE,cAAC,aAAD;AACE,cAAC,kBAAD,IACE,gBAAgB,EAAEV,KADpB,EAEE,gBAAgB,EAAE,EAAEmB,MAAM,EAAE,KAAV,EAFpB;AAIE,cAAC,IAAD,IAAM,IAAI,EAAEN,IAAZ,GAJF,CADF,CADF,CADF,CADF,CAFF;;;;;;AAkBAd,QAAQ,CAACqB,MAAT,CAAgBF,GAAhB,EAAqBG,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAArB,E,iLA1BMZ,K,0HACAE,a,kIACAC,I,yHAEAG,Y,iIAIAE,G","names":["React","Provider","ReactDOM","Route","BrowserRouter","CacheProvider","QueryParamProvider","createCache","ThemeProvider","Menu","theme","getBootstrapData","setupStore","store","disableDebugger","bootstrapData","menu","common","menu_data","emotionCache","key","app","encode","render","document","getElementById"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/views/menu.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// Menu App. Used in views that do not already include the Menu component in the layout.\n// eg, backend rendered views\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport { CacheProvider } from '@emotion/react';\nimport { QueryParamProvider } from 'use-query-params';\nimport createCache from '@emotion/cache';\nimport { ThemeProvider } from '@superset-ui/core';\nimport Menu from 'src/features/home/Menu';\nimport { theme } from 'src/preamble';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport { setupStore } from './store';\n\n// Disable connecting to redux debugger so that the React app injected\n// Below the menu like SqlLab or Explore can connect its redux store to the debugger\nconst store = setupStore({ disableDebugger: true });\nconst bootstrapData = getBootstrapData();\nconst menu = { ...bootstrapData.common.menu_data };\n\nconst emotionCache = createCache({\n  key: 'menu',\n});\n\nconst app = (\n  // @ts-ignore: emotion types defs are incompatible between core and cache\n  <CacheProvider value={emotionCache}>\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <BrowserRouter>\n          <QueryParamProvider\n            ReactRouterRoute={Route}\n            stringifyOptions={{ encode: false }}\n          >\n            <Menu data={menu} />\n          </QueryParamProvider>\n        </BrowserRouter>\n      </Provider>\n    </ThemeProvider>\n  </CacheProvider>\n);\n\nReactDOM.render(app, document.getElementById('app-menu'));\n"]},"metadata":{},"sourceType":"module"}