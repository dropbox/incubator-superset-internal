{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Typography, AntdTooltip } from 'src/components';\nimport { useDispatch } from 'react-redux';\nimport Button from 'src/components/Button';\nimport { updateFilterSet } from 'src/dashboard/actions/nativeFilters';\nimport Icons from 'src/components/Icons';\nimport { ActionButtons } from './Footer';\nimport { useNativeFiltersDataMask, useFilters, useFilterSets } from '../state';\nimport { APPLY_FILTERS_HINT, findExistingFilterSet } from './utils';\nimport { useFilterSetNameDuplicated } from './state';\nimport { getFilterBarTestId } from '../utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  align-items: flex-start;\n  justify-content: flex-start;\n  grid-gap: ${(_ref) => {let { theme } = _ref;return theme.gridUnit;}}px;\n  background: ${(_ref2) => {let { theme } = _ref2;return theme.colors.primary.light4;}};\n  padding: ${(_ref3) => {let { theme } = _ref3;return theme.gridUnit * 2;}}px;\n`;\nconst Title = styled(Typography.Text)`\n  color: ${(_ref4) => {let { theme } = _ref4;return theme.colors.primary.dark2;}};\n`;\nconst Warning = styled(Typography.Text)`\n  font-size: ${(_ref5) => {let { theme } = _ref5;return theme.typography.sizes.s;}}px;\n  & .anticon {\n    padding: ${(_ref6) => {let { theme } = _ref6;return theme.gridUnit;}}px;\n  }\n`;\nconst ActionButton = styled.div`\n  display: flex;\n  & button {\n    ${(_ref7) => {let { disabled } = _ref7;return `pointer-events: ${disabled ? 'none' : 'all'}`;}};\n    flex: 1;\n  }\n`;\nconst EditSection = (_ref8) => {let { filterSetId, onCancel, dataMaskSelected, disabled } = _ref8;\n  const dataMaskApplied = useNativeFiltersDataMask();\n  const dispatch = useDispatch();\n  const filterSets = useFilterSets();\n  const filters = useFilters();\n  const filterSetFilterValues = Object.values(filterSets);\n  const [filterSetName, setFilterSetName] = useState(filterSets[filterSetId].name);\n  const isFilterSetNameDuplicated = useFilterSetNameDuplicated(filterSetName, filterSets[filterSetId].name);\n  const handleSave = () => {\n    dispatch(updateFilterSet({\n      id: filterSetId,\n      name: filterSetName,\n      nativeFilters: filters,\n      dataMask: { ...dataMaskApplied } }));\n\n    onCancel();\n  };\n  const foundFilterSet = useMemo(() => findExistingFilterSet({\n    dataMaskSelected,\n    filterSetFilterValues }),\n  [dataMaskSelected, filterSetFilterValues]);\n  const isDuplicateFilterSet = foundFilterSet && foundFilterSet.id !== filterSetId;\n  const resultDisabled = disabled || isDuplicateFilterSet || isFilterSetNameDuplicated;\n  return ___EmotionJSX(Wrapper, null,\n  ___EmotionJSX(Title, { strong: true }, t('Editing filter set:')),\n  ___EmotionJSX(Title, { editable: {\n      editing: true,\n      icon: ___EmotionJSX(\"span\", null),\n      onChange: setFilterSetName } },\n\n  filterSetName),\n\n  ___EmotionJSX(ActionButtons, null,\n  ___EmotionJSX(Button, { ghost: true, buttonStyle: \"tertiary\", buttonSize: \"small\", onClick: onCancel },\n  t('Cancel')),\n\n  ___EmotionJSX(AntdTooltip, { placement: \"right\", title: isFilterSetNameDuplicated &&\n    t('Filter set with this name already exists') ||\n    isDuplicateFilterSet && t('Filter set already exists') ||\n    disabled && APPLY_FILTERS_HINT },\n  ___EmotionJSX(ActionButton, { disabled: resultDisabled },\n  ___EmotionJSX(Button, _extends({ disabled: resultDisabled, buttonStyle: \"primary\", htmlType: \"submit\", buttonSize: \"small\", onClick: handleSave }, getFilterBarTestId('filter-set-edit-save')),\n  t('Save'))))),\n\n\n\n\n  isDuplicateFilterSet && ___EmotionJSX(Warning, { mark: true },\n  ___EmotionJSX(Icons.WarningOutlined, { iconSize: \"m\" }),\n  t('This filter set is identical to: \"%s\"', foundFilterSet == null ? void 0 : foundFilterSet.name)));\n\n\n};\nexport default EditSection;","map":{"version":3,"mappings":"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","names":["React","useMemo","useState","styled","t","Typography","AntdTooltip","useDispatch","Button","updateFilterSet","Icons","ActionButtons","useNativeFiltersDataMask","useFilters","useFilterSets","APPLY_FILTERS_HINT","findExistingFilterSet","useFilterSetNameDuplicated","getFilterBarTestId","Wrapper","div","theme","gridUnit","colors","primary","light4","Title","Text","dark2","Warning","typography","sizes","s","ActionButton","disabled","EditSection","filterSetId","onCancel","dataMaskSelected","dataMaskApplied","dispatch","filterSets","filters","filterSetFilterValues","Object","values","filterSetName","setFilterSetName","name","isFilterSetNameDuplicated","handleSave","id","nativeFilters","dataMask","foundFilterSet","isDuplicateFilterSet","resultDisabled","editing","icon","onChange"],"sourceRoot":"","sources":["/Users/zhaorui/src/incubator-superset-internal/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/EditSection.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FC, useMemo, useState } from 'react';\nimport { DataMaskState, HandlerFunction, styled, t } from '@superset-ui/core';\nimport { Typography, AntdTooltip } from 'src/components';\nimport { useDispatch } from 'react-redux';\nimport Button from 'src/components/Button';\nimport { updateFilterSet } from 'src/dashboard/actions/nativeFilters';\nimport Icons from 'src/components/Icons';\nimport { ActionButtons } from './Footer';\nimport { useNativeFiltersDataMask, useFilters, useFilterSets } from '../state';\nimport { APPLY_FILTERS_HINT, findExistingFilterSet } from './utils';\nimport { useFilterSetNameDuplicated } from './state';\nimport { getFilterBarTestId } from '../utils';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  align-items: flex-start;\n  justify-content: flex-start;\n  grid-gap: ${({ theme }) => theme.gridUnit}px;\n  background: ${({ theme }) => theme.colors.primary.light4};\n  padding: ${({ theme }) => theme.gridUnit * 2}px;\n`;\n\nconst Title = styled(Typography.Text)`\n  color: ${({ theme }) => theme.colors.primary.dark2};\n`;\n\nconst Warning = styled(Typography.Text)`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  & .anticon {\n    padding: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst ActionButton = styled.div<{ disabled?: boolean }>`\n  display: flex;\n  & button {\n    ${({ disabled }) => `pointer-events: ${disabled ? 'none' : 'all'}`};\n    flex: 1;\n  }\n`;\n\nexport type EditSectionProps = {\n  filterSetId: number;\n  dataMaskSelected: DataMaskState;\n  onCancel: HandlerFunction;\n  disabled: boolean;\n};\n\nconst EditSection: FC<EditSectionProps> = ({\n  filterSetId,\n  onCancel,\n  dataMaskSelected,\n  disabled,\n}) => {\n  const dataMaskApplied = useNativeFiltersDataMask();\n  const dispatch = useDispatch();\n  const filterSets = useFilterSets();\n  const filters = useFilters();\n  const filterSetFilterValues = Object.values(filterSets);\n\n  const [filterSetName, setFilterSetName] = useState(\n    filterSets[filterSetId].name,\n  );\n\n  const isFilterSetNameDuplicated = useFilterSetNameDuplicated(\n    filterSetName,\n    filterSets[filterSetId].name,\n  );\n\n  const handleSave = () => {\n    dispatch(\n      updateFilterSet({\n        id: filterSetId,\n        name: filterSetName,\n        nativeFilters: filters,\n        dataMask: { ...dataMaskApplied },\n      }),\n    );\n    onCancel();\n  };\n\n  const foundFilterSet = useMemo(\n    () =>\n      findExistingFilterSet({\n        dataMaskSelected,\n        filterSetFilterValues,\n      }),\n    [dataMaskSelected, filterSetFilterValues],\n  );\n\n  const isDuplicateFilterSet =\n    foundFilterSet && foundFilterSet.id !== filterSetId;\n\n  const resultDisabled =\n    disabled || isDuplicateFilterSet || isFilterSetNameDuplicated;\n\n  return (\n    <Wrapper>\n      <Title strong>{t('Editing filter set:')}</Title>\n      <Title\n        editable={{\n          editing: true,\n          icon: <span />,\n          onChange: setFilterSetName,\n        }}\n      >\n        {filterSetName}\n      </Title>\n      <ActionButtons>\n        <Button\n          ghost\n          buttonStyle=\"tertiary\"\n          buttonSize=\"small\"\n          onClick={onCancel}\n          data-test=\"filter-set-edit-cancel\"\n        >\n          {t('Cancel')}\n        </Button>\n        <AntdTooltip\n          placement=\"right\"\n          title={\n            (isFilterSetNameDuplicated &&\n              t('Filter set with this name already exists')) ||\n            (isDuplicateFilterSet && t('Filter set already exists')) ||\n            (disabled && APPLY_FILTERS_HINT)\n          }\n        >\n          <ActionButton disabled={resultDisabled}>\n            <Button\n              disabled={resultDisabled}\n              buttonStyle=\"primary\"\n              htmlType=\"submit\"\n              buttonSize=\"small\"\n              onClick={handleSave}\n              {...getFilterBarTestId('filter-set-edit-save')}\n            >\n              {t('Save')}\n            </Button>\n          </ActionButton>\n        </AntdTooltip>\n      </ActionButtons>\n      {isDuplicateFilterSet && (\n        <Warning mark>\n          <Icons.WarningOutlined iconSize=\"m\" />\n          {t('This filter set is identical to: \"%s\"', foundFilterSet?.name)}\n        </Warning>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default EditSection;\n"]},"metadata":{},"sourceType":"module"}