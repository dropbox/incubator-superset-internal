{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport getErrorMessageComponentRegistry from 'src/components/ErrorMessage/getErrorMessageComponentRegistry';\nimport { ErrorTypeEnum } from 'src/components/ErrorMessage/types';\nimport TimeoutErrorMessage from 'src/components/ErrorMessage/TimeoutErrorMessage';\nimport DatabaseErrorMessage from 'src/components/ErrorMessage/DatabaseErrorMessage';\nimport ParameterErrorMessage from 'src/components/ErrorMessage/ParameterErrorMessage';\nimport DatasetNotFoundErrorMessage from 'src/components/ErrorMessage/DatasetNotFoundErrorMessage';\nimport setupErrorMessagesExtra from './setupErrorMessagesExtra';\nexport default function setupErrorMessages() {\n  const errorMessageComponentRegistry = getErrorMessageComponentRegistry();\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.FRONTEND_TIMEOUT_ERROR, TimeoutErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.BACKEND_TIMEOUT_ERROR, TimeoutErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.DATABASE_NOT_FOUND_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.GENERIC_DB_ENGINE_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.GENERIC_BACKEND_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.COLUMN_DOES_NOT_EXIST_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.TABLE_DOES_NOT_EXIST_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.MISSING_TEMPLATE_PARAMS_ERROR, ParameterErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.INVALID_TEMPLATE_PARAMS_ERROR, ParameterErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.RESULTS_BACKEND_NOT_CONFIGURED_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.DML_NOT_ALLOWED_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.INVALID_CTAS_QUERY_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.INVALID_CVAS_QUERY_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.QUERY_SECURITY_ACCESS_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.CONNECTION_INVALID_HOSTNAME_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.RESULTS_BACKEND_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.ASYNC_WORKERS_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.SQLLAB_TIMEOUT_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.CONNECTION_PORT_CLOSED_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.CONNECTION_HOST_DOWN_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.CONNECTION_INVALID_USERNAME_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.CONNECTION_INVALID_PASSWORD_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.CONNECTION_ACCESS_DENIED_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.CONNECTION_UNKNOWN_DATABASE_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.SCHEMA_DOES_NOT_EXIST_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.OBJECT_DOES_NOT_EXIST_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.SYNTAX_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.CONNECTION_DATABASE_PERMISSIONS_ERROR, DatabaseErrorMessage);\n  errorMessageComponentRegistry.registerValue(ErrorTypeEnum.FAILED_FETCHING_DATASOURCE_INFO_ERROR, DatasetNotFoundErrorMessage);\n  setupErrorMessagesExtra();\n}","map":{"version":3,"mappings":"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","names":["getErrorMessageComponentRegistry","ErrorTypeEnum","TimeoutErrorMessage","DatabaseErrorMessage","ParameterErrorMessage","DatasetNotFoundErrorMessage","setupErrorMessagesExtra","setupErrorMessages","errorMessageComponentRegistry","registerValue","FRONTEND_TIMEOUT_ERROR","BACKEND_TIMEOUT_ERROR","DATABASE_NOT_FOUND_ERROR","GENERIC_DB_ENGINE_ERROR","GENERIC_BACKEND_ERROR","COLUMN_DOES_NOT_EXIST_ERROR","TABLE_DOES_NOT_EXIST_ERROR","MISSING_TEMPLATE_PARAMS_ERROR","INVALID_TEMPLATE_PARAMS_ERROR","RESULTS_BACKEND_NOT_CONFIGURED_ERROR","DML_NOT_ALLOWED_ERROR","INVALID_CTAS_QUERY_ERROR","INVALID_CVAS_QUERY_ERROR","QUERY_SECURITY_ACCESS_ERROR","CONNECTION_INVALID_HOSTNAME_ERROR","RESULTS_BACKEND_ERROR","ASYNC_WORKERS_ERROR","SQLLAB_TIMEOUT_ERROR","CONNECTION_PORT_CLOSED_ERROR","CONNECTION_HOST_DOWN_ERROR","CONNECTION_INVALID_USERNAME_ERROR","CONNECTION_INVALID_PASSWORD_ERROR","CONNECTION_ACCESS_DENIED_ERROR","CONNECTION_UNKNOWN_DATABASE_ERROR","SCHEMA_DOES_NOT_EXIST_ERROR","OBJECT_DOES_NOT_EXIST_ERROR","SYNTAX_ERROR","CONNECTION_DATABASE_PERMISSIONS_ERROR","FAILED_FETCHING_DATASOURCE_INFO_ERROR"],"sourceRoot":"","sources":["/Users/bogdankyryliuk/code/opensource/superset/superset-frontend/src/setup/setupErrorMessages.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport getErrorMessageComponentRegistry from 'src/components/ErrorMessage/getErrorMessageComponentRegistry';\nimport { ErrorTypeEnum } from 'src/components/ErrorMessage/types';\nimport TimeoutErrorMessage from 'src/components/ErrorMessage/TimeoutErrorMessage';\nimport DatabaseErrorMessage from 'src/components/ErrorMessage/DatabaseErrorMessage';\nimport ParameterErrorMessage from 'src/components/ErrorMessage/ParameterErrorMessage';\nimport DatasetNotFoundErrorMessage from 'src/components/ErrorMessage/DatasetNotFoundErrorMessage';\n\nimport setupErrorMessagesExtra from './setupErrorMessagesExtra';\n\nexport default function setupErrorMessages() {\n  const errorMessageComponentRegistry = getErrorMessageComponentRegistry();\n\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.FRONTEND_TIMEOUT_ERROR,\n    TimeoutErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.BACKEND_TIMEOUT_ERROR,\n    TimeoutErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.DATABASE_NOT_FOUND_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.GENERIC_DB_ENGINE_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.GENERIC_BACKEND_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.COLUMN_DOES_NOT_EXIST_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.TABLE_DOES_NOT_EXIST_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.MISSING_TEMPLATE_PARAMS_ERROR,\n    ParameterErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.INVALID_TEMPLATE_PARAMS_ERROR,\n    ParameterErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.RESULTS_BACKEND_NOT_CONFIGURED_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.DML_NOT_ALLOWED_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.INVALID_CTAS_QUERY_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.INVALID_CVAS_QUERY_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.QUERY_SECURITY_ACCESS_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.CONNECTION_INVALID_HOSTNAME_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.RESULTS_BACKEND_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.ASYNC_WORKERS_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.SQLLAB_TIMEOUT_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.CONNECTION_PORT_CLOSED_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.CONNECTION_HOST_DOWN_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.CONNECTION_INVALID_USERNAME_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.CONNECTION_INVALID_PASSWORD_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.CONNECTION_ACCESS_DENIED_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.CONNECTION_UNKNOWN_DATABASE_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.SCHEMA_DOES_NOT_EXIST_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.OBJECT_DOES_NOT_EXIST_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.SYNTAX_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.CONNECTION_DATABASE_PERMISSIONS_ERROR,\n    DatabaseErrorMessage,\n  );\n  errorMessageComponentRegistry.registerValue(\n    ErrorTypeEnum.FAILED_FETCHING_DATASOURCE_INFO_ERROR,\n    DatasetNotFoundErrorMessage,\n  );\n  setupErrorMessagesExtra();\n}\n"]},"metadata":{},"sourceType":"module"}