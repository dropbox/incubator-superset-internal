import React from 'react';
import cx from 'classnames';
import { Area } from '@vx/shape';
import { ClipPath } from '@vx/clip-path';

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

function Threshold(_ref) {
  var className = _ref.className,
      curve = _ref.curve,
      xScale = _ref.xScale,
      yScale = _ref.yScale,
      clipAboveTo = _ref.clipAboveTo,
      clipBelowTo = _ref.clipBelowTo,
      data = _ref.data,
      x = _ref.x,
      y0 = _ref.y0,
      y1 = _ref.y1,
      aboveAreaProps = _ref.aboveAreaProps,
      belowAreaProps = _ref.belowAreaProps;

  return React.createElement(
    'g',
    { className: cx('vx-threshold', className) },
    React.createElement(
      Area,
      { curve: curve, data: data, x: x, y1: y1, xScale: xScale, yScale: yScale },
      function (_ref2) {
        var path = _ref2.path;

        return React.createElement(
          'g',
          null,
          React.createElement(
            ClipPath,
            { id: 'threshold-clip-below' },
            React.createElement('path', { d: path.y0(clipBelowTo)(data) })
          ),
          React.createElement(
            ClipPath,
            { id: 'threshold-clip-above' },
            React.createElement('path', { d: path.y0(clipAboveTo)(data) })
          )
        );
      }
    ),
    React.createElement(Area, _extends({
      curve: curve,
      data: data,
      x: x,
      y0: y0,
      y1: y1,
      xScale: xScale,
      yScale: yScale,
      strokeWidth: 0,
      clipPath: 'url(#threshold-clip-below)'
    }, belowAreaProps)),
    React.createElement(Area, _extends({
      curve: curve,
      data: data,
      x: x,
      y0: y0,
      y1: y1,
      xScale: xScale,
      yScale: yScale,
      strokeWidth: 0,
      clipPath: 'url(#threshold-clip-above)'
    }, aboveAreaProps))
  );
}

export { Threshold };
