import React from 'react';

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var objectWithoutProperties = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

var ClipPath = (function (_ref) {
  var id = _ref.id,
      children = _ref.children,
      restProps = objectWithoutProperties(_ref, ['id', 'children']);
  return React.createElement(
    'defs',
    null,
    React.createElement(
      'clipPath',
      _extends({ id: id }, restProps),
      children
    )
  );
});

var CircleClipPath = (function (_ref) {
  var id = _ref.id,
      cx = _ref.cx,
      cy = _ref.cy,
      r = _ref.r,
      restProps = objectWithoutProperties(_ref, ['id', 'cx', 'cy', 'r']);
  return React.createElement(
    ClipPath,
    { id: id },
    React.createElement('circle', _extends({ cx: cx, cy: cy, r: r }, restProps))
  );
});

var RectClipPath = (function (_ref) {
  var id = _ref.id,
      _ref$x = _ref.x,
      x = _ref$x === undefined ? 0 : _ref$x,
      _ref$y = _ref.y,
      y = _ref$y === undefined ? 0 : _ref$y,
      _ref$width = _ref.width,
      width = _ref$width === undefined ? 1 : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === undefined ? 1 : _ref$height,
      restProps = objectWithoutProperties(_ref, ['id', 'x', 'y', 'width', 'height']);
  return React.createElement(
    ClipPath,
    { id: id },
    React.createElement('rect', _extends({ x: x, y: y, width: width, height: height }, restProps))
  );
});

export { ClipPath, CircleClipPath, RectClipPath };
