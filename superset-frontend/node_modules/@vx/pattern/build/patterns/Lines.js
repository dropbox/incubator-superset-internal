'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PatternLines;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Pattern = require('./Pattern');

var _Pattern2 = _interopRequireDefault(_Pattern);

var _constants = require('../constants');

var _constants2 = _interopRequireDefault(_constants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function pathForOrientation(_ref) {
  var height = _ref.height,
      orientation = _ref.orientation;

  var path = void 0;

  switch (orientation) {
    case _constants2.default.vertical:
      path = 'M ' + height / 2 + ', 0 l 0, ' + height;
      break;
    case _constants2.default.horizontal:
      path = 'M 0,' + height / 2 + ' l ' + height + ',0';
      break;
    case _constants2.default.diagonal:
      path = 'M 0,' + height + ' l ' + height + ',' + -height + ' M ' + -height / 4 + ',' + height / 4 + ' l ' + height / 2 + ',' + -height / 2 + '\n             M ' + 3 / 4 * height + ',' + 5 / 4 * height + ' l ' + height / 2 + ',' + -height / 2;
      break;
    default:
      path = 'M ' + height / 2 + ', 0 l 0, ' + height;
  }

  return path;
}

function PatternLines(_ref2) {
  var id = _ref2.id,
      width = _ref2.width,
      height = _ref2.height,
      path = _ref2.path,
      stroke = _ref2.stroke,
      strokeWidth = _ref2.strokeWidth,
      strokeDasharray = _ref2.strokeDasharray,
      _ref2$strokeLinecap = _ref2.strokeLinecap,
      strokeLinecap = _ref2$strokeLinecap === undefined ? 'square' : _ref2$strokeLinecap,
      _ref2$shapeRendering = _ref2.shapeRendering,
      shapeRendering = _ref2$shapeRendering === undefined ? 'auto' : _ref2$shapeRendering,
      _ref2$orientation = _ref2.orientation,
      orientation = _ref2$orientation === undefined ? ['vertical'] : _ref2$orientation,
      background = _ref2.background,
      className = _ref2.className;

  if (!Array.isArray(orientation)) orientation = [orientation];

  return _react2.default.createElement(
    _Pattern2.default,
    {
      id: id,
      width: width,
      height: height
    },
    !!background && _react2.default.createElement('rect', {
      className: (0, _classnames2.default)('vx-pattern-line-background'),
      width: width,
      height: height,
      fill: background
    }),
    orientation.map(function (o, i) {
      return _react2.default.createElement('path', {
        key: 'vx-' + id + '-line-' + o + '-' + i,
        className: (0, _classnames2.default)('vx-pattern-line', className),
        d: pathForOrientation({ orientation: o, height: height }),
        stroke: stroke,
        strokeWidth: strokeWidth,
        strokeDasharray: strokeDasharray,
        strokeLinecap: strokeLinecap,
        shapeRendering: shapeRendering
      });
    })
  );
}

PatternLines.propTypes = {
  id: _propTypes2.default.string.isRequired,
  width: _propTypes2.default.number.isRequired,
  height: _propTypes2.default.number.isRequired,
  background: _propTypes2.default.string,
  stroke: _propTypes2.default.string.isRequired,
  strokeWidth: _propTypes2.default.number.isRequired,
  strokeDasharray: _propTypes2.default.string,
  className: _propTypes2.default.string
};