{"version":3,"sources":["PropertyLabel.tsx"],"names":["styles","hasProperty","whiteSpace","PropertyLabel","property","required","defaultProps"],"mappings":"mLAAA,oDAEA,GAAMA,CAAAA,MAAM,CAAG,CACbC,WAAW,CAAE,CACXC,UAAU,CAAE,QADD,CADA,CAAf,CAcA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAgD,IAA7CC,CAAAA,QAA6C,MAA7CA,QAA6C,CAAnCC,QAAmC,MAAnCA,QAAmC,CACpE,GAAI,CAACD,QAAL,CAAe,CACb,MAAO,KACR,CAED,MACE,yCAAM,KAAK,CAAEJ,MAAM,CAACC,WAApB,EACGG,QADH,CAEGC,QAAQ,CAAG,EAAH,CAAQ,GAFnB,KAEyB,GAFzB,CAKH,CAXD,CAaAF,aAAa,CAACG,YAAd,CAA6B,CAC3BF,QAAQ,CAAE,EADiB,CAE3BC,QAAQ,CAAE,KAFiB,CAA7B,C,aAKeF,a","sourcesContent":["import React from \"react\";\n\nconst styles = {\n  hasProperty: {\n    whiteSpace: \"nowrap\"\n  } as const\n};\n\ninterface PropertyLabelProps {\n  /** The name of the property */\n  property?: string;\n  /** Whether the property is required */\n  required?: boolean;\n}\n\n/** Render a label for a property */\nconst PropertyLabel = ({ property, required }: PropertyLabelProps) => {\n  if (!property) {\n    return null;\n  }\n\n  return (\n    <span style={styles.hasProperty}>\n      {property}\n      {required ? \"\" : \"?\"}:{\" \"}\n    </span>\n  );\n};\n\nPropertyLabel.defaultProps = {\n  property: \"\",\n  required: false\n};\n\nexport default PropertyLabel;\n"]}
