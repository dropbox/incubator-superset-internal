{"version":3,"sources":["OneOfType.tsx"],"names":["OneOfType","propType","propTypes","reduce","acc","value","i","key","name","length"],"mappings":"uRAAA,oDAEA,wEACA,8BAGA,GAAMA,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA2C,IAAxCC,CAAAA,QAAwC,MAAxCA,QAAwC,CAC3D,GAAMC,CAAAA,SAAS,CAAG,wBAAaD,QAAb,CAAlB,CAEA,MACE,6CACGC,SAAS,CAACC,MAAV,CAAiB,SAACC,GAAD,CAAMC,KAAN,CAAaC,CAAb,CAAmB,CACnC,GAAMC,CAAAA,GAAG,WAAMF,KAAK,CAACG,IAAZ,SAAmB,SAAWH,CAAAA,KAAX,YAAuBA,KAAK,CAACA,KAA7B,EAAuC,EAA1D,CAAT,CAEA,mDACKD,GADL,GAEE,gCAAC,0BAAD,EAAgB,GAAG,CAAEG,GAArB,CAA0B,QAAQ,CAAEF,KAApC,EAFF,CAGEC,CAAC,CAAGJ,SAAS,CAACO,MAAV,CAAmB,CAAvB,CACE,wCAAM,GAAG,WAAKF,GAAL,cAAT,QADF,CAEI,IALN,EAOD,CAVA,CAUE,EAVF,CADH,CAcH,CAlBD,C,aAoBeP,S","sourcesContent":["import React from \"react\";\n\nimport PrettyPropType from \"./PrettyPropType\";\nimport { getPropTypes, PropRenderer, UnionType } from \"./types\";\n\n/** Render a oneOf type */\nconst OneOfType = ({ propType }: PropRenderer<UnionType>) => {\n  const propTypes = getPropTypes(propType);\n\n  return (\n    <span>\n      {propTypes.reduce((acc, value, i) => {\n        const key = `${value.name}${\"value\" in value ? `-${value.value}` : \"\"}`;\n\n        return [\n          ...acc,\n          <PrettyPropType key={key} propType={value} />,\n          i < propTypes.length - 1 ? (\n            <span key={`${key}-separator`}> | </span>\n          ) : null\n        ];\n      }, [] as React.ReactNode[])}\n    </span>\n  );\n};\n\nexport default OneOfType;\n"]}
