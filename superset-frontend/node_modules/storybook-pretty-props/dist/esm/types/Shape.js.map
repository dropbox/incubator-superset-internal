{"version":3,"sources":["Shape.tsx"],"names":["React","PrettyPropType","PropertyLabel","getPropTypes","HighlightButton","MARGIN_SIZE","Shape","propType","depth","useState","minimized","setMinimized","propTypes","toggle","Object","keys","map","childProperty","marginLeft","required","defaultProps"],"mappings":"iEAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAEA,OAASC,YAAT,KAAsD,SAAtD,CACA,OAASC,eAAT,KAAgC,UAAhC,CAEA,GAAMC,CAAAA,WAAW,CAAG,EAApB,CAQA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAqC,IAAlCC,CAAAA,QAAkC,MAAlCA,QAAkC,CAAxBC,KAAwB,MAAxBA,KAAwB,qBACfR,KAAK,CAACS,QAAN,CAAe,IAAf,CADe,oDAC1CC,SAD0C,qBAC/BC,YAD+B,qBAEjD,GAAMC,CAAAA,SAAS,CAAGT,YAAY,CAACI,QAAD,CAA9B,CAGA,GAAMM,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SAAMF,CAAAA,YAAY,CAAC,CAACD,SAAF,CAAlB,CAAf,CAEA,MACE,iCACE,oBAAC,eAAD,EAAiB,OAAO,CAAEG,MAA1B,EAAmC,GAAnC,CADF,CAEE,oBAAC,eAAD,EAAiB,OAAO,CAAEA,MAA1B,QAFF,CAIG,CAACH,SAAD,EACCI,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuBI,GAAvB,CAA2B,SAAAC,aAAa,QACtC,4BAAK,GAAG,CAAEA,aAAV,CAAyB,KAAK,CAAE,CAAEC,UAAU,CAAEV,KAAK,CAAGH,WAAtB,CAAhC,EACE,oBAAC,aAAD,EACE,QAAQ,CAAEY,aADZ,CAEE,QAAQ,CAAEL,SAAS,CAACK,aAAD,CAAT,CAAyBE,QAFrC,EADF,CAKE,oBAAC,cAAD,EACE,KAAK,CAAEX,KAAK,CAAG,CADjB,CAEE,QAAQ,CAAEI,SAAS,CAACK,aAAD,CAFrB,EALF,KADsC,CAAxC,CALJ,CAmBE,oBAAC,eAAD,EAAiB,OAAO,CAAEJ,MAA1B,EAAmC,GAAnC,CAnBF,CAsBH,CA9BD,CAgCAP,KAAK,CAACc,YAAN,CAAqB,CACnBb,QAAQ,CAAE,IADS,CAArB,CAIA,cAAeD,CAAAA,KAAf","sourcesContent":["import React from \"react\";\n\nimport PrettyPropType from \"./PrettyPropType\";\nimport PropertyLabel from \"./PropertyLabel\";\n\nimport { getPropTypes, ShapeType, PropRenderer } from \"./types\";\nimport { HighlightButton } from '../utils';\n\nconst MARGIN_SIZE = 15;\n\ninterface ShapeProps extends PropRenderer<ShapeType> {\n  /** How far into the shape should we render */\n  depth: number;\n}\n\n/** Render and interface/shape prop type */\nconst Shape = ({ propType, depth }: ShapeProps) => {\n  const [minimized, setMinimized] = React.useState(true);\n  const propTypes = getPropTypes(propType);\n\n  /** Toggle viewing the entire shape */\n  const toggle = () => setMinimized(!minimized);\n\n  return (\n    <span>\n      <HighlightButton onClick={toggle}>{\"{\"}</HighlightButton>\n      <HighlightButton onClick={toggle}>...</HighlightButton>\n\n      {!minimized &&\n        Object.keys(propTypes).map(childProperty => (\n          <div key={childProperty} style={{ marginLeft: depth * MARGIN_SIZE }}>\n            <PropertyLabel\n              property={childProperty}\n              required={propTypes[childProperty].required}\n            />\n            <PrettyPropType\n              depth={depth + 1}\n              propType={propTypes[childProperty]}\n            />\n            ,\n          </div>\n        ))}\n\n      <HighlightButton onClick={toggle}>{\"}\"}</HighlightButton>\n    </span>\n  );\n};\n\nShape.defaultProps = {\n  propType: null\n};\n\nexport default Shape;\n"]}
