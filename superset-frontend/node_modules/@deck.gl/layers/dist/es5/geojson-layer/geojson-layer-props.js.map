{"version":3,"sources":["../../../src/geojson-layer/geojson-layer-props.js"],"names":["createEmptyLayerProps","points","lines","polygons","polygonsOutline","getCoordinates","f","geometry","coordinates","createLayerPropsFromFeatures","features","featuresDiff","layerProps","pointFeatures","lineFeatures","polygonFeatures","polygonOutlineFeatures","data","_dataDiff","getPosition","getPath","getPolygon","createLayerPropsFromBinary","geojsonBinary","encodePickingColor","customPickingColors","length","positions","value","size","attributes","instancePickingColors","properties","numericProps","featureIds","pathIndices","startIndices","_pathType","polygonIndices","pickingColors","_normalize","triangles","indices","primitivePolygonIndices"],"mappings":"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","sourcesContent":["import {calculatePickingColors} from './geojson-binary';\n\nfunction createEmptyLayerProps() {\n  return {\n    points: {},\n    lines: {},\n    polygons: {},\n    polygonsOutline: {}\n  };\n}\n\nfunction getCoordinates(f) {\n  return f.geometry.coordinates;\n}\n\nexport function createLayerPropsFromFeatures(features, featuresDiff) {\n  const layerProps = createEmptyLayerProps();\n  const {pointFeatures, lineFeatures, polygonFeatures, polygonOutlineFeatures} = features;\n\n  layerProps.points.data = pointFeatures;\n  layerProps.points._dataDiff = featuresDiff.pointFeatures && (() => featuresDiff.pointFeatures);\n  layerProps.points.getPosition = getCoordinates;\n\n  layerProps.lines.data = lineFeatures;\n  layerProps.lines._dataDiff = featuresDiff.lineFeatures && (() => featuresDiff.lineFeatures);\n  layerProps.lines.getPath = getCoordinates;\n\n  layerProps.polygons.data = polygonFeatures;\n  layerProps.polygons._dataDiff =\n    featuresDiff.polygonFeatures && (() => featuresDiff.polygonFeatures);\n  layerProps.polygons.getPolygon = getCoordinates;\n\n  layerProps.polygonsOutline.data = polygonOutlineFeatures;\n  layerProps.polygonsOutline._dataDiff =\n    featuresDiff.polygonOutlineFeatures && (() => featuresDiff.polygonOutlineFeatures);\n  layerProps.polygonsOutline.getPath = getCoordinates;\n\n  return layerProps;\n}\n\nexport function createLayerPropsFromBinary(geojsonBinary, encodePickingColor) {\n  const layerProps = createEmptyLayerProps();\n  const {points, lines, polygons} = geojsonBinary;\n\n  const customPickingColors = calculatePickingColors(geojsonBinary, encodePickingColor);\n\n  layerProps.points.data = {\n    length: points.positions.value.length / points.positions.size,\n    attributes: {\n      getPosition: points.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.points\n      }\n    },\n    properties: points.properties,\n    numericProps: points.numericProps,\n    featureIds: points.featureIds\n  };\n\n  layerProps.lines.data = {\n    length: lines.pathIndices.value.length - 1,\n    startIndices: lines.pathIndices.value,\n    attributes: {\n      getPath: lines.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.lines\n      }\n    },\n    properties: lines.properties,\n    numericProps: lines.numericProps,\n    featureIds: lines.featureIds\n  };\n  layerProps.lines._pathType = 'open';\n\n  layerProps.polygons.data = {\n    length: polygons.polygonIndices.value.length - 1,\n    startIndices: polygons.polygonIndices.value,\n    attributes: {\n      getPolygon: polygons.positions,\n      pickingColors: {\n        size: 3,\n        value: customPickingColors.polygons\n      }\n    },\n    properties: polygons.properties,\n    numericProps: polygons.numericProps,\n    featureIds: polygons.featureIds\n  };\n  layerProps.polygons._normalize = false;\n  if (polygons.triangles) {\n    layerProps.polygons.data.attributes.indices = polygons.triangles.value;\n  }\n\n  layerProps.polygonsOutline.data = {\n    length: polygons.primitivePolygonIndices.value.length - 1,\n    startIndices: polygons.primitivePolygonIndices.value,\n    attributes: {\n      getPath: polygons.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.polygons\n      }\n    },\n    properties: polygons.properties,\n    numericProps: polygons.numericProps,\n    featureIds: polygons.featureIds\n  };\n  layerProps.polygonsOutline._pathType = 'open';\n\n  return layerProps;\n}\n"],"file":"geojson-layer-props.js"}