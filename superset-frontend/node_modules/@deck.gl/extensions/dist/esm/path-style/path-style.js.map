{"version":3,"sources":["../../../src/path-style/path-style.js"],"names":["LayerExtension","_mergeShaders","mergeShaders","dashShaders","offsetShaders","dist","defaultProps","getDashArray","type","value","getOffset","dashJustified","dashGapPickable","PathStyleExtension","constructor","dash","offset","highPrecisionDash","isEnabled","layer","state","pathTesselator","getShaders","extension","result","opts","initializeState","context","attributeManager","getAttributeManager","enabled","addInstanced","instanceDashArrays","size","accessor","instanceDashOffsets","transform","getDashOffsets","bind","instanceOffsets","updateState","params","uniforms","dashAlignMode","props","Boolean","model","setUniforms","path","positionSize","positionFormat","isNested","Array","isArray","geometrySize","length","p","prevP","i","slice","projectPosition","extensionName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension, _mergeShaders as mergeShaders} from '@deck.gl/core';\nimport {dashShaders, offsetShaders} from './shaders.glsl';\nimport {dist} from 'gl-matrix/vec3';\n\nconst defaultProps = {\n  getDashArray: {type: 'accessor', value: [0, 0]},\n  getOffset: {type: 'accessor', value: 0},\n  dashJustified: false,\n  dashGapPickable: false\n};\n\nexport default class PathStyleExtension extends LayerExtension {\n  constructor({dash = false, offset = false, highPrecisionDash = false} = {}) {\n    super({dash: dash || highPrecisionDash, offset, highPrecisionDash});\n  }\n\n  isEnabled(layer) {\n    return layer.state.pathTesselator;\n  }\n\n  getShaders(extension) {\n    if (!extension.isEnabled(this)) {\n      return null;\n    }\n\n    // Merge shader injection\n    let result = {};\n    if (extension.opts.dash) {\n      result = mergeShaders(result, dashShaders);\n    }\n    if (extension.opts.offset) {\n      result = mergeShaders(result, offsetShaders);\n    }\n\n    return result;\n  }\n\n  initializeState(context, extension) {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager || !extension.isEnabled(this)) {\n      // This extension only works with the PathLayer\n      return;\n    }\n\n    extension.enabled = true;\n\n    if (extension.opts.dash) {\n      attributeManager.addInstanced({\n        instanceDashArrays: {size: 2, accessor: 'getDashArray'}\n      });\n    }\n    if (extension.opts.highPrecisionDash) {\n      attributeManager.addInstanced({\n        instanceDashOffsets: {\n          size: 1,\n          accessor: 'getPath',\n          transform: extension.getDashOffsets.bind(this)\n        }\n      });\n    }\n    if (extension.opts.offset) {\n      attributeManager.addInstanced({\n        instanceOffsets: {size: 1, accessor: 'getOffset'}\n      });\n    }\n  }\n\n  updateState(params, extension) {\n    if (!extension.isEnabled(this)) {\n      return;\n    }\n\n    const uniforms = {};\n\n    if (extension.opts.dash) {\n      uniforms.dashAlignMode = this.props.dashJustified ? 1 : 0;\n      uniforms.dashGapPickable = Boolean(this.props.dashGapPickable);\n    }\n\n    this.state.model.setUniforms(uniforms);\n  }\n\n  getDashOffsets(path) {\n    const result = [0];\n    const positionSize = this.props.positionFormat === 'XY' ? 2 : 3;\n    const isNested = Array.isArray(path[0]);\n    const geometrySize = isNested ? path.length : path.length / positionSize;\n\n    let p;\n    let prevP;\n    for (let i = 0; i < geometrySize - 1; i++) {\n      p = isNested ? path[i] : path.slice(i * positionSize, i * positionSize + positionSize);\n      p = this.projectPosition(p);\n\n      if (i > 0) {\n        result[i] = result[i - 1] + dist(prevP, p);\n      }\n\n      prevP = p;\n    }\n    return result;\n  }\n}\n\nPathStyleExtension.extensionName = 'PathStyleExtension';\nPathStyleExtension.defaultProps = defaultProps;\n"],"file":"path-style.js"}