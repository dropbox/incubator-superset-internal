{"version":3,"sources":["../../src/config.js"],"names":["API_VERSIONS","defaultClassicCredentials","username","apiKey","region","mapsUrl","defaultCloudNativeCredentials","accessToken","apiBaseUrl","credentials","setDefaultCredentials","opts","apiVersion","V2","V1","V3","Error","buildMapsUrlFromBase","getDefaultCredentials","suffix","endsWith","substring"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,uBAA3B;AAEA,MAAMC,yBAAyB,GAAG;AAChCC,EAAAA,QAAQ,EAAE,QADsB;AAEhCC,EAAAA,MAAM,EAAE,gBAFwB;AAGhCC,EAAAA,MAAM,EAAE,IAHwB;AAIhCC,EAAAA,OAAO,EAAE;AAJuB,CAAlC;AAOA,MAAMC,6BAA6B,GAAG;AACpCC,EAAAA,WAAW,EAAE,IADuB;AAEpCC,EAAAA,UAAU,EAAE,IAFwB;AAGpCH,EAAAA,OAAO,EAAE;AAH2B,CAAtC;AAMA,IAAII,WAAW,GAAG,EAAlB;AAEAC,qBAAqB,CAAC,EAAD,CAArB;AAEA,OAAO,SAASA,qBAAT,CAA+BC,IAA/B,EAAqC;AAC1C,QAAMC,UAAU,GAAGD,IAAI,CAACC,UAAL,IAAmBZ,YAAY,CAACa,EAAnD;;AAEA,UAAQD,UAAR;AACE,SAAKZ,YAAY,CAACc,EAAlB;AACEH,MAAAA,IAAI,CAACN,OAAL,GAAeM,IAAI,CAACN,OAAL,IAAgB,qCAA/B;AACAI,MAAAA,WAAW,GAAG;AACZG,QAAAA,UADY;AAEZ,WAAGX,yBAFS;AAGZ,WAAGU;AAHS,OAAd;AAKA;;AAEF,SAAKX,YAAY,CAACa,EAAlB;AACEF,MAAAA,IAAI,CAACN,OAAL,GAAeM,IAAI,CAACN,OAAL,IAAgB,oDAA/B;AACAI,MAAAA,WAAW,GAAG;AACZG,QAAAA,UADY;AAEZ,WAAGX,yBAFS;AAGZ,WAAGU;AAHS,OAAd;AAMA;;AACF,SAAKX,YAAY,CAACe,EAAlB;AACE,UAAI,CAACJ,IAAI,CAACH,UAAV,EAAsB;AACpB,cAAM,IAAIQ,KAAJ,uBAEFhB,YAAY,CAACe,EAFX,wGAAN;AAKD;;AAED,YAAMP,UAAU,GAAGG,IAAI,CAACH,UAAL,IAAmBF,6BAA6B,CAACE,UAApE;AACAG,MAAAA,IAAI,CAACN,OAAL,GAAeM,IAAI,CAACN,OAAL,IAAgBY,oBAAoB,CAACT,UAAD,CAAnD;AACAC,MAAAA,WAAW,GAAG;AACZG,QAAAA,UADY;AAEZ,WAAGN,6BAFS;AAGZ,WAAGK;AAHS,OAAd;AAKA;;AACF;AACE,YAAM,IAAIK,KAAJ,+BAAiCJ,UAAjC,8BAAN;AArCJ;AAuCD;AAED,OAAO,SAASM,qBAAT,GAAiC;AACtC,SAAOT,WAAP;AACD;AAED,OAAO,SAASQ,oBAAT,CAA8BT,UAA9B,EAA0C;AAC/C,MAAIW,MAAM,GAAG,UAAb;;AACA,MAAIX,UAAU,CAACY,QAAX,CAAoB,GAApB,CAAJ,EAA8B;AAC5BD,IAAAA,MAAM,GAAGA,MAAM,CAACE,SAAP,CAAiB,CAAjB,CAAT;AACD;;AAED,mBAAUb,UAAV,SAAuBW,MAAvB;AACD","sourcesContent":["import {API_VERSIONS} from './api/maps-api-common';\n\nconst defaultClassicCredentials = {\n  username: 'public',\n  apiKey: 'default_public',\n  region: 'us',\n  mapsUrl: null\n};\n\nconst defaultCloudNativeCredentials = {\n  accessToken: null,\n  apiBaseUrl: null,\n  mapsUrl: null\n};\n\nlet credentials = {};\n\nsetDefaultCredentials({});\n\nexport function setDefaultCredentials(opts) {\n  const apiVersion = opts.apiVersion || API_VERSIONS.V2;\n\n  switch (apiVersion) {\n    case API_VERSIONS.V1:\n      opts.mapsUrl = opts.mapsUrl || 'https://{user}.carto.com/api/v1/map';\n      credentials = {\n        apiVersion,\n        ...defaultClassicCredentials,\n        ...opts\n      };\n      break;\n\n    case API_VERSIONS.V2:\n      opts.mapsUrl = opts.mapsUrl || 'https://maps-api-v2.{region}.carto.com/user/{user}';\n      credentials = {\n        apiVersion,\n        ...defaultClassicCredentials,\n        ...opts\n      };\n\n      break;\n    case API_VERSIONS.V3:\n      if (!opts.apiBaseUrl) {\n        throw new Error(\n          `API version ${\n            API_VERSIONS.V3\n          } requires to define apiBaseUrl at credentials. Go to https://app.carto.com to get your apiBaseUrl.`\n        );\n      }\n\n      const apiBaseUrl = opts.apiBaseUrl || defaultCloudNativeCredentials.apiBaseUrl;\n      opts.mapsUrl = opts.mapsUrl || buildMapsUrlFromBase(apiBaseUrl);\n      credentials = {\n        apiVersion,\n        ...defaultCloudNativeCredentials,\n        ...opts\n      };\n      break;\n    default:\n      throw new Error(`Invalid API version ${apiVersion}. Use API_VERSIONS enum.`);\n  }\n}\n\nexport function getDefaultCredentials() {\n  return credentials;\n}\n\nexport function buildMapsUrlFromBase(apiBaseUrl) {\n  let suffix = '/v3/maps';\n  if (apiBaseUrl.endsWith('/')) {\n    suffix = suffix.substring(1);\n  }\n\n  return `${apiBaseUrl}${suffix}`;\n}\n"],"file":"config.js"}