{"version":3,"sources":["../../../src/lib/deck-picker.js"],"names":["DeckPicker","gl","pickingFBO","pickLayersPass","PickLayersPass","layerFilter","lastPickedInfo","index","layerId","info","props","_pickable","delete","depthFBO","color","opts","_pickClosestObject","_pickVisibleObjects","x","y","layers","viewports","lastPickedLayerId","layer","id","lastPickedViewportId","viewport","find","l","v","coordinate","unproject","Object","assign","object","Framebuffer","isSupported","colorBufferFloat","attach","Texture2D","format","type","resize","width","canvas","height","pickableLayers","filter","isPickable","isComposite","length","log","warn","slice","views","radius","depth","mode","unproject3D","onViewportActive","_getPickable","result","emptyInfo","_resizeBuffer","pixelRatio","devicePixelRange","devicePixel","Math","floor","deviceRadius","round","deviceRect","_getPickingRect","deviceX","deviceY","deviceWidth","deviceHeight","infos","affectedLayers","i","pickedColors","_drawAndSample","pass","redrawReason","pickInfo","z","pickedLayer","zValues","pickedX","pickedY","pickZ","distanceScales","metersPerUnit","position","pickedColor","disablePickingIndex","pickedObjectIndex","values","push","restorePickingColors","get","maxObjects","leftTop","deviceLeft","deviceTop","rightBottom","deviceRight","deviceBottom","pickInfos","uniqueInfos","Map","isMaxObjects","Number","isFinite","size","picked","has","set","Array","from","render","Float32Array","Uint8Array","sourceX","sourceY","sourceWidth","sourceHeight","target","max","min"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {\n  Framebuffer,\n  Texture2D,\n  isWebGL2,\n  readPixelsToArray,\n  cssToDeviceRatio,\n  cssToDevicePixels\n} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\nimport log from '../utils/log';\nimport PickLayersPass from '../passes/pick-layers-pass';\nimport {getClosestObject, getUniqueObjects} from './picking/query-object';\nimport {processPickInfo, getLayerPickingInfo, getEmptyPickingInfo} from './picking/pick-info';\n\nexport default class DeckPicker {\n  constructor(gl) {\n    this.gl = gl;\n    this.pickingFBO = null;\n    this.pickLayersPass = new PickLayersPass(gl);\n    this.layerFilter = null;\n    this.lastPickedInfo = {\n      // For callback tracking and auto highlight\n      index: -1,\n      layerId: null,\n      info: null\n    };\n  }\n\n  setProps(props) {\n    if ('layerFilter' in props) {\n      this.layerFilter = props.layerFilter;\n    }\n\n    if ('_pickable' in props) {\n      this._pickable = props._pickable;\n    }\n  }\n\n  finalize() {\n    if (this.pickingFBO) {\n      this.pickingFBO.delete();\n    }\n    if (this.depthFBO) {\n      this.depthFBO.color.delete();\n      this.depthFBO.delete();\n    }\n  }\n\n  // Pick the closest info at given coordinate\n  pickObject(opts) {\n    return this._pickClosestObject(opts);\n  }\n\n  // Get all unique infos within a bounding box\n  pickObjects(opts) {\n    return this._pickVisibleObjects(opts);\n  }\n\n  // Returns a new picking info object by assuming the last picked object is still picked\n  getLastPickedObject({x, y, layers, viewports}, lastPickedInfo = this.lastPickedInfo.info) {\n    const lastPickedLayerId = lastPickedInfo && lastPickedInfo.layer && lastPickedInfo.layer.id;\n    const lastPickedViewportId =\n      lastPickedInfo && lastPickedInfo.viewport && lastPickedInfo.viewport.id;\n    const layer = lastPickedLayerId ? layers.find(l => l.id === lastPickedLayerId) : null;\n    const viewport =\n      (lastPickedViewportId && viewports.find(v => v.id === lastPickedViewportId)) || viewports[0];\n    const coordinate = viewport && viewport.unproject([x - viewport.x, y - viewport.y]);\n\n    const info = {\n      x,\n      y,\n      viewport,\n      coordinate,\n      layer\n    };\n\n    if (layer) {\n      return {...lastPickedInfo, ...info};\n    }\n    return Object.assign(info, {color: null, object: null, index: -1});\n  }\n\n  // Private\n  _resizeBuffer() {\n    const {gl} = this;\n\n    // Create a frame buffer if not already available\n    if (!this.pickingFBO) {\n      this.pickingFBO = new Framebuffer(gl);\n      if (Framebuffer.isSupported(gl, {colorBufferFloat: true})) {\n        this.depthFBO = new Framebuffer(gl);\n        this.depthFBO.attach({\n          [GL.COLOR_ATTACHMENT0]: new Texture2D(gl, {\n            format: isWebGL2(gl) ? GL.RGBA32F : GL.RGBA,\n            type: GL.FLOAT\n          })\n        });\n      }\n    }\n    // Resize it to current canvas size (this is a noop if size hasn't changed)\n    this.pickingFBO.resize({width: gl.canvas.width, height: gl.canvas.height});\n    if (this.depthFBO) {\n      this.depthFBO.resize({width: gl.canvas.width, height: gl.canvas.height});\n    }\n    return this.pickingFBO;\n  }\n\n  // picking can only handle up to 255 layers. Drop non-pickable/invisible layers from the list.\n  _getPickable(layers) {\n    if (this._pickable === false) {\n      return null;\n    }\n    const pickableLayers = layers.filter(layer => layer.isPickable() && !layer.isComposite);\n    if (pickableLayers.length > 255) {\n      log.warn('Too many pickable layers, only picking the first 255')();\n      return pickableLayers.slice(0, 255);\n    }\n    return pickableLayers.length ? pickableLayers : null;\n  }\n\n  // Pick the closest object at the given (x,y) coordinate\n  // eslint-disable-next-line max-statements,complexity\n  _pickClosestObject({\n    layers,\n    views,\n    viewports,\n    x,\n    y,\n    radius = 0,\n    depth = 1,\n    mode = 'query',\n    unproject3D,\n    onViewportActive\n  }) {\n    layers = this._getPickable(layers);\n\n    if (!layers) {\n      return {\n        result: [],\n        emptyInfo: getEmptyPickingInfo({viewports, x, y})\n      };\n    }\n\n    this._resizeBuffer();\n\n    // Convert from canvas top-left to WebGL bottom-left coordinates\n    // Top-left coordinates [x, y] to bottom-left coordinates [deviceX, deviceY]\n    // And compensate for pixelRatio\n    const pixelRatio = cssToDeviceRatio(this.gl);\n    const devicePixelRange = cssToDevicePixels(this.gl, [x, y], true);\n    const devicePixel = [\n      devicePixelRange.x + Math.floor(devicePixelRange.width / 2),\n      devicePixelRange.y + Math.floor(devicePixelRange.height / 2)\n    ];\n\n    const deviceRadius = Math.round(radius * pixelRatio);\n    const {width, height} = this.pickingFBO;\n    const deviceRect = this._getPickingRect({\n      deviceX: devicePixel[0],\n      deviceY: devicePixel[1],\n      deviceRadius,\n      deviceWidth: width,\n      deviceHeight: height\n    });\n\n    let infos;\n    const result = [];\n    const affectedLayers = {};\n\n    for (let i = 0; i < depth; i++) {\n      const pickedColors =\n        deviceRect &&\n        this._drawAndSample({\n          layers,\n          views,\n          viewports,\n          onViewportActive,\n          deviceRect,\n          pass: `picking:${mode}`,\n          redrawReason: mode\n        });\n\n      const pickInfo = getClosestObject({\n        pickedColors,\n        layers,\n        deviceX: devicePixel[0],\n        deviceY: devicePixel[1],\n        deviceRadius,\n        deviceRect\n      });\n\n      let z;\n      if (pickInfo.pickedLayer && unproject3D && this.depthFBO) {\n        const zValues = this._drawAndSample({\n          layers: [pickInfo.pickedLayer],\n          views,\n          viewports,\n          onViewportActive,\n          deviceRect: {x: pickInfo.pickedX, y: pickInfo.pickedY, width: 1, height: 1},\n          pass: `picking:${mode}`,\n          redrawReason: 'pick-z',\n          pickZ: true\n        });\n        // picked value is in common space (pixels) from the camera target (viewport.position)\n        // convert it to meters from the ground\n        z = zValues[0] * viewports[0].distanceScales.metersPerUnit[2] + viewports[0].position[2];\n      }\n\n      // Only exclude if we need to run picking again.\n      // We need to run picking again if an object is detected AND\n      // we have not exhausted the requested depth.\n      if (pickInfo.pickedColor && i + 1 < depth) {\n        const layerId = pickInfo.pickedColor[3] - 1;\n        affectedLayers[layerId] = true;\n        layers[layerId].disablePickingIndex(pickInfo.pickedObjectIndex);\n      }\n\n      // This logic needs to run even if no object is picked.\n      infos = processPickInfo({\n        pickInfo,\n        lastPickedInfo: this.lastPickedInfo,\n        mode,\n        layers,\n        layerFilter: this.layerFilter,\n        viewports,\n        x,\n        y,\n        z,\n        pixelRatio\n      });\n\n      for (const info of infos.values()) {\n        if (info.layer) {\n          result.push(info);\n        }\n      }\n\n      // If no object is picked stop.\n      if (!pickInfo.pickedColor) {\n        break;\n      }\n    }\n\n    // reset only affected buffers\n    for (const layerId in affectedLayers) {\n      layers[layerId].restorePickingColors();\n    }\n\n    return {result, emptyInfo: infos && infos.get(null)};\n  }\n\n  // Pick all objects within the given bounding box\n  _pickVisibleObjects({\n    layers,\n    views,\n    viewports,\n    x,\n    y,\n    width = 1,\n    height = 1,\n    mode = 'query',\n    maxObjects = null,\n    onViewportActive\n  }) {\n    layers = this._getPickable(layers);\n\n    if (!layers) {\n      return [];\n    }\n\n    this._resizeBuffer();\n    // Convert from canvas top-left to WebGL bottom-left coordinates\n    // And compensate for pixelRatio\n    const pixelRatio = cssToDeviceRatio(this.gl);\n    const leftTop = cssToDevicePixels(this.gl, [x, y], true);\n\n    // take left and top (y inverted in device pixels) from start location\n    const deviceLeft = leftTop.x;\n    const deviceTop = leftTop.y + leftTop.height;\n\n    // take right and bottom (y inverted in device pixels) from end location\n    const rightBottom = cssToDevicePixels(this.gl, [x + width, y + height], true);\n    const deviceRight = rightBottom.x + rightBottom.width;\n    const deviceBottom = rightBottom.y;\n\n    const deviceRect = {\n      x: deviceLeft,\n      y: deviceBottom,\n      // deviceTop and deviceRight represent the first pixel outside the desired rect\n      width: deviceRight - deviceLeft,\n      height: deviceTop - deviceBottom\n    };\n\n    const pickedColors = this._drawAndSample({\n      layers,\n      views,\n      viewports,\n      onViewportActive,\n      deviceRect,\n      pass: `picking:${mode}`,\n      redrawReason: mode\n    });\n\n    const pickInfos = getUniqueObjects({pickedColors, layers});\n\n    // Only return unique infos, identified by info.object\n    const uniqueInfos = new Map();\n\n    const isMaxObjects = Number.isFinite(maxObjects);\n\n    for (let i = 0; i < pickInfos.length; i++) {\n      if (isMaxObjects && uniqueInfos.size >= maxObjects) {\n        break;\n      }\n      const pickInfo = pickInfos[i];\n      let info = {\n        color: pickInfo.pickedColor,\n        layer: null,\n        index: pickInfo.pickedObjectIndex,\n        picked: true,\n        x,\n        y,\n        width,\n        height,\n        pixelRatio\n      };\n\n      info = getLayerPickingInfo({layer: pickInfo.pickedLayer, info, mode});\n      if (!uniqueInfos.has(info.object)) {\n        uniqueInfos.set(info.object, info);\n      }\n    }\n\n    return Array.from(uniqueInfos.values());\n  }\n\n  // returns pickedColor or null if no pickable layers found.\n  _drawAndSample({\n    layers,\n    views,\n    viewports,\n    onViewportActive,\n    deviceRect,\n    pass,\n    redrawReason,\n    pickZ\n  }) {\n    if (layers.length < 1) {\n      return null;\n    }\n\n    const pickingFBO = pickZ ? this.depthFBO : this.pickingFBO;\n\n    this.pickLayersPass.render({\n      layers,\n      layerFilter: this.layerFilter,\n      views,\n      viewports,\n      onViewportActive,\n      pickingFBO,\n      deviceRect,\n      pass,\n      redrawReason,\n      pickZ\n    });\n\n    // Read from an already rendered picking buffer\n    // Returns an Uint8ClampedArray of picked pixels\n    const {x, y, width, height} = deviceRect;\n    const pickedColors = new (pickZ ? Float32Array : Uint8Array)(width * height * 4);\n    readPixelsToArray(pickingFBO, {\n      sourceX: x,\n      sourceY: y,\n      sourceWidth: width,\n      sourceHeight: height,\n      target: pickedColors\n    });\n\n    return pickedColors;\n  }\n\n  // Calculate a picking rect centered on deviceX and deviceY and clipped to device\n  // Returns null if pixel is outside of device\n  _getPickingRect({deviceX, deviceY, deviceRadius, deviceWidth, deviceHeight}) {\n    // Create a box of size `radius * 2 + 1` centered at [deviceX, deviceY]\n    const x = Math.max(0, deviceX - deviceRadius);\n    const y = Math.max(0, deviceY - deviceRadius);\n    const width = Math.min(deviceWidth, deviceX + deviceRadius + 1) - x;\n    const height = Math.min(deviceHeight, deviceY + deviceRadius + 1) - y;\n\n    // x, y out of bounds.\n    if (width <= 0 || height <= 0) {\n      return null;\n    }\n\n    return {x, y, width, height};\n  }\n}\n"],"file":"deck-picker.js"}