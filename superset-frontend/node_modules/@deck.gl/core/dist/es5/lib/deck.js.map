{"version":3,"sources":["../../../src/lib/deck.js"],"names":["noop","getCursor","isDragging","getPropTypes","PropTypes","id","string","width","oneOfType","number","height","layers","object","array","layerFilter","func","views","viewState","effects","arrayOf","instanceOf","Effect","controller","bool","gl","glOptions","parameters","pickingRadius","useDevicePixels","touchAction","eventRecognizerOptions","onWebGLInitialized","onResize","onViewStateChange","onInteractionStateChange","onBeforeRender","onAfterRender","onLoad","onError","debug","drawPickingColors","_framebuffer","_animate","_pickable","_typedArrayManagerProps","defaultProps","error","layer","log","_onMetrics","Deck","props","viewManager","layerManager","effectManager","deckRenderer","deckPicker","_needsRedraw","_pickRequest","_lastPointerDownInfo","interactiveState","isHovering","_onEvent","bind","_onPointerDown","_onPointerMove","initialViewState","warn","document","canvas","_createCanvas","animationLoop","_createAnimationLoop","stats","Stats","metrics","fps","setPropsTime","updateAttributesTime","framesRedrawn","pickTime","pickCount","gpuTime","gpuTimePerFrame","cpuTime","cpuTimePerFrame","bufferMemory","textureMemory","renderbufferMemory","gpuMemory","_metricsCounter","setProps","typedArrayManager","start","stop","finalize","eventManager","destroy","tooltip","remove","parentElement","removeChild","get","timeStart","removed","Object","assign","_setCanvasSize","resolvedProps","create","_getViews","_getViewState","activateViewport","getViewports","timeEnd","opts","clearRedrawFlags","redraw","viewManagerNeedsRedraw","needsRedraw","layerManagerNeedsRedraw","effectManagerNeedsRedraw","deckRendererNeedsRedraw","force","redrawReason","incrementCount","_customRender","_drawLayers","rect","infos","_pick","result","length","depth","resources","forceUpdate","resourceManager","add","resourceId","data","resourceIds","method","statKey","getLayers","getViews","viewports","onViewportActive","getElementById","createElement","parent","body","appendChild","style","Number","isFinite","position","_checkForCanvasSizeChange","newWidth","clientWidth","newHeight","clientHeight","autoResizeDrawingBuffer","AnimationLoop","autoResizeViewport","onCreateContext","onContextLost","_onContextLost","onInitialize","context","_setGLContext","onRender","_onRenderFrame","MapView","Array","isArray","Error","event","type","x","y","radius","leftButton","rightButton","pos","offsetCenter","mousePosition","mode","emptyInfo","pickedInfo","handled","info","onHover","getTooltip","displayInfo","setTooltip","container","cursor","enable","copyState","Tooltip","blend","blendFunc","polygonOffsetFill","depthTest","depthFunc","timeline","Timeline","play","attachTimeline","EventManager","recognizerOptions","events","pointerdown","pointermove","pointerleave","eventType","EVENTS","on","ViewManager","_onViewStateChange","_onInteractionStateChange","viewport","LayerManager","deck","EffectManager","DeckRenderer","DeckPicker","_updateCanvasSize","renderOptions","renderLayers","target","pass","getEffects","animationProps","_getFrameStats","_getMetrics","reset","table","_updateCursor","isVisible","updateLayers","_pickAndCallback","updateViewStates","params","viewId","interactionState","eventOptions","getLastPickedObject","layerHandler","handler","rootHandler","call","pickObject","animationLoopStats","addTime","lastTiming","getHz","time","count","getAverageTime","memoryStats","lumaStats","VERSION","deckGlobal"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from './layer-manager';\nimport ViewManager from './view-manager';\nimport MapView from '../views/map-view';\nimport EffectManager from './effect-manager';\nimport Effect from './effect';\nimport DeckRenderer from './deck-renderer';\nimport DeckPicker from './deck-picker';\nimport Tooltip from './tooltip';\nimport log from '../utils/log';\nimport {deepEqual} from '../utils/deep-equal';\nimport typedArrayManager from '../utils/typed-array-manager';\nimport deckGlobal from './init';\n\nimport {getBrowser} from 'probe.gl/env';\nimport GL from '@luma.gl/constants';\nimport {\n  AnimationLoop,\n  createGLContext,\n  instrumentGLContext,\n  setParameters,\n  Timeline,\n  lumaStats\n} from '@luma.gl/core';\nimport {Stats} from 'probe.gl';\nimport {EventManager} from 'mjolnir.js';\n\nimport assert from '../utils/assert';\nimport {EVENTS} from './constants';\n/* global document */\n\nfunction noop() {}\n\nconst getCursor = ({isDragging}) => (isDragging ? 'grabbing' : 'grab');\n\nfunction getPropTypes(PropTypes) {\n  // Note: Arrays (layers, views, ) can contain falsy values\n  return {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // layer/view/controller settings\n    layers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    layerFilter: PropTypes.func,\n    views: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    viewState: PropTypes.object,\n    effects: PropTypes.arrayOf(PropTypes.instanceOf(Effect)),\n    controller: PropTypes.oneOfType([PropTypes.func, PropTypes.bool, PropTypes.object]),\n\n    // GL settings\n    gl: PropTypes.object,\n    glOptions: PropTypes.object,\n    parameters: PropTypes.object,\n    pickingRadius: PropTypes.number,\n    useDevicePixels: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    touchAction: PropTypes.string,\n    eventRecognizerOptions: PropTypes.object,\n\n    // Callbacks\n    onWebGLInitialized: PropTypes.func,\n    onResize: PropTypes.func,\n    onViewStateChange: PropTypes.func,\n    onInteractionStateChange: PropTypes.func,\n    onBeforeRender: PropTypes.func,\n    onAfterRender: PropTypes.func,\n    onLoad: PropTypes.func,\n    onError: PropTypes.func,\n\n    // Debug settings\n    debug: PropTypes.bool,\n    drawPickingColors: PropTypes.bool,\n\n    // Experimental props\n    _framebuffer: PropTypes.object,\n    // Forces a redraw every animation frame\n    _animate: PropTypes.bool,\n\n    // UNSAFE options - not exhaustively tested, not guaranteed to work in all cases, use at your own risk\n\n    // Set to false to disable picking - avoiding picking buffer creation can save memory for mobile web browsers\n    _pickable: PropTypes.bool,\n\n    // Adjust parameters of typed array manager, can save memory e.g. for mobile web browsers\n    _typedArrayManagerProps: PropTypes.object //  {overAlloc: number, poolSize: number}\n  };\n}\n\nconst defaultProps = {\n  id: '',\n  width: '100%',\n  height: '100%',\n\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  gl: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n  useDevicePixels: true,\n  touchAction: 'none',\n  eventRecognizerOptions: {},\n  _framebuffer: null,\n  _animate: false,\n  _pickable: true,\n  _typedArrayManagerProps: {},\n\n  onWebGLInitialized: noop,\n  onResize: noop,\n  onViewStateChange: noop,\n  onInteractionStateChange: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLoad: noop,\n  onError: (error, layer) => log.error(error)(),\n  _onMetrics: null,\n\n  getCursor,\n\n  debug: false,\n  drawPickingColors: false\n};\n\n/* eslint-disable max-statements */\nexport default class Deck {\n  constructor(props) {\n    props = {...defaultProps, ...props};\n    this.props = {};\n\n    this.width = 0; // \"read-only\", auto-updated from canvas\n    this.height = 0; // \"read-only\", auto-updated from canvas\n\n    // Maps view descriptors to vieports, rebuilds when width/height/viewState/views change\n    this.viewManager = null;\n    this.layerManager = null;\n    this.effectManager = null;\n    this.deckRenderer = null;\n    this.deckPicker = null;\n\n    this._needsRedraw = true;\n    this._pickRequest = {};\n    // Pick and store the object under the pointer on `pointerdown`.\n    // This object is reused for subsequent `onClick` and `onDrag*` callbacks.\n    this._lastPointerDownInfo = null;\n\n    this.viewState = null; // Internal view state if no callback is supplied\n    this.interactiveState = {\n      isHovering: false, // Whether the cursor is over a pickable object\n      isDragging: false // Whether the cursor is down\n    };\n\n    // Bind methods\n    this._onEvent = this._onEvent.bind(this);\n    this._onPointerDown = this._onPointerDown.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n\n    if (props.viewState && props.initialViewState) {\n      log.warn(\n        'View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.'\n      )();\n    }\n    if (getBrowser() === 'IE') {\n      log.warn('IE 11 support will be deprecated in v8.0')();\n    }\n\n    if (!props.gl) {\n      // Note: LayerManager creation deferred until gl context available\n      if (typeof document !== 'undefined') {\n        this.canvas = this._createCanvas(props);\n      }\n    }\n    this.animationLoop = this._createAnimationLoop(props);\n\n    this.stats = new Stats({id: 'deck.gl'});\n    this.metrics = {\n      fps: 0,\n      setPropsTime: 0,\n      updateAttributesTime: 0,\n      framesRedrawn: 0,\n      pickTime: 0,\n      pickCount: 0,\n      gpuTime: 0,\n      gpuTimePerFrame: 0,\n      cpuTime: 0,\n      cpuTimePerFrame: 0,\n      bufferMemory: 0,\n      textureMemory: 0,\n      renderbufferMemory: 0,\n      gpuMemory: 0\n    };\n    this._metricsCounter = 0;\n\n    this.setProps(props);\n\n    // UNSAFE/experimental prop: only set at initialization to avoid performance hit\n    if (props._typedArrayManagerProps) {\n      typedArrayManager.setProps(props._typedArrayManagerProps);\n    }\n\n    this.animationLoop.start();\n  }\n\n  finalize() {\n    this.animationLoop.stop();\n    this.animationLoop = null;\n    this._lastPointerDownInfo = null;\n\n    if (this.layerManager) {\n      this.layerManager.finalize();\n      this.layerManager = null;\n\n      this.viewManager.finalize();\n      this.viewManager = null;\n\n      this.effectManager.finalize();\n      this.effectManager = null;\n\n      this.deckRenderer.finalize();\n      this.deckRenderer = null;\n\n      this.deckPicker.finalize();\n      this.deckPicker = null;\n\n      this.eventManager.destroy();\n      this.eventManager = null;\n\n      this.tooltip.remove();\n      this.tooltip = null;\n    }\n\n    if (!this.props.canvas && !this.props.gl && this.canvas) {\n      // remove internally created canvas\n      this.canvas.parentElement.removeChild(this.canvas);\n      this.canvas = null;\n    }\n  }\n\n  setProps(props) {\n    this.stats.get('setProps Time').timeStart();\n\n    if ('onLayerHover' in props) {\n      log.removed('onLayerHover', 'onHover')();\n    }\n    if ('onLayerClick' in props) {\n      log.removed('onLayerClick', 'onClick')();\n    }\n    if (props.initialViewState && !deepEqual(this.props.initialViewState, props.initialViewState)) {\n      // Overwrite internal view state\n      this.viewState = props.initialViewState;\n    }\n\n    // Merge with existing props\n    Object.assign(this.props, props);\n\n    // Update CSS size of canvas\n    this._setCanvasSize(this.props);\n\n    // We need to overwrite CSS style width and height with actual, numeric values\n    const resolvedProps = Object.create(this.props);\n    Object.assign(resolvedProps, {\n      views: this._getViews(),\n      width: this.width,\n      height: this.height,\n      viewState: this._getViewState()\n    });\n\n    // Update the animation loop\n    this.animationLoop.setProps(resolvedProps);\n\n    // If initialized, update sub manager props\n    if (this.layerManager) {\n      this.viewManager.setProps(resolvedProps);\n      // Make sure that any new layer gets initialized with the current viewport\n      this.layerManager.activateViewport(this.getViewports()[0]);\n      this.layerManager.setProps(resolvedProps);\n      this.effectManager.setProps(resolvedProps);\n      this.deckRenderer.setProps(resolvedProps);\n      this.deckPicker.setProps(resolvedProps);\n    }\n\n    this.stats.get('setProps Time').timeEnd();\n  }\n\n  // Public API\n  // Check if a redraw is needed\n  // Returns `false` or a string summarizing the redraw reason\n  // opts.clearRedrawFlags (Boolean) - clear the redraw flag. Default `true`\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    if (this.props._animate) {\n      return 'Deck._animate';\n    }\n\n    let redraw = this._needsRedraw;\n\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    const viewManagerNeedsRedraw = this.viewManager.needsRedraw(opts);\n    const layerManagerNeedsRedraw = this.layerManager.needsRedraw(opts);\n    const effectManagerNeedsRedraw = this.effectManager.needsRedraw(opts);\n    const deckRendererNeedsRedraw = this.deckRenderer.needsRedraw(opts);\n\n    redraw =\n      redraw ||\n      viewManagerNeedsRedraw ||\n      layerManagerNeedsRedraw ||\n      effectManagerNeedsRedraw ||\n      deckRendererNeedsRedraw;\n    return redraw;\n  }\n\n  redraw(force) {\n    if (!this.layerManager) {\n      // Not yet initialized\n      return;\n    }\n    // If force is falsy, check if we need to redraw\n    const redrawReason = force || this.needsRedraw({clearRedrawFlags: true});\n\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.get('Redraw Count').incrementCount();\n    if (this.props._customRender) {\n      this.props._customRender(redrawReason);\n    } else {\n      this._drawLayers(redrawReason);\n    }\n  }\n\n  getViews() {\n    return this.viewManager.views;\n  }\n\n  // Get a set of viewports for a given width and height\n  getViewports(rect) {\n    return this.viewManager.getViewports(rect);\n  }\n\n  /* {x, y, radius = 0, layerIds = null, unproject3D} */\n  pickObject(opts) {\n    const infos = this._pick('pickObject', 'pickObject Time', opts).result;\n    return infos.length ? infos[0] : null;\n  }\n\n  /* {x, y, radius = 0, layerIds = null, unproject3D, depth = 10} */\n  pickMultipleObjects(opts) {\n    opts.depth = opts.depth || 10;\n    return this._pick('pickObject', 'pickMultipleObjects Time', opts).result;\n  }\n\n  /* {x, y, width = 1, height = 1, layerIds = null} */\n  pickObjects(opts) {\n    return this._pick('pickObjects', 'pickObjects Time', opts);\n  }\n\n  // Experimental\n\n  _addResources(resources, forceUpdate = false) {\n    for (const id in resources) {\n      this.layerManager.resourceManager.add({resourceId: id, data: resources[id], forceUpdate});\n    }\n  }\n\n  _removeResources(resourceIds) {\n    for (const id of resourceIds) {\n      this.layerManager.resourceManager.remove(id);\n    }\n  }\n\n  // Private Methods\n\n  _pick(method, statKey, opts) {\n    const {stats} = this;\n\n    stats.get('Pick Count').incrementCount();\n    stats.get(statKey).timeStart();\n\n    const infos = this.deckPicker[method]({\n      layers: this.layerManager.getLayers(opts),\n      views: this.viewManager.getViews(),\n      viewports: this.getViewports(opts),\n      onViewportActive: this.layerManager.activateViewport,\n      ...opts\n    });\n\n    stats.get(statKey).timeEnd();\n\n    return infos;\n  }\n\n  // canvas, either string, canvas or `null`\n  _createCanvas(props) {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      canvas = document.getElementById(canvas);\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      canvas.id = props.id || 'deckgl-overlay';\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    Object.assign(canvas.style, props.style);\n\n    return canvas;\n  }\n\n  // Updates canvas width and/or height, if provided as props\n  _setCanvasSize(props) {\n    if (!this.canvas) {\n      return;\n    }\n\n    let {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      width = Number.isFinite(width) ? `${width}px` : width;\n      this.canvas.style.width = width;\n    }\n    if (height || height === 0) {\n      height = Number.isFinite(height) ? `${height}px` : height;\n      // Note: position==='absolute' required for height 100% to work\n      this.canvas.style.position = 'absolute';\n      this.canvas.style.height = height;\n    }\n  }\n\n  // If canvas size has changed, updates\n  _updateCanvasSize() {\n    if (this._checkForCanvasSizeChange()) {\n      const {width, height} = this;\n      this.viewManager.setProps({width, height});\n      this.props.onResize({width: this.width, height: this.height});\n    }\n  }\n\n  // If canvas size has changed, reads out the new size and returns true\n  _checkForCanvasSizeChange() {\n    const {canvas} = this;\n    if (!canvas) {\n      return false;\n    }\n    // Fallback to width/height when clientWidth/clientHeight are 0 or undefined.\n    const newWidth = canvas.clientWidth || canvas.width;\n    const newHeight = canvas.clientHeight || canvas.height;\n    if (newWidth !== this.width || newHeight !== this.height) {\n      this.width = newWidth;\n      this.height = newHeight;\n      return true;\n    }\n    return false;\n  }\n\n  _createAnimationLoop(props) {\n    const {\n      width,\n      height,\n      gl,\n      glOptions,\n      debug,\n      onError,\n      onBeforeRender,\n      onAfterRender,\n      useDevicePixels,\n      autoResizeDrawingBuffer\n    } = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer,\n      autoResizeViewport: false,\n      gl,\n      onCreateContext: opts =>\n        createGLContext({\n          ...glOptions,\n          ...opts,\n          canvas: this.canvas,\n          debug,\n          onContextLost: () => this._onContextLost()\n        }),\n      onInitialize: context => this._setGLContext(context.gl),\n      onRender: this._onRenderFrame.bind(this),\n      onBeforeRender,\n      onAfterRender,\n      onError\n    });\n  }\n\n  // Get the most relevant view state: props.viewState, if supplied, shadows internal viewState\n  // TODO: For backwards compatibility ensure numeric width and height is added to the viewState\n  _getViewState() {\n    return this.props.viewState || this.viewState;\n  }\n\n  // Get the view descriptor list\n  _getViews() {\n    // Default to a full screen map view port\n    let views = this.props.views || [new MapView({id: 'default-view'})];\n    views = Array.isArray(views) ? views : [views];\n    if (views.length && this.props.controller) {\n      // Backward compatibility: support controller prop\n      views[0].props.controller = this.props.controller;\n    }\n    return views;\n  }\n\n  _onContextLost() {\n    const {onError} = this.props;\n    if (this.animationLoop && onError) {\n      onError(new Error(`WebGL context is lost`));\n    }\n  }\n\n  // The `pointermove` event may fire multiple times in between two animation frames,\n  // it's a waste of time to run picking without rerender. Instead we save the last pick\n  // request and only do it once on the next animation frame.\n  _onPointerMove(event) {\n    const {_pickRequest} = this;\n    if (event.type === 'pointerleave') {\n      _pickRequest.x = -1;\n      _pickRequest.y = -1;\n      _pickRequest.radius = 0;\n    } else if (event.leftButton || event.rightButton) {\n      // Do not trigger onHover callbacks if mouse button is down.\n      return;\n    } else {\n      const pos = event.offsetCenter;\n      // Do not trigger callbacks when click/hover position is invalid. Doing so will cause a\n      // assertion error when attempting to unproject the position.\n      if (!pos) {\n        return;\n      }\n      _pickRequest.x = pos.x;\n      _pickRequest.y = pos.y;\n      _pickRequest.radius = this.props.pickingRadius;\n    }\n\n    if (this.layerManager) {\n      this.layerManager.context.mousePosition = {x: _pickRequest.x, y: _pickRequest.y};\n    }\n\n    _pickRequest.event = event;\n    _pickRequest.mode = 'hover';\n  }\n\n  // Actually run picking\n  _pickAndCallback() {\n    const {_pickRequest} = this;\n\n    if (_pickRequest.event) {\n      // Perform picking\n      const {result, emptyInfo} = this._pick('pickObject', 'pickObject Time', _pickRequest);\n      this.interactiveState.isHovering = result.length > 0;\n\n      // There are 4 possible scenarios:\n      // result is [outInfo, pickedInfo] (moved from one pickable layer to another)\n      // result is [outInfo] (moved outside of a pickable layer)\n      // result is [pickedInfo] (moved into or over a pickable layer)\n      // result is [] (nothing is or was picked)\n      //\n      // `layer.props.onHover` should be called on all affected layers (out/over)\n      // `deck.props.onHover` should be called with the picked info if any, or empty info otherwise\n      // `deck.props.getTooltip` should be called with the picked info if any, or empty info otherwise\n\n      // Execute callbacks\n      let pickedInfo = emptyInfo;\n      let handled = false;\n      for (const info of result) {\n        pickedInfo = info;\n        handled = info.layer.onHover(info, _pickRequest.event);\n      }\n      if (!handled && this.props.onHover) {\n        this.props.onHover(pickedInfo, _pickRequest.event);\n      }\n\n      // Update tooltip\n      if (this.props.getTooltip) {\n        const displayInfo = this.props.getTooltip(pickedInfo);\n        this.tooltip.setTooltip(displayInfo, pickedInfo.x, pickedInfo.y);\n      }\n\n      // Clear pending pickRequest\n      _pickRequest.event = null;\n    }\n  }\n\n  _updateCursor() {\n    const container = this.props.parent || this.canvas;\n    if (container) {\n      container.style.cursor = this.props.getCursor(this.interactiveState);\n    }\n  }\n\n  _setGLContext(gl) {\n    if (this.layerManager) {\n      return;\n    }\n\n    // if external context...\n    if (!this.canvas) {\n      this.canvas = gl.canvas;\n      instrumentGLContext(gl, {enable: true, copyState: true});\n    }\n\n    this.tooltip = new Tooltip(this.canvas);\n\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    // timeline for transitions\n    const timeline = new Timeline();\n    timeline.play();\n    this.animationLoop.attachTimeline(timeline);\n\n    this.eventManager = new EventManager(this.props.parent || gl.canvas, {\n      touchAction: this.props.touchAction,\n      recognizerOptions: this.props.eventRecognizerOptions,\n      events: {\n        pointerdown: this._onPointerDown,\n        pointermove: this._onPointerMove,\n        pointerleave: this._onPointerMove\n      }\n    });\n    for (const eventType in EVENTS) {\n      this.eventManager.on(eventType, this._onEvent);\n    }\n\n    this.viewManager = new ViewManager({\n      timeline,\n      eventManager: this.eventManager,\n      onViewStateChange: this._onViewStateChange.bind(this),\n      onInteractionStateChange: this._onInteractionStateChange.bind(this),\n      views: this._getViews(),\n      viewState: this._getViewState(),\n      width: this.width,\n      height: this.height\n    });\n\n    // viewManager must be initialized before layerManager\n    // layerManager depends on viewport created by viewManager.\n    const viewport = this.viewManager.getViewports()[0];\n\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {\n      deck: this,\n      stats: this.stats,\n      viewport,\n      timeline\n    });\n\n    this.effectManager = new EffectManager();\n\n    this.deckRenderer = new DeckRenderer(gl);\n\n    this.deckPicker = new DeckPicker(gl);\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n    this.props.onLoad();\n  }\n\n  _drawLayers(redrawReason, renderOptions) {\n    const {gl} = this.layerManager.context;\n\n    setParameters(gl, this.props.parameters);\n\n    this.props.onBeforeRender({gl});\n\n    this.deckRenderer.renderLayers({\n      target: this.props._framebuffer,\n      layers: this.layerManager.getLayers(),\n      viewports: this.viewManager.getViewports(),\n      onViewportActive: this.layerManager.activateViewport,\n      views: this.viewManager.getViews(),\n      pass: 'screen',\n      redrawReason,\n      effects: this.effectManager.getEffects(),\n      ...renderOptions\n    });\n\n    this.props.onAfterRender({gl});\n  }\n\n  // Callbacks\n\n  _onRenderFrame(animationProps) {\n    this._getFrameStats();\n\n    // Log perf stats every second\n    if (this._metricsCounter++ % 60 === 0) {\n      this._getMetrics();\n      this.stats.reset();\n      log.table(4, this.metrics)();\n\n      // Experimental: report metrics\n      if (this.props._onMetrics) {\n        this.props._onMetrics(this.metrics);\n      }\n    }\n\n    this._updateCanvasSize();\n\n    this._updateCursor();\n\n    // If view state has changed, clear tooltip\n    if (this.tooltip.isVisible && this.viewManager.needsRedraw()) {\n      this.tooltip.setTooltip(null);\n    }\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    // Note: This can trigger a redraw\n    this.layerManager.updateLayers();\n\n    // Perform picking request if any\n    this._pickAndCallback();\n\n    // Redraw if necessary\n    this.redraw(false);\n\n    // Update viewport transition if needed\n    // Note: this can trigger `onViewStateChange`, and affect layers\n    // We want to defer these changes to the next frame\n    if (this.viewManager) {\n      this.viewManager.updateViewStates();\n    }\n  }\n\n  // Callbacks\n\n  _onViewStateChange(params) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.viewState) {\n      this.viewState = {...this.viewState, [params.viewId]: viewState};\n      if (!this.props.viewState) {\n        // Apply internal view state\n        if (this.viewManager) {\n          this.viewManager.setProps({viewState: this.viewState});\n        }\n      }\n    }\n  }\n\n  _onInteractionStateChange(interactionState) {\n    this.interactiveState.isDragging = interactionState.isDragging;\n    this.props.onInteractionStateChange(interactionState);\n  }\n\n  _onEvent(event) {\n    const eventOptions = EVENTS[event.type];\n    const pos = event.offsetCenter;\n\n    if (!eventOptions || !pos) {\n      return;\n    }\n\n    // Reuse last picked object\n    const layers = this.layerManager.getLayers();\n    const info = this.deckPicker.getLastPickedObject(\n      {\n        x: pos.x,\n        y: pos.y,\n        layers,\n        viewports: this.getViewports(pos)\n      },\n      this._lastPointerDownInfo\n    );\n\n    const {layer} = info;\n    const layerHandler =\n      layer && (layer[eventOptions.handler] || layer.props[eventOptions.handler]);\n    const rootHandler = this.props[eventOptions.handler];\n    let handled = false;\n\n    if (layerHandler) {\n      handled = layerHandler.call(layer, info, event);\n    }\n    if (!handled && rootHandler) {\n      rootHandler(info, event);\n    }\n  }\n\n  _onPointerDown(event) {\n    const pos = event.offsetCenter;\n    this._lastPointerDownInfo = this.pickObject({\n      x: pos.x,\n      y: pos.y,\n      radius: this.props.pickingRadius\n    });\n  }\n\n  _getFrameStats() {\n    const {stats} = this;\n    stats.get('frameRate').timeEnd();\n    stats.get('frameRate').timeStart();\n\n    // Get individual stats from luma.gl so reset works\n    const animationLoopStats = this.animationLoop.stats;\n    stats.get('GPU Time').addTime(animationLoopStats.get('GPU Time').lastTiming);\n    stats.get('CPU Time').addTime(animationLoopStats.get('CPU Time').lastTiming);\n  }\n\n  _getMetrics() {\n    const {metrics, stats} = this;\n    metrics.fps = stats.get('frameRate').getHz();\n    metrics.setPropsTime = stats.get('setProps Time').time;\n    metrics.updateAttributesTime = stats.get('Update Attributes').time;\n    metrics.framesRedrawn = stats.get('Redraw Count').count;\n    metrics.pickTime =\n      stats.get('pickObject Time').time +\n      stats.get('pickMultipleObjects Time').time +\n      stats.get('pickObjects Time').time;\n    metrics.pickCount = stats.get('Pick Count').count;\n\n    // Luma stats\n    metrics.gpuTime = stats.get('GPU Time').time;\n    metrics.cpuTime = stats.get('CPU Time').time;\n    metrics.gpuTimePerFrame = stats.get('GPU Time').getAverageTime();\n    metrics.cpuTimePerFrame = stats.get('CPU Time').getAverageTime();\n\n    const memoryStats = lumaStats.get('Memory Usage');\n    metrics.bufferMemory = memoryStats.get('Buffer Memory').count;\n    metrics.textureMemory = memoryStats.get('Texture Memory').count;\n    metrics.renderbufferMemory = memoryStats.get('Renderbuffer Memory').count;\n    metrics.gpuMemory = memoryStats.get('GPU Memory').count;\n  }\n}\n\nDeck.getPropTypes = getPropTypes;\nDeck.defaultProps = defaultProps;\n\n// This is used to defeat tree shaking of init.js\n// https://github.com/visgl/deck.gl/issues/3213\nDeck.VERSION = deckGlobal.VERSION;\n"],"file":"deck.js"}