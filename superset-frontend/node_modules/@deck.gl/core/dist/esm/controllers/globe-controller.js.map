{"version":3,"sources":["../../../src/controllers/globe-controller.js"],"names":["clamp","Controller","MapState","mod","GlobeState","_applyConstraints","props","maxZoom","minZoom","zoom","longitude","latitude","GlobeController","constructor","dragMode","setProps","dragRotate","touchRotate","linearTransitionProps"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,SAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,GAAR,QAAkB,qBAAlB;;AAEA,MAAMC,UAAN,SAAyBF,QAAzB,CAAkC;AAEhCG,EAAAA,iBAAiB,CAACC,KAAD,EAAQ;AAEvB,UAAM;AAACC,MAAAA,OAAD;AAAUC,MAAAA,OAAV;AAAmBC,MAAAA;AAAnB,QAA2BH,KAAjC;AACAA,IAAAA,KAAK,CAACG,IAAN,GAAaT,KAAK,CAACS,IAAD,EAAOD,OAAP,EAAgBD,OAAhB,CAAlB;AAEA,UAAM;AAACG,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,QAAwBL,KAA9B;;AACA,QAAII,SAAS,GAAG,CAAC,GAAb,IAAoBA,SAAS,GAAG,GAApC,EAAyC;AACvCJ,MAAAA,KAAK,CAACI,SAAN,GAAkBP,GAAG,CAACO,SAAS,GAAG,GAAb,EAAkB,GAAlB,CAAH,GAA4B,GAA9C;AACD;;AACDJ,IAAAA,KAAK,CAACK,QAAN,GAAiBX,KAAK,CAACW,QAAD,EAAW,CAAC,EAAZ,EAAgB,EAAhB,CAAtB;AAEA,WAAOL,KAAP;AACD;;AAd+B;;AAiBlC,eAAe,MAAMM,eAAN,SAA8BX,UAA9B,CAAyC;AACtDY,EAAAA,WAAW,CAACP,KAAD,EAAQ;AACjBA,IAAAA,KAAK,CAACQ,QAAN,GAAiBR,KAAK,CAACQ,QAAN,IAAkB,KAAnC;AACA,UAAMV,UAAN,EAAkBE,KAAlB;AACD;;AAEDS,EAAAA,QAAQ,CAACT,KAAD,EAAQ;AACd,UAAMS,QAAN,CAAeT,KAAf;AAGA,SAAKU,UAAL,GAAkB,KAAlB;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACD;;AAED,MAAIC,qBAAJ,GAA4B;AAC1B,WAAO,CAAC,WAAD,EAAc,UAAd,EAA0B,MAA1B,CAAP;AACD;;AAhBqD","sourcesContent":["import {clamp} from 'math.gl';\nimport Controller from './controller';\n\nimport {MapState} from './map-controller';\nimport {mod} from '../utils/math-utils';\n\nclass GlobeState extends MapState {\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  _applyConstraints(props) {\n    // Ensure zoom is within specified range\n    const {maxZoom, minZoom, zoom} = props;\n    props.zoom = clamp(zoom, minZoom, maxZoom);\n\n    const {longitude, latitude} = props;\n    if (longitude < -180 || longitude > 180) {\n      props.longitude = mod(longitude + 180, 360) - 180;\n    }\n    props.latitude = clamp(latitude, -89, 89);\n\n    return props;\n  }\n}\n\nexport default class GlobeController extends Controller {\n  constructor(props) {\n    props.dragMode = props.dragMode || 'pan';\n    super(GlobeState, props);\n  }\n\n  setProps(props) {\n    super.setProps(props);\n\n    // TODO - support pitching?\n    this.dragRotate = false;\n    this.touchRotate = false;\n  }\n\n  get linearTransitionProps() {\n    return ['longitude', 'latitude', 'zoom'];\n  }\n}\n"],"file":"globe-controller.js"}