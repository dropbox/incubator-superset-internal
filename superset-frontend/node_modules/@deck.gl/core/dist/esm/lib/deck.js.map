{"version":3,"sources":["../../../src/lib/deck.js"],"names":["LayerManager","ViewManager","MapView","EffectManager","Effect","DeckRenderer","DeckPicker","Tooltip","log","deepEqual","typedArrayManager","deckGlobal","getBrowser","AnimationLoop","createGLContext","instrumentGLContext","setParameters","Timeline","lumaStats","Stats","EventManager","assert","EVENTS","noop","getCursor","isDragging","getPropTypes","PropTypes","id","string","width","oneOfType","number","height","layers","object","array","layerFilter","func","views","viewState","effects","arrayOf","instanceOf","controller","bool","gl","glOptions","parameters","pickingRadius","useDevicePixels","touchAction","eventRecognizerOptions","onWebGLInitialized","onResize","onViewStateChange","onInteractionStateChange","onBeforeRender","onAfterRender","onLoad","onError","debug","drawPickingColors","_framebuffer","_animate","_pickable","_typedArrayManagerProps","defaultProps","error","layer","_onMetrics","Deck","constructor","props","viewManager","layerManager","effectManager","deckRenderer","deckPicker","_needsRedraw","_pickRequest","_lastPointerDownInfo","interactiveState","isHovering","_onEvent","bind","_onPointerDown","_onPointerMove","initialViewState","warn","document","canvas","_createCanvas","animationLoop","_createAnimationLoop","stats","metrics","fps","setPropsTime","updateAttributesTime","framesRedrawn","pickTime","pickCount","gpuTime","gpuTimePerFrame","cpuTime","cpuTimePerFrame","bufferMemory","textureMemory","renderbufferMemory","gpuMemory","_metricsCounter","setProps","start","finalize","stop","eventManager","destroy","tooltip","remove","parentElement","removeChild","get","timeStart","removed","Object","assign","_setCanvasSize","resolvedProps","create","_getViews","_getViewState","activateViewport","getViewports","timeEnd","needsRedraw","opts","clearRedrawFlags","redraw","viewManagerNeedsRedraw","layerManagerNeedsRedraw","effectManagerNeedsRedraw","deckRendererNeedsRedraw","force","redrawReason","incrementCount","_customRender","_drawLayers","getViews","rect","pickObject","infos","_pick","result","length","pickMultipleObjects","depth","pickObjects","_addResources","resources","forceUpdate","resourceManager","add","resourceId","data","_removeResources","resourceIds","method","statKey","getLayers","viewports","onViewportActive","getElementById","createElement","parent","body","appendChild","style","Number","isFinite","position","_updateCanvasSize","_checkForCanvasSizeChange","newWidth","clientWidth","newHeight","clientHeight","autoResizeDrawingBuffer","autoResizeViewport","onCreateContext","onContextLost","_onContextLost","onInitialize","context","_setGLContext","onRender","_onRenderFrame","Array","isArray","Error","event","type","x","y","radius","leftButton","rightButton","pos","offsetCenter","mousePosition","mode","_pickAndCallback","emptyInfo","pickedInfo","handled","info","onHover","getTooltip","displayInfo","setTooltip","_updateCursor","container","cursor","enable","copyState","blend","blendFunc","polygonOffsetFill","depthTest","depthFunc","timeline","play","attachTimeline","recognizerOptions","events","pointerdown","pointermove","pointerleave","eventType","on","_onViewStateChange","_onInteractionStateChange","viewport","deck","renderOptions","renderLayers","target","pass","getEffects","animationProps","_getFrameStats","_getMetrics","reset","table","isVisible","updateLayers","updateViewStates","params","viewId","interactionState","eventOptions","getLastPickedObject","layerHandler","handler","rootHandler","call","animationLoopStats","addTime","lastTiming","getHz","time","count","getAverageTime","memoryStats","VERSION"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from './layer-manager';\nimport ViewManager from './view-manager';\nimport MapView from '../views/map-view';\nimport EffectManager from './effect-manager';\nimport Effect from './effect';\nimport DeckRenderer from './deck-renderer';\nimport DeckPicker from './deck-picker';\nimport Tooltip from './tooltip';\nimport log from '../utils/log';\nimport {deepEqual} from '../utils/deep-equal';\nimport typedArrayManager from '../utils/typed-array-manager';\nimport deckGlobal from './init';\n\nimport {getBrowser} from 'probe.gl/env';\nimport GL from '@luma.gl/constants';\nimport {\n  AnimationLoop,\n  createGLContext,\n  instrumentGLContext,\n  setParameters,\n  Timeline,\n  lumaStats\n} from '@luma.gl/core';\nimport {Stats} from 'probe.gl';\nimport {EventManager} from 'mjolnir.js';\n\nimport assert from '../utils/assert';\nimport {EVENTS} from './constants';\n/* global document */\n\nfunction noop() {}\n\nconst getCursor = ({isDragging}) => (isDragging ? 'grabbing' : 'grab');\n\nfunction getPropTypes(PropTypes) {\n  // Note: Arrays (layers, views, ) can contain falsy values\n  return {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // layer/view/controller settings\n    layers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    layerFilter: PropTypes.func,\n    views: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    viewState: PropTypes.object,\n    effects: PropTypes.arrayOf(PropTypes.instanceOf(Effect)),\n    controller: PropTypes.oneOfType([PropTypes.func, PropTypes.bool, PropTypes.object]),\n\n    // GL settings\n    gl: PropTypes.object,\n    glOptions: PropTypes.object,\n    parameters: PropTypes.object,\n    pickingRadius: PropTypes.number,\n    useDevicePixels: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    touchAction: PropTypes.string,\n    eventRecognizerOptions: PropTypes.object,\n\n    // Callbacks\n    onWebGLInitialized: PropTypes.func,\n    onResize: PropTypes.func,\n    onViewStateChange: PropTypes.func,\n    onInteractionStateChange: PropTypes.func,\n    onBeforeRender: PropTypes.func,\n    onAfterRender: PropTypes.func,\n    onLoad: PropTypes.func,\n    onError: PropTypes.func,\n\n    // Debug settings\n    debug: PropTypes.bool,\n    drawPickingColors: PropTypes.bool,\n\n    // Experimental props\n    _framebuffer: PropTypes.object,\n    // Forces a redraw every animation frame\n    _animate: PropTypes.bool,\n\n    // UNSAFE options - not exhaustively tested, not guaranteed to work in all cases, use at your own risk\n\n    // Set to false to disable picking - avoiding picking buffer creation can save memory for mobile web browsers\n    _pickable: PropTypes.bool,\n\n    // Adjust parameters of typed array manager, can save memory e.g. for mobile web browsers\n    _typedArrayManagerProps: PropTypes.object //  {overAlloc: number, poolSize: number}\n  };\n}\n\nconst defaultProps = {\n  id: '',\n  width: '100%',\n  height: '100%',\n\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  gl: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n  useDevicePixels: true,\n  touchAction: 'none',\n  eventRecognizerOptions: {},\n  _framebuffer: null,\n  _animate: false,\n  _pickable: true,\n  _typedArrayManagerProps: {},\n\n  onWebGLInitialized: noop,\n  onResize: noop,\n  onViewStateChange: noop,\n  onInteractionStateChange: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLoad: noop,\n  onError: (error, layer) => log.error(error)(),\n  _onMetrics: null,\n\n  getCursor,\n\n  debug: false,\n  drawPickingColors: false\n};\n\n/* eslint-disable max-statements */\nexport default class Deck {\n  constructor(props) {\n    props = {...defaultProps, ...props};\n    this.props = {};\n\n    this.width = 0; // \"read-only\", auto-updated from canvas\n    this.height = 0; // \"read-only\", auto-updated from canvas\n\n    // Maps view descriptors to vieports, rebuilds when width/height/viewState/views change\n    this.viewManager = null;\n    this.layerManager = null;\n    this.effectManager = null;\n    this.deckRenderer = null;\n    this.deckPicker = null;\n\n    this._needsRedraw = true;\n    this._pickRequest = {};\n    // Pick and store the object under the pointer on `pointerdown`.\n    // This object is reused for subsequent `onClick` and `onDrag*` callbacks.\n    this._lastPointerDownInfo = null;\n\n    this.viewState = null; // Internal view state if no callback is supplied\n    this.interactiveState = {\n      isHovering: false, // Whether the cursor is over a pickable object\n      isDragging: false // Whether the cursor is down\n    };\n\n    // Bind methods\n    this._onEvent = this._onEvent.bind(this);\n    this._onPointerDown = this._onPointerDown.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n\n    if (props.viewState && props.initialViewState) {\n      log.warn(\n        'View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.'\n      )();\n    }\n    if (getBrowser() === 'IE') {\n      log.warn('IE 11 support will be deprecated in v8.0')();\n    }\n\n    if (!props.gl) {\n      // Note: LayerManager creation deferred until gl context available\n      if (typeof document !== 'undefined') {\n        this.canvas = this._createCanvas(props);\n      }\n    }\n    this.animationLoop = this._createAnimationLoop(props);\n\n    this.stats = new Stats({id: 'deck.gl'});\n    this.metrics = {\n      fps: 0,\n      setPropsTime: 0,\n      updateAttributesTime: 0,\n      framesRedrawn: 0,\n      pickTime: 0,\n      pickCount: 0,\n      gpuTime: 0,\n      gpuTimePerFrame: 0,\n      cpuTime: 0,\n      cpuTimePerFrame: 0,\n      bufferMemory: 0,\n      textureMemory: 0,\n      renderbufferMemory: 0,\n      gpuMemory: 0\n    };\n    this._metricsCounter = 0;\n\n    this.setProps(props);\n\n    // UNSAFE/experimental prop: only set at initialization to avoid performance hit\n    if (props._typedArrayManagerProps) {\n      typedArrayManager.setProps(props._typedArrayManagerProps);\n    }\n\n    this.animationLoop.start();\n  }\n\n  finalize() {\n    this.animationLoop.stop();\n    this.animationLoop = null;\n    this._lastPointerDownInfo = null;\n\n    if (this.layerManager) {\n      this.layerManager.finalize();\n      this.layerManager = null;\n\n      this.viewManager.finalize();\n      this.viewManager = null;\n\n      this.effectManager.finalize();\n      this.effectManager = null;\n\n      this.deckRenderer.finalize();\n      this.deckRenderer = null;\n\n      this.deckPicker.finalize();\n      this.deckPicker = null;\n\n      this.eventManager.destroy();\n      this.eventManager = null;\n\n      this.tooltip.remove();\n      this.tooltip = null;\n    }\n\n    if (!this.props.canvas && !this.props.gl && this.canvas) {\n      // remove internally created canvas\n      this.canvas.parentElement.removeChild(this.canvas);\n      this.canvas = null;\n    }\n  }\n\n  setProps(props) {\n    this.stats.get('setProps Time').timeStart();\n\n    if ('onLayerHover' in props) {\n      log.removed('onLayerHover', 'onHover')();\n    }\n    if ('onLayerClick' in props) {\n      log.removed('onLayerClick', 'onClick')();\n    }\n    if (props.initialViewState && !deepEqual(this.props.initialViewState, props.initialViewState)) {\n      // Overwrite internal view state\n      this.viewState = props.initialViewState;\n    }\n\n    // Merge with existing props\n    Object.assign(this.props, props);\n\n    // Update CSS size of canvas\n    this._setCanvasSize(this.props);\n\n    // We need to overwrite CSS style width and height with actual, numeric values\n    const resolvedProps = Object.create(this.props);\n    Object.assign(resolvedProps, {\n      views: this._getViews(),\n      width: this.width,\n      height: this.height,\n      viewState: this._getViewState()\n    });\n\n    // Update the animation loop\n    this.animationLoop.setProps(resolvedProps);\n\n    // If initialized, update sub manager props\n    if (this.layerManager) {\n      this.viewManager.setProps(resolvedProps);\n      // Make sure that any new layer gets initialized with the current viewport\n      this.layerManager.activateViewport(this.getViewports()[0]);\n      this.layerManager.setProps(resolvedProps);\n      this.effectManager.setProps(resolvedProps);\n      this.deckRenderer.setProps(resolvedProps);\n      this.deckPicker.setProps(resolvedProps);\n    }\n\n    this.stats.get('setProps Time').timeEnd();\n  }\n\n  // Public API\n  // Check if a redraw is needed\n  // Returns `false` or a string summarizing the redraw reason\n  // opts.clearRedrawFlags (Boolean) - clear the redraw flag. Default `true`\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    if (this.props._animate) {\n      return 'Deck._animate';\n    }\n\n    let redraw = this._needsRedraw;\n\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    const viewManagerNeedsRedraw = this.viewManager.needsRedraw(opts);\n    const layerManagerNeedsRedraw = this.layerManager.needsRedraw(opts);\n    const effectManagerNeedsRedraw = this.effectManager.needsRedraw(opts);\n    const deckRendererNeedsRedraw = this.deckRenderer.needsRedraw(opts);\n\n    redraw =\n      redraw ||\n      viewManagerNeedsRedraw ||\n      layerManagerNeedsRedraw ||\n      effectManagerNeedsRedraw ||\n      deckRendererNeedsRedraw;\n    return redraw;\n  }\n\n  redraw(force) {\n    if (!this.layerManager) {\n      // Not yet initialized\n      return;\n    }\n    // If force is falsy, check if we need to redraw\n    const redrawReason = force || this.needsRedraw({clearRedrawFlags: true});\n\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.get('Redraw Count').incrementCount();\n    if (this.props._customRender) {\n      this.props._customRender(redrawReason);\n    } else {\n      this._drawLayers(redrawReason);\n    }\n  }\n\n  getViews() {\n    return this.viewManager.views;\n  }\n\n  // Get a set of viewports for a given width and height\n  getViewports(rect) {\n    return this.viewManager.getViewports(rect);\n  }\n\n  /* {x, y, radius = 0, layerIds = null, unproject3D} */\n  pickObject(opts) {\n    const infos = this._pick('pickObject', 'pickObject Time', opts).result;\n    return infos.length ? infos[0] : null;\n  }\n\n  /* {x, y, radius = 0, layerIds = null, unproject3D, depth = 10} */\n  pickMultipleObjects(opts) {\n    opts.depth = opts.depth || 10;\n    return this._pick('pickObject', 'pickMultipleObjects Time', opts).result;\n  }\n\n  /* {x, y, width = 1, height = 1, layerIds = null} */\n  pickObjects(opts) {\n    return this._pick('pickObjects', 'pickObjects Time', opts);\n  }\n\n  // Experimental\n\n  _addResources(resources, forceUpdate = false) {\n    for (const id in resources) {\n      this.layerManager.resourceManager.add({resourceId: id, data: resources[id], forceUpdate});\n    }\n  }\n\n  _removeResources(resourceIds) {\n    for (const id of resourceIds) {\n      this.layerManager.resourceManager.remove(id);\n    }\n  }\n\n  // Private Methods\n\n  _pick(method, statKey, opts) {\n    const {stats} = this;\n\n    stats.get('Pick Count').incrementCount();\n    stats.get(statKey).timeStart();\n\n    const infos = this.deckPicker[method]({\n      layers: this.layerManager.getLayers(opts),\n      views: this.viewManager.getViews(),\n      viewports: this.getViewports(opts),\n      onViewportActive: this.layerManager.activateViewport,\n      ...opts\n    });\n\n    stats.get(statKey).timeEnd();\n\n    return infos;\n  }\n\n  // canvas, either string, canvas or `null`\n  _createCanvas(props) {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      canvas = document.getElementById(canvas);\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      canvas.id = props.id || 'deckgl-overlay';\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    Object.assign(canvas.style, props.style);\n\n    return canvas;\n  }\n\n  // Updates canvas width and/or height, if provided as props\n  _setCanvasSize(props) {\n    if (!this.canvas) {\n      return;\n    }\n\n    let {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      width = Number.isFinite(width) ? `${width}px` : width;\n      this.canvas.style.width = width;\n    }\n    if (height || height === 0) {\n      height = Number.isFinite(height) ? `${height}px` : height;\n      // Note: position==='absolute' required for height 100% to work\n      this.canvas.style.position = 'absolute';\n      this.canvas.style.height = height;\n    }\n  }\n\n  // If canvas size has changed, updates\n  _updateCanvasSize() {\n    if (this._checkForCanvasSizeChange()) {\n      const {width, height} = this;\n      this.viewManager.setProps({width, height});\n      this.props.onResize({width: this.width, height: this.height});\n    }\n  }\n\n  // If canvas size has changed, reads out the new size and returns true\n  _checkForCanvasSizeChange() {\n    const {canvas} = this;\n    if (!canvas) {\n      return false;\n    }\n    // Fallback to width/height when clientWidth/clientHeight are 0 or undefined.\n    const newWidth = canvas.clientWidth || canvas.width;\n    const newHeight = canvas.clientHeight || canvas.height;\n    if (newWidth !== this.width || newHeight !== this.height) {\n      this.width = newWidth;\n      this.height = newHeight;\n      return true;\n    }\n    return false;\n  }\n\n  _createAnimationLoop(props) {\n    const {\n      width,\n      height,\n      gl,\n      glOptions,\n      debug,\n      onError,\n      onBeforeRender,\n      onAfterRender,\n      useDevicePixels,\n      autoResizeDrawingBuffer\n    } = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer,\n      autoResizeViewport: false,\n      gl,\n      onCreateContext: opts =>\n        createGLContext({\n          ...glOptions,\n          ...opts,\n          canvas: this.canvas,\n          debug,\n          onContextLost: () => this._onContextLost()\n        }),\n      onInitialize: context => this._setGLContext(context.gl),\n      onRender: this._onRenderFrame.bind(this),\n      onBeforeRender,\n      onAfterRender,\n      onError\n    });\n  }\n\n  // Get the most relevant view state: props.viewState, if supplied, shadows internal viewState\n  // TODO: For backwards compatibility ensure numeric width and height is added to the viewState\n  _getViewState() {\n    return this.props.viewState || this.viewState;\n  }\n\n  // Get the view descriptor list\n  _getViews() {\n    // Default to a full screen map view port\n    let views = this.props.views || [new MapView({id: 'default-view'})];\n    views = Array.isArray(views) ? views : [views];\n    if (views.length && this.props.controller) {\n      // Backward compatibility: support controller prop\n      views[0].props.controller = this.props.controller;\n    }\n    return views;\n  }\n\n  _onContextLost() {\n    const {onError} = this.props;\n    if (this.animationLoop && onError) {\n      onError(new Error(`WebGL context is lost`));\n    }\n  }\n\n  // The `pointermove` event may fire multiple times in between two animation frames,\n  // it's a waste of time to run picking without rerender. Instead we save the last pick\n  // request and only do it once on the next animation frame.\n  _onPointerMove(event) {\n    const {_pickRequest} = this;\n    if (event.type === 'pointerleave') {\n      _pickRequest.x = -1;\n      _pickRequest.y = -1;\n      _pickRequest.radius = 0;\n    } else if (event.leftButton || event.rightButton) {\n      // Do not trigger onHover callbacks if mouse button is down.\n      return;\n    } else {\n      const pos = event.offsetCenter;\n      // Do not trigger callbacks when click/hover position is invalid. Doing so will cause a\n      // assertion error when attempting to unproject the position.\n      if (!pos) {\n        return;\n      }\n      _pickRequest.x = pos.x;\n      _pickRequest.y = pos.y;\n      _pickRequest.radius = this.props.pickingRadius;\n    }\n\n    if (this.layerManager) {\n      this.layerManager.context.mousePosition = {x: _pickRequest.x, y: _pickRequest.y};\n    }\n\n    _pickRequest.event = event;\n    _pickRequest.mode = 'hover';\n  }\n\n  // Actually run picking\n  _pickAndCallback() {\n    const {_pickRequest} = this;\n\n    if (_pickRequest.event) {\n      // Perform picking\n      const {result, emptyInfo} = this._pick('pickObject', 'pickObject Time', _pickRequest);\n      this.interactiveState.isHovering = result.length > 0;\n\n      // There are 4 possible scenarios:\n      // result is [outInfo, pickedInfo] (moved from one pickable layer to another)\n      // result is [outInfo] (moved outside of a pickable layer)\n      // result is [pickedInfo] (moved into or over a pickable layer)\n      // result is [] (nothing is or was picked)\n      //\n      // `layer.props.onHover` should be called on all affected layers (out/over)\n      // `deck.props.onHover` should be called with the picked info if any, or empty info otherwise\n      // `deck.props.getTooltip` should be called with the picked info if any, or empty info otherwise\n\n      // Execute callbacks\n      let pickedInfo = emptyInfo;\n      let handled = false;\n      for (const info of result) {\n        pickedInfo = info;\n        handled = info.layer.onHover(info, _pickRequest.event);\n      }\n      if (!handled && this.props.onHover) {\n        this.props.onHover(pickedInfo, _pickRequest.event);\n      }\n\n      // Update tooltip\n      if (this.props.getTooltip) {\n        const displayInfo = this.props.getTooltip(pickedInfo);\n        this.tooltip.setTooltip(displayInfo, pickedInfo.x, pickedInfo.y);\n      }\n\n      // Clear pending pickRequest\n      _pickRequest.event = null;\n    }\n  }\n\n  _updateCursor() {\n    const container = this.props.parent || this.canvas;\n    if (container) {\n      container.style.cursor = this.props.getCursor(this.interactiveState);\n    }\n  }\n\n  _setGLContext(gl) {\n    if (this.layerManager) {\n      return;\n    }\n\n    // if external context...\n    if (!this.canvas) {\n      this.canvas = gl.canvas;\n      instrumentGLContext(gl, {enable: true, copyState: true});\n    }\n\n    this.tooltip = new Tooltip(this.canvas);\n\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    // timeline for transitions\n    const timeline = new Timeline();\n    timeline.play();\n    this.animationLoop.attachTimeline(timeline);\n\n    this.eventManager = new EventManager(this.props.parent || gl.canvas, {\n      touchAction: this.props.touchAction,\n      recognizerOptions: this.props.eventRecognizerOptions,\n      events: {\n        pointerdown: this._onPointerDown,\n        pointermove: this._onPointerMove,\n        pointerleave: this._onPointerMove\n      }\n    });\n    for (const eventType in EVENTS) {\n      this.eventManager.on(eventType, this._onEvent);\n    }\n\n    this.viewManager = new ViewManager({\n      timeline,\n      eventManager: this.eventManager,\n      onViewStateChange: this._onViewStateChange.bind(this),\n      onInteractionStateChange: this._onInteractionStateChange.bind(this),\n      views: this._getViews(),\n      viewState: this._getViewState(),\n      width: this.width,\n      height: this.height\n    });\n\n    // viewManager must be initialized before layerManager\n    // layerManager depends on viewport created by viewManager.\n    const viewport = this.viewManager.getViewports()[0];\n\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {\n      deck: this,\n      stats: this.stats,\n      viewport,\n      timeline\n    });\n\n    this.effectManager = new EffectManager();\n\n    this.deckRenderer = new DeckRenderer(gl);\n\n    this.deckPicker = new DeckPicker(gl);\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n    this.props.onLoad();\n  }\n\n  _drawLayers(redrawReason, renderOptions) {\n    const {gl} = this.layerManager.context;\n\n    setParameters(gl, this.props.parameters);\n\n    this.props.onBeforeRender({gl});\n\n    this.deckRenderer.renderLayers({\n      target: this.props._framebuffer,\n      layers: this.layerManager.getLayers(),\n      viewports: this.viewManager.getViewports(),\n      onViewportActive: this.layerManager.activateViewport,\n      views: this.viewManager.getViews(),\n      pass: 'screen',\n      redrawReason,\n      effects: this.effectManager.getEffects(),\n      ...renderOptions\n    });\n\n    this.props.onAfterRender({gl});\n  }\n\n  // Callbacks\n\n  _onRenderFrame(animationProps) {\n    this._getFrameStats();\n\n    // Log perf stats every second\n    if (this._metricsCounter++ % 60 === 0) {\n      this._getMetrics();\n      this.stats.reset();\n      log.table(4, this.metrics)();\n\n      // Experimental: report metrics\n      if (this.props._onMetrics) {\n        this.props._onMetrics(this.metrics);\n      }\n    }\n\n    this._updateCanvasSize();\n\n    this._updateCursor();\n\n    // If view state has changed, clear tooltip\n    if (this.tooltip.isVisible && this.viewManager.needsRedraw()) {\n      this.tooltip.setTooltip(null);\n    }\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    // Note: This can trigger a redraw\n    this.layerManager.updateLayers();\n\n    // Perform picking request if any\n    this._pickAndCallback();\n\n    // Redraw if necessary\n    this.redraw(false);\n\n    // Update viewport transition if needed\n    // Note: this can trigger `onViewStateChange`, and affect layers\n    // We want to defer these changes to the next frame\n    if (this.viewManager) {\n      this.viewManager.updateViewStates();\n    }\n  }\n\n  // Callbacks\n\n  _onViewStateChange(params) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.viewState) {\n      this.viewState = {...this.viewState, [params.viewId]: viewState};\n      if (!this.props.viewState) {\n        // Apply internal view state\n        if (this.viewManager) {\n          this.viewManager.setProps({viewState: this.viewState});\n        }\n      }\n    }\n  }\n\n  _onInteractionStateChange(interactionState) {\n    this.interactiveState.isDragging = interactionState.isDragging;\n    this.props.onInteractionStateChange(interactionState);\n  }\n\n  _onEvent(event) {\n    const eventOptions = EVENTS[event.type];\n    const pos = event.offsetCenter;\n\n    if (!eventOptions || !pos) {\n      return;\n    }\n\n    // Reuse last picked object\n    const layers = this.layerManager.getLayers();\n    const info = this.deckPicker.getLastPickedObject(\n      {\n        x: pos.x,\n        y: pos.y,\n        layers,\n        viewports: this.getViewports(pos)\n      },\n      this._lastPointerDownInfo\n    );\n\n    const {layer} = info;\n    const layerHandler =\n      layer && (layer[eventOptions.handler] || layer.props[eventOptions.handler]);\n    const rootHandler = this.props[eventOptions.handler];\n    let handled = false;\n\n    if (layerHandler) {\n      handled = layerHandler.call(layer, info, event);\n    }\n    if (!handled && rootHandler) {\n      rootHandler(info, event);\n    }\n  }\n\n  _onPointerDown(event) {\n    const pos = event.offsetCenter;\n    this._lastPointerDownInfo = this.pickObject({\n      x: pos.x,\n      y: pos.y,\n      radius: this.props.pickingRadius\n    });\n  }\n\n  _getFrameStats() {\n    const {stats} = this;\n    stats.get('frameRate').timeEnd();\n    stats.get('frameRate').timeStart();\n\n    // Get individual stats from luma.gl so reset works\n    const animationLoopStats = this.animationLoop.stats;\n    stats.get('GPU Time').addTime(animationLoopStats.get('GPU Time').lastTiming);\n    stats.get('CPU Time').addTime(animationLoopStats.get('CPU Time').lastTiming);\n  }\n\n  _getMetrics() {\n    const {metrics, stats} = this;\n    metrics.fps = stats.get('frameRate').getHz();\n    metrics.setPropsTime = stats.get('setProps Time').time;\n    metrics.updateAttributesTime = stats.get('Update Attributes').time;\n    metrics.framesRedrawn = stats.get('Redraw Count').count;\n    metrics.pickTime =\n      stats.get('pickObject Time').time +\n      stats.get('pickMultipleObjects Time').time +\n      stats.get('pickObjects Time').time;\n    metrics.pickCount = stats.get('Pick Count').count;\n\n    // Luma stats\n    metrics.gpuTime = stats.get('GPU Time').time;\n    metrics.cpuTime = stats.get('CPU Time').time;\n    metrics.gpuTimePerFrame = stats.get('GPU Time').getAverageTime();\n    metrics.cpuTimePerFrame = stats.get('CPU Time').getAverageTime();\n\n    const memoryStats = lumaStats.get('Memory Usage');\n    metrics.bufferMemory = memoryStats.get('Buffer Memory').count;\n    metrics.textureMemory = memoryStats.get('Texture Memory').count;\n    metrics.renderbufferMemory = memoryStats.get('Renderbuffer Memory').count;\n    metrics.gpuMemory = memoryStats.get('GPU Memory').count;\n  }\n}\n\nDeck.getPropTypes = getPropTypes;\nDeck.defaultProps = defaultProps;\n\n// This is used to defeat tree shaking of init.js\n// https://github.com/visgl/deck.gl/issues/3213\nDeck.VERSION = deckGlobal.VERSION;\n"],"file":"deck.js"}