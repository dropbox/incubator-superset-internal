{"version":3,"sources":["../../../src/viewports/globe-viewport.js"],"names":["Matrix4","Viewport","PROJECTION_MODE","vec3","vec4","DEGREES_TO_RADIANS","Math","PI","RADIANS_TO_DEGREES","EARTH_RADIUS","GLOBE_RADIUS","getDistanceScales","unitsPerMeter","unitsPerDegree","unitsPerMeter2","metersPerUnit","unitsPerDegree2","degreesPerUnit","GlobeViewport","constructor","opts","latitude","longitude","zoom","nearZMultiplier","farZMultiplier","resolution","width","height","altitude","max","viewMatrix","lookAt","eye","up","scale","pow","rotateX","rotateZ","halfFov","atan","relativeScale","fovyRadians","aspect","focalDistance","near","far","min","distanceScales","projectionMode","GLOBE","getBounds","options","unprojectOption","targetZ","z","left","unproject","top","right","bottom","xyz","topLeft","x","y","y2","pixelUnprojectionMatrix","coord","Number","isFinite","transformVector","coord0","coord1","lt","lSqr","sqrLen","sub","l0Sqr","l1Sqr","sSqr","dSqr","r0","sqrt","dr","t","lerp","X","Y","Z","unprojectPosition","projectPosition","lng","lat","lambda","phi","cosPhi","cos","D","sin","len","asin","atan2","projectFlat","unprojectFlat","panByPosition","coords","pixel","fromPosition","matrix","vector","result","transformMat4"],"mappings":"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","sourcesContent":["import {Matrix4} from 'math.gl';\nimport Viewport from './viewport';\nimport {PROJECTION_MODE} from '../lib/constants';\n\nimport * as vec3 from 'gl-matrix/vec3';\nimport * as vec4 from 'gl-matrix/vec4';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\nconst RADIANS_TO_DEGREES = 180 / Math.PI;\nconst EARTH_RADIUS = 6370972;\nconst GLOBE_RADIUS = 256;\n\nfunction getDistanceScales() {\n  const unitsPerMeter = GLOBE_RADIUS / EARTH_RADIUS;\n  const unitsPerDegree = (Math.PI / 180) * GLOBE_RADIUS;\n\n  return {\n    unitsPerMeter: [unitsPerMeter, unitsPerMeter, unitsPerMeter],\n    unitsPerMeter2: [0, 0, 0],\n    metersPerUnit: [1 / unitsPerMeter, 1 / unitsPerMeter, 1 / unitsPerMeter],\n    unitsPerDegree: [unitsPerDegree, unitsPerDegree, unitsPerMeter],\n    unitsPerDegree2: [0, 0, 0],\n    degreesPerUnit: [1 / unitsPerDegree, 1 / unitsPerDegree, 1 / unitsPerMeter]\n  };\n}\n\nexport default class GlobeViewport extends Viewport {\n  constructor(opts = {}) {\n    const {\n      latitude = 0,\n      longitude = 0,\n      zoom = 11,\n      nearZMultiplier = 0.1,\n      farZMultiplier = 2,\n      resolution = 10\n    } = opts;\n\n    let {width, height, altitude = 1.5} = opts;\n\n    width = width || 1;\n    height = height || 1;\n    altitude = Math.max(0.75, altitude);\n\n    // Calculate view matrix\n    const viewMatrix = new Matrix4().lookAt({eye: [0, -altitude, 0], up: [0, 0, 1]});\n    const scale = Math.pow(2, zoom);\n    viewMatrix.rotateX(latitude * DEGREES_TO_RADIANS);\n    viewMatrix.rotateZ(-longitude * DEGREES_TO_RADIANS);\n    viewMatrix.scale(scale / height);\n\n    const halfFov = Math.atan(0.5 / altitude);\n    const relativeScale = (GLOBE_RADIUS * 2 * scale) / height;\n\n    super({\n      ...opts,\n      // x, y,\n      width,\n      height,\n\n      // view matrix\n      viewMatrix,\n      longitude,\n      latitude,\n      zoom,\n\n      // projection matrix parameters\n      fovyRadians: halfFov * 2,\n      aspect: width / height,\n      focalDistance: altitude,\n      near: nearZMultiplier,\n      far: Math.min(2, 1 / relativeScale + 1) * altitude * farZMultiplier\n    });\n\n    this.resolution = resolution;\n    this.distanceScales = getDistanceScales();\n  }\n\n  get projectionMode() {\n    return PROJECTION_MODE.GLOBE;\n  }\n\n  getDistanceScales() {\n    return this.distanceScales;\n  }\n\n  getBounds(options = {}) {\n    const unprojectOption = {targetZ: options.z || 0};\n\n    const left = this.unproject([0, this.height / 2], unprojectOption);\n    const top = this.unproject([this.width / 2, 0], unprojectOption);\n    const right = this.unproject([this.width, this.height / 2], unprojectOption);\n    const bottom = this.unproject([this.width / 2, this.height], unprojectOption);\n\n    if (right[0] < this.longitude) right[0] += 360;\n    if (left[0] > this.longitude) left[0] -= 360;\n\n    return [\n      Math.min(left[0], right[0], top[0], bottom[0]),\n      Math.min(left[1], right[1], top[1], bottom[1]),\n      Math.max(left[0], right[0], top[0], bottom[0]),\n      Math.max(left[1], right[1], top[1], bottom[1])\n    ];\n  }\n\n  unproject(xyz, {topLeft = true, targetZ} = {}) {\n    const [x, y, z] = xyz;\n\n    const y2 = topLeft ? y : this.height - y;\n    const {pixelUnprojectionMatrix} = this;\n\n    let coord;\n    if (Number.isFinite(z)) {\n      // Has depth component\n      coord = transformVector(pixelUnprojectionMatrix, [x, y2, z, 1]);\n    } else {\n      // since we don't know the correct projected z value for the point,\n      // unproject two points to get a line and then find the point on that line that intersects with the sphere\n      const coord0 = transformVector(pixelUnprojectionMatrix, [x, y2, -1, 1]);\n      const coord1 = transformVector(pixelUnprojectionMatrix, [x, y2, 1, 1]);\n\n      const lt = ((targetZ || 0) / EARTH_RADIUS + 1) * GLOBE_RADIUS;\n      const lSqr = vec3.sqrLen(vec3.sub([], coord0, coord1));\n      const l0Sqr = vec3.sqrLen(coord0);\n      const l1Sqr = vec3.sqrLen(coord1);\n      const sSqr = (4 * l0Sqr * l1Sqr - (lSqr - l0Sqr - l1Sqr) ** 2) / 16;\n      const dSqr = (4 * sSqr) / lSqr;\n      const r0 = Math.sqrt(l0Sqr - dSqr);\n      const dr = Math.sqrt(Math.max(0, lt * lt - dSqr));\n      const t = (r0 - dr) / Math.sqrt(lSqr);\n\n      coord = vec3.lerp([], coord0, coord1, t);\n    }\n    const [X, Y, Z] = this.unprojectPosition(coord);\n\n    if (Number.isFinite(z)) {\n      return [X, Y, Z];\n    }\n    return Number.isFinite(targetZ) ? [X, Y, targetZ] : [X, Y];\n  }\n\n  projectPosition(xyz) {\n    const [lng, lat, Z = 0] = xyz;\n    const lambda = lng * DEGREES_TO_RADIANS;\n    const phi = lat * DEGREES_TO_RADIANS;\n    const cosPhi = Math.cos(phi);\n    const D = (Z / EARTH_RADIUS + 1) * GLOBE_RADIUS;\n\n    return [Math.sin(lambda) * cosPhi * D, -Math.cos(lambda) * cosPhi * D, Math.sin(phi) * D];\n  }\n\n  unprojectPosition(xyz) {\n    const [x, y, z] = xyz;\n    const D = vec3.len(xyz);\n    const phi = Math.asin(z / D);\n    const lambda = Math.atan2(x, -y);\n\n    const lng = lambda * RADIANS_TO_DEGREES;\n    const lat = phi * RADIANS_TO_DEGREES;\n    const Z = (D / GLOBE_RADIUS - 1) * EARTH_RADIUS;\n    return [lng, lat, Z];\n  }\n\n  projectFlat(xyz) {\n    return xyz;\n  }\n\n  unprojectFlat(xyz) {\n    return xyz;\n  }\n\n  panByPosition(coords, pixel) {\n    const fromPosition = this.unproject(pixel);\n    return {\n      longitude: coords[0] - fromPosition[0] + this.longitude,\n      latitude: coords[1] - fromPosition[1] + this.latitude\n    };\n  }\n}\n\nfunction transformVector(matrix, vector) {\n  const result = vec4.transformMat4([], vector, matrix);\n  vec4.scale(result, result, 1 / result[3]);\n  return result;\n}\n"],"file":"globe-viewport.js"}