{"version":3,"sources":["../../../src/views/first-person-view.js"],"names":["View","Viewport","getMeterZoom","Matrix4","_SphericalCoordinates","SphericalCoordinates","FirstPersonController","getDirectionFromBearingAndPitch","bearing","pitch","spherical","direction","toVector3","normalize","FirstPersonViewport","constructor","props","modelMatrix","up","dir","center","transformDirection","zoom","scale","Math","pow","viewMatrix","lookAt","eye","FirstPersonView","type","controller","_getControllerProps","displayName"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,YAAR,QAA2B,uBAA3B;AACA,SAAQC,OAAR,EAAiBC,qBAAqB,IAAIC,oBAA1C,QAAqE,SAArE;AACA,OAAOC,qBAAP,MAAkC,wCAAlC;;AAEA,SAASC,+BAAT,CAAyC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAzC,EAA2D;AACzD,QAAMC,SAAS,GAAG,IAAIL,oBAAJ,CAAyB;AAACG,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAzB,CAAlB;AACA,QAAME,SAAS,GAAGD,SAAS,CAACE,SAAV,GAAsBC,SAAtB,EAAlB;AACA,SAAOF,SAAP;AACD;;AAED,MAAMG,mBAAN,SAAkCb,QAAlC,CAA2C;AACzCc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEjB,UAAM;AAEJC,MAAAA,WAAW,GAAG,IAFV;AAGJT,MAAAA,OAAO,GAAG,CAHN;AAIJC,MAAAA,KAAK,GAAG,CAJJ;AAKJS,MAAAA,EAAE,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AALD,QAMFF,KANJ;AASA,UAAMG,GAAG,GAAGZ,+BAA+B,CAAC;AAC1CC,MAAAA,OAD0C;AAG1CC,MAAAA,KAAK,EAAEA,KAAK,KAAK,CAAC,EAAX,GAAgB,MAAhB,GAAyB,KAAKA;AAHK,KAAD,CAA3C;AAOA,UAAMW,MAAM,GAAGH,WAAW,GAAGA,WAAW,CAACI,kBAAZ,CAA+BF,GAA/B,CAAH,GAAyCA,GAAnE;AAGA,UAAMG,IAAI,GAAGpB,YAAY,CAACc,KAAD,CAAzB;AACA,UAAMO,KAAK,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYH,IAAZ,CAAd;AACA,UAAMI,UAAU,GAAG,IAAIvB,OAAJ,GAAcwB,MAAd,CAAqB;AAACC,MAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN;AAAiBR,MAAAA,MAAjB;AAAyBF,MAAAA;AAAzB,KAArB,EAAmDK,KAAnD,CAAyDA,KAAzD,CAAnB;AAEA,UAAM,EACJ,GAAGP,KADC;AAEJM,MAAAA,IAFI;AAGJI,MAAAA;AAHI,KAAN;AAKD;;AA/BwC;;AAkC3C,eAAe,MAAMG,eAAN,SAA8B7B,IAA9B,CAAmC;AAChDe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAM,EACJ,GAAGA,KADC;AAEJc,MAAAA,IAAI,EAAEhB;AAFF,KAAN;AAID;;AAED,MAAIiB,UAAJ,GAAiB;AACf,WAAO,KAAKC,mBAAL,CAAyB;AAC9BF,MAAAA,IAAI,EAAExB;AADwB,KAAzB,CAAP;AAGD;;AAZ+C;AAelDuB,eAAe,CAACI,WAAhB,GAA8B,iBAA9B","sourcesContent":["import View from './view';\nimport Viewport from '../viewports/viewport';\nimport {getMeterZoom} from '@math.gl/web-mercator';\nimport {Matrix4, _SphericalCoordinates as SphericalCoordinates} from 'math.gl';\nimport FirstPersonController from '../controllers/first-person-controller';\n\nfunction getDirectionFromBearingAndPitch({bearing, pitch}) {\n  const spherical = new SphericalCoordinates({bearing, pitch});\n  const direction = spherical.toVector3().normalize();\n  return direction;\n}\n\nclass FirstPersonViewport extends Viewport {\n  constructor(props) {\n    // TODO - push direction handling into Matrix4.lookAt\n    const {\n      // view matrix arguments\n      modelMatrix = null,\n      bearing = 0,\n      pitch = 0,\n      up = [0, 0, 1] // Defines up direction, default positive z axis,\n    } = props;\n\n    // Always calculate direction from bearing and pitch\n    const dir = getDirectionFromBearingAndPitch({\n      bearing,\n      // Avoid \"pixel project matrix not invertible\" error\n      pitch: pitch === -90 ? 0.0001 : 90 + pitch\n    });\n\n    // Direction is relative to model coordinates, of course\n    const center = modelMatrix ? modelMatrix.transformDirection(dir) : dir;\n\n    // Just the direction. All the positioning is done in viewport.js\n    const zoom = getMeterZoom(props);\n    const scale = Math.pow(2, zoom);\n    const viewMatrix = new Matrix4().lookAt({eye: [0, 0, 0], center, up}).scale(scale);\n\n    super({\n      ...props,\n      zoom,\n      viewMatrix\n    });\n  }\n}\n\nexport default class FirstPersonView extends View {\n  constructor(props) {\n    super({\n      ...props,\n      type: FirstPersonViewport\n    });\n  }\n\n  get controller() {\n    return this._getControllerProps({\n      type: FirstPersonController\n    });\n  }\n}\n\nFirstPersonView.displayName = 'FirstPersonView';\n"],"file":"first-person-view.js"}