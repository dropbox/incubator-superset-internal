{"version":3,"sources":["../../../../src/effects/lighting/sun-light.js"],"names":["DirectionalLight","getSunlightDirection","SunLight","constructor","timestamp","others","getProjectedLight","layer","viewport","context","isGlobe","resolution","x","y","z","direction","latitude","longitude"],"mappings":"AAAA,SAAQA,gBAAR,QAA+B,qBAA/B;AACA,SAAQC,oBAAR,QAAmC,WAAnC;AAEA,eAAe,MAAMC,QAAN,SAAuBF,gBAAvB,CAAwC;AACrDG,EAAAA,WAAW,CAAC;AAACC,IAAAA,SAAD;AAAY,OAAGC;AAAf,GAAD,EAAyB;AAClC,UAAMA,MAAN;AAEA,SAAKD,SAAL,GAAiBA,SAAjB;AACD;;AAEDE,EAAAA,iBAAiB,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAU;AACzB,UAAM;AAACC,MAAAA;AAAD,QAAaD,KAAK,CAACE,OAAzB;AACA,UAAMC,OAAO,GAAGF,QAAQ,CAACG,UAAT,GAAsB,CAAtC;;AAEA,QAAID,OAAJ,EAAa;AAEX,YAAM,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYb,oBAAoB,CAAC,KAAKG,SAAN,EAAiB,CAAjB,EAAoB,CAApB,CAAtC;AACA,WAAKW,SAAL,GAAiB,CAACH,CAAD,EAAI,CAACE,CAAL,EAAQD,CAAR,CAAjB;AACD,KAJD,MAIO;AACL,YAAM;AAACG,QAAAA,QAAD;AAAWC,QAAAA;AAAX,UAAwBT,QAA9B;AACA,WAAKO,SAAL,GAAiBd,oBAAoB,CAAC,KAAKG,SAAN,EAAiBY,QAAjB,EAA2BC,SAA3B,CAArC;AACD;;AAED,WAAO,IAAP;AACD;;AArBoD","sourcesContent":["import {DirectionalLight} from './directional-light';\nimport {getSunlightDirection} from './suncalc';\n\nexport default class SunLight extends DirectionalLight {\n  constructor({timestamp, ...others}) {\n    super(others);\n\n    this.timestamp = timestamp;\n  }\n\n  getProjectedLight({layer}) {\n    const {viewport} = layer.context;\n    const isGlobe = viewport.resolution > 0;\n\n    if (isGlobe) {\n      // Rotate vector to align with the direction of the globe projection (up at lon:0,lat:0 is [0, -1, 0])\n      const [x, y, z] = getSunlightDirection(this.timestamp, 0, 0);\n      this.direction = [x, -z, y];\n    } else {\n      const {latitude, longitude} = viewport;\n      this.direction = getSunlightDirection(this.timestamp, latitude, longitude);\n    }\n\n    return this;\n  }\n}\n"],"file":"sun-light.js"}