{"version":3,"sources":["../../../src/terrain-layer/terrain-layer.js"],"names":["DUMMY_DATA","defaultProps","TileLayer","elevationData","urlType","texture","optional","meshMaxError","type","value","bounds","compare","color","elevationDecoder","rScaler","gScaler","bScaler","offset","workerUrl","wireframe","material","loaders","TerrainWorkerLoader","urlTemplateToUpdateTrigger","template","Array","isArray","join","TerrainLayer","props","oldProps","elevationDataChanged","isTiled","includes","setState","shouldReload","state","terrain","loadTerrain","log","removed","signal","loadOptions","getLoadOptions","skirtHeight","fetch","propName","layer","tile","dataUrl","textureUrl","bbox","z","viewport","WebMercatorViewport","longitude","west","east","latitude","north","south","zoom","bottomLeft","projectFlat","topRight","surface","catch","_","Promise","resolve","all","SubLayerClass","getSubLayerClass","SimpleMeshLayer","data","mesh","coordinateSystem","COORDINATE_SYSTEM","CARTESIAN","getPosition","d","getColor","tiles","zRange","ranges","map","content","filter","Boolean","arr","header","boundingBox","bound","length","minZ","Math","min","x","maxZ","max","tileSize","maxZoom","minZoom","extent","maxRequests","onTileLoad","onTileUnload","onTileError","maxCacheSize","maxCacheByteSize","refinementStrategy","getSubLayerProps","id","getTileData","getTiledTerrainData","bind","renderSubLayers","updateTriggers","onViewportLoad","_instanced","CompositeLayer","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CompositeLayer, log} from '@deck.gl/core';\nimport {SimpleMeshLayer} from '@deck.gl/mesh-layers';\nimport {WebMercatorViewport, COORDINATE_SYSTEM} from '@deck.gl/core';\nimport {TerrainWorkerLoader} from '@loaders.gl/terrain';\nimport TileLayer from '../tile-layer/tile-layer';\nimport {urlType, getURLFromTemplate} from '../tile-layer/utils';\n\nconst DUMMY_DATA = [1];\n\nconst defaultProps = {\n  ...TileLayer.defaultProps,\n  // Image url that encodes height data\n  elevationData: urlType,\n  // Image url to use as texture\n  texture: {...urlType, optional: true},\n  // Martini error tolerance in meters, smaller number -> more detailed mesh\n  meshMaxError: {type: 'number', value: 4.0},\n  // Bounding box of the terrain image, [minX, minY, maxX, maxY] in world coordinates\n  bounds: {type: 'array', value: null, optional: true, compare: true},\n  // Color to use if texture is unavailable\n  color: {type: 'color', value: [255, 255, 255]},\n  // Object to decode height data, from (r, g, b) to height in meters\n  elevationDecoder: {\n    type: 'object',\n    value: {\n      rScaler: 1,\n      gScaler: 0,\n      bScaler: 0,\n      offset: 0\n    }\n  },\n  // Supply url to local terrain worker bundle. Only required if running offline and cannot access CDN.\n  workerUrl: {type: 'string', value: null},\n  // Same as SimpleMeshLayer wireframe\n  wireframe: false,\n  material: true,\n\n  loaders: [TerrainWorkerLoader]\n};\n\n// Turns array of templates into a single string to work around shallow change\nfunction urlTemplateToUpdateTrigger(template) {\n  if (Array.isArray(template)) {\n    return template.join(';');\n  }\n  return template;\n}\n\n/**\n * state: {\n *   isTiled: True renders TileLayer of many SimpleMeshLayers, false renders one SimpleMeshLayer\n *   terrain: Mesh object. Only defined when isTiled is false.\n * }\n */\nexport default class TerrainLayer extends CompositeLayer {\n  updateState({props, oldProps}) {\n    const elevationDataChanged = props.elevationData !== oldProps.elevationData;\n    if (elevationDataChanged) {\n      const {elevationData} = props;\n      const isTiled =\n        elevationData &&\n        (Array.isArray(elevationData) ||\n          (elevationData.includes('{x}') && elevationData.includes('{y}')));\n      this.setState({isTiled});\n    }\n\n    // Reloading for single terrain mesh\n    const shouldReload =\n      elevationDataChanged ||\n      props.meshMaxError !== oldProps.meshMaxError ||\n      props.elevationDecoder !== oldProps.elevationDecoder ||\n      props.bounds !== oldProps.bounds;\n\n    if (!this.state.isTiled && shouldReload) {\n      const terrain = this.loadTerrain(props);\n      this.setState({terrain});\n    }\n\n    // TODO - remove in v9\n    if (props.workerUrl) {\n      log.removed('workerUrl', 'loadOptions.terrain.workerUrl')();\n    }\n  }\n\n  loadTerrain({elevationData, bounds, elevationDecoder, meshMaxError, signal}) {\n    if (!elevationData) {\n      return null;\n    }\n    let loadOptions = this.getLoadOptions();\n    loadOptions = {\n      ...loadOptions,\n      terrain: {\n        skirtHeight: this.state.isTiled ? meshMaxError * 2 : 0,\n        ...loadOptions?.terrain,\n        bounds,\n        meshMaxError,\n        elevationDecoder\n      }\n    };\n    const {fetch} = this.props;\n    return fetch(elevationData, {propName: 'elevationData', layer: this, loadOptions, signal});\n  }\n\n  getTiledTerrainData(tile) {\n    const {elevationData, fetch, texture, elevationDecoder, meshMaxError} = this.props;\n    const dataUrl = getURLFromTemplate(elevationData, tile);\n    const textureUrl = getURLFromTemplate(texture, tile);\n\n    const {bbox, signal, z} = tile;\n    const viewport = new WebMercatorViewport({\n      longitude: (bbox.west + bbox.east) / 2,\n      latitude: (bbox.north + bbox.south) / 2,\n      zoom: z\n    });\n    const bottomLeft = viewport.projectFlat([bbox.west, bbox.south]);\n    const topRight = viewport.projectFlat([bbox.east, bbox.north]);\n    const bounds = [bottomLeft[0], bottomLeft[1], topRight[0], topRight[1]];\n\n    const terrain = this.loadTerrain({\n      elevationData: dataUrl,\n      bounds,\n      elevationDecoder,\n      meshMaxError,\n      signal\n    });\n    const surface = textureUrl\n      ? // If surface image fails to load, the tile should still be displayed\n        fetch(textureUrl, {propName: 'texture', layer: this, loaders: [], signal}).catch(_ => null)\n      : Promise.resolve(null);\n\n    return Promise.all([terrain, surface]);\n  }\n\n  renderSubLayers(props) {\n    const SubLayerClass = this.getSubLayerClass('mesh', SimpleMeshLayer);\n    const {data, color} = props;\n\n    if (!data) {\n      return null;\n    }\n\n    const [mesh, texture] = data;\n\n    return new SubLayerClass(props, {\n      data: DUMMY_DATA,\n      mesh,\n      texture,\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      getPosition: d => [0, 0, 0],\n      getColor: color\n    });\n  }\n\n  // Update zRange of viewport\n  onViewportLoad(tiles) {\n    if (!tiles) {\n      return;\n    }\n\n    const {zRange} = this.state;\n    const ranges = tiles\n      .map(tile => tile.content)\n      .filter(Boolean)\n      .map(arr => {\n        const bounds = arr[0].header.boundingBox;\n        return bounds.map(bound => bound[2]);\n      });\n    if (ranges.length === 0) {\n      return;\n    }\n    const minZ = Math.min(...ranges.map(x => x[0]));\n    const maxZ = Math.max(...ranges.map(x => x[1]));\n\n    if (!zRange || minZ < zRange[0] || maxZ > zRange[1]) {\n      this.setState({zRange: [minZ, maxZ]});\n    }\n  }\n\n  renderLayers() {\n    const {\n      color,\n      material,\n      elevationData,\n      texture,\n      wireframe,\n      meshMaxError,\n      elevationDecoder,\n      tileSize,\n      maxZoom,\n      minZoom,\n      extent,\n      maxRequests,\n      onTileLoad,\n      onTileUnload,\n      onTileError,\n      maxCacheSize,\n      maxCacheByteSize,\n      refinementStrategy\n    } = this.props;\n\n    if (this.state.isTiled) {\n      return new TileLayer(\n        this.getSubLayerProps({\n          id: 'tiles'\n        }),\n        {\n          wireframe,\n          color,\n          material,\n          getTileData: this.getTiledTerrainData.bind(this),\n          renderSubLayers: this.renderSubLayers.bind(this),\n          updateTriggers: {\n            getTileData: {\n              elevationData: urlTemplateToUpdateTrigger(elevationData),\n              texture: urlTemplateToUpdateTrigger(texture),\n              meshMaxError,\n              elevationDecoder\n            }\n          },\n          onViewportLoad: this.onViewportLoad.bind(this),\n          zRange: this.state.zRange || null,\n          tileSize,\n          maxZoom,\n          minZoom,\n          extent,\n          maxRequests,\n          onTileLoad,\n          onTileUnload,\n          onTileError,\n          maxCacheSize,\n          maxCacheByteSize,\n          refinementStrategy\n        }\n      );\n    }\n\n    const SubLayerClass = this.getSubLayerClass('mesh', SimpleMeshLayer);\n    return new SubLayerClass(\n      this.getSubLayerProps({\n        id: 'mesh'\n      }),\n      {\n        data: DUMMY_DATA,\n        mesh: this.state.terrain,\n        texture,\n        _instanced: false,\n        getPosition: d => [0, 0, 0],\n        getColor: color,\n        material,\n        wireframe\n      }\n    );\n  }\n}\n\nTerrainLayer.layerName = 'TerrainLayer';\nTerrainLayer.defaultProps = defaultProps;\n"],"file":"terrain-layer.js"}