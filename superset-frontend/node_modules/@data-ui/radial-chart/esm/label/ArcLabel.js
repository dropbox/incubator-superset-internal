function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}function _objectWithoutPropertiesLoose(a,b){if(null==a)return{};var c,d,e={},f=Object.keys(a);for(d=0;d<f.length;d++)c=f[d],0<=b.indexOf(c)||(e[c]=a[c]);return e}import React from"react";import PropTypes from"prop-types";import{svgLabel}from"@data-ui/theme";import additionalProps from"../util/additionalProps";var baseLabel=svgLabel.baseLabel,propTypes={x:PropTypes.number,y:PropTypes.number,paintOrder:PropTypes.string,// eslint-disable-next-line react/forbid-prop-types
arc:PropTypes.object,// if passed, will be passed to any restprops
children:PropTypes.node},defaultProps={x:0,y:0,paintOrder:"stroke",arc:null,children:null};export default function ArcLabel(a){var b=a.x,c=a.y,d=a.children,e=a.arc,f=_objectWithoutPropertiesLoose(a,["x","y","children","arc"]);return React.createElement("text",_extends({x:b,y:c},baseLabel,additionalProps(f,e)),d)}ArcLabel.propTypes=propTypes,ArcLabel.defaultProps=defaultProps;