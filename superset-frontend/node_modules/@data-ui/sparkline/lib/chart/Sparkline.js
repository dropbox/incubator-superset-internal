"use strict";

exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _d3Array = require("d3-array");

var _Group = _interopRequireDefault(require("@vx/group/build/Group"));

var _linear = _interopRequireDefault(require("@vx/scale/build/scales/linear"));

var _BarSeries = _interopRequireDefault(require("../series/BarSeries"));

var _componentIsX = require("../utils/componentIsX");

var _defined = _interopRequireDefault(require("../utils/defined"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var propTypes = {
  ariaLabel: _propTypes.default.string.isRequired,
  children: _propTypes.default.node.isRequired,
  className: _propTypes.default.string,
  // number or objects (with accessors)
  data: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object])),
  height: _propTypes.default.number.isRequired,
  margin: _propTypes.default.shape({
    top: _propTypes.default.number,
    right: _propTypes.default.number,
    bottom: _propTypes.default.number,
    left: _propTypes.default.number
  }),
  max: _propTypes.default.number,
  min: _propTypes.default.number,
  onMouseMove: _propTypes.default.func,
  onMouseLeave: _propTypes.default.func,
  preserveAspectRatio: _propTypes.default.string,
  styles: _propTypes.default.object,
  // eslint-disable-line react/forbid-prop-types
  width: _propTypes.default.number.isRequired,
  valueAccessor: _propTypes.default.func,
  viewBox: _propTypes.default.string
};
var defaultProps = {
  className: null,
  data: [],
  margin: {
    top: 16,
    right: 16,
    bottom: 16,
    left: 16
  },
  max: null,
  min: null,
  onMouseMove: null,
  onMouseLeave: null,
  preserveAspectRatio: null,
  styles: null,
  valueAccessor: function valueAccessor(d) {
    return d;
  },
  viewBox: null
};

var getX = function getX(d) {
  return d.i;
};

var getY = function getY(d) {
  return d.y;
};

var parsedDatumThunk = function parsedDatumThunk(valueAccessor) {
  return function (d, i) {
    var y = valueAccessor(d);
    return _extends({
      i: i,
      y: y,
      id: y
    }, d);
  };
};

var Sparkline =
/*#__PURE__*/
function (_React$PureComponent) {
  _inheritsLoose(Sparkline, _React$PureComponent);

  function Sparkline(props) {
    var _this;

    _this = _React$PureComponent.call(this, props) || this;
    _this.getMaxY = _this.getMaxY.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    _this.state = _this.getStateFromProps(props);
    return _this;
  }

  var _proto = Sparkline.prototype;

  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    var _this2 = this;

    if ([// recompute scales if any of the following change
    'data', 'height', 'margin', 'max', 'min', 'valueAccessor', 'width'].some(function (prop) {
      return _this2.props[prop] !== nextProps[prop];
    }) // eslint-disable-line react/destructuring-assignment
    ) {
        this.setState(this.getStateFromProps(nextProps));
      }
  };

  _proto.getStateFromProps = function getStateFromProps(props) {
    var dimensions = this.getDimmensions(props);
    var scales = this.getScales(props, dimensions);
    return _extends({}, dimensions, scales);
  };

  _proto.getScales = function getScales(props, _ref) {
    var innerHeight = _ref.innerHeight,
        innerWidth = _ref.innerWidth;

    var _ref2 = props || this.props,
        rawData = _ref2.data,
        min = _ref2.min,
        max = _ref2.max,
        valueAccessor = _ref2.valueAccessor;

    var data = rawData.map(parsedDatumThunk(valueAccessor));
    var yExtent = (0, _d3Array.extent)(data, getY);
    var xScale = (0, _linear.default)({
      domain: [0, data.length - 1],
      range: [0, innerWidth]
    });
    var yScale = (0, _linear.default)({
      domain: [(0, _defined.default)(min) ? min : yExtent[0], (0, _defined.default)(max) ? max : yExtent[1]],
      range: [innerHeight, 0]
    });
    return {
      xScale: xScale,
      yScale: yScale,
      data: data
    };
  };

  _proto.getMaxY = function getMaxY() {
    var yScale = this.state.yScale;
    return Math.max.apply(Math, yScale.domain());
  };

  _proto.getDimmensions = function getDimmensions(props) {
    var _ref3 = props || this.props,
        margin = _ref3.margin,
        width = _ref3.width,
        height = _ref3.height;

    var completeMargin = _extends({}, defaultProps.margin, margin);

    return {
      margin: completeMargin,
      innerHeight: height - completeMargin.top - completeMargin.bottom,
      innerWidth: width - completeMargin.left - completeMargin.right
    };
  };

  _proto.render = function render() {
    var _this$props = this.props,
        ariaLabel = _this$props.ariaLabel,
        children = _this$props.children,
        className = _this$props.className,
        height = _this$props.height,
        onMouseMove = _this$props.onMouseMove,
        onMouseLeave = _this$props.onMouseLeave,
        preserveAspectRatio = _this$props.preserveAspectRatio,
        styles = _this$props.styles,
        width = _this$props.width,
        viewBox = _this$props.viewBox;
    var _this$state = this.state,
        data = _this$state.data,
        margin = _this$state.margin,
        xScale = _this$state.xScale,
        yScale = _this$state.yScale;
    var seriesProps = {
      xScale: xScale,
      yScale: yScale,
      data: data,
      getX: getX,
      getY: getY,
      margin: margin
    };
    return _react.default.createElement("svg", {
      "aria-label": ariaLabel,
      className: className,
      height: height,
      role: "img",
      preserveAspectRatio: preserveAspectRatio,
      style: styles,
      width: width,
      viewBox: viewBox
    }, _react.default.createElement(_Group.default, {
      left: margin.left,
      top: margin.top
    }, _react.default.Children.map(children, function (Child) {
      var name = (0, _componentIsX.componentName)(Child);

      if ((0, _componentIsX.isSeries)(name) || (0, _componentIsX.isReferenceLine)(name) || (0, _componentIsX.isBandLine)(name)) {
        return _react.default.cloneElement(Child, seriesProps);
      }

      return Child;
    }), (onMouseMove || onMouseLeave) && _react.default.createElement(_BarSeries.default, _extends({
      fill: "transparent",
      fillOpacity: 0,
      stroke: "transparent",
      strokeWidth: 1
    }, seriesProps, {
      getY: this.getMaxY,
      onMouseMove: onMouseMove,
      onMouseLeave: onMouseLeave
    }))));
  };

  return Sparkline;
}(_react.default.PureComponent);

Sparkline.propTypes = propTypes;
Sparkline.defaultProps = defaultProps;
Sparkline.displayName = 'Sparkline';
var _default = Sparkline;
exports.default = _default;