'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PatternHexagons;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Path = require('./Path');

var _Path2 = _interopRequireDefault(_Path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PatternHexagons(_ref) {
  var id = _ref.id,
      width = _ref.width,
      height = _ref.height,
      path = _ref.path,
      fill = _ref.fill,
      stroke = _ref.stroke,
      strokeWidth = _ref.strokeWidth,
      strokeDasharray = _ref.strokeDasharray,
      strokeLinecap = _ref.strokeLinecap,
      shapeRendering = _ref.shapeRendering,
      background = _ref.background,
      className = _ref.className,
      _ref$size = _ref.size,
      size = _ref$size === undefined ? 3 : _ref$size;

  var s = Math.sqrt(size);
  return _react2.default.createElement(_Path2.default, {
    className: (0, _classnames2.default)('vx-pattern-hexagon', className),
    path: 'M ' + height + ',0 l ' + height + ',0 l ' + height / 2 + ',' + height * s / 2 + ' l ' + -height / 2 + ',' + height * s / 2 + ' l ' + -height + ',0 l ' + -height / 2 + ',' + -height * s / 2 + ' Z M 0,' + height * s / 2 + ' l ' + height / 2 + ',0 M ' + 3 * height + ',' + height * s / 2 + ' l ' + -height / 2 + ',0',
    id: id,
    width: size,
    height: s,
    fill: fill,
    stroke: stroke,
    strokeWidth: strokeWidth,
    strokeDasharray: strokeDasharray,
    strokeLinecap: strokeLinecap,
    shapeRendering: shapeRendering,
    background: background
  });
}

PatternHexagons.propTypes = {
  id: _propTypes2.default.string.isRequired,
  width: _propTypes2.default.number.isRequired,
  height: _propTypes2.default.number.isRequired,
  size: _propTypes2.default.number,
  fill: _propTypes2.default.string,
  className: _propTypes2.default.string,
  background: _propTypes2.default.string,
  stroke: _propTypes2.default.string,
  strokeWidth: _propTypes2.default.number,
  strokeDasharray: _propTypes2.default.string
};