/// <reference types="node" />
import type { Renderer } from '../types';
import { type Optional } from '@applitools/utils';
export declare type KnownResource = {
    hash: HashedResource | {
        errorStatusCode: number;
    };
    dependencies?: string[];
};
export declare type FailedResource = {
    id: string;
    errorStatusCode: number;
    hash: {
        errorStatusCode: number;
    };
};
export declare type ContentfulResource = {
    id: string;
    url: string;
    value: Buffer;
    contentType: string;
    hash: HashedResource;
    dependencies?: string[];
};
export declare type UrlResource = {
    id: string;
    url: string;
    renderer?: Renderer;
};
export declare type HashedResource = {
    hash: string;
    hashFormat: 'sha256';
    contentType: string;
};
export declare function makeResource(resource: Omit<FailedResource, 'hash'>): FailedResource;
export declare function makeResource(resource: Omit<Optional<ContentfulResource, 'id' | 'url' | 'contentType'>, 'hash'>): ContentfulResource;
export declare function makeResource(resource: Omit<UrlResource, 'id'>): UrlResource;
export declare function makeHashedResource(resource: ContentfulResource): HashedResource;
