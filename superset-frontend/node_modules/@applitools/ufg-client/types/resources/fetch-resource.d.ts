import type { Cookie } from '../types';
import { type Logger } from '@applitools/logger';
import { type Fetch, type Proxy } from '@applitools/req';
import { type UrlResource, type ContentfulResource, FailedResource } from './resource';
export declare type FetchResourceSettings = {
    referer?: string;
    proxy?: Proxy;
    autProxy?: Proxy & {
        mode?: 'Allow' | 'Block';
        domains?: string[];
    };
    cookies?: Cookie[];
    userAgent?: string;
};
export declare type FetchResource = (options: {
    resource: UrlResource;
    settings?: FetchResourceSettings;
}) => Promise<ContentfulResource | FailedResource>;
export declare function makeFetchResource({ retryLimit, streamingTimeout, cache, fetch, logger, }?: {
    retryLimit?: number;
    streamingTimeout?: number;
    cache?: Map<string, Promise<ContentfulResource | FailedResource>>;
    fetch?: Fetch;
    logger?: Logger;
}): FetchResource;
