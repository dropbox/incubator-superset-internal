"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.extractSvgDependencyUrls = void 0;
const jsdom_1 = require("@applitools/jsdom");
const extract_css_dependency_urls_1 = require("./extract-css-dependency-urls");
const utils = __importStar(require("@applitools/utils"));
function extractSvgDependencyUrls(svg) {
    const doc = parseDom(svg);
    const srcsetUrls = Array.from(doc.querySelectorAll('img[srcset]')).flatMap(element => {
        return element
            .getAttribute('srcset')
            .split(', ')
            .map(str => str.trim().split(/\s+/, 1)[0]);
    });
    const srcUrls = Array.from(doc.querySelectorAll('img[src]')).map(element => {
        return element.getAttribute('src');
    });
    const fromHref = Array.from(doc.querySelectorAll('image,use,link[rel="stylesheet"]')).map(element => {
        return element.getAttribute('href') || element.getAttribute('xlink:href');
    });
    const fromObjects = Array.from(doc.getElementsByTagName('object')).map(element => {
        return element.getAttribute('data');
    });
    const fromStyleTags = Array.from(doc.querySelectorAll('style')).flatMap(element => {
        return element.textContent ? (0, extract_css_dependency_urls_1.extractCssDependencyUrls)(element.textContent) : [];
    });
    const fromStyleAttrs = Array.from(doc.querySelectorAll('*[style]')).flatMap(element => {
        var _a, _b;
        return [...(_b = (_a = element.style) === null || _a === void 0 ? void 0 : _a.cssText) === null || _b === void 0 ? void 0 : _b.matchAll(/url\((?!['"]?:)['"]?([^'")]*)['"]?\)/g)].map(match => match[1]).filter(Boolean);
    });
    return [...srcsetUrls, ...srcUrls, ...fromHref, ...fromObjects, ...fromStyleTags, ...fromStyleAttrs]
        .filter(url => !url.startsWith('#'))
        .map(utils.general.toUnAnchoredUri);
}
exports.extractSvgDependencyUrls = extractSvgDependencyUrls;
function parseDom(svg) {
    if (typeof DOMParser !== 'function') {
        return new jsdom_1.JSDOM(svg).window.document;
    }
    else {
        return new DOMParser().parseFromString(svg, 'image/svg+xml');
    }
}
