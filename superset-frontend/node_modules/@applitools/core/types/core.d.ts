import type { Core } from './types';
import type { Core as BaseCore } from '@applitools/core-base';
import { type SpecDriver } from '@applitools/driver';
import { type Logger } from '@applitools/logger';
type Options<TDriver, TContext, TElement, TSelector> = {
    spec?: SpecDriver<TDriver, TContext, TElement, TSelector>;
    concurrency?: number;
    core?: BaseCore;
    agentId?: string;
    cwd?: string;
    logger?: Logger;
};
export declare function makeCore<TDriver, TContext, TElement, TSelector>({ spec, concurrency, core, agentId, cwd, logger, }?: Options<TDriver, TContext, TElement, TSelector>): Core<TDriver, TContext, TElement, TSelector>;
export {};
