import type { Region } from '@applitools/utils';
import type { CheckSettings as BaseCheckSettings } from '@applitools/core-base';
import type { CheckSettings as UFGCheckSettings } from '../ufg/types';
import type { CheckSettings as ClassicCheckSettings } from '../ufg/types';
import { type Selector } from '@applitools/driver';
export declare function toBaseCheckSettings<TElement, TSelector>({ settings, }: {
    settings: ClassicCheckSettings<TElement, TSelector> | UFGCheckSettings<TElement, TSelector>;
}): {
    elementReferencesToCalculate: (TElement | Selector<TSelector>)[];
    elementReferenceToTarget: TElement | Selector<TSelector>;
    getBaseCheckSettings: ({ calculatedRegions, preserveTransformation, }: {
        calculatedRegions: {
            selector: Selector;
            regions: Region[];
        }[];
        preserveTransformation?: boolean;
    }) => BaseCheckSettings;
};
