import type { Eyes, Config, CloseSettings, TestResult } from './types';
import { type Logger } from '@applitools/logger';
type Options<TDriver, TContext, TElement, TSelector, TType extends 'classic' | 'ufg'> = {
    eyes: Eyes<TDriver, TContext, TElement, TSelector, TType>;
    logger: Logger;
};
export declare function makeClose<TDriver, TContext, TElement, TSelector, TType extends 'classic' | 'ufg'>({ eyes, logger: defaultLogger, }: Options<TDriver, TContext, TElement, TSelector, TType>): ({ settings, config, logger, }?: {
    settings?: CloseSettings<TType>;
    config?: Config<TElement, TSelector, TType>;
    logger?: Logger;
}) => Promise<TestResult<TType>[]>;
export {};
