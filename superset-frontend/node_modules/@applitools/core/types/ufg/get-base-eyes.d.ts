import type { OpenSettings } from './types';
import type { Core as CoreBase, Eyes as EyesBase } from '@applitools/core-base';
import { type Logger } from '@applitools/logger';
import { type UFGClient, type Renderer } from '@applitools/ufg-client';
type Options = {
    settings?: OpenSettings;
    eyes?: EyesBase[];
    core?: CoreBase;
    client?: UFGClient;
    logger?: Logger;
};
export declare function makeGetBaseEyes({ settings: defaultSettings, core, client, eyes, logger: defaultLogger }: Options): (({ settings, logger, }?: {
    settings?: {
        type: 'web' | 'native';
        renderer: Renderer;
    };
    logger?: Logger;
}) => Promise<EyesBase[]>) & {
    getCachedValues(): Promise<EyesBase<import("@applitools/core-base").ImageTarget>[]>[];
    setCachedValue(key: any, value: Promise<EyesBase<import("@applitools/core-base").ImageTarget>[]>): void;
    clearCache(): void;
};
export {};
