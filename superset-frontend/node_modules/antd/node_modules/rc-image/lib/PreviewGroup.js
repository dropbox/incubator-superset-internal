"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.context = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var React = _interopRequireWildcard(require("react"));

var _Preview = _interopRequireDefault(require("./Preview"));

/* istanbul ignore next */
var context = /*#__PURE__*/React.createContext({
  previewUrls: new Map(),
  setPreviewUrls: function setPreviewUrls() {
    return null;
  },
  current: null,
  setCurrent: function setCurrent() {
    return null;
  },
  setShowPreview: function setShowPreview() {
    return null;
  },
  setMousePosition: function setMousePosition() {
    return null;
  },
  registerImage: null
});
exports.context = context;
var Provider = context.Provider;

var Group = function Group(_ref) {
  var _ref$previewPrefixCls = _ref.previewPrefixCls,
      previewPrefixCls = _ref$previewPrefixCls === void 0 ? 'rc-image-preview' : _ref$previewPrefixCls,
      children = _ref.children,
      _ref$icons = _ref.icons,
      icons = _ref$icons === void 0 ? {} : _ref$icons;

  var _useState = (0, React.useState)(new Map()),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      previewUrls = _useState2[0],
      setPreviewUrls = _useState2[1];

  var _useState3 = (0, React.useState)(),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      current = _useState4[0],
      setCurrent = _useState4[1];

  var _useState5 = (0, React.useState)(false),
      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
      isShowPreview = _useState6[0],
      setShowPreview = _useState6[1];

  var _useState7 = (0, React.useState)(null),
      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),
      mousePosition = _useState8[0],
      setMousePosition = _useState8[1];

  var registerImage = function registerImage(id, url) {
    setPreviewUrls(function (oldPreviewUrls) {
      return new Map(oldPreviewUrls).set(id, url);
    });
    return function () {
      setPreviewUrls(function (oldPreviewUrls) {
        var clonePreviewUrls = new Map(oldPreviewUrls);
        var deleteResult = clonePreviewUrls.delete(id);
        return deleteResult ? clonePreviewUrls : oldPreviewUrls;
      });
    };
  };

  var onPreviewClose = function onPreviewClose(e) {
    e.stopPropagation();
    setShowPreview(false);
    setMousePosition(null);
  };

  return /*#__PURE__*/React.createElement(Provider, {
    value: {
      isPreviewGroup: true,
      previewUrls: previewUrls,
      setPreviewUrls: setPreviewUrls,
      current: current,
      setCurrent: setCurrent,
      setShowPreview: setShowPreview,
      setMousePosition: setMousePosition,
      registerImage: registerImage
    }
  }, children, /*#__PURE__*/React.createElement(_Preview.default, {
    "aria-hidden": !isShowPreview,
    visible: isShowPreview,
    prefixCls: previewPrefixCls,
    onClose: onPreviewClose,
    mousePosition: mousePosition,
    src: previewUrls.get(current),
    icons: icons
  }));
};

var _default = Group;
exports.default = _default;