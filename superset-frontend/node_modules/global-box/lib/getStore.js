"use strict";

exports.__esModule = true;
exports.default = getStore;
exports.dangerouslyResetStore = dangerouslyResetStore;
exports.COUNTER = void 0;

var _Store = _interopRequireDefault(require("./Store"));

var _getGlobal = _interopRequireDefault(require("./getGlobal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const globals = (0, _getGlobal.default)();
const COUNTER = '__SINGLETON_STORE_COUNT__';
exports.COUNTER = COUNTER;
let store;
/**
 * Retrieve the singleton store
 */

function getStore() {
  if (typeof store === 'undefined') {
    const oldCount = globals[COUNTER];

    if (typeof oldCount === 'number') {
      // eslint-disable-next-line no-console
      console.warn("Found " + oldCount + " existing instance(s) of global-box. This may cause unexpected behaviors. There should be only one global-box in your node_modules. Check your dependencies. All libraries should list global-box as peerDependencies and only install it as dependencies at the application level.");
      globals[COUNTER] = oldCount + 1;
    } else {
      globals[COUNTER] = 1;
    }

    store = new _Store.default();
  }

  return store;
}
/**
 * Only expose for testing
 * Do not use if you don't know what you are doing.
 */


function dangerouslyResetStore() {
  store = undefined;
}