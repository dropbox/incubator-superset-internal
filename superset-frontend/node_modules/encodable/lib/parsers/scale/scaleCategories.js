"use strict";

exports.__esModule = true;
exports.allScaleTypesSet = exports.allScaleTypes = exports.timeScaleTypesSet = exports.timeScaleTypes = exports.discretizingScaleTypesSet = exports.discretizingScaleTypes = exports.discreteScaleTypesSet = exports.discreteScaleTypes = exports.continuousScaleTypesSet = exports.continuousScaleTypes = exports.discreteDomainScaleTypesSet = exports.discreteDomainScaleTypes = exports.continuousDomainScaleTypesSet = exports.continuousDomainScaleTypes = exports.continuousToDiscreteScaleTypesSet = exports.continuousToDiscreteScaleTypes = exports.continuousToContinuousScaleTypesSet = exports.continuousToContinuousScaleTypes = void 0;

var _types = require("../../types");

// Grouped by domain and range
const continuousToContinuousScaleTypes = [_types.ScaleType.LINEAR, _types.ScaleType.POW, _types.ScaleType.SQRT, _types.ScaleType.SYMLOG, _types.ScaleType.LOG, _types.ScaleType.TIME, _types.ScaleType.UTC];
exports.continuousToContinuousScaleTypes = continuousToContinuousScaleTypes;
const continuousToContinuousScaleTypesSet = new Set(continuousToContinuousScaleTypes);
exports.continuousToContinuousScaleTypesSet = continuousToContinuousScaleTypesSet;
const continuousToDiscreteScaleTypes = [_types.ScaleType.QUANTILE, _types.ScaleType.QUANTIZE, _types.ScaleType.THRESHOLD];
exports.continuousToDiscreteScaleTypes = continuousToDiscreteScaleTypes;
const continuousToDiscreteScaleTypesSet = new Set(continuousToDiscreteScaleTypes); // Grouped by Domain

exports.continuousToDiscreteScaleTypesSet = continuousToDiscreteScaleTypesSet;
const continuousDomainScaleTypes = continuousToContinuousScaleTypes.concat(continuousToDiscreteScaleTypes);
exports.continuousDomainScaleTypes = continuousDomainScaleTypes;
const continuousDomainScaleTypesSet = new Set(continuousDomainScaleTypes);
exports.continuousDomainScaleTypesSet = continuousDomainScaleTypesSet;
const discreteDomainScaleTypes = [_types.ScaleType.ORDINAL, _types.ScaleType.BIN_ORDINAL, _types.ScaleType.POINT, _types.ScaleType.BAND];
exports.discreteDomainScaleTypes = discreteDomainScaleTypes;
const discreteDomainScaleTypesSet = new Set(discreteDomainScaleTypes); // Three broad categories

exports.discreteDomainScaleTypesSet = discreteDomainScaleTypesSet;
const continuousScaleTypes = continuousToContinuousScaleTypes;
exports.continuousScaleTypes = continuousScaleTypes;
const continuousScaleTypesSet = continuousToContinuousScaleTypesSet;
exports.continuousScaleTypesSet = continuousScaleTypesSet;
const discreteScaleTypes = [_types.ScaleType.BAND, _types.ScaleType.POINT, _types.ScaleType.ORDINAL];
exports.discreteScaleTypes = discreteScaleTypes;
const discreteScaleTypesSet = new Set(discreteScaleTypes);
exports.discreteScaleTypesSet = discreteScaleTypesSet;
const discretizingScaleTypes = [_types.ScaleType.BIN_ORDINAL, _types.ScaleType.QUANTILE, _types.ScaleType.QUANTIZE, _types.ScaleType.THRESHOLD];
exports.discretizingScaleTypes = discretizingScaleTypes;
const discretizingScaleTypesSet = new Set(discretizingScaleTypes); // Others

exports.discretizingScaleTypesSet = discretizingScaleTypesSet;
const timeScaleTypes = [_types.ScaleType.TIME, _types.ScaleType.UTC];
exports.timeScaleTypes = timeScaleTypes;
const timeScaleTypesSet = new Set(timeScaleTypes);
exports.timeScaleTypesSet = timeScaleTypesSet;
const allScaleTypes = [_types.ScaleType.LINEAR, _types.ScaleType.LOG, _types.ScaleType.POW, _types.ScaleType.SQRT, _types.ScaleType.SYMLOG, _types.ScaleType.TIME, _types.ScaleType.UTC, _types.ScaleType.QUANTILE, _types.ScaleType.QUANTIZE, _types.ScaleType.THRESHOLD, _types.ScaleType.BIN_ORDINAL, _types.ScaleType.ORDINAL, _types.ScaleType.POINT, _types.ScaleType.BAND];
exports.allScaleTypes = allScaleTypes;
const allScaleTypesSet = new Set(allScaleTypes);
exports.allScaleTypesSet = allScaleTypesSet;