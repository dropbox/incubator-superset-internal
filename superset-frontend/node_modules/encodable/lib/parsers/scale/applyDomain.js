"use strict";

exports.__esModule = true;
exports.default = applyDomain;

var _Scale = require("../../typeGuards/Scale");

var _ScaleConfig = require("../../typeGuards/ScaleConfig");

var _parseContinuousDomain = _interopRequireDefault(require("../domain/parseContinuousDomain"));

var _parseDiscreteDomain = _interopRequireDefault(require("../domain/parseDiscreteDomain"));

var _combineCategories = _interopRequireDefault(require("../../utils/combineCategories"));

var _combineContinuousDomains = _interopRequireDefault(require("../../utils/combineContinuousDomains"));

var _removeUndefinedAndNull = _interopRequireDefault(require("../../utils/removeUndefinedAndNull"));

var _parseDateTimeIn = _interopRequireDefault(require("../parseDateTimeIn"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createOrderFunction(reverse) {
  return reverse ? array => array.concat().reverse() : array => array;
}

function isCompleteDomain(domain) {
  return domain.length !== 2 || domain[0] != null && domain[1] != null;
}

function applyDomain(config, scale,
/** domain from dataset */
dataDomain) {
  const {
    reverse,
    type
  } = config;
  const order = createOrderFunction(reverse);

  if ((0, _Scale.isContinuousScale)(scale, type) && (0, _ScaleConfig.isContinuousScaleConfig)(config) || (0, _Scale.isDiscretizingScale)(scale, type) && (0, _ScaleConfig.isDiscretizingScaleConfig)(config)) {
    // For continuous and discretizing scales
    if (config.domain) {
      // If config.domain is specified
      if (isCompleteDomain(config.domain)) {
        // If the config.domain is completed
        // ignores the dataDomain
        scale.domain(order((0, _parseDateTimeIn.default)(config.domain)));
      } else if (dataDomain) {
        // If it is incompleted, then try to combine
        // with the dataDomain
        scale.domain(order((0, _combineContinuousDomains.default)((0, _parseContinuousDomain.default)((0, _parseDateTimeIn.default)(config.domain), type), (0, _parseContinuousDomain.default)((0, _removeUndefinedAndNull.default)(dataDomain), type))));
      }
    } else if (dataDomain) {
      // If no config.domain then just use the dataDomain if any
      scale.domain(order((0, _parseContinuousDomain.default)((0, _removeUndefinedAndNull.default)(dataDomain), type)));
    }
  } else if ((0, _Scale.isDiscreteScale)(scale, type) && (0, _ScaleConfig.isDiscreteScaleConfig)(config)) {
    // For discrete scales
    if (config.domain) {
      const fixedDomain = (0, _parseDiscreteDomain.default)((0, _parseDateTimeIn.default)(config.domain));
      scale.domain(order(dataDomain ? (0, _combineCategories.default)(fixedDomain, (0, _parseDiscreteDomain.default)(dataDomain)) : fixedDomain));
    } else if (dataDomain) {
      // If no config.domain then just use the dataDomain if any
      scale.domain(order((0, _parseDiscreteDomain.default)(dataDomain)));
    }
  }
}