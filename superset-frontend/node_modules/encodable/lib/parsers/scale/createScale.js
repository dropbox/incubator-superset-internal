"use strict";

exports.__esModule = true;
exports.default = void 0;

var _types = require("../../types");

var _createScaleFromScaleType = _interopRequireDefault(require("./createScaleFromScaleType"));

var _updateScale = _interopRequireDefault(require("./updateScale"));

var _Encodable = _interopRequireDefault(require("../../options/Encodable"));

var _SchemeParams = require("../../typeGuards/SchemeParams");

var _applyDomain = _interopRequireDefault(require("./applyDomain"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createScale(config) {
  const {
    range
  } = config; // Handle categorical color scales
  // An ordinal scale without specified range
  // is assumed to be a color scale.

  if (config.type === _types.ScaleType.ORDINAL && typeof range === 'undefined') {
    const scheme = 'scheme' in config ? config.scheme : undefined;

    const resolve = _Encodable.default.getCategoricalColorScaleResolver();

    let colorScale;

    if (typeof scheme === 'undefined') {
      colorScale = resolve({});
    } else if ((0, _SchemeParams.isSchemeParams)(scheme)) {
      colorScale = resolve(scheme);
    } else {
      colorScale = resolve({
        name: scheme
      });
    }

    const castedColorScale = colorScale;
    (0, _applyDomain.default)(config, castedColorScale);
    return castedColorScale;
  }

  const scale = (0, _createScaleFromScaleType.default)(config.type);
  return (0, _updateScale.default)(scale, config);
}

var _default = createScale;
exports.default = _default;