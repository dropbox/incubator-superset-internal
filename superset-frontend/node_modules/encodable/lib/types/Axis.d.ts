/** See https://vega.github.io/vega-lite/docs/axis.html */
import { Axis as VegaLiteAxis } from './VegaLite/Axis';
/** Axis orientation */
export declare type AxisOrient = 'top' | 'bottom' | 'left' | 'right';
export declare type LabelOverlapStrategyFlat = {
    strategy: 'flat';
};
export declare type LabelOverlapStrategyRotate = {
    strategy: 'rotate';
    labelAngle: number;
};
export declare type LabelOverlapStrategy = LabelOverlapStrategyFlat | LabelOverlapStrategyRotate;
/** Strategy for handling label overlap */
export declare type LabelOverlapType = 'auto' | LabelOverlapStrategy['strategy'] | LabelOverlapStrategy;
export interface BaseAxisConfig extends Pick<VegaLiteAxis, 'labelAngle' | 'labelFlush' | 'tickCount' | 'ticks' | 'title' | 'titlePadding' | 'values' | 'format' | 'formatType' | 'formatInLocalTime'> {
    /** Strategy for handling label overlap */
    labelOverlap?: LabelOverlapType;
    labelPadding?: number;
    orient?: AxisOrient;
    tickSize?: number;
}
export interface XAxisConfig extends BaseAxisConfig {
    orient?: 'top' | 'bottom';
}
export interface YAxisConfig extends BaseAxisConfig {
    orient?: 'left' | 'right';
    labelOverlap?: Exclude<LabelOverlapType, 'rotate' | LabelOverlapStrategyRotate>;
}
export declare type AxisConfig = XAxisConfig | YAxisConfig;
export interface WithXAxis {
    axis?: Partial<XAxisConfig> | boolean;
}
export interface WithYAxis {
    axis?: Partial<YAxisConfig> | boolean;
}
export declare type WithAxis = WithXAxis | WithYAxis;
//# sourceMappingURL=Axis.d.ts.map