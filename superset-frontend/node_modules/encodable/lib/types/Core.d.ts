/** Possible values */
export declare type Value = number | string | boolean | null;
/** field type */
export declare type Type = 'quantitative' | 'ordinal' | 'temporal' | 'nominal';
/** A value that has .toString() function */
export declare type StringLike = {
    toString(): string;
};
export declare type NumberLike = {
    valueOf(): number;
};
export declare type PlainObject<Key extends string = string, Value extends any = any> = {
    [key in Key]: Value;
};
export declare type Dataset<T extends string = string> = Partial<PlainObject<T>>[];
export declare type Formatter = (d: unknown) => string;
//# sourceMappingURL=Core.d.ts.map