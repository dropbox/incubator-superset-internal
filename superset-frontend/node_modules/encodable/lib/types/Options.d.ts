import { ColorScheme, ColorSchemeType } from '@encodable/color';
import { NumberFormatter, TimeFormatter } from '@encodable/format';
import { ScaleOrdinal } from 'd3-scale';
import { StringLike } from './Core';
export declare type NumberFormatResolver = (format?: string) => NumberFormatter;
export declare type TimeFormatResolver = (params?: {
    format?: string;
    formatInLocalTime?: boolean;
}) => TimeFormatter;
export declare type CategoricalColorScaleResolver = (params?: {
    name?: string;
    namespace?: string;
}) => ScaleOrdinal<StringLike, string>;
export declare type ColorSchemeResolver = (params?: {
    name?: string;
    type?: ColorSchemeType;
}) => ColorScheme | undefined;
/**
 * All fields are optional.
 */
export declare type EncodableState = Partial<{
    numberFormatResolver: NumberFormatResolver;
    timeFormatResolver: TimeFormatResolver;
    categoricalColorScaleResolver: CategoricalColorScaleResolver;
    colorSchemeResolver: ColorSchemeResolver;
}>;
//# sourceMappingURL=Options.d.ts.map