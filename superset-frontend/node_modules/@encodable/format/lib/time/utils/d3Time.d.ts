import { CountableTimeInterval } from 'd3-time';
declare const utcUtils: {
    floorSecond: CountableTimeInterval;
    floorMinute: CountableTimeInterval;
    floorHour: CountableTimeInterval;
    floorDay: CountableTimeInterval;
    floorWeek: CountableTimeInterval;
    floorWeekStartOnSunday: CountableTimeInterval;
    floorWeekStartOnMonday: CountableTimeInterval;
    floorWeekStartOnTuesday: CountableTimeInterval;
    floorWeekStartOnWednesday: CountableTimeInterval;
    floorWeekStartOnThursday: CountableTimeInterval;
    floorWeekStartOnFriday: CountableTimeInterval;
    floorWeekStartOnSaturday: CountableTimeInterval;
    floorMonth: CountableTimeInterval;
    floorYear: CountableTimeInterval;
    hasMillisecond: (date: Date) => boolean;
    hasSecond: (date: Date) => boolean;
    hasMinute: (date: Date) => boolean;
    hasHour: (date: Date) => boolean;
    isNotFirstDayOfMonth: (date: Date) => boolean;
    isNotFirstDayOfWeek: (date: Date) => boolean;
    isNotFirstDayOfWeekStartOnSunday: (date: Date) => boolean;
    isNotFirstDayOfWeekStartOnMonday: (date: Date) => boolean;
    isNotFirstDayOfWeekStartOnTuesday: (date: Date) => boolean;
    isNotFirstDayOfWeekStartOnWednesday: (date: Date) => boolean;
    isNotFirstDayOfWeekStartOnThursday: (date: Date) => boolean;
    isNotFirstDayOfWeekStartOnFriday: (date: Date) => boolean;
    isNotFirstDayOfWeekStartOnSaturday: (date: Date) => boolean;
    isNotFirstMonth: (date: Date) => boolean;
};
declare const localTimeUtils: {
    floorSecond: CountableTimeInterval;
    floorMinute: CountableTimeInterval;
    floorHour: CountableTimeInterval;
    floorDay: CountableTimeInterval;
    floorWeek: CountableTimeInterval;
    floorWeekStartOnSunday: CountableTimeInterval;
    floorWeekStartOnMonday: CountableTimeInterval;
    floorWeekStartOnTuesday: CountableTimeInterval;
    floorWeekStartOnWednesday: CountableTimeInterval;
    floorWeekStartOnThursday: CountableTimeInterval;
    floorWeekStartOnFriday: CountableTimeInterval;
    floorWeekStartOnSaturday: CountableTimeInterval;
    floorMonth: CountableTimeInterval;
    floorYear: CountableTimeInterval;
    hasMillisecond: (date: Date) => boolean;
    hasSecond: (date: Date) => boolean;
    hasMinute: (date: Date) => boolean;
    hasHour: (date: Date) => boolean;
    isNotFirstDayOfMonth: (date: Date) => boolean;
    isNotFirstDayOfWeek: (date: Date) => boolean;
    isNotFirstDayOfWeekStartOnSunday: (date: Date) => boolean;
    isNotFirstDayOfWeekStartOnMonday: (date: Date) => boolean;
    isNotFirstDayOfWeekStartOnTuesday: (date: Date) => boolean;
    isNotFirstDayOfWeekStartOnWednesday: (date: Date) => boolean;
    isNotFirstDayOfWeekStartOnThursday: (date: Date) => boolean;
    isNotFirstDayOfWeekStartOnFriday: (date: Date) => boolean;
    isNotFirstDayOfWeekStartOnSaturday: (date: Date) => boolean;
    isNotFirstMonth: (date: Date) => boolean;
};
export { utcUtils, localTimeUtils };
//# sourceMappingURL=d3Time.d.ts.map