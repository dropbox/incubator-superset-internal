"use strict";

exports.__esModule = true;
exports.default = void 0;

var _TimeFormats = _interopRequireWildcard(require("./TimeFormats"));

var _createD3TimeFormatter = _interopRequireDefault(require("./factories/createD3TimeFormatter"));

var _prefix = require("../utils/prefix");

var _FormatterRegistry = _interopRequireDefault(require("../FormatterRegistry"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class TimeFormatterRegistry extends _FormatterRegistry.default {
  constructor({
    defaultKey = _TimeFormats.default.DATABASE_DATETIME,
    name = 'TimeFormatter',
    ...rest
  } = {}) {
    super({
      defaultKey,
      name,
      ...rest
    });
  } // eslint-disable-next-line class-methods-use-this


  createFormatter(format) {
    return (0, _createD3TimeFormatter.default)({
      format: (0, _prefix.removePrefix)(_TimeFormats.LOCAL_TIME_PREFIX, format),
      useLocalTime: format.startsWith(_TimeFormats.LOCAL_TIME_PREFIX)
    });
  }

}

exports.default = TimeFormatterRegistry;