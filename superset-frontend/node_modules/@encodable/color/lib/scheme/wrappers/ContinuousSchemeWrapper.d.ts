import { ScaleLinear } from 'd3-scale';
import { ColorInterpolator, SequentialScheme, DivergingScheme } from '../../types';
import SchemeWrapper from './SchemeWrapper';
export default class ContinuousSchemeWrapper<T extends SequentialScheme | DivergingScheme> extends SchemeWrapper<T> {
    get colors(): readonly string[] | readonly (readonly string[])[];
    get interpolator(): ColorInterpolator;
    /**
     * Get colors from this scheme
     * @param numColors number of colors to return.
     * Will interpolate the current scheme to match the number of colors requested
     * @param extent The extent of the color range to use.
     * For example [0.2, 1] will rescale the color scheme
     * such that color values in the range [0, 0.2) are excluded from the scheme.
     */
    getColors(numColors?: number, extent?: number[]): string[];
    createScaleLinear(): ScaleLinear<string, string>;
}
//# sourceMappingURL=ContinuousSchemeWrapper.d.ts.map