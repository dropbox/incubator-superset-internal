import { SyncRegistry } from '@encodable/registry';
import { ColorNamespaceState } from './types';
import ScaleCategoricalColor from './ScaleCategoricalColor';
export default class ColorNamespace {
    readonly state: ColorNamespaceState;
    readonly scales: SyncRegistry<ScaleCategoricalColor>;
    constructor(nameOrState: string | ColorNamespaceState);
    get name(): string;
    /**
     * Check if the specified value is subjected to manual color assignment
     * @param value
     */
    hasManualColor(value: string): boolean;
    /**
     * Enforce specific color for given value
     * This will apply across all color scales
     * in this namespace.
     * @param {*} value value
     * @param {*} manualColor color
     */
    setColor(value: string, manualColor: string): this;
    /**
     * Removed enforced specific color for given value
     * This will apply across all color scales
     * in this namespace.
     * @param {*} value value
     * @param {*} manualColor color
     */
    unsetColor(value: string): this;
    /**
     * Clear all manually assigned colors
     */
    clearManualColors(): this;
    hasScale(scheme: string): boolean;
    getScale(scheme?: string): ScaleCategoricalColor;
}
//# sourceMappingURL=ColorNamespace.d.ts.map