"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getInterpolator = getInterpolator;
exports.default = _default;

var _d3Interpolate = require("d3-interpolate");

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function getInterpolator(attr) {
  if (attr === 'transform') {
    return _d3Interpolate.interpolateTransformSvg;
  }

  return _d3Interpolate.interpolate;
}

function getTween(nameSpace, attr, value1) {
  return function tween() {
    var _this = this;

    var value0 = nameSpace ? this.state[nameSpace][attr] : this.state[attr];

    if (value0 === value1) {
      return null;
    }

    var i = getInterpolator(attr)(value0, value1);
    var stateTween;

    if (nameSpace === null) {
      stateTween = function stateTween(t) {
        _this.setState(function () {
          return _defineProperty({}, attr, i(t));
        });
      };
    } else {
      stateTween = function stateTween(t) {
        _this.setState(function (state) {
          return _defineProperty({}, nameSpace, _objectSpread({}, state[nameSpace], _defineProperty({}, attr, i(t))));
        });
      };
    }

    return stateTween;
  };
}

function _default(nameSpace, attr, value) {
  return getTween.call(this, nameSpace, attr, value);
}