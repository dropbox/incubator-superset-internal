/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
import React from 'react';
interface ColumnConfigProps {
    colType: string;
    comparisonType: string;
    d3format: string;
    key: string;
    label: string;
    timeLag: number;
    tooltip: any;
    bounds: number[];
    dateFormat: string;
    width: string;
    height: string;
    yAxisBounds: number[];
    showYAxis: boolean;
    timeRatio: number;
}
interface RowData {
    label: string;
    metric_name: string;
}
interface ChartProps {
    className: string | undefined;
    columnConfigs: Array<ColumnConfigProps>;
    data: object;
    height: number;
    rows: Array<RowData>;
    rowType: string;
    url: string;
    row: Array<unknown>;
}
interface Entry {
    [key: string]: number;
}
declare class TimeTable extends React.PureComponent<ChartProps, {}> {
    renderLeftCell(row: RowData): string | JSX.Element;
    renderSparklineCell(valueField: string, column: ColumnConfigProps, entries: Entry[]): JSX.Element;
    renderValueCell(valueField: string, column: ColumnConfigProps, reversedEntries: Entry[]): JSX.Element;
    renderRow(row: RowData, entries: Entry[], reversedEntries: Entry[]): JSX.Element;
    render(): JSX.Element;
}
declare const _default: import("@emotion/styled").StyledComponent<ChartProps & {
    theme?: import("@emotion/react").Theme | undefined;
}, {}, {
    ref?: React.Ref<TimeTable> | undefined;
}>;
export default _default;
//# sourceMappingURL=TimeTable.d.ts.map