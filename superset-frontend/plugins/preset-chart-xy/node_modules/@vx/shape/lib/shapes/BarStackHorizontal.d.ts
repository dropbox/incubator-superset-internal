import React from 'react';
import { SeriesPoint } from 'd3-shape';
import { BarStackProps } from './BarStack';
import { StackKey, $TSFIXME } from '../types';
declare type PickProps = 'data' | 'className' | 'top' | 'left' | 'keys' | 'order' | 'offset' | 'value' | 'xScale' | 'yScale' | 'color' | 'children';
export declare type BarStackHorizontalProps<Datum, Key> = Pick<BarStackProps<Datum, Key>, PickProps> & {
    /** Returns the value mapped to the x0 of a bar. */
    x0?: (d: SeriesPoint<Datum>) => $TSFIXME;
    /** Returns the value mapped to the x1 of a bar. */
    x1?: (d: SeriesPoint<Datum>) => $TSFIXME;
    /** Returns the value mapped to the y of a bar. */
    y: (d: Datum) => $TSFIXME;
};
export default function BarStackHorizontal<Datum, Key extends StackKey = StackKey>({ data, className, top, left, y, x0, x1, xScale, yScale, color, keys, value, order, offset, children, ...restProps }: BarStackHorizontalProps<Datum, Key> & Omit<React.SVGProps<SVGRectElement>, keyof BarStackHorizontalProps<Datum, Key> | PickProps>): JSX.Element;
export {};
