{"version":3,"file":"ea33f16b56589e7fe331.chunk.js","mappings":"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","sources":["webpack://superset/./plugins/legacy-preset-chart-deckgl/src/utils/explore.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/utils/safeStringify.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/index.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/Multi/Multi.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Geojson/Geojson.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Grid/Grid.jsx","webpack://superset/./node_modules/d3-hexbin/src/hexbin.js","webpack://superset/./node_modules/@deck.gl/aggregation-layers/dist/esm/hexagon-layer/hexagon-layer.js","webpack://superset/./node_modules/@deck.gl/aggregation-layers/dist/esm/hexagon-layer/hexagon-aggregator.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Hex/Hex.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Path/Path.jsx","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/polygon-layer/polygon-layer.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/utils.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/utils/getPointsFromPolygon.ts","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Polygon/Polygon.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/utils/geo.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Scatter/Scatter.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport URI from 'urijs';\nimport { safeStringify } from './safeStringify';\n\nconst MAX_URL_LENGTH = 8000;\n\nexport function getURIDirectory(formData, endpointType = 'base') {\n  // Building the directory part of the URI\n  let directory = '/superset/explore/';\n  if (['json', 'csv', 'query', 'results', 'samples'].includes(endpointType)) {\n    directory = '/superset/explore_json/';\n  }\n\n  return directory;\n}\n\nexport function getExploreLongUrl(\n  formData,\n  endpointType,\n  allowOverflow = true,\n  extraSearch = {},\n) {\n  if (!formData.datasource) {\n    return null;\n  }\n\n  const uri = new URI('/');\n  const directory = getURIDirectory(formData, endpointType);\n  const search = uri.search(true);\n  Object.keys(extraSearch).forEach(key => {\n    search[key] = extraSearch[key];\n  });\n  search.form_data = safeStringify(formData);\n  if (endpointType === 'standalone') {\n    search.standalone = 'true';\n  }\n  const url = uri.directory(directory).search(search).toString();\n  if (!allowOverflow && url.length > MAX_URL_LENGTH) {\n    const minimalFormData = {\n      datasource: formData.datasource,\n      viz_type: formData.viz_type,\n    };\n\n    return getExploreLongUrl(minimalFormData, endpointType, false, {\n      URL_IS_TOO_LONG_TO_SHARE: null,\n    });\n  }\n\n  return url;\n}\n","/* eslint-disable consistent-return */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * A Stringify function that will not crash when it runs into circular JSON references,\n * unlike JSON.stringify. Any circular references are simply omitted, as if there had\n * been no data present\n * @param object any JSON object to be stringified\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport function safeStringify(object) {\n  const cache = new Set();\n\n  return JSON.stringify(object, (key, value) => {\n    if (typeof value === 'object' && value !== null) {\n      if (cache.has(value)) {\n        // We've seen this object before\n        try {\n          // Quick deep copy to duplicate if this is a repeat rather than a circle.\n          return JSON.parse(JSON.stringify(value));\n        } catch (error) {\n          // Discard key if value cannot be duplicated.\n          return;\n        }\n      }\n      // Store the value in our cache.\n      cache.add(value);\n    }\n\n    return value;\n  });\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { getLayer as deck_grid } from './Grid/Grid';\nimport { getLayer as deck_screengrid } from './Screengrid/Screengrid';\nimport { getLayer as deck_path } from './Path/Path';\nimport { getLayer as deck_hex } from './Hex/Hex';\nimport { getLayer as deck_scatter } from './Scatter/Scatter';\nimport { getLayer as deck_geojson } from './Geojson/Geojson';\nimport { getLayer as deck_arc } from './Arc/Arc';\nimport { getLayer as deck_polygon } from './Polygon/Polygon';\n\nconst layerGenerators = {\n  deck_grid,\n  deck_screengrid,\n  deck_path,\n  deck_hex,\n  deck_scatter,\n  deck_geojson,\n  deck_arc,\n  deck_polygon,\n};\n\nexport default layerGenerators;\n","/* eslint-disable react/jsx-handler-names */\n/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport { SupersetClient } from '@superset-ui/core';\n\nimport { DeckGLContainerStyledWrapper } from '../DeckGLContainer';\nimport { getExploreLongUrl } from '../utils/explore';\nimport layerGenerators from '../layers';\n\nconst propTypes = {\n  formData: PropTypes.object.isRequired,\n  payload: PropTypes.object.isRequired,\n  setControlValue: PropTypes.func.isRequired,\n  viewport: PropTypes.object.isRequired,\n  onAddFilter: PropTypes.func,\n  onSelect: PropTypes.func,\n};\nconst defaultProps = {\n  onAddFilter() {},\n  onSelect() {},\n};\n\nclass DeckMulti extends React.PureComponent {\n  containerRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n    this.state = { subSlicesLayers: {} };\n    this.onViewportChange = this.onViewportChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { formData, payload } = this.props;\n    this.loadLayers(formData, payload);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { formData, payload } = nextProps;\n    const hasChanges = !_.isEqual(\n      this.props.formData.deck_slices,\n      nextProps.formData.deck_slices,\n    );\n    if (hasChanges) {\n      this.loadLayers(formData, payload);\n    }\n  }\n\n  onViewportChange(viewport) {\n    this.setState({ viewport });\n  }\n\n  loadLayers(formData, payload, viewport) {\n    this.setState({ subSlicesLayers: {}, viewport });\n    payload.data.slices.forEach(subslice => {\n      // Filters applied to multi_deck are passed down to underlying charts\n      // note that dashboard contextual information (filter_immune_slices and such) aren't\n      // taken into consideration here\n      const filters = [\n        ...(subslice.form_data.filters || []),\n        ...(formData.filters || []),\n        ...(formData.extra_filters || []),\n      ];\n      const subsliceCopy = {\n        ...subslice,\n        form_data: {\n          ...subslice.form_data,\n          filters,\n        },\n      };\n\n      SupersetClient.get({\n        endpoint: getExploreLongUrl(subsliceCopy.form_data, 'json'),\n      })\n        .then(({ json }) => {\n          const layer = layerGenerators[subsliceCopy.form_data.viz_type](\n            subsliceCopy.form_data,\n            json,\n            this.props.onAddFilter,\n            this.setTooltip,\n            [],\n            this.props.onSelect,\n          );\n          this.setState({\n            subSlicesLayers: {\n              ...this.state.subSlicesLayers,\n              [subsliceCopy.slice_id]: layer,\n            },\n          });\n        })\n        .catch(() => {});\n    });\n  }\n\n  setTooltip = tooltip => {\n    const { current } = this.containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  };\n\n  render() {\n    const { payload, formData, setControlValue, height, width } = this.props;\n    const { subSlicesLayers } = this.state;\n\n    const layers = Object.values(subSlicesLayers);\n\n    return (\n      <DeckGLContainerStyledWrapper\n        ref={this.containerRef}\n        mapboxApiAccessToken={payload.data.mapboxApiKey}\n        viewport={this.state.viewport || this.props.viewport}\n        layers={layers}\n        mapStyle={formData.mapbox_style}\n        setControlValue={setControlValue}\n        onViewportChange={this.onViewportChange}\n        height={height}\n        width={width}\n      />\n    );\n  }\n}\n\nDeckMulti.propTypes = propTypes;\nDeckMulti.defaultProps = defaultProps;\n\nexport default DeckMulti;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { GeoJsonLayer } from 'deck.gl';\nimport geojsonExtent from '@mapbox/geojson-extent';\n\nimport { DeckGLContainerStyledWrapper } from '../../DeckGLContainer';\nimport { hexToRGB } from '../../utils/colors';\nimport sandboxedEval from '../../utils/sandbox';\nimport { commonLayerProps } from '../common';\nimport TooltipRow from '../../TooltipRow';\nimport fitViewport from '../../utils/fitViewport';\n\nconst propertyMap = {\n  fillColor: 'fillColor',\n  color: 'fillColor',\n  fill: 'fillColor',\n  'fill-color': 'fillColor',\n  strokeColor: 'strokeColor',\n  'stroke-color': 'strokeColor',\n  'stroke-width': 'strokeWidth',\n};\n\nconst alterProps = (props, propOverrides) => {\n  const newProps = {};\n  Object.keys(props).forEach(k => {\n    if (k in propertyMap) {\n      newProps[propertyMap[k]] = props[k];\n    } else {\n      newProps[k] = props[k];\n    }\n  });\n  if (typeof props.fillColor === 'string') {\n    newProps.fillColor = hexToRGB(props.fillColor);\n  }\n  if (typeof props.strokeColor === 'string') {\n    newProps.strokeColor = hexToRGB(props.strokeColor);\n  }\n\n  return {\n    ...newProps,\n    ...propOverrides,\n  };\n};\nlet features;\nconst recurseGeoJson = (node, propOverrides, extraProps) => {\n  if (node && node.features) {\n    node.features.forEach(obj => {\n      recurseGeoJson(obj, propOverrides, node.extraProps || extraProps);\n    });\n  }\n  if (node && node.geometry) {\n    const newNode = {\n      ...node,\n      properties: alterProps(node.properties, propOverrides),\n    };\n    if (!newNode.extraProps) {\n      newNode.extraProps = extraProps;\n    }\n    features.push(newNode);\n  }\n};\n\nfunction setTooltipContent(o) {\n  return (\n    o.object.extraProps && (\n      <div className=\"deckgl-tooltip\">\n        {Object.keys(o.object.extraProps).map((prop, index) => (\n          <TooltipRow\n            key={`prop-${index}`}\n            label={`${prop}: `}\n            value={`${o.object.extraProps[prop]}`}\n          />\n        ))}\n      </div>\n    )\n  );\n}\n\nconst getFillColor = feature => feature?.properties?.fillColor;\nconst getLineColor = feature => feature?.properties?.strokeColor;\n\nexport function getLayer(formData, payload, onAddFilter, setTooltip) {\n  const fd = formData;\n  const fc = fd.fill_color_picker;\n  const sc = fd.stroke_color_picker;\n  const fillColor = [fc.r, fc.g, fc.b, 255 * fc.a];\n  const strokeColor = [sc.r, sc.g, sc.b, 255 * sc.a];\n  const propOverrides = {};\n  if (fillColor[3] > 0) {\n    propOverrides.fillColor = fillColor;\n  }\n  if (strokeColor[3] > 0) {\n    propOverrides.strokeColor = strokeColor;\n  }\n\n  features = [];\n  recurseGeoJson(payload.data, propOverrides);\n\n  let jsFnMutator;\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    features = jsFnMutator(features);\n  }\n\n  return new GeoJsonLayer({\n    id: `geojson-layer-${fd.slice_id}`,\n    filled: fd.filled,\n    data: features,\n    stroked: fd.stroked,\n    extruded: fd.extruded,\n    pointRadiusScale: fd.point_radius_scale,\n    getFillColor,\n    getLineWidth: fd.line_width || 1,\n    getLineColor,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent),\n  });\n}\n\nconst propTypes = {\n  formData: PropTypes.object.isRequired,\n  payload: PropTypes.object.isRequired,\n  setControlValue: PropTypes.func.isRequired,\n  viewport: PropTypes.object.isRequired,\n  onAddFilter: PropTypes.func,\n};\nconst defaultProps = {\n  onAddFilter() {},\n};\n\nclass DeckGLGeoJson extends React.Component {\n  containerRef = React.createRef();\n\n  setTooltip = tooltip => {\n    const { current } = this.containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  };\n\n  render() {\n    const { formData, payload, setControlValue, onAddFilter, height, width } =\n      this.props;\n\n    let { viewport } = this.props;\n    if (formData.autozoom) {\n      const points =\n        payload?.data?.features?.reduce?.((acc, feature) => {\n          const bounds = geojsonExtent(feature);\n          if (bounds) {\n            return [...acc, [bounds[0], bounds[1]], [bounds[2], bounds[3]]];\n          }\n\n          return acc;\n        }, []) || [];\n\n      if (points.length) {\n        viewport = fitViewport(viewport, {\n          width,\n          height,\n          points,\n        });\n      }\n    }\n\n    const layer = getLayer(formData, payload, onAddFilter, this.setTooltip);\n\n    return (\n      <DeckGLContainerStyledWrapper\n        ref={this.containerRef}\n        mapboxApiAccessToken={payload.data.mapboxApiKey}\n        viewport={viewport}\n        layers={[layer]}\n        mapStyle={formData.mapbox_style}\n        setControlValue={setControlValue}\n        height={height}\n        width={width}\n      />\n    );\n  }\n}\n\nDeckGLGeoJson.propTypes = propTypes;\nDeckGLGeoJson.defaultProps = defaultProps;\n\nexport default DeckGLGeoJson;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { GridLayer } from 'deck.gl';\nimport React from 'react';\nimport { t } from '@superset-ui/core';\n\nimport { commonLayerProps, getAggFunc } from '../common';\nimport sandboxedEval from '../../utils/sandbox';\nimport { createDeckGLComponent } from '../../factory';\nimport TooltipRow from '../../TooltipRow';\n\nfunction setTooltipContent(o) {\n  return (\n    <div className=\"deckgl-tooltip\">\n      <TooltipRow\n        label={`${t('Longitude and Latitude')}: `}\n        value={`${o.coordinate[0]}, ${o.coordinate[1]}`}\n      />\n      <TooltipRow\n        label={`${t('Height')}: `}\n        value={`${o.object.elevationValue}`}\n      />\n    </div>\n  );\n}\n\nexport function getLayer(formData, payload, onAddFilter, setTooltip) {\n  const fd = formData;\n  const c = fd.color_picker;\n  let data = payload.data.features.map(d => ({\n    ...d,\n    color: [c.r, c.g, c.b, 255 * c.a],\n  }));\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n\n  const aggFunc = getAggFunc(fd.js_agg_function, p => p.weight);\n\n  return new GridLayer({\n    id: `grid-layer-${fd.slice_id}`,\n    data,\n    pickable: true,\n    cellSize: fd.grid_size,\n    minColor: [0, 0, 0, 0],\n    extruded: fd.extruded,\n    maxColor: [c.r, c.g, c.b, 255 * c.a],\n    outline: false,\n    getElevationValue: aggFunc,\n    getColorValue: aggFunc,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent),\n  });\n}\n\nfunction getPoints(data) {\n  return data.map(d => d.position);\n}\n\nexport default createDeckGLComponent(getLayer, getPoints);\n","var thirdPi = Math.PI / 3,\n    angles = [0, thirdPi, 2 * thirdPi, 3 * thirdPi, 4 * thirdPi, 5 * thirdPi];\n\nfunction pointX(d) {\n  return d[0];\n}\n\nfunction pointY(d) {\n  return d[1];\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 1,\n      y1 = 1,\n      x = pointX,\n      y = pointY,\n      r,\n      dx,\n      dy;\n\n  function hexbin(points) {\n    var binsById = {}, bins = [], i, n = points.length;\n\n    for (i = 0; i < n; ++i) {\n      if (isNaN(px = +x.call(null, point = points[i], i, points))\n          || isNaN(py = +y.call(null, point, i, points))) continue;\n\n      var point,\n          px,\n          py,\n          pj = Math.round(py = py / dy),\n          pi = Math.round(px = px / dx - (pj & 1) / 2),\n          py1 = py - pj;\n\n      if (Math.abs(py1) * 3 > 1) {\n        var px1 = px - pi,\n            pi2 = pi + (px < pi ? -1 : 1) / 2,\n            pj2 = pj + (py < pj ? -1 : 1),\n            px2 = px - pi2,\n            py2 = py - pj2;\n        if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n      }\n\n      var id = pi + \"-\" + pj, bin = binsById[id];\n      if (bin) bin.push(point);\n      else {\n        bins.push(bin = binsById[id] = [point]);\n        bin.x = (pi + (pj & 1) / 2) * dx;\n        bin.y = pj * dy;\n      }\n    }\n\n    return bins;\n  }\n\n  function hexagon(radius) {\n    var x0 = 0, y0 = 0;\n    return angles.map(function(angle) {\n      var x1 = Math.sin(angle) * radius,\n          y1 = -Math.cos(angle) * radius,\n          dx = x1 - x0,\n          dy = y1 - y0;\n      x0 = x1, y0 = y1;\n      return [dx, dy];\n    });\n  }\n\n  hexbin.hexagon = function(radius) {\n    return \"m\" + hexagon(radius == null ? r : +radius).join(\"l\") + \"z\";\n  };\n\n  hexbin.centers = function() {\n    var centers = [],\n        j = Math.round(y0 / dy),\n        i = Math.round(x0 / dx);\n    for (var y = j * dy; y < y1 + r; y += dy, ++j) {\n      for (var x = i * dx + (j & 1) * dx / 2; x < x1 + dx / 2; x += dx) {\n        centers.push([x, y]);\n      }\n    }\n    return centers;\n  };\n\n  hexbin.mesh = function() {\n    var fragment = hexagon(r).slice(0, 4).join(\"l\");\n    return hexbin.centers().map(function(p) { return \"M\" + p + \"m\" + fragment; }).join(\"\");\n  };\n\n  hexbin.x = function(_) {\n    return arguments.length ? (x = _, hexbin) : x;\n  };\n\n  hexbin.y = function(_) {\n    return arguments.length ? (y = _, hexbin) : y;\n  };\n\n  hexbin.radius = function(_) {\n    return arguments.length ? (r = +_, dx = r * 2 * Math.sin(thirdPi), dy = r * 1.5, hexbin) : r;\n  };\n\n  hexbin.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], hexbin) : [x1 - x0, y1 - y0];\n  };\n\n  hexbin.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], hexbin) : [[x0, y0], [x1, y1]];\n  };\n\n  return hexbin.radius(1);\n}\n","import { log } from '@deck.gl/core';\nimport { ColumnLayer } from '@deck.gl/layers';\nimport { defaultColorRange } from '../utils/color-utils';\nimport { pointToHexbin } from './hexagon-aggregator';\nimport CPUAggregator from '../utils/cpu-aggregator';\nimport AggregationLayer from '../aggregation-layer';\n\nfunction nop() {}\n\nconst defaultProps = {\n  colorDomain: null,\n  colorRange: defaultColorRange,\n  getColorValue: {\n    type: 'accessor',\n    value: null\n  },\n  getColorWeight: {\n    type: 'accessor',\n    value: 1\n  },\n  colorAggregation: 'SUM',\n  lowerPercentile: {\n    type: 'number',\n    value: 0,\n    min: 0,\n    max: 100\n  },\n  upperPercentile: {\n    type: 'number',\n    value: 100,\n    min: 0,\n    max: 100\n  },\n  colorScaleType: 'quantize',\n  onSetColorDomain: nop,\n  elevationDomain: null,\n  elevationRange: [0, 1000],\n  getElevationValue: {\n    type: 'accessor',\n    value: null\n  },\n  getElevationWeight: {\n    type: 'accessor',\n    value: 1\n  },\n  elevationAggregation: 'SUM',\n  elevationLowerPercentile: {\n    type: 'number',\n    value: 0,\n    min: 0,\n    max: 100\n  },\n  elevationUpperPercentile: {\n    type: 'number',\n    value: 100,\n    min: 0,\n    max: 100\n  },\n  elevationScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  elevationScaleType: 'linear',\n  onSetElevationDomain: nop,\n  radius: {\n    type: 'number',\n    value: 1000,\n    min: 1\n  },\n  coverage: {\n    type: 'number',\n    min: 0,\n    max: 1,\n    value: 1\n  },\n  extruded: false,\n  hexagonAggregator: pointToHexbin,\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  material: true,\n  _filterData: {\n    type: 'function',\n    value: null,\n    optional: true\n  }\n};\nexport default class HexagonLayer extends AggregationLayer {\n  shouldUpdateState({\n    changeFlags\n  }) {\n    return changeFlags.somethingChanged;\n  }\n\n  initializeState() {\n    const cpuAggregator = new CPUAggregator({\n      getAggregator: props => props.hexagonAggregator,\n      getCellSize: props => props.radius\n    });\n    this.state = {\n      cpuAggregator,\n      aggregatorState: cpuAggregator.state,\n      hexagonVertices: null\n    };\n    const attributeManager = this.getAttributeManager();\n    attributeManager.add({\n      positions: {\n        size: 3,\n        accessor: 'getPosition'\n      }\n    });\n  }\n\n  updateState(opts) {\n    super.updateState(opts);\n    const {\n      cpuAggregator,\n      hexagonVertices: oldVertices\n    } = this.state;\n\n    if (opts.changeFlags.propsOrDataChanged) {\n      this.setState({\n        aggregatorState: cpuAggregator.updateState(opts, {\n          viewport: this.context.viewport,\n          attributes: this.getAttributes()\n        })\n      });\n    }\n\n    const {\n      hexagonVertices\n    } = cpuAggregator.state.layerData || {};\n\n    if (hexagonVertices && oldVertices !== hexagonVertices) {\n      const vertices = this.convertLatLngToMeterOffset(hexagonVertices);\n\n      if (vertices) {\n        this.setState({\n          hexagonVertices,\n          vertices\n        });\n      }\n    } else {\n      this.updateRadiusAngle();\n    }\n  }\n\n  updateRadiusAngle(vertices) {\n    const {\n      viewport\n    } = this.context;\n    const {\n      unitsPerMeter\n    } = viewport.getDistanceScales();\n    const {\n      cpuAggregator\n    } = this.state;\n\n    if (cpuAggregator.state.layerData && cpuAggregator.state.layerData.radiusCommon) {\n      const {\n        radiusCommon\n      } = cpuAggregator.state.layerData;\n      const radius = radiusCommon / unitsPerMeter[0];\n      this.setState({\n        angle: 90,\n        radius\n      });\n    }\n  }\n\n  convertLatLngToMeterOffset(hexagonVertices) {\n    const {\n      viewport\n    } = this.context;\n\n    if (Array.isArray(hexagonVertices) && hexagonVertices.length === 6) {\n      const vertex0 = hexagonVertices[0];\n      const vertex3 = hexagonVertices[3];\n      const centroid = [(vertex0[0] + vertex3[0]) / 2, (vertex0[1] + vertex3[1]) / 2];\n      const centroidFlat = viewport.projectFlat(centroid);\n      const {\n        metersPerUnit\n      } = viewport.getDistanceScales(centroid);\n      const vertices = hexagonVertices.map(vt => {\n        const vtFlat = viewport.projectFlat(vt);\n        return [(vtFlat[0] - centroidFlat[0]) * metersPerUnit[0], (vtFlat[1] - centroidFlat[1]) * metersPerUnit[1]];\n      });\n      return vertices;\n    }\n\n    log.error('HexagonLayer: hexagonVertices needs to be an array of 6 points')();\n    return null;\n  }\n\n  getPickingInfo({\n    info\n  }) {\n    return this.state.cpuAggregator.getPickingInfo({\n      info\n    });\n  }\n\n  _onGetSublayerColor(cell) {\n    return this.state.cpuAggregator.getAccessor('fillColor')(cell);\n  }\n\n  _onGetSublayerElevation(cell) {\n    return this.state.cpuAggregator.getAccessor('elevation')(cell);\n  }\n\n  _getSublayerUpdateTriggers() {\n    return this.state.cpuAggregator.getUpdateTriggers(this.props);\n  }\n\n  renderLayers() {\n    const {\n      elevationScale,\n      extruded,\n      coverage,\n      material,\n      transitions\n    } = this.props;\n    const {\n      angle,\n      radius,\n      cpuAggregator,\n      vertices\n    } = this.state;\n    const SubLayerClass = this.getSubLayerClass('hexagon-cell', ColumnLayer);\n\n    const updateTriggers = this._getSublayerUpdateTriggers();\n\n    const geometry = vertices && vertices.length ? {\n      vertices,\n      radius: 1\n    } : {\n      radius,\n      angle\n    };\n    return new SubLayerClass({ ...geometry,\n      diskResolution: 6,\n      elevationScale,\n      extruded,\n      coverage,\n      material,\n      getFillColor: this._onGetSublayerColor.bind(this),\n      getElevation: this._onGetSublayerElevation.bind(this),\n      transitions: transitions && {\n        getFillColor: transitions.getColorValue || transitions.getColorWeight,\n        getElevation: transitions.getElevationValue || transitions.getElevationWeight\n      }\n    }, this.getSubLayerProps({\n      id: 'hexagon-cell',\n      updateTriggers\n    }), {\n      data: cpuAggregator.state.layerData.data\n    });\n  }\n\n}\nHexagonLayer.layerName = 'HexagonLayer';\nHexagonLayer.defaultProps = defaultProps;\n//# sourceMappingURL=hexagon-layer.js.map","import { hexbin } from 'd3-hexbin';\nimport { createIterable, log } from '@deck.gl/core';\nexport function pointToHexbin(props, aggregationParams) {\n  const {\n    data,\n    radius\n  } = props;\n  const {\n    viewport,\n    attributes\n  } = aggregationParams;\n  const centerLngLat = data.length ? getPointsCenter(data, aggregationParams) : null;\n  const radiusCommon = getRadiusInCommon(radius, viewport, centerLngLat);\n  const screenPoints = [];\n  const {\n    iterable,\n    objectInfo\n  } = createIterable(data);\n  const positions = attributes.positions.value;\n  const {\n    size\n  } = attributes.positions.getAccessor();\n\n  for (const object of iterable) {\n    objectInfo.index++;\n    const posIndex = objectInfo.index * size;\n    const position = [positions[posIndex], positions[posIndex + 1]];\n    const arrayIsFinite = Number.isFinite(position[0]) && Number.isFinite(position[1]);\n\n    if (arrayIsFinite) {\n      screenPoints.push({\n        screenCoord: viewport.projectFlat(position),\n        source: object,\n        index: objectInfo.index\n      });\n    } else {\n      log.warn('HexagonLayer: invalid position')();\n    }\n  }\n\n  const newHexbin = hexbin().radius(radiusCommon).x(d => d.screenCoord[0]).y(d => d.screenCoord[1]);\n  const hexagonBins = newHexbin(screenPoints);\n  return {\n    hexagons: hexagonBins.map((hex, index) => ({\n      position: viewport.unprojectFlat([hex.x, hex.y]),\n      points: hex,\n      index\n    })),\n    radiusCommon\n  };\n}\nexport function getPointsCenter(data, aggregationParams) {\n  const {\n    attributes\n  } = aggregationParams;\n  const positions = attributes.positions.value;\n  const {\n    size\n  } = attributes.positions.getAccessor();\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let i;\n\n  for (i = 0; i < size * data.length; i += size) {\n    const x = positions[i];\n    const y = positions[i + 1];\n    const arrayIsFinite = Number.isFinite(x) && Number.isFinite(y);\n\n    if (arrayIsFinite) {\n      minX = Math.min(x, minX);\n      maxX = Math.max(x, maxX);\n      minY = Math.min(y, minY);\n      maxY = Math.max(y, maxY);\n    }\n  }\n\n  return [minX, minY, maxX, maxY].every(Number.isFinite) ? [(minX + maxX) / 2, (minY + maxY) / 2] : null;\n}\nexport function getRadiusInCommon(radius, viewport, center) {\n  const {\n    unitsPerMeter\n  } = viewport.getDistanceScales(center);\n  return radius * unitsPerMeter[0];\n}\n//# sourceMappingURL=hexagon-aggregator.js.map","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { HexagonLayer } from 'deck.gl';\nimport React from 'react';\nimport { t } from '@superset-ui/core';\n\nimport { commonLayerProps, getAggFunc } from '../common';\nimport sandboxedEval from '../../utils/sandbox';\nimport { createDeckGLComponent } from '../../factory';\nimport TooltipRow from '../../TooltipRow';\n\nfunction setTooltipContent(o) {\n  return (\n    <div className=\"deckgl-tooltip\">\n      <TooltipRow\n        label={`${t('Centroid (Longitude and Latitude)')}: `}\n        value={`(${o.coordinate[0]}, ${o.coordinate[1]})`}\n      />\n      <TooltipRow\n        label={`${t('Height')}: `}\n        value={`${o.object.elevationValue}`}\n      />\n    </div>\n  );\n}\n\nexport function getLayer(formData, payload, onAddFilter, setTooltip) {\n  const fd = formData;\n  const c = fd.color_picker;\n  let data = payload.data.features.map(d => ({\n    ...d,\n    color: [c.r, c.g, c.b, 255 * c.a],\n  }));\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n  const aggFunc = getAggFunc(fd.js_agg_function, p => p.weight);\n\n  return new HexagonLayer({\n    id: `hex-layer-${fd.slice_id}`,\n    data,\n    pickable: true,\n    radius: fd.grid_size,\n    minColor: [0, 0, 0, 0],\n    extruded: fd.extruded,\n    maxColor: [c.r, c.g, c.b, 255 * c.a],\n    outline: false,\n    getElevationValue: aggFunc,\n    getColorValue: aggFunc,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent),\n  });\n}\n\nfunction getPoints(data) {\n  return data.map(d => d.position);\n}\n\nexport default createDeckGLComponent(getLayer, getPoints);\n","/* eslint-disable react/no-array-index-key */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PathLayer } from 'deck.gl';\nimport React from 'react';\nimport { commonLayerProps } from '../common';\nimport sandboxedEval from '../../utils/sandbox';\nimport { createDeckGLComponent } from '../../factory';\nimport TooltipRow from '../../TooltipRow';\n\nfunction setTooltipContent(o) {\n  return (\n    o.object.extraProps && (\n      <div className=\"deckgl-tooltip\">\n        {Object.keys(o.object.extraProps).map((prop, index) => (\n          <TooltipRow\n            key={`prop-${index}`}\n            label={`${prop}: `}\n            value={`${o.object.extraProps[prop]}`}\n          />\n        ))}\n      </div>\n    )\n  );\n}\n\nexport function getLayer(formData, payload, onAddFilter, setTooltip) {\n  const fd = formData;\n  const c = fd.color_picker;\n  const fixedColor = [c.r, c.g, c.b, 255 * c.a];\n  let data = payload.data.features.map(feature => ({\n    ...feature,\n    path: feature.path,\n    width: fd.line_width,\n    color: fixedColor,\n  }));\n\n  if (fd.js_data_mutator) {\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n\n  return new PathLayer({\n    id: `path-layer-${fd.slice_id}`,\n    getColor: d => d.color,\n    getPath: d => d.path,\n    getWidth: d => d.width,\n    data,\n    rounded: true,\n    widthScale: 1,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent),\n  });\n}\n\nfunction getPoints(data) {\n  let points = [];\n  data.forEach(d => {\n    points = points.concat(d.path);\n  });\n\n  return points;\n}\n\nexport default createDeckGLComponent(getLayer, getPoints);\n","import { CompositeLayer, createIterable, log } from '@deck.gl/core';\nimport SolidPolygonLayer from '../solid-polygon-layer/solid-polygon-layer';\nimport PathLayer from '../path-layer/path-layer';\nimport * as Polygon from '../solid-polygon-layer/polygon';\nimport { replaceInRange } from '../utils';\nconst defaultLineColor = [0, 0, 0, 255];\nconst defaultFillColor = [0, 0, 0, 255];\nconst defaultProps = {\n  stroked: true,\n  filled: true,\n  extruded: false,\n  elevationScale: 1,\n  wireframe: false,\n  _normalize: true,\n  _windingOrder: 'CW',\n  lineWidthUnits: 'meters',\n  lineWidthScale: 1,\n  lineWidthMinPixels: 0,\n  lineWidthMaxPixels: Number.MAX_SAFE_INTEGER,\n  lineJointRounded: false,\n  lineMiterLimit: 4,\n  getPolygon: {\n    type: 'accessor',\n    value: f => f.polygon\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: defaultFillColor\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: defaultLineColor\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  getElevation: {\n    type: 'accessor',\n    value: 1000\n  },\n  material: true\n};\nexport default class PolygonLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      paths: []\n    };\n\n    if (this.props.getLineDashArray) {\n      log.removed('getLineDashArray', 'PathStyleExtension')();\n    }\n  }\n\n  updateState({\n    oldProps,\n    props,\n    changeFlags\n  }) {\n    const geometryChanged = changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPolygon);\n\n    if (geometryChanged && Array.isArray(changeFlags.dataChanged)) {\n      const paths = this.state.paths.slice();\n      const pathsDiff = changeFlags.dataChanged.map(dataRange => replaceInRange({\n        data: paths,\n        getIndex: p => p.__source.index,\n        dataRange,\n        replace: this._getPaths(dataRange)\n      }));\n      this.setState({\n        paths,\n        pathsDiff\n      });\n    } else if (geometryChanged) {\n      this.setState({\n        paths: this._getPaths(),\n        pathsDiff: null\n      });\n    }\n  }\n\n  _getPaths(dataRange = {}) {\n    const {\n      data,\n      getPolygon,\n      positionFormat,\n      _normalize\n    } = this.props;\n    const paths = [];\n    const positionSize = positionFormat === 'XY' ? 2 : 3;\n    const {\n      startRow,\n      endRow\n    } = dataRange;\n    const {\n      iterable,\n      objectInfo\n    } = createIterable(data, startRow, endRow);\n\n    for (const object of iterable) {\n      objectInfo.index++;\n      let polygon = getPolygon(object, objectInfo);\n\n      if (_normalize) {\n        polygon = Polygon.normalize(polygon, positionSize);\n      }\n\n      const {\n        holeIndices\n      } = polygon;\n      const positions = polygon.positions || polygon;\n\n      if (holeIndices) {\n        for (let i = 0; i <= holeIndices.length; i++) {\n          const path = positions.slice(holeIndices[i - 1] || 0, holeIndices[i] || positions.length);\n          paths.push(this.getSubLayerRow({\n            path\n          }, object, objectInfo.index));\n        }\n      } else {\n        paths.push(this.getSubLayerRow({\n          path: positions\n        }, object, objectInfo.index));\n      }\n    }\n\n    return paths;\n  }\n\n  renderLayers() {\n    const {\n      data,\n      _dataDiff,\n      stroked,\n      filled,\n      extruded,\n      wireframe,\n      _normalize,\n      _windingOrder,\n      elevationScale,\n      transitions,\n      positionFormat\n    } = this.props;\n    const {\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels,\n      lineJointRounded,\n      lineMiterLimit,\n      lineDashJustified\n    } = this.props;\n    const {\n      getFillColor,\n      getLineColor,\n      getLineWidth,\n      getLineDashArray,\n      getElevation,\n      getPolygon,\n      updateTriggers,\n      material\n    } = this.props;\n    const {\n      paths,\n      pathsDiff\n    } = this.state;\n    const FillLayer = this.getSubLayerClass('fill', SolidPolygonLayer);\n    const StrokeLayer = this.getSubLayerClass('stroke', PathLayer);\n    const polygonLayer = this.shouldRenderSubLayer('fill', paths) && new FillLayer({\n      _dataDiff,\n      extruded,\n      elevationScale,\n      filled,\n      wireframe,\n      _normalize,\n      _windingOrder,\n      getElevation,\n      getFillColor,\n      getLineColor: extruded && wireframe ? getLineColor : defaultLineColor,\n      material,\n      transitions\n    }, this.getSubLayerProps({\n      id: 'fill',\n      updateTriggers: {\n        getPolygon: updateTriggers.getPolygon,\n        getElevation: updateTriggers.getElevation,\n        getFillColor: updateTriggers.getFillColor,\n        lineColors: extruded && wireframe,\n        getLineColor: updateTriggers.getLineColor\n      }\n    }), {\n      data,\n      positionFormat,\n      getPolygon\n    });\n    const polygonLineLayer = !extruded && stroked && this.shouldRenderSubLayer('stroke', paths) && new StrokeLayer({\n      _dataDiff: pathsDiff && (() => pathsDiff),\n      widthUnits: lineWidthUnits,\n      widthScale: lineWidthScale,\n      widthMinPixels: lineWidthMinPixels,\n      widthMaxPixels: lineWidthMaxPixels,\n      jointRounded: lineJointRounded,\n      miterLimit: lineMiterLimit,\n      dashJustified: lineDashJustified,\n      _pathType: 'loop',\n      transitions: transitions && {\n        getWidth: transitions.getLineWidth,\n        getColor: transitions.getLineColor,\n        getPath: transitions.getPolygon\n      },\n      getColor: this.getSubLayerAccessor(getLineColor),\n      getWidth: this.getSubLayerAccessor(getLineWidth),\n      getDashArray: this.getSubLayerAccessor(getLineDashArray)\n    }, this.getSubLayerProps({\n      id: 'stroke',\n      updateTriggers: {\n        getWidth: updateTriggers.getLineWidth,\n        getColor: updateTriggers.getLineColor,\n        getDashArray: updateTriggers.getLineDashArray\n      }\n    }), {\n      data: paths,\n      positionFormat,\n      getPath: x => x.path\n    });\n    return [!extruded && polygonLayer, polygonLineLayer, extruded && polygonLayer];\n  }\n\n}\nPolygonLayer.layerName = 'PolygonLayer';\nPolygonLayer.defaultProps = defaultProps;\n//# sourceMappingURL=polygon-layer.js.map","/* eslint-disable no-negated-condition */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { extent } from 'd3-array';\nimport { scaleThreshold } from 'd3-scale';\nimport {\n  getSequentialSchemeRegistry,\n  SequentialScheme,\n} from '@superset-ui/core';\nimport { hexToRGB } from './utils/colors';\n\nconst DEFAULT_NUM_BUCKETS = 10;\n\nexport function getBreakPoints(\n  { break_points: formDataBreakPoints, num_buckets: formDataNumBuckets },\n  features,\n  accessor,\n) {\n  if (!features) {\n    return [];\n  }\n  if (formDataBreakPoints === undefined || formDataBreakPoints.length === 0) {\n    // compute evenly distributed break points based on number of buckets\n    const numBuckets = formDataNumBuckets\n      ? parseInt(formDataNumBuckets, 10)\n      : DEFAULT_NUM_BUCKETS;\n    const [minValue, maxValue] = extent(features, accessor);\n    if (minValue === undefined) {\n      return [];\n    }\n    const delta = (maxValue - minValue) / numBuckets;\n    const precision =\n      delta === 0 ? 0 : Math.max(0, Math.ceil(Math.log10(1 / delta)));\n    const extraBucket = maxValue > maxValue.toFixed(precision) ? 1 : 0;\n    const startValue =\n      minValue < minValue.toFixed(precision) ? minValue - 1 : minValue;\n\n    return new Array(numBuckets + 1 + extraBucket)\n      .fill()\n      .map((_, i) => (startValue + i * delta).toFixed(precision));\n  }\n\n  return formDataBreakPoints.sort((a, b) => parseFloat(a) - parseFloat(b));\n}\n\nexport function getBreakPointColorScaler(\n  {\n    break_points: formDataBreakPoints,\n    num_buckets: formDataNumBuckets,\n    linear_color_scheme: linearColorScheme,\n    opacity,\n  },\n  features,\n  accessor,\n) {\n  const breakPoints =\n    formDataBreakPoints || formDataNumBuckets\n      ? getBreakPoints(\n          {\n            break_points: formDataBreakPoints,\n            num_buckets: formDataNumBuckets,\n          },\n          features,\n          accessor,\n        )\n      : null;\n  const colorScheme = Array.isArray(linearColorScheme)\n    ? new SequentialScheme({\n        colors: linearColorScheme,\n        id: 'custom',\n      })\n    : getSequentialSchemeRegistry().get(linearColorScheme);\n\n  let scaler;\n  let maskPoint;\n  if (breakPoints !== null) {\n    // bucket colors into discrete colors\n    const n = breakPoints.length - 1;\n    const bucketedColors =\n      n > 1\n        ? colorScheme.getColors(n)\n        : [colorScheme.colors[colorScheme.colors.length - 1]];\n\n    // repeat ends\n    const first = bucketedColors[0];\n    const last = bucketedColors[bucketedColors.length - 1];\n    bucketedColors.unshift(first);\n    bucketedColors.push(last);\n\n    const points = breakPoints.map(p => parseFloat(p));\n    scaler = scaleThreshold().domain(points).range(bucketedColors);\n    maskPoint = value => value > breakPoints[n] || value < breakPoints[0];\n  } else {\n    // interpolate colors linearly\n    scaler = colorScheme.createLinearScale(extent(features, accessor));\n    maskPoint = () => false;\n  }\n\n  return d => {\n    const v = accessor(d);\n    const c = hexToRGB(scaler(v));\n    if (maskPoint(v)) {\n      c[3] = 0;\n    } else {\n      c[3] = (opacity / 100) * 255;\n    }\n\n    return c;\n  };\n}\n\nexport function getBuckets(fd, features, accessor) {\n  const breakPoints = getBreakPoints(fd, features, accessor);\n  const colorScaler = getBreakPointColorScaler(fd, features, accessor);\n  const buckets = {};\n  breakPoints.slice(1).forEach((value, i) => {\n    const range = `${breakPoints[i]} - ${breakPoints[i + 1]}`;\n    const mid =\n      0.5 * (parseFloat(breakPoints[i]) + parseFloat(breakPoints[i + 1]));\n    // fix polygon doesn't show\n    const metricLabel = fd.metric ? fd.metric.label || fd.metric : null;\n    buckets[range] = {\n      color: colorScaler({ [metricLabel || fd.metric]: mid }),\n      enabled: true,\n    };\n  });\n\n  return buckets;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Point } from '../types';\n\n/** Format originally used by the Polygon plugin */\ntype CustomPolygonFeature = {\n  polygon: Point[];\n};\n\n/**\n * Format that is geojson standard\n * https://geojson.org/geojson-spec.html\n */\ntype GeojsonPolygonFeature = {\n  polygon: {\n    type: 'Feature';\n    geometry: {\n      type: 'Polygon';\n      coordinates: Point[][];\n    };\n  };\n};\n\nexport default function getPointsFromPolygon(\n  feature: CustomPolygonFeature | GeojsonPolygonFeature,\n) {\n  return 'geometry' in feature.polygon\n    ? feature.polygon.geometry.coordinates[0]\n    : feature.polygon;\n}\n","/* eslint-disable react/sort-prop-types */\n/* eslint-disable react/jsx-handler-names */\n/* eslint-disable react/no-access-state-in-setstate */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PolygonLayer } from 'deck.gl';\n\nimport AnimatableDeckGLContainer from '../../AnimatableDeckGLContainer';\nimport Legend from '../../components/Legend';\nimport TooltipRow from '../../TooltipRow';\nimport { getBuckets, getBreakPointColorScaler } from '../../utils';\n\nimport { commonLayerProps } from '../common';\nimport { getPlaySliderParams } from '../../utils/time';\nimport sandboxedEval from '../../utils/sandbox';\n// eslint-disable-next-line import/extensions\nimport getPointsFromPolygon from '../../utils/getPointsFromPolygon';\n// eslint-disable-next-line import/extensions\nimport fitViewport from '../../utils/fitViewport';\n\nconst DOUBLE_CLICK_TRESHOLD = 250; // milliseconds\n\nfunction getElevation(d, colorScaler) {\n  /* in deck.gl 5.3.4 (used in Superset as of 2018-10-24), if a polygon has\n   * opacity zero it will make everything behind it have opacity zero,\n   * effectively showing the map layer no matter what other polygons are\n   * behind it.\n   */\n  return colorScaler(d)[3] === 0 ? 0 : d.elevation;\n}\n\nfunction setTooltipContent(formData) {\n  return o => {\n    const metricLabel = formData.metric.label || formData.metric;\n\n    return (\n      <div className=\"deckgl-tooltip\">\n        {o.object.name && (\n          <TooltipRow label=\"name: \" value={`${o.object.name}`} />\n        )}\n        {o.object[formData.line_column] && (\n          <TooltipRow\n            label={`${formData.line_column}: `}\n            value={`${o.object[formData.line_column]}`}\n          />\n        )}\n        {formData.metric && (\n          <TooltipRow\n            label={`${metricLabel}: `}\n            value={`${o.object[metricLabel]}`}\n          />\n        )}\n      </div>\n    );\n  };\n}\n\nexport function getLayer(\n  formData,\n  payload,\n  onAddFilter,\n  setTooltip,\n  selected,\n  onSelect,\n  filters,\n) {\n  const fd = formData;\n  const fc = fd.fill_color_picker;\n  const sc = fd.stroke_color_picker;\n  let data = [...payload.data.features];\n\n  if (filters != null) {\n    filters.forEach(f => {\n      data = data.filter(x => f(x));\n    });\n  }\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n\n  const metricLabel = fd.metric ? fd.metric.label || fd.metric : null;\n  const accessor = d => d[metricLabel];\n  // base color for the polygons\n  const baseColorScaler =\n    fd.metric === null\n      ? () => [fc.r, fc.g, fc.b, 255 * fc.a]\n      : getBreakPointColorScaler(fd, data, accessor);\n\n  // when polygons are selected, reduce the opacity of non-selected polygons\n  const colorScaler = d => {\n    const baseColor = baseColorScaler(d);\n    if (selected.length > 0 && !selected.includes(d[fd.line_column])) {\n      baseColor[3] /= 2;\n    }\n\n    return baseColor;\n  };\n\n  const tooltipContentGenerator =\n    fd.line_column &&\n    fd.metric &&\n    ['json', 'geohash', 'zipcode'].includes(fd.line_type)\n      ? setTooltipContent(fd)\n      : undefined;\n\n  return new PolygonLayer({\n    id: `path-layer-${fd.slice_id}`,\n    data,\n    pickable: true,\n    filled: fd.filled,\n    stroked: fd.stroked,\n    getPolygon: getPointsFromPolygon,\n    getFillColor: colorScaler,\n    getLineColor: [sc.r, sc.g, sc.b, 255 * sc.a],\n    getLineWidth: fd.line_width,\n    extruded: fd.extruded,\n    getElevation: d => getElevation(d, colorScaler),\n    elevationScale: fd.multiplier,\n    fp64: true,\n    ...commonLayerProps(fd, setTooltip, tooltipContentGenerator, onSelect),\n  });\n}\n\nconst propTypes = {\n  formData: PropTypes.object.isRequired,\n  payload: PropTypes.object.isRequired,\n  setControlValue: PropTypes.func.isRequired,\n  viewport: PropTypes.object.isRequired,\n  onAddFilter: PropTypes.func,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n};\n\nconst defaultProps = {\n  onAddFilter() {},\n};\n\nclass DeckGLPolygon extends React.Component {\n  containerRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = DeckGLPolygon.getDerivedStateFromProps(props);\n\n    this.getLayers = this.getLayers.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onValuesChange = this.onValuesChange.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { width, height, formData, payload } = props;\n\n    // the state is computed only from the payload; if it hasn't changed, do\n    // not recompute state since this would reset selections and/or the play\n    // slider position due to changes in form controls\n    if (state && payload.form_data === state.formData) {\n      return null;\n    }\n\n    const features = payload.data.features || [];\n    const timestamps = features.map(f => f.__timestamp);\n\n    // the granularity has to be read from the payload form_data, not the\n    // props formData which comes from the instantaneous controls state\n    const granularity =\n      payload.form_data.time_grain_sqla ||\n      payload.form_data.granularity ||\n      'P1D';\n\n    const { start, end, getStep, values, disabled } = getPlaySliderParams(\n      timestamps,\n      granularity,\n    );\n\n    let { viewport } = props;\n    if (formData.autozoom) {\n      viewport = fitViewport(viewport, {\n        width,\n        height,\n        points: features.flatMap(getPointsFromPolygon),\n      });\n    }\n\n    return {\n      start,\n      end,\n      getStep,\n      values,\n      disabled,\n      viewport,\n      selected: [],\n      lastClick: 0,\n      formData: payload.form_data,\n    };\n  }\n\n  onSelect(polygon) {\n    const { formData, onAddFilter } = this.props;\n\n    const now = new Date();\n    const doubleClick = now - this.state.lastClick <= DOUBLE_CLICK_TRESHOLD;\n\n    // toggle selected polygons\n    const selected = [...this.state.selected];\n    if (doubleClick) {\n      selected.splice(0, selected.length, polygon);\n    } else if (formData.toggle_polygons) {\n      const i = selected.indexOf(polygon);\n      if (i === -1) {\n        selected.push(polygon);\n      } else {\n        selected.splice(i, 1);\n      }\n    } else {\n      selected.splice(0, 1, polygon);\n    }\n\n    this.setState({ selected, lastClick: now });\n    if (formData.table_filter) {\n      onAddFilter(formData.line_column, selected, false, true);\n    }\n  }\n\n  onValuesChange(values) {\n    this.setState({\n      values: Array.isArray(values)\n        ? values\n        : [values, values + this.state.getStep(values)],\n    });\n  }\n\n  getLayers(values) {\n    if (this.props.payload.data.features === undefined) {\n      return [];\n    }\n\n    const filters = [];\n\n    // time filter\n    if (values[0] === values[1] || values[1] === this.end) {\n      filters.push(\n        d => d.__timestamp >= values[0] && d.__timestamp <= values[1],\n      );\n    } else {\n      filters.push(\n        d => d.__timestamp >= values[0] && d.__timestamp < values[1],\n      );\n    }\n\n    const layer = getLayer(\n      this.props.formData,\n      this.props.payload,\n      this.props.onAddFilter,\n      this.setTooltip,\n      this.state.selected,\n      this.onSelect,\n      filters,\n    );\n\n    return [layer];\n  }\n\n  setTooltip = tooltip => {\n    const { current } = this.containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  };\n\n  render() {\n    const { payload, formData, setControlValue } = this.props;\n    const { start, end, getStep, values, disabled, viewport } = this.state;\n\n    const fd = formData;\n    const metricLabel = fd.metric ? fd.metric.label || fd.metric : null;\n    const accessor = d => d[metricLabel];\n\n    const buckets = getBuckets(formData, payload.data.features, accessor);\n\n    return (\n      <div style={{ position: 'relative' }}>\n        <AnimatableDeckGLContainer\n          ref={this.containerRef}\n          aggregation\n          getLayers={this.getLayers}\n          start={start}\n          end={end}\n          getStep={getStep}\n          values={values}\n          disabled={disabled}\n          viewport={viewport}\n          width={this.props.width}\n          height={this.props.height}\n          mapboxApiAccessToken={payload.data.mapboxApiKey}\n          mapStyle={formData.mapbox_style}\n          setControlValue={setControlValue}\n          onValuesChange={this.onValuesChange}\n          onViewportChange={this.onViewportChange}\n        >\n          {formData.metric !== null && (\n            <Legend\n              categories={buckets}\n              position={formData.legend_position}\n              format={formData.legend_format}\n            />\n          )}\n        </AnimatableDeckGLContainer>\n      </div>\n    );\n  }\n}\n\nDeckGLPolygon.propTypes = propTypes;\nDeckGLPolygon.defaultProps = defaultProps;\n\nexport default DeckGLPolygon;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { roundDecimal } from './utils';\n\nexport const defaultViewport = {\n  bearing: 0,\n  latitude: 31.222656842808707,\n  longitude: 6.85236157047845,\n  pitch: 0,\n  zoom: 1,\n};\n\nconst METER_TO_MILE = 1609.34;\n\nexport function unitToRadius(unit, num) {\n  if (unit === 'square_m') {\n    return Math.sqrt(num / Math.PI);\n  }\n  if (unit === 'radius_m') {\n    return num;\n  }\n  if (unit === 'radius_km') {\n    return num * 1000;\n  }\n  if (unit === 'radius_miles') {\n    return num * METER_TO_MILE;\n  }\n  if (unit === 'square_km') {\n    return Math.sqrt(num / Math.PI) * 1000;\n  }\n  if (unit === 'square_miles') {\n    return Math.sqrt(num / Math.PI) * METER_TO_MILE;\n  }\n\n  return null;\n}\n\nexport const EARTH_CIRCUMFERENCE_KM = 40075.16;\nexport const MILES_PER_KM = 1.60934;\n\nexport function kmToPixels(kilometers, latitude, zoomLevel) {\n  // Algorithm from: https://wiki.openstreetmap.org/wiki/Zoom_levels\n  const latitudeRad = latitude * (Math.PI / 180);\n  // Seems like the zoomLevel is off by one\n  const kmPerPixel =\n    (EARTH_CIRCUMFERENCE_KM * Math.cos(latitudeRad)) / 2 ** (zoomLevel + 9);\n\n  return roundDecimal(kilometers / kmPerPixel, 2);\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ScatterplotLayer } from 'deck.gl';\nimport React from 'react';\nimport { getMetricLabel, t } from '@superset-ui/core';\nimport { commonLayerProps } from '../common';\nimport { createCategoricalDeckGLComponent } from '../../factory';\nimport TooltipRow from '../../TooltipRow';\nimport { unitToRadius } from '../../utils/geo';\n\nfunction getPoints(data) {\n  return data.map(d => d.position);\n}\n\nfunction setTooltipContent(formData, verboseMap) {\n  return o => {\n    const label =\n      verboseMap?.[formData.point_radius_fixed.value] ||\n      getMetricLabel(formData.point_radius_fixed?.value);\n    return (\n      <div className=\"deckgl-tooltip\">\n        <TooltipRow\n          label={`${t('Longitude and Latitude')}: `}\n          value={`${o.object.position[0]}, ${o.object.position[1]}`}\n        />\n        {o.object.cat_color && (\n          <TooltipRow\n            label={`${t('Category')}: `}\n            value={`${o.object.cat_color}`}\n          />\n        )}\n        {o.object.metric && (\n          <TooltipRow label={`${label}: `} value={`${o.object.metric}`} />\n        )}\n      </div>\n    );\n  };\n}\n\nexport function getLayer(\n  formData,\n  payload,\n  onAddFilter,\n  setTooltip,\n  datasource,\n) {\n  const fd = formData;\n  const dataWithRadius = payload.data.features.map(d => {\n    let radius = unitToRadius(fd.point_unit, d.radius) || 10;\n    if (fd.multiplier) {\n      radius *= fd.multiplier;\n    }\n    if (d.color) {\n      return { ...d, radius };\n    }\n    const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n    const color = [c.r, c.g, c.b, c.a * 255];\n\n    return { ...d, radius, color };\n  });\n\n  return new ScatterplotLayer({\n    id: `scatter-layer-${fd.slice_id}`,\n    data: dataWithRadius,\n    fp64: true,\n    getFillColor: d => d.color,\n    getRadius: d => d.radius,\n    radiusMinPixels: fd.min_radius || null,\n    radiusMaxPixels: fd.max_radius || null,\n    stroked: false,\n    ...commonLayerProps(\n      fd,\n      setTooltip,\n      setTooltipContent(fd, datasource?.verboseMap),\n    ),\n  });\n}\n\nexport default createCategoricalDeckGLComponent(getLayer, getPoints);\n"],"names":["getExploreLongUrl","formData","endpointType","allowOverflow","extraSearch","datasource","uri","URI","directory","includes","getURIDirectory","search","Object","keys","forEach","key","form_data","object","cache","Set","JSON","stringify","value","has","parse","error","add","safeStringify","standalone","url","toString","length","viz_type","URL_IS_TOO_LONG_TO_SHARE","deck_grid","deck_screengrid","deck_path","deck_hex","deck_scatter","deck_geojson","deck_arc","deck_polygon","propTypes","PropTypes","payload","setControlValue","viewport","onAddFilter","onSelect","defaultProps","DeckMulti","React","constructor","props","super","containerRef","setTooltip","tooltip","current","this","state","subSlicesLayers","onViewportChange","bind","componentDidMount","loadLayers","UNSAFE_componentWillReceiveProps","nextProps","deck_slices","setState","data","slices","subslice","filters","extra_filters","subsliceCopy","SupersetClient","endpoint","then","json","layer","layerGenerators","slice_id","catch","render","height","width","layers","values","DeckGLContainer","ref","mapboxApiAccessToken","mapboxApiKey","mapStyle","mapbox_style","propertyMap","fillColor","color","fill","strokeColor","alterProps","propOverrides","newProps","k","hexToRGB","features","recurseGeoJson","node","extraProps","obj","geometry","newNode","properties","push","setTooltipContent","o","className","map","prop","index","label","getFillColor","feature","getLineColor","getLayer","fd","fc","fill_color_picker","sc","stroke_color_picker","r","g","b","a","jsFnMutator","js_data_mutator","sandboxedEval","GeoJsonLayer","id","filled","stroked","extruded","pointRadiusScale","point_radius_scale","getLineWidth","line_width","commonLayerProps","DeckGLGeoJson","autozoom","points","reduce","acc","bounds","geojsonExtent","fitViewport","t","coordinate","elevationValue","c","color_picker","d","aggFunc","getAggFunc","js_agg_function","p","weight","GridLayer","pickable","cellSize","grid_size","minColor","maxColor","outline","getElevationValue","getColorValue","createDeckGLComponent","position","thirdPi","Math","PI","angles","pointX","pointY","nop","colorDomain","colorRange","type","getColorWeight","colorAggregation","lowerPercentile","min","max","upperPercentile","colorScaleType","onSetColorDomain","elevationDomain","elevationRange","getElevationWeight","elevationAggregation","elevationLowerPercentile","elevationUpperPercentile","elevationScale","elevationScaleType","onSetElevationDomain","radius","coverage","hexagonAggregator","aggregationParams","attributes","centerLngLat","positions","size","getAccessor","i","minX","Infinity","minY","maxX","maxY","x","y","Number","isFinite","every","getPointsCenter","radiusCommon","center","unitsPerMeter","getDistanceScales","getRadiusInCommon","screenPoints","iterable","objectInfo","posIndex","screenCoord","projectFlat","source","log","newHexbin","dx","dy","x0","y0","x1","y1","hexbin","binsById","bins","n","isNaN","px","call","point","py","pj","round","pi","py1","abs","px1","pi2","pj2","px2","py2","bin","hexagon","angle","sin","cos","join","centers","j","mesh","fragment","slice","_","arguments","extent","hexagons","hex","unprojectFlat","getPosition","material","_filterData","optional","HexagonLayer","shouldUpdateState","changeFlags","somethingChanged","initializeState","cpuAggregator","getAggregator","getCellSize","aggregatorState","hexagonVertices","getAttributeManager","accessor","updateState","opts","oldVertices","propsOrDataChanged","context","getAttributes","layerData","vertices","convertLatLngToMeterOffset","updateRadiusAngle","Array","isArray","vertex0","vertex3","centroid","centroidFlat","metersPerUnit","vt","vtFlat","getPickingInfo","info","_onGetSublayerColor","cell","_onGetSublayerElevation","_getSublayerUpdateTriggers","getUpdateTriggers","renderLayers","transitions","SubLayerClass","getSubLayerClass","updateTriggers","diskResolution","getElevation","getSubLayerProps","layerName","TooltipRow","fixedColor","path","PathLayer","getColor","getPath","getWidth","rounded","widthScale","concat","defaultLineColor","wireframe","_normalize","_windingOrder","lineWidthUnits","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","MAX_SAFE_INTEGER","lineJointRounded","lineMiterLimit","getPolygon","f","polygon","PolygonLayer","paths","getLineDashArray","oldProps","geometryChanged","dataChanged","updateTriggersChanged","all","pathsDiff","dataRange","getIndex","__source","replace","_getPaths","positionFormat","positionSize","startRow","endRow","holeIndices","getSubLayerRow","_dataDiff","lineDashJustified","FillLayer","StrokeLayer","polygonLayer","shouldRenderSubLayer","lineColors","widthUnits","widthMinPixels","widthMaxPixels","jointRounded","miterLimit","dashJustified","_pathType","getSubLayerAccessor","getDashArray","getBreakPoints","break_points","formDataBreakPoints","num_buckets","formDataNumBuckets","undefined","numBuckets","parseInt","minValue","maxValue","delta","precision","ceil","log10","extraBucket","toFixed","startValue","sort","parseFloat","getBreakPointColorScaler","linear_color_scheme","linearColorScheme","opacity","breakPoints","colorScheme","SequentialScheme","colors","getSequentialSchemeRegistry","get","scaler","maskPoint","bucketedColors","getColors","first","last","unshift","scaleThreshold","domain","range","createLinearScale","v","getPointsFromPolygon","coordinates","selected","filter","metricLabel","metric","baseColorScaler","colorScaler","baseColor","line_column","tooltipContentGenerator","line_type","name","elevation","multiplier","fp64","DeckGLPolygon","getDerivedStateFromProps","getLayers","onValuesChange","timestamps","__timestamp","granularity","time_grain_sqla","start","end","getStep","disabled","getPlaySliderParams","flatMap","lastClick","now","Date","doubleClick","splice","toggle_polygons","indexOf","table_filter","buckets","mid","enabled","getBuckets","style","AnimatableDeckGLContainer","aggregation","Legend","categories","legend_position","format","legend_format","METER_TO_MILE","verboseMap","point_radius_fixed","getMetricLabel","cat_color","dataWithRadius","unit","point_unit","num","sqrt","ScatterplotLayer","getRadius","radiusMinPixels","min_radius","radiusMaxPixels","max_radius","createCategoricalDeckGLComponent"],"sourceRoot":""}