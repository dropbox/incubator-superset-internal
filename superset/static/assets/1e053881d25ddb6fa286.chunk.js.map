{"version":3,"file":"1e053881d25ddb6fa286.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/ImportModal/index.tsx","webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/components/Tags/Tag.tsx","webpack://superset/./src/components/Tags/TagsList.tsx","webpack://superset/./src/features/home/commonMenuData.ts","webpack://superset/./src/features/queries/SyntaxHighlighterCopy.tsx","webpack://superset/./src/features/queries/hooks/useQueryPreviewState.ts","webpack://superset/./src/features/queries/SavedQueryPreviewModal.tsx","webpack://superset/./src/pages/SavedQueryList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useEffect, useState } from 'react';\nimport { UploadChangeParam, UploadFile } from 'antd/lib/upload/interface';\nimport { styled, t } from '@superset-ui/core';\n\nimport Button from 'src/components/Button';\nimport Modal from 'src/components/Modal';\nimport { Upload } from 'src/components';\nimport { useImportResource } from 'src/views/CRUD/hooks';\nimport { ImportResourceName } from 'src/views/CRUD/types';\nimport ErrorAlert from './ErrorAlert';\n\nconst HelperMessage = styled.div`\n  display: block;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n`;\n\nconst StyledInputContainer = styled.div`\n  padding-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n\n  & > div {\n    margin: ${({ theme }) => theme.gridUnit}px 0;\n  }\n\n  &.extra-container {\n    padding-top: 8px;\n  }\n\n  .confirm-overwrite {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .input-container {\n    display: flex;\n    align-items: center;\n\n    label {\n      display: flex;\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    i {\n      margin: 0 ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  textarea {\n    height: 160px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n\n  textarea,\n  input[type='text'],\n  input[type='number'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border-style: none;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n\n    &[name='name'] {\n      flex: 0 1 auto;\n      width: 40%;\n    }\n\n    &[name='sqlalchemy_uri'] {\n      margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    }\n  }\n`;\n\nexport interface ImportModelsModalProps {\n  resourceName: ImportResourceName;\n  resourceLabel: string;\n  passwordsNeededMessage: string;\n  confirmOverwriteMessage: string;\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  onModelImport: () => void;\n  show: boolean;\n  onHide: () => void;\n  passwordFields?: string[];\n  setPasswordFields?: (passwordFields: string[]) => void;\n  sshTunnelPasswordFields?: string[];\n  setSSHTunnelPasswordFields?: (sshTunnelPasswordFields: string[]) => void;\n  sshTunnelPrivateKeyFields?: string[];\n  setSSHTunnelPrivateKeyFields?: (sshTunnelPrivateKeyFields: string[]) => void;\n  sshTunnelPrivateKeyPasswordFields?: string[];\n  setSSHTunnelPrivateKeyPasswordFields?: (\n    sshTunnelPrivateKeyPasswordFields: string[],\n  ) => void;\n}\n\nconst ImportModelsModal: FunctionComponent<ImportModelsModalProps> = ({\n  resourceName,\n  resourceLabel,\n  passwordsNeededMessage,\n  confirmOverwriteMessage,\n  onModelImport,\n  show,\n  onHide,\n  passwordFields = [],\n  setPasswordFields = () => {},\n  sshTunnelPasswordFields = [],\n  setSSHTunnelPasswordFields = () => {},\n  sshTunnelPrivateKeyFields = [],\n  setSSHTunnelPrivateKeyFields = () => {},\n  sshTunnelPrivateKeyPasswordFields = [],\n  setSSHTunnelPrivateKeyPasswordFields = () => {},\n}) => {\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const [passwords, setPasswords] = useState<Record<string, string>>({});\n  const [needsOverwriteConfirm, setNeedsOverwriteConfirm] =\n    useState<boolean>(false);\n  const [confirmedOverwrite, setConfirmedOverwrite] = useState<boolean>(false);\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\n  const [importingModel, setImportingModel] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const [sshTunnelPasswords, setSSHTunnelPasswords] = useState<\n    Record<string, string>\n  >({});\n  const [sshTunnelPrivateKeys, setSSHTunnelPrivateKeys] = useState<\n    Record<string, string>\n  >({});\n  const [sshTunnelPrivateKeyPasswords, setSSHTunnelPrivateKeyPasswords] =\n    useState<Record<string, string>>({});\n\n  const clearModal = () => {\n    setFileList([]);\n    setPasswordFields([]);\n    setPasswords({});\n    setNeedsOverwriteConfirm(false);\n    setConfirmedOverwrite(false);\n    setImportingModel(false);\n    setErrorMessage('');\n    setSSHTunnelPasswordFields([]);\n    setSSHTunnelPrivateKeyFields([]);\n    setSSHTunnelPrivateKeyPasswordFields([]);\n    setSSHTunnelPasswords({});\n    setSSHTunnelPrivateKeys({});\n    setSSHTunnelPrivateKeyPasswords({});\n  };\n\n  const handleErrorMsg = (msg: string) => {\n    setErrorMessage(msg);\n  };\n\n  const {\n    state: {\n      alreadyExists,\n      passwordsNeeded,\n      sshPasswordNeeded,\n      sshPrivateKeyNeeded,\n      sshPrivateKeyPasswordNeeded,\n    },\n    importResource,\n  } = useImportResource(resourceName, resourceLabel, handleErrorMsg);\n\n  useEffect(() => {\n    setPasswordFields(passwordsNeeded);\n    if (passwordsNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [passwordsNeeded, setPasswordFields]);\n\n  useEffect(() => {\n    setNeedsOverwriteConfirm(alreadyExists.length > 0);\n    if (alreadyExists.length > 0) {\n      setImportingModel(false);\n    }\n  }, [alreadyExists, setNeedsOverwriteConfirm]);\n\n  useEffect(() => {\n    setSSHTunnelPasswordFields(sshPasswordNeeded);\n    if (sshPasswordNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPasswordNeeded, setSSHTunnelPasswordFields]);\n\n  useEffect(() => {\n    setSSHTunnelPrivateKeyFields(sshPrivateKeyNeeded);\n    if (sshPrivateKeyNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPrivateKeyNeeded, setSSHTunnelPrivateKeyFields]);\n\n  useEffect(() => {\n    setSSHTunnelPrivateKeyPasswordFields(sshPrivateKeyPasswordNeeded);\n    if (sshPrivateKeyPasswordNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPrivateKeyPasswordNeeded, setSSHTunnelPrivateKeyPasswordFields]);\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    onHide();\n    clearModal();\n  };\n\n  const onUpload = () => {\n    if (!(fileList[0]?.originFileObj instanceof File)) {\n      return;\n    }\n\n    setImportingModel(true);\n    importResource(\n      fileList[0].originFileObj,\n      passwords,\n      sshTunnelPasswords,\n      sshTunnelPrivateKeys,\n      sshTunnelPrivateKeyPasswords,\n      confirmedOverwrite,\n    ).then(result => {\n      if (result) {\n        clearModal();\n        onModelImport();\n      }\n    });\n  };\n\n  const changeFile = (info: UploadChangeParam) => {\n    setFileList([\n      {\n        ...info.file,\n        status: 'done',\n      },\n    ]);\n  };\n\n  const removeFile = (removedFile: UploadFile) => {\n    setFileList(fileList.filter(file => file.uid !== removedFile.uid));\n    return false;\n  };\n\n  const confirmOverwrite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const targetValue = (event.currentTarget?.value as string) ?? '';\n    setConfirmedOverwrite(targetValue.toUpperCase() === t('OVERWRITE'));\n  };\n\n  const renderPasswordFields = () => {\n    if (\n      passwordFields.length === 0 &&\n      sshTunnelPasswordFields.length === 0 &&\n      sshTunnelPrivateKeyFields.length === 0 &&\n      sshTunnelPrivateKeyPasswordFields.length === 0\n    ) {\n      return null;\n    }\n\n    const files = [\n      ...new Set([\n        ...passwordFields,\n        ...sshTunnelPasswordFields,\n        ...sshTunnelPrivateKeyFields,\n        ...sshTunnelPrivateKeyPasswordFields,\n      ]),\n    ];\n\n    return (\n      <>\n        <h5>{t('Database passwords')}</h5>\n        <HelperMessage>{passwordsNeededMessage}</HelperMessage>\n        {files.map(fileName => (\n          <>\n            {passwordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer key={`password-for-${fileName}`}>\n                <div className=\"control-label\">\n                  {t('%s PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`password-${fileName}`}\n                  autoComplete={`password-${fileName}`}\n                  type=\"password\"\n                  value={passwords[fileName]}\n                  onChange={event =>\n                    setPasswords({\n                      ...passwords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPasswordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer key={`ssh_tunnel_password-for-${fileName}`}>\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`ssh_tunnel_password-${fileName}`}\n                  autoComplete={`ssh_tunnel_password-${fileName}`}\n                  type=\"password\"\n                  value={sshTunnelPasswords[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPasswords({\n                      ...sshTunnelPasswords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_password\"\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPrivateKeyFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer\n                key={`ssh_tunnel_private_key-for-${fileName}`}\n              >\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PRIVATE KEY', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <textarea\n                  name={`ssh_tunnel_private_key-${fileName}`}\n                  autoComplete={`ssh_tunnel_private_key-${fileName}`}\n                  value={sshTunnelPrivateKeys[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPrivateKeys({\n                      ...sshTunnelPrivateKeys,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_private_key\"\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPrivateKeyPasswordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer\n                key={`ssh_tunnel_private_key_password-for-${fileName}`}\n              >\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PRIVATE KEY PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`ssh_tunnel_private_key_password-${fileName}`}\n                  autoComplete={`ssh_tunnel_private_key_password-${fileName}`}\n                  type=\"password\"\n                  value={sshTunnelPrivateKeyPasswords[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPrivateKeyPasswords({\n                      ...sshTunnelPrivateKeyPasswords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_private_key_password\"\n                />\n              </StyledInputContainer>\n            )}\n          </>\n        ))}\n      </>\n    );\n  };\n\n  const renderOverwriteConfirmation = () => {\n    if (!needsOverwriteConfirm) {\n      return null;\n    }\n\n    return (\n      <>\n        <StyledInputContainer>\n          <div className=\"confirm-overwrite\">{confirmOverwriteMessage}</div>\n          <div className=\"control-label\">\n            {t('Type \"%s\" to confirm', t('OVERWRITE'))}\n          </div>\n          <input\n            data-test=\"overwrite-modal-input\"\n            id=\"overwrite\"\n            type=\"text\"\n            onChange={confirmOverwrite}\n          />\n        </StyledInputContainer>\n      </>\n    );\n  };\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      name=\"model\"\n      className=\"import-model-modal\"\n      disablePrimaryButton={\n        fileList.length === 0 ||\n        (needsOverwriteConfirm && !confirmedOverwrite) ||\n        importingModel\n      }\n      onHandledPrimaryAction={onUpload}\n      onHide={hide}\n      primaryButtonName={needsOverwriteConfirm ? t('Overwrite') : t('Import')}\n      primaryButtonType={needsOverwriteConfirm ? 'danger' : 'primary'}\n      width=\"750px\"\n      show={show}\n      title={<h4>{t('Import %s', resourceLabel)}</h4>}\n    >\n      <StyledInputContainer>\n        <Upload\n          name=\"modelFile\"\n          id=\"modelFile\"\n          data-test=\"model-file-input\"\n          accept=\".yaml,.json,.yml,.zip\"\n          fileList={fileList}\n          onChange={changeFile}\n          onRemove={removeFile}\n          // upload is handled by hook\n          customRequest={() => {}}\n          disabled={importingModel}\n        >\n          <Button loading={importingModel}>{t('Select file')}</Button>\n        </Upload>\n      </StyledInputContainer>\n      {errorMessage && (\n        <ErrorAlert\n          errorMessage={errorMessage}\n          showDbInstallInstructions={\n            passwordFields.length > 0 ||\n            sshTunnelPasswordFields.length > 0 ||\n            sshTunnelPrivateKeyFields.length > 0 ||\n            sshTunnelPrivateKeyPasswordFields.length > 0\n          }\n        />\n      )}\n      {renderPasswordFields()}\n      {renderOverwriteConfirmation()}\n    </Modal>\n  );\n};\n\nexport default ImportModelsModal;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | React.ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport AntdTag from 'antd/lib/tag';\nimport React, { useMemo } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\n\nconst StyledTag = styled(AntdTag)`\n  ${({ theme }) => `\n  margin-top: ${theme.gridUnit}px;\n  margin-bottom: ${theme.gridUnit}px;\n  font-size: ${theme.typography.sizes.s}px;\n  `};\n`;\n\nconst Tag = ({\n  name,\n  id,\n  index = undefined,\n  onDelete = undefined,\n  editable = false,\n  onClick = undefined,\n}: TagType) => {\n  const isLongTag = useMemo(() => name.length > 20, [name]);\n\n  const handleClose = () => (index ? onDelete?.(index) : null);\n\n  const tagElem = (\n    <>\n      {editable ? (\n        <StyledTag\n          key={id}\n          closable={editable}\n          onClose={handleClose}\n          color=\"blue\"\n        >\n          {isLongTag ? `${name.slice(0, 20)}...` : name}\n        </StyledTag>\n      ) : (\n        <StyledTag role=\"link\" key={id} onClick={onClick}>\n          {id ? (\n            <a\n              href={`/superset/tags/?tags=${name}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {isLongTag ? `${name.slice(0, 20)}...` : name}\n            </a>\n          ) : isLongTag ? (\n            `${name.slice(0, 20)}...`\n          ) : (\n            name\n          )}\n        </StyledTag>\n      )}\n    </>\n  );\n\n  return isLongTag ? (\n    <Tooltip title={name} key={name}>\n      {tagElem}\n    </Tooltip>\n  ) : (\n    tagElem\n  );\n};\n\nexport default Tag;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport Tag from './Tag';\n\nexport type TagsListProps = {\n  tags: TagType[];\n  editable?: boolean;\n  /**\n   * OnDelete:\n   * Only applies when editable is true\n   * Callback for when a tag is deleted\n   */\n  onDelete?: ((index: number) => void) | undefined;\n  maxTags?: number | undefined;\n};\n\nconst TagsDiv = styled.div`\n  max-width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nconst TagsList = ({\n  tags,\n  editable = false,\n  onDelete,\n  maxTags,\n}: TagsListProps) => {\n  const [tempMaxTags, setTempMaxTags] = useState<number | undefined>(maxTags);\n\n  const handleDelete = (index: number) => {\n    onDelete?.(index);\n  };\n\n  const expand = () => setTempMaxTags(undefined);\n\n  const collapse = () => setTempMaxTags(maxTags);\n\n  const tagsIsLong: boolean | null = useMemo(\n    () => (tempMaxTags ? tags.length > tempMaxTags : null),\n    [tags.length, tempMaxTags],\n  );\n\n  const extraTags: number | null = useMemo(\n    () =>\n      typeof tempMaxTags === 'number' ? tags.length - tempMaxTags + 1 : null,\n    [tagsIsLong, tags.length, tempMaxTags],\n  );\n\n  return (\n    <TagsDiv className=\"tag-list\">\n      {tagsIsLong && typeof tempMaxTags === 'number' ? (\n        <>\n          {tags.slice(0, tempMaxTags - 1).map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {tags.length > tempMaxTags ? (\n            <Tag name={`+${extraTags}...`} onClick={expand} />\n          ) : null}\n        </>\n      ) : (\n        <>\n          {tags.map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {maxTags ? (\n            tags.length > maxTags ? (\n              <Tag name=\"...\" onClick={collapse} />\n            ) : null\n          ) : null}\n        </>\n      )}\n    </TagsDiv>\n  );\n};\n\nexport default TagsList;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\n\nexport const commonMenuData = {\n  name: t('SQL'),\n  tabs: [\n    {\n      name: 'Saved queries',\n      label: t('Saved queries'),\n      url: '/savedqueryview/list/',\n      usesRouter: true,\n    },\n    {\n      name: 'Query history',\n      label: t('Query history'),\n      url: '/superset/sqllab/history/',\n      usesRouter: true,\n    },\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { SyntaxHighlighterProps } from 'react-syntax-highlighter';\nimport sqlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport htmlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/htmlbars';\nimport markdownSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/markdown';\nimport jsonSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/json';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport Icons from 'src/components/Icons';\nimport { ToastProps } from 'src/components/MessageToasts/withToasts';\nimport copyTextToClipboard from 'src/utils/copy';\n\nSyntaxHighlighter.registerLanguage('sql', sqlSyntax);\nSyntaxHighlighter.registerLanguage('markdown', markdownSyntax);\nSyntaxHighlighter.registerLanguage('html', htmlSyntax);\nSyntaxHighlighter.registerLanguage('json', jsonSyntax);\n\nconst SyntaxHighlighterWrapper = styled.div`\n  margin-top: -24px;\n\n  &:hover {\n    svg {\n      visibility: visible;\n    }\n  }\n\n  svg {\n    position: relative;\n    top: 40px;\n    left: 512px;\n    visibility: hidden;\n    margin: -4px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n`;\n\nexport default function SyntaxHighlighterCopy({\n  addDangerToast,\n  addSuccessToast,\n  children,\n  ...syntaxHighlighterProps\n}: SyntaxHighlighterProps & {\n  children: string;\n  addDangerToast?: ToastProps['addDangerToast'];\n  addSuccessToast?: ToastProps['addSuccessToast'];\n  language: 'sql' | 'markdown' | 'html' | 'json';\n}) {\n  function copyToClipboard(textToCopy: string) {\n    copyTextToClipboard(() => Promise.resolve(textToCopy))\n      .then(() => {\n        if (addSuccessToast) {\n          addSuccessToast(t('SQL Copied!'));\n        }\n      })\n      .catch(() => {\n        if (addDangerToast) {\n          addDangerToast(t('Sorry, your browser does not support copying.'));\n        }\n      });\n  }\n  return (\n    <SyntaxHighlighterWrapper>\n      <Icons.Copy\n        tabIndex={0}\n        role=\"button\"\n        onClick={e => {\n          e.preventDefault();\n          e.currentTarget.blur();\n          copyToClipboard(children);\n        }}\n      />\n      <SyntaxHighlighter style={github} {...syntaxHighlighterProps}>\n        {children}\n      </SyntaxHighlighter>\n    </SyntaxHighlighterWrapper>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect } from 'react';\n\ntype BaseQueryObject = {\n  id: number;\n};\n\nexport default function useQueryPreviewState<D extends BaseQueryObject = any>({\n  queries,\n  fetchData,\n  currentQueryId,\n}: {\n  queries: D[];\n  fetchData: (id: number) => any;\n  currentQueryId: number;\n}) {\n  const index = queries.findIndex(query => query.id === currentQueryId);\n  const [currentIndex, setCurrentIndex] = useState(index);\n  const [disablePrevious, setDisablePrevious] = useState(false);\n  const [disableNext, setDisableNext] = useState(false);\n\n  function checkIndex() {\n    setDisablePrevious(currentIndex === 0);\n    setDisableNext(currentIndex === queries.length - 1);\n  }\n\n  function handleDataChange(previous: boolean) {\n    const offset = previous ? -1 : 1;\n    const index = currentIndex + offset;\n    if (index >= 0 && index < queries.length) {\n      fetchData(queries[index].id);\n      setCurrentIndex(index);\n      checkIndex();\n    }\n  }\n\n  function handleKeyPress(ev: any) {\n    if (currentIndex >= 0 && currentIndex < queries.length) {\n      if (ev.key === 'ArrowDown' || ev.key === 'k') {\n        ev.preventDefault();\n        handleDataChange(false);\n      } else if (ev.key === 'ArrowUp' || ev.key === 'j') {\n        ev.preventDefault();\n        handleDataChange(true);\n      }\n    }\n  }\n\n  useEffect(() => {\n    checkIndex();\n  });\n\n  return {\n    handleKeyPress,\n    handleDataChange,\n    disablePrevious,\n    disableNext,\n  };\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport SyntaxHighlighterCopy from 'src/features/queries/SyntaxHighlighterCopy';\nimport withToasts, {\n  ToastProps,\n} from 'src/components/MessageToasts/withToasts';\nimport useQueryPreviewState from 'src/features/queries/hooks/useQueryPreviewState';\n\nconst QueryTitle = styled.div`\n  color: ${({ theme }) => theme.colors.secondary.light2};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-bottom: 0;\n  text-transform: uppercase;\n`;\n\nconst QueryLabel = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n  font-size: ${({ theme }) => theme.typography.sizes.m}px;\n  padding: 4px 0 16px 0;\n`;\n\nconst StyledModal = styled(Modal)`\n  .ant-modal-content {\n  }\n\n  .ant-modal-body {\n    padding: 24px;\n  }\n\n  pre {\n    font-size: ${({ theme }) => theme.typography.sizes.xs}px;\n    font-weight: ${({ theme }) => theme.typography.weights.normal};\n    line-height: ${({ theme }) => theme.typography.sizes.l}px;\n    height: 375px;\n    border: none;\n  }\n`;\n\ntype SavedQueryObject = {\n  id: number;\n  label: string;\n  sql: string;\n};\n\ninterface SavedQueryPreviewModalProps extends ToastProps {\n  fetchData: (id: number) => {};\n  onHide: () => void;\n  openInSqlLab: (id: number) => {};\n  queries: Array<SavedQueryObject>;\n  savedQuery: SavedQueryObject;\n  show: boolean;\n}\n\nconst SavedQueryPreviewModal: FunctionComponent<SavedQueryPreviewModalProps> =\n  ({\n    fetchData,\n    onHide,\n    openInSqlLab,\n    queries,\n    savedQuery,\n    show,\n    addDangerToast,\n    addSuccessToast,\n  }) => {\n    const { handleKeyPress, handleDataChange, disablePrevious, disableNext } =\n      useQueryPreviewState<SavedQueryObject>({\n        queries,\n        currentQueryId: savedQuery.id,\n        fetchData,\n      });\n\n    return (\n      <div role=\"none\" onKeyUp={handleKeyPress}>\n        <StyledModal\n          onHide={onHide}\n          show={show}\n          title={t('Query preview')}\n          footer={\n            <>\n              <Button\n                data-test=\"previous-saved-query\"\n                key=\"previous-saved-query\"\n                disabled={disablePrevious}\n                onClick={() => handleDataChange(true)}\n              >\n                {t('Previous')}\n              </Button>\n              <Button\n                data-test=\"next-saved-query\"\n                key=\"next-saved-query\"\n                disabled={disableNext}\n                onClick={() => handleDataChange(false)}\n              >\n                {t('Next')}\n              </Button>\n              <Button\n                data-test=\"open-in-sql-lab\"\n                key=\"open-in-sql-lab\"\n                buttonStyle=\"primary\"\n                onClick={() => openInSqlLab(savedQuery.id)}\n              >\n                {t('Open in SQL Lab')}\n              </Button>\n            </>\n          }\n        >\n          <QueryTitle>{t('Query name')}</QueryTitle>\n          <QueryLabel>{savedQuery.label}</QueryLabel>\n          <SyntaxHighlighterCopy\n            language=\"sql\"\n            addDangerToast={addDangerToast}\n            addSuccessToast={addSuccessToast}\n          >\n            {savedQuery.sql || ''}\n          </SyntaxHighlighterCopy>\n        </StyledModal>\n      </div>\n    );\n  };\n\nexport default withToasts(SavedQueryPreviewModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FeatureFlag, styled, SupersetClient, t } from '@superset-ui/core';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport rison from 'rison';\nimport moment from 'moment';\nimport {\n  createFetchRelated,\n  createFetchDistinct,\n  createErrorHandler,\n} from 'src/views/CRUD/utils';\nimport Popover from 'src/components/Popover';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport handleResourceExport from 'src/utils/export';\nimport SubMenu, { SubMenuProps, ButtonProps } from 'src/features/home/SubMenu';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport Loading from 'src/components/Loading';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport { TagsList } from 'src/components/Tags';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { commonMenuData } from 'src/features/home/commonMenuData';\nimport { SavedQueryObject } from 'src/views/CRUD/types';\nimport copyTextToClipboard from 'src/utils/copy';\nimport Tag from 'src/types/TagType';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport ImportModelsModal from 'src/components/ImportModal/index';\nimport Icons from 'src/components/Icons';\nimport { BootstrapUser } from 'src/types/bootstrapTypes';\nimport SavedQueryPreviewModal from 'src/features/queries/SavedQueryPreviewModal';\n\nconst PAGE_SIZE = 25;\nconst PASSWORDS_NEEDED_MESSAGE = t(\n  'The passwords for the databases below are needed in order to ' +\n    'import them together with the saved queries. Please note that the ' +\n    '\"Secure Extra\" and \"Certificate\" sections of ' +\n    'the database configuration are not present in export files, and ' +\n    'should be added manually after the import if they are needed.',\n);\nconst CONFIRM_OVERWRITE_MESSAGE = t(\n  'You are importing one or more saved queries that already exist. ' +\n    'Overwriting might cause you to lose some of your work. Are you ' +\n    'sure you want to overwrite?',\n);\n\ninterface SavedQueryListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: BootstrapUser;\n}\n\nconst StyledTableLabel = styled.div`\n  .count {\n    margin-left: 5px;\n    color: ${({ theme }) => theme.colors.primary.base};\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\n\nconst StyledPopoverItem = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n`;\n\nfunction SavedQueryList({\n  addDangerToast,\n  addSuccessToast,\n}: SavedQueryListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: queryCount,\n      resourceCollection: queries,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    toggleBulkSelect,\n    refreshData,\n  } = useListViewResource<SavedQueryObject>(\n    'saved_query',\n    t('Saved queries'),\n    addDangerToast,\n  );\n  const [queryCurrentlyDeleting, setQueryCurrentlyDeleting] =\n    useState<SavedQueryObject | null>(null);\n  const [savedQueryCurrentlyPreviewing, setSavedQueryCurrentlyPreviewing] =\n    useState<SavedQueryObject | null>(null);\n  const [importingSavedQuery, showImportModal] = useState<boolean>(false);\n  const [passwordFields, setPasswordFields] = useState<string[]>([]);\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n  const [sshTunnelPasswordFields, setSSHTunnelPasswordFields] = useState<\n    string[]\n  >([]);\n  const [sshTunnelPrivateKeyFields, setSSHTunnelPrivateKeyFields] = useState<\n    string[]\n  >([]);\n  const [\n    sshTunnelPrivateKeyPasswordFields,\n    setSSHTunnelPrivateKeyPasswordFields,\n  ] = useState<string[]>([]);\n\n  const openSavedQueryImportModal = () => {\n    showImportModal(true);\n  };\n\n  const closeSavedQueryImportModal = () => {\n    showImportModal(false);\n  };\n\n  const handleSavedQueryImport = () => {\n    showImportModal(false);\n    refreshData();\n    addSuccessToast(t('Query imported'));\n  };\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport =\n    hasPerm('can_export') && isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT);\n\n  const openNewQuery = () => {\n    window.open(`${window.location.origin}/superset/sqllab?new=true`);\n  };\n\n  const handleSavedQueryPreview = useCallback(\n    (id: number) => {\n      SupersetClient.get({\n        endpoint: `/api/v1/saved_query/${id}`,\n      }).then(\n        ({ json = {} }) => {\n          setSavedQueryCurrentlyPreviewing({ ...json.result });\n        },\n        createErrorHandler(errMsg =>\n          addDangerToast(\n            t('There was an issue previewing the selected query %s', errMsg),\n          ),\n        ),\n      );\n    },\n    [addDangerToast],\n  );\n\n  const menuData: SubMenuProps = {\n    activeChild: 'Saved queries',\n    ...commonMenuData,\n  };\n\n  const subMenuButtons: Array<ButtonProps> = [];\n\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  subMenuButtons.push({\n    name: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Query')}\n      </>\n    ),\n    onClick: openNewQuery,\n    buttonStyle: 'primary',\n  });\n\n  if (canCreate && isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT)) {\n    subMenuButtons.push({\n      name: (\n        <Tooltip\n          id=\"import-tooltip\"\n          title={t('Import queries')}\n          placement=\"bottomRight\"\n          data-test=\"import-tooltip-test\"\n        >\n          <Icons.Import data-test=\"import-icon\" />\n        </Tooltip>\n      ),\n      buttonStyle: 'link',\n      onClick: openSavedQueryImportModal,\n      'data-test': 'import-button',\n    });\n  }\n\n  menuData.buttons = subMenuButtons;\n\n  // Action methods\n  const openInSqlLab = (id: number) => {\n    window.open(`${window.location.origin}/superset/sqllab?savedQueryId=${id}`);\n  };\n\n  const copyQueryLink = useCallback(\n    (id: number) => {\n      copyTextToClipboard(() =>\n        Promise.resolve(\n          `${window.location.origin}/superset/sqllab?savedQueryId=${id}`,\n        ),\n      )\n        .then(() => {\n          addSuccessToast(t('Link Copied!'));\n        })\n        .catch(() => {\n          addDangerToast(t('Sorry, your browser does not support copying.'));\n        });\n    },\n    [addDangerToast, addSuccessToast],\n  );\n\n  const handleQueryDelete = ({ id, label }: SavedQueryObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/saved_query/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setQueryCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', label));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', label, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkSavedQueryExport = (\n    savedQueriesToExport: SavedQueryObject[],\n  ) => {\n    const ids = savedQueriesToExport.map(({ id }) => id);\n    handleResourceExport('saved_query', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n\n  const handleBulkQueryDelete = (queriesToDelete: SavedQueryObject[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/saved_query/?q=${rison.encode(\n        queriesToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected queries: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'label',\n        Header: t('Name'),\n      },\n      {\n        accessor: 'database.database_name',\n        Header: t('Database'),\n        size: 'xl',\n      },\n      {\n        accessor: 'database',\n        hidden: true,\n        disableSortBy: true,\n      },\n      {\n        accessor: 'schema',\n        Header: t('Schema'),\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { sql_tables: tables = [] },\n          },\n        }: any) => {\n          const names = tables.map((table: any) => table.table);\n          const main = names?.shift() || '';\n\n          if (names.length) {\n            return (\n              <StyledTableLabel>\n                <span>{main}</span>\n                <Popover\n                  placement=\"right\"\n                  title={t('TABLES')}\n                  trigger=\"click\"\n                  content={\n                    <>\n                      {names.map((name: string) => (\n                        <StyledPopoverItem key={name}>{name}</StyledPopoverItem>\n                      ))}\n                    </>\n                  }\n                >\n                  <span className=\"count\">(+{names.length})</span>\n                </Popover>\n              </StyledTableLabel>\n            );\n          }\n\n          return main;\n        },\n        accessor: 'sql_tables',\n        Header: t('Tables'),\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_on: createdOn },\n          },\n        }: any) => {\n          const date = new Date(createdOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).fromNow();\n        },\n        Header: t('Created on'),\n        accessor: 'created_on',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { changed_on_delta_humanized: changedOn },\n          },\n        }: any) => changedOn,\n        Header: t('Modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { tags = [] },\n          },\n        }: any) => (\n          // Only show custom type tags\n          <TagsList tags={tags.filter((tag: Tag) => tag.type === 1)} />\n        ),\n        Header: t('Tags'),\n        accessor: 'tags',\n        disableSortBy: true,\n        hidden: !isFeatureEnabled(FeatureFlag.TAGGING_SYSTEM),\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handlePreview = () => {\n            handleSavedQueryPreview(original.id);\n          };\n          const handleEdit = () => openInSqlLab(original.id);\n          const handleCopy = () => copyQueryLink(original.id);\n          const handleExport = () => handleBulkSavedQueryExport([original]);\n          const handleDelete = () => setQueryCurrentlyDeleting(original);\n\n          const actions = [\n            {\n              label: 'preview-action',\n              tooltip: t('Query preview'),\n              placement: 'bottom',\n              icon: 'Binoculars',\n              onClick: handlePreview,\n            },\n            canEdit && {\n              label: 'edit-action',\n              tooltip: t('Edit query'),\n              placement: 'bottom',\n              icon: 'Edit',\n              onClick: handleEdit,\n            },\n            {\n              label: 'copy-action',\n              tooltip: t('Copy query URL'),\n              placement: 'bottom',\n              icon: 'Copy',\n              onClick: handleCopy,\n            },\n            canExport && {\n              label: 'export-action',\n              tooltip: t('Export query'),\n              placement: 'bottom',\n              icon: 'Share',\n              onClick: handleExport,\n            },\n            canDelete && {\n              label: 'delete-action',\n              tooltip: t('Delete query'),\n              placement: 'bottom',\n              icon: 'Trash',\n              onClick: handleDelete,\n            },\n          ].filter(item => !!item);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n      },\n    ],\n    [canDelete, canEdit, canExport, copyQueryLink, handleSavedQueryPreview],\n  );\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Database'),\n        key: 'database',\n        id: 'database',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'saved_query',\n          'database',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t(\n                'An error occurred while fetching dataset datasource values: %s',\n                errMsg,\n              ),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Schema'),\n        id: 'schema',\n        key: 'schema',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchDistinct(\n          'saved_query',\n          'schema',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching schema values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Tags'),\n        id: 'tags',\n        key: 'tags',\n        input: 'search',\n        operator: FilterOperator.savedQueryTags,\n      },\n      {\n        Header: t('Search'),\n        id: 'label',\n        key: 'search',\n        input: 'search',\n        operator: FilterOperator.allText,\n      },\n    ],\n    [addDangerToast],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      {queryCurrentlyDeleting && (\n        <DeleteModal\n          description={t(\n            'This action will permanently delete the saved query.',\n          )}\n          onConfirm={() => {\n            if (queryCurrentlyDeleting) {\n              handleQueryDelete(queryCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setQueryCurrentlyDeleting(null)}\n          open\n          title={t('Delete Query?')}\n        />\n      )}\n      {savedQueryCurrentlyPreviewing && (\n        <SavedQueryPreviewModal\n          fetchData={handleSavedQueryPreview}\n          onHide={() => setSavedQueryCurrentlyPreviewing(null)}\n          savedQuery={savedQueryCurrentlyPreviewing}\n          queries={queries}\n          openInSqlLab={openInSqlLab}\n          show\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected queries?')}\n        onConfirm={handleBulkQueryDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [];\n          if (canDelete) {\n            bulkActions.push({\n              key: 'delete',\n              name: t('Delete'),\n              onSelect: confirmDelete,\n              type: 'danger',\n            });\n          }\n          if (canExport) {\n            bulkActions.push({\n              key: 'export',\n              name: t('Export'),\n              type: 'primary',\n              onSelect: handleBulkSavedQueryExport,\n            });\n          }\n          return (\n            <ListView<SavedQueryObject>\n              className=\"saved_query-list-view\"\n              columns={columns}\n              count={queryCount}\n              data={queries}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              highlightRowId={savedQueryCurrentlyPreviewing?.id}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n\n      <ImportModelsModal\n        resourceName=\"saved_query\"\n        resourceLabel={t('queries')}\n        passwordsNeededMessage={PASSWORDS_NEEDED_MESSAGE}\n        confirmOverwriteMessage={CONFIRM_OVERWRITE_MESSAGE}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onModelImport={handleSavedQueryImport}\n        show={importingSavedQuery}\n        onHide={closeSavedQueryImportModal}\n        passwordFields={passwordFields}\n        setPasswordFields={setPasswordFields}\n        sshTunnelPasswordFields={sshTunnelPasswordFields}\n        setSSHTunnelPasswordFields={setSSHTunnelPasswordFields}\n        sshTunnelPrivateKeyFields={sshTunnelPrivateKeyFields}\n        setSSHTunnelPrivateKeyFields={setSSHTunnelPrivateKeyFields}\n        sshTunnelPrivateKeyPasswordFields={sshTunnelPrivateKeyPasswordFields}\n        setSSHTunnelPrivateKeyPasswordFields={\n          setSSHTunnelPrivateKeyPasswordFields\n        }\n      />\n      {preparingExport && <Loading />}\n    </>\n  );\n}\n\nexport default withToasts(SavedQueryList);\n"],"names":["HelperMessage","styled","theme","colors","grayscale","base","typography","sizes","s","StyledInputContainer","gridUnit","light1","light2","resourceName","resourceLabel","passwordsNeededMessage","confirmOverwriteMessage","onModelImport","show","onHide","passwordFields","setPasswordFields","sshTunnelPasswordFields","setSSHTunnelPasswordFields","sshTunnelPrivateKeyFields","setSSHTunnelPrivateKeyFields","sshTunnelPrivateKeyPasswordFields","setSSHTunnelPrivateKeyPasswordFields","isHidden","setIsHidden","useState","passwords","setPasswords","needsOverwriteConfirm","setNeedsOverwriteConfirm","confirmedOverwrite","setConfirmedOverwrite","fileList","setFileList","importingModel","setImportingModel","errorMessage","setErrorMessage","sshTunnelPasswords","setSSHTunnelPasswords","sshTunnelPrivateKeys","setSSHTunnelPrivateKeys","sshTunnelPrivateKeyPasswords","setSSHTunnelPrivateKeyPasswords","clearModal","state","alreadyExists","passwordsNeeded","sshPasswordNeeded","sshPrivateKeyNeeded","sshPrivateKeyPasswordNeeded","importResource","useImportResource","msg","useEffect","length","name","className","disablePrimaryButton","onHandledPrimaryAction","originFileObj","File","then","result","primaryButtonName","t","primaryButtonType","width","title","id","accept","onChange","info","file","status","onRemove","removedFile","filter","uid","customRequest","disabled","loading","showDbInstallInstructions","files","Set","map","fileName","indexOf","key","slice","autoComplete","type","value","event","target","renderPasswordFields","targetValue","currentTarget","toUpperCase","StyledActions","primary","ActionWrapper","ActionsBar","actions","action","index","ActionIcon","Icons","icon","tooltip","label","placement","role","tabIndex","onClick","StyledTag","AntdTag","onDelete","editable","isLongTag","useMemo","tagElem","closable","onClose","color","href","rel","Tooltip","TagsDiv","tags","maxTags","tempMaxTags","setTempMaxTags","handleDelete","tagsIsLong","extraTags","tag","undefined","commonMenuData","tabs","url","usesRouter","SyntaxHighlighter","sqlSyntax","markdownSyntax","htmlSyntax","jsonSyntax","SyntaxHighlighterWrapper","SyntaxHighlighterCopy","addDangerToast","addSuccessToast","children","syntaxHighlighterProps","e","textToCopy","preventDefault","blur","copyTextToClipboard","Promise","resolve","catch","style","github","useQueryPreviewState","queries","fetchData","currentQueryId","findIndex","query","currentIndex","setCurrentIndex","disablePrevious","setDisablePrevious","disableNext","setDisableNext","checkIndex","handleDataChange","previous","handleKeyPress","ev","QueryTitle","secondary","QueryLabel","dark2","m","StyledModal","Modal","xs","weights","normal","l","withToasts","openInSqlLab","savedQuery","onKeyUp","footer","Button","buttonStyle","language","sql","PASSWORDS_NEEDED_MESSAGE","CONFIRM_OVERWRITE_MESSAGE","StyledTableLabel","StyledPopoverItem","resourceCount","queryCount","resourceCollection","bulkSelectEnabled","hasPerm","toggleBulkSelect","refreshData","useListViewResource","queryCurrentlyDeleting","setQueryCurrentlyDeleting","savedQueryCurrentlyPreviewing","setSavedQueryCurrentlyPreviewing","importingSavedQuery","showImportModal","preparingExport","setPreparingExport","canCreate","canEdit","canDelete","canExport","isFeatureEnabled","FeatureFlag","handleSavedQueryPreview","useCallback","SupersetClient","endpoint","json","createErrorHandler","errMsg","menuData","activeChild","subMenuButtons","push","window","open","location","origin","buttons","copyQueryLink","handleBulkSavedQueryExport","savedQueriesToExport","ids","handleResourceExport","initialSort","desc","columns","accessor","Header","size","hidden","disableSortBy","Cell","row","original","sql_tables","tables","names","table","main","shift","Popover","trigger","content","created_on","createdOn","date","Date","utc","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","moment","fromNow","changed_on_delta_humanized","changedOn","Tags","item","filters","input","operator","FilterOperator","unfilteredLabel","fetchSelects","createFetchRelated","paginate","createFetchDistinct","SubMenu","DeleteModal","description","onConfirm","handleQueryDelete","ConfirmStatusChange","queriesToDelete","rison","message","confirmDelete","bulkActions","onSelect","ListView","count","data","pageSize","disableBulkSelect","highlightRowId","Loading"],"sourceRoot":""}