{"version":3,"file":"1c7cf50519f56a518fcf.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/CronPicker/CronPicker.tsx","webpack://superset/./src/components/ReportModal/styles.tsx","webpack://superset/./src/components/Switch/index.tsx","webpack://superset/./src/components/TimezoneSelector/index.tsx","webpack://superset/./src/features/alerts/components/AlertReportCronScheduler.tsx","webpack://superset/./src/features/alerts/components/NotificationMethod.tsx","webpack://superset/./src/features/alerts/AlertReportModal.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { ConfigProvider } from 'antd';\nimport { styled, t } from '@superset-ui/core';\nimport ReactCronPicker, { Locale, CronProps } from 'react-js-cron';\n\nexport * from 'react-js-cron';\n\nexport const LOCALE: Locale = {\n  everyText: t('every'),\n  emptyMonths: t('every month'),\n  emptyMonthDays: t('every day of the month'),\n  emptyMonthDaysShort: t('day of the month'),\n  emptyWeekDays: t('every day of the week'),\n  emptyWeekDaysShort: t('day of the week'),\n  emptyHours: t('every hour'),\n  emptyMinutes: t('every minute'),\n  emptyMinutesForHourPeriod: t('every'),\n  yearOption: t('year'),\n  monthOption: t('month'),\n  weekOption: t('week'),\n  dayOption: t('day'),\n  hourOption: t('hour'),\n  minuteOption: t('minute'),\n  rebootOption: t('reboot'),\n  prefixPeriod: t('Every'),\n  prefixMonths: t('in'),\n  prefixMonthDays: t('on'),\n  prefixWeekDays: t('on'),\n  prefixWeekDaysForMonthAndYearPeriod: t('and'),\n  prefixHours: t('at'),\n  prefixMinutes: t(':'),\n  prefixMinutesForHourPeriod: t('at'),\n  suffixMinutesForHourPeriod: t('minute(s)'),\n  errorInvalidCron: t('Invalid cron expression'),\n  clearButtonText: t('Clear'),\n  weekDays: [\n    // Order is important, the index will be used as value\n    t('Sunday'), // Sunday must always be first, it's \"0\"\n    t('Monday'),\n    t('Tuesday'),\n    t('Wednesday'),\n    t('Thursday'),\n    t('Friday'),\n    t('Saturday'),\n  ],\n  months: [\n    // Order is important, the index will be used as value\n    t('January'),\n    t('February'),\n    t('March'),\n    t('April'),\n    t('May'),\n    t('June'),\n    t('July'),\n    t('August'),\n    t('September'),\n    t('October'),\n    t('November'),\n    t('December'),\n  ],\n  // Order is important, the index will be used as value\n  altWeekDays: [\n    t('SUN'), // Sunday must always be first, it's \"0\"\n    t('MON'),\n    t('TUE'),\n    t('WED'),\n    t('THU'),\n    t('FRI'),\n    t('SAT'),\n  ],\n  // Order is important, the index will be used as value\n  altMonths: [\n    t('JAN'),\n    t('FEB'),\n    t('MAR'),\n    t('APR'),\n    t('MAY'),\n    t('JUN'),\n    t('JUL'),\n    t('AUG'),\n    t('SEP'),\n    t('OCT'),\n    t('NOV'),\n    t('DEC'),\n  ],\n};\n\nexport const CronPicker = styled((props: CronProps) => (\n  <ConfigProvider\n    getPopupContainer={trigger => trigger.parentElement as HTMLElement}\n  >\n    <ReactCronPicker locale={LOCALE} {...props} />\n  </ConfigProvider>\n))`\n  .react-js-cron-field {\n    margin-bottom: 0px;\n  }\n  .react-js-cron-select:not(.react-js-cron-custom-select) > div:first-of-type,\n  .react-js-cron-custom-select {\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n    background-color: ${({ theme }) =>\n      theme.colors.grayscale.light4} !important;\n  }\n  .react-js-cron-custom-select > div:first-of-type {\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n  }\n  .react-js-cron-custom-select .ant-select-selection-placeholder {\n    flex: auto;\n  }\n  .react-js-cron-custom-select .ant-select-selection-overflow-item {\n    align-self: center;\n  }\n`;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { styled, css, SupersetTheme } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport { Radio } from 'src/components/Radio';\nimport { CronPicker } from 'src/components/CronPicker';\n\nexport const StyledModal = styled(Modal)`\n  .ant-modal-body {\n    padding: 0;\n  }\n`;\n\nexport const StyledTopSection = styled.div`\n  padding: ${({ theme }) =>\n    `${theme.gridUnit * 3}px ${theme.gridUnit * 4}px ${theme.gridUnit * 2}px`};\n  label {\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n`;\n\nexport const StyledBottomSection = styled.div`\n  border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  padding: ${({ theme }) =>\n    `${theme.gridUnit * 4}px ${theme.gridUnit * 4}px ${theme.gridUnit * 6}px`};\n  .ant-select {\n    width: 100%;\n  }\n  .control-label {\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n`;\n\nexport const StyledIconWrapper = styled.span`\n  span {\n    margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    vertical-align: middle;\n  }\n  .text {\n    vertical-align: middle;\n  }\n`;\n\nexport const StyledScheduleTitle = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 7}px;\n\n  h4 {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 3}px;\n  }\n`;\n\nexport const StyledCronPicker = styled(CronPicker)`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 3}px;\n  width: ${({ theme }) => theme.gridUnit * 120}px;\n`;\n\nexport const StyledCronError = styled.p`\n  color: ${({ theme }) => theme.colors.error.base};\n`;\n\nexport const noBottomMargin = css`\n  margin-bottom: 0;\n`;\n\nexport const StyledFooterButton = styled(Button)`\n  width: ${({ theme }) => theme.gridUnit * 40}px;\n`;\n\nexport const TimezoneHeaderStyle = (theme: SupersetTheme) => css`\n  margin: ${theme.gridUnit * 3}px 0 ${theme.gridUnit * 2}px;\n`;\n\nexport const CustomWidthHeaderStyle = (theme: SupersetTheme) => css`\n  margin: ${theme.gridUnit * 3}px 0 ${theme.gridUnit * 2}px;\n`;\n\nexport const SectionHeaderStyle = (theme: SupersetTheme) => css`\n  margin: ${theme.gridUnit * 3}px 0;\n`;\n\nexport const StyledMessageContentTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 8}px 0\n    ${({ theme }) => theme.gridUnit * 4}px;\n`;\n\nexport const StyledRadio = styled(Radio)`\n  display: block;\n  line-height: ${({ theme }) => theme.gridUnit * 8}px;\n`;\n\nexport const StyledRadioGroup = styled(Radio.Group)`\n  margin-left: ${({ theme }) => theme.gridUnit * 0.5}px;\n`;\n\nexport const antDErrorAlertStyles = (theme: SupersetTheme) => css`\n  border: ${theme.colors.error.base} 1px solid;\n  padding: ${theme.gridUnit * 4}px;\n  margin: ${theme.gridUnit * 4}px;\n  margin-top: 0;\n  color: ${theme.colors.error.dark2};\n  .ant-alert-message {\n    font-size: ${theme.typography.sizes.m}px;\n    font-weight: bold;\n  }\n  .ant-alert-description {\n    font-size: ${theme.typography.sizes.m}px;\n    line-height: ${theme.gridUnit * 4}px;\n    .ant-alert-icon {\n      margin-right: ${theme.gridUnit * 2.5}px;\n      font-size: ${theme.typography.sizes.l}px;\n      position: relative;\n      top: ${theme.gridUnit / 4}px;\n    }\n  }\n`;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport BaseSwitch, { SwitchProps } from 'antd/lib/switch';\n\nconst StyledSwitch = styled(BaseSwitch)`\n  .ant-switch-checked {\n    background-color: ${({ theme }) => theme.colors.primary.base};\n  }\n`;\n\nexport const Switch = (props: SwitchProps) => <StyledSwitch {...props} />;\nexport type { SwitchProps };\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useMemo } from 'react';\nimport moment from 'moment-timezone';\nimport { t } from '@superset-ui/core';\nimport { Select } from 'src/components';\n\nconst DEFAULT_TIMEZONE = {\n  name: 'GMT Standard Time',\n  value: 'Africa/Abidjan', // timezones are deduped by the first alphabetical value\n};\n\nconst MIN_SELECT_WIDTH = '400px';\n\nconst offsetsToName = {\n  '-300-240': ['Eastern Standard Time', 'Eastern Daylight Time'],\n  '-360-300': ['Central Standard Time', 'Central Daylight Time'],\n  '-420-360': ['Mountain Standard Time', 'Mountain Daylight Time'],\n  '-420-420': [\n    'Mountain Standard Time - Phoenix',\n    'Mountain Standard Time - Phoenix',\n  ],\n  '-480-420': ['Pacific Standard Time', 'Pacific Daylight Time'],\n  '-540-480': ['Alaska Standard Time', 'Alaska Daylight Time'],\n  '-600-600': ['Hawaii Standard Time', 'Hawaii Daylight Time'],\n  '60120': ['Central European Time', 'Central European Daylight Time'],\n  '00': [DEFAULT_TIMEZONE.name, DEFAULT_TIMEZONE.name],\n  '060': ['GMT Standard Time - London', 'British Summer Time'],\n};\n\nconst currentDate = moment();\nconst JANUARY = moment([2021, 1]);\nconst JULY = moment([2021, 7]);\n\nconst getOffsetKey = (name: string) =>\n  JANUARY.tz(name).utcOffset().toString() +\n  JULY.tz(name).utcOffset().toString();\n\nconst getTimezoneName = (name: string) => {\n  const offsets = getOffsetKey(name);\n  return (\n    (currentDate.tz(name).isDST()\n      ? offsetsToName[offsets]?.[1]\n      : offsetsToName[offsets]?.[0]) || name\n  );\n};\n\nconst ALL_ZONES = moment.tz\n  .countries()\n  .map(country => moment.tz.zonesForCountry(country, true))\n  .flat();\n\nconst TIMEZONES: moment.MomentZoneOffset[] = [];\nALL_ZONES.forEach(zone => {\n  if (\n    !TIMEZONES.find(\n      option => getOffsetKey(option.name) === getOffsetKey(zone.name),\n    )\n  ) {\n    TIMEZONES.push(zone); // dedupe zones by offsets\n  }\n});\n\nconst TIMEZONE_OPTIONS = TIMEZONES.map(zone => ({\n  label: `GMT ${moment\n    .tz(currentDate, zone.name)\n    .format('Z')} (${getTimezoneName(zone.name)})`,\n  value: zone.name,\n  offsets: getOffsetKey(zone.name),\n  timezoneName: zone.name,\n}));\n\nconst TIMEZONE_OPTIONS_SORT_COMPARATOR = (\n  a: typeof TIMEZONE_OPTIONS[number],\n  b: typeof TIMEZONE_OPTIONS[number],\n) =>\n  moment.tz(currentDate, a.timezoneName).utcOffset() -\n  moment.tz(currentDate, b.timezoneName).utcOffset();\n\n// pre-sort timezone options by time offset\nTIMEZONE_OPTIONS.sort(TIMEZONE_OPTIONS_SORT_COMPARATOR);\n\nconst matchTimezoneToOptions = (timezone: string) =>\n  TIMEZONE_OPTIONS.find(option => option.offsets === getOffsetKey(timezone))\n    ?.value || DEFAULT_TIMEZONE.value;\n\nexport type TimezoneSelectorProps = {\n  onTimezoneChange: (value: string) => void;\n  timezone?: string | null;\n  minWidth?: string;\n};\n\nexport default function TimezoneSelector({\n  onTimezoneChange,\n  timezone,\n  minWidth = MIN_SELECT_WIDTH, // smallest size for current values\n}: TimezoneSelectorProps) {\n  const validTimezone = useMemo(\n    () => matchTimezoneToOptions(timezone || moment.tz.guess()),\n    [timezone],\n  );\n\n  // force trigger a timezone update if provided `timezone` is not invalid\n  useEffect(() => {\n    if (timezone !== validTimezone) {\n      onTimezoneChange(validTimezone);\n    }\n  }, [validTimezone, onTimezoneChange, timezone]);\n\n  return (\n    <Select\n      ariaLabel={t('Timezone selector')}\n      css={{ minWidth }}\n      onChange={tz => onTimezoneChange(tz as string)}\n      value={validTimezone}\n      options={TIMEZONE_OPTIONS}\n      sortComparator={TIMEZONE_OPTIONS_SORT_COMPARATOR}\n    />\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useCallback, useRef, FocusEvent } from 'react';\nimport { t, useTheme } from '@superset-ui/core';\n\nimport { AntdInput, RadioChangeEvent } from 'src/components';\nimport { Input } from 'src/components/Input';\nimport { Radio } from 'src/components/Radio';\nimport { CronPicker, CronError } from 'src/components/CronPicker';\nimport { StyledInputContainer } from '../AlertReportModal';\n\nexport interface AlertReportCronSchedulerProps {\n  value: string;\n  onChange: (change: string) => any;\n}\n\nexport const AlertReportCronScheduler: React.FC<AlertReportCronSchedulerProps> =\n  ({ value, onChange }) => {\n    const theme = useTheme();\n    const inputRef = useRef<AntdInput>(null);\n    const [scheduleFormat, setScheduleFormat] = useState<'picker' | 'input'>(\n      'picker',\n    );\n\n    const handleRadioButtonChange = useCallback(\n      (e: RadioChangeEvent) => setScheduleFormat(e.target.value),\n      [],\n    );\n\n    const customSetValue = useCallback(\n      (newValue: string) => {\n        onChange(newValue);\n        inputRef.current?.setValue(newValue);\n      },\n      [inputRef, onChange],\n    );\n\n    const handleBlur = useCallback(\n      (event: FocusEvent<HTMLInputElement>) => {\n        onChange(event.target.value);\n      },\n      [onChange],\n    );\n\n    const handlePressEnter = useCallback(() => {\n      onChange(inputRef.current?.input.value || '');\n    }, [onChange]);\n\n    const [error, onError] = useState<CronError>();\n\n    return (\n      <>\n        <Radio.Group onChange={handleRadioButtonChange} value={scheduleFormat}>\n          <div className=\"inline-container add-margin\">\n            <Radio data-test=\"picker\" value=\"picker\" />\n            <CronPicker\n              clearButton={false}\n              value={value}\n              setValue={customSetValue}\n              disabled={scheduleFormat !== 'picker'}\n              displayError={scheduleFormat === 'picker'}\n              onError={onError}\n            />\n          </div>\n          <div className=\"inline-container add-margin\">\n            <Radio data-test=\"input\" value=\"input\" />\n            <span className=\"input-label\">{t('CRON Schedule')}</span>\n            <StyledInputContainer\n              data-test=\"input-content\"\n              className=\"styled-input\"\n            >\n              <div className=\"input-container\">\n                <Input\n                  type=\"text\"\n                  name=\"crontab\"\n                  ref={inputRef}\n                  style={error ? { borderColor: theme.colors.error.base } : {}}\n                  placeholder={t('CRON expression')}\n                  disabled={scheduleFormat !== 'input'}\n                  onBlur={handleBlur}\n                  onPressEnter={handlePressEnter}\n                />\n              </div>\n            </StyledInputContainer>\n          </div>\n        </Radio.Group>\n      </>\n    );\n  };\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState } from 'react';\nimport { styled, t, useTheme } from '@superset-ui/core';\nimport { Select } from 'src/components';\nimport Icons from 'src/components/Icons';\nimport { NotificationMethodOption } from '../types';\nimport { StyledInputContainer } from '../AlertReportModal';\n\nconst StyledNotificationMethod = styled.div`\n  margin-bottom: 10px;\n\n  .input-container {\n    textarea {\n      height: auto;\n    }\n  }\n\n  .inline-container {\n    margin-bottom: 10px;\n\n    .input-container {\n      margin-left: 10px;\n    }\n\n    > div {\n      margin: 0;\n    }\n\n    .delete-button {\n      margin-left: 10px;\n      padding-top: 3px;\n    }\n  }\n`;\n\ntype NotificationSetting = {\n  method?: NotificationMethodOption;\n  recipients: string;\n  options: NotificationMethodOption[];\n};\n\ninterface NotificationMethodProps {\n  setting?: NotificationSetting | null;\n  index: number;\n  onUpdate?: (index: number, updatedSetting: NotificationSetting) => void;\n  onRemove?: (index: number) => void;\n}\n\nexport const NotificationMethod: FunctionComponent<NotificationMethodProps> = ({\n  setting = null,\n  index,\n  onUpdate,\n  onRemove,\n}) => {\n  const { method, recipients, options } = setting || {};\n  const [recipientValue, setRecipientValue] = useState<string>(\n    recipients || '',\n  );\n  const theme = useTheme();\n\n  if (!setting) {\n    return null;\n  }\n\n  const onMethodChange = (method: NotificationMethodOption) => {\n    // Since we're swapping the method, reset the recipients\n    setRecipientValue('');\n    if (onUpdate) {\n      const updatedSetting = {\n        ...setting,\n        method,\n        recipients: '',\n      };\n\n      onUpdate(index, updatedSetting);\n    }\n  };\n\n  const onRecipientsChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { target } = event;\n\n    setRecipientValue(target.value);\n\n    if (onUpdate) {\n      const updatedSetting = {\n        ...setting,\n        recipients: target.value,\n      };\n\n      onUpdate(index, updatedSetting);\n    }\n  };\n\n  // Set recipients\n  if (!!recipients && recipientValue !== recipients) {\n    setRecipientValue(recipients);\n  }\n\n  return (\n    <StyledNotificationMethod>\n      <div className=\"inline-container\">\n        <StyledInputContainer>\n          <div className=\"input-container\">\n            <Select\n              ariaLabel={t('Delivery method')}\n              data-test=\"select-delivery-method\"\n              onChange={onMethodChange}\n              placeholder={t('Select Delivery Method')}\n              options={(options || []).map(\n                (method: NotificationMethodOption) => ({\n                  label: method,\n                  value: method,\n                }),\n              )}\n              value={method}\n            />\n          </div>\n        </StyledInputContainer>\n        {method !== undefined && !!onRemove ? (\n          <span\n            role=\"button\"\n            tabIndex={0}\n            className=\"delete-button\"\n            onClick={() => onRemove(index)}\n          >\n            <Icons.Trash iconColor={theme.colors.grayscale.base} />\n          </span>\n        ) : null}\n      </div>\n      {method !== undefined ? (\n        <StyledInputContainer>\n          <div className=\"control-label\">{t(method)}</div>\n          <div className=\"input-container\">\n            <textarea\n              name=\"recipients\"\n              value={recipientValue}\n              onChange={onRecipientsChange}\n            />\n          </div>\n          <div className=\"helper\">\n            {t('Recipients are separated by \",\" or \";\"')}\n          </div>\n        </StyledInputContainer>\n      ) : null}\n    </StyledNotificationMethod>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  FunctionComponent,\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n} from 'react';\nimport {\n  css,\n  isFeatureEnabled,\n  FeatureFlag,\n  styled,\n  SupersetClient,\n  SupersetTheme,\n  t,\n} from '@superset-ui/core';\nimport rison from 'rison';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\n\nimport Icons from 'src/components/Icons';\nimport { Input } from 'src/components/Input';\nimport { Switch } from 'src/components/Switch';\nimport Modal from 'src/components/Modal';\nimport TimezoneSelector from 'src/components/TimezoneSelector';\nimport { Radio } from 'src/components/Radio';\nimport { propertyComparator } from 'src/components/Select/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport Owner from 'src/types/Owner';\nimport { AntdCheckbox, AsyncSelect, Select } from 'src/components';\nimport TextAreaControl from 'src/explore/components/controls/TextAreaControl';\nimport { useCommonConf } from 'src/features/databases/state';\nimport { CustomWidthHeaderStyle } from 'src/components/ReportModal/styles';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport {\n  NotificationMethodOption,\n  AlertObject,\n  ChartObject,\n  DashboardObject,\n  DatabaseObject,\n  MetaObject,\n  Operator,\n  Recipient,\n  AlertsReportsConfig,\n} from 'src/features/alerts/types';\nimport { useSelector } from 'react-redux';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport { AlertReportCronScheduler } from './components/AlertReportCronScheduler';\nimport { NotificationMethod } from './components/NotificationMethod';\n\nconst TIMEOUT_MIN = 1;\nconst TEXT_BASED_VISUALIZATION_TYPES = [\n  'pivot_table_v2',\n  'table',\n  'paired_ttest',\n];\n\ntype SelectValue = {\n  value: string;\n  label: string;\n};\n\ninterface AlertReportModalProps {\n  addSuccessToast: (msg: string) => void;\n  addDangerToast: (msg: string) => void;\n  alert?: AlertObject | null;\n  isReport?: boolean;\n  onAdd?: (alert?: AlertObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst DEFAULT_WORKING_TIMEOUT = 3600;\nconst DEFAULT_CRON_VALUE = '0 * * * *'; // every hour\nconst DEFAULT_RETENTION = 90;\n\nconst DEFAULT_NOTIFICATION_METHODS: NotificationMethodOption[] = ['Email'];\nconst DEFAULT_NOTIFICATION_FORMAT = 'PNG';\nconst CONDITIONS = [\n  {\n    label: t('< (Smaller than)'),\n    value: '<',\n  },\n  {\n    label: t('> (Larger than)'),\n    value: '>',\n  },\n  {\n    label: t('<= (Smaller or equal)'),\n    value: '<=',\n  },\n  {\n    label: t('>= (Larger or equal)'),\n    value: '>=',\n  },\n  {\n    label: t('== (Is equal)'),\n    value: '==',\n  },\n  {\n    label: t('!= (Is not equal)'),\n    value: '!=',\n  },\n  {\n    label: t('Not null'),\n    value: 'not null',\n  },\n];\n\nconst RETENTION_OPTIONS = [\n  {\n    label: t('None'),\n    value: 0,\n  },\n  {\n    label: t('30 days'),\n    value: 30,\n  },\n  {\n    label: t('60 days'),\n    value: 60,\n  },\n  {\n    label: t('90 days'),\n    value: 90,\n  },\n];\n\nconst StyledModal = styled(Modal)`\n  max-width: 1200px;\n  width: 100%;\n\n  .ant-modal-body {\n    overflow: initial;\n  }\n`;\n\nconst StyledIcon = (theme: SupersetTheme) => css`\n  margin: auto ${theme.gridUnit * 2}px auto 0;\n  color: ${theme.colors.grayscale.base};\n`;\n\nconst StyledSectionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  .control-label {\n    margin-top: ${({ theme }) => theme.gridUnit}px;\n  }\n\n  .header-section {\n    display: flex;\n    flex: 0 0 auto;\n    align-items: center;\n    width: 100%;\n    padding: ${({ theme }) => theme.gridUnit * 4}px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  }\n\n  .column-section {\n    display: flex;\n    flex: 1 1 auto;\n\n    .column {\n      flex: 1 1 auto;\n      min-width: calc(33.33% - ${({ theme }) => theme.gridUnit * 8}px);\n      padding: ${({ theme }) => theme.gridUnit * 4}px;\n\n      .async-select {\n        margin: 10px 0 20px;\n      }\n\n      &.condition {\n        border-right: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n      }\n\n      &.message {\n        border-left: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n      }\n    }\n  }\n\n  .inline-container {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    &.wrap {\n      flex-wrap: wrap;\n    }\n\n    > div {\n      flex: 1 1 auto;\n    }\n\n    &.add-margin {\n      margin-bottom: 5px;\n    }\n\n    .styled-input {\n      margin: 0 0 0 10px;\n\n      input {\n        flex: 0 0 auto;\n      }\n    }\n  }\n`;\n\nconst StyledSectionTitle = styled.div`\n  display: flex;\n  align-items: center;\n  margin: ${({ theme }) => theme.gridUnit * 2}px auto\n    ${({ theme }) => theme.gridUnit * 4}px auto;\n\n  h4 {\n    margin: 0;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n`;\n\nconst StyledSwitchContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n\n  .switch-label {\n    margin-left: 10px;\n  }\n`;\n\nexport const StyledInputContainer = styled.div`\n  flex: 1;\n  margin-top: 0;\n\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  .helper {\n    display: block;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    padding: ${({ theme }) => theme.gridUnit}px 0;\n    text-align: left;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit / 2}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n\n  .input-container {\n    display: flex;\n    align-items: center;\n\n    > div {\n      width: 100%;\n    }\n\n    label {\n      display: flex;\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    i {\n      margin: 0 ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  input[disabled] {\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n\n  textarea {\n    height: 300px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n\n  textarea,\n  input[type='text'],\n  input[type='number'] {\n    padding: ${({ theme }) => theme.gridUnit}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border-style: none;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n\n    &[name='description'] {\n      flex: 1 1 auto;\n    }\n  }\n\n  .input-label {\n    margin-left: 10px;\n  }\n`;\n\nconst StyledRadio = styled(Radio)`\n  display: block;\n  line-height: ${({ theme }) => theme.gridUnit * 7}px;\n`;\n\nconst StyledRadioGroup = styled(Radio.Group)`\n  margin-left: ${({ theme }) => theme.gridUnit * 5.5}px;\n`;\n\nconst StyledCheckbox = styled(AntdCheckbox)`\n  margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n`;\n\n// Notification Method components\nconst StyledNotificationAddButton = styled.div`\n  color: ${({ theme }) => theme.colors.primary.dark1};\n  cursor: pointer;\n\n  i {\n    margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  &.disabled {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n    cursor: default;\n  }\n`;\n\nconst StyledNotificationMethodWrapper = styled.div`\n  .inline-container .input-container {\n    margin-left: 0;\n  }\n`;\n\nconst timezoneHeaderStyle = (theme: SupersetTheme) => css`\n  margin: ${theme.gridUnit * 3}px 0;\n`;\n\nconst inputSpacer = (theme: SupersetTheme) => css`\n  margin-right: ${theme.gridUnit * 3}px;\n`;\n\ntype NotificationAddStatus = 'active' | 'disabled' | 'hidden';\n\ninterface NotificationMethodAddProps {\n  status: NotificationAddStatus;\n  onClick: () => void;\n}\n\nexport const TRANSLATIONS = {\n  ADD_NOTIFICATION_METHOD_TEXT: t('Add notification method'),\n  ADD_DELIVERY_METHOD_TEXT: t('Add delivery method'),\n  SAVE_TEXT: t('Save'),\n  ADD_TEXT: t('Add'),\n  EDIT_REPORT_TEXT: t('Edit Report'),\n  EDIT_ALERT_TEXT: t('Edit Alert'),\n  ADD_REPORT_TEXT: t('Add Report'),\n  ADD_ALERT_TEXT: t('Add Alert'),\n  REPORT_NAME_TEXT: t('Report name'),\n  ALERT_NAME_TEXT: t('Alert name'),\n  OWNERS_TEXT: t('Owners'),\n  DESCRIPTION_TEXT: t('Description'),\n  ACTIVE_TEXT: t('Active'),\n  ALERT_CONDITION_TEXT: t('Alert condition'),\n  DATABASE_TEXT: t('Database'),\n  SQL_QUERY_TEXT: t('SQL Query'),\n  TRIGGER_ALERT_IF_TEXT: t('Trigger Alert If...'),\n  CONDITION_TEXT: t('Condition'),\n  VALUE_TEXT: t('Value'),\n  VALUE_TOOLTIP: t('Threshold value should be double precision number'),\n  REPORT_SCHEDULE_TEXT: t('Report schedule'),\n  ALERT_CONDITION_SCHEDULE_TEXT: t('Alert condition schedule'),\n  TIMEZONE_TEXT: t('Timezone'),\n  SCHEDULE_SETTINGS_TEXT: t('Schedule settings'),\n  LOG_RETENTION_TEXT: t('Log retention'),\n  WORKING_TIMEOUT_TEXT: t('Working timeout'),\n  TIME_IN_SECONDS_TEXT: t('Time in seconds'),\n  SECONDS_TEXT: t('seconds'),\n  GRACE_PERIOD_TEXT: t('Grace period'),\n  MESSAGE_CONTENT_TEXT: t('Message content'),\n  DASHBOARD_TEXT: t('Dashboard'),\n  CHART_TEXT: t('Chart'),\n  SEND_AS_PNG_TEXT: t('Send as PNG'),\n  SEND_AS_CSV_TEXT: t('Send as CSV'),\n  SEND_AS_TEXT: t('Send as text'),\n  IGNORE_CACHE_TEXT: t('Ignore cache when generating report'),\n  CUSTOM_SCREENSHOT_WIDTH_TEXT: t('Screenshot width'),\n  CUSTOM_SCREENSHOT_WIDTH_PLACEHOLDER_TEXT: t('Input custom width in pixels'),\n  NOTIFICATION_METHOD_TEXT: t('Notification method'),\n};\n\nconst NotificationMethodAdd: FunctionComponent<NotificationMethodAddProps> = ({\n  status = 'active',\n  onClick,\n}) => {\n  if (status === 'hidden') {\n    return null;\n  }\n\n  const checkStatus = () => {\n    if (status !== 'disabled') {\n      onClick();\n    }\n  };\n\n  return (\n    <StyledNotificationAddButton className={status} onClick={checkStatus}>\n      <i className=\"fa fa-plus\" />{' '}\n      {status === 'active'\n        ? TRANSLATIONS.ADD_NOTIFICATION_METHOD_TEXT\n        : TRANSLATIONS.ADD_DELIVERY_METHOD_TEXT}\n    </StyledNotificationAddButton>\n  );\n};\n\ntype NotificationSetting = {\n  method?: NotificationMethodOption;\n  recipients: string;\n  options: NotificationMethodOption[];\n};\n\nconst AlertReportModal: FunctionComponent<AlertReportModalProps> = ({\n  addDangerToast,\n  onAdd,\n  onHide,\n  show,\n  alert = null,\n  isReport = false,\n  addSuccessToast,\n}) => {\n  const currentUser = useSelector<any, UserWithPermissionsAndRoles>(\n    state => state.user,\n  );\n  const conf = useCommonConf();\n  const allowedNotificationMethods: NotificationMethodOption[] =\n    conf?.ALERT_REPORTS_NOTIFICATION_METHODS || DEFAULT_NOTIFICATION_METHODS;\n\n  const [disableSave, setDisableSave] = useState<boolean>(true);\n  const [currentAlert, setCurrentAlert] =\n    useState<Partial<AlertObject> | null>();\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const [contentType, setContentType] = useState<string>('dashboard');\n  const [reportFormat, setReportFormat] = useState<string>(\n    DEFAULT_NOTIFICATION_FORMAT,\n  );\n  const [forceScreenshot, setForceScreenshot] = useState<boolean>(false);\n\n  const [isScreenshot, setIsScreenshot] = useState<boolean>(false);\n  useEffect(() => {\n    setIsScreenshot(\n      contentType === 'dashboard' ||\n        (contentType === 'chart' && reportFormat === 'PNG'),\n    );\n  }, [contentType, reportFormat]);\n\n  // Dropdown options\n  const [conditionNotNull, setConditionNotNull] = useState<boolean>(false);\n  const [sourceOptions, setSourceOptions] = useState<MetaObject[]>([]);\n  const [dashboardOptions, setDashboardOptions] = useState<MetaObject[]>([]);\n  const [chartOptions, setChartOptions] = useState<MetaObject[]>([]);\n\n  // Chart metadata\n  const [chartVizType, setChartVizType] = useState<string>('');\n\n  const isEditMode = alert !== null;\n  const formatOptionEnabled =\n    contentType === 'chart' &&\n    (isFeatureEnabled(FeatureFlag.ALERTS_ATTACH_REPORTS) || isReport);\n\n  const [notificationAddState, setNotificationAddState] =\n    useState<NotificationAddStatus>('active');\n  const [notificationSettings, setNotificationSettings] = useState<\n    NotificationSetting[]\n  >([]);\n\n  const onNotificationAdd = () => {\n    const settings: NotificationSetting[] = notificationSettings.slice();\n\n    settings.push({\n      recipients: '',\n      options: allowedNotificationMethods,\n    });\n\n    setNotificationSettings(settings);\n    setNotificationAddState(\n      settings.length === allowedNotificationMethods.length\n        ? 'hidden'\n        : 'disabled',\n    );\n  };\n\n  const {\n    ALERT_REPORTS_DEFAULT_WORKING_TIMEOUT,\n    ALERT_REPORTS_DEFAULT_CRON_VALUE,\n    ALERT_REPORTS_DEFAULT_RETENTION,\n  } = useSelector<any, AlertsReportsConfig>(state => {\n    const conf = state.common?.conf;\n    return {\n      ALERT_REPORTS_DEFAULT_WORKING_TIMEOUT:\n        conf?.ALERT_REPORTS_DEFAULT_WORKING_TIMEOUT ?? DEFAULT_WORKING_TIMEOUT,\n      ALERT_REPORTS_DEFAULT_CRON_VALUE:\n        conf?.ALERT_REPORTS_DEFAULT_CRON_VALUE ?? DEFAULT_CRON_VALUE,\n      ALERT_REPORTS_DEFAULT_RETENTION:\n        conf?.ALERT_REPORTS_DEFAULT_RETENTION ?? DEFAULT_RETENTION,\n    };\n  });\n\n  const defaultAlert = {\n    active: true,\n    creation_method: 'alerts_reports',\n    crontab: ALERT_REPORTS_DEFAULT_CRON_VALUE,\n    log_retention: ALERT_REPORTS_DEFAULT_RETENTION,\n    working_timeout: ALERT_REPORTS_DEFAULT_WORKING_TIMEOUT,\n    name: '',\n    owners: [],\n    recipients: [],\n    sql: '',\n    validator_config_json: {},\n    validator_type: '',\n    force_screenshot: false,\n    grace_period: undefined,\n  };\n\n  const updateNotificationSetting = (\n    index: number,\n    setting: NotificationSetting,\n  ) => {\n    const settings = notificationSettings.slice();\n\n    settings[index] = setting;\n    setNotificationSettings(settings);\n\n    if (setting.method !== undefined && notificationAddState !== 'hidden') {\n      setNotificationAddState('active');\n    }\n  };\n\n  const removeNotificationSetting = (index: number) => {\n    const settings = notificationSettings.slice();\n\n    settings.splice(index, 1);\n    setNotificationSettings(settings);\n    setNotificationAddState('active');\n  };\n\n  // Alert fetch logic\n  const {\n    state: { loading, resource, error: fetchError },\n    fetchResource,\n    createResource,\n    updateResource,\n    clearError,\n  } = useSingleViewResource<AlertObject>('report', t('report'), addDangerToast);\n\n  // Functions\n  const hide = () => {\n    clearError();\n    setIsHidden(true);\n    onHide();\n    setNotificationSettings([]);\n    setCurrentAlert({ ...defaultAlert });\n    setNotificationAddState('active');\n  };\n\n  const onSave = () => {\n    // Notification Settings\n    const recipients: Recipient[] = [];\n\n    notificationSettings.forEach(setting => {\n      if (setting.method && setting.recipients.length) {\n        recipients.push({\n          recipient_config_json: {\n            target: setting.recipients,\n          },\n          type: setting.method,\n        });\n      }\n    });\n\n    const shouldEnableForceScreenshot = contentType === 'chart' && !isReport;\n    const data: any = {\n      ...currentAlert,\n      type: isReport ? 'Report' : 'Alert',\n      force_screenshot: shouldEnableForceScreenshot || forceScreenshot,\n      validator_type: conditionNotNull ? 'not null' : 'operator',\n      validator_config_json: conditionNotNull\n        ? {}\n        : currentAlert?.validator_config_json,\n      chart: contentType === 'chart' ? currentAlert?.chart?.value : null,\n      dashboard:\n        contentType === 'dashboard' ? currentAlert?.dashboard?.value : null,\n      database: currentAlert?.database?.value,\n      owners: (currentAlert?.owners || []).map(\n        owner => (owner as MetaObject).value || owner.id,\n      ),\n      recipients,\n      report_format:\n        contentType === 'dashboard'\n          ? DEFAULT_NOTIFICATION_FORMAT\n          : reportFormat || DEFAULT_NOTIFICATION_FORMAT,\n    };\n\n    if (data.recipients && !data.recipients.length) {\n      delete data.recipients;\n    }\n\n    data.context_markdown = 'string';\n\n    if (isEditMode) {\n      // Edit\n      if (currentAlert?.id) {\n        const update_id = currentAlert.id;\n\n        delete data.id;\n        delete data.created_by;\n        delete data.last_eval_dttm;\n        delete data.last_state;\n        delete data.last_value;\n        delete data.last_value_row_json;\n\n        updateResource(update_id, data).then(response => {\n          if (!response) {\n            return;\n          }\n\n          addSuccessToast(t('%s updated', data.type));\n\n          if (onAdd) {\n            onAdd();\n          }\n\n          hide();\n        });\n      }\n    } else if (currentAlert) {\n      // Create\n      createResource(data).then(response => {\n        if (!response) {\n          return;\n        }\n\n        addSuccessToast(t('%s updated', data.type));\n\n        if (onAdd) {\n          onAdd(response);\n        }\n\n        hide();\n      });\n    }\n  };\n\n  // Fetch data to populate form dropdowns\n  const loadOwnerOptions = useMemo(\n    () =>\n      (input = '', page: number, pageSize: number) => {\n        const query = rison.encode({\n          filter: input,\n          page,\n          page_size: pageSize,\n        });\n        return SupersetClient.get({\n          endpoint: `/api/v1/report/related/created_by?q=${query}`,\n        }).then(response => ({\n          data: response.json.result.map(\n            (item: { value: number; text: string }) => ({\n              value: item.value,\n              label: item.text,\n            }),\n          ),\n          totalCount: response.json.count,\n        }));\n      },\n    [],\n  );\n\n  const getSourceData = useCallback(\n    (db?: MetaObject) => {\n      const database = db || currentAlert?.database;\n\n      if (!database || database.label) {\n        return null;\n      }\n\n      let result;\n\n      // Cycle through source options to find the selected option\n      sourceOptions.forEach(source => {\n        if (source.value === database.value || source.value === database.id) {\n          result = source;\n        }\n      });\n\n      return result;\n    },\n    [currentAlert?.database, sourceOptions],\n  );\n\n  // Updating alert/report state\n  const updateAlertState = (name: string, value: any) => {\n    setCurrentAlert(currentAlertData => ({\n      ...currentAlertData,\n      [name]: value,\n    }));\n  };\n\n  const loadSourceOptions = useMemo(\n    () =>\n      (input = '', page: number, pageSize: number) => {\n        const query = rison.encode({\n          filter: input,\n          page,\n          page_size: pageSize,\n        });\n        return SupersetClient.get({\n          endpoint: `/api/v1/report/related/database?q=${query}`,\n        }).then(response => {\n          const list = response.json.result.map(\n            (item: { value: number; text: string }) => ({\n              value: item.value,\n              label: item.text,\n            }),\n          );\n          setSourceOptions(list);\n          return { data: list, totalCount: response.json.count };\n        });\n      },\n    [],\n  );\n\n  const databaseLabel = currentAlert?.database && !currentAlert.database.label;\n  useEffect(() => {\n    // Find source if current alert has one set\n    if (databaseLabel) {\n      updateAlertState('database', getSourceData());\n    }\n  }, [databaseLabel, getSourceData]);\n\n  const loadDashboardOptions = useMemo(\n    () =>\n      (input = '', page: number, pageSize: number) => {\n        const query = rison.encode_uri({\n          filter: input,\n          page,\n          page_size: pageSize,\n        });\n        return SupersetClient.get({\n          endpoint: `/api/v1/report/related/dashboard?q=${query}`,\n        }).then(response => {\n          const list = response.json.result.map(\n            (item: { value: number; text: string }) => ({\n              value: item.value,\n              label: item.text,\n            }),\n          );\n          setDashboardOptions(list);\n          return { data: list, totalCount: response.json.count };\n        });\n      },\n    [],\n  );\n\n  const getDashboardData = (db?: MetaObject) => {\n    const dashboard = db || currentAlert?.dashboard;\n\n    if (!dashboard || dashboard.label) {\n      return null;\n    }\n\n    let result;\n\n    // Cycle through dashboard options to find the selected option\n    dashboardOptions.forEach(dash => {\n      if (dash.value === dashboard.value || dash.value === dashboard.id) {\n        result = dash;\n      }\n    });\n\n    return result;\n  };\n\n  const getChartData = useCallback(\n    (chartData?: MetaObject) => {\n      const chart = chartData || currentAlert?.chart;\n\n      if (!chart || chart.label) {\n        return null;\n      }\n\n      let result;\n\n      // Cycle through chart options to find the selected option\n      chartOptions.forEach(slice => {\n        if (slice.value === chart.value || slice.value === chart.id) {\n          result = slice;\n        }\n      });\n\n      return result;\n    },\n    [chartOptions, currentAlert?.chart],\n  );\n\n  const noChartLabel = currentAlert?.chart && !currentAlert?.chart.label;\n  useEffect(() => {\n    // Find source if current alert has one set\n    if (noChartLabel) {\n      updateAlertState('chart', getChartData());\n    }\n  }, [getChartData, noChartLabel]);\n\n  const loadChartOptions = useMemo(\n    () =>\n      (input = '', page: number, pageSize: number) => {\n        const query = rison.encode_uri({\n          filter: input,\n          page,\n          page_size: pageSize,\n        });\n        return SupersetClient.get({\n          endpoint: `/api/v1/report/related/chart?q=${query}`,\n        }).then(response => {\n          const list = response.json.result.map(\n            (item: { value: number; text: string }) => ({\n              value: item.value,\n              label: item.text,\n            }),\n          );\n\n          setChartOptions(list);\n          return { data: list, totalCount: response.json.count };\n        });\n      },\n    [],\n  );\n\n  const getChartVisualizationType = (chart: SelectValue) =>\n    SupersetClient.get({\n      endpoint: `/api/v1/chart/${chart.value}`,\n    }).then(response => setChartVizType(response.json.result.viz_type));\n\n  // Handle input/textarea updates\n  const onInputChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    const {\n      target: { type, value, name },\n    } = event;\n    const parsedValue = type === 'number' ? parseInt(value, 10) || null : value;\n\n    updateAlertState(name, parsedValue);\n  };\n\n  const onTimeoutVerifyChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    const { target } = event;\n    const value = +target.value;\n\n    // Need to make sure grace period is not lower than TIMEOUT_MIN\n    if (value === 0) {\n      updateAlertState(target.name, null);\n    } else {\n      updateAlertState(\n        target.name,\n        value ? Math.max(value, TIMEOUT_MIN) : value,\n      );\n    }\n  };\n\n  const onSQLChange = (value: string) => {\n    updateAlertState('sql', value || '');\n  };\n\n  const onOwnersChange = (value: Array<SelectValue>) => {\n    updateAlertState('owners', value || []);\n  };\n\n  const onSourceChange = (value: Array<SelectValue>) => {\n    updateAlertState('database', value || []);\n  };\n\n  const onDashboardChange = (dashboard: SelectValue) => {\n    updateAlertState('dashboard', dashboard || undefined);\n    updateAlertState('chart', null);\n  };\n\n  const onChartChange = (chart: SelectValue) => {\n    getChartVisualizationType(chart);\n    updateAlertState('chart', chart || undefined);\n    updateAlertState('dashboard', null);\n  };\n\n  const onActiveSwitch = (checked: boolean) => {\n    updateAlertState('active', checked);\n  };\n\n  const onConditionChange = (op: Operator) => {\n    setConditionNotNull(op === 'not null');\n\n    const config = {\n      op,\n      threshold: currentAlert\n        ? currentAlert.validator_config_json?.threshold\n        : undefined,\n    };\n\n    updateAlertState('validator_config_json', config);\n  };\n\n  const onThresholdChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    const config = {\n      op: currentAlert ? currentAlert.validator_config_json?.op : undefined,\n      threshold: target.value,\n    };\n\n    updateAlertState('validator_config_json', config);\n  };\n\n  const onLogRetentionChange = (retention: number) => {\n    updateAlertState('log_retention', retention);\n  };\n\n  const onTimezoneChange = (timezone: string) => {\n    updateAlertState('timezone', timezone);\n  };\n\n  const onContentTypeChange = (event: any) => {\n    const { target } = event;\n    // When switch content type, reset force_screenshot to false\n    setForceScreenshot(false);\n    // Gives time to close the select before changing the type\n    setTimeout(() => setContentType(target.value), 200);\n  };\n\n  const onFormatChange = (event: any) => {\n    const { target } = event;\n\n    setReportFormat(target.value);\n  };\n\n  const onForceScreenshotChange = (event: any) => {\n    setForceScreenshot(event.target.checked);\n  };\n\n  // Make sure notification settings has the required info\n  const checkNotificationSettings = () => {\n    if (!notificationSettings.length) {\n      return false;\n    }\n\n    let hasInfo = false;\n\n    notificationSettings.forEach(setting => {\n      if (!!setting.method && setting.recipients?.length) {\n        hasInfo = true;\n      }\n    });\n\n    return hasInfo;\n  };\n\n  const validate = () => {\n    if (\n      currentAlert?.name?.length &&\n      currentAlert?.owners?.length &&\n      currentAlert?.crontab?.length &&\n      currentAlert?.working_timeout !== undefined &&\n      ((contentType === 'dashboard' && !!currentAlert?.dashboard) ||\n        (contentType === 'chart' && !!currentAlert?.chart)) &&\n      checkNotificationSettings()\n    ) {\n      if (isReport) {\n        setDisableSave(false);\n      } else if (\n        !!currentAlert.database &&\n        currentAlert.sql?.length &&\n        (conditionNotNull || !!currentAlert.validator_config_json?.op) &&\n        (conditionNotNull ||\n          currentAlert.validator_config_json?.threshold !== undefined)\n      ) {\n        setDisableSave(false);\n      } else {\n        setDisableSave(true);\n      }\n    } else {\n      setDisableSave(true);\n    }\n  };\n\n  // Initialize\n  useEffect(() => {\n    if (\n      isEditMode &&\n      (!currentAlert?.id || alert?.id !== currentAlert.id || (isHidden && show))\n    ) {\n      if (alert?.id !== null && !loading && !fetchError) {\n        const id = alert.id || 0;\n        fetchResource(id);\n      }\n    } else if (\n      !isEditMode &&\n      (!currentAlert || currentAlert.id || (isHidden && show))\n    ) {\n      setCurrentAlert({\n        ...defaultAlert,\n        owners: currentUser\n          ? [\n              {\n                value: currentUser.userId,\n                label: `${currentUser.firstName} ${currentUser.lastName}`,\n              },\n            ]\n          : [],\n      });\n      setNotificationSettings([]);\n      setNotificationAddState('active');\n    }\n  }, [alert]);\n\n  useEffect(() => {\n    if (resource) {\n      // Add notification settings\n      const settings = (resource.recipients || []).map(setting => {\n        const config =\n          typeof setting.recipient_config_json === 'string'\n            ? JSON.parse(setting.recipient_config_json)\n            : {};\n        return {\n          method: setting.type,\n          // @ts-ignore: Type not assignable\n          recipients: config.target || setting.recipient_config_json,\n          options: allowedNotificationMethods,\n        };\n      });\n\n      setNotificationSettings(settings);\n      setNotificationAddState(\n        settings.length === allowedNotificationMethods.length\n          ? 'hidden'\n          : 'active',\n      );\n      setContentType(resource.chart ? 'chart' : 'dashboard');\n      setReportFormat(\n        resource.chart\n          ? resource.report_format || DEFAULT_NOTIFICATION_FORMAT\n          : DEFAULT_NOTIFICATION_FORMAT,\n      );\n      const validatorConfig =\n        typeof resource.validator_config_json === 'string'\n          ? JSON.parse(resource.validator_config_json)\n          : resource.validator_config_json;\n\n      setConditionNotNull(resource.validator_type === 'not null');\n\n      if (resource.chart) {\n        setChartVizType((resource.chart as ChartObject).viz_type);\n      }\n      setForceScreenshot(resource.force_screenshot);\n\n      setCurrentAlert({\n        ...resource,\n        chart: resource.chart\n          ? getChartData(resource.chart) || {\n              value: (resource.chart as ChartObject).id,\n              label: (resource.chart as ChartObject).slice_name,\n            }\n          : undefined,\n        dashboard: resource.dashboard\n          ? getDashboardData(resource.dashboard) || {\n              value: (resource.dashboard as DashboardObject).id,\n              label: (resource.dashboard as DashboardObject).dashboard_title,\n            }\n          : undefined,\n        database: resource.database\n          ? getSourceData(resource.database) || {\n              value: (resource.database as DatabaseObject).id,\n              label: (resource.database as DatabaseObject).database_name,\n            }\n          : undefined,\n        owners: (alert?.owners || []).map(owner => ({\n          value: (owner as MetaObject).value || owner.id,\n          label:\n            (owner as MetaObject).label ||\n            `${(owner as Owner).first_name} ${(owner as Owner).last_name}`,\n        })),\n        // @ts-ignore: Type not assignable\n        validator_config_json:\n          resource.validator_type === 'not null'\n            ? {\n                op: 'not null',\n              }\n            : validatorConfig,\n      });\n    }\n  }, [resource]);\n\n  // Validation\n  const currentAlertSafe = currentAlert || {};\n  useEffect(() => {\n    validate();\n  }, [\n    currentAlertSafe.name,\n    currentAlertSafe.owners,\n    currentAlertSafe.database,\n    currentAlertSafe.sql,\n    currentAlertSafe.validator_config_json,\n    currentAlertSafe.crontab,\n    currentAlertSafe.working_timeout,\n    currentAlertSafe.dashboard,\n    currentAlertSafe.chart,\n    contentType,\n    notificationSettings,\n    conditionNotNull,\n  ]);\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <StyledModal\n      className=\"no-content-padding\"\n      responsive\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={hide}\n      primaryButtonName={\n        isEditMode ? TRANSLATIONS.SAVE_TEXT : TRANSLATIONS.ADD_TEXT\n      }\n      show={show}\n      width=\"100%\"\n      maxWidth=\"1450px\"\n      title={\n        <h4 data-test=\"alert-report-modal-title\">\n          {isEditMode ? (\n            <Icons.EditAlt css={StyledIcon} />\n          ) : (\n            <Icons.PlusLarge css={StyledIcon} />\n          )}\n          {isEditMode && isReport\n            ? TRANSLATIONS.EDIT_REPORT_TEXT\n            : isEditMode\n            ? TRANSLATIONS.EDIT_ALERT_TEXT\n            : isReport\n            ? TRANSLATIONS.ADD_REPORT_TEXT\n            : TRANSLATIONS.ADD_ALERT_TEXT}\n        </h4>\n      }\n    >\n      <StyledSectionContainer>\n        <div className=\"header-section\">\n          <StyledInputContainer>\n            <div className=\"control-label\">\n              {isReport\n                ? TRANSLATIONS.REPORT_NAME_TEXT\n                : TRANSLATIONS.ALERT_NAME_TEXT}\n              <span className=\"required\">*</span>\n            </div>\n            <div className=\"input-container\">\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={currentAlert ? currentAlert.name : ''}\n                placeholder={\n                  isReport\n                    ? TRANSLATIONS.REPORT_NAME_TEXT\n                    : TRANSLATIONS.ALERT_NAME_TEXT\n                }\n                onChange={onInputChange}\n                css={inputSpacer}\n              />\n            </div>\n          </StyledInputContainer>\n          <StyledInputContainer>\n            <div className=\"control-label\">\n              {TRANSLATIONS.OWNERS_TEXT}\n              <span className=\"required\">*</span>\n            </div>\n            <div data-test=\"owners-select\" className=\"input-container\">\n              <AsyncSelect\n                ariaLabel={TRANSLATIONS.OWNERS_TEXT}\n                allowClear\n                name=\"owners\"\n                mode=\"multiple\"\n                value={\n                  (currentAlert?.owners as {\n                    label: string;\n                    value: number;\n                  }[]) || []\n                }\n                options={loadOwnerOptions}\n                onChange={onOwnersChange}\n                css={inputSpacer}\n              />\n            </div>\n          </StyledInputContainer>\n          <StyledInputContainer>\n            <div className=\"control-label\">{TRANSLATIONS.DESCRIPTION_TEXT}</div>\n            <div className=\"input-container\">\n              <input\n                type=\"text\"\n                name=\"description\"\n                value={currentAlert ? currentAlert.description || '' : ''}\n                placeholder={TRANSLATIONS.DESCRIPTION_TEXT}\n                onChange={onInputChange}\n                css={inputSpacer}\n              />\n            </div>\n          </StyledInputContainer>\n          <StyledSwitchContainer>\n            <Switch\n              onChange={onActiveSwitch}\n              checked={currentAlert ? currentAlert.active : true}\n            />\n            <div className=\"switch-label\">{TRANSLATIONS.ACTIVE_TEXT}</div>\n          </StyledSwitchContainer>\n        </div>\n        <div className=\"column-section\">\n          {!isReport && (\n            <div className=\"column condition\">\n              <StyledSectionTitle>\n                <h4>{TRANSLATIONS.ALERT_CONDITION_TEXT}</h4>\n              </StyledSectionTitle>\n              <StyledInputContainer>\n                <div className=\"control-label\">\n                  {TRANSLATIONS.DATABASE_TEXT}\n                  <span className=\"required\">*</span>\n                </div>\n                <div className=\"input-container\">\n                  <AsyncSelect\n                    ariaLabel={TRANSLATIONS.DATABASE_TEXT}\n                    name=\"source\"\n                    value={\n                      currentAlert?.database?.label &&\n                      currentAlert?.database?.value\n                        ? {\n                            value: currentAlert.database.value,\n                            label: currentAlert.database.label,\n                          }\n                        : undefined\n                    }\n                    options={loadSourceOptions}\n                    onChange={onSourceChange}\n                  />\n                </div>\n              </StyledInputContainer>\n              <StyledInputContainer>\n                <div className=\"control-label\">\n                  {TRANSLATIONS.SQL_QUERY_TEXT}\n                  <span className=\"required\">*</span>\n                </div>\n                <TextAreaControl\n                  name=\"sql\"\n                  language=\"sql\"\n                  offerEditInModal={false}\n                  minLines={15}\n                  maxLines={15}\n                  onChange={onSQLChange}\n                  readOnly={false}\n                  initialValue={resource?.sql}\n                  key={currentAlert?.id}\n                />\n              </StyledInputContainer>\n              <div className=\"inline-container wrap\">\n                <StyledInputContainer>\n                  <div className=\"control-label\" css={inputSpacer}>\n                    {TRANSLATIONS.TRIGGER_ALERT_IF_TEXT}\n                    <span className=\"required\">*</span>\n                  </div>\n                  <div className=\"input-container\">\n                    <Select\n                      ariaLabel={TRANSLATIONS.CONDITION_TEXT}\n                      onChange={onConditionChange}\n                      placeholder=\"Condition\"\n                      value={\n                        currentAlert?.validator_config_json?.op || undefined\n                      }\n                      options={CONDITIONS}\n                      css={inputSpacer}\n                    />\n                  </div>\n                </StyledInputContainer>\n                <StyledInputContainer>\n                  <div className=\"control-label\">\n                    {TRANSLATIONS.VALUE_TEXT}{' '}\n                    <InfoTooltipWithTrigger\n                      tooltip={TRANSLATIONS.VALUE_TOOLTIP}\n                    />\n                    <span className=\"required\">*</span>\n                  </div>\n                  <div className=\"input-container\">\n                    <input\n                      type=\"number\"\n                      name=\"threshold\"\n                      disabled={conditionNotNull}\n                      value={\n                        currentAlert?.validator_config_json?.threshold !==\n                        undefined\n                          ? currentAlert.validator_config_json.threshold\n                          : ''\n                      }\n                      placeholder={TRANSLATIONS.VALUE_TEXT}\n                      onChange={onThresholdChange}\n                    />\n                  </div>\n                </StyledInputContainer>\n              </div>\n            </div>\n          )}\n          <div className=\"column schedule\">\n            <StyledSectionTitle>\n              <h4>\n                {isReport\n                  ? TRANSLATIONS.REPORT_SCHEDULE_TEXT\n                  : TRANSLATIONS.ALERT_CONDITION_SCHEDULE_TEXT}\n              </h4>\n              <span className=\"required\">*</span>\n            </StyledSectionTitle>\n            <AlertReportCronScheduler\n              value={currentAlert?.crontab || ALERT_REPORTS_DEFAULT_CRON_VALUE}\n              onChange={newVal => updateAlertState('crontab', newVal)}\n            />\n            <div className=\"control-label\">{TRANSLATIONS.TIMEZONE_TEXT}</div>\n            <div\n              className=\"input-container\"\n              css={(theme: SupersetTheme) => timezoneHeaderStyle(theme)}\n            >\n              <TimezoneSelector\n                onTimezoneChange={onTimezoneChange}\n                timezone={currentAlert?.timezone}\n                minWidth=\"100%\"\n              />\n            </div>\n            <StyledSectionTitle>\n              <h4>{TRANSLATIONS.SCHEDULE_SETTINGS_TEXT}</h4>\n            </StyledSectionTitle>\n            <StyledInputContainer>\n              <div className=\"control-label\">\n                {TRANSLATIONS.LOG_RETENTION_TEXT}\n                <span className=\"required\">*</span>\n              </div>\n              <div className=\"input-container\">\n                <Select\n                  ariaLabel={TRANSLATIONS.LOG_RETENTION_TEXT}\n                  placeholder={TRANSLATIONS.LOG_RETENTION_TEXT}\n                  onChange={onLogRetentionChange}\n                  value={\n                    typeof currentAlert?.log_retention === 'number'\n                      ? currentAlert?.log_retention\n                      : ALERT_REPORTS_DEFAULT_RETENTION\n                  }\n                  options={RETENTION_OPTIONS}\n                  sortComparator={propertyComparator('value')}\n                />\n              </div>\n            </StyledInputContainer>\n            <StyledInputContainer>\n              <div className=\"control-label\">\n                {TRANSLATIONS.WORKING_TIMEOUT_TEXT}\n                <span className=\"required\">*</span>\n              </div>\n              <div className=\"input-container\">\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  name=\"working_timeout\"\n                  value={currentAlert?.working_timeout || ''}\n                  placeholder={TRANSLATIONS.TIME_IN_SECONDS_TEXT}\n                  onChange={onTimeoutVerifyChange}\n                />\n                <span className=\"input-label\">{TRANSLATIONS.SECONDS_TEXT}</span>\n              </div>\n            </StyledInputContainer>\n            {!isReport && (\n              <StyledInputContainer>\n                <div className=\"control-label\">\n                  {TRANSLATIONS.GRACE_PERIOD_TEXT}\n                </div>\n                <div className=\"input-container\">\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    name=\"grace_period\"\n                    value={currentAlert?.grace_period || ''}\n                    placeholder={TRANSLATIONS.TIME_IN_SECONDS_TEXT}\n                    onChange={onTimeoutVerifyChange}\n                  />\n                  <span className=\"input-label\">\n                    {TRANSLATIONS.SECONDS_TEXT}\n                  </span>\n                </div>\n              </StyledInputContainer>\n            )}\n          </div>\n          <div className=\"column message\">\n            <StyledSectionTitle>\n              <h4>{TRANSLATIONS.MESSAGE_CONTENT_TEXT}</h4>\n              <span className=\"required\">*</span>\n            </StyledSectionTitle>\n            <Radio.Group onChange={onContentTypeChange} value={contentType}>\n              <StyledRadio value=\"dashboard\">\n                {TRANSLATIONS.DASHBOARD_TEXT}\n              </StyledRadio>\n              <StyledRadio value=\"chart\">{TRANSLATIONS.CHART_TEXT}</StyledRadio>\n            </Radio.Group>\n            {contentType === 'chart' ? (\n              <AsyncSelect\n                ariaLabel={TRANSLATIONS.CHART_TEXT}\n                name=\"chart\"\n                value={\n                  currentAlert?.chart?.label && currentAlert?.chart?.value\n                    ? {\n                        value: currentAlert.chart.value,\n                        label: currentAlert.chart.label,\n                      }\n                    : undefined\n                }\n                options={loadChartOptions}\n                onChange={onChartChange}\n              />\n            ) : (\n              <AsyncSelect\n                ariaLabel={TRANSLATIONS.DASHBOARD_TEXT}\n                name=\"dashboard\"\n                value={\n                  currentAlert?.dashboard?.label &&\n                  currentAlert?.dashboard?.value\n                    ? {\n                        value: currentAlert.dashboard.value,\n                        label: currentAlert.dashboard.label,\n                      }\n                    : undefined\n                }\n                options={loadDashboardOptions}\n                onChange={onDashboardChange}\n              />\n            )}\n            {formatOptionEnabled && (\n              <>\n                <div className=\"inline-container\">\n                  <StyledRadioGroup\n                    onChange={onFormatChange}\n                    value={reportFormat}\n                  >\n                    <StyledRadio value=\"PNG\">\n                      {TRANSLATIONS.SEND_AS_PNG_TEXT}\n                    </StyledRadio>\n                    <StyledRadio value=\"CSV\">\n                      {TRANSLATIONS.SEND_AS_CSV_TEXT}\n                    </StyledRadio>\n                    {TEXT_BASED_VISUALIZATION_TYPES.includes(chartVizType) && (\n                      <StyledRadio value=\"TEXT\">\n                        {TRANSLATIONS.SEND_AS_TEXT}\n                      </StyledRadio>\n                    )}\n                  </StyledRadioGroup>\n                </div>\n              </>\n            )}\n            {isScreenshot && (\n              <StyledInputContainer>\n                <div className=\"control-label\" css={CustomWidthHeaderStyle}>\n                  {TRANSLATIONS.CUSTOM_SCREENSHOT_WIDTH_TEXT}\n                </div>\n                <div className=\"input-container\">\n                  <Input\n                    type=\"number\"\n                    name=\"custom_width\"\n                    value={currentAlert?.custom_width || ''}\n                    placeholder={\n                      TRANSLATIONS.CUSTOM_SCREENSHOT_WIDTH_PLACEHOLDER_TEXT\n                    }\n                    onChange={onInputChange}\n                  />\n                </div>\n              </StyledInputContainer>\n            )}\n            {(isReport || contentType === 'dashboard') && (\n              <div className=\"inline-container\">\n                <StyledCheckbox\n                  data-test=\"bypass-cache\"\n                  className=\"checkbox\"\n                  checked={forceScreenshot}\n                  onChange={onForceScreenshotChange}\n                >\n                  {TRANSLATIONS.IGNORE_CACHE_TEXT}\n                </StyledCheckbox>\n              </div>\n            )}\n            <StyledSectionTitle>\n              <h4>{TRANSLATIONS.NOTIFICATION_METHOD_TEXT}</h4>\n              <span className=\"required\">*</span>\n            </StyledSectionTitle>\n            {notificationSettings.map((notificationSetting, i) => (\n              <StyledNotificationMethodWrapper>\n                <NotificationMethod\n                  setting={notificationSetting}\n                  index={i}\n                  key={`NotificationMethod-${i}`}\n                  onUpdate={updateNotificationSetting}\n                  onRemove={removeNotificationSetting}\n                />\n              </StyledNotificationMethodWrapper>\n            ))}\n            <NotificationMethodAdd\n              data-test=\"notification-add\"\n              status={notificationAddState}\n              onClick={onNotificationAdd}\n            />\n          </div>\n        </div>\n      </StyledSectionContainer>\n    </StyledModal>\n  );\n};\n\nexport default withToasts(AlertReportModal);\n"],"names":["LOCALE","everyText","t","emptyMonths","emptyMonthDays","emptyMonthDaysShort","emptyWeekDays","emptyWeekDaysShort","emptyHours","emptyMinutes","emptyMinutesForHourPeriod","yearOption","monthOption","weekOption","dayOption","hourOption","minuteOption","rebootOption","prefixPeriod","prefixMonths","prefixMonthDays","prefixWeekDays","prefixWeekDaysForMonthAndYearPeriod","prefixHours","prefixMinutes","prefixMinutesForHourPeriod","suffixMinutesForHourPeriod","errorInvalidCron","clearButtonText","weekDays","months","altWeekDays","altMonths","CronPicker","styled","props","getPopupContainer","trigger","parentElement","locale","theme","gridUnit","colors","grayscale","light4","StyledModal","Modal","StyledTopSection","typography","sizes","s","light1","StyledBottomSection","light2","StyledIconWrapper","StyledScheduleTitle","StyledCronPicker","StyledCronError","error","base","noBottomMargin","css","StyledFooterButton","Button","TimezoneHeaderStyle","CustomWidthHeaderStyle","SectionHeaderStyle","StyledMessageContentTitle","StyledRadio","Radio","StyledRadioGroup","antDErrorAlertStyles","dark2","m","l","StyledSwitch","BaseSwitch","primary","Switch","DEFAULT_TIMEZONE","MIN_SELECT_WIDTH","offsetsToName","currentDate","moment","JANUARY","JULY","getOffsetKey","name","tz","utcOffset","toString","getTimezoneName","offsets","isDST","ALL_ZONES","map","country","flat","TIMEZONES","forEach","zone","find","option","push","TIMEZONE_OPTIONS","label","format","value","timezoneName","TIMEZONE_OPTIONS_SORT_COMPARATOR","a","b","TimezoneSelector","onTimezoneChange","timezone","minWidth","validTimezone","useMemo","matchTimezoneToOptions","useEffect","ariaLabel","onChange","options","sortComparator","sort","AlertReportCronScheduler","useTheme","inputRef","useRef","scheduleFormat","setScheduleFormat","useState","handleRadioButtonChange","useCallback","e","target","customSetValue","newValue","current","setValue","handleBlur","event","handlePressEnter","input","onError","className","clearButton","disabled","displayError","StyledInputContainer","Input","type","ref","style","borderColor","placeholder","onBlur","onPressEnter","StyledNotificationMethod","NotificationMethod","setting","index","onUpdate","onRemove","method","recipients","recipientValue","setRecipientValue","updatedSetting","undefined","role","tabIndex","onClick","Icons","iconColor","TEXT_BASED_VISUALIZATION_TYPES","DEFAULT_NOTIFICATION_METHODS","DEFAULT_NOTIFICATION_FORMAT","CONDITIONS","RETENTION_OPTIONS","StyledIcon","StyledSectionContainer","StyledSectionTitle","StyledSwitchContainer","StyledCheckbox","AntdCheckbox","StyledNotificationAddButton","dark1","StyledNotificationMethodWrapper","inputSpacer","TRANSLATIONS","ADD_NOTIFICATION_METHOD_TEXT","ADD_DELIVERY_METHOD_TEXT","SAVE_TEXT","ADD_TEXT","EDIT_REPORT_TEXT","EDIT_ALERT_TEXT","ADD_REPORT_TEXT","ADD_ALERT_TEXT","REPORT_NAME_TEXT","ALERT_NAME_TEXT","OWNERS_TEXT","DESCRIPTION_TEXT","ACTIVE_TEXT","ALERT_CONDITION_TEXT","DATABASE_TEXT","SQL_QUERY_TEXT","TRIGGER_ALERT_IF_TEXT","CONDITION_TEXT","VALUE_TEXT","VALUE_TOOLTIP","REPORT_SCHEDULE_TEXT","ALERT_CONDITION_SCHEDULE_TEXT","TIMEZONE_TEXT","SCHEDULE_SETTINGS_TEXT","LOG_RETENTION_TEXT","WORKING_TIMEOUT_TEXT","TIME_IN_SECONDS_TEXT","SECONDS_TEXT","GRACE_PERIOD_TEXT","MESSAGE_CONTENT_TEXT","DASHBOARD_TEXT","CHART_TEXT","SEND_AS_PNG_TEXT","SEND_AS_CSV_TEXT","SEND_AS_TEXT","IGNORE_CACHE_TEXT","CUSTOM_SCREENSHOT_WIDTH_TEXT","CUSTOM_SCREENSHOT_WIDTH_PLACEHOLDER_TEXT","NOTIFICATION_METHOD_TEXT","NotificationMethodAdd","status","withToasts","addDangerToast","onAdd","onHide","show","alert","isReport","addSuccessToast","currentUser","useSelector","state","user","conf","useCommonConf","allowedNotificationMethods","ALERT_REPORTS_NOTIFICATION_METHODS","disableSave","setDisableSave","currentAlert","setCurrentAlert","isHidden","setIsHidden","contentType","setContentType","reportFormat","setReportFormat","forceScreenshot","setForceScreenshot","isScreenshot","setIsScreenshot","conditionNotNull","setConditionNotNull","sourceOptions","setSourceOptions","dashboardOptions","setDashboardOptions","chartOptions","setChartOptions","chartVizType","setChartVizType","isEditMode","formatOptionEnabled","isFeatureEnabled","FeatureFlag","notificationAddState","setNotificationAddState","notificationSettings","setNotificationSettings","ALERT_REPORTS_DEFAULT_WORKING_TIMEOUT","ALERT_REPORTS_DEFAULT_CRON_VALUE","ALERT_REPORTS_DEFAULT_RETENTION","common","defaultAlert","active","creation_method","crontab","log_retention","working_timeout","owners","sql","validator_config_json","validator_type","force_screenshot","grace_period","updateNotificationSetting","settings","slice","removeNotificationSetting","splice","loading","resource","fetchError","fetchResource","createResource","updateResource","clearError","useSingleViewResource","hide","loadOwnerOptions","page","pageSize","query","rison","filter","page_size","SupersetClient","endpoint","then","response","data","json","result","item","text","totalCount","count","getSourceData","db","database","source","id","updateAlertState","currentAlertData","loadSourceOptions","list","databaseLabel","loadDashboardOptions","getDashboardData","dashboard","dash","getChartData","chartData","chart","noChartLabel","loadChartOptions","onInputChange","parsedValue","parseInt","onTimeoutVerifyChange","Math","max","userId","firstName","lastName","config","recipient_config_json","JSON","parse","length","report_format","validatorConfig","viz_type","slice_name","dashboard_title","database_name","owner","first_name","last_name","op","currentAlertSafe","hasInfo","checkNotificationSettings","threshold","responsive","disablePrimaryButton","onHandledPrimaryAction","shouldEnableForceScreenshot","context_markdown","update_id","created_by","last_eval_dttm","last_state","last_value","last_value_row_json","primaryButtonName","width","maxWidth","title","allowClear","mode","description","checked","TextAreaControl","language","offerEditInModal","minLines","maxLines","readOnly","initialValue","key","InfoTooltipWithTrigger","tooltip","newVal","timezoneHeaderStyle","retention","propertyComparator","min","setTimeout","getChartVisualizationType","custom_width","notificationSetting","i"],"sourceRoot":""}