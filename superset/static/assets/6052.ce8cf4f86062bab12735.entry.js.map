{"version":3,"file":"6052.ce8cf4f86062bab12735.entry.js","mappings":"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","sources":["webpack://superset/./src/components/IndeterminateCheckbox/index.tsx","webpack://superset/./node_modules/react-lines-ellipsis/lib/index.modern.js","webpack://superset/./src/components/IconButton/index.tsx","webpack://superset/./src/views/CRUD/data/database/types.ts","webpack://superset/./src/views/CRUD/data/database/DatabaseModal/styles.ts","webpack://superset/./src/views/CRUD/data/database/DatabaseModal/ExtraOptions.tsx","webpack://superset/./src/views/CRUD/data/database/DatabaseModal/SqlAlchemyForm.tsx","webpack://superset/./src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm/CommonParameters.tsx","webpack://superset/./src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm/ValidatedInputField.tsx","webpack://superset/./src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm/EncryptedField.tsx","webpack://superset/./src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm/TableCatalog.tsx","webpack://superset/./src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm/index.tsx","webpack://superset/./src/views/CRUD/data/database/DatabaseModal/ModalHeader.tsx","webpack://superset/./src/views/CRUD/data/database/DatabaseModal/index.tsx","webpack://superset/./src/views/CRUD/data/database/state.ts","webpack://superset/./src/views/components/LanguagePicker.tsx","webpack://superset/./src/views/components/types.ts","webpack://superset/./src/views/components/MenuRight.tsx","webpack://superset/./src/views/components/Menu.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { forwardRef, useRef, useEffect } from 'react';\nimport { styled } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\n\nexport interface IndeterminateCheckboxProps {\n  indeterminate: boolean;\n  id: string;\n  checked: boolean;\n  onChange: React.EventHandler<React.SyntheticEvent<HTMLInputElement>>;\n  title?: string;\n  labelText?: string;\n}\n\nconst CheckboxLabel = styled.label`\n  cursor: pointer;\n  display: inline-block;\n  margin-bottom: 0;\n`;\n\nconst CheckboxHalf = styled(Icons.CheckboxHalf)`\n  color: ${({ theme }) => theme.colors.primary.base};\n  cursor: pointer;\n`;\n\nconst CheckboxOff = styled(Icons.CheckboxOff)`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  cursor: pointer;\n`;\n\nconst CheckboxOn = styled(Icons.CheckboxOn)`\n  color: ${({ theme }) => theme.colors.primary.base};\n  cursor: pointer;\n`;\n\nconst HiddenInput = styled.input`\n  &[type='checkbox'] {\n    cursor: pointer;\n    opacity: 0;\n    position: absolute;\n    left: 3px;\n    margin: 0;\n    top: 4px;\n  }\n`;\n\nconst InputContainer = styled.div`\n  cursor: pointer;\n  display: inline-block;\n  position: relative;\n`;\n\nconst IndeterminateCheckbox = forwardRef(\n  (\n    {\n      indeterminate,\n      id,\n      checked,\n      onChange,\n      title = '',\n      labelText = '',\n    }: IndeterminateCheckboxProps,\n    ref: React.MutableRefObject<any>,\n  ) => {\n    const defaultRef = useRef<HTMLInputElement>();\n    const resolvedRef = ref || defaultRef;\n\n    useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <>\n        <InputContainer>\n          {indeterminate && <CheckboxHalf />}\n          {!indeterminate && checked && <CheckboxOn />}\n          {!indeterminate && !checked && <CheckboxOff />}\n          <HiddenInput\n            name={id}\n            id={id}\n            type=\"checkbox\"\n            ref={resolvedRef}\n            checked={checked}\n            onChange={onChange}\n          />\n        </InputContainer>\n        <CheckboxLabel title={title} htmlFor={id}>\n          {labelText}\n        </CheckboxLabel>\n      </>\n    );\n  },\n);\n\nexport default IndeterminateCheckbox;\n","import React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst canvasStyle = {\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  height: 0,\n  overflow: 'hidden',\n  'padding-top': 0,\n  'padding-bottom': 0,\n  border: 'none'\n};\nconst mirrorProps = ['box-sizing', 'width', 'font-size', 'font-weight', 'font-family', 'font-style', 'letter-spacing', 'text-indent', 'white-space', 'word-break', 'overflow-wrap', 'padding-left', 'padding-right'];\n\nfunction omit(obj, omittedKeys) {\n  if (!obj || typeof obj !== 'object') {\n    return obj;\n  }\n\n  const ret = {};\n  Object.keys(obj).forEach(key => {\n    if (omittedKeys.indexOf(key) > -1) {\n      return;\n    }\n\n    ret[key] = obj[key];\n  });\n  return ret;\n}\n\nfunction prevSibling(node, count) {\n  while (node && count--) {\n    node = node.previousElementSibling;\n  }\n\n  return node;\n}\n\nconst defaultProps = {\n  basedOn: undefined,\n  className: '',\n  component: 'div',\n  ellipsis: '…',\n  // &hellip;\n  maxLine: 1,\n\n  onReflow() {},\n\n  text: '',\n  trimRight: true,\n  winWidth: undefined // for the HOC\n\n};\nconst usedProps = Object.keys(defaultProps);\n/**\n * props.text {String} the text you want to clamp\n * props.maxLine {Number|String} max lines allowed\n * props.ellipsis {String} the ellipsis indicator\n * props.trimRight {Boolean} should we trimRight the clamped text?\n * props.basedOn {String} letters|words\n * props.className {String}\n */\n\nclass LinesEllipsis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: props.text,\n      clamped: false\n    };\n    this.units = [];\n    this.maxLine = 0;\n    this.canvas = null;\n  }\n\n  componentDidMount() {\n    this.initCanvas();\n    this.reflow(this.props);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.winWidth !== this.props.winWidth) {\n      this.copyStyleToCanvas();\n    }\n\n    if (this.props !== prevProps) {\n      this.reflow(this.props);\n    }\n  }\n\n  componentWillUnmount() {\n    this.canvas.parentNode.removeChild(this.canvas);\n  }\n\n  setState(state, callback) {\n    if (typeof state.clamped !== 'undefined') {\n      this.clamped = state.clamped;\n    }\n\n    return super.setState(state, callback);\n  }\n\n  initCanvas() {\n    if (this.canvas) return;\n    const canvas = this.canvas = document.createElement('div');\n    canvas.className = `LinesEllipsis-canvas ${this.props.className}`;\n    canvas.setAttribute('aria-hidden', 'true');\n    this.copyStyleToCanvas();\n    Object.keys(canvasStyle).forEach(key => {\n      canvas.style[key] = canvasStyle[key];\n    });\n    document.body.appendChild(canvas);\n  }\n\n  copyStyleToCanvas() {\n    const targetStyle = window.getComputedStyle(this.target);\n    mirrorProps.forEach(key => {\n      this.canvas.style[key] = targetStyle[key];\n    });\n  }\n\n  reflow(props) {\n    /* eslint-disable no-control-regex */\n    const basedOn = props.basedOn || (/^[\\x00-\\x7F]+$/.test(props.text) ? 'words' : 'letters');\n\n    switch (basedOn) {\n      case 'words':\n        this.units = props.text.split(/\\b|(?=\\W)/);\n        break;\n\n      case 'letters':\n        this.units = Array.from(props.text);\n        break;\n\n      default:\n        throw new Error(`Unsupported options basedOn: ${basedOn}`);\n    }\n\n    this.maxLine = +props.maxLine || 1;\n    this.canvas.innerHTML = this.units.map(c => {\n      return `<span class='LinesEllipsis-unit'>${c}</span>`;\n    }).join('');\n    const ellipsisIndex = this.putEllipsis(this.calcIndexes());\n    const clamped = ellipsisIndex > -1;\n    const newState = {\n      clamped,\n      text: clamped ? this.units.slice(0, ellipsisIndex).join('') : props.text\n    };\n    this.setState(newState, props.onReflow.bind(this, newState));\n  }\n\n  calcIndexes() {\n    const indexes = [0];\n    let elt = this.canvas.firstElementChild;\n    if (!elt) return indexes;\n    let index = 0;\n    let line = 1;\n    let offsetTop = elt.offsetTop;\n\n    while (elt = elt.nextElementSibling) {\n      if (elt.offsetTop > offsetTop) {\n        line++;\n        indexes.push(index);\n        offsetTop = elt.offsetTop;\n      }\n\n      index++;\n\n      if (line > this.maxLine) {\n        break;\n      }\n    }\n\n    return indexes;\n  }\n\n  putEllipsis(indexes) {\n    if (indexes.length <= this.maxLine) return -1;\n    const lastIndex = indexes[this.maxLine];\n    const units = this.units.slice(0, lastIndex);\n    const maxOffsetTop = this.canvas.children[lastIndex].offsetTop;\n    this.canvas.innerHTML = units.map((c, i) => {\n      return `<span class='LinesEllipsis-unit'>${c}</span>`;\n    }).join('') + `<wbr><span class='LinesEllipsis-ellipsis'>${this.props.ellipsis}</span>`;\n    const ndEllipsis = this.canvas.lastElementChild;\n    let ndPrevUnit = prevSibling(ndEllipsis, 2);\n\n    while (ndPrevUnit && (ndEllipsis.offsetTop > maxOffsetTop || // IE & Edge: doesn't support <wbr>\n    ndEllipsis.offsetHeight > ndPrevUnit.offsetHeight || ndEllipsis.offsetTop > ndPrevUnit.offsetTop)) {\n      this.canvas.removeChild(ndPrevUnit);\n      ndPrevUnit = prevSibling(ndEllipsis, 2);\n      units.pop();\n    }\n\n    return units.length;\n  } // expose\n\n\n  isClamped() {\n    return this.clamped; // do not use state.clamped. #27\n  }\n\n  render() {\n    const {\n      text,\n      clamped\n    } = this.state;\n\n    const _this$props = this.props,\n          {\n      component: Component,\n      ellipsis,\n      trimRight,\n      className\n    } = _this$props,\n          rest = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"ellipsis\", \"trimRight\", \"className\"]);\n\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      className: `LinesEllipsis ${clamped ? 'LinesEllipsis--clamped' : ''} ${className}`,\n      ref: node => this.target = node\n    }, omit(rest, usedProps)), clamped && trimRight ? text.replace(/[\\s\\uFEFF\\xA0]+$/, '') : text, /*#__PURE__*/React.createElement(\"wbr\", null), clamped && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"LinesEllipsis-ellipsis\"\n    }, ellipsis));\n  }\n\n}\n\nLinesEllipsis.defaultProps = defaultProps;\n\nexport default LinesEllipsis;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport { ButtonProps as AntdButtonProps } from 'antd/lib/button';\nimport Icons from 'src/components/Icons';\nimport LinesEllipsis from 'react-lines-ellipsis';\n\nexport interface IconButtonProps extends AntdButtonProps {\n  buttonText: string;\n  icon: string;\n  altText?: string;\n}\n\nconst StyledButton = styled(Button)`\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n`;\n\nconst StyledImage = styled.div`\n  padding: ${({ theme }) => theme.gridUnit * 4}px;\n  height: ${({ theme }) => theme.gridUnit * 18}px;\n  margin: ${({ theme }) => theme.gridUnit * 3}px 0;\n\n  .default-db-icon {\n    font-size: 36px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n    margin-right: 0;\n    span:first-of-type {\n      margin-right: 0;\n    }\n  }\n\n  &:first-of-type {\n    margin-right: 0;\n  }\n\n  img {\n    width: ${({ theme }) => theme.gridUnit * 10}px;\n    height: ${({ theme }) => theme.gridUnit * 10}px;\n    margin: 0;\n    &:first-of-type {\n      margin-right: 0;\n    }\n  }\n  svg {\n    &:first-of-type {\n      margin-right: 0;\n    }\n  }\n`;\n\nconst StyledInner = styled.div`\n  max-height: calc(1.5em * 2);\n  white-space: break-spaces;\n\n  &:first-of-type {\n    margin-right: 0;\n  }\n\n  .LinesEllipsis {\n    &:first-of-type {\n      margin-right: 0;\n    }\n  }\n`;\n\nconst StyledBottom = styled.div`\n  padding: ${({ theme }) => theme.gridUnit * 4}px 0;\n  border-radius: 0 0 ${({ theme }) => theme.borderRadius}px\n    ${({ theme }) => theme.borderRadius}px;\n  background-color: ${({ theme }) => theme.colors.grayscale.light4};\n  width: 100%;\n  line-height: 1.5em;\n  overflow: hidden;\n  white-space: no-wrap;\n  text-overflow: ellipsis;\n\n  &:first-of-type {\n    margin-right: 0;\n  }\n`;\n\nconst IconButton = styled(\n  ({ icon, altText, buttonText, ...props }: IconButtonProps) => (\n    <StyledButton {...props}>\n      <StyledImage>\n        {icon && <img src={icon} alt={altText} />}\n        {!icon && (\n          <Icons.DatabaseOutlined\n            className=\"default-db-icon\"\n            aria-label=\"default-icon\"\n          />\n        )}\n      </StyledImage>\n\n      <StyledBottom>\n        <StyledInner>\n          <LinesEllipsis\n            text={buttonText}\n            maxLine=\"2\"\n            basedOn=\"words\"\n            trimRight\n          />\n        </StyledInner>\n      </StyledBottom>\n    </StyledButton>\n  ),\n)`\n  text-transform: none;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n  font-weight: ${({ theme }) => theme.typography.weights.normal};\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n  border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  margin: 0;\n  width: 100%;\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.colors.grayscale.light5};\n    color: ${({ theme }) => theme.colors.grayscale.dark2};\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    box-shadow: 4px 4px 20px ${({ theme }) => theme.colors.grayscale.light2};\n  }\n`;\n\nexport default IconButton;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\ntype DatabaseUser = {\n  first_name: string;\n  last_name: string;\n};\n\nexport type CatalogObject = {\n  name: string;\n  value: string;\n};\n\nexport type DatabaseObject = {\n  // Connection + general\n  id?: number;\n  database_name: string;\n  name: string; // synonym to database_name\n  sqlalchemy_uri?: string;\n  backend?: string;\n  created_by?: null | DatabaseUser;\n  changed_on_delta_humanized?: string;\n  changed_on?: string;\n  parameters?: {\n    database_name?: string;\n    host?: string;\n    port?: number;\n    database?: string;\n    username?: string;\n    password?: string;\n    encryption?: boolean;\n    credentials_info?: string;\n    service_account_info?: string;\n    query?: Record<string, string>;\n    catalog?: Record<string, string>;\n    properties?: Record<string, any>;\n    warehouse?: string;\n    role?: string;\n    account?: string;\n  };\n  configuration_method: CONFIGURATION_METHOD;\n  engine?: string;\n  paramProperties?: Record<string, any>;\n\n  // Performance\n  cache_timeout?: string;\n  allow_run_async?: boolean;\n\n  // SQL Lab\n  expose_in_sqllab?: boolean;\n  allow_ctas?: boolean;\n  allow_cvas?: boolean;\n  allow_dml?: boolean;\n  allow_multi_schema_metadata_fetch?: boolean;\n  force_ctas_schema?: string;\n\n  // Security\n  encrypted_extra?: string;\n  server_cert?: string;\n  allow_file_upload?: boolean;\n  impersonate_user?: boolean;\n  parameters_schema?: Record<string, any>;\n\n  // Extra\n  extra_json?: {\n    engine_params?: {\n      catalog?: Record<any, any> | string;\n    };\n    metadata_params?: {} | string;\n    metadata_cache_timeout?: {\n      schema_cache_timeout?: number; // in Performance\n      table_cache_timeout?: number; // in Performance\n    }; // No field, holds schema and table timeout\n    allows_virtual_table_explore?: boolean; // in SQL Lab\n    schemas_allowed_for_file_upload?: string[]; // in Security\n    cancel_query_on_windows_unload?: boolean; // in Performance\n\n    version?: string;\n    cost_estimate_enabled?: boolean; // in SQL Lab\n    disable_data_preview?: boolean; // in SQL Lab\n  };\n\n  // External management\n  is_managed_externally: boolean;\n\n  // Temporary storage\n  catalog?: Array<CatalogObject>;\n  query_input?: string;\n  extra?: string;\n};\n\nexport type DatabaseForm = {\n  engine: string;\n  name: string;\n  parameters: {\n    properties: {\n      database: {\n        description: string;\n        type: string;\n      };\n      host: {\n        description: string;\n        type: string;\n      };\n      password: {\n        description: string;\n        nullable: boolean;\n        type: string;\n      };\n      port: {\n        description: string;\n        format: string;\n        type: string;\n      };\n      query: {\n        additionalProperties: {};\n        description: string;\n        type: string;\n      };\n      username: {\n        description: string;\n        nullable: boolean;\n        type: string;\n      };\n      credentials_info: {\n        description: string;\n        nullable: boolean;\n        type: string;\n      };\n      service_account_info: {\n        description: string;\n        nullable: boolean;\n        type: string;\n      };\n    };\n    required: string[];\n    type: string;\n  };\n  preferred: boolean;\n  sqlalchemy_uri_placeholder: string;\n};\n\n// the values should align with the database\n// model enum in superset/superset/models/core.py\nexport enum CONFIGURATION_METHOD {\n  SQLALCHEMY_URI = 'sqlalchemy_form',\n  DYNAMIC_FORM = 'dynamic_form',\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { css, styled, SupersetTheme } from '@superset-ui/core';\nimport { JsonEditor } from 'src/components/AsyncAceEditor';\nimport Button from 'src/components/Button';\n\nconst CTAS_CVAS_SCHEMA_FORM_HEIGHT = 102;\nconst EXPOSE_IN_SQLLAB_FORM_HEIGHT = CTAS_CVAS_SCHEMA_FORM_HEIGHT + 153;\nconst EXPOSE_ALL_FORM_HEIGHT = EXPOSE_IN_SQLLAB_FORM_HEIGHT + 102;\n\nconst anticonHeight = 12;\n\nexport const no_margin_bottom = css`\n  margin-bottom: 0;\n`;\n\nexport const labelMarginBotton = (theme: SupersetTheme) => css`\n  margin-bottom: ${theme.gridUnit * 2}px;\n`;\n\nexport const marginBottom = (theme: SupersetTheme) => css`\n  margin-bottom: ${theme.gridUnit * 4}px;\n`;\n\nexport const StyledFormHeader = styled.header`\n  border-bottom: ${({ theme }) => `${theme.gridUnit * 0.25}px solid\n    ${theme.colors.grayscale.light2};`}\n  padding: ${({ theme }) => theme.gridUnit * 2}px\n    ${({ theme }) => theme.gridUnit * 4}px;\n  line-height: ${({ theme }) => theme.gridUnit * 6}px;\n\n  .helper-top {\n    padding-bottom: 0;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    margin: 0;\n  }\n\n  .helper-bottom {\n    padding-top: 0;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    margin: 0;\n  }\n\n  h4 {\n    color: ${({ theme }) => theme.colors.grayscale.dark2};\n    font-size: ${({ theme }) => theme.typography.sizes.l}px;\n    margin: 0;\n    padding: 0;\n    line-height: ${({ theme }) => theme.gridUnit * 8}px;\n  }\n\n  .select-db {\n    padding-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n    .helper {\n      margin: 0;\n    }\n\n    h4 {\n      margin: 0 0 ${({ theme }) => theme.gridUnit * 4}px;\n    }\n  }\n`;\n\nexport const antdCollapseStyles = (theme: SupersetTheme) => css`\n  .ant-collapse-header {\n    padding-top: ${theme.gridUnit * 3.5}px;\n    padding-bottom: ${theme.gridUnit * 2.5}px;\n\n    .anticon.ant-collapse-arrow {\n      top: calc(50% - ${anticonHeight / 2}px);\n    }\n    .helper {\n      color: ${theme.colors.grayscale.base};\n    }\n  }\n  h4 {\n    font-size: 16px;\n    margin-top: 0;\n    margin-bottom: ${theme.gridUnit}px;\n  }\n  p.helper {\n    margin-bottom: 0;\n    padding: 0;\n  }\n`;\n\nexport const antDTabsStyles = css`\n  .ant-tabs-top {\n    margin-top: 0;\n  }\n  .ant-tabs-top > .ant-tabs-nav {\n    margin-bottom: 0;\n  }\n  .ant-tabs-tab {\n    margin-right: 0;\n  }\n`;\n\nexport const antDModalNoPaddingStyles = css`\n  .ant-modal-body {\n    padding-left: 0;\n    padding-right: 0;\n    padding-top: 0;\n  }\n`;\n\nexport const infoTooltip = (theme: SupersetTheme) => css`\n  margin-bottom: ${theme.gridUnit * 5}px;\n  svg {\n    margin-bottom: ${theme.gridUnit * 0.25}px;\n  }\n`;\n\nexport const toggleStyle = (theme: SupersetTheme) => css`\n  padding-left: ${theme.gridUnit * 2}px;\n`;\n\nexport const formScrollableStyles = (theme: SupersetTheme) => css`\n  padding: ${theme.gridUnit * 4}px ${theme.gridUnit * 4}px 0;\n`;\n\nexport const antDModalStyles = (theme: SupersetTheme) => css`\n  .ant-select-dropdown {\n    height: ${theme.gridUnit * 40}px;\n  }\n\n  .ant-modal-header {\n    padding: ${theme.gridUnit * 4.5}px ${theme.gridUnit * 4}px\n      ${theme.gridUnit * 4}px;\n  }\n\n  .ant-modal-close-x .close {\n    color: ${theme.colors.grayscale.dark1};\n    opacity: 1;\n  }\n\n  .ant-modal-body {\n    height: ${theme.gridUnit * 180.5}px;\n  }\n\n  .ant-modal-footer {\n    height: ${theme.gridUnit * 16.25}px;\n  }\n`;\n\nexport const antDAlertStyles = (theme: SupersetTheme) => css`\n  border: 1px solid ${theme.colors.info.base};\n  padding: ${theme.gridUnit * 4}px;\n  margin: ${theme.gridUnit * 4}px 0;\n\n  .ant-alert-message {\n    color: ${theme.colors.info.dark2};\n    font-size: ${theme.typography.sizes.m}px;\n    font-weight: ${theme.typography.weights.bold};\n  }\n\n  .ant-alert-description {\n    color: ${theme.colors.info.dark2};\n    font-size: ${theme.typography.sizes.m}px;\n    line-height: ${theme.gridUnit * 5}px;\n\n    a {\n      text-decoration: underline;\n    }\n\n    .ant-alert-icon {\n      margin-right: ${theme.gridUnit * 2.5}px;\n      font-size: ${theme.typography.sizes.l}px;\n      position: relative;\n      top: ${theme.gridUnit / 4}px;\n    }\n  }\n`;\n\nexport const StyledAlertMargin = styled.div`\n  ${({ theme }) => css`\n    margin: 0 ${theme.gridUnit * 4}px -${theme.gridUnit * 4}px;\n  `}\n`;\n\nexport const antDErrorAlertStyles = (theme: SupersetTheme) => css`\n  border: ${theme.colors.error.base} 1px solid;\n  padding: ${theme.gridUnit * 4}px;\n  margin: ${theme.gridUnit * 8}px ${theme.gridUnit * 4}px;\n  color: ${theme.colors.error.dark2};\n  .ant-alert-message {\n    font-size: ${theme.typography.sizes.m}px;\n    font-weight: ${theme.typography.weights.bold};\n  }\n  .ant-alert-description {\n    font-size: ${theme.typography.sizes.m}px;\n    line-height: ${theme.gridUnit * 5}px;\n    .ant-alert-icon {\n      margin-right: ${theme.gridUnit * 2.5}px;\n      font-size: ${theme.typography.sizes.l}px;\n      position: relative;\n      top: ${theme.gridUnit / 4}px;\n    }\n  }\n`;\n\nexport const antdWarningAlertStyles = (theme: SupersetTheme) => css`\n  border: 1px solid ${theme.colors.warning.light1};\n  padding: ${theme.gridUnit * 4}px;\n  margin: ${theme.gridUnit * 4}px 0;\n  color: ${theme.colors.warning.dark2};\n\n  .ant-alert-message {\n    margin: 0;\n  }\n\n  .ant-alert-description {\n    font-size: ${theme.typography.sizes.s + 1}px;\n    line-height: ${theme.gridUnit * 4}px;\n\n    .ant-alert-icon {\n      margin-right: ${theme.gridUnit * 2.5}px;\n      font-size: ${theme.typography.sizes.l + 1}px;\n      position: relative;\n      top: ${theme.gridUnit / 4}px;\n    }\n  }\n`;\n\nexport const formHelperStyles = (theme: SupersetTheme) => css`\n  .required {\n    margin-left: ${theme.gridUnit / 2}px;\n    color: ${theme.colors.error.base};\n  }\n\n  .helper {\n    display: block;\n    padding: ${theme.gridUnit}px 0;\n    color: ${theme.colors.grayscale.light1};\n    font-size: ${theme.typography.sizes.s}px;\n    text-align: left;\n  }\n`;\n\nexport const wideButton = (theme: SupersetTheme) => css`\n  width: 100%;\n  border: 1px solid ${theme.colors.primary.dark2};\n  color: ${theme.colors.primary.dark2};\n  &:hover,\n  &:focus {\n    border: 1px solid ${theme.colors.primary.dark1};\n    color: ${theme.colors.primary.dark1};\n  }\n`;\n\nexport const formStyles = (theme: SupersetTheme) => css`\n  .form-group {\n    margin-bottom: ${theme.gridUnit * 4}px;\n    &-w-50 {\n      display: inline-block;\n      width: ${`calc(50% - ${theme.gridUnit * 4}px)`};\n      & + .form-group-w-50 {\n        margin-left: ${theme.gridUnit * 8}px;\n        margin-bottom: ${theme.gridUnit * 10}px;\n      }\n    }\n  }\n  .control-label {\n    color: ${theme.colors.grayscale.dark1};\n    font-size: ${theme.typography.sizes.s}px;\n  }\n  .helper {\n    color: ${theme.colors.grayscale.light1};\n    font-size: ${theme.typography.sizes.s}px;\n    margin-top: ${theme.gridUnit * 1.5}px;\n  }\n  .ant-tabs-content-holder {\n    overflow: auto;\n    max-height: 480px;\n  }\n`;\n\nexport const validatedFormStyles = (theme: SupersetTheme) => css`\n  label {\n    color: ${theme.colors.grayscale.dark1};\n    font-size: ${theme.typography.sizes.s}px;\n    margin-bottom: 0;\n  }\n`;\n\nexport const StyledInputContainer = styled.div`\n  ${({ theme }) => css`\n    margin-bottom: ${theme.gridUnit * 6}px;\n    &.mb-0 {\n      margin-bottom: 0;\n    }\n    &.mb-8 {\n      margin-bottom: ${theme.gridUnit * 2}px;\n    }\n\n    .control-label {\n      color: ${theme.colors.grayscale.dark1};\n      font-size: ${theme.typography.sizes.s}px;\n      margin-bottom: ${theme.gridUnit * 2}px;\n    }\n\n    &.extra-container {\n      padding-top: ${theme.gridUnit * 2}px;\n    }\n\n    .input-container {\n      display: flex;\n      align-items: top;\n\n      label {\n        display: flex;\n        margin-left: ${theme.gridUnit * 2}px;\n        margin-top: ${theme.gridUnit * 0.75}px;\n        font-family: ${theme.typography.families.sansSerif};\n        font-size: ${theme.typography.sizes.m}px;\n      }\n\n      i {\n        margin: 0 ${theme.gridUnit}px;\n      }\n    }\n\n    input,\n    textarea {\n      flex: 1 1 auto;\n    }\n\n    textarea {\n      height: 160px;\n      resize: none;\n    }\n\n    input::placeholder,\n    textarea::placeholder {\n      color: ${theme.colors.grayscale.light1};\n    }\n\n    textarea,\n    input[type='text'],\n    input[type='number'] {\n      padding: ${theme.gridUnit * 1.5}px ${theme.gridUnit * 2}px;\n      border-style: none;\n      border: 1px solid ${theme.colors.grayscale.light2};\n      border-radius: ${theme.gridUnit}px;\n\n      &[name='name'] {\n        flex: 0 1 auto;\n        width: 40%;\n      }\n    }\n    &.expandable {\n      height: 0;\n      overflow: hidden;\n      transition: height 0.25s;\n      margin-left: ${theme.gridUnit * 8}px;\n      margin-bottom: 0;\n      padding: 0;\n      .control-label {\n        margin-bottom: 0;\n      }\n      &.open {\n        height: ${CTAS_CVAS_SCHEMA_FORM_HEIGHT}px;\n        padding-right: ${theme.gridUnit * 5}px;\n      }\n    }\n  `}\n`;\n\nexport const StyledJsonEditor = styled(JsonEditor)`\n  flex: 1 1 auto;\n  border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  border-radius: ${({ theme }) => theme.gridUnit}px;\n`;\n\nexport const StyledExpandableForm = styled.div`\n  padding-top: ${({ theme }) => theme.gridUnit}px;\n  .input-container {\n    padding-top: ${({ theme }) => theme.gridUnit}px;\n    padding-bottom: ${({ theme }) => theme.gridUnit}px;\n  }\n  &.expandable {\n    height: 0;\n    overflow: hidden;\n    transition: height 0.25s;\n    margin-left: ${({ theme }) => theme.gridUnit * 7}px;\n    &.open {\n      height: ${EXPOSE_IN_SQLLAB_FORM_HEIGHT}px;\n      &.ctas-open {\n        height: ${EXPOSE_ALL_FORM_HEIGHT}px;\n      }\n    }\n  }\n`;\n\nexport const StyledAlignment = styled.div`\n  padding: 0 ${({ theme }) => theme.gridUnit * 4}px;\n  margin-top: ${({ theme }) => theme.gridUnit * 6}px;\n`;\n\nexport const buttonLinkStyles = (theme: SupersetTheme) => css`\n  font-weight: ${theme.typography.weights.normal};\n  text-transform: initial;\n  padding-right: ${theme.gridUnit * 2}px;\n`;\n\nexport const importDbButtonLinkStyles = (theme: SupersetTheme) => css`\n  font-size: ${theme.gridUnit * 3.5}px;\n  font-weight: ${theme.typography.weights.normal};\n  text-transform: initial;\n  padding-right: ${theme.gridUnit * 2}px;\n`;\n\nexport const alchemyButtonLinkStyles = (theme: SupersetTheme) => css`\n  font-weight: ${theme.typography.weights.normal};\n  text-transform: initial;\n  padding: ${theme.gridUnit * 8}px 0 0;\n  margin-left: 0px;\n`;\n\nexport const TabHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 0px;\n\n  .helper {\n    color: ${({ theme }) => theme.colors.grayscale.base};\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    margin: 0px;\n  }\n`;\n\nexport const CreateHeaderTitle = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n  font-weight: ${({ theme }) => theme.typography.weights.bold};\n  font-size: ${({ theme }) => theme.typography.sizes.m}px;\n`;\n\nexport const CreateHeaderSubtitle = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark1};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n`;\n\nexport const EditHeaderTitle = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.light1};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  text-transform: uppercase;\n`;\n\nexport const EditHeaderSubtitle = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark1};\n  font-size: ${({ theme }) => theme.typography.sizes.l}px;\n  font-weight: ${({ theme }) => theme.typography.weights.bold};\n`;\n\nexport const CredentialInfoForm = styled.div`\n  .catalog-type-select {\n    margin: 0 0 20px;\n  }\n\n  .label-select {\n    text-transform: uppercase;\n    color: ${({ theme }) => theme.colors.grayscale.dark1};\n    font-size: 11px;\n    margin: 0 5px ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .label-paste {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n    font-size: 11px;\n    line-height: 16px;\n  }\n\n  .input-container {\n    margin: ${({ theme }) => theme.gridUnit * 7}px 0;\n    display: flex;\n    flex-direction: column;\n}\n  }\n  .input-form {\n    height: 100px;\n    width: 100%;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n    resize: vertical;\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    &::placeholder {\n      color: ${({ theme }) => theme.colors.grayscale.light1};\n    }\n  }\n\n  .input-container {\n    .input-upload {\n      display: none;\n    }\n    .input-upload-current {\n      display: flex;\n      justify-content: space-between;\n    }\n    .input-upload-btn {\n      width: ${({ theme }) => theme.gridUnit * 32}px\n    }\n  }`;\n\nexport const SelectDatabaseStyles = styled.div`\n  .preferred {\n    .superset-button {\n      margin-left: 0;\n    }\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    margin: ${({ theme }) => theme.gridUnit * 4}px;\n  }\n\n  .preferred-item {\n    width: 32%;\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2.5}px;\n  }\n\n  .available {\n    margin: ${({ theme }) => theme.gridUnit * 4}px;\n    .available-label {\n      font-size: ${({ theme }) => theme.typography.sizes.l}px;\n      font-weight: ${({ theme }) => theme.typography.weights.bold};\n      margin: ${({ theme }) => theme.gridUnit * 6}px 0;\n    }\n    .available-select {\n      width: 100%;\n    }\n  }\n\n  .label-available-select {\n    text-transform: uppercase;\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  }\n\n  .control-label {\n    color: ${({ theme }) => theme.colors.grayscale.dark1};\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n`;\n\nexport const StyledFooterButton = styled(Button)`\n  width: ${({ theme }) => theme.gridUnit * 40}px;\n`;\n\nexport const StyledStickyHeader = styled.div`\n  position: sticky;\n  top: 0;\n  z-index: ${({ theme }) => theme.zIndex.max};\n  background: ${({ theme }) => theme.colors.grayscale.light5};\n`;\n\nexport const StyledCatalogTable = styled.div`\n  margin-bottom: 16px;\n\n  .catalog-type-select {\n    margin: 0 0 20px;\n  }\n\n  .gsheet-title {\n    font-size: ${({ theme }) => theme.typography.sizes.l}px;\n    font-weight: ${({ theme }) => theme.typography.weights.bold};\n    margin: ${({ theme }) => theme.gridUnit * 10}px 0 16px;\n  }\n\n  .catalog-label {\n    margin: 0 0 7px;\n  }\n\n  .catalog-name {\n    display: flex;\n    .catalog-name-input {\n      width: 95%;\n      margin-bottom: 0px;\n    }\n  }\n\n  .catalog-name-url {\n    margin: 4px 0;\n    width: 95%;\n  }\n\n  .catalog-delete {\n    align-self: center;\n    background: ${({ theme }) => theme.colors.grayscale.light4};\n    margin: 5px 5px 8px 5px;\n  }\n\n  .catalog-add-btn {\n    width: 95%;\n  }\n`;\n\nexport const StyledUploadWrapper = styled.div`\n  .ant-progress-inner {\n    display: none;\n  }\n\n  .ant-upload-list-item-card-actions {\n    display: none;\n  }\n`;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ChangeEvent, EventHandler } from 'react';\nimport cx from 'classnames';\nimport { t, SupersetTheme } from '@superset-ui/core';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport IndeterminateCheckbox from 'src/components/IndeterminateCheckbox';\nimport Collapse from 'src/components/Collapse';\nimport {\n  StyledInputContainer,\n  StyledJsonEditor,\n  StyledExpandableForm,\n  antdCollapseStyles,\n  no_margin_bottom,\n} from './styles';\nimport { DatabaseObject } from '../types';\n\nconst ExtraOptions = ({\n  db,\n  onInputChange,\n  onTextChange,\n  onEditorChange,\n  onExtraInputChange,\n  onExtraEditorChange,\n}: {\n  db: DatabaseObject | null;\n  onInputChange: EventHandler<ChangeEvent<HTMLInputElement>>;\n  onTextChange: EventHandler<ChangeEvent<HTMLTextAreaElement>>;\n  onEditorChange: Function;\n  onExtraInputChange: EventHandler<ChangeEvent<HTMLInputElement>>;\n  onExtraEditorChange: Function;\n}) => {\n  const expandableModalIsOpen = !!db?.expose_in_sqllab;\n  const createAsOpen = !!(db?.allow_ctas || db?.allow_cvas);\n\n  return (\n    <Collapse\n      expandIconPosition=\"right\"\n      accordion\n      css={(theme: SupersetTheme) => antdCollapseStyles(theme)}\n    >\n      <Collapse.Panel\n        header={\n          <div>\n            <h4>SQL Lab</h4>\n            <p className=\"helper\">\n              Adjust how this database will interact with SQL Lab.\n            </p>\n          </div>\n        }\n        key=\"1\"\n      >\n        <StyledInputContainer css={no_margin_bottom}>\n          <div className=\"input-container\">\n            <IndeterminateCheckbox\n              id=\"expose_in_sqllab\"\n              indeterminate={false}\n              checked={!!db?.expose_in_sqllab}\n              onChange={onInputChange}\n              labelText={t('Expose database in SQL Lab')}\n            />\n            <InfoTooltip\n              tooltip={t('Allow this database to be queried in SQL Lab')}\n            />\n          </div>\n          <StyledExpandableForm\n            className={cx('expandable', {\n              open: expandableModalIsOpen,\n              'ctas-open': createAsOpen,\n            })}\n          >\n            <StyledInputContainer css={no_margin_bottom}>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"allow_ctas\"\n                  indeterminate={false}\n                  checked={!!db?.allow_ctas}\n                  onChange={onInputChange}\n                  labelText={t('Allow CREATE TABLE AS')}\n                />\n                <InfoTooltip\n                  tooltip={t('Allow creation of new tables based on queries')}\n                />\n              </div>\n            </StyledInputContainer>\n            <StyledInputContainer css={no_margin_bottom}>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"allow_cvas\"\n                  indeterminate={false}\n                  checked={!!db?.allow_cvas}\n                  onChange={onInputChange}\n                  labelText={t('Allow CREATE VIEW AS')}\n                />\n                <InfoTooltip\n                  tooltip={t('Allow creation of new views based on queries')}\n                />\n              </div>\n              <StyledInputContainer\n                className={cx('expandable', { open: createAsOpen })}\n              >\n                <div className=\"control-label\">{t('CTAS & CVAS SCHEMA')}</div>\n                <div className=\"input-container\">\n                  <input\n                    type=\"text\"\n                    name=\"force_ctas_schema\"\n                    value={db?.force_ctas_schema || ''}\n                    placeholder={t('Create or select schema...')}\n                    onChange={onInputChange}\n                  />\n                </div>\n                <div className=\"helper\">\n                  {t(\n                    'Force all tables and views to be created in this schema when clicking CTAS or CVAS in SQL Lab.',\n                  )}\n                </div>\n              </StyledInputContainer>\n            </StyledInputContainer>\n            <StyledInputContainer css={no_margin_bottom}>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"allow_dml\"\n                  indeterminate={false}\n                  checked={!!db?.allow_dml}\n                  onChange={onInputChange}\n                  labelText={t('Allow DML')}\n                />\n                <InfoTooltip\n                  tooltip={t(\n                    'Allow manipulation of the database using non-SELECT statements such as UPDATE, DELETE, CREATE, etc.',\n                  )}\n                />\n              </div>\n            </StyledInputContainer>\n            <StyledInputContainer css={no_margin_bottom}>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"allow_multi_schema_metadata_fetch\"\n                  indeterminate={false}\n                  checked={!!db?.allow_multi_schema_metadata_fetch}\n                  onChange={onInputChange}\n                  labelText={t('Allow Multi Schema Metadata Fetch')}\n                />\n                <InfoTooltip\n                  tooltip={t(\n                    'Allow SQL Lab to fetch a list of all tables and all views across all database ' +\n                      'schemas. For large data warehouse with thousands of tables, this can be ' +\n                      'expensive and put strain on the system.',\n                  )}\n                />\n              </div>\n            </StyledInputContainer>\n            <StyledInputContainer css={no_margin_bottom}>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"cost_estimate_enabled\"\n                  indeterminate={false}\n                  checked={!!db?.extra_json?.cost_estimate_enabled}\n                  onChange={onExtraInputChange}\n                  labelText={t('Enable query cost estimation')}\n                />\n                <InfoTooltip\n                  tooltip={t(\n                    'For Presto and Postgres, shows a button to compute cost before running a query.',\n                  )}\n                />\n              </div>\n            </StyledInputContainer>\n            <StyledInputContainer css={no_margin_bottom}>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"allows_virtual_table_explore\"\n                  indeterminate={false}\n                  checked={!!db?.extra_json?.allows_virtual_table_explore}\n                  onChange={onExtraInputChange}\n                  labelText={t('Allow this database to be explored')}\n                />\n                <InfoTooltip\n                  tooltip={t(\n                    'When enabled, users are able to visualize SQL Lab results in Explore.',\n                  )}\n                />\n              </div>\n            </StyledInputContainer>\n            <StyledInputContainer>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"disable_data_preview\"\n                  indeterminate={false}\n                  checked={!!db?.extra_json?.disable_data_preview}\n                  onChange={onExtraInputChange}\n                  labelText={t('Disable SQL Lab data preview queries')}\n                />\n                <InfoTooltip\n                  tooltip={t(\n                    'Disable data preview when fetching table metadata in SQL Lab. ' +\n                      ' Useful to avoid browser performance issues when using ' +\n                      ' databases with very wide tables.',\n                  )}\n                />\n              </div>\n            </StyledInputContainer>\n          </StyledExpandableForm>\n        </StyledInputContainer>\n      </Collapse.Panel>\n      <Collapse.Panel\n        header={\n          <div>\n            <h4>Performance</h4>\n            <p className=\"helper\">\n              Adjust performance settings of this database.\n            </p>\n          </div>\n        }\n        key=\"2\"\n      >\n        <StyledInputContainer className=\"mb-8\">\n          <div className=\"control-label\">{t('Chart cache timeout')}</div>\n          <div className=\"input-container\">\n            <input\n              type=\"number\"\n              name=\"cache_timeout\"\n              value={db?.cache_timeout || ''}\n              placeholder={t('Enter duration in seconds')}\n              onChange={onInputChange}\n            />\n          </div>\n          <div className=\"helper\">\n            {t(\n              'Duration (in seconds) of the caching timeout for charts of this database.' +\n                ' A timeout of 0 indicates that the cache never expires.' +\n                ' Note this defaults to the global timeout if undefined.',\n            )}\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Schema cache timeout')}</div>\n          <div className=\"input-container\">\n            <input\n              type=\"number\"\n              name=\"schema_cache_timeout\"\n              value={\n                db?.extra_json?.metadata_cache_timeout?.schema_cache_timeout ||\n                ''\n              }\n              placeholder={t('Enter duration in seconds')}\n              onChange={onExtraInputChange}\n              data-test=\"schema-cache-timeout-test\"\n            />\n          </div>\n          <div className=\"helper\">\n            {t(\n              'Duration (in seconds) of the metadata caching timeout for schemas of ' +\n                'this database. If left unset, the cache never expires.',\n            )}\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Table cache timeout')}</div>\n          <div className=\"input-container\">\n            <input\n              type=\"number\"\n              name=\"table_cache_timeout\"\n              value={\n                db?.extra_json?.metadata_cache_timeout?.table_cache_timeout ||\n                ''\n              }\n              placeholder={t('Enter duration in seconds')}\n              onChange={onExtraInputChange}\n              data-test=\"table-cache-timeout-test\"\n            />\n          </div>\n          <div className=\"helper\">\n            {t(\n              'Duration (in seconds) of the metadata caching timeout for tables of ' +\n                'this database. If left unset, the cache never expires. ',\n            )}\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer css={{ no_margin_bottom }}>\n          <div className=\"input-container\">\n            <IndeterminateCheckbox\n              id=\"allow_run_async\"\n              indeterminate={false}\n              checked={!!db?.allow_run_async}\n              onChange={onInputChange}\n              labelText={t('Asynchronous query execution')}\n            />\n            <InfoTooltip\n              tooltip={t(\n                'Operate the database in asynchronous mode, meaning that the queries ' +\n                  'are executed on remote workers as opposed to on the web server itself. ' +\n                  'This assumes that you have a Celery worker setup as well as a results ' +\n                  'backend. Refer to the installation docs for more information.',\n              )}\n            />\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer css={{ no_margin_bottom }}>\n          <div className=\"input-container\">\n            <IndeterminateCheckbox\n              id=\"cancel_query_on_windows_unload\"\n              indeterminate={false}\n              checked={!!db?.extra_json?.cancel_query_on_windows_unload}\n              onChange={onExtraInputChange}\n              labelText={t('Cancel query on window unload event')}\n            />\n            <InfoTooltip\n              tooltip={t(\n                'Terminate running queries when browser window closed or navigated ' +\n                  'to another page. Available for Presto, Hive, MySQL, Postgres and ' +\n                  'Snowflake databases.',\n              )}\n            />\n          </div>\n        </StyledInputContainer>\n      </Collapse.Panel>\n      <Collapse.Panel\n        header={\n          <div>\n            <h4>Security</h4>\n            <p className=\"helper\">Add extra connection information.</p>\n          </div>\n        }\n        key=\"3\"\n      >\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Secure extra')}</div>\n          <div className=\"input-container\">\n            <StyledJsonEditor\n              name=\"encrypted_extra\"\n              value={db?.encrypted_extra || ''}\n              placeholder={t('Secure extra')}\n              onChange={(json: string) =>\n                onEditorChange({ json, name: 'encrypted_extra' })\n              }\n              width=\"100%\"\n              height=\"160px\"\n            />\n          </div>\n          <div className=\"helper\">\n            <div>\n              {t(\n                'JSON string containing additional connection configuration. ' +\n                  'This is used to provide connection information for systems ' +\n                  'like Hive, Presto and BigQuery which do not conform to the ' +\n                  'username:password syntax normally used by SQLAlchemy.',\n              )}\n            </div>\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Root certificate')}</div>\n          <div className=\"input-container\">\n            <textarea\n              name=\"server_cert\"\n              value={db?.server_cert || ''}\n              placeholder={t('Enter CA_BUNDLE')}\n              onChange={onTextChange}\n            />\n          </div>\n          <div className=\"helper\">\n            {t(\n              'Optional CA_BUNDLE contents to validate HTTPS requests. Only ' +\n                'available on certain database engines.',\n            )}\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer>\n          <div className=\"control-label\">\n            {t('Schemas allowed for CSV upload')}\n          </div>\n          <div className=\"input-container\">\n            <input\n              type=\"text\"\n              name=\"schemas_allowed_for_file_upload\"\n              value={(\n                db?.extra_json?.schemas_allowed_for_file_upload || []\n              ).join(',')}\n              placeholder=\"schema1,schema2\"\n              onChange={onExtraInputChange}\n            />\n          </div>\n          <div className=\"helper\">\n            {t(\n              'A comma-separated list of schemas that CSVs are allowed to upload to.',\n            )}\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer css={{ no_margin_bottom }}>\n          <div className=\"input-container\">\n            <IndeterminateCheckbox\n              id=\"impersonate_user\"\n              indeterminate={false}\n              checked={!!db?.impersonate_user}\n              onChange={onInputChange}\n              labelText={t(\n                'Impersonate logged in user (Presto, Trino, Drill, Hive, and GSheets)',\n              )}\n            />\n            <InfoTooltip\n              tooltip={t(\n                'If Presto or Trino, all the queries in SQL Lab are going to be executed as the ' +\n                  'currently logged on user who must have permission to run them. If Hive ' +\n                  'and hive.server2.enable.doAs is enabled, will run the queries as ' +\n                  'service account, but impersonate the currently logged on user via ' +\n                  'hive.server2.proxy.user property.',\n              )}\n            />\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer css={{ ...no_margin_bottom }}>\n          <div className=\"input-container\">\n            <IndeterminateCheckbox\n              id=\"allow_file_upload\"\n              indeterminate={false}\n              checked={!!db?.allow_file_upload}\n              onChange={onInputChange}\n              labelText={t('Allow data upload')}\n            />\n            <InfoTooltip\n              tooltip={t(\n                'If selected, please set the schemas allowed for data upload in Extra.',\n              )}\n            />\n          </div>\n        </StyledInputContainer>\n      </Collapse.Panel>\n      <Collapse.Panel\n        header={\n          <div>\n            <h4>Other</h4>\n            <p className=\"helper\">Additional settings.</p>\n          </div>\n        }\n        key=\"4\"\n      >\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Metadata Parameters')}</div>\n          <div className=\"input-container\">\n            <StyledJsonEditor\n              name=\"metadata_params\"\n              value={db?.extra_json?.metadata_params || ''}\n              placeholder={t('Metadata Parameters')}\n              onChange={(json: string) =>\n                onExtraEditorChange({ json, name: 'metadata_params' })\n              }\n              width=\"100%\"\n              height=\"160px\"\n            />\n          </div>\n          <div className=\"helper\">\n            <div>\n              {t(\n                'The metadata_params object gets unpacked into the sqlalchemy.MetaData call.',\n              )}\n            </div>\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Engine Parameters')}</div>\n          <div className=\"input-container\">\n            <StyledJsonEditor\n              name=\"engine_params\"\n              value={db?.extra_json?.engine_params || ''}\n              placeholder={t('Engine Parameters')}\n              onChange={(json: string) =>\n                onExtraEditorChange({ json, name: 'engine_params' })\n              }\n              width=\"100%\"\n              height=\"160px\"\n            />\n          </div>\n          <div className=\"helper\">\n            <div>\n              {t(\n                'The engine_params object gets unpacked into the sqlalchemy.create_engine call.',\n              )}\n            </div>\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer>\n          <div className=\"control-label\" data-test=\"version-label-test\">\n            {t('Version')}\n          </div>\n          <div className=\"input-container\" data-test=\"version-spinbutton-test\">\n            <input\n              type=\"number\"\n              name=\"version\"\n              value={db?.extra_json?.version || ''}\n              placeholder={t('Version number')}\n              onChange={onExtraInputChange}\n            />\n          </div>\n          <div className=\"helper\">\n            {t(\n              'Specify the database version. This should be used with ' +\n                'Presto in order to enable query cost estimation.',\n            )}\n          </div>\n        </StyledInputContainer>\n      </Collapse.Panel>\n    </Collapse>\n  );\n};\n\nexport default ExtraOptions;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { EventHandler, ChangeEvent, MouseEvent } from 'react';\nimport { t, SupersetTheme } from '@superset-ui/core';\nimport SupersetText from 'src/utils/textUtils';\nimport Button from 'src/components/Button';\nimport { StyledInputContainer, wideButton } from './styles';\n\nimport { DatabaseObject } from '../types';\n\nconst SqlAlchemyTab = ({\n  db,\n  onInputChange,\n  testConnection,\n  conf,\n  testInProgress = false,\n}: {\n  db: DatabaseObject | null;\n  onInputChange: EventHandler<ChangeEvent<HTMLInputElement>>;\n  testConnection: EventHandler<MouseEvent<HTMLElement>>;\n  conf: { SQLALCHEMY_DOCS_URL: string; SQLALCHEMY_DISPLAY_TEXT: string };\n  testInProgress?: boolean;\n}) => {\n  let fallbackDocsUrl;\n  let fallbackDisplayText;\n  if (SupersetText) {\n    fallbackDocsUrl =\n      SupersetText.DB_MODAL_SQLALCHEMY_FORM?.SQLALCHEMY_DOCS_URL;\n    fallbackDisplayText =\n      SupersetText.DB_MODAL_SQLALCHEMY_FORM?.SQLALCHEMY_DISPLAY_TEXT;\n  } else {\n    fallbackDocsUrl = 'https://docs.sqlalchemy.org/en/13/core/engines.html';\n    fallbackDisplayText = 'SQLAlchemy docs';\n  }\n  return (\n    <>\n      <StyledInputContainer>\n        <div className=\"control-label\">\n          {t('Display Name')}\n          <span className=\"required\">*</span>\n        </div>\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            name=\"database_name\"\n            data-test=\"database-name-input\"\n            value={db?.database_name || ''}\n            placeholder={t('Name your database')}\n            onChange={onInputChange}\n          />\n        </div>\n        <div className=\"helper\">\n          {t('Pick a name to help you identify this database.')}\n        </div>\n      </StyledInputContainer>\n      <StyledInputContainer>\n        <div className=\"control-label\">\n          {t('SQLAlchemy URI')}\n          <span className=\"required\">*</span>\n        </div>\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            name=\"sqlalchemy_uri\"\n            data-test=\"sqlalchemy-uri-input\"\n            value={db?.sqlalchemy_uri || ''}\n            autoComplete=\"off\"\n            placeholder={t(\n              'dialect+driver://username:password@host:port/database',\n            )}\n            onChange={onInputChange}\n          />\n        </div>\n        <div className=\"helper\">\n          {t('Refer to the')}{' '}\n          <a\n            href={fallbackDocsUrl || conf?.SQLALCHEMY_DOCS_URL || ''}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {fallbackDisplayText || conf?.SQLALCHEMY_DISPLAY_TEXT || ''}\n          </a>{' '}\n          {t('for more information on how to structure your URI.')}\n        </div>\n      </StyledInputContainer>\n      <Button\n        onClick={testConnection}\n        disabled={testInProgress}\n        cta\n        buttonStyle=\"link\"\n        css={(theme: SupersetTheme) => wideButton(theme)}\n      >\n        {t('Test connection')}\n      </Button>\n    </>\n  );\n};\nexport default SqlAlchemyTab;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { SupersetTheme, t } from '@superset-ui/core';\nimport { AntdSwitch } from 'src/components';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport ValidatedInput from 'src/components/Form/LabeledErrorBoundInput';\nimport { FieldPropTypes } from '.';\nimport { toggleStyle, infoTooltip } from '../styles';\n\nexport const hostField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => (\n  <ValidatedInput\n    id=\"host\"\n    name=\"host\"\n    value={db?.parameters?.host}\n    required={required}\n    hasTooltip\n    tooltipText={t(\n      'This can be either an IP address (e.g. 127.0.0.1) or a domain name (e.g. mydatabase.com).',\n    )}\n    validationMethods={{ onBlur: getValidation }}\n    errorMessage={validationErrors?.host}\n    placeholder={t('e.g. 127.0.0.1')}\n    className=\"form-group-w-50\"\n    label={t('Host')}\n    onChange={changeMethods.onParametersChange}\n  />\n);\nexport const portField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => (\n  <>\n    <ValidatedInput\n      id=\"port\"\n      name=\"port\"\n      type=\"number\"\n      required={required}\n      value={db?.parameters?.port as number}\n      validationMethods={{ onBlur: getValidation }}\n      errorMessage={validationErrors?.port}\n      placeholder={t('e.g. 5432')}\n      className=\"form-group-w-50\"\n      label=\"Port\"\n      onChange={changeMethods.onParametersChange}\n    />\n  </>\n);\nexport const databaseField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => (\n  <ValidatedInput\n    id=\"database\"\n    name=\"database\"\n    required={required}\n    value={db?.parameters?.database}\n    validationMethods={{ onBlur: getValidation }}\n    errorMessage={validationErrors?.database}\n    placeholder={t('e.g. world_population')}\n    label={t('Database name')}\n    onChange={changeMethods.onParametersChange}\n    helpText={t('Copy the name of the  database you are trying to connect to.')}\n  />\n);\nexport const usernameField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => (\n  <ValidatedInput\n    id=\"username\"\n    name=\"username\"\n    required={required}\n    value={db?.parameters?.username}\n    validationMethods={{ onBlur: getValidation }}\n    errorMessage={validationErrors?.username}\n    placeholder={t('e.g. Analytics')}\n    label={t('Username')}\n    onChange={changeMethods.onParametersChange}\n  />\n);\nexport const passwordField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n  isEditMode,\n}: FieldPropTypes) => (\n  <ValidatedInput\n    id=\"password\"\n    name=\"password\"\n    required={required}\n    visibilityToggle={!isEditMode}\n    value={db?.parameters?.password}\n    validationMethods={{ onBlur: getValidation }}\n    errorMessage={validationErrors?.password}\n    placeholder={t('e.g. ********')}\n    label={t('Password')}\n    onChange={changeMethods.onParametersChange}\n  />\n);\nexport const displayField = ({\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => (\n  <>\n    <ValidatedInput\n      id=\"database_name\"\n      name=\"database_name\"\n      required\n      value={db?.database_name}\n      validationMethods={{ onBlur: getValidation }}\n      errorMessage={validationErrors?.database_name}\n      placeholder=\"\"\n      label={t('Display Name')}\n      onChange={changeMethods.onChange}\n      helpText={t(\n        'Pick a nickname for this database to display as in Superset.',\n      )}\n    />\n  </>\n);\n\nexport const queryField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => (\n  <ValidatedInput\n    id=\"query_input\"\n    name=\"query_input\"\n    required={required}\n    value={db?.query_input || ''}\n    validationMethods={{ onBlur: getValidation }}\n    errorMessage={validationErrors?.query}\n    placeholder={t('e.g. param1=value1&param2=value2')}\n    label={t('Additional Parameters')}\n    onChange={changeMethods.onQueryChange}\n    helpText={t('Add additional custom parameters')}\n  />\n);\n\nexport const forceSSLField = ({\n  isEditMode,\n  changeMethods,\n  db,\n  sslForced,\n}: FieldPropTypes) => (\n  <div css={(theme: SupersetTheme) => infoTooltip(theme)}>\n    <AntdSwitch\n      disabled={sslForced && !isEditMode}\n      checked={db?.parameters?.encryption || sslForced}\n      onChange={changed => {\n        changeMethods.onParametersChange({\n          target: {\n            type: 'toggle',\n            name: 'encryption',\n            checked: true,\n            value: changed,\n          },\n        });\n      }}\n    />\n    <span css={toggleStyle}>SSL</span>\n    <InfoTooltip\n      tooltip={t('SSL Mode \"require\" will be used.')}\n      placement=\"right\"\n      viewBox=\"0 -5 24 24\"\n    />\n  </div>\n);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport ValidatedInput from 'src/components/Form/LabeledErrorBoundInput';\nimport { FieldPropTypes } from '.';\n\nconst FIELD_TEXT_MAP = {\n  account: {\n    helpText: t(\n      'Copy the account name of that database you are trying to connect to.',\n    ),\n    placeholder: 'e.g. world_population',\n  },\n  warehouse: {\n    placeholder: 'e.g. compute_wh',\n    className: 'form-group-w-50',\n  },\n  role: {\n    placeholder: 'e.g. AccountAdmin',\n    className: 'form-group-w-50',\n  },\n};\n\nexport const validatedInputField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n  field,\n}: FieldPropTypes) => (\n  <ValidatedInput\n    id={field}\n    name={field}\n    required={required}\n    value={db?.parameters?.[field]}\n    validationMethods={{ onBlur: getValidation }}\n    errorMessage={validationErrors?.[field]}\n    placeholder={FIELD_TEXT_MAP[field].placeholder}\n    helpText={FIELD_TEXT_MAP[field].helpText}\n    label={field}\n    onChange={changeMethods.onParametersChange}\n    className={FIELD_TEXT_MAP[field].className || field}\n  />\n);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { SupersetTheme, t } from '@superset-ui/core';\nimport { AntdButton, AntdSelect } from 'src/components';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport FormLabel from 'src/components/Form/FormLabel';\nimport { DeleteFilled } from '@ant-design/icons';\nimport { FieldPropTypes } from '.';\nimport { infoTooltip, labelMarginBotton, CredentialInfoForm } from '../styles';\n\nenum CredentialInfoOptions {\n  jsonUpload,\n  copyPaste,\n}\n\n// These are the columns that are going to be added to encrypted extra, they differ in name based\n// on the engine, however we want to use the same component for each of them. Make sure to add the\n// the engine specific name here.\nexport const encryptedCredentialsMap = {\n  gsheets: 'service_account_info',\n  bigquery: 'credentials_info',\n};\n\nconst castStringToBoolean = (optionValue: string) => optionValue === 'true';\n\nexport const EncryptedField = ({\n  changeMethods,\n  isEditMode,\n  db,\n  editNewDb,\n}: FieldPropTypes) => {\n  const [uploadOption, setUploadOption] = useState<number>(\n    CredentialInfoOptions.jsonUpload.valueOf(),\n  );\n  const [fileToUpload, setFileToUpload] = useState<string | null | undefined>(\n    null,\n  );\n  const [isPublic, setIsPublic] = useState<boolean>(true);\n  const showCredentialsInfo =\n    db?.engine === 'gsheets' ? !isEditMode && !isPublic : !isEditMode;\n  // a database that has an optional encrypted field has an encrypted_extra that is an empty object, this checks for that.\n  const isEncrypted = isEditMode && db?.encrypted_extra !== '{}';\n  const encryptedField = db?.engine && encryptedCredentialsMap[db.engine];\n  const encryptedValue =\n    typeof db?.parameters?.[encryptedField] === 'object'\n      ? JSON.stringify(db?.parameters?.[encryptedField])\n      : db?.parameters?.[encryptedField];\n  return (\n    <CredentialInfoForm>\n      {db?.engine === 'gsheets' && (\n        <div className=\"catalog-type-select\">\n          <FormLabel\n            css={(theme: SupersetTheme) => labelMarginBotton(theme)}\n            required\n          >\n            {t('Type of Google Sheets allowed')}\n          </FormLabel>\n          <AntdSelect\n            style={{ width: '100%' }}\n            defaultValue={isEncrypted ? 'false' : 'true'}\n            onChange={(value: string) =>\n              setIsPublic(castStringToBoolean(value))\n            }\n          >\n            <AntdSelect.Option value=\"true\" key={1}>\n              {t('Publicly shared sheets only')}\n            </AntdSelect.Option>\n            <AntdSelect.Option value=\"false\" key={2}>\n              {t('Public and privately shared sheets')}\n            </AntdSelect.Option>\n          </AntdSelect>\n        </div>\n      )}\n      {showCredentialsInfo && (\n        <>\n          <FormLabel required>\n            {t('How do you want to enter service account credentials?')}\n          </FormLabel>\n          <AntdSelect\n            defaultValue={uploadOption}\n            style={{ width: '100%' }}\n            onChange={option => setUploadOption(option)}\n          >\n            <AntdSelect.Option value={CredentialInfoOptions.jsonUpload}>\n              {t('Upload JSON file')}\n            </AntdSelect.Option>\n\n            <AntdSelect.Option value={CredentialInfoOptions.copyPaste}>\n              {t('Copy and Paste JSON credentials')}\n            </AntdSelect.Option>\n          </AntdSelect>\n        </>\n      )}\n      {uploadOption === CredentialInfoOptions.copyPaste ||\n      isEditMode ||\n      editNewDb ? (\n        <div className=\"input-container\">\n          <FormLabel required>{t('Service Account')}</FormLabel>\n          <textarea\n            className=\"input-form\"\n            name={encryptedField}\n            value={encryptedValue}\n            onChange={changeMethods.onParametersChange}\n            placeholder=\"Paste content of service credentials JSON file here\"\n          />\n          <span className=\"label-paste\">\n            {t('Copy and paste the entire service account .json file here')}\n          </span>\n        </div>\n      ) : (\n        showCredentialsInfo && (\n          <div\n            className=\"input-container\"\n            css={(theme: SupersetTheme) => infoTooltip(theme)}\n          >\n            <div css={{ display: 'flex', alignItems: 'center' }}>\n              <FormLabel required>{t('Upload Credentials')}</FormLabel>\n              <InfoTooltip\n                tooltip={t(\n                  'Use the JSON file you automatically downloaded when creating your service account.',\n                )}\n                viewBox=\"0 0 24 24\"\n              />\n            </div>\n\n            {!fileToUpload && (\n              <AntdButton\n                className=\"input-upload-btn\"\n                onClick={() =>\n                  document?.getElementById('selectedFile')?.click()\n                }\n              >\n                {t('Choose File')}\n              </AntdButton>\n            )}\n            {fileToUpload && (\n              <div className=\"input-upload-current\">\n                {fileToUpload}\n                <DeleteFilled\n                  onClick={() => {\n                    setFileToUpload(null);\n                    changeMethods.onParametersChange({\n                      target: {\n                        name: encryptedField,\n                        value: '',\n                      },\n                    });\n                  }}\n                />\n              </div>\n            )}\n\n            <input\n              id=\"selectedFile\"\n              className=\"input-upload\"\n              type=\"file\"\n              onChange={async event => {\n                let file;\n                if (event.target.files) {\n                  file = event.target.files[0];\n                }\n                setFileToUpload(file?.name);\n                changeMethods.onParametersChange({\n                  target: {\n                    type: null,\n                    name: encryptedField,\n                    value: await file?.text(),\n                    checked: false,\n                  },\n                });\n                (\n                  document.getElementById('selectedFile') as HTMLInputElement\n                ).value = null as any;\n              }}\n            />\n          </div>\n        )\n      )}\n    </CredentialInfoForm>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport ValidatedInput from 'src/components/Form/LabeledErrorBoundInput';\nimport FormLabel from 'src/components/Form/FormLabel';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { FieldPropTypes } from '.';\nimport { StyledFooterButton, StyledCatalogTable } from '../styles';\nimport { CatalogObject } from '../../types';\n\nexport const TableCatalog = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => {\n  const tableCatalog = db?.catalog || [];\n  const catalogError = validationErrors || {};\n  return (\n    <StyledCatalogTable>\n      <h4 className=\"gsheet-title\">\n        {t('Connect Google Sheets as tables to this database')}\n      </h4>\n      <div>\n        {tableCatalog?.map((sheet: CatalogObject, idx: number) => (\n          <>\n            <FormLabel className=\"catalog-label\" required>\n              {t('Google Sheet Name and URL')}\n            </FormLabel>\n            <div className=\"catalog-name\">\n              <ValidatedInput\n                className=\"catalog-name-input\"\n                required={required}\n                validationMethods={{ onBlur: getValidation }}\n                errorMessage={catalogError[idx]?.name}\n                placeholder={t('Enter a name for this sheet')}\n                onChange={(e: { target: { value: any } }) => {\n                  changeMethods.onParametersChange({\n                    target: {\n                      type: `catalog-${idx}`,\n                      name: 'name',\n                      value: e.target.value,\n                    },\n                  });\n                }}\n                value={sheet.name}\n              />\n              {tableCatalog?.length > 1 && (\n                <CloseOutlined\n                  className=\"catalog-delete\"\n                  onClick={() => changeMethods.onRemoveTableCatalog(idx)}\n                />\n              )}\n            </div>\n            <ValidatedInput\n              className=\"catalog-name-url\"\n              required={required}\n              validationMethods={{ onBlur: getValidation }}\n              errorMessage={catalogError[idx]?.url}\n              placeholder={t('Paste the shareable Google Sheet URL here')}\n              onChange={(e: { target: { value: any } }) =>\n                changeMethods.onParametersChange({\n                  target: {\n                    type: `catalog-${idx}`,\n                    name: 'value',\n                    value: e.target.value,\n                  },\n                })\n              }\n              value={sheet.value}\n            />\n          </>\n        ))}\n        <StyledFooterButton\n          className=\"catalog-add-btn\"\n          onClick={() => {\n            changeMethods.onAddTableCatalog();\n          }}\n        >\n          + {t('Add sheet')}\n        </StyledFooterButton>\n      </div>\n    </StyledCatalogTable>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FormEvent } from 'react';\nimport { SupersetTheme, JsonObject } from '@superset-ui/core';\nimport { InputProps } from 'antd/lib/input';\nimport { Form } from 'src/components/Form';\nimport {\n  hostField,\n  portField,\n  databaseField,\n  usernameField,\n  passwordField,\n  displayField,\n  queryField,\n  forceSSLField,\n} from './CommonParameters';\nimport { validatedInputField } from './ValidatedInputField';\nimport { EncryptedField } from './EncryptedField';\nimport { TableCatalog } from './TableCatalog';\nimport { formScrollableStyles, validatedFormStyles } from '../styles';\nimport { DatabaseForm, DatabaseObject } from '../../types';\n\nexport const FormFieldOrder = [\n  'host',\n  'port',\n  'database',\n  'username',\n  'password',\n  'database_name',\n  'credentials_info',\n  'service_account_info',\n  'catalog',\n  'query',\n  'encryption',\n  'account',\n  'warehouse',\n  'role',\n];\n\nexport interface FieldPropTypes {\n  required: boolean;\n  hasTooltip?: boolean;\n  tooltipText?: (value: any) => string;\n  onParametersChange: (value: any) => string;\n  onParametersUploadFileChange: (value: any) => string;\n  changeMethods: { onParametersChange: (value: any) => string } & {\n    onChange: (value: any) => string;\n  } & {\n    onQueryChange: (value: any) => string;\n  } & { onParametersUploadFileChange: (value: any) => string } & {\n    onAddTableCatalog: () => void;\n    onRemoveTableCatalog: (idx: number) => void;\n  };\n  validationErrors: JsonObject | null;\n  getValidation: () => void;\n  db?: DatabaseObject;\n  field: string;\n  isEditMode?: boolean;\n  sslForced?: boolean;\n  defaultDBName?: string;\n  editNewDb?: boolean;\n}\n\nconst FORM_FIELD_MAP = {\n  host: hostField,\n  port: portField,\n  database: databaseField,\n  username: usernameField,\n  password: passwordField,\n  database_name: displayField,\n  query: queryField,\n  encryption: forceSSLField,\n  credentials_info: EncryptedField,\n  service_account_info: EncryptedField,\n  catalog: TableCatalog,\n  warehouse: validatedInputField,\n  role: validatedInputField,\n  account: validatedInputField,\n};\n\nconst DatabaseConnectionForm = ({\n  dbModel: { parameters },\n  onParametersChange,\n  onChange,\n  onQueryChange,\n  onParametersUploadFileChange,\n  onAddTableCatalog,\n  onRemoveTableCatalog,\n  validationErrors,\n  getValidation,\n  db,\n  isEditMode = false,\n  sslForced,\n  editNewDb,\n}: {\n  isEditMode?: boolean;\n  sslForced: boolean;\n  editNewDb?: boolean;\n  dbModel: DatabaseForm;\n  db: Partial<DatabaseObject> | null;\n  onParametersChange: (\n    event: FormEvent<InputProps> | { target: HTMLInputElement },\n  ) => void;\n  onChange: (\n    event: FormEvent<InputProps> | { target: HTMLInputElement },\n  ) => void;\n  onQueryChange: (\n    event: FormEvent<InputProps> | { target: HTMLInputElement },\n  ) => void;\n  onParametersUploadFileChange?: (\n    event: FormEvent<InputProps> | { target: HTMLInputElement },\n  ) => void;\n  onAddTableCatalog: () => void;\n  onRemoveTableCatalog: (idx: number) => void;\n  validationErrors: JsonObject | null;\n  getValidation: () => void;\n}) => (\n  <Form>\n    <div\n      // @ts-ignore\n      css={(theme: SupersetTheme) => [\n        formScrollableStyles,\n        validatedFormStyles(theme),\n      ]}\n    >\n      {parameters &&\n        FormFieldOrder.filter(\n          (key: string) =>\n            Object.keys(parameters.properties).includes(key) ||\n            key === 'database_name',\n        ).map(field =>\n          FORM_FIELD_MAP[field]({\n            required: parameters.required?.includes(field),\n            changeMethods: {\n              onParametersChange,\n              onChange,\n              onQueryChange,\n              onParametersUploadFileChange,\n              onAddTableCatalog,\n              onRemoveTableCatalog,\n            },\n            validationErrors,\n            getValidation,\n            db,\n            key: field,\n            field,\n            isEditMode,\n            sslForced,\n            editNewDb,\n          }),\n        )}\n    </div>\n  </Form>\n);\nexport const FormFieldMap = FORM_FIELD_MAP;\n\nexport default DatabaseConnectionForm;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { getDatabaseDocumentationLinks } from 'src/views/CRUD/hooks';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport {\n  EditHeaderTitle,\n  EditHeaderSubtitle,\n  StyledFormHeader,\n  StyledStickyHeader,\n} from './styles';\nimport { DatabaseForm, DatabaseObject } from '../types';\n\nconst supersetTextDocs = getDatabaseDocumentationLinks();\n\nexport const DOCUMENTATION_LINK = supersetTextDocs\n  ? supersetTextDocs.support\n  : 'https://superset.apache.org/docs/databases/installing-database-drivers';\n\nconst irregularDocumentationLinks = {\n  postgresql: 'https://superset.apache.org/docs/databases/postgres',\n  mssql: 'https://superset.apache.org/docs/databases/sql-server',\n  gsheets: 'https://superset.apache.org/docs/databases/google-sheets',\n};\n\nconst documentationLink = (engine: string | undefined) => {\n  if (!engine) return null;\n\n  if (supersetTextDocs) {\n    // override doc link for superset_txt yml\n    return supersetTextDocs[engine] || supersetTextDocs.default;\n  }\n\n  if (!irregularDocumentationLinks[engine]) {\n    return `https://superset.apache.org/docs/databases/${engine}`;\n  }\n  return irregularDocumentationLinks[engine];\n};\n\nconst ModalHeader = ({\n  isLoading,\n  isEditMode,\n  useSqlAlchemyForm,\n  hasConnectedDb,\n  db,\n  dbName,\n  dbModel,\n  editNewDb,\n  fileList,\n}: {\n  isLoading: boolean;\n  isEditMode: boolean;\n  useSqlAlchemyForm: boolean;\n  hasConnectedDb: boolean;\n  db: Partial<DatabaseObject> | null;\n  dbName: string;\n  dbModel: DatabaseForm;\n  editNewDb?: boolean;\n  fileList?: UploadFile[];\n  passwordFields?: string[];\n  needsOverwriteConfirm?: boolean;\n}) => {\n  const fileCheck = fileList && fileList?.length > 0;\n\n  const isEditHeader = (\n    <StyledFormHeader>\n      <EditHeaderTitle>{db?.backend}</EditHeaderTitle>\n      <EditHeaderSubtitle>{dbName}</EditHeaderSubtitle>\n    </StyledFormHeader>\n  );\n\n  const useSqlAlchemyFormHeader = (\n    <StyledFormHeader>\n      <p className=\"helper-top\"> STEP 2 OF 2 </p>\n      <h4>Enter Primary Credentials</h4>\n      <p className=\"helper-bottom\">\n        Need help? Learn how to connect your database{' '}\n        <a\n          href={supersetTextDocs?.default || DOCUMENTATION_LINK}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          here\n        </a>\n        .\n      </p>\n    </StyledFormHeader>\n  );\n\n  const hasConnectedDbHeader = (\n    <StyledStickyHeader>\n      <StyledFormHeader>\n        <p className=\"helper-top\"> STEP 3 OF 3 </p>\n        <h4 className=\"step-3-text\">\n          Your database was successfully connected! Here are some optional\n          settings for your database\n        </h4>\n        <p className=\"helper-bottom\">\n          Need help? Learn more about{' '}\n          <a\n            href={documentationLink(db?.engine)}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            connecting to {dbModel.name}.\n          </a>\n        </p>\n      </StyledFormHeader>\n    </StyledStickyHeader>\n  );\n\n  const hasDbHeader = (\n    <StyledStickyHeader>\n      <StyledFormHeader>\n        <p className=\"helper-top\"> STEP 2 OF 3 </p>\n        <h4>Enter the required {dbModel.name} credentials</h4>\n        <p className=\"helper-bottom\">\n          Need help? Learn more about{' '}\n          <a\n            href={documentationLink(db?.engine)}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            connecting to {dbModel.name}.\n          </a>\n        </p>\n      </StyledFormHeader>\n    </StyledStickyHeader>\n  );\n\n  const noDbHeader = (\n    <StyledFormHeader>\n      <div className=\"select-db\">\n        <p className=\"helper-top\"> STEP 1 OF 3 </p>\n        <h4>Select a database to connect</h4>\n      </div>\n    </StyledFormHeader>\n  );\n\n  const importDbHeader = (\n    <StyledStickyHeader>\n      <StyledFormHeader>\n        <p className=\"helper-top\"> STEP 2 OF 2 </p>\n        <h4>Enter the required {dbModel.name} credentials</h4>\n        <p className=\"helper-bottom\">{fileCheck ? fileList[0].name : ''}</p>\n      </StyledFormHeader>\n    </StyledStickyHeader>\n  );\n\n  if (fileCheck) return importDbHeader;\n  if (isLoading) return <></>;\n  if (isEditMode) return isEditHeader;\n  if (useSqlAlchemyForm) return useSqlAlchemyFormHeader;\n  if (hasConnectedDb && !editNewDb) return hasConnectedDbHeader;\n  if (db || editNewDb) return hasDbHeader;\n\n  return noDbHeader;\n};\n\nexport default ModalHeader;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  t,\n  styled,\n  SupersetTheme,\n  FeatureFlag,\n  isFeatureEnabled,\n} from '@superset-ui/core';\nimport React, {\n  FunctionComponent,\n  useEffect,\n  useRef,\n  useState,\n  useReducer,\n  Reducer,\n} from 'react';\nimport { UploadChangeParam, UploadFile } from 'antd/lib/upload/interface';\nimport Tabs from 'src/components/Tabs';\nimport { AntdSelect, Upload } from 'src/components';\nimport Alert from 'src/components/Alert';\nimport Modal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport IconButton from 'src/components/IconButton';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport ValidatedInput from 'src/components/Form/LabeledErrorBoundInput';\nimport {\n  testDatabaseConnection,\n  useSingleViewResource,\n  useAvailableDatabases,\n  useDatabaseValidation,\n  getDatabaseImages,\n  getConnectionAlert,\n  useImportResource,\n} from 'src/views/CRUD/hooks';\nimport { useCommonConf } from 'src/views/CRUD/data/database/state';\nimport {\n  DatabaseObject,\n  DatabaseForm,\n  CONFIGURATION_METHOD,\n  CatalogObject,\n} from 'src/views/CRUD/data/database/types';\nimport Loading from 'src/components/Loading';\nimport ExtraOptions from './ExtraOptions';\nimport SqlAlchemyForm from './SqlAlchemyForm';\nimport DatabaseConnectionForm from './DatabaseConnectionForm';\nimport {\n  antDErrorAlertStyles,\n  antDAlertStyles,\n  antdWarningAlertStyles,\n  StyledAlertMargin,\n  antDModalNoPaddingStyles,\n  antDModalStyles,\n  antDTabsStyles,\n  buttonLinkStyles,\n  importDbButtonLinkStyles,\n  alchemyButtonLinkStyles,\n  TabHeader,\n  formHelperStyles,\n  formStyles,\n  StyledAlignment,\n  SelectDatabaseStyles,\n  infoTooltip,\n  StyledFooterButton,\n  StyledStickyHeader,\n  formScrollableStyles,\n  StyledUploadWrapper,\n} from './styles';\nimport ModalHeader, { DOCUMENTATION_LINK } from './ModalHeader';\n\nenum Engines {\n  GSheet = 'gsheets',\n  Snowflake = 'snowflake',\n}\n\nconst engineSpecificAlertMapping = {\n  [Engines.GSheet]: {\n    message: 'Why do I need to create a database?',\n    description:\n      'To begin using your Google Sheets, you need to create a database first. ' +\n      'Databases are used as a way to identify ' +\n      'your data so that it can be queried and visualized. This ' +\n      'database will hold all of your individual Google Sheets ' +\n      'you choose to connect here.',\n  },\n};\n\nconst TabsStyled = styled(Tabs)`\n  .ant-tabs-content {\n    display: flex;\n    width: 100%;\n    overflow: inherit;\n\n    & > .ant-tabs-tabpane {\n      position: relative;\n    }\n  }\n`;\n\ninterface DatabaseModalProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  onDatabaseAdd?: (database?: DatabaseObject) => void; // TODO: should we add a separate function for edit?\n  onHide: () => void;\n  show: boolean;\n  databaseId: number | undefined; // If included, will go into edit mode\n  dbEngine: string | undefined; // if included goto step 2 with engine already set\n}\n\nenum ActionType {\n  configMethodChange,\n  dbSelected,\n  editorChange,\n  fetched,\n  inputChange,\n  parametersChange,\n  reset,\n  textChange,\n  extraInputChange,\n  extraEditorChange,\n  addTableCatalogSheet,\n  removeTableCatalogSheet,\n  queryChange,\n}\n\ninterface DBReducerPayloadType {\n  target?: string;\n  name: string;\n  json?: {};\n  type?: string;\n  checked?: boolean;\n  value?: string;\n}\n\ntype DBReducerActionType =\n  | {\n      type:\n        | ActionType.extraEditorChange\n        | ActionType.extraInputChange\n        | ActionType.textChange\n        | ActionType.queryChange\n        | ActionType.inputChange\n        | ActionType.editorChange\n        | ActionType.parametersChange;\n      payload: DBReducerPayloadType;\n    }\n  | {\n      type: ActionType.fetched;\n      payload: Partial<DatabaseObject>;\n    }\n  | {\n      type: ActionType.dbSelected;\n      payload: {\n        database_name?: string;\n        engine?: string;\n        configuration_method: CONFIGURATION_METHOD;\n      };\n    }\n  | {\n      type: ActionType.reset | ActionType.addTableCatalogSheet;\n    }\n  | {\n      type: ActionType.removeTableCatalogSheet;\n      payload: {\n        indexToDelete: number;\n      };\n    }\n  | {\n      type: ActionType.configMethodChange;\n      payload: {\n        database_name?: string;\n        engine?: string;\n        configuration_method: CONFIGURATION_METHOD;\n      };\n    };\n\nfunction dbReducer(\n  state: Partial<DatabaseObject> | null,\n  action: DBReducerActionType,\n): Partial<DatabaseObject> | null {\n  const trimmedState = {\n    ...(state || {}),\n  };\n  let query = {};\n  let query_input = '';\n  let deserializeExtraJSON = { allows_virtual_table_explore: true };\n  let extra_json: DatabaseObject['extra_json'];\n\n  switch (action.type) {\n    case ActionType.extraEditorChange:\n      return {\n        ...trimmedState,\n        extra_json: {\n          ...trimmedState.extra_json,\n          [action.payload.name]: action.payload.json,\n        },\n      };\n    case ActionType.extraInputChange:\n      if (\n        action.payload.name === 'schema_cache_timeout' ||\n        action.payload.name === 'table_cache_timeout'\n      ) {\n        return {\n          ...trimmedState,\n          extra_json: {\n            ...trimmedState.extra_json,\n            metadata_cache_timeout: {\n              ...trimmedState.extra_json?.metadata_cache_timeout,\n              [action.payload.name]: action.payload.value,\n            },\n          },\n        };\n      }\n      if (action.payload.name === 'schemas_allowed_for_file_upload') {\n        return {\n          ...trimmedState,\n          extra_json: {\n            ...trimmedState.extra_json,\n            schemas_allowed_for_file_upload: (action.payload.value || '').split(\n              ',',\n            ),\n          },\n        };\n      }\n      return {\n        ...trimmedState,\n        extra_json: {\n          ...trimmedState.extra_json,\n          [action.payload.name]:\n            action.payload.type === 'checkbox'\n              ? action.payload.checked\n              : action.payload.value,\n        },\n      };\n    case ActionType.inputChange:\n      if (action.payload.type === 'checkbox') {\n        return {\n          ...trimmedState,\n          [action.payload.name]: action.payload.checked,\n        };\n      }\n      return {\n        ...trimmedState,\n        [action.payload.name]: action.payload.value,\n      };\n    case ActionType.parametersChange:\n      if (\n        trimmedState.catalog !== undefined &&\n        action.payload.type?.startsWith('catalog')\n      ) {\n        // Formatting wrapping google sheets table catalog\n        const idx = action.payload.type?.split('-')[1];\n        const catalogToUpdate = trimmedState?.catalog[idx] || {};\n        catalogToUpdate[action.payload.name] = action.payload.value;\n\n        const paramatersCatalog = {};\n        // eslint-disable-next-line array-callback-return\n        trimmedState.catalog?.map((item: CatalogObject) => {\n          paramatersCatalog[item.name] = item.value;\n        });\n\n        return {\n          ...trimmedState,\n          parameters: {\n            ...trimmedState.parameters,\n            catalog: paramatersCatalog,\n          },\n        };\n      }\n      return {\n        ...trimmedState,\n        parameters: {\n          ...trimmedState.parameters,\n          [action.payload.name]: action.payload.value,\n        },\n      };\n    case ActionType.addTableCatalogSheet:\n      if (trimmedState.catalog !== undefined) {\n        return {\n          ...trimmedState,\n          catalog: [...trimmedState.catalog, { name: '', value: '' }],\n        };\n      }\n      return {\n        ...trimmedState,\n        catalog: [{ name: '', value: '' }],\n      };\n    case ActionType.removeTableCatalogSheet:\n      trimmedState.catalog?.splice(action.payload.indexToDelete, 1);\n      return {\n        ...trimmedState,\n      };\n    case ActionType.editorChange:\n      return {\n        ...trimmedState,\n        [action.payload.name]: action.payload.json,\n      };\n    case ActionType.queryChange:\n      return {\n        ...trimmedState,\n        parameters: {\n          ...trimmedState.parameters,\n          query: Object.fromEntries(new URLSearchParams(action.payload.value)),\n        },\n        query_input: action.payload.value,\n      };\n    case ActionType.textChange:\n      return {\n        ...trimmedState,\n        [action.payload.name]: action.payload.value,\n      };\n    case ActionType.fetched:\n      // convert all the keys in this payload into strings\n      if (action.payload.extra) {\n        extra_json = {\n          ...JSON.parse(action.payload.extra || ''),\n        } as DatabaseObject['extra_json'];\n\n        deserializeExtraJSON = {\n          ...deserializeExtraJSON,\n          ...JSON.parse(action.payload.extra || ''),\n          metadata_params: JSON.stringify(extra_json?.metadata_params),\n          engine_params: JSON.stringify(extra_json?.engine_params),\n          schemas_allowed_for_file_upload:\n            extra_json?.schemas_allowed_for_file_upload,\n        };\n      }\n\n      // convert query to a string and store in query_input\n      query = action.payload?.parameters?.query || {};\n      query_input = Object.entries(query)\n        .map(([key, value]) => `${key}=${value}`)\n        .join('&');\n\n      if (\n        action.payload.encrypted_extra &&\n        action.payload.configuration_method ===\n          CONFIGURATION_METHOD.DYNAMIC_FORM\n      ) {\n        const engineParamsCatalog = Object.entries(\n          extra_json?.engine_params?.catalog || {},\n        ).map(([key, value]) => ({\n          name: key,\n          value,\n        }));\n        return {\n          ...action.payload,\n          engine: action.payload.backend || trimmedState.engine,\n          configuration_method: action.payload.configuration_method,\n          extra_json: deserializeExtraJSON,\n          catalog: engineParamsCatalog,\n          parameters: action.payload.parameters || trimmedState.parameters,\n          query_input,\n        };\n      }\n      return {\n        ...action.payload,\n        encrypted_extra: action.payload.encrypted_extra || '',\n        engine: action.payload.backend || trimmedState.engine,\n        configuration_method: action.payload.configuration_method,\n        extra_json: deserializeExtraJSON,\n        parameters: action.payload.parameters || trimmedState.parameters,\n        query_input,\n      };\n\n    case ActionType.dbSelected:\n      return {\n        ...action.payload,\n      };\n\n    case ActionType.configMethodChange:\n      return {\n        ...action.payload,\n      };\n\n    case ActionType.reset:\n    default:\n      return null;\n  }\n}\n\nconst DEFAULT_TAB_KEY = '1';\n\nconst serializeExtra = (extraJson: DatabaseObject['extra_json']) =>\n  JSON.stringify({\n    ...extraJson,\n    metadata_params: JSON.parse((extraJson?.metadata_params as string) || '{}'),\n    engine_params: JSON.parse((extraJson?.engine_params as string) || '{}'),\n    schemas_allowed_for_file_upload: (\n      extraJson?.schemas_allowed_for_file_upload || []\n    ).filter(schema => schema !== ''),\n  });\n\nconst DatabaseModal: FunctionComponent<DatabaseModalProps> = ({\n  addDangerToast,\n  addSuccessToast,\n  onDatabaseAdd,\n  onHide,\n  show,\n  databaseId,\n  dbEngine,\n}) => {\n  const [db, setDB] = useReducer<\n    Reducer<Partial<DatabaseObject> | null, DBReducerActionType>\n  >(dbReducer, null);\n  // Database fetch logic\n  const {\n    state: { loading: dbLoading, resource: dbFetched, error: dbErrors },\n    fetchResource,\n    createResource,\n    updateResource,\n    clearError,\n  } = useSingleViewResource<DatabaseObject>(\n    'database',\n    t('database'),\n    addDangerToast,\n  );\n\n  const [tabKey, setTabKey] = useState<string>(DEFAULT_TAB_KEY);\n  const [availableDbs, getAvailableDbs] = useAvailableDatabases();\n  const [validationErrors, getValidation, setValidationErrors] =\n    useDatabaseValidation();\n  const [hasConnectedDb, setHasConnectedDb] = useState<boolean>(false);\n  const [dbName, setDbName] = useState('');\n  const [editNewDb, setEditNewDb] = useState<boolean>(false);\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [testInProgress, setTestInProgress] = useState<boolean>(false);\n  const [passwords, setPasswords] = useState<Record<string, string>>({});\n  const [confirmedOverwrite, setConfirmedOverwrite] = useState<boolean>(false);\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\n  const [importingModal, setImportingModal] = useState<boolean>(false);\n\n  const conf = useCommonConf();\n  const dbImages = getDatabaseImages();\n  const connectionAlert = getConnectionAlert();\n  const isEditMode = !!databaseId;\n  const sslForced = isFeatureEnabled(\n    FeatureFlag.FORCE_DATABASE_CONNECTIONS_SSL,\n  );\n  const hasAlert =\n    connectionAlert || !!(db?.engine && engineSpecificAlertMapping[db.engine]);\n  const useSqlAlchemyForm =\n    db?.configuration_method === CONFIGURATION_METHOD.SQLALCHEMY_URI;\n  const useTabLayout = isEditMode || useSqlAlchemyForm;\n  const isDynamic = (engine: string | undefined) =>\n    availableDbs?.databases?.find(\n      (DB: DatabaseObject) => DB.backend === engine || DB.engine === engine,\n    )?.parameters !== undefined;\n  const showDBError = validationErrors || dbErrors;\n  const isEmpty = (data?: Object | null) =>\n    data && Object.keys(data).length === 0;\n\n  const dbModel: DatabaseForm =\n    availableDbs?.databases?.find(\n      (available: { engine: string | undefined }) =>\n        // TODO: we need a centralized engine in one place\n        available.engine === (isEditMode ? db?.backend : db?.engine),\n    ) || {};\n\n  // Test Connection logic\n  const testConnection = () => {\n    if (!db?.sqlalchemy_uri) {\n      addDangerToast(t('Please enter a SQLAlchemy URI to test'));\n      return;\n    }\n\n    const connection = {\n      sqlalchemy_uri: db?.sqlalchemy_uri || '',\n      database_name: db?.database_name?.trim() || undefined,\n      impersonate_user: db?.impersonate_user || undefined,\n      extra: serializeExtra(db?.extra_json) || undefined,\n      encrypted_extra: db?.encrypted_extra || '',\n      server_cert: db?.server_cert || undefined,\n    };\n    setTestInProgress(true);\n    testDatabaseConnection(\n      connection,\n      (errorMsg: string) => {\n        setTestInProgress(false);\n        addDangerToast(errorMsg);\n      },\n      (errorMsg: string) => {\n        setTestInProgress(false);\n        addSuccessToast(errorMsg);\n      },\n    );\n  };\n\n  const removeFile = (removedFile: UploadFile) => {\n    setFileList(fileList.filter(file => file.uid !== removedFile.uid));\n    return false;\n  };\n\n  const onClose = () => {\n    setDB({ type: ActionType.reset });\n    setHasConnectedDb(false);\n    setValidationErrors(null); // reset validation errors on close\n    clearError();\n    setEditNewDb(false);\n    setFileList([]);\n    setImportingModal(false);\n    setPasswords({});\n    setConfirmedOverwrite(false);\n    onHide();\n  };\n\n  // Database import logic\n  const {\n    state: {\n      alreadyExists,\n      passwordsNeeded,\n      loading: importLoading,\n      failed: importErrored,\n    },\n    importResource,\n  } = useImportResource('database', t('database'), msg => {\n    addDangerToast(msg);\n    onClose();\n  });\n\n  const onChange = (type: any, payload: any) => {\n    setDB({ type, payload } as DBReducerActionType);\n  };\n\n  const onSave = async () => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { id, ...update } = db || {};\n    // Clone DB object\n    const dbToUpdate = JSON.parse(JSON.stringify(update));\n\n    if (dbToUpdate.configuration_method === CONFIGURATION_METHOD.DYNAMIC_FORM) {\n      // Validate DB before saving\n      const errors = await getValidation(dbToUpdate, true);\n      if ((validationErrors && !isEmpty(validationErrors)) || errors) {\n        return;\n      }\n      const parameters_schema = isEditMode\n        ? dbToUpdate.parameters_schema.properties\n        : dbModel?.parameters.properties;\n      const additionalEncryptedExtra = JSON.parse(\n        dbToUpdate.encrypted_extra || '{}',\n      );\n      const paramConfigArray = Object.keys(parameters_schema || {});\n\n      paramConfigArray.forEach(paramConfig => {\n        /*\n         * Parameters that are annotated with the `x-encrypted-extra` properties should be moved to\n         * `encrypted_extra`, so that they are stored encrypted in the backend when the database is\n         * created or edited.\n         */\n        if (\n          parameters_schema[paramConfig]['x-encrypted-extra'] &&\n          dbToUpdate.parameters?.[paramConfig]\n        ) {\n          if (typeof dbToUpdate.parameters?.[paramConfig] === 'object') {\n            // add new encrypted extra to encrypted_extra object\n            additionalEncryptedExtra[paramConfig] =\n              dbToUpdate.parameters?.[paramConfig];\n            // The backend expects `encrypted_extra` as a string for historical reasons.\n            dbToUpdate.parameters[paramConfig] = JSON.stringify(\n              dbToUpdate.parameters[paramConfig],\n            );\n          } else {\n            additionalEncryptedExtra[paramConfig] = JSON.parse(\n              dbToUpdate.parameters?.[paramConfig] || '{}',\n            );\n          }\n        }\n      });\n      // cast the new encrypted extra object into a string\n      dbToUpdate.encrypted_extra = JSON.stringify(additionalEncryptedExtra);\n      // this needs to be added by default to gsheets\n      if (dbToUpdate.engine === Engines.GSheet) {\n        dbToUpdate.impersonate_user = true;\n      }\n    }\n\n    if (dbToUpdate?.parameters?.catalog) {\n      // need to stringify gsheets catalog to allow it to be seralized\n      dbToUpdate.extra_json = {\n        engine_params: JSON.stringify({\n          catalog: dbToUpdate.parameters.catalog,\n        }),\n      };\n    }\n\n    if (dbToUpdate?.extra_json) {\n      // convert extra_json to back to string\n      dbToUpdate.extra = serializeExtra(dbToUpdate?.extra_json);\n    }\n\n    setLoading(true);\n    if (db?.id) {\n      const result = await updateResource(\n        db.id as number,\n        dbToUpdate as DatabaseObject,\n        dbToUpdate.configuration_method === CONFIGURATION_METHOD.DYNAMIC_FORM, // onShow toast on SQLA Forms\n      );\n      if (result) {\n        if (onDatabaseAdd) onDatabaseAdd();\n        if (!editNewDb) {\n          onClose();\n          addSuccessToast(t('Database settings updated'));\n        }\n      }\n    } else if (db) {\n      // Create\n      const dbId = await createResource(\n        dbToUpdate as DatabaseObject,\n        dbToUpdate.configuration_method === CONFIGURATION_METHOD.DYNAMIC_FORM, // onShow toast on SQLA Forms\n      );\n      if (dbId) {\n        setHasConnectedDb(true);\n        if (onDatabaseAdd) onDatabaseAdd();\n        if (useTabLayout) {\n          // tab layout only has one step\n          // so it should close immediately on save\n          onClose();\n          addSuccessToast(t('Database connected'));\n        }\n      }\n    } else {\n      // Import - doesn't use db state\n      setImportingModal(true);\n\n      if (!(fileList[0].originFileObj instanceof File)) {\n        return;\n      }\n\n      const dbId = await importResource(\n        fileList[0].originFileObj,\n        passwords,\n        confirmedOverwrite,\n      );\n      if (dbId) {\n        if (onDatabaseAdd) onDatabaseAdd();\n        onClose();\n        addSuccessToast(t('Database connected'));\n      }\n    }\n\n    setEditNewDb(false);\n    setLoading(false);\n  };\n\n  // Initialize\n  const fetchDB = () => {\n    if (isEditMode && databaseId) {\n      if (!dbLoading) {\n        fetchResource(databaseId).catch(e =>\n          addDangerToast(\n            t(\n              'Sorry there was an error fetching database information: %s',\n              e.message,\n            ),\n          ),\n        );\n      }\n    }\n  };\n\n  const setDatabaseModel = (database_name: string) => {\n    if (database_name === 'Other') {\n      // Allow users to connect to DB via legacy SQLA form\n      setDB({\n        type: ActionType.dbSelected,\n        payload: {\n          database_name,\n          configuration_method: CONFIGURATION_METHOD.SQLALCHEMY_URI,\n          engine: undefined,\n        },\n      });\n    } else {\n      const selectedDbModel = availableDbs?.databases.filter(\n        (db: DatabaseObject) => db.name === database_name,\n      )[0];\n      const { engine, parameters } = selectedDbModel;\n      const isDynamic = parameters !== undefined;\n      setDB({\n        type: ActionType.dbSelected,\n        payload: {\n          database_name,\n          engine,\n          configuration_method: isDynamic\n            ? CONFIGURATION_METHOD.DYNAMIC_FORM\n            : CONFIGURATION_METHOD.SQLALCHEMY_URI,\n        },\n      });\n    }\n\n    setDB({ type: ActionType.addTableCatalogSheet });\n  };\n\n  const renderAvailableSelector = () => (\n    <div className=\"available\">\n      <h4 className=\"available-label\">\n        {t('Or choose from a list of other databases we support:')}\n      </h4>\n      <div className=\"control-label\">{t('Supported databases')}</div>\n      <AntdSelect\n        className=\"available-select\"\n        onChange={setDatabaseModel}\n        placeholder={t('Choose a database...')}\n        showSearch\n      >\n        {[...(availableDbs?.databases || [])]\n          ?.sort((a: DatabaseForm, b: DatabaseForm) =>\n            a.name.localeCompare(b.name),\n          )\n          .map((database: DatabaseForm) => (\n            <AntdSelect.Option value={database.name} key={database.name}>\n              {database.name}\n            </AntdSelect.Option>\n          ))}\n        {/* Allow users to connect to DB via legacy SQLA form */}\n        <AntdSelect.Option value=\"Other\" key=\"Other\">\n          {t('Other')}\n        </AntdSelect.Option>\n      </AntdSelect>\n      <Alert\n        showIcon\n        closable={false}\n        css={(theme: SupersetTheme) => antDAlertStyles(theme)}\n        type=\"info\"\n        message={\n          connectionAlert?.ADD_DATABASE?.message ||\n          t('Want to add a new database?')\n        }\n        description={\n          connectionAlert?.ADD_DATABASE ? (\n            <>\n              {t(\n                'Any databases that allow connections via SQL Alchemy URIs can be added. ',\n              )}\n              <a\n                href={connectionAlert?.ADD_DATABASE.contact_link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {connectionAlert?.ADD_DATABASE.contact_description_link}\n              </a>{' '}\n              {connectionAlert?.ADD_DATABASE.description}\n            </>\n          ) : (\n            <>\n              {t(\n                'Any databases that allow connections via SQL Alchemy URIs can be added. Learn about how to connect a database driver ',\n              )}\n              <a\n                href={DOCUMENTATION_LINK}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {t('here')}\n              </a>\n              .\n            </>\n          )\n        }\n      />\n    </div>\n  );\n\n  const renderPreferredSelector = () => (\n    <div className=\"preferred\">\n      {availableDbs?.databases\n        ?.filter((db: DatabaseForm) => db.preferred)\n        .map((database: DatabaseForm) => (\n          <IconButton\n            className=\"preferred-item\"\n            onClick={() => setDatabaseModel(database.name)}\n            buttonText={database.name}\n            icon={dbImages?.[database.engine]}\n          />\n        ))}\n    </div>\n  );\n\n  const handleBackButtonOnFinish = () => {\n    if (dbFetched) {\n      fetchResource(dbFetched.id as number);\n    }\n    setEditNewDb(true);\n  };\n\n  const handleBackButtonOnConnect = () => {\n    if (editNewDb) setHasConnectedDb(false);\n    if (importingModal) setImportingModal(false);\n    setDB({ type: ActionType.reset });\n    setFileList([]);\n  };\n\n  const handleDisableOnImport = () => {\n    if (\n      importLoading ||\n      (alreadyExists.length && !confirmedOverwrite) ||\n      (passwordsNeeded.length && JSON.stringify(passwords) === '{}')\n    )\n      return true;\n    return false;\n  };\n\n  const renderModalFooter = () => {\n    if (db) {\n      // if db show back + connenct\n      if (!hasConnectedDb || editNewDb) {\n        return (\n          <>\n            <StyledFooterButton key=\"back\" onClick={handleBackButtonOnConnect}>\n              {t('Back')}\n            </StyledFooterButton>\n            <StyledFooterButton\n              key=\"submit\"\n              buttonStyle=\"primary\"\n              onClick={onSave}\n            >\n              {t('Connect')}\n            </StyledFooterButton>\n          </>\n        );\n      }\n\n      return (\n        <>\n          <StyledFooterButton key=\"back\" onClick={handleBackButtonOnFinish}>\n            {t('Back')}\n          </StyledFooterButton>\n          <StyledFooterButton\n            key=\"submit\"\n            buttonStyle=\"primary\"\n            onClick={onSave}\n            data-test=\"modal-confirm-button\"\n          >\n            {t('Finish')}\n          </StyledFooterButton>\n        </>\n      );\n    }\n\n    // Import doesn't use db state, so footer will not render in the if statement above\n    if (importingModal) {\n      return (\n        <>\n          <StyledFooterButton key=\"back\" onClick={handleBackButtonOnConnect}>\n            {t('Back')}\n          </StyledFooterButton>\n          <StyledFooterButton\n            key=\"submit\"\n            buttonStyle=\"primary\"\n            onClick={onSave}\n            disabled={handleDisableOnImport()}\n          >\n            {t('Connect')}\n          </StyledFooterButton>\n        </>\n      );\n    }\n\n    return [];\n  };\n\n  const renderEditModalFooter = (db: Partial<DatabaseObject> | null) => (\n    <>\n      <StyledFooterButton key=\"close\" onClick={onClose}>\n        {t('Close')}\n      </StyledFooterButton>\n      <StyledFooterButton\n        key=\"submit\"\n        buttonStyle=\"primary\"\n        onClick={onSave}\n        disabled={db?.is_managed_externally}\n        tooltip={\n          db?.is_managed_externally\n            ? t(\n                \"This database is managed externally, and can't be edited in Superset\",\n              )\n            : ''\n        }\n      >\n        {t('Finish')}\n      </StyledFooterButton>\n    </>\n  );\n\n  const firstUpdate = useRef(true); // Captures first render\n  // Only runs when importing files don't need user input\n  useEffect(() => {\n    // Will not run on first render\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n\n    if (\n      !importLoading &&\n      !alreadyExists.length &&\n      !passwordsNeeded.length &&\n      !isLoading && // This prevents a double toast for non-related imports\n      !importErrored // This prevents a success toast on error\n    ) {\n      onClose();\n      addSuccessToast(t('Database connected'));\n    }\n  }, [alreadyExists, passwordsNeeded, importLoading, importErrored]);\n\n  useEffect(() => {\n    if (show) {\n      setTabKey(DEFAULT_TAB_KEY);\n      getAvailableDbs();\n      setLoading(true);\n    }\n    if (databaseId && show) {\n      fetchDB();\n    }\n  }, [show, databaseId]);\n\n  useEffect(() => {\n    if (dbFetched) {\n      setDB({\n        type: ActionType.fetched,\n        payload: dbFetched,\n      });\n      // keep a copy of the name separate for display purposes\n      // because it shouldn't change when the form is updated\n      setDbName(dbFetched.database_name);\n    }\n  }, [dbFetched]);\n\n  useEffect(() => {\n    if (isLoading) {\n      setLoading(false);\n    }\n\n    if (availableDbs && dbEngine) {\n      // set model if passed into props\n      setDatabaseModel(dbEngine);\n    }\n  }, [availableDbs]);\n\n  // This forces the modal to scroll until the importing filename is in view\n  useEffect(() => {\n    if (importingModal) {\n      document\n        .getElementsByClassName('ant-upload-list-item-name')[0]\n        .scrollIntoView();\n    }\n  }, [importingModal]);\n\n  const onDbImport = async (info: UploadChangeParam) => {\n    setImportingModal(true);\n    setFileList([\n      {\n        ...info.file,\n        status: 'done',\n      },\n    ]);\n\n    if (!(info.file.originFileObj instanceof File)) return;\n    await importResource(\n      info.file.originFileObj,\n      passwords,\n      confirmedOverwrite,\n    );\n  };\n\n  const passwordNeededField = () => {\n    if (!passwordsNeeded.length) return null;\n\n    return passwordsNeeded.map(database => (\n      <>\n        <StyledAlertMargin>\n          <Alert\n            closable={false}\n            css={(theme: SupersetTheme) => antDAlertStyles(theme)}\n            type=\"info\"\n            showIcon\n            message=\"Database passwords\"\n            description={t(\n              `The passwords for the databases below are needed in order to import them. Please note that the \"Secure Extra\" and \"Certificate\" sections of the database configuration are not present in explore files and should be added manually after the import if they are needed.`,\n            )}\n          />\n        </StyledAlertMargin>\n        <ValidatedInput\n          id=\"password_needed\"\n          name=\"password_needed\"\n          required\n          value={passwords[database]}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            setPasswords({ ...passwords, [database]: event.target.value })\n          }\n          validationMethods={{ onBlur: () => {} }}\n          errorMessage={validationErrors?.password_needed}\n          label={t('%s PASSWORD', database.slice(10))}\n          css={formScrollableStyles}\n        />\n      </>\n    ));\n  };\n\n  const confirmOverwrite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const targetValue = (event.currentTarget?.value as string) ?? '';\n    setConfirmedOverwrite(targetValue.toUpperCase() === t('OVERWRITE'));\n  };\n\n  const confirmOverwriteField = () => {\n    if (!alreadyExists.length) return null;\n\n    return (\n      <>\n        <StyledAlertMargin>\n          <Alert\n            closable={false}\n            css={(theme: SupersetTheme) => antdWarningAlertStyles(theme)}\n            type=\"warning\"\n            showIcon\n            message=\"\"\n            description={t(\n              'You are importing one or more databases that already exist. Overwriting might cause you to lose some of your work. Are you sure you want to overwrite?',\n            )}\n          />\n        </StyledAlertMargin>\n        <ValidatedInput\n          id=\"confirm_overwrite\"\n          name=\"confirm_overwrite\"\n          required\n          validationMethods={{ onBlur: () => {} }}\n          errorMessage={validationErrors?.confirm_overwrite}\n          label={t(`TYPE \"OVERWRITE\" TO CONFIRM`)}\n          onChange={confirmOverwrite}\n          css={formScrollableStyles}\n        />\n      </>\n    );\n  };\n\n  const tabChange = (key: string) => setTabKey(key);\n\n  const renderStepTwoAlert = () => {\n    const { hostname } = window.location;\n    let ipAlert = connectionAlert?.REGIONAL_IPS?.default || '';\n    const regionalIPs = connectionAlert?.REGIONAL_IPS || {};\n    Object.entries(regionalIPs).forEach(([ipRegion, ipRange]) => {\n      const regex = new RegExp(ipRegion);\n      if (hostname.match(regex)) ipAlert = ipRange;\n    });\n    return (\n      db?.engine && (\n        <StyledAlertMargin>\n          <Alert\n            closable={false}\n            css={(theme: SupersetTheme) => antDAlertStyles(theme)}\n            type=\"info\"\n            showIcon\n            message={\n              engineSpecificAlertMapping[db.engine]?.message ||\n              connectionAlert?.DEFAULT?.message\n            }\n            description={\n              engineSpecificAlertMapping[db.engine]?.description ||\n              connectionAlert?.DEFAULT?.description + ipAlert\n            }\n          />\n        </StyledAlertMargin>\n      )\n    );\n  };\n\n  // eslint-disable-next-line consistent-return\n  const errorAlert = () => {\n    let alertErrors: string[] = [];\n    if (isEmpty(dbErrors) === false) {\n      alertErrors = typeof dbErrors === 'object' ? Object.values(dbErrors) : [];\n    } else if (db?.engine === Engines.Snowflake) {\n      alertErrors =\n        validationErrors?.error_type === 'GENERIC_DB_ENGINE_ERROR'\n          ? [validationErrors?.description]\n          : [];\n    }\n\n    if (alertErrors.length) {\n      return (\n        <Alert\n          type=\"error\"\n          css={(theme: SupersetTheme) => antDErrorAlertStyles(theme)}\n          message={t('Database Creation Error')}\n          description={t(alertErrors[0])}\n        />\n      );\n    }\n    return <></>;\n  };\n\n  const renderFinishState = () => {\n    if (!editNewDb) {\n      return (\n        <ExtraOptions\n          db={db as DatabaseObject}\n          onInputChange={({ target }: { target: HTMLInputElement }) =>\n            onChange(ActionType.inputChange, {\n              type: target.type,\n              name: target.name,\n              checked: target.checked,\n              value: target.value,\n            })\n          }\n          onTextChange={({ target }: { target: HTMLTextAreaElement }) =>\n            onChange(ActionType.textChange, {\n              name: target.name,\n              value: target.value,\n            })\n          }\n          onEditorChange={(payload: { name: string; json: any }) =>\n            onChange(ActionType.editorChange, payload)\n          }\n          onExtraInputChange={({ target }: { target: HTMLInputElement }) => {\n            onChange(ActionType.extraInputChange, {\n              type: target.type,\n              name: target.name,\n              checked: target.checked,\n              value: target.value,\n            });\n          }}\n          onExtraEditorChange={(payload: { name: string; json: any }) =>\n            onChange(ActionType.extraEditorChange, payload)\n          }\n        />\n      );\n    }\n    return (\n      <DatabaseConnectionForm\n        isEditMode\n        sslForced={sslForced}\n        dbModel={dbModel}\n        db={db as DatabaseObject}\n        onParametersChange={({ target }: { target: HTMLInputElement }) =>\n          onChange(ActionType.parametersChange, {\n            type: target.type,\n            name: target.name,\n            checked: target.checked,\n            value: target.value,\n          })\n        }\n        onChange={({ target }: { target: HTMLInputElement }) =>\n          onChange(ActionType.textChange, {\n            name: target.name,\n            value: target.value,\n          })\n        }\n        onQueryChange={({ target }: { target: HTMLInputElement }) =>\n          onChange(ActionType.queryChange, {\n            name: target.name,\n            value: target.value,\n          })\n        }\n        onAddTableCatalog={() =>\n          setDB({ type: ActionType.addTableCatalogSheet })\n        }\n        onRemoveTableCatalog={(idx: number) =>\n          setDB({\n            type: ActionType.removeTableCatalogSheet,\n            payload: { indexToDelete: idx },\n          })\n        }\n        getValidation={() => getValidation(db)}\n        validationErrors={validationErrors}\n      />\n    );\n  };\n\n  if (fileList.length > 0 && (alreadyExists.length || passwordsNeeded.length)) {\n    return (\n      <Modal\n        css={(theme: SupersetTheme) => [\n          antDModalNoPaddingStyles,\n          antDModalStyles(theme),\n          formHelperStyles(theme),\n          formStyles(theme),\n        ]}\n        name=\"database\"\n        onHandledPrimaryAction={onSave}\n        onHide={onClose}\n        primaryButtonName={t('Connect')}\n        width=\"500px\"\n        centered\n        show={show}\n        title={<h4>{t('Connect a database')}</h4>}\n        footer={renderModalFooter()}\n      >\n        <ModalHeader\n          isLoading={isLoading}\n          isEditMode={isEditMode}\n          useSqlAlchemyForm={useSqlAlchemyForm}\n          hasConnectedDb={hasConnectedDb}\n          db={db}\n          dbName={dbName}\n          dbModel={dbModel}\n          fileList={fileList}\n        />\n        {passwordNeededField()}\n        {confirmOverwriteField()}\n      </Modal>\n    );\n  }\n\n  return useTabLayout ? (\n    <Modal\n      css={(theme: SupersetTheme) => [\n        antDTabsStyles,\n        antDModalNoPaddingStyles,\n        antDModalStyles(theme),\n        formHelperStyles(theme),\n        formStyles(theme),\n      ]}\n      name=\"database\"\n      data-test=\"database-modal\"\n      onHandledPrimaryAction={onSave}\n      onHide={onClose}\n      primaryButtonName={isEditMode ? t('Save') : t('Connect')}\n      width=\"500px\"\n      centered\n      show={show}\n      title={\n        <h4>{isEditMode ? t('Edit database') : t('Connect a database')}</h4>\n      }\n      footer={isEditMode ? renderEditModalFooter(db) : renderModalFooter()}\n    >\n      <StyledStickyHeader>\n        <TabHeader>\n          <ModalHeader\n            isLoading={isLoading}\n            isEditMode={isEditMode}\n            useSqlAlchemyForm={useSqlAlchemyForm}\n            hasConnectedDb={hasConnectedDb}\n            db={db}\n            dbName={dbName}\n            dbModel={dbModel}\n          />\n        </TabHeader>\n      </StyledStickyHeader>\n      <TabsStyled\n        defaultActiveKey={DEFAULT_TAB_KEY}\n        activeKey={tabKey}\n        onTabClick={tabChange}\n        animated={{ inkBar: true, tabPane: true }}\n      >\n        <Tabs.TabPane tab={<span>{t('Basic')}</span>} key=\"1\">\n          {useSqlAlchemyForm ? (\n            <StyledAlignment>\n              <SqlAlchemyForm\n                db={db as DatabaseObject}\n                onInputChange={({ target }: { target: HTMLInputElement }) =>\n                  onChange(ActionType.inputChange, {\n                    type: target.type,\n                    name: target.name,\n                    checked: target.checked,\n                    value: target.value,\n                  })\n                }\n                conf={conf}\n                testConnection={testConnection}\n                testInProgress={testInProgress}\n              />\n              {isDynamic(db?.backend || db?.engine) && !isEditMode && (\n                <div css={(theme: SupersetTheme) => infoTooltip(theme)}>\n                  <Button\n                    buttonStyle=\"link\"\n                    onClick={() =>\n                      setDB({\n                        type: ActionType.configMethodChange,\n                        payload: {\n                          database_name: db?.database_name,\n                          configuration_method:\n                            CONFIGURATION_METHOD.DYNAMIC_FORM,\n                          engine: db?.engine,\n                        },\n                      })\n                    }\n                    css={theme => alchemyButtonLinkStyles(theme)}\n                  >\n                    {t('Connect this database using the dynamic form instead')}\n                  </Button>\n                  <InfoTooltip\n                    tooltip={t(\n                      'Click this link to switch to an alternate form that exposes only the required fields needed to connect this database.',\n                    )}\n                    viewBox=\"0 -6 24 24\"\n                  />\n                </div>\n              )}\n            </StyledAlignment>\n          ) : (\n            <DatabaseConnectionForm\n              isEditMode\n              sslForced={sslForced}\n              dbModel={dbModel}\n              db={db as DatabaseObject}\n              onParametersChange={({ target }: { target: HTMLInputElement }) =>\n                onChange(ActionType.parametersChange, {\n                  type: target.type,\n                  name: target.name,\n                  checked: target.checked,\n                  value: target.value,\n                })\n              }\n              onChange={({ target }: { target: HTMLInputElement }) =>\n                onChange(ActionType.textChange, {\n                  name: target.name,\n                  value: target.value,\n                })\n              }\n              onQueryChange={({ target }: { target: HTMLInputElement }) =>\n                onChange(ActionType.queryChange, {\n                  name: target.name,\n                  value: target.value,\n                })\n              }\n              onAddTableCatalog={() =>\n                setDB({ type: ActionType.addTableCatalogSheet })\n              }\n              onRemoveTableCatalog={(idx: number) =>\n                setDB({\n                  type: ActionType.removeTableCatalogSheet,\n                  payload: { indexToDelete: idx },\n                })\n              }\n              getValidation={() => getValidation(db)}\n              validationErrors={validationErrors}\n            />\n          )}\n          {!isEditMode && (\n            <StyledAlertMargin>\n              <Alert\n                closable={false}\n                css={(theme: SupersetTheme) => antDAlertStyles(theme)}\n                message=\"Additional fields may be required\"\n                showIcon\n                description={\n                  <>\n                    {t(\n                      'Select databases require additional fields to be completed in the Advanced tab to successfully connect the database. Learn what requirements your databases has ',\n                    )}\n                    <a\n                      href={DOCUMENTATION_LINK}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"additional-fields-alert-description\"\n                    >\n                      {t('here')}\n                    </a>\n                    .\n                  </>\n                }\n                type=\"info\"\n              />\n            </StyledAlertMargin>\n          )}\n        </Tabs.TabPane>\n        <Tabs.TabPane tab={<span>{t('Advanced')}</span>} key=\"2\">\n          <ExtraOptions\n            db={db as DatabaseObject}\n            onInputChange={({ target }: { target: HTMLInputElement }) =>\n              onChange(ActionType.inputChange, {\n                type: target.type,\n                name: target.name,\n                checked: target.checked,\n                value: target.value,\n              })\n            }\n            onTextChange={({ target }: { target: HTMLTextAreaElement }) =>\n              onChange(ActionType.textChange, {\n                name: target.name,\n                value: target.value,\n              })\n            }\n            onEditorChange={(payload: { name: string; json: any }) =>\n              onChange(ActionType.editorChange, payload)\n            }\n            onExtraInputChange={({ target }: { target: HTMLInputElement }) => {\n              onChange(ActionType.extraInputChange, {\n                type: target.type,\n                name: target.name,\n                checked: target.checked,\n                value: target.value,\n              });\n            }}\n            onExtraEditorChange={(payload: { name: string; json: any }) => {\n              onChange(ActionType.extraEditorChange, payload);\n            }}\n          />\n          {showDBError && errorAlert()}\n        </Tabs.TabPane>\n      </TabsStyled>\n    </Modal>\n  ) : (\n    <Modal\n      css={(theme: SupersetTheme) => [\n        antDModalNoPaddingStyles,\n        antDModalStyles(theme),\n        formHelperStyles(theme),\n        formStyles(theme),\n      ]}\n      name=\"database\"\n      onHandledPrimaryAction={onSave}\n      onHide={onClose}\n      primaryButtonName={hasConnectedDb ? t('Finish') : t('Connect')}\n      width=\"500px\"\n      centered\n      show={show}\n      title={<h4>{t('Connect a database')}</h4>}\n      footer={renderModalFooter()}\n    >\n      {hasConnectedDb ? (\n        <>\n          <ModalHeader\n            isLoading={isLoading}\n            isEditMode={isEditMode}\n            useSqlAlchemyForm={useSqlAlchemyForm}\n            hasConnectedDb={hasConnectedDb}\n            db={db}\n            dbName={dbName}\n            dbModel={dbModel}\n            editNewDb={editNewDb}\n          />\n          {renderFinishState()}\n        </>\n      ) : (\n        <>\n          {/* Dynamic Form Step 1 */}\n          {!isLoading &&\n            (!db ? (\n              <SelectDatabaseStyles>\n                <ModalHeader\n                  isLoading={isLoading}\n                  isEditMode={isEditMode}\n                  useSqlAlchemyForm={useSqlAlchemyForm}\n                  hasConnectedDb={hasConnectedDb}\n                  db={db}\n                  dbName={dbName}\n                  dbModel={dbModel}\n                />\n                {renderPreferredSelector()}\n                {renderAvailableSelector()}\n                <StyledUploadWrapper>\n                  <Upload\n                    name=\"databaseFile\"\n                    id=\"databaseFile\"\n                    data-test=\"database-file-input\"\n                    accept=\".yaml,.json,.yml,.zip\"\n                    customRequest={() => {}}\n                    onChange={onDbImport}\n                    onRemove={removeFile}\n                  >\n                    <Button\n                      data-test=\"import-database-btn\"\n                      buttonStyle=\"link\"\n                      type=\"link\"\n                      css={importDbButtonLinkStyles}\n                    >\n                      {t('Import database from file')}\n                    </Button>\n                  </Upload>\n                </StyledUploadWrapper>\n              </SelectDatabaseStyles>\n            ) : (\n              <>\n                <ModalHeader\n                  isLoading={isLoading}\n                  isEditMode={isEditMode}\n                  useSqlAlchemyForm={useSqlAlchemyForm}\n                  hasConnectedDb={hasConnectedDb}\n                  db={db}\n                  dbName={dbName}\n                  dbModel={dbModel}\n                />\n                {hasAlert && renderStepTwoAlert()}\n                <DatabaseConnectionForm\n                  db={db}\n                  sslForced={sslForced}\n                  dbModel={dbModel}\n                  onAddTableCatalog={() => {\n                    setDB({ type: ActionType.addTableCatalogSheet });\n                  }}\n                  onQueryChange={({ target }: { target: HTMLInputElement }) =>\n                    onChange(ActionType.queryChange, {\n                      name: target.name,\n                      value: target.value,\n                    })\n                  }\n                  onRemoveTableCatalog={(idx: number) => {\n                    setDB({\n                      type: ActionType.removeTableCatalogSheet,\n                      payload: { indexToDelete: idx },\n                    });\n                  }}\n                  onParametersChange={({\n                    target,\n                  }: {\n                    target: HTMLInputElement;\n                  }) =>\n                    onChange(ActionType.parametersChange, {\n                      type: target.type,\n                      name: target.name,\n                      checked: target.checked,\n                      value: target.value,\n                    })\n                  }\n                  onChange={({ target }: { target: HTMLInputElement }) =>\n                    onChange(ActionType.textChange, {\n                      name: target.name,\n                      value: target.value,\n                    })\n                  }\n                  getValidation={() => getValidation(db)}\n                  validationErrors={validationErrors}\n                />\n                <div css={(theme: SupersetTheme) => infoTooltip(theme)}>\n                  {dbModel.engine !== Engines.GSheet && (\n                    <>\n                      <Button\n                        data-test=\"sqla-connect-btn\"\n                        buttonStyle=\"link\"\n                        onClick={() =>\n                          setDB({\n                            type: ActionType.configMethodChange,\n                            payload: {\n                              engine: db.engine,\n                              configuration_method:\n                                CONFIGURATION_METHOD.SQLALCHEMY_URI,\n                              database_name: db.database_name,\n                            },\n                          })\n                        }\n                        css={buttonLinkStyles}\n                      >\n                        {t(\n                          'Connect this database with a SQLAlchemy URI string instead',\n                        )}\n                      </Button>\n                      <InfoTooltip\n                        tooltip={t(\n                          'Click this link to switch to an alternate form that allows you to input the SQLAlchemy URL for this database manually.',\n                        )}\n                        viewBox=\"0 -6 24 24\"\n                      />\n                    </>\n                  )}\n                </div>\n                {/* Step 2 */}\n                {showDBError && errorAlert()}\n              </>\n            ))}\n        </>\n      )}\n      {isLoading && <Loading />}\n    </Modal>\n  );\n};\n\nexport default withToasts(DatabaseModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { useSelector } from 'react-redux';\nimport { ViewState } from 'src/views/types';\n\nexport function useCommonConf() {\n  return useSelector((state: ViewState) => state?.common?.conf);\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { MainNav as Menu } from 'src/components/Menu';\nimport { styled } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\n\nconst { SubMenu } = Menu;\n\nexport interface Languages {\n  [key: string]: {\n    flag: string;\n    url: string;\n    name: string;\n  };\n}\n\ninterface LanguagePickerProps {\n  locale: string;\n  languages: Languages;\n}\n\nconst StyledLabel = styled.div`\n  display: flex;\n  align-items: center;\n\n  & i {\n    margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  & a {\n    display: block;\n    width: 150px;\n    word-wrap: break-word;\n    text-decoration: none;\n  }\n`;\n\nconst StyledFlag = styled.i`\n  margin-top: 2px;\n`;\n\nexport default function LanguagePicker(props: LanguagePickerProps) {\n  const { locale, languages, ...rest } = props;\n  return (\n    <SubMenu\n      aria-label=\"Languages\"\n      title={\n        <div className=\"f16\">\n          <StyledFlag className={`flag ${languages[locale].flag}`} />\n        </div>\n      }\n      icon={<Icons.TriangleDown />}\n      {...rest}\n    >\n      {Object.keys(languages).map(langKey => (\n        <Menu.Item\n          key={langKey}\n          style={{ whiteSpace: 'normal', height: 'auto' }}\n        >\n          <StyledLabel className=\"f16\">\n            <i className={`flag ${languages[langKey].flag}`} />\n            <a href={languages[langKey].url}>{languages[langKey].name}</a>\n          </StyledLabel>\n        </Menu.Item>\n      ))}\n    </SubMenu>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { NavBarProps, MenuObjectProps } from './Menu';\n\nexport interface ExtentionConfigs {\n  ALLOWED_EXTENSIONS: Array<any>;\n  CSV_EXTENSIONS: Array<any>;\n  COLUMNAR_EXTENSIONS: Array<any>;\n  EXCEL_EXTENSIONS: Array<any>;\n  HAS_GSHEETS_INSTALLED: boolean;\n}\nexport interface RightMenuProps {\n  align: 'flex-start' | 'flex-end';\n  settings: MenuObjectProps[];\n  navbarRight: NavBarProps;\n  isFrontendRoute: (path?: string) => boolean;\n}\n\nexport enum GlobalMenuDataOptions {\n  GOOGLE_SHEETS = 'gsheets',\n  DB_CONNECTION = 'dbconnection',\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Fragment, useState, useEffect } from 'react';\nimport rison from 'rison';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useQueryParams, BooleanParam } from 'use-query-params';\n\nimport {\n  t,\n  styled,\n  css,\n  SupersetTheme,\n  SupersetClient,\n} from '@superset-ui/core';\nimport { MainNav as Menu } from 'src/components/Menu';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport findPermission, { isUserAdmin } from 'src/dashboard/util/findPermission';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport { RootState } from 'src/dashboard/types';\nimport LanguagePicker from './LanguagePicker';\nimport DatabaseModal from '../CRUD/data/database/DatabaseModal';\nimport { uploadUserPerms } from '../CRUD/utils';\nimport {\n  ExtentionConfigs,\n  GlobalMenuDataOptions,\n  RightMenuProps,\n} from './types';\nimport { MenuObjectProps } from './Menu';\n\nconst versionInfoStyles = (theme: SupersetTheme) => css`\n  padding: ${theme.gridUnit * 1.5}px ${theme.gridUnit * 4}px\n    ${theme.gridUnit * 4}px ${theme.gridUnit * 7}px;\n  color: ${theme.colors.grayscale.base};\n  font-size: ${theme.typography.sizes.xs}px;\n  white-space: nowrap;\n`;\nconst StyledI = styled.div`\n  color: ${({ theme }) => theme.colors.primary.dark1};\n`;\n\nconst styledDisabled = (theme: SupersetTheme) => css`\n  color: ${theme.colors.grayscale.base};\n  backgroundColor: ${theme.colors.grayscale.light2}};\n  .ant-menu-item:hover {\n    color: ${theme.colors.grayscale.base};\n    cursor: default;\n  }\n`;\n\nconst StyledDiv = styled.div<{ align: string }>`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ align }) => align};\n  align-items: center;\n  margin-right: ${({ theme }) => theme.gridUnit}px;\n  .ant-menu-submenu-title > svg {\n    top: ${({ theme }) => theme.gridUnit * 5.25}px;\n  }\n`;\n\nconst StyledAnchor = styled.a`\n  padding-right: ${({ theme }) => theme.gridUnit}px;\n  padding-left: ${({ theme }) => theme.gridUnit}px;\n`;\n\nconst { SubMenu } = Menu;\n\nconst RightMenu = ({\n  align,\n  settings,\n  navbarRight,\n  isFrontendRoute,\n  setQuery,\n}: RightMenuProps & {\n  setQuery: ({ databaseAdded }: { databaseAdded: boolean }) => void;\n}) => {\n  const user = useSelector<any, UserWithPermissionsAndRoles>(\n    state => state.user,\n  );\n  const dashboardId = useSelector<RootState, number | undefined>(\n    state => state.dashboardInfo?.id,\n  );\n\n  const { roles } = user;\n  const {\n    CSV_EXTENSIONS,\n    COLUMNAR_EXTENSIONS,\n    EXCEL_EXTENSIONS,\n    ALLOWED_EXTENSIONS,\n    HAS_GSHEETS_INSTALLED,\n  } = useSelector<any, ExtentionConfigs>(state => state.common.conf);\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const [engine, setEngine] = useState<string>('');\n  const canSql = findPermission('can_sqllab', 'Superset', roles);\n  const canDashboard = findPermission('can_write', 'Dashboard', roles);\n  const canChart = findPermission('can_write', 'Chart', roles);\n  const canDatabase = findPermission('can_write', 'Database', roles);\n\n  const { canUploadData, canUploadCSV, canUploadColumnar, canUploadExcel } =\n    uploadUserPerms(\n      roles,\n      CSV_EXTENSIONS,\n      COLUMNAR_EXTENSIONS,\n      EXCEL_EXTENSIONS,\n      ALLOWED_EXTENSIONS,\n    );\n\n  const showActionDropdown = canSql || canChart || canDashboard;\n  const [allowUploads, setAllowUploads] = useState<boolean>(false);\n  const isAdmin = isUserAdmin(user);\n  const showUploads = allowUploads || isAdmin;\n  const dropdownItems: MenuObjectProps[] = [\n    {\n      label: t('Data'),\n      icon: 'fa-database',\n      childs: [\n        {\n          label: t('Connect database'),\n          name: GlobalMenuDataOptions.DB_CONNECTION,\n          perm: canDatabase,\n        },\n        {\n          label: t('Connect Google Sheet'),\n          name: GlobalMenuDataOptions.GOOGLE_SHEETS,\n          perm: canDatabase && HAS_GSHEETS_INSTALLED,\n        },\n        {\n          label: t('Upload CSV to database'),\n          name: 'Upload a CSV',\n          url: '/csvtodatabaseview/form',\n          perm: canUploadCSV && showUploads,\n        },\n        {\n          label: t('Upload columnar file to database'),\n          name: 'Upload a Columnar file',\n          url: '/columnartodatabaseview/form',\n          perm: canUploadColumnar && showUploads,\n        },\n        {\n          label: t('Upload Excel file to database'),\n          name: 'Upload Excel',\n          url: '/exceltodatabaseview/form',\n          perm: canUploadExcel && showUploads,\n        },\n      ],\n    },\n    {\n      label: t('SQL query'),\n      url: '/superset/sqllab?new=true',\n      icon: 'fa-fw fa-search',\n      perm: 'can_sqllab',\n      view: 'Superset',\n    },\n    {\n      label: t('Chart'),\n      url: Number.isInteger(dashboardId)\n        ? `/chart/add?dashboard_id=${dashboardId}`\n        : '/chart/add',\n      icon: 'fa-fw fa-bar-chart',\n      perm: 'can_write',\n      view: 'Chart',\n    },\n    {\n      label: t('Dashboard'),\n      url: '/dashboard/new',\n      icon: 'fa-fw fa-dashboard',\n      perm: 'can_write',\n      view: 'Dashboard',\n    },\n  ];\n\n  const checkAllowUploads = () => {\n    const payload = {\n      filters: [\n        { col: 'allow_file_upload', opr: 'upload_is_enabled', value: true },\n      ],\n    };\n    SupersetClient.get({\n      endpoint: `/api/v1/database/?q=${rison.encode(payload)}`,\n    }).then(({ json }: Record<string, any>) => {\n      setAllowUploads(json.count >= 1);\n    });\n  };\n\n  useEffect(() => {\n    if (canUploadData) {\n      checkAllowUploads();\n    }\n  }, [canUploadData]);\n\n  const menuIconAndLabel = (menu: MenuObjectProps) => (\n    <>\n      <i data-test={`menu-item-${menu.label}`} className={`fa ${menu.icon}`} />\n      {menu.label}\n    </>\n  );\n\n  const handleMenuSelection = (itemChose: any) => {\n    if (itemChose.key === GlobalMenuDataOptions.DB_CONNECTION) {\n      setShowModal(true);\n    } else if (itemChose.key === GlobalMenuDataOptions.GOOGLE_SHEETS) {\n      setShowModal(true);\n      setEngine('Google Sheets');\n    }\n  };\n\n  const handleOnHideModal = () => {\n    setEngine('');\n    setShowModal(false);\n  };\n\n  const isDisabled = isAdmin && !allowUploads;\n\n  const tooltipText = t(\n    \"Enable 'Allow data upload' in any database's settings\",\n  );\n\n  const buildMenuItem = (item: Record<string, any>) => {\n    const disabledText = isDisabled && item.url;\n    return disabledText ? (\n      <Menu.Item key={item.name} css={styledDisabled}>\n        <Tooltip placement=\"top\" title={tooltipText}>\n          {item.label}\n        </Tooltip>\n      </Menu.Item>\n    ) : (\n      <Menu.Item key={item.name}>\n        {item.url ? <a href={item.url}> {item.label} </a> : item.label}\n      </Menu.Item>\n    );\n  };\n\n  const onMenuOpen = (openKeys: string[]) => {\n    if (openKeys.length && canUploadData) {\n      return checkAllowUploads();\n    }\n    return null;\n  };\n\n  const handleDatabaseAdd = () => setQuery({ databaseAdded: true });\n\n  return (\n    <StyledDiv align={align}>\n      {canDatabase && (\n        <DatabaseModal\n          onHide={handleOnHideModal}\n          show={showModal}\n          dbEngine={engine}\n          onDatabaseAdd={handleDatabaseAdd}\n        />\n      )}\n      <Menu\n        selectable={false}\n        mode=\"horizontal\"\n        onClick={handleMenuSelection}\n        onOpenChange={onMenuOpen}\n      >\n        {!navbarRight.user_is_anonymous && showActionDropdown && (\n          <SubMenu\n            data-test=\"new-dropdown\"\n            title={\n              <StyledI data-test=\"new-dropdown-icon\" className=\"fa fa-plus\" />\n            }\n            icon={<Icons.TriangleDown />}\n          >\n            {dropdownItems.map(menu => {\n              const canShowChild = menu.childs?.some(\n                item => typeof item === 'object' && !!item.perm,\n              );\n              if (menu.childs) {\n                if (canShowChild) {\n                  return (\n                    <SubMenu\n                      key={`sub2_${menu.label}`}\n                      className=\"data-menu\"\n                      title={menuIconAndLabel(menu)}\n                    >\n                      {menu.childs.map((item, idx) =>\n                        typeof item !== 'string' && item.name && item.perm ? (\n                          <Fragment key={item.name}>\n                            {idx === 2 && <Menu.Divider />}\n                            {buildMenuItem(item)}\n                          </Fragment>\n                        ) : null,\n                      )}\n                    </SubMenu>\n                  );\n                }\n                if (!menu.url) {\n                  return null;\n                }\n              }\n              return (\n                findPermission(\n                  menu.perm as string,\n                  menu.view as string,\n                  roles,\n                ) && (\n                  <Menu.Item key={menu.label}>\n                    <a href={menu.url}>\n                      <i\n                        data-test={`menu-item-${menu.label}`}\n                        className={`fa ${menu.icon}`}\n                      />{' '}\n                      {menu.label}\n                    </a>\n                  </Menu.Item>\n                )\n              );\n            })}\n          </SubMenu>\n        )}\n        <SubMenu\n          title={t('Settings')}\n          icon={<Icons.TriangleDown iconSize=\"xl\" />}\n        >\n          {settings.map((section, index) => [\n            <Menu.ItemGroup key={`${section.label}`} title={section.label}>\n              {section.childs?.map(child => {\n                if (typeof child !== 'string') {\n                  return (\n                    <Menu.Item key={`${child.label}`}>\n                      {isFrontendRoute(child.url) ? (\n                        <Link to={child.url || ''}>{child.label}</Link>\n                      ) : (\n                        <a href={child.url}>{child.label}</a>\n                      )}\n                    </Menu.Item>\n                  );\n                }\n                return null;\n              })}\n            </Menu.ItemGroup>,\n            index < settings.length - 1 && (\n              <Menu.Divider key={`divider_${index}`} />\n            ),\n          ])}\n\n          {!navbarRight.user_is_anonymous && [\n            <Menu.Divider key=\"user-divider\" />,\n            <Menu.ItemGroup key=\"user-section\" title={t('User')}>\n              {navbarRight.user_profile_url && (\n                <Menu.Item key=\"profile\">\n                  <a href={navbarRight.user_profile_url}>{t('Profile')}</a>\n                </Menu.Item>\n              )}\n              {navbarRight.user_info_url && (\n                <Menu.Item key=\"info\">\n                  <a href={navbarRight.user_info_url}>{t('Info')}</a>\n                </Menu.Item>\n              )}\n              <Menu.Item key=\"logout\">\n                <a href={navbarRight.user_logout_url}>{t('Logout')}</a>\n              </Menu.Item>\n            </Menu.ItemGroup>,\n          ]}\n          {(navbarRight.version_string || navbarRight.version_sha) && [\n            <Menu.Divider key=\"version-info-divider\" />,\n            <Menu.ItemGroup key=\"about-section\" title={t('About')}>\n              <div className=\"about-section\">\n                {navbarRight.show_watermark && (\n                  <div css={versionInfoStyles}>\n                    {t('Powered by Apache Superset')}\n                  </div>\n                )}\n                {navbarRight.version_string && (\n                  <div css={versionInfoStyles}>\n                    Version: {navbarRight.version_string}\n                  </div>\n                )}\n                {navbarRight.version_sha && (\n                  <div css={versionInfoStyles}>\n                    SHA: {navbarRight.version_sha}\n                  </div>\n                )}\n                {navbarRight.build_number && (\n                  <div css={versionInfoStyles}>\n                    Build: {navbarRight.build_number}\n                  </div>\n                )}\n              </div>\n            </Menu.ItemGroup>,\n          ]}\n        </SubMenu>\n        {navbarRight.show_language_picker && (\n          <LanguagePicker\n            locale={navbarRight.locale}\n            languages={navbarRight.languages}\n          />\n        )}\n      </Menu>\n      {navbarRight.documentation_url && (\n        <StyledAnchor\n          href={navbarRight.documentation_url}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          title={t('Documentation')}\n        >\n          <i className=\"fa fa-question\" />\n          &nbsp;\n        </StyledAnchor>\n      )}\n      {navbarRight.bug_report_url && (\n        <StyledAnchor\n          href={navbarRight.bug_report_url}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          title={t('Report a bug')}\n        >\n          <i className=\"fa fa-bug\" />\n        </StyledAnchor>\n      )}\n      {navbarRight.user_is_anonymous && (\n        <StyledAnchor href={navbarRight.user_login_url}>\n          <i className=\"fa fa-fw fa-sign-in\" />\n          {t('Login')}\n        </StyledAnchor>\n      )}\n    </StyledDiv>\n  );\n};\n\nconst RightMenuWithQueryWrapper: React.FC<RightMenuProps> = props => {\n  const [, setQuery] = useQueryParams({\n    databaseAdded: BooleanParam,\n  });\n\n  return <RightMenu setQuery={setQuery} {...props} />;\n};\n\n// Query param manipulation requires that, during the setup, the\n// QueryParamProvider is present and configured.\n// Superset still has multiple entry points, and not all of them have\n// the same setup, and critically, not all of them have the QueryParamProvider.\n// This wrapper ensures the RightMenu renders regardless of the provider being present.\nclass RightMenuErrorWrapper extends React.PureComponent<RightMenuProps> {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  noop = () => {};\n\n  render() {\n    if (this.state.hasError) {\n      return <RightMenu setQuery={this.noop} {...this.props} />;\n    }\n\n    return this.props.children;\n  }\n}\n\nconst RightMenuWrapper: React.FC<RightMenuProps> = props => (\n  <RightMenuErrorWrapper {...props}>\n    <RightMenuWithQueryWrapper {...props} />\n  </RightMenuErrorWrapper>\n);\n\nexport default RightMenuWrapper;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { styled, css, useTheme, SupersetTheme } from '@superset-ui/core';\nimport { debounce } from 'lodash';\nimport { Global } from '@emotion/react';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { Row, Col, Grid } from 'src/components';\nimport { MainNav as DropdownMenu, MenuMode } from 'src/components/Menu';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { Link } from 'react-router-dom';\nimport Icons from 'src/components/Icons';\nimport { useUiConfig } from 'src/components/UiConfigContext';\nimport { URL_PARAMS } from 'src/constants';\nimport RightMenu from './MenuRight';\nimport { Languages } from './LanguagePicker';\n\ninterface BrandProps {\n  path: string;\n  icon: string;\n  alt: string;\n  tooltip: string;\n  text: string;\n}\n\nexport interface NavBarProps {\n  show_watermark: boolean;\n  bug_report_url?: string;\n  version_string?: string;\n  version_sha?: string;\n  build_number?: string;\n  documentation_url?: string;\n  languages: Languages;\n  show_language_picker: boolean;\n  user_is_anonymous: boolean;\n  user_info_url: string;\n  user_login_url: string;\n  user_logout_url: string;\n  user_profile_url: string | null;\n  locale: string;\n}\n\nexport interface MenuProps {\n  data: {\n    menu: MenuObjectProps[];\n    brand: BrandProps;\n    navbar_right: NavBarProps;\n    settings: MenuObjectProps[];\n  };\n  isFrontendRoute?: (path?: string) => boolean;\n}\n\nexport interface MenuObjectChildProps {\n  label: string;\n  name?: string;\n  icon?: string;\n  index?: number;\n  url?: string;\n  isFrontendRoute?: boolean;\n  perm?: string | boolean;\n  view?: string;\n  disable?: boolean;\n}\n\nexport interface MenuObjectProps extends MenuObjectChildProps {\n  childs?: (MenuObjectChildProps | string)[];\n  isHeader?: boolean;\n}\n\nconst StyledHeader = styled.header`\n  ${({ theme }) => `\n      background-color: ${theme.colors.grayscale.light5};\n      margin-bottom: 2px;\n      &:nth-last-of-type(2) nav {\n        margin-bottom: 2px;\n      }\n      .caret {\n        display: none;\n      }\n      .navbar-brand {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        /* must be exactly the height of the Antd navbar */\n        min-height: 50px;\n        padding: ${theme.gridUnit}px ${theme.gridUnit * 2}px ${\n    theme.gridUnit\n  }px ${theme.gridUnit * 4}px;\n        max-width: ${theme.gridUnit * 37}px;\n        img {\n          height: 100%;\n          object-fit: contain;\n        }\n      }\n      .navbar-brand-text {\n        border-left: 1px solid ${theme.colors.grayscale.light2};\n        border-right: 1px solid ${theme.colors.grayscale.light2};\n        height: 100%;\n        color: ${theme.colors.grayscale.dark1};\n        padding-left: ${theme.gridUnit * 4}px;\n        padding-right: ${theme.gridUnit * 4}px;\n        margin-right: ${theme.gridUnit * 6}px;\n        font-size: ${theme.gridUnit * 4}px;\n        float: left;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n\n        span {\n          max-width: ${theme.gridUnit * 58}px;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n        @media (max-width: 1127px) {\n          display: none;\n        }\n      }\n      .main-nav .ant-menu-submenu-title > svg {\n        top: ${theme.gridUnit * 5.25}px;\n      }\n      @media (max-width: 767px) {\n        .navbar-brand {\n          float: none;\n        }\n      }\n      .ant-menu-horizontal .ant-menu-item {\n        height: 100%;\n        line-height: inherit;\n      }\n      .ant-menu > .ant-menu-item > a {\n        padding: ${theme.gridUnit * 4}px;\n      }\n      @media (max-width: 767px) {\n        .ant-menu-item {\n          padding: 0 ${theme.gridUnit * 6}px 0\n            ${theme.gridUnit * 3}px !important;\n        }\n        .ant-menu > .ant-menu-item > a {\n          padding: 0px;\n        }\n        .main-nav .ant-menu-submenu-title > svg:nth-child(1) {\n          display: none;\n        }\n        .ant-menu-item-active > a {\n          &:hover {\n            color: ${theme.colors.primary.base} !important;\n            background-color: transparent !important;\n          }\n        }\n      }\n      .ant-menu-item a {\n        &:hover {\n          color: ${theme.colors.grayscale.dark1};\n          background-color: ${theme.colors.primary.light5};\n          border-bottom: none;\n          margin: 0;\n          &:after {\n            opacity: 1;\n            width: 100%;\n          }\n        }\n      }\n  `}\n`;\nconst globalStyles = (theme: SupersetTheme) => css`\n  .ant-menu-submenu.ant-menu-submenu-popup.ant-menu.ant-menu-light.ant-menu-submenu-placement-bottomLeft {\n    border-radius: 0px;\n  }\n  .ant-menu-submenu.ant-menu-submenu-popup.ant-menu.ant-menu-light {\n    border-radius: 0px;\n  }\n  .ant-menu-vertical > .ant-menu-submenu.data-menu > .ant-menu-submenu-title {\n    height: 28px;\n    i {\n      padding-right: ${theme.gridUnit * 2}px;\n      margin-left: ${theme.gridUnit * 1.75}px;\n    }\n  }\n`;\nconst { SubMenu } = DropdownMenu;\n\nconst { useBreakpoint } = Grid;\n\nexport function Menu({\n  data: { menu, brand, navbar_right: navbarRight, settings },\n  isFrontendRoute = () => false,\n}: MenuProps) {\n  const [showMenu, setMenu] = useState<MenuMode>('horizontal');\n  const screens = useBreakpoint();\n  const uiConfig = useUiConfig();\n  const theme = useTheme();\n\n  useEffect(() => {\n    function handleResize() {\n      if (window.innerWidth <= 767) {\n        setMenu('inline');\n      } else setMenu('horizontal');\n    }\n    handleResize();\n    const windowResize = debounce(() => handleResize(), 10);\n    window.addEventListener('resize', windowResize);\n    return () => window.removeEventListener('resize', windowResize);\n  }, []);\n\n  const standalone = getUrlParam(URL_PARAMS.standalone);\n  if (standalone || uiConfig.hideNav) return <></>;\n\n  const renderSubMenu = ({\n    label,\n    childs,\n    url,\n    index,\n    isFrontendRoute,\n  }: MenuObjectProps) => {\n    if (url && isFrontendRoute) {\n      return (\n        <DropdownMenu.Item key={label} role=\"presentation\">\n          <Link role=\"button\" to={url}>\n            {label}\n          </Link>\n        </DropdownMenu.Item>\n      );\n    }\n    if (url) {\n      return (\n        <DropdownMenu.Item key={label}>\n          <a href={url}>{label}</a>\n        </DropdownMenu.Item>\n      );\n    }\n    return (\n      <SubMenu\n        key={index}\n        title={label}\n        icon={showMenu === 'inline' ? <></> : <Icons.TriangleDown />}\n      >\n        {childs?.map((child: MenuObjectChildProps | string, index1: number) => {\n          if (typeof child === 'string' && child === '-' && label !== 'Data') {\n            return <DropdownMenu.Divider key={`$${index1}`} />;\n          }\n          if (typeof child !== 'string') {\n            return (\n              <DropdownMenu.Item key={`${child.label}`}>\n                {child.isFrontendRoute ? (\n                  <Link to={child.url || ''}>{child.label}</Link>\n                ) : (\n                  <a href={child.url}>{child.label}</a>\n                )}\n              </DropdownMenu.Item>\n            );\n          }\n          return null;\n        })}\n      </SubMenu>\n    );\n  };\n  return (\n    <StyledHeader className=\"top\" id=\"main-menu\" role=\"navigation\">\n      <Global styles={globalStyles(theme)} />\n      <Row>\n        <Col md={16} xs={24}>\n          <Tooltip\n            id=\"brand-tooltip\"\n            placement=\"bottomLeft\"\n            title={brand.tooltip}\n            arrowPointAtCenter\n          >\n            <a className=\"navbar-brand\" href={brand.path}>\n              <img src={brand.icon} alt={brand.alt} />\n            </a>\n          </Tooltip>\n          {brand.text && (\n            <div className=\"navbar-brand-text\">\n              <span>{brand.text}</span>\n            </div>\n          )}\n          <DropdownMenu\n            mode={showMenu}\n            data-test=\"navbar-top\"\n            className=\"main-nav\"\n          >\n            {menu.map((item, index) => {\n              const props = {\n                index,\n                ...item,\n                isFrontendRoute: isFrontendRoute(item.url),\n                childs: item.childs?.map(c => {\n                  if (typeof c === 'string') {\n                    return c;\n                  }\n\n                  return {\n                    ...c,\n                    isFrontendRoute: isFrontendRoute(c.url),\n                  };\n                }),\n              };\n\n              return renderSubMenu(props);\n            })}\n          </DropdownMenu>\n        </Col>\n        <Col md={8} xs={24}>\n          <RightMenu\n            align={screens.md ? 'flex-end' : 'flex-start'}\n            settings={settings}\n            navbarRight={navbarRight}\n            isFrontendRoute={isFrontendRoute}\n          />\n        </Col>\n      </Row>\n    </StyledHeader>\n  );\n}\n\n// transform the menu data to reorganize components\nexport default function MenuWrapper({ data, ...rest }: MenuProps) {\n  const newMenuData = {\n    ...data,\n  };\n  // Menu items that should go into settings dropdown\n  const settingsMenus = {\n    Security: true,\n    Manage: true,\n  };\n\n  // Cycle through menu.menu to build out cleanedMenu and settings\n  const cleanedMenu: MenuObjectProps[] = [];\n  const settings: MenuObjectProps[] = [];\n  newMenuData.menu.forEach((item: any) => {\n    if (!item) {\n      return;\n    }\n\n    const children: (MenuObjectProps | string)[] = [];\n    const newItem = {\n      ...item,\n    };\n\n    // Filter childs\n    if (item.childs) {\n      item.childs.forEach((child: MenuObjectChildProps | string) => {\n        if (typeof child === 'string') {\n          children.push(child);\n        } else if ((child as MenuObjectChildProps).label) {\n          children.push(child);\n        }\n      });\n\n      newItem.childs = children;\n    }\n\n    if (!settingsMenus.hasOwnProperty(item.name)) {\n      cleanedMenu.push(newItem);\n    } else {\n      settings.push(newItem);\n    }\n  });\n\n  newMenuData.menu = cleanedMenu;\n  newMenuData.settings = settings;\n\n  return <Menu data={newMenuData} {...rest} />;\n}\n"],"names":["CheckboxLabel","CheckboxHalf","theme","colors","primary","base","CheckboxOff","grayscale","CheckboxOn","HiddenInput","InputContainer","forwardRef","indeterminate","id","checked","onChange","title","labelText","ref","defaultRef","useRef","resolvedRef","useEffect","current","name","type","htmlFor","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","canvasStyle","position","bottom","left","height","overflow","border","mirrorProps","prevSibling","node","count","previousElementSibling","defaultProps","basedOn","undefined","className","component","ellipsis","maxLine","onReflow","text","trimRight","winWidth","usedProps","keys","LinesEllipsis","constructor","props","super","state","clamped","units","canvas","componentDidMount","initCanvas","reflow","componentDidUpdate","prevProps","copyStyleToCanvas","componentWillUnmount","parentNode","removeChild","setState","callback","document","createElement","setAttribute","forEach","style","body","appendChild","targetStyle","window","getComputedStyle","test","split","Array","from","Error","innerHTML","map","c","join","ellipsisIndex","putEllipsis","calcIndexes","newState","slice","bind","indexes","elt","firstElementChild","index","line","offsetTop","nextElementSibling","push","lastIndex","maxOffsetTop","children","ndEllipsis","lastElementChild","ndPrevUnit","offsetHeight","pop","isClamped","render","_this$props","Component","rest","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","obj","omittedKeys","ret","omit","replace","StyledButton","Button","StyledImage","gridUnit","StyledInner","StyledBottom","borderRadius","light4","icon","altText","buttonText","src","alt","Icons","light5","typography","weights","normal","dark2","light2","CONFIGURATION_METHOD","no_margin_bottom","StyledFormHeader","sizes","s","l","antDTabsStyles","antDModalNoPaddingStyles","infoTooltip","toggleStyle","formScrollableStyles","antDModalStyles","dark1","antDAlertStyles","info","m","bold","StyledAlertMargin","formHelperStyles","error","light1","formStyles","validatedFormStyles","StyledInputContainer","families","sansSerif","StyledJsonEditor","StyledExpandableForm","CTAS_CVAS_SCHEMA_FORM_HEIGHT","EXPOSE_IN_SQLLAB_FORM_HEIGHT","StyledAlignment","buttonLinkStyles","importDbButtonLinkStyles","TabHeader","EditHeaderTitle","EditHeaderSubtitle","CredentialInfoForm","SelectDatabaseStyles","StyledFooterButton","StyledStickyHeader","zIndex","max","StyledCatalogTable","StyledUploadWrapper","db","onInputChange","onTextChange","onEditorChange","onExtraInputChange","onExtraEditorChange","expandableModalIsOpen","expose_in_sqllab","createAsOpen","allow_ctas","allow_cvas","Collapse","expandIconPosition","accordion","css","anticonHeight","antdCollapseStyles","header","IndeterminateCheckbox","t","InfoTooltip","tooltip","open","value","force_ctas_schema","placeholder","allow_dml","allow_multi_schema_metadata_fetch","extra_json","cost_estimate_enabled","allows_virtual_table_explore","disable_data_preview","cache_timeout","metadata_cache_timeout","schema_cache_timeout","table_cache_timeout","allow_run_async","cancel_query_on_windows_unload","encrypted_extra","json","width","server_cert","schemas_allowed_for_file_upload","impersonate_user","allow_file_upload","metadata_params","engine_params","version","testConnection","conf","testInProgress","fallbackDocsUrl","fallbackDisplayText","SQLALCHEMY_DOCS_URL","SQLALCHEMY_DISPLAY_TEXT","database_name","sqlalchemy_uri","autoComplete","href","rel","onClick","disabled","cta","buttonStyle","wideButton","FIELD_TEXT_MAP","account","helpText","warehouse","role","validatedInputField","required","changeMethods","getValidation","validationErrors","field","parameters","validationMethods","onBlur","errorMessage","label","onParametersChange","CredentialInfoOptions","encryptedCredentialsMap","gsheets","bigquery","EncryptedField","isEditMode","editNewDb","uploadOption","setUploadOption","useState","jsonUpload","valueOf","fileToUpload","setFileToUpload","isPublic","setIsPublic","showCredentialsInfo","engine","isEncrypted","encryptedField","encryptedValue","JSON","stringify","FormLabel","labelMarginBotton","defaultValue","option","copyPaste","viewBox","getElementById","click","DeleteFilled","async","event","file","files","FormFieldOrder","FORM_FIELD_MAP","host","hasTooltip","tooltipText","port","database","username","password","visibilityToggle","query","query_input","onQueryChange","encryption","sslForced","changed","placement","credentials_info","service_account_info","catalog","tableCatalog","catalogError","sheet","idx","e","CloseOutlined","onRemoveTableCatalog","url","onAddTableCatalog","dbModel","onParametersUploadFileChange","Form","filter","properties","includes","supersetTextDocs","DOCUMENTATION_LINK","support","irregularDocumentationLinks","postgresql","mssql","documentationLink","default","isLoading","useSqlAlchemyForm","hasConnectedDb","dbName","fileList","fileCheck","isEditHeader","backend","useSqlAlchemyFormHeader","hasConnectedDbHeader","hasDbHeader","noDbHeader","importDbHeader","Engines","engineSpecificAlertMapping","GSheet","message","description","TabsStyled","Tabs","ActionType","dbReducer","action","trimmedState","deserializeExtraJSON","extraEditorChange","payload","extraInputChange","inputChange","parametersChange","startsWith","paramatersCatalog","item","addTableCatalogSheet","removeTableCatalogSheet","splice","indexToDelete","editorChange","queryChange","fromEntries","URLSearchParams","textChange","fetched","extra","parse","entries","configuration_method","engineParamsCatalog","dbSelected","configMethodChange","reset","serializeExtra","extraJson","schema","withToasts","addDangerToast","addSuccessToast","onDatabaseAdd","onHide","show","databaseId","dbEngine","setDB","useReducer","loading","dbLoading","resource","dbFetched","dbErrors","fetchResource","createResource","updateResource","clearError","tabKey","setTabKey","availableDbs","getAvailableDbs","setValidationErrors","setHasConnectedDb","setDbName","setEditNewDb","setLoading","setTestInProgress","passwords","setPasswords","confirmedOverwrite","setConfirmedOverwrite","setFileList","importingModal","setImportingModal","dbImages","connectionAlert","hasAlert","SQLALCHEMY_URI","useTabLayout","showDBError","isEmpty","data","databases","find","available","onClose","alreadyExists","passwordsNeeded","importLoading","failed","importErrored","importResource","msg","onSave","update","dbToUpdate","DYNAMIC_FORM","errors","parameters_schema","additionalEncryptedExtra","paramConfig","originFileObj","File","setDatabaseModel","selectedDbModel","isDynamic","handleBackButtonOnFinish","handleBackButtonOnConnect","renderModalFooter","firstUpdate","catch","getElementsByClassName","scrollIntoView","confirmOverwrite","targetValue","currentTarget","toUpperCase","errorAlert","alertErrors","values","Snowflake","error_type","Alert","antDErrorAlertStyles","Modal","onHandledPrimaryAction","primaryButtonName","centered","footer","closable","showIcon","password_needed","warning","antdWarningAlertStyles","confirm_overwrite","is_managed_externally","renderEditModalFooter","defaultActiveKey","activeKey","onTabClick","animated","inkBar","tabPane","tab","SqlAlchemyForm","connection","trim","errorMsg","DB","alchemyButtonLinkStyles","hostname","location","ipAlert","REGIONAL_IPS","regionalIPs","ipRegion","ipRange","regex","RegExp","match","DEFAULT","renderStepTwoAlert","preferred","showSearch","sort","a","b","localeCompare","ADD_DATABASE","contact_link","contact_description_link","renderAvailableSelector","accept","customRequest","status","onRemove","removedFile","uid","Loading","useCommonConf","common","SubMenu","Menu","StyledLabel","StyledFlag","LanguagePicker","locale","languages","flag","langKey","whiteSpace","GlobalMenuDataOptions","versionInfoStyles","xs","StyledI","styledDisabled","StyledDiv","align","StyledAnchor","RightMenu","settings","navbarRight","isFrontendRoute","setQuery","user","dashboardId","dashboardInfo","roles","CSV_EXTENSIONS","COLUMNAR_EXTENSIONS","EXCEL_EXTENSIONS","ALLOWED_EXTENSIONS","HAS_GSHEETS_INSTALLED","showModal","setShowModal","setEngine","canSql","findPermission","canDashboard","canChart","canDatabase","canUploadData","canUploadCSV","canUploadColumnar","canUploadExcel","showActionDropdown","allowUploads","setAllowUploads","isAdmin","showUploads","dropdownItems","childs","DB_CONNECTION","perm","GOOGLE_SHEETS","view","Number","isInteger","checkAllowUploads","SupersetClient","endpoint","filters","col","opr","then","menuIconAndLabel","menu","isDisabled","DatabaseModal","databaseAdded","selectable","mode","itemChose","onOpenChange","openKeys","user_is_anonymous","canShowChild","some","Fragment","Tooltip","buildMenuItem","iconSize","section","child","to","user_profile_url","user_info_url","user_logout_url","version_string","version_sha","show_watermark","build_number","show_language_picker","documentation_url","bug_report_url","user_login_url","RightMenuWithQueryWrapper","RightMenuErrorWrapper","hasError","noop","StyledHeader","globalStyles","useBreakpoint","brand","navbar_right","showMenu","setMenu","screens","uiConfig","handleResize","innerWidth","windowResize","addEventListener","removeEventListener","hideNav","styles","md","arrowPointAtCenter","path","index1","renderSubMenu","MenuWrapper","newMenuData","settingsMenus","Security","Manage","cleanedMenu","newItem"],"sourceRoot":""}