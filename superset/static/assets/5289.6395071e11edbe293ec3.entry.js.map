{"version":3,"file":"5289.6395071e11edbe293ec3.entry.js","mappings":"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","sources":["webpack://superset/./packages/superset-ui-chart-controls/src/sections/sections.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/sections/advancedAnalytics.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/sections/annotationsAndLayers.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/sections/forecastInterval.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/sections/chartTitle.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/utils/mainMetric.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/sortOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/shared-controls/legacySortBy.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/index.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/boxplotOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/contributionOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/flattenOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/pivotOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/prophetOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/renameOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/resampleOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/rollingWindowOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/timeCompareOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/timeComparePivotOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/utils/constants.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/utils/getMetricOffsetsMap.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/utils/isDerivedSeries.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/utils/isTimeComparison.ts","webpack://superset/./packages/superset-ui-chart-controls/src/shared-controls/emitFilterControl.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/utils/columnChoices.ts","webpack://superset/./packages/superset-ui-chart-controls/src/utils/getColorFormatters.ts","webpack://superset/./packages/superset-ui-core/src/utils/ensureIsInt.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { ControlPanelSectionConfig } from '../types';\n\n// A few standard controls sections that are used internally.\n// Not recommended for use in third-party plugins.\n\nconst baseTimeSection = {\n  label: t('Time'),\n  expanded: true,\n  description: t('Time related form attributes'),\n};\n\nexport const legacyTimeseriesTime: ControlPanelSectionConfig = {\n  ...baseTimeSection,\n  controlSetRows: [\n    ['granularity'],\n    ['druid_time_origin'],\n    ['granularity_sqla'],\n    ['time_grain_sqla'],\n    ['time_range'],\n  ],\n};\n\nexport const legacyRegularTime: ControlPanelSectionConfig = {\n  ...baseTimeSection,\n  controlSetRows: [['granularity_sqla'], ['time_range']],\n};\n\nexport const datasourceAndVizType: ControlPanelSectionConfig = {\n  label: t('Datasource & Chart Type'),\n  expanded: true,\n  controlSetRows: [\n    ['datasource'],\n    ['viz_type'],\n    [\n      {\n        name: 'slice_id',\n        config: {\n          type: 'HiddenControl',\n          label: t('Chart ID'),\n          hidden: true,\n          description: t('The id of the active chart'),\n        },\n      },\n      {\n        name: 'cache_timeout',\n        config: {\n          type: 'HiddenControl',\n          label: t('Cache Timeout (seconds)'),\n          hidden: true,\n          description: t('The number of seconds before expiring the cache'),\n        },\n      },\n      {\n        name: 'url_params',\n        config: {\n          type: 'HiddenControl',\n          label: t('URL Parameters'),\n          hidden: true,\n          description: t(\n            'Extra url parameters for use in Jinja templated queries',\n          ),\n        },\n      },\n      {\n        name: 'custom_params',\n        config: {\n          type: 'HiddenControl',\n          label: t('Extra Parameters'),\n          hidden: true,\n          description: t(\n            'Extra parameters that any plugins can choose to set for use in Jinja templated queries',\n          ),\n        },\n      },\n    ],\n  ],\n};\n\nexport const colorScheme: ControlPanelSectionConfig = {\n  label: t('Color Scheme'),\n  controlSetRows: [['color_scheme']],\n};\n\nexport const annotations: ControlPanelSectionConfig = {\n  label: t('Annotations and Layers'),\n  tabOverride: 'data',\n  expanded: true,\n  controlSetRows: [\n    [\n      {\n        name: 'annotation_layers',\n        config: {\n          type: 'AnnotationLayerControl',\n          label: '',\n          default: [],\n          description: t('Annotation Layers'),\n          renderTrigger: true,\n        },\n      },\n    ],\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t, RollingType, ComparisionType } from '@superset-ui/core';\nimport { ControlPanelSectionConfig } from '../types';\nimport { formatSelectOptions } from '../utils';\n\nexport const advancedAnalyticsControls: ControlPanelSectionConfig = {\n  label: t('Advanced analytics'),\n  tabOverride: 'data',\n  description: t(\n    'This section contains options ' +\n      'that allow for advanced analytical post processing ' +\n      'of query results',\n  ),\n  controlSetRows: [\n    [<div className=\"section-header\">{t('Rolling window')}</div>],\n    [\n      {\n        name: 'rolling_type',\n        config: {\n          type: 'SelectControl',\n          label: t('Rolling function'),\n          default: null,\n          choices: [[null, t('None')]].concat(\n            formatSelectOptions(Object.values(RollingType)),\n          ),\n          description: t(\n            'Defines a rolling window function to apply, works along ' +\n              'with the [Periods] text box',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'rolling_periods',\n        config: {\n          type: 'TextControl',\n          label: t('Periods'),\n          isInt: true,\n          description: t(\n            'Defines the size of the rolling window function, ' +\n              'relative to the time granularity selected',\n          ),\n          visibility: ({ controls }, { name }) => {\n            // `rolling_type_b` refer to rolling_type in mixed timeseries Query B\n            const rollingTypeControlName = name.endsWith('_b')\n              ? 'rolling_type_b'\n              : 'rolling_type';\n            return (\n              Boolean(controls[rollingTypeControlName]?.value) &&\n              controls[rollingTypeControlName]?.value !== RollingType.Cumsum\n            );\n          },\n        },\n      },\n    ],\n    [\n      {\n        name: 'min_periods',\n        config: {\n          type: 'TextControl',\n          label: t('Min periods'),\n          isInt: true,\n          description: t(\n            'The minimum number of rolling periods required to show ' +\n              'a value. For instance if you do a cumulative sum on 7 days ' +\n              'you may want your \"Min Period\" to be 7, so that all data points ' +\n              'shown are the total of 7 periods. This will hide the \"ramp up\" ' +\n              'taking place over the first 7 periods',\n          ),\n          visibility: ({ controls }, { name }) => {\n            // `rolling_type_b` refer to rolling_type in mixed timeseries Query B\n            const rollingTypeControlName = name.endsWith('_b')\n              ? 'rolling_type_b'\n              : 'rolling_type';\n            return (\n              Boolean(controls[rollingTypeControlName]?.value) &&\n              controls[rollingTypeControlName]?.value !== RollingType.Cumsum\n            );\n          },\n        },\n      },\n    ],\n    [<div className=\"section-header\">{t('Time comparison')}</div>],\n    [\n      {\n        name: 'time_compare',\n        config: {\n          type: 'SelectControl',\n          multi: true,\n          freeForm: true,\n          label: t('Time shift'),\n          choices: formatSelectOptions([\n            '1 day ago',\n            '1 week ago',\n            '28 days ago',\n            '30 days ago',\n            '52 weeks ago',\n            '1 year ago',\n            '104 weeks ago',\n            '2 years ago',\n            '156 weeks ago',\n            '3 years ago',\n          ]),\n          description: t(\n            'Overlay one or more timeseries from a ' +\n              'relative time period. Expects relative time deltas ' +\n              'in natural language (example:  24 hours, 7 days, ' +\n              '52 weeks, 365 days). Free text is supported.',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'comparison_type',\n        config: {\n          type: 'SelectControl',\n          label: t('Calculation type'),\n          default: 'values',\n          choices: [\n            [ComparisionType.Values, 'Actual values'],\n            [ComparisionType.Difference, 'Difference'],\n            [ComparisionType.Percentage, 'Percentage change'],\n            [ComparisionType.Ratio, 'Ratio'],\n          ],\n          description: t(\n            'How to display time shifts: as individual lines; as the ' +\n              'difference between the main time series and each time shift; ' +\n              'as the percentage change; or as the ratio between series and time shifts.',\n          ),\n        },\n      },\n    ],\n    [<div className=\"section-header\">{t('Resample')}</div>],\n    [\n      {\n        name: 'resample_rule',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: t('Rule'),\n          default: null,\n          choices: [\n            ['1T', '1 minutely frequency'],\n            ['1H', '1 hourly frequency'],\n            ['1D', '1 calendar day frequency'],\n            ['7D', '7 calendar day frequency'],\n            ['1MS', '1 month start frequency'],\n            ['1M', '1 month end frequency'],\n            ['1AS', '1 year start frequency'],\n            ['1A', '1 year end frequency'],\n          ],\n          description: t('Pandas resample rule'),\n        },\n      },\n    ],\n    [\n      {\n        name: 'resample_method',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: t('Fill method'),\n          default: null,\n          choices: [\n            ['asfreq', 'Null imputation'],\n            ['zerofill', 'Zero imputation'],\n            ['linear', 'Linear interpolation'],\n            ['ffill', 'Forward values'],\n            ['bfill', 'Backward values'],\n            ['median', 'Median values'],\n            ['mean', 'Mean values'],\n            ['sum', 'Sum values'],\n          ],\n          description: t('Pandas resample method'),\n        },\n      },\n    ],\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { ControlPanelSectionConfig } from '../types';\n\nexport const annotationLayers = [];\n\nexport const annotationsAndLayersControls: ControlPanelSectionConfig = {\n  label: t('Annotations and Layers'),\n  expanded: false,\n  tabOverride: 'data',\n  controlSetRows: [\n    [\n      {\n        name: 'annotation_layers',\n        config: {\n          type: 'AnnotationLayerControl',\n          label: '',\n          default: annotationLayers,\n          description: t('Annotation Layers'),\n          renderTrigger: false,\n        },\n      },\n    ],\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  legacyValidateInteger,\n  legacyValidateNumber,\n  t,\n} from '@superset-ui/core';\nimport { ControlPanelSectionConfig } from '../types';\n\nexport const FORECAST_DEFAULT_DATA = {\n  forecastEnabled: false,\n  forecastInterval: 0.8,\n  forecastPeriods: 10,\n  forecastSeasonalityDaily: null,\n  forecastSeasonalityWeekly: null,\n  forecastSeasonalityYearly: null,\n};\n\nexport const forecastIntervalControls: ControlPanelSectionConfig = {\n  label: t('Predictive Analytics'),\n  expanded: false,\n  controlSetRows: [\n    [\n      {\n        name: 'forecastEnabled',\n        config: {\n          type: 'CheckboxControl',\n          label: t('Enable forecast'),\n          renderTrigger: false,\n          default: FORECAST_DEFAULT_DATA.forecastEnabled,\n          description: t('Enable forecasting'),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastPeriods',\n        config: {\n          type: 'TextControl',\n          label: t('Forecast periods'),\n          validators: [legacyValidateInteger],\n          default: FORECAST_DEFAULT_DATA.forecastPeriods,\n          description: t(\n            'How many periods into the future do we want to predict',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastInterval',\n        config: {\n          type: 'TextControl',\n          label: t('Confidence interval'),\n          validators: [legacyValidateNumber],\n          default: FORECAST_DEFAULT_DATA.forecastInterval,\n          description: t(\n            'Width of the confidence interval. Should be between 0 and 1',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastSeasonalityYearly',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: 'Yearly seasonality',\n          choices: [\n            [null, 'default'],\n            [true, 'Yes'],\n            [false, 'No'],\n          ],\n          default: FORECAST_DEFAULT_DATA.forecastSeasonalityYearly,\n          description: t(\n            'Should yearly seasonality be applied. An integer value will specify Fourier order of seasonality.',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastSeasonalityWeekly',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: 'Weekly seasonality',\n          choices: [\n            [null, 'default'],\n            [true, 'Yes'],\n            [false, 'No'],\n          ],\n          default: FORECAST_DEFAULT_DATA.forecastSeasonalityWeekly,\n          description: t(\n            'Should weekly seasonality be applied. An integer value will specify Fourier order of seasonality.',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastSeasonalityDaily',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: 'Daily seasonality',\n          choices: [\n            [null, 'default'],\n            [true, 'Yes'],\n            [false, 'No'],\n          ],\n          default: FORECAST_DEFAULT_DATA.forecastSeasonalityDaily,\n          description: t(\n            'Should daily seasonality be applied. An integer value will specify Fourier order of seasonality.',\n          ),\n        },\n      },\n    ],\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { ControlPanelSectionConfig } from '../types';\nimport { formatSelectOptions } from '../utils';\n\nexport const TITLE_MARGIN_OPTIONS: number[] = [\n  15, 30, 50, 75, 100, 125, 150, 200,\n];\nexport const TITLE_POSITION_OPTIONS: string[] = ['Left', 'Top'];\nexport const titleControls: ControlPanelSectionConfig = {\n  label: t('Chart Title'),\n  tabOverride: 'customize',\n  expanded: true,\n  controlSetRows: [\n    [<div className=\"section-header\">{t('X Axis')}</div>],\n    [\n      {\n        name: 'x_axis_title',\n        config: {\n          type: 'TextControl',\n          label: t('X Axis Title'),\n          renderTrigger: true,\n          default: '',\n          description: t('Changing this control takes effect instantly'),\n        },\n      },\n    ],\n    [\n      {\n        name: 'x_axis_title_margin',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          clearable: true,\n          label: t('X AXIS TITLE BOTTOM MARGIN'),\n          renderTrigger: true,\n          default: TITLE_MARGIN_OPTIONS[0],\n          choices: formatSelectOptions(TITLE_MARGIN_OPTIONS),\n          description: t('Changing this control takes effect instantly'),\n        },\n      },\n    ],\n    [<div className=\"section-header\">{t('Y Axis')}</div>],\n    [\n      {\n        name: 'y_axis_title',\n        config: {\n          type: 'TextControl',\n          label: t('Y Axis Title'),\n          renderTrigger: true,\n          default: '',\n          description: t('Changing this control takes effect instantly'),\n        },\n      },\n    ],\n    [\n      {\n        name: 'y_axis_title_margin',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          clearable: true,\n          label: t('Y AXIS TITLE MARGIN'),\n          renderTrigger: true,\n          default: TITLE_MARGIN_OPTIONS[0],\n          choices: formatSelectOptions(TITLE_MARGIN_OPTIONS),\n          description: t('Changing this control takes effect instantly'),\n        },\n      },\n    ],\n    [\n      {\n        name: 'y_axis_title_position',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          clearable: false,\n          label: t('Y AXIS TITLE POSITION'),\n          renderTrigger: true,\n          default: TITLE_POSITION_OPTIONS[0],\n          choices: formatSelectOptions(TITLE_POSITION_OPTIONS),\n          description: t('Changing this control takes effect instantly'),\n        },\n      },\n    ],\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Metric } from '../types';\n\nexport default function mainMetric(savedMetrics?: Metric[] | null) {\n  // Using 'count' as default metric if it exists, otherwise using whatever one shows up first\n  let metric;\n  if (savedMetrics && savedMetrics.length > 0) {\n    savedMetrics.forEach(m => {\n      if (m.metric_name === 'count') {\n        metric = 'count';\n      }\n    });\n    if (!metric) {\n      metric = savedMetrics[0].metric_name;\n    }\n  }\n  return metric;\n}\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { DTTM_ALIAS, PostProcessingSort, RollingType } from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\nexport const sortOperator: PostProcessingFactory<PostProcessingSort> = (\n  formData,\n  queryObject,\n) => {\n  const { x_axis: xAxis } = formData;\n  if (\n    (xAxis || queryObject.is_timeseries) &&\n    Object.values(RollingType).includes(formData.rolling_type)\n  ) {\n    const index = xAxis || DTTM_ALIAS;\n    return {\n      operation: 'sort',\n      options: {\n        columns: {\n          [index]: true,\n        },\n      },\n    };\n  }\n  return undefined;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { ControlSetRow } from '../types';\n\nexport const legacySortBy: ControlSetRow[] = [\n  ['legacy_order_by'],\n  [\n    {\n      name: 'order_desc',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Sort descending'),\n        default: true,\n        description: t(\n          'Whether to sort descending or ascending. Takes effect only when \"Sort by\" is set',\n        ),\n      },\n    },\n  ],\n];\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as sectionsModule from './sections';\n\nexport * from './utils';\nexport * from './constants';\nexport * from './operators';\n\n// can't do `export * as sections from './sections'`, babel-transformer will fail\nexport const sections = sectionsModule;\n\nexport * from './components/InfoTooltipWithTrigger';\nexport * from './components/ColumnOption';\nexport * from './components/ColumnTypeLabel/ColumnTypeLabel';\nexport * from './components/MetricOption';\n\n// React control components\nexport {\n  sharedControls,\n  dndEntity,\n  dndColumnsControl,\n} from './shared-controls';\nexport { default as sharedControlComponents } from './shared-controls/components';\nexport { legacySortBy } from './shared-controls/legacySortBy';\nexport * from './shared-controls/emitFilterControl';\nexport * from './shared-controls/components';\nexport * from './types';\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  ensureIsArray,\n  getColumnLabel,\n  getMetricLabel,\n  PostProcessingBoxplot,\n  BoxPlotQueryObjectWhiskerType,\n} from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\nconst PERCENTILE_REGEX = /(\\d+)\\/(\\d+) percentiles/;\n\nexport const boxplotOperator: PostProcessingFactory<PostProcessingBoxplot> = (\n  formData,\n  queryObject,\n) => {\n  const { groupby, whiskerOptions } = formData;\n\n  if (whiskerOptions) {\n    let whiskerType: BoxPlotQueryObjectWhiskerType;\n    let percentiles: [number, number] | undefined;\n    const percentileMatch = PERCENTILE_REGEX.exec(whiskerOptions as string);\n\n    if (whiskerOptions === 'Tukey' || !whiskerOptions) {\n      whiskerType = 'tukey';\n    } else if (whiskerOptions === 'Min/max (no outliers)') {\n      whiskerType = 'min/max';\n    } else if (percentileMatch) {\n      whiskerType = 'percentile';\n      percentiles = [\n        parseInt(percentileMatch[1], 10),\n        parseInt(percentileMatch[2], 10),\n      ];\n    } else {\n      throw new Error(`Unsupported whisker type: ${whiskerOptions}`);\n    }\n\n    return {\n      operation: 'boxplot',\n      options: {\n        whisker_type: whiskerType,\n        percentiles,\n        groupby: ensureIsArray(groupby).map(getColumnLabel),\n        metrics: ensureIsArray(queryObject.metrics).map(getMetricLabel),\n      },\n    };\n  }\n  return undefined;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { PostProcessingContribution } from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nexport const contributionOperator: PostProcessingFactory<PostProcessingContribution> =\n  (formData, queryObject) => {\n    if (formData.contributionMode) {\n      return {\n        operation: 'contribution',\n        options: {\n          orientation: formData.contributionMode,\n        },\n      };\n    }\n    return undefined;\n  };\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { PostProcessingFlatten } from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nexport const flattenOperator: PostProcessingFactory<PostProcessingFlatten> = (\n  formData,\n  queryObject,\n) => ({\n  operation: 'flatten',\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  DTTM_ALIAS,\n  ensureIsArray,\n  getColumnLabel,\n  getMetricLabel,\n  PostProcessingPivot,\n} from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\nexport const pivotOperator: PostProcessingFactory<PostProcessingPivot> = (\n  formData,\n  queryObject,\n) => {\n  const metricLabels = ensureIsArray(queryObject.metrics).map(getMetricLabel);\n  const { x_axis: xAxis } = formData;\n\n  if ((xAxis || queryObject.is_timeseries) && metricLabels.length) {\n    const index = [getColumnLabel(xAxis || DTTM_ALIAS)];\n    return {\n      operation: 'pivot',\n      options: {\n        index,\n        columns: ensureIsArray(queryObject.columns).map(getColumnLabel),\n        // Create 'dummy' mean aggregates to assign cell values in pivot table\n        // use the 'mean' aggregates to avoid drop NaN. PR: https://github.com/apache-superset/superset-ui/pull/1231\n        aggregates: Object.fromEntries(\n          metricLabels.map(metric => [metric, { operator: 'mean' }]),\n        ),\n        drop_missing_columns: false,\n        flatten_columns: false,\n        reset_index: false,\n      },\n    };\n  }\n\n  return undefined;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  DTTM_ALIAS,\n  getColumnLabel,\n  PostProcessingProphet,\n} from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nexport const prophetOperator: PostProcessingFactory<PostProcessingProphet> = (\n  formData,\n  queryObject,\n) => {\n  const index = getColumnLabel(formData.x_axis || DTTM_ALIAS);\n  if (formData.forecastEnabled) {\n    return {\n      operation: 'prophet',\n      options: {\n        time_grain: formData.time_grain_sqla,\n        periods: parseInt(formData.forecastPeriods, 10),\n        confidence_interval: parseFloat(formData.forecastInterval),\n        yearly_seasonality: formData.forecastSeasonalityYearly,\n        weekly_seasonality: formData.forecastSeasonalityWeekly,\n        daily_seasonality: formData.forecastSeasonalityDaily,\n        index,\n      },\n    };\n  }\n  return undefined;\n};\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  PostProcessingRename,\n  ensureIsArray,\n  getMetricLabel,\n  ComparisionType,\n} from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\nimport { getMetricOffsetsMap, isTimeComparison } from './utils';\n\nexport const renameOperator: PostProcessingFactory<PostProcessingRename> = (\n  formData,\n  queryObject,\n) => {\n  const metrics = ensureIsArray(queryObject.metrics);\n  const columns = ensureIsArray(queryObject.columns);\n  const { x_axis: xAxis, truncate_metric } = formData;\n  // remove or rename top level of column name(metric name) in the MultiIndex when\n  // 1) only 1 metric\n  // 2) exist dimentsion\n  // 3) exist xAxis\n  // 4) exist time comparison, and comparison type is \"actual values\"\n  // 5) truncate_metric in form_data and truncate_metric is true\n  if (\n    metrics.length === 1 &&\n    columns.length > 0 &&\n    (xAxis || queryObject.is_timeseries) &&\n    !(\n      // todo: we should provide an approach to handle derived metrics\n      (\n        isTimeComparison(formData, queryObject) &&\n        [\n          ComparisionType.Difference,\n          ComparisionType.Ratio,\n          ComparisionType.Percentage,\n        ].includes(formData.comparison_type)\n      )\n    ) &&\n    truncate_metric !== undefined &&\n    !!truncate_metric\n  ) {\n    const renamePairs: [string, string | null][] = [];\n\n    if (\n      // \"actual values\" will add derived metric.\n      // we will rename the \"metric\" from the metricWithOffset label\n      // for example: \"count__1 year ago\" =>\t\"1 year ago\"\n      isTimeComparison(formData, queryObject) &&\n      formData.comparison_type === ComparisionType.Values\n    ) {\n      const metricOffsetMap = getMetricOffsetsMap(formData, queryObject);\n      const timeOffsets = ensureIsArray(formData.time_compare);\n      [...metricOffsetMap.keys()].forEach(metricWithOffset => {\n        const offsetLabel = timeOffsets.find(offset =>\n          metricWithOffset.includes(offset),\n        );\n        renamePairs.push([metricWithOffset, offsetLabel]);\n      });\n    }\n\n    renamePairs.push([getMetricLabel(metrics[0]), null]);\n\n    return {\n      operation: 'rename',\n      options: {\n        columns: Object.fromEntries(renamePairs),\n        level: 0,\n        inplace: true,\n      },\n    };\n  }\n\n  return undefined;\n};\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { PostProcessingResample } from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nexport const resampleOperator: PostProcessingFactory<PostProcessingResample> = (\n  formData,\n  queryObject,\n) => {\n  const resampleZeroFill = formData.resample_method === 'zerofill';\n  const resampleMethod = resampleZeroFill ? 'asfreq' : formData.resample_method;\n  const resampleRule = formData.resample_rule;\n  if (resampleMethod && resampleRule) {\n    return {\n      operation: 'resample',\n      options: {\n        method: resampleMethod,\n        rule: resampleRule,\n        fill_value: resampleZeroFill ? 0 : null,\n      },\n    };\n  }\n  return undefined;\n};\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  ensureIsArray,\n  ensureIsInt,\n  PostProcessingCum,\n  PostProcessingRolling,\n  RollingType,\n} from '@superset-ui/core';\nimport { getMetricOffsetsMap, isTimeComparison } from './utils';\nimport { PostProcessingFactory } from './types';\n\nexport const rollingWindowOperator: PostProcessingFactory<\n  PostProcessingRolling | PostProcessingCum\n> = (formData, queryObject) => {\n  let columns: (string | undefined)[];\n  if (isTimeComparison(formData, queryObject)) {\n    const metricsMap = getMetricOffsetsMap(formData, queryObject);\n    columns = [\n      ...Array.from(metricsMap.values()),\n      ...Array.from(metricsMap.keys()),\n    ];\n  } else {\n    columns = ensureIsArray(queryObject.metrics).map(metric => {\n      if (typeof metric === 'string') {\n        return metric;\n      }\n      return metric.label;\n    });\n  }\n  const columnsMap = Object.fromEntries(columns.map(col => [col, col]));\n\n  if (formData.rolling_type === RollingType.Cumsum) {\n    return {\n      operation: 'cum',\n      options: {\n        operator: 'sum',\n        columns: columnsMap,\n      },\n    };\n  }\n\n  if (\n    [RollingType.Sum, RollingType.Mean, RollingType.Std].includes(\n      formData.rolling_type,\n    )\n  ) {\n    return {\n      operation: 'rolling',\n      options: {\n        rolling_type: formData.rolling_type,\n        window: ensureIsInt(formData.rolling_periods, 1),\n        min_periods: ensureIsInt(formData.min_periods, 0),\n        columns: columnsMap,\n      },\n    };\n  }\n\n  return undefined;\n};\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { ComparisionType, PostProcessingCompare } from '@superset-ui/core';\nimport { getMetricOffsetsMap, isTimeComparison } from './utils';\nimport { PostProcessingFactory } from './types';\n\nexport const timeCompareOperator: PostProcessingFactory<PostProcessingCompare> =\n  (formData, queryObject) => {\n    const comparisonType = formData.comparison_type;\n    const metricOffsetMap = getMetricOffsetsMap(formData, queryObject);\n\n    if (\n      isTimeComparison(formData, queryObject) &&\n      comparisonType !== ComparisionType.Values\n    ) {\n      return {\n        operation: 'compare',\n        options: {\n          source_columns: Array.from(metricOffsetMap.values()),\n          compare_columns: Array.from(metricOffsetMap.keys()),\n          compare_type: comparisonType,\n          drop_original_columns: true,\n        },\n      };\n    }\n\n    return undefined;\n  };\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  DTTM_ALIAS,\n  ensureIsArray,\n  getColumnLabel,\n  NumpyFunction,\n  PostProcessingPivot,\n} from '@superset-ui/core';\nimport { getMetricOffsetsMap, isTimeComparison } from './utils';\nimport { PostProcessingFactory } from './types';\n\nexport const timeComparePivotOperator: PostProcessingFactory<PostProcessingPivot> =\n  (formData, queryObject) => {\n    const metricOffsetMap = getMetricOffsetsMap(formData, queryObject);\n\n    if (isTimeComparison(formData, queryObject)) {\n      const aggregates = Object.fromEntries(\n        [...metricOffsetMap.values(), ...metricOffsetMap.keys()].map(metric => [\n          metric,\n          // use the 'mean' aggregates to avoid drop NaN\n          { operator: 'mean' as NumpyFunction },\n        ]),\n      );\n      const index = [getColumnLabel(formData.x_axis || DTTM_ALIAS)];\n\n      return {\n        operation: 'pivot',\n        options: {\n          index,\n          columns: ensureIsArray(queryObject.columns).map(getColumnLabel),\n          drop_missing_columns: false,\n          flatten_columns: false,\n          reset_index: false,\n          aggregates,\n        },\n      };\n    }\n\n    return undefined;\n  };\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nexport const TIME_COMPARISON_SEPARATOR = '__';\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { getMetricLabel, ensureIsArray } from '@superset-ui/core';\nimport { PostProcessingFactory } from '../types';\nimport { TIME_COMPARISON_SEPARATOR } from './constants';\n\nexport const getMetricOffsetsMap: PostProcessingFactory<Map<string, string>> = (\n  formData,\n  queryObject,\n) => {\n  /*\n    return metric offset-label and metric-label hashmap, for instance:\n    {\n      \"SUM(value)__1 year ago\": \"SUM(value)\",\n      \"SUM(value)__2 year ago\": \"SUM(value)\"\n    }\n  */\n  const queryMetrics = ensureIsArray(queryObject.metrics);\n  const timeOffsets = ensureIsArray(formData.time_compare);\n\n  const metricLabels = queryMetrics.map(getMetricLabel);\n  const metricOffsetMap = new Map<string, string>();\n  metricLabels.forEach((metric: string) => {\n    timeOffsets.forEach((offset: string) => {\n      metricOffsetMap.set(\n        [metric, offset].join(TIME_COMPARISON_SEPARATOR),\n        metric,\n      );\n    });\n  });\n\n  return metricOffsetMap;\n};\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  ensureIsArray,\n  JsonObject,\n  QueryFormData,\n  ComparisionType,\n} from '@superset-ui/core';\nimport { isString } from 'lodash';\n\nexport const isDerivedSeries = (\n  series: JsonObject,\n  formData: QueryFormData,\n): boolean => {\n  const comparisonType = formData.comparison_type;\n  if (comparisonType !== ComparisionType.Values) {\n    return false;\n  }\n\n  const timeCompare: string[] = ensureIsArray(formData?.time_compare);\n  return isString(series.name)\n    ? !!timeCompare.find(timeOffset => series.name.endsWith(timeOffset))\n    : false;\n};\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { ComparisionType } from '@superset-ui/core';\nimport { getMetricOffsetsMap } from './getMetricOffsetsMap';\nimport { PostProcessingFactory } from '../types';\n\nexport const isTimeComparison: PostProcessingFactory<boolean> = (\n  formData,\n  queryObject,\n) => {\n  const comparisonType = formData.comparison_type;\n  const metricOffsetMap = getMetricOffsetsMap(formData, queryObject);\n\n  return (\n    Object.values(ComparisionType).includes(comparisonType) &&\n    metricOffsetMap.size > 0\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FeatureFlag, isFeatureEnabled, t } from '@superset-ui/core';\n\nconst enableCrossFilter = isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS);\n\nexport const emitFilterControl = enableCrossFilter\n  ? [\n      {\n        name: 'emit_filter',\n        config: {\n          type: 'CheckboxControl',\n          label: t('Enable dashboard cross filters'),\n          default: false,\n          renderTrigger: true,\n          description: t('Enable dashboard cross filters'),\n        },\n      },\n    ]\n  : [];\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, QueryResponse } from '@superset-ui/core';\nimport { Dataset, isColumnMeta, isDataset, isQueryResponse } from '../types';\n\n/**\n * Convert Datasource columns to column choices\n */\nexport default function columnChoices(\n  datasource?: Dataset | QueryResponse | null,\n): [string, string][] {\n  if (isDataset(datasource) && isColumnMeta(datasource.columns[0])) {\n    return datasource.columns\n      .map((col): [string, string] => [\n        col.column_name,\n        col.verbose_name || col.column_name,\n      ])\n      .sort((opt1, opt2) =>\n        opt1[1].toLowerCase() > opt2[1].toLowerCase() ? 1 : -1,\n      );\n  }\n\n  if (isQueryResponse(datasource)) {\n    return ensureIsArray(datasource.columns)\n      .map((col): [string, string] => [col.name, col.name])\n      .sort((opt1, opt2) =>\n        opt1[1].toLowerCase() > opt2[1].toLowerCase() ? 1 : -1,\n      );\n  }\n\n  return [];\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport memoizeOne from 'memoize-one';\nimport { addAlpha, DataRecord } from '@superset-ui/core';\nimport {\n  ColorFormatters,\n  COMPARATOR,\n  ConditionalFormattingConfig,\n  MULTIPLE_VALUE_COMPARATORS,\n} from '../types';\n\nexport const round = (num: number, precision = 0) =>\n  Number(`${Math.round(Number(`${num}e+${precision}`))}e-${precision}`);\n\nconst MIN_OPACITY_BOUNDED = 0.05;\nconst MIN_OPACITY_UNBOUNDED = 0;\nconst MAX_OPACITY = 1;\nexport const getOpacity = (\n  value: number,\n  cutoffPoint: number,\n  extremeValue: number,\n  minOpacity = MIN_OPACITY_BOUNDED,\n  maxOpacity = MAX_OPACITY,\n) => {\n  if (extremeValue === cutoffPoint) {\n    return maxOpacity;\n  }\n  return Math.min(\n    maxOpacity,\n    round(\n      Math.abs(\n        ((maxOpacity - minOpacity) / (extremeValue - cutoffPoint)) *\n          (value - cutoffPoint),\n      ) + minOpacity,\n      2,\n    ),\n  );\n};\n\nexport const getColorFunction = (\n  {\n    operator,\n    targetValue,\n    targetValueLeft,\n    targetValueRight,\n    colorScheme,\n  }: ConditionalFormattingConfig,\n  columnValues: number[],\n) => {\n  let minOpacity = MIN_OPACITY_BOUNDED;\n  const maxOpacity = MAX_OPACITY;\n\n  let comparatorFunction: (\n    value: number,\n    allValues: number[],\n  ) => false | { cutoffValue: number; extremeValue: number };\n  if (operator === undefined || colorScheme === undefined) {\n    return () => undefined;\n  }\n  if (\n    MULTIPLE_VALUE_COMPARATORS.includes(operator) &&\n    (targetValueLeft === undefined || targetValueRight === undefined)\n  ) {\n    return () => undefined;\n  }\n  if (\n    operator !== COMPARATOR.NONE &&\n    !MULTIPLE_VALUE_COMPARATORS.includes(operator) &&\n    targetValue === undefined\n  ) {\n    return () => undefined;\n  }\n  switch (operator) {\n    case COMPARATOR.NONE:\n      minOpacity = MIN_OPACITY_UNBOUNDED;\n      comparatorFunction = (value: number, allValues: number[]) => {\n        const cutoffValue = Math.min(...allValues);\n        const extremeValue = Math.max(...allValues);\n        return value >= cutoffValue && value <= extremeValue\n          ? { cutoffValue, extremeValue }\n          : false;\n      };\n      break;\n    case COMPARATOR.GREATER_THAN:\n      comparatorFunction = (value: number, allValues: number[]) =>\n        value > targetValue!\n          ? { cutoffValue: targetValue!, extremeValue: Math.max(...allValues) }\n          : false;\n      break;\n    case COMPARATOR.LESS_THAN:\n      comparatorFunction = (value: number, allValues: number[]) =>\n        value < targetValue!\n          ? { cutoffValue: targetValue!, extremeValue: Math.min(...allValues) }\n          : false;\n      break;\n    case COMPARATOR.GREATER_OR_EQUAL:\n      comparatorFunction = (value: number, allValues: number[]) =>\n        value >= targetValue!\n          ? { cutoffValue: targetValue!, extremeValue: Math.max(...allValues) }\n          : false;\n      break;\n    case COMPARATOR.LESS_OR_EQUAL:\n      comparatorFunction = (value: number, allValues: number[]) =>\n        value <= targetValue!\n          ? { cutoffValue: targetValue!, extremeValue: Math.min(...allValues) }\n          : false;\n      break;\n    case COMPARATOR.EQUAL:\n      comparatorFunction = (value: number) =>\n        value === targetValue!\n          ? { cutoffValue: targetValue!, extremeValue: targetValue! }\n          : false;\n      break;\n    case COMPARATOR.NOT_EQUAL:\n      comparatorFunction = (value: number, allValues: number[]) => {\n        if (value === targetValue!) {\n          return false;\n        }\n        const max = Math.max(...allValues);\n        const min = Math.min(...allValues);\n        return {\n          cutoffValue: targetValue!,\n          extremeValue:\n            Math.abs(targetValue! - min) > Math.abs(max - targetValue!)\n              ? min\n              : max,\n        };\n      };\n      break;\n    case COMPARATOR.BETWEEN:\n      comparatorFunction = (value: number) =>\n        value > targetValueLeft! && value < targetValueRight!\n          ? { cutoffValue: targetValueLeft!, extremeValue: targetValueRight! }\n          : false;\n      break;\n    case COMPARATOR.BETWEEN_OR_EQUAL:\n      comparatorFunction = (value: number) =>\n        value >= targetValueLeft! && value <= targetValueRight!\n          ? { cutoffValue: targetValueLeft!, extremeValue: targetValueRight! }\n          : false;\n      break;\n    case COMPARATOR.BETWEEN_OR_LEFT_EQUAL:\n      comparatorFunction = (value: number) =>\n        value >= targetValueLeft! && value < targetValueRight!\n          ? { cutoffValue: targetValueLeft!, extremeValue: targetValueRight! }\n          : false;\n      break;\n    case COMPARATOR.BETWEEN_OR_RIGHT_EQUAL:\n      comparatorFunction = (value: number) =>\n        value > targetValueLeft! && value <= targetValueRight!\n          ? { cutoffValue: targetValueLeft!, extremeValue: targetValueRight! }\n          : false;\n      break;\n    default:\n      comparatorFunction = () => false;\n      break;\n  }\n\n  return (value: number) => {\n    const compareResult = comparatorFunction(value, columnValues);\n    if (compareResult === false) return undefined;\n    const { cutoffValue, extremeValue } = compareResult;\n    return addAlpha(\n      colorScheme,\n      getOpacity(value, cutoffValue, extremeValue, minOpacity, maxOpacity),\n    );\n  };\n};\n\nexport const getColorFormatters = memoizeOne(\n  (\n    columnConfig: ConditionalFormattingConfig[] | undefined,\n    data: DataRecord[],\n  ) =>\n    columnConfig?.reduce(\n      (acc: ColorFormatters, config: ConditionalFormattingConfig) => {\n        if (\n          config?.column !== undefined &&\n          (config?.operator === COMPARATOR.NONE ||\n            (config?.operator !== undefined &&\n              (MULTIPLE_VALUE_COMPARATORS.includes(config?.operator)\n                ? config?.targetValueLeft !== undefined &&\n                  config?.targetValueRight !== undefined\n                : config?.targetValue !== undefined)))\n        ) {\n          acc.push({\n            column: config?.column,\n            getColorFromValue: getColorFunction(\n              config,\n              data.map(row => row[config.column!] as number),\n            ),\n          });\n        }\n        return acc;\n      },\n      [],\n    ) ?? [],\n);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport default function ensureIsInt<T>(\n  value: T,\n  defaultValue?: number,\n): number {\n  const val = parseInt(String(value), 10);\n  const defaultOrNaN = defaultValue === undefined ? NaN : defaultValue;\n  return Number.isNaN(val) ? defaultOrNaN : val;\n}\n"],"names":["baseTimeSection","label","t","expanded","description","legacyTimeseriesTime","controlSetRows","legacyRegularTime","datasourceAndVizType","name","config","type","hidden","colorScheme","annotations","tabOverride","default","renderTrigger","advancedAnalyticsControls","className","choices","concat","Object","values","isInt","visibility","controls","rollingTypeControlName","endsWith","Boolean","value","multi","freeForm","annotationLayers","annotationsAndLayersControls","FORECAST_DEFAULT_DATA","forecastEnabled","forecastInterval","forecastPeriods","forecastSeasonalityDaily","forecastSeasonalityWeekly","forecastSeasonalityYearly","forecastIntervalControls","validators","legacyValidateInteger","legacyValidateNumber","TITLE_MARGIN_OPTIONS","TITLE_POSITION_OPTIONS","titleControls","clearable","mainMetric","savedMetrics","metric","length","forEach","m","metric_name","sortOperator","formData","queryObject","x_axis","xAxis","is_timeseries","includes","rolling_type","operation","options","columns","legacySortBy","sections","PERCENTILE_REGEX","boxplotOperator","groupby","whiskerOptions","whiskerType","percentiles","percentileMatch","exec","Error","parseInt","whisker_type","map","metrics","contributionOperator","contributionMode","orientation","flattenOperator","pivotOperator","metricLabels","index","aggregates","fromEntries","operator","drop_missing_columns","flatten_columns","reset_index","prophetOperator","time_grain","time_grain_sqla","periods","confidence_interval","parseFloat","yearly_seasonality","weekly_seasonality","daily_seasonality","renameOperator","truncate_metric","comparison_type","undefined","renamePairs","metricOffsetMap","timeOffsets","time_compare","keys","metricWithOffset","offsetLabel","find","offset","push","level","inplace","resampleOperator","resampleZeroFill","resample_method","resampleMethod","resampleRule","resample_rule","method","rule","fill_value","rollingWindowOperator","metricsMap","Array","from","columnsMap","col","window","rolling_periods","min_periods","timeCompareOperator","comparisonType","source_columns","compare_columns","compare_type","drop_original_columns","timeComparePivotOperator","TIME_COMPARISON_SEPARATOR","getMetricOffsetsMap","queryMetrics","Map","set","join","isDerivedSeries","series","timeCompare","timeOffset","isTimeComparison","size","emitFilterControl","columnChoices","datasource","column_name","verbose_name","sort","opt1","opt2","toLowerCase","round","num","precision","Number","Math","getOpacity","cutoffPoint","extremeValue","minOpacity","maxOpacity","min","abs","getColorFunction","targetValue","targetValueLeft","targetValueRight","columnValues","comparatorFunction","allValues","cutoffValue","max","compareResult","getColorFormatters","columnConfig","data","reduce","acc","column","getColorFromValue","row","ensureIsInt","defaultValue","val","String","defaultOrNaN","NaN","isNaN"],"sourceRoot":""}