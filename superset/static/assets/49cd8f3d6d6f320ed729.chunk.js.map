{"version":3,"file":"49cd8f3d6d6f320ed729.chunk.js","mappings":"kPA+Bc,SAAUA,EACtBC,GAEA,MAAM,KACJC,EADI,SAEJC,EAFI,OAGJC,EAHI,MAIJC,EAJI,YAKJC,EALI,iBAMJC,EANI,mBAOJC,EAPI,gBAQJC,EARI,YASJC,EATI,SAUJC,GACEV,GACE,aAAEW,GAAiBT,GAElBU,EAAOC,IAAY,IAAAC,UAAQ,MAAWH,EAAAA,EAAgB,IAEvDI,EAAgBH,IACpB,MAAMI,GAAwB,OAAsBJ,GACpDC,EAASG,GACT,MAAMC,EAA+B,GACjCD,EAAYE,SACdD,EAAcE,iBAAmBH,EAAY,IAG/CX,EAAY,CACVY,cAAAA,EACAR,YAAa,CACXG,MAAOI,EAAYE,OAASF,EAAc,UAKhD,IAAAI,YAAU,KACRL,EAAY,MAACJ,EAAAA,EAAgB,QAG5B,CAACU,KAAKC,UAAUX,MAEnB,IAAAS,YAAU,KAAK,MACbL,EAAY,SAACN,EAAYG,OAAb,EAAsB,QACjC,CAACS,KAAKC,UAAUb,EAAYG,SAE/B,MAAMW,GAAetB,GAAQ,IAAIuB,QAC/BC,GAAOA,EAAIC,QAAU,eAGjBC,EACmB,IAAvBJ,EAAYL,QACR,IAAAU,GAAE,oBACF,IAAAC,IAAG,YAAa,aAAcN,EAAYL,OAAQK,EAAYL,QAE9DY,EAA8B,GAChCrB,EAAYsB,kBACdD,EAAaE,OACX,QAAC,KAAD,CAAeC,OAAQxB,EAAYyB,gBAChCzB,EAAYsB,kBAKnB,MAAMI,EAAUZ,EAAYa,KACzBX,IACC,MAAQY,YAAaC,EAAYC,aAAcC,GAAgBf,EAC/D,MAAO,CACLgB,MAAK,MAAED,EAAAA,EAAeF,EACtB1B,MAAO0B,MAKb,OACE,QAAC,KAAD,CAAmBnC,OAAQA,EAAQC,MAAOA,IACxC,QAAC,KAAD,KACE8B,eAAgBzB,EAAYyB,gBACxBJ,IAEJ,QAAC,KAAD,CACEY,YAAU,EACV9B,MAAOA,EACP+B,YAAahB,EAEbiB,SAAU7B,EACV8B,aAAcvC,EACdwC,aAAcvC,EACdwC,IAAKrC,EACLyB,QAASA,EACTa,wBAAyBxC,Q,6EClG5B,MAAMyC,EAAoB,QAAmC;gBACpD,EAAG9C,OAAAA,KAAaA;WACrB,EAAGC,MAAAA,KAAYA;EAGb8C,GAAiB,QAAO,IAAS;;;;EAMjCC,EAAgB,QAE3B;WACS,EAAGC,MAAAA,EAAOnB,OAAAA,EAAS,YAAnB,sBAAiCmB,EAAMC,OAAOpB,SAA9C,EAAiC,EAAsBqB","sources":["webpack://superset/./src/filters/components/TimeColumn/TimeColumnFilterPlugin.tsx","webpack://superset/./src/filters/components/common.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ensureIsArray,\n  ExtraFormData,\n  GenericDataType,\n  t,\n  tn,\n} from '@superset-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Select } from 'src/components';\nimport { FormItemProps } from 'antd/lib/form';\nimport { FilterPluginStyle, StyledFormItem, StatusMessage } from '../common';\nimport { PluginFilterTimeColumnProps } from './types';\n\nexport default function PluginFilterTimeColumn(\n  props: PluginFilterTimeColumnProps,\n) {\n  const {\n    data,\n    formData,\n    height,\n    width,\n    setDataMask,\n    setFocusedFilter,\n    unsetFocusedFilter,\n    setFilterActive,\n    filterState,\n    inputRef,\n  } = props;\n  const { defaultValue } = formData;\n\n  const [value, setValue] = useState<string[]>(defaultValue ?? []);\n\n  const handleChange = (value?: string[] | string | null) => {\n    const resultValue: string[] = ensureIsArray<string>(value);\n    setValue(resultValue);\n    const extraFormData: ExtraFormData = {};\n    if (resultValue.length) {\n      extraFormData.granularity_sqla = resultValue[0];\n    }\n\n    setDataMask({\n      extraFormData,\n      filterState: {\n        value: resultValue.length ? resultValue : null,\n      },\n    });\n  };\n\n  useEffect(() => {\n    handleChange(defaultValue ?? null);\n    // I think after Config Modal update some filter it re-creates default value for all other filters\n    // so we can process it like this `JSON.stringify` or start to use `Immer`\n  }, [JSON.stringify(defaultValue)]);\n\n  useEffect(() => {\n    handleChange(filterState.value ?? null);\n  }, [JSON.stringify(filterState.value)]);\n\n  const timeColumns = (data || []).filter(\n    row => row.dtype === GenericDataType.TEMPORAL,\n  );\n\n  const placeholderText =\n    timeColumns.length === 0\n      ? t('No time columns')\n      : tn('%s option', '%s options', timeColumns.length, timeColumns.length);\n\n  const formItemData: FormItemProps = {};\n  if (filterState.validateMessage) {\n    formItemData.extra = (\n      <StatusMessage status={filterState.validateStatus}>\n        {filterState.validateMessage}\n      </StatusMessage>\n    );\n  }\n\n  const options = timeColumns.map(\n    (row: { column_name: string; verbose_name: string | null }) => {\n      const { column_name: columnName, verbose_name: verboseName } = row;\n      return {\n        label: verboseName ?? columnName,\n        value: columnName,\n      };\n    },\n  );\n\n  return (\n    <FilterPluginStyle height={height} width={width}>\n      <StyledFormItem\n        validateStatus={filterState.validateStatus}\n        {...formItemData}\n      >\n        <Select\n          allowClear\n          value={value}\n          placeholder={placeholderText}\n          // @ts-ignore\n          onChange={handleChange}\n          onMouseEnter={setFocusedFilter}\n          onMouseLeave={unsetFocusedFilter}\n          ref={inputRef}\n          options={options}\n          onDropdownVisibleChange={setFilterActive}\n        />\n      </StyledFormItem>\n    </FilterPluginStyle>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled } from '@superset-ui/core';\nimport { PluginFilterStylesProps } from './types';\nimport FormItem from '../../components/Form/FormItem';\n\nexport const FilterPluginStyle = styled.div<PluginFilterStylesProps>`\n  min-height: ${({ height }) => height}px;\n  width: ${({ width }) => width}px;\n`;\n\nexport const StyledFormItem = styled(FormItem)`\n  &.ant-row.ant-form-item {\n    margin: 0;\n  }\n`;\n\nexport const StatusMessage = styled.div<{\n  status?: 'error' | 'warning' | 'info';\n}>`\n  color: ${({ theme, status = 'error' }) => theme.colors[status]?.base};\n`;\n"],"names":["PluginFilterTimeColumn","props","data","formData","height","width","setDataMask","setFocusedFilter","unsetFocusedFilter","setFilterActive","filterState","inputRef","defaultValue","value","setValue","useState","handleChange","resultValue","extraFormData","length","granularity_sqla","useEffect","JSON","stringify","timeColumns","filter","row","dtype","placeholderText","t","tn","formItemData","validateMessage","extra","status","validateStatus","options","map","column_name","columnName","verbose_name","verboseName","label","allowClear","placeholder","onChange","onMouseEnter","onMouseLeave","ref","onDropdownVisibleChange","FilterPluginStyle","StyledFormItem","StatusMessage","theme","colors","base"],"sourceRoot":""}