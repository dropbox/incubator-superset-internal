{"version":3,"file":"ed08f2ba8017545878d5.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/views/CRUD/annotation/AnnotationModal.tsx","webpack://superset/./src/views/CRUD/annotation/AnnotationList.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | React.ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\nimport { RangePicker } from 'src/components/DatePicker';\nimport moment from 'moment';\nimport Icons from 'src/components/Icons';\nimport Modal from 'src/components/Modal';\nimport { StyledIcon } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { JsonEditor } from 'src/components/AsyncAceEditor';\n\nimport { AnnotationObject } from './types';\n\ninterface AnnotationModalProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  annnotationLayerId: number;\n  annotation?: AnnotationObject | null;\n  onAnnotationAdd?: (annotation?: AnnotationObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst StyledAnnotationTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 2}px auto\n    ${({ theme }) => theme.gridUnit * 4}px auto;\n`;\n\nconst StyledJsonEditor = styled(JsonEditor)`\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  border: 1px solid ${({ theme }) => theme.colors.secondary.light2};\n`;\n\nconst AnnotationContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 5}px;\n\n  .control-label {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit / 2}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n\n  textarea {\n    flex: 1 1 auto;\n    height: ${({ theme }) => theme.gridUnit * 17}px;\n    resize: none;\n    width: 100%;\n  }\n\n  textarea,\n  input[type='text'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n  }\n\n  input[type='text'] {\n    width: 65%;\n  }\n`;\n\nconst AnnotationModal: FunctionComponent<AnnotationModalProps> = ({\n  addDangerToast,\n  addSuccessToast,\n  annnotationLayerId,\n  annotation = null,\n  onAnnotationAdd,\n  onHide,\n  show,\n}) => {\n  const [disableSave, setDisableSave] = useState<boolean>(true);\n  const [currentAnnotation, setCurrentAnnotation] =\n    useState<AnnotationObject | null>(null);\n  const isEditMode = annotation !== null;\n\n  // annotation fetch logic\n  const {\n    state: { loading, resource },\n    fetchResource,\n    createResource,\n    updateResource,\n  } = useSingleViewResource<AnnotationObject>(\n    `annotation_layer/${annnotationLayerId}/annotation`,\n    t('annotation'),\n    addDangerToast,\n  );\n\n  const resetAnnotation = () => {\n    // Reset annotation\n    setCurrentAnnotation({\n      short_descr: '',\n      start_dttm: '',\n      end_dttm: '',\n      json_metadata: '',\n      long_descr: '',\n    });\n  };\n\n  const hide = () => {\n    if (isEditMode) {\n      setCurrentAnnotation(resource);\n    } else {\n      resetAnnotation();\n    }\n    onHide();\n  };\n\n  const onSave = () => {\n    if (isEditMode) {\n      // Edit\n      if (currentAnnotation && currentAnnotation.id) {\n        const update_id = currentAnnotation.id;\n        delete currentAnnotation.id;\n        delete currentAnnotation.created_by;\n        delete currentAnnotation.changed_by;\n        delete currentAnnotation.changed_on_delta_humanized;\n        delete currentAnnotation.layer;\n        updateResource(update_id, currentAnnotation).then(response => {\n          // No response on error\n          if (!response) {\n            return;\n          }\n\n          if (onAnnotationAdd) {\n            onAnnotationAdd();\n          }\n\n          hide();\n\n          addSuccessToast(t('The annotation has been updated'));\n        });\n      }\n    } else if (currentAnnotation) {\n      // Create\n      createResource(currentAnnotation).then(response => {\n        if (!response) {\n          return;\n        }\n\n        if (onAnnotationAdd) {\n          onAnnotationAdd();\n        }\n\n        hide();\n\n        addSuccessToast(t('The annotation has been saved'));\n      });\n    }\n  };\n\n  const onAnnotationTextChange = (\n    event:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { target } = event;\n\n    const data = {\n      ...currentAnnotation,\n      end_dttm: currentAnnotation ? currentAnnotation.end_dttm : '',\n      short_descr: currentAnnotation ? currentAnnotation.short_descr : '',\n      start_dttm: currentAnnotation ? currentAnnotation.start_dttm : '',\n    };\n\n    data[target.name] = target.value;\n    setCurrentAnnotation(data);\n  };\n\n  const onJsonChange = (json: string) => {\n    const data = {\n      ...currentAnnotation,\n      end_dttm: currentAnnotation ? currentAnnotation.end_dttm : '',\n      json_metadata: json,\n      short_descr: currentAnnotation ? currentAnnotation.short_descr : '',\n      start_dttm: currentAnnotation ? currentAnnotation.start_dttm : '',\n    };\n    setCurrentAnnotation(data);\n  };\n\n  const onDateChange = (value: any, dateString: Array<string>) => {\n    const data = {\n      ...currentAnnotation,\n      end_dttm:\n        currentAnnotation && dateString[1].length\n          ? moment(dateString[1]).format('YYYY-MM-DD HH:mm')\n          : '',\n      short_descr: currentAnnotation ? currentAnnotation.short_descr : '',\n      start_dttm:\n        currentAnnotation && dateString[0].length\n          ? moment(dateString[0]).format('YYYY-MM-DD HH:mm')\n          : '',\n    };\n    setCurrentAnnotation(data);\n  };\n\n  const validate = () => {\n    if (\n      currentAnnotation &&\n      currentAnnotation.short_descr?.length &&\n      currentAnnotation.start_dttm?.length &&\n      currentAnnotation.end_dttm?.length\n    ) {\n      setDisableSave(false);\n    } else {\n      setDisableSave(true);\n    }\n  };\n\n  // Initialize\n  useEffect(() => {\n    if (\n      isEditMode &&\n      (!currentAnnotation ||\n        !currentAnnotation.id ||\n        (annotation && annotation.id !== currentAnnotation.id) ||\n        show)\n    ) {\n      if (annotation && annotation.id !== null && !loading) {\n        const id = annotation.id || 0;\n\n        fetchResource(id);\n      }\n    } else if (\n      !isEditMode &&\n      (!currentAnnotation || currentAnnotation.id || show)\n    ) {\n      resetAnnotation();\n    }\n  }, [annotation]);\n\n  useEffect(() => {\n    if (resource) {\n      setCurrentAnnotation(resource);\n    }\n  }, [resource]);\n\n  // Validation\n  useEffect(() => {\n    validate();\n  }, [\n    currentAnnotation ? currentAnnotation.short_descr : '',\n    currentAnnotation ? currentAnnotation.start_dttm : '',\n    currentAnnotation ? currentAnnotation.end_dttm : '',\n  ]);\n\n  return (\n    <Modal\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={hide}\n      primaryButtonName={isEditMode ? t('Save') : t('Add')}\n      show={show}\n      width=\"55%\"\n      title={\n        <h4 data-test=\"annotaion-modal-title\">\n          {isEditMode ? (\n            <Icons.EditAlt css={StyledIcon} />\n          ) : (\n            <Icons.PlusLarge css={StyledIcon} />\n          )}\n          {isEditMode ? t('Edit annotation') : t('Add annotation')}\n        </h4>\n      }\n    >\n      <StyledAnnotationTitle>\n        <h4>{t('Basic information')}</h4>\n      </StyledAnnotationTitle>\n      <AnnotationContainer>\n        <div className=\"control-label\">\n          {t('Annotation name')}\n          <span className=\"required\">*</span>\n        </div>\n        <input\n          name=\"short_descr\"\n          onChange={onAnnotationTextChange}\n          type=\"text\"\n          value={currentAnnotation?.short_descr}\n        />\n      </AnnotationContainer>\n      <AnnotationContainer>\n        <div className=\"control-label\">\n          {t('date')}\n          <span className=\"required\">*</span>\n        </div>\n        <RangePicker\n          format=\"YYYY-MM-DD HH:mm\"\n          onChange={onDateChange}\n          showTime={{ format: 'hh:mm a' }}\n          use12Hours\n          value={\n            currentAnnotation?.start_dttm?.length ||\n            currentAnnotation?.end_dttm?.length\n              ? [\n                  moment(currentAnnotation.start_dttm),\n                  moment(currentAnnotation.end_dttm),\n                ]\n              : null\n          }\n        />\n      </AnnotationContainer>\n      <StyledAnnotationTitle>\n        <h4>{t('Additional information')}</h4>\n      </StyledAnnotationTitle>\n      <AnnotationContainer>\n        <div className=\"control-label\">{t('description')}</div>\n        <textarea\n          name=\"long_descr\"\n          value={currentAnnotation ? currentAnnotation.long_descr : ''}\n          placeholder={t('Description (this can be seen in the list)')}\n          onChange={onAnnotationTextChange}\n        />\n      </AnnotationContainer>\n      <AnnotationContainer>\n        <div className=\"control-label\">{t('JSON metadata')}</div>\n        <StyledJsonEditor\n          onChange={onJsonChange}\n          value={\n            currentAnnotation && currentAnnotation.json_metadata\n              ? currentAnnotation.json_metadata\n              : ''\n          }\n          width=\"100%\"\n          height=\"120px\"\n        />\n      </AnnotationContainer>\n    </Modal>\n  );\n};\n\nexport default withToasts(AnnotationModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport { useParams, Link, useHistory } from 'react-router-dom';\nimport { css, t, styled, SupersetClient } from '@superset-ui/core';\nimport moment from 'moment';\nimport rison from 'rison';\n\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ListView, { ListViewProps } from 'src/components/ListView';\nimport SubMenu, { SubMenuProps } from 'src/views/components/SubMenu';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createErrorHandler } from 'src/views/CRUD/utils';\n\nimport { AnnotationObject } from './types';\nimport AnnotationModal from './AnnotationModal';\n\nconst PAGE_SIZE = 25;\n\ninterface AnnotationListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n}\n\nconst StyledHeader = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: row;\n\n    a,\n    Link {\n      margin-left: ${theme.gridUnit * 4}px;\n      font-size: ${theme.typography.sizes.s}px;\n      font-weight: ${theme.typography.weights.normal};\n      text-decoration: underline;\n    }\n  `}\n`;\n\nfunction AnnotationList({\n  addDangerToast,\n  addSuccessToast,\n}: AnnotationListProps) {\n  const { annotationLayerId }: any = useParams();\n  const {\n    state: {\n      loading,\n      resourceCount: annotationsCount,\n      resourceCollection: annotations,\n      bulkSelectEnabled,\n    },\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<AnnotationObject>(\n    `annotation_layer/${annotationLayerId}/annotation`,\n    t('annotation'),\n    addDangerToast,\n    false,\n  );\n  const [annotationModalOpen, setAnnotationModalOpen] =\n    useState<boolean>(false);\n  const [annotationLayerName, setAnnotationLayerName] = useState<string>('');\n  const [currentAnnotation, setCurrentAnnotation] =\n    useState<AnnotationObject | null>(null);\n  const [annotationCurrentlyDeleting, setAnnotationCurrentlyDeleting] =\n    useState<AnnotationObject | null>(null);\n  const handleAnnotationEdit = (annotation: AnnotationObject | null) => {\n    setCurrentAnnotation(annotation);\n    setAnnotationModalOpen(true);\n  };\n\n  const fetchAnnotationLayer = useCallback(\n    async function fetchAnnotationLayer() {\n      try {\n        const response = await SupersetClient.get({\n          endpoint: `/api/v1/annotation_layer/${annotationLayerId}`,\n        });\n        setAnnotationLayerName(response.json.result.name);\n      } catch (response) {\n        await getClientErrorObject(response).then(({ error }: any) => {\n          addDangerToast(error.error || error.statusText || error);\n        });\n      }\n    },\n    [annotationLayerId],\n  );\n\n  const handleAnnotationDelete = ({ id, short_descr }: AnnotationObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${annotationLayerId}/annotation/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setAnnotationCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', short_descr));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting %s: %s', short_descr, errMsg),\n        ),\n      ),\n    );\n  };\n\n  const handleBulkAnnotationsDelete = (\n    annotationsToDelete: AnnotationObject[],\n  ) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${annotationLayerId}/annotation/?q=${rison.encode(\n        annotationsToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected annotations: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  // get the Annotation Layer\n  useEffect(() => {\n    fetchAnnotationLayer();\n  }, [fetchAnnotationLayer]);\n\n  const initialSort = [{ id: 'short_descr', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'short_descr',\n        Header: t('Label'),\n      },\n      {\n        accessor: 'long_descr',\n        Header: t('Description'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { start_dttm: startDttm },\n          },\n        }: any) => moment(new Date(startDttm)).format('ll'),\n        Header: t('Start'),\n        accessor: 'start_dttm',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { end_dttm: endDttm },\n          },\n        }: any) => moment(new Date(endDttm)).format('ll'),\n        Header: t('End'),\n        accessor: 'end_dttm',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () => handleAnnotationEdit(original);\n          const handleDelete = () => setAnnotationCurrentlyDeleting(original);\n          const actions = [\n            {\n              label: 'edit-action',\n              tooltip: t('Edit annotation'),\n              placement: 'bottom',\n              icon: 'Edit',\n              onClick: handleEdit,\n            },\n            {\n              label: 'delete-action',\n              tooltip: t('Delete annotation'),\n              placement: 'bottom',\n              icon: 'Trash',\n              onClick: handleDelete,\n            },\n          ];\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n      },\n    ],\n    [true, true],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  subMenuButtons.push({\n    name: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Annotation')}\n      </>\n    ),\n    buttonStyle: 'primary',\n    onClick: () => {\n      handleAnnotationEdit(null);\n    },\n  });\n\n  subMenuButtons.push({\n    name: t('Bulk select'),\n    onClick: toggleBulkSelect,\n    buttonStyle: 'secondary',\n    'data-test': 'annotation-bulk-select',\n  });\n\n  let hasHistory = true;\n\n  try {\n    useHistory();\n  } catch (err) {\n    // If error is thrown, we know not to use <Link> in render\n    hasHistory = false;\n  }\n\n  const emptyState = {\n    title: t('No annotation yet'),\n    image: 'filter-results.svg',\n    buttonAction: () => {\n      handleAnnotationEdit(null);\n    },\n    buttonText: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Annotation')}\n      </>\n    ),\n  };\n\n  return (\n    <>\n      <SubMenu\n        name={\n          <StyledHeader>\n            <span>{t('Annotation Layer %s', annotationLayerName)}</span>\n            <span>\n              {hasHistory ? (\n                <Link to=\"/annotationlayermodelview/list/\">Back to all</Link>\n              ) : (\n                <a href=\"/annotationlayermodelview/list/\">Back to all</a>\n              )}\n            </span>\n          </StyledHeader>\n        }\n        buttons={subMenuButtons}\n      />\n      <AnnotationModal\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        annotation={currentAnnotation}\n        show={annotationModalOpen}\n        onAnnotationAdd={() => refreshData()}\n        annnotationLayerId={annotationLayerId}\n        onHide={() => setAnnotationModalOpen(false)}\n      />\n      {annotationCurrentlyDeleting && (\n        <DeleteModal\n          description={t(\n            'Are you sure you want to delete %s?',\n            annotationCurrentlyDeleting?.short_descr,\n          )}\n          onConfirm={() => {\n            if (annotationCurrentlyDeleting) {\n              handleAnnotationDelete(annotationCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setAnnotationCurrentlyDeleting(null)}\n          open\n          title={t('Delete Annotation?')}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected annotations?',\n        )}\n        onConfirm={handleBulkAnnotationsDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [\n            {\n              key: 'delete',\n              name: t('Delete'),\n              onSelect: confirmDelete,\n              type: 'danger',\n            },\n          ];\n\n          return (\n            <ListView<AnnotationObject>\n              className=\"annotations-list-view\"\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              columns={columns}\n              count={annotationsCount}\n              data={annotations}\n              disableBulkSelect={toggleBulkSelect}\n              emptyState={emptyState}\n              fetchData={fetchData}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(AnnotationList);\n"],"names":["StyledActions","theme","colors","primary","base","ActionWrapper","grayscale","ActionsBar","actions","className","map","action","index","ActionIcon","icon","tooltip","id","label","title","placement","key","role","tabIndex","onClick","StyledAnnotationTitle","style","gridUnit","StyledJsonEditor","borderRadius","secondary","light2","AnnotationContainer","error","withToasts","addDangerToast","addSuccessToast","annnotationLayerId","annotation","onAnnotationAdd","onHide","show","disableSave","setDisableSave","useState","currentAnnotation","setCurrentAnnotation","isEditMode","state","loading","resource","fetchResource","createResource","updateResource","t","resetAnnotation","short_descr","start_dttm","end_dttm","json_metadata","long_descr","hide","onAnnotationTextChange","event","target","data","name","value","useEffect","length","Modal","disablePrimaryButton","onHandledPrimaryAction","update_id","created_by","changed_by","changed_on_delta_humanized","layer","then","response","primaryButtonName","width","Icons","css","onChange","type","format","dateString","showTime","use12Hours","placeholder","json","height","StyledHeader","typography","sizes","s","weights","normal","annotationLayerId","resourceCount","annotationsCount","resourceCollection","annotations","bulkSelectEnabled","fetchData","refreshData","toggleBulkSelect","annotationModalOpen","setAnnotationModalOpen","annotationLayerName","setAnnotationLayerName","annotationCurrentlyDeleting","setAnnotationCurrentlyDeleting","handleAnnotationEdit","fetchAnnotationLayer","useCallback","async","SupersetClient","endpoint","result","getClientErrorObject","statusText","initialSort","desc","columns","useMemo","accessor","Header","Cell","row","original","startDttm","Date","endDttm","disableSortBy","subMenuButtons","push","buttonStyle","hasHistory","err","emptyState","image","buttonAction","buttonText","SubMenu","to","href","buttons","DeleteModal","description","onConfirm","errMsg","handleAnnotationDelete","open","ConfirmStatusChange","annotationsToDelete","message","confirmDelete","bulkActions","onSelect","ListView","count","disableBulkSelect","pageSize"],"sourceRoot":""}