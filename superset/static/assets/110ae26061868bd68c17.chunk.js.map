{"version":3,"file":"110ae26061868bd68c17.chunk.js","mappings":"kLAsBc,SAAUA,GAAa,OACnCC,EADmC,MAEnCC,EAFmC,cAGnCC,IAEA,OAAO,QAAC,IAAD,CAAQF,OAAQA,EAAQC,MAAOA,EAAOC,cAAeA,M,iFCE9D,MAAMC,EAAS,QAA8B;YACjC,EAAGH,OAAAA,KAAaA;WACjB,EAAGC,MAAAA,KAAYA;EAG1B,SAASG,GACP,MACEH,EADF,OAEED,EAFF,cAGEE,EAHF,cAIEG,EAJF,gBAKEC,EALF,eAMEC,EAAiB,IAEnBC,GAEA,MAAMC,GAAS,IAAAC,QAAuB,MAChCC,GAAW,IAAAD,UACXE,GAAmB,IAAAC,UACvB,IAAMC,OAAOC,KAAKR,IAAmB,IACrC,CAACA,IAEGS,GAAoB,IAAAN,QAAiB,IAiD3C,OA/CA,IAAAO,qBAAoBT,GAAK,KAAM,CAC7BU,kBAAmB,IAAMP,EAASQ,aAGpC,IAAAC,YAAU,KACHX,EAAOU,UACPR,EAASQ,UACZR,EAASQ,SAAU,QAAKV,EAAOU,UAGjCL,OAAOO,QAAQhB,GAAiB,IAAIiB,SAAQ,EAAEC,EAAMC,MAAY,QAC9D,SAAAb,EAASQ,UAAT,EAAkBM,IAAIF,GACtB,SAAAZ,EAASQ,UAAT,EAAkBO,GAAGH,EAAMC,MAG7BV,OAAOO,QAAQf,GAAmB,IAAIgB,SAAQ,EAAEC,EAAMC,MAAY,QAChE,SAAAb,EAASQ,UAAT,EAAkBQ,QAAQF,IAAIF,GAC9B,SAAAZ,EAASQ,UAAT,EAAkBQ,QAAQD,GAAGH,EAAMC,MAGrCb,EAASQ,QAAQS,UAAU1B,GAAe,MACzC,CAACA,EAAeG,EAAeC,KAGlC,IAAAc,YAAU,KACHT,EAASQ,UACdR,EAASQ,QAAQU,eAAe,CAC9BC,KAAM,WACNC,UAAWf,EAAkBG,QAAQa,QACnCC,IAAUrB,EAAiBsB,SAASD,OAGpCrB,EAAiBuB,QACnBxB,EAASQ,QAAQU,eAAe,CAC9BC,KAAM,YACNC,UAAWnB,IAGfI,EAAkBG,QAAUP,KAC3B,CAACA,KAEJ,IAAAQ,YAAU,KACJT,EAASQ,SACXR,EAASQ,QAAQiB,OAAO,CAAEnC,MAAAA,EAAOD,OAAAA,MAElC,CAACC,EAAOD,KAEJ,QAACG,EAAD,CAAQK,IAAKC,EAAQT,OAAQA,EAAQC,MAAOA,IAGrD,SAAe,IAAAoC,YAAWjC","sources":["webpack://superset/./plugins/plugin-chart-echarts/src/Tree/EchartsTree.tsx","webpack://superset/./plugins/plugin-chart-echarts/src/components/Echart.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { EchartsProps } from '../types';\nimport Echart from '../components/Echart';\n\nexport default function EchartsGraph({\n  height,\n  width,\n  echartOptions,\n}: EchartsProps) {\n  return <Echart height={height} width={width} echartOptions={echartOptions} />;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  useRef,\n  useEffect,\n  useMemo,\n  forwardRef,\n  useImperativeHandle,\n} from 'react';\nimport { styled } from '@superset-ui/core';\nimport { ECharts, init } from 'echarts';\nimport { EchartsHandler, EchartsProps, EchartsStylesProps } from '../types';\n\nconst Styles = styled.div<EchartsStylesProps>`\n  height: ${({ height }) => height};\n  width: ${({ width }) => width};\n`;\n\nfunction Echart(\n  {\n    width,\n    height,\n    echartOptions,\n    eventHandlers,\n    zrEventHandlers,\n    selectedValues = {},\n  }: EchartsProps,\n  ref: React.Ref<EchartsHandler>,\n) {\n  const divRef = useRef<HTMLDivElement>(null);\n  const chartRef = useRef<ECharts>();\n  const currentSelection = useMemo(\n    () => Object.keys(selectedValues) || [],\n    [selectedValues],\n  );\n  const previousSelection = useRef<string[]>([]);\n\n  useImperativeHandle(ref, () => ({\n    getEchartInstance: () => chartRef.current,\n  }));\n\n  useEffect(() => {\n    if (!divRef.current) return;\n    if (!chartRef.current) {\n      chartRef.current = init(divRef.current);\n    }\n\n    Object.entries(eventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.off(name);\n      chartRef.current?.on(name, handler);\n    });\n\n    Object.entries(zrEventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.getZr().off(name);\n      chartRef.current?.getZr().on(name, handler);\n    });\n\n    chartRef.current.setOption(echartOptions, true);\n  }, [echartOptions, eventHandlers, zrEventHandlers]);\n\n  // highlighting\n  useEffect(() => {\n    if (!chartRef.current) return;\n    chartRef.current.dispatchAction({\n      type: 'downplay',\n      dataIndex: previousSelection.current.filter(\n        value => !currentSelection.includes(value),\n      ),\n    });\n    if (currentSelection.length) {\n      chartRef.current.dispatchAction({\n        type: 'highlight',\n        dataIndex: currentSelection,\n      });\n    }\n    previousSelection.current = currentSelection;\n  }, [currentSelection]);\n\n  useEffect(() => {\n    if (chartRef.current) {\n      chartRef.current.resize({ width, height });\n    }\n  }, [width, height]);\n\n  return <Styles ref={divRef} height={height} width={width} />;\n}\n\nexport default forwardRef(Echart);\n"],"names":["EchartsGraph","height","width","echartOptions","Styles","Echart","eventHandlers","zrEventHandlers","selectedValues","ref","divRef","useRef","chartRef","currentSelection","useMemo","Object","keys","previousSelection","useImperativeHandle","getEchartInstance","current","useEffect","entries","forEach","name","handler","off","on","getZr","setOption","dispatchAction","type","dataIndex","filter","value","includes","length","resize","forwardRef"],"sourceRoot":""}