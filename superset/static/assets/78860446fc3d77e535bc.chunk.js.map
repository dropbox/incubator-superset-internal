{"version":3,"file":"78860446fc3d77e535bc.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/Datasource/utils.js","webpack://superset/./src/components/Datasource/Field.tsx","webpack://superset/./src/components/Datasource/Fieldset.tsx","webpack://superset/./src/components/Datasource/CollectionTable.tsx","webpack://superset/./src/components/Datasource/DatasourceEditor.jsx","webpack://superset/./src/components/Card/index.tsx","webpack://superset/./src/components/CertifiedBadge/index.tsx","webpack://superset/./src/components/EditableTitle/index.tsx","webpack://superset/./node_modules/use-event-callback/lib/index.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nexport function recurseReactClone(children, type, propExtender) {\n  /**\n   * Clones a React component's children, and injects new props\n   * where the type specified is matched.\n   */\n  return React.Children.map(children, child => {\n    let newChild = child;\n    if (child && child.type.name === type.name) {\n      newChild = React.cloneElement(child, propExtender(child));\n    }\n    if (newChild && newChild.props.children) {\n      newChild = React.cloneElement(newChild, {\n        children: recurseReactClone(\n          newChild.props.children,\n          type,\n          propExtender,\n        ),\n      });\n    }\n    return newChild;\n  });\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback } from 'react';\nimport { css, SupersetTheme } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { FormItem, FormLabel } from 'src/components/Form';\n\nconst formItemInlineCss = css`\n  .ant-form-item-control-input-content {\n    display: flex;\n    flex-direction: row;\n  }\n`;\n\ninterface FieldProps<V> {\n  fieldKey: string;\n  value?: V;\n  label: string;\n  description?: React.ReactNode;\n  control: React.ReactElement;\n  onChange: (fieldKey: string, newValue: V) => void;\n  compact: boolean;\n  inline: boolean;\n}\n\nexport default function Field<V>({\n  fieldKey,\n  value,\n  label,\n  description = null,\n  control,\n  onChange = () => {},\n  compact = false,\n  inline,\n}: FieldProps<V>) {\n  const onControlChange = useCallback(\n    newValue => {\n      onChange(fieldKey, newValue);\n    },\n    [onChange, fieldKey],\n  );\n\n  const hookedControl = React.cloneElement(control, {\n    value,\n    onChange: onControlChange,\n  });\n  return (\n    <FormItem\n      label={\n        <FormLabel className=\"m-r-5\">\n          {label || fieldKey}\n          {compact && description && (\n            <Tooltip id=\"field-descr\" placement=\"right\" title={description}>\n              <i className=\"fa fa-info-circle m-l-5\" />\n            </Tooltip>\n          )}\n        </FormLabel>\n      }\n      css={inline && formItemInlineCss}\n    >\n      {hookedControl}\n      {!compact && description && (\n        <div\n          css={(theme: SupersetTheme) => ({\n            color: theme.colors.grayscale.base,\n            [inline ? 'marginLeft' : 'marginTop']: theme.gridUnit,\n          })}\n        >\n          {description}\n        </div>\n      )}\n    </FormItem>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Form } from 'src/components/Form';\n\nimport { recurseReactClone } from './utils';\nimport Field from './Field';\n\ninterface FieldsetProps {\n  children: React.ReactNode;\n  onChange: Function;\n  item: Record<string, any>;\n  title: React.ReactNode;\n  compact: boolean;\n}\n\ntype fieldKeyType = string | number;\n\nexport default class Fieldset extends React.PureComponent<FieldsetProps> {\n  static defaultProps = {\n    compact: false,\n    title: null,\n  };\n\n  constructor(props: FieldsetProps) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(fieldKey: fieldKeyType, val: any) {\n    return this.props.onChange({\n      ...this.props.item,\n      [fieldKey]: val,\n    });\n  }\n\n  render() {\n    const { title } = this.props;\n    const propExtender = (field: { props: { fieldKey: fieldKeyType } }) => ({\n      onChange: this.onChange,\n      value: this.props.item[field.props.fieldKey],\n      compact: this.props.compact,\n    });\n    return (\n      <Form className=\"CRUD\" layout=\"vertical\">\n        {title && <legend>{title}</legend>}\n        {recurseReactClone(this.props.children, Field, propExtender)}\n      </Form>\n    );\n  }\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ReactNode } from 'react';\nimport shortid from 'shortid';\nimport { t, styled } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport Fieldset from './Fieldset';\nimport { recurseReactClone } from './utils';\n\ninterface CRUDCollectionProps {\n  allowAddItem?: boolean;\n  allowDeletes?: boolean;\n  collection: Array<object>;\n  columnLabels?: object;\n  emptyMessage?: ReactNode;\n  expandFieldset?: ReactNode;\n  extraButtons?: ReactNode;\n  itemGenerator?: () => any;\n  itemCellProps?: ((\n    val: unknown,\n    label: string,\n    record: any,\n  ) => React.DetailedHTMLProps<\n    React.TdHTMLAttributes<HTMLTableCellElement>,\n    HTMLTableCellElement\n  >)[];\n  itemRenderers?: ((\n    val: unknown,\n    onChange: () => void,\n    label: string,\n    record: any,\n  ) => ReactNode)[];\n  onChange?: (arg0: any) => void;\n  tableColumns: Array<any>;\n  sortColumns: Array<string>;\n  stickyHeader?: boolean;\n}\n\ntype Sort = number | string | boolean | any;\n\nenum SortOrder {\n  asc = 1,\n  desc = 2,\n  unsort = 0,\n}\n\ninterface CRUDCollectionState {\n  collection: object;\n  collectionArray: Array<object>;\n  expandedColumns: object;\n  sortColumn: string;\n  sort: SortOrder;\n}\n\nfunction createCollectionArray(collection: object) {\n  return Object.keys(collection).map(k => collection[k]);\n}\n\nfunction createKeyedCollection(arr: Array<object>) {\n  const collectionArray = arr.map((o: any) => ({\n    ...o,\n    id: o.id || shortid.generate(),\n  }));\n\n  const collection = {};\n  collectionArray.forEach((o: any) => {\n    collection[o.id] = o;\n  });\n\n  return {\n    collection,\n    collectionArray,\n  };\n}\n\nconst CrudTableWrapper = styled.div<{ stickyHeader?: boolean }>`\n  ${({ stickyHeader }) =>\n    stickyHeader &&\n    `\n      height: 350px;\n      overflow-y: auto;\n      overflow-x: auto;\n\n      .table {\n        min-width: 800px;\n      }\n      thead th {\n        background: #fff;\n        position: sticky;\n        top: 0;\n        z-index: 9;\n        min\n      }\n    `}\n  ${({ theme }) => `\n    th span {\n      vertical-align: ${theme.gridUnit * -2}px;\n    }\n    .text-right {\n      text-align: right;\n    }\n    .empty-collection {\n      padding: ${theme.gridUnit * 2 + 2}px;\n    }\n    .tiny-cell {\n      width: ${theme.gridUnit + 1}px;\n    }\n    i.fa-caret-down,\n    i.fa-caret-up {\n      width: ${theme.gridUnit + 1}px;\n    }\n    td.expanded {\n      border-top: 0;\n      padding: 0;\n    }\n  `}\n`;\n\nconst CrudButtonWrapper = styled.div`\n  text-align: right;\n  ${({ theme }) => `margin-bottom: ${theme.gridUnit * 2}px`}\n`;\n\nconst StyledButtonWrapper = styled.span`\n  ${({ theme }) => `\n    margin-top: ${theme.gridUnit * 3}px;\n    margin-left: ${theme.gridUnit * 3}px;\n  `}\n`;\n\nexport default class CRUDCollection extends React.PureComponent<\n  CRUDCollectionProps,\n  CRUDCollectionState\n> {\n  constructor(props: CRUDCollectionProps) {\n    super(props);\n\n    const { collection, collectionArray } = createKeyedCollection(\n      props.collection,\n    );\n    this.state = {\n      expandedColumns: {},\n      collection,\n      collectionArray,\n      sortColumn: '',\n      sort: 0,\n    };\n    this.renderItem = this.renderItem.bind(this);\n    this.onAddItem = this.onAddItem.bind(this);\n    this.renderExpandableSection = this.renderExpandableSection.bind(this);\n    this.getLabel = this.getLabel.bind(this);\n    this.onFieldsetChange = this.onFieldsetChange.bind(this);\n    this.renderTableBody = this.renderTableBody.bind(this);\n    this.changeCollection = this.changeCollection.bind(this);\n    this.sortColumn = this.sortColumn.bind(this);\n    this.renderSortIcon = this.renderSortIcon.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: CRUDCollectionProps) {\n    if (nextProps.collection !== this.props.collection) {\n      const { collection, collectionArray } = createKeyedCollection(\n        nextProps.collection,\n      );\n      this.setState({\n        collection,\n        collectionArray,\n      });\n    }\n  }\n\n  onCellChange(id: number, col: string, val: boolean) {\n    this.changeCollection({\n      ...this.state.collection,\n      [id]: {\n        ...this.state.collection[id],\n        [col]: val,\n      },\n    });\n  }\n\n  onAddItem() {\n    if (this.props.itemGenerator) {\n      let newItem = this.props.itemGenerator();\n      if (!newItem.id) {\n        newItem = { ...newItem, id: shortid.generate() };\n      }\n      this.changeCollection(this.state.collection, newItem);\n    }\n  }\n\n  onFieldsetChange(item: any) {\n    this.changeCollection({\n      ...this.state.collection,\n      [item.id]: item,\n    });\n  }\n\n  getLabel(col: any) {\n    const { columnLabels } = this.props;\n    let label = columnLabels?.[col] ? columnLabels[col] : col;\n    if (label.startsWith('__')) {\n      // special label-free columns (ie: caret for expand, delete cross)\n      label = '';\n    }\n    return label;\n  }\n\n  changeCollection(collection: any, newItem?: object) {\n    this.setState({ collection });\n    if (this.props.onChange) {\n      const collectionArray = this.state.collectionArray\n        .map((c: { id: number }) => collection[c.id])\n        // filter out removed items\n        .filter(c => c !== undefined);\n\n      if (newItem) {\n        collectionArray.unshift(newItem);\n      }\n      this.props.onChange(collectionArray);\n    }\n  }\n\n  deleteItem(id: number) {\n    const newColl = { ...this.state.collection };\n    delete newColl[id];\n    this.changeCollection(newColl);\n  }\n\n  effectiveTableColumns() {\n    const { tableColumns, allowDeletes, expandFieldset } = this.props;\n    const cols = allowDeletes\n      ? tableColumns.concat(['__actions'])\n      : tableColumns;\n    return expandFieldset ? ['__expand'].concat(cols) : cols;\n  }\n\n  toggleExpand(id: any) {\n    this.onCellChange(id, '__expanded', false);\n    this.setState(prevState => ({\n      expandedColumns: {\n        ...prevState.expandedColumns,\n        [id]: !prevState.expandedColumns[id],\n      },\n    }));\n  }\n\n  sortColumn(col: string, sort = SortOrder.unsort) {\n    const { sortColumns } = this.props;\n    // default sort logic sorting string, boolean and number\n    const compareSort = (m: Sort, n: Sort) => {\n      if (typeof m === 'string') {\n        return (m || ' ').localeCompare(n);\n      }\n      return m - n;\n    };\n    return () => {\n      if (sortColumns?.includes(col)) {\n        // display in unsorted order if no sort specified\n        if (sort === SortOrder.unsort) {\n          const { collection } = createKeyedCollection(this.props.collection);\n          const collectionArray = createCollectionArray(collection);\n          this.setState({\n            collectionArray,\n            sortColumn: '',\n            sort,\n          });\n          return;\n        }\n\n        // newly ordered collection\n        const sorted = [...this.state.collectionArray].sort(\n          (a: object, b: object) => compareSort(a[col], b[col]),\n        );\n        const newCollection =\n          sort === SortOrder.asc ? sorted : sorted.reverse();\n\n        this.setState(prevState => ({\n          ...prevState,\n          collectionArray: newCollection,\n          sortColumn: col,\n          sort,\n        }));\n      }\n    };\n  }\n\n  renderSortIcon(col: string) {\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.asc) {\n      return <Icons.SortAsc onClick={this.sortColumn(col, 2)} />;\n    }\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.desc) {\n      return <Icons.SortDesc onClick={this.sortColumn(col, 0)} />;\n    }\n    return <Icons.Sort onClick={this.sortColumn(col, 1)} />;\n  }\n\n  renderHeaderRow() {\n    const cols = this.effectiveTableColumns();\n    const { allowDeletes, expandFieldset, extraButtons, sortColumns } =\n      this.props;\n    return (\n      <thead>\n        <tr>\n          {expandFieldset && <th aria-label=\"Expand\" className=\"tiny-cell\" />}\n          {cols.map(col => (\n            <th key={col}>\n              {this.getLabel(col)}\n              {sortColumns?.includes(col) && this.renderSortIcon(col)}\n            </th>\n          ))}\n          {extraButtons}\n          {allowDeletes && (\n            <th key=\"delete-item\" aria-label=\"Delete\" className=\"tiny-cell\" />\n          )}\n        </tr>\n      </thead>\n    );\n  }\n\n  renderExpandableSection(item: any) {\n    const propsGenerator = () => ({ item, onChange: this.onFieldsetChange });\n    return recurseReactClone(\n      this.props.expandFieldset,\n      Fieldset,\n      propsGenerator,\n    );\n  }\n\n  getCellProps(record: any, col: any) {\n    const cellPropsFn = this.props.itemCellProps?.[col];\n    const val = record[col];\n    return cellPropsFn ? cellPropsFn(val, this.getLabel(col), record) : {};\n  }\n\n  renderCell(record: any, col: any) {\n    const renderer = this.props.itemRenderers?.[col];\n    const val = record[col];\n    const onChange = this.onCellChange.bind(this, record.id, col);\n    return renderer ? renderer(val, onChange, this.getLabel(col), record) : val;\n  }\n\n  renderItem(record: any) {\n    const { allowAddItem, allowDeletes, expandFieldset, tableColumns } =\n      this.props;\n    /* eslint-disable no-underscore-dangle */\n    const isExpanded =\n      !!this.state.expandedColumns[record.id] || record.__expanded;\n    let tds = [];\n    if (expandFieldset) {\n      tds.push(\n        <td key=\"__expand\" className=\"expand\">\n          <i\n            role=\"button\"\n            aria-label=\"Toggle expand\"\n            tabIndex={0}\n            className={`fa fa-caret-${\n              isExpanded ? 'down' : 'right'\n            } text-primary pointer`}\n            onClick={this.toggleExpand.bind(this, record.id)}\n          />\n        </td>,\n      );\n    }\n    tds = tds.concat(\n      tableColumns.map(col => (\n        <td {...this.getCellProps(record, col)} key={col}>\n          {this.renderCell(record, col)}\n        </td>\n      )),\n    );\n    if (allowAddItem) {\n      tds.push(<td key=\"add\" />);\n    }\n    if (allowDeletes) {\n      tds.push(\n        <td\n          key=\"__actions\"\n          data-test=\"crud-delete-option\"\n          className=\"text-primary\"\n        >\n          <Icons.Trash\n            aria-label=\"Delete item\"\n            className=\"pointer\"\n            data-test=\"crud-delete-icon\"\n            role=\"button\"\n            tabIndex={0}\n            onClick={this.deleteItem.bind(this, record.id)}\n          />\n        </td>,\n      );\n    }\n    const trs = [\n      <tr {...{ 'data-test': 'table-row' }} className=\"row\" key={record.id}>\n        {tds}\n      </tr>,\n    ];\n    if (isExpanded) {\n      trs.push(\n        <tr className=\"exp\" key={`exp__${record.id}`}>\n          <td\n            colSpan={this.effectiveTableColumns().length}\n            className=\"expanded\"\n          >\n            <div>{this.renderExpandableSection(record)}</div>\n          </td>\n        </tr>,\n      );\n    }\n    return trs;\n  }\n\n  renderEmptyCell() {\n    return (\n      <tr>\n        <td className=\"empty-collection\">{this.props.emptyMessage}</td>\n      </tr>\n    );\n  }\n\n  renderTableBody() {\n    const data = this.state.collectionArray;\n    const content = data.length\n      ? data.map(d => this.renderItem(d))\n      : this.renderEmptyCell();\n    return <tbody data-test=\"table-content-rows\">{content}</tbody>;\n  }\n\n  render() {\n    return (\n      <>\n        <CrudButtonWrapper>\n          {this.props.allowAddItem && (\n            <StyledButtonWrapper>\n              <Button\n                buttonSize=\"small\"\n                buttonStyle=\"tertiary\"\n                onClick={this.onAddItem}\n                data-test=\"add-item-button\"\n              >\n                <i data-test=\"crud-add-table-item\" className=\"fa fa-plus\" />{' '}\n                {t('Add item')}\n              </Button>\n            </StyledButtonWrapper>\n          )}\n        </CrudButtonWrapper>\n        <CrudTableWrapper\n          className=\"CRUD\"\n          stickyHeader={this.props.stickyHeader}\n        >\n          <table data-test=\"crud-table\" className=\"table\">\n            {this.renderHeaderRow()}\n            {this.renderTableBody()}\n          </table>\n        </CrudTableWrapper>\n      </>\n    );\n  }\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport rison from 'rison';\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Radio } from 'src/components/Radio';\nimport Card from 'src/components/Card';\nimport Alert from 'src/components/Alert';\nimport Badge from 'src/components/Badge';\nimport shortid from 'shortid';\nimport {\n  FeatureFlag,\n  styled,\n  SupersetClient,\n  t,\n  withTheme,\n} from '@superset-ui/core';\nimport { Select, AsyncSelect, Row, Col } from 'src/components';\nimport { FormLabel } from 'src/components/Form';\nimport Button from 'src/components/Button';\nimport Tabs from 'src/components/Tabs';\nimport CertifiedBadge from 'src/components/CertifiedBadge';\nimport WarningIconWithTooltip from 'src/components/WarningIconWithTooltip';\nimport DatabaseSelector from 'src/components/DatabaseSelector';\nimport Label from 'src/components/Label';\nimport Loading from 'src/components/Loading';\nimport TableSelector from 'src/components/TableSelector';\nimport EditableTitle from 'src/components/EditableTitle';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport CheckboxControl from 'src/explore/components/controls/CheckboxControl';\nimport TextControl from 'src/explore/components/controls/TextControl';\nimport TextAreaControl from 'src/explore/components/controls/TextAreaControl';\nimport SpatialControl from 'src/explore/components/controls/SpatialControl';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport Icons from 'src/components/Icons';\nimport CollectionTable from './CollectionTable';\nimport Fieldset from './Fieldset';\nimport Field from './Field';\n\nconst DatasourceContainer = styled.div`\n  .change-warning {\n    margin: 16px 10px 0;\n    color: ${({ theme }) => theme.colors.warning.base};\n  }\n\n  .change-warning .bold {\n    font-weight: ${({ theme }) => theme.typography.weights.bold};\n  }\n\n  .form-group.has-feedback > .help-block {\n    margin-top: 8px;\n  }\n\n  .form-group.form-group-md {\n    margin-bottom: 8px;\n  }\n`;\n\nconst FlexRowContainer = styled.div`\n  align-items: center;\n  display: flex;\n\n  svg {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst StyledTableTabs = styled(Tabs)`\n  overflow: visible;\n  .ant-tabs-content-holder {\n    overflow: visible;\n  }\n`;\n\nconst StyledBadge = styled(Badge)`\n  .ant-badge-count {\n    line-height: ${({ theme }) => theme.gridUnit * 4}px;\n    height: ${({ theme }) => theme.gridUnit * 4}px;\n    margin-left: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst EditLockContainer = styled.div`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  display: flex;\n  align-items: center;\n  a {\n    padding: 0 10px;\n  }\n`;\n\nconst ColumnButtonWrapper = styled.div`\n  text-align: right;\n  ${({ theme }) => `margin-bottom: ${theme.gridUnit * 2}px`}\n`;\n\nconst StyledLabelWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  span {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst StyledColumnsTabWrapper = styled.div`\n  .table > tbody > tr > td {\n    vertical-align: middle;\n  }\n\n  .ant-tag {\n    margin-top: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst StyledButtonWrapper = styled.span`\n  ${({ theme }) => `\n    margin-top: ${theme.gridUnit * 3}px;\n    margin-left: ${theme.gridUnit * 3}px;\n  `}\n`;\n\nconst checkboxGenerator = (d, onChange) => (\n  <CheckboxControl value={d} onChange={onChange} />\n);\nconst DATA_TYPES = [\n  { value: 'STRING', label: t('STRING') },\n  { value: 'NUMERIC', label: t('NUMERIC') },\n  { value: 'DATETIME', label: t('DATETIME') },\n  { value: 'BOOLEAN', label: t('BOOLEAN') },\n];\n\nconst DATASOURCE_TYPES_ARR = [\n  { key: 'physical', label: t('Physical (table or view)') },\n  { key: 'virtual', label: t('Virtual (SQL)') },\n];\nconst DATASOURCE_TYPES = {};\nDATASOURCE_TYPES_ARR.forEach(o => {\n  DATASOURCE_TYPES[o.key] = o;\n});\n\nfunction CollectionTabTitle({ title, collection }) {\n  return (\n    <div\n      css={{ display: 'flex', alignItems: 'center' }}\n      data-test={`collection-tab-${title}`}\n    >\n      {title}{' '}\n      <StyledBadge count={collection ? collection.length : 0} showZero />\n    </div>\n  );\n}\n\nCollectionTabTitle.propTypes = {\n  title: PropTypes.string,\n  collection: PropTypes.array,\n};\n\nfunction ColumnCollectionTable({\n  columns,\n  datasource,\n  onColumnsChange,\n  onDatasourceChange,\n  editableColumnName,\n  showExpression,\n  allowAddItem,\n  allowEditDataType,\n  itemGenerator,\n}) {\n  return (\n    <CollectionTable\n      collection={columns}\n      tableColumns={\n        isFeatureEnabled(FeatureFlag.ENABLE_ADVANCED_DATA_TYPES)\n          ? [\n              'column_name',\n              'advanced_data_type',\n              'type',\n              'is_dttm',\n              'main_dttm_col',\n              'filterable',\n              'groupby',\n            ]\n          : [\n              'column_name',\n              'type',\n              'is_dttm',\n              'main_dttm_col',\n              'filterable',\n              'groupby',\n            ]\n      }\n      sortColumns={\n        isFeatureEnabled(FeatureFlag.ENABLE_ADVANCED_DATA_TYPES)\n          ? [\n              'column_name',\n              'advanced_data_type',\n              'type',\n              'is_dttm',\n              'main_dttm_col',\n              'filterable',\n              'groupby',\n            ]\n          : [\n              'column_name',\n              'type',\n              'is_dttm',\n              'main_dttm_col',\n              'filterable',\n              'groupby',\n            ]\n      }\n      allowDeletes\n      allowAddItem={allowAddItem}\n      itemGenerator={itemGenerator}\n      stickyHeader\n      expandFieldset={\n        <FormContainer>\n          <Fieldset compact>\n            {showExpression && (\n              <Field\n                fieldKey=\"expression\"\n                label={t('SQL expression')}\n                control={\n                  <TextAreaControl\n                    language=\"markdown\"\n                    offerEditInModal={false}\n                    resize=\"vertical\"\n                  />\n                }\n              />\n            )}\n            <Field\n              fieldKey=\"verbose_name\"\n              label={t('Label')}\n              control={\n                <TextControl\n                  controlId=\"verbose_name\"\n                  placeholder={t('Label')}\n                />\n              }\n            />\n            <Field\n              fieldKey=\"description\"\n              label={t('Description')}\n              control={\n                <TextControl\n                  controlId=\"description\"\n                  placeholder={t('Description')}\n                />\n              }\n            />\n            {allowEditDataType && (\n              <Field\n                fieldKey=\"type\"\n                label={t('Data type')}\n                control={\n                  <Select\n                    ariaLabel={t('Data type')}\n                    options={DATA_TYPES}\n                    name=\"type\"\n                    allowNewOptions\n                    allowClear\n                  />\n                }\n              />\n            )}\n            {isFeatureEnabled(FeatureFlag.ENABLE_ADVANCED_DATA_TYPES) ? (\n              <Field\n                fieldKey=\"advanced_data_type\"\n                label={t('Advanced data type')}\n                control={\n                  <TextControl\n                    controlId=\"advanced_data_type\"\n                    placeholder={t('Advanced Data type')}\n                  />\n                }\n              />\n            ) : (\n              <></>\n            )}\n            <Field\n              fieldKey=\"python_date_format\"\n              label={t('Datetime format')}\n              description={\n                /* Note the fragmented translations may not work. */\n                <div>\n                  {t('The pattern of timestamp format. For strings use ')}\n                  <a href=\"https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior\">\n                    {t('Python datetime string pattern')}\n                  </a>\n                  {t(' expression which needs to adhere to the ')}\n                  <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">\n                    {t('ISO 8601')}\n                  </a>\n                  {t(` standard to ensure that the lexicographical ordering\n                      coincides with the chronological ordering. If the\n                      timestamp format does not adhere to the ISO 8601 standard\n                      you will need to define an expression and type for\n                      transforming the string into a date or timestamp. Note\n                      currently time zones are not supported. If time is stored\n                      in epoch format, put \\`epoch_s\\` or \\`epoch_ms\\`. If no pattern\n                      is specified we fall back to using the optional defaults on a per\n                      database/column name level via the extra parameter.`)}\n                </div>\n              }\n              control={\n                <TextControl\n                  controlId=\"python_date_format\"\n                  placeholder=\"%Y/%m/%d\"\n                />\n              }\n            />\n            <Field\n              fieldKey=\"certified_by\"\n              label={t('Certified By')}\n              description={t('Person or group that has certified this metric')}\n              control={\n                <TextControl\n                  controlId=\"certified\"\n                  placeholder={t('Certified by')}\n                />\n              }\n            />\n            <Field\n              fieldKey=\"certification_details\"\n              label={t('Certification details')}\n              description={t('Details of the certification')}\n              control={\n                <TextControl\n                  controlId=\"certificationDetails\"\n                  placeholder={t('Certification details')}\n                />\n              }\n            />\n          </Fieldset>\n        </FormContainer>\n      }\n      columnLabels={\n        isFeatureEnabled(FeatureFlag.ENABLE_ADVANCED_DATA_TYPES)\n          ? {\n              column_name: t('Column'),\n              advanced_data_type: t('Advanced data type'),\n              type: t('Data type'),\n              groupby: t('Is dimension'),\n              is_dttm: t('Is temporal'),\n              main_dttm_col: t('Default datetime'),\n              filterable: t('Is filterable'),\n            }\n          : {\n              column_name: t('Column'),\n              type: t('Data type'),\n              groupby: t('Is dimension'),\n              is_dttm: t('Is temporal'),\n              main_dttm_col: t('Default datetime'),\n              filterable: t('Is filterable'),\n            }\n      }\n      onChange={onColumnsChange}\n      itemRenderers={\n        isFeatureEnabled(FeatureFlag.ENABLE_ADVANCED_DATA_TYPES)\n          ? {\n              column_name: (v, onItemChange, _, record) =>\n                editableColumnName ? (\n                  <StyledLabelWrapper>\n                    {record.is_certified && (\n                      <CertifiedBadge\n                        certifiedBy={record.certified_by}\n                        details={record.certification_details}\n                      />\n                    )}\n                    <EditableTitle\n                      canEdit\n                      title={v}\n                      onSaveTitle={onItemChange}\n                    />\n                  </StyledLabelWrapper>\n                ) : (\n                  <StyledLabelWrapper>\n                    {record.is_certified && (\n                      <CertifiedBadge\n                        certifiedBy={record.certified_by}\n                        details={record.certification_details}\n                      />\n                    )}\n                    {v}\n                  </StyledLabelWrapper>\n                ),\n              main_dttm_col: (value, _onItemChange, _label, record) => {\n                const checked = datasource.main_dttm_col === record.column_name;\n                const disabled = !columns.find(\n                  column => column.column_name === record.column_name,\n                ).is_dttm;\n                return (\n                  <Radio\n                    data-test={`radio-default-dttm-${record.column_name}`}\n                    checked={checked}\n                    disabled={disabled}\n                    onChange={() =>\n                      onDatasourceChange({\n                        ...datasource,\n                        main_dttm_col: record.column_name,\n                      })\n                    }\n                  />\n                );\n              },\n              type: d => (d ? <Label>{d}</Label> : null),\n              advanced_data_type: d => (\n                <Label onChange={onColumnsChange}>{d}</Label>\n              ),\n              is_dttm: checkboxGenerator,\n              filterable: checkboxGenerator,\n              groupby: checkboxGenerator,\n            }\n          : {\n              column_name: (v, onItemChange, _, record) =>\n                editableColumnName ? (\n                  <StyledLabelWrapper>\n                    {record.is_certified && (\n                      <CertifiedBadge\n                        certifiedBy={record.certified_by}\n                        details={record.certification_details}\n                      />\n                    )}\n                    <TextControl value={v} onChange={onItemChange} />\n                  </StyledLabelWrapper>\n                ) : (\n                  <StyledLabelWrapper>\n                    {record.is_certified && (\n                      <CertifiedBadge\n                        certifiedBy={record.certified_by}\n                        details={record.certification_details}\n                      />\n                    )}\n                    {v}\n                  </StyledLabelWrapper>\n                ),\n              main_dttm_col: (value, _onItemChange, _label, record) => {\n                const checked = datasource.main_dttm_col === record.column_name;\n                const disabled = !columns.find(\n                  column => column.column_name === record.column_name,\n                ).is_dttm;\n                return (\n                  <Radio\n                    data-test={`radio-default-dttm-${record.column_name}`}\n                    checked={checked}\n                    disabled={disabled}\n                    onChange={() =>\n                      onDatasourceChange({\n                        ...datasource,\n                        main_dttm_col: record.column_name,\n                      })\n                    }\n                  />\n                );\n              },\n              type: d => (d ? <Label>{d}</Label> : null),\n              is_dttm: checkboxGenerator,\n              filterable: checkboxGenerator,\n              groupby: checkboxGenerator,\n            }\n      }\n    />\n  );\n}\nColumnCollectionTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  datasource: PropTypes.object.isRequired,\n  onColumnsChange: PropTypes.func.isRequired,\n  onDatasourceChange: PropTypes.func.isRequired,\n  editableColumnName: PropTypes.bool,\n  showExpression: PropTypes.bool,\n  allowAddItem: PropTypes.bool,\n  allowEditDataType: PropTypes.bool,\n  itemGenerator: PropTypes.func,\n};\nColumnCollectionTable.defaultProps = {\n  editableColumnName: false,\n  showExpression: false,\n  allowAddItem: false,\n  allowEditDataType: false,\n  itemGenerator: () => ({\n    column_name: t('<new column>'),\n    filterable: true,\n    groupby: true,\n  }),\n};\n\nfunction StackedField({ label, formElement }) {\n  return (\n    <div>\n      <div>\n        <strong>{label}</strong>\n      </div>\n      <div>{formElement}</div>\n    </div>\n  );\n}\n\nStackedField.propTypes = {\n  label: PropTypes.string,\n  formElement: PropTypes.node,\n};\n\nfunction FormContainer({ children }) {\n  return <Card padded>{children}</Card>;\n}\n\nFormContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nconst propTypes = {\n  datasource: PropTypes.object.isRequired,\n  onChange: PropTypes.func,\n  addSuccessToast: PropTypes.func.isRequired,\n  addDangerToast: PropTypes.func.isRequired,\n  setIsEditing: PropTypes.func,\n};\n\nconst defaultProps = {\n  onChange: () => {},\n  setIsEditing: () => {},\n};\n\nfunction OwnersSelector({ datasource, onChange }) {\n  const loadOptions = useCallback((search = '', page, pageSize) => {\n    const query = rison.encode({ filter: search, page, page_size: pageSize });\n    return SupersetClient.get({\n      endpoint: `/api/v1/dataset/related/owners?q=${query}`,\n    }).then(response => ({\n      data: response.json.result\n        .filter(item => item.extra.active)\n        .map(item => ({\n          value: item.value,\n          label: item.text,\n        })),\n      totalCount: response.json.count,\n    }));\n  }, []);\n\n  return (\n    <AsyncSelect\n      ariaLabel={t('Select owners')}\n      mode=\"multiple\"\n      name=\"owners\"\n      value={datasource.owners}\n      options={loadOptions}\n      onChange={onChange}\n      header={<FormLabel>{t('Owners')}</FormLabel>}\n      allowClear\n    />\n  );\n}\n\nclass DatasourceEditor extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datasource: {\n        ...props.datasource,\n        owners: props.datasource.owners.map(owner => ({\n          value: owner.value || owner.id,\n          label: owner.label || `${owner.first_name} ${owner.last_name}`,\n        })),\n        metrics: props.datasource.metrics?.map(metric => {\n          const {\n            certified_by: certifiedByMetric,\n            certification_details: certificationDetails,\n          } = metric;\n          const {\n            certification: { details, certified_by: certifiedBy } = {},\n            warning_markdown: warningMarkdown,\n          } = JSON.parse(metric.extra || '{}') || {};\n          return {\n            ...metric,\n            certification_details: certificationDetails || details,\n            warning_markdown: warningMarkdown || '',\n            certified_by: certifiedBy || certifiedByMetric,\n          };\n        }),\n      },\n      errors: [],\n      isSqla:\n        props.datasource.datasource_type === 'table' ||\n        props.datasource.type === 'table',\n      isEditMode: false,\n      databaseColumns: props.datasource.columns.filter(col => !col.expression),\n      calculatedColumns: props.datasource.columns.filter(\n        col => !!col.expression,\n      ),\n      metadataLoading: false,\n      activeTabKey: 0,\n      datasourceType: props.datasource.sql\n        ? DATASOURCE_TYPES.virtual.key\n        : DATASOURCE_TYPES.physical.key,\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onChangeEditMode = this.onChangeEditMode.bind(this);\n    this.onDatasourcePropChange = this.onDatasourcePropChange.bind(this);\n    this.onDatasourceChange = this.onDatasourceChange.bind(this);\n    this.tableChangeAndSyncMetadata =\n      this.tableChangeAndSyncMetadata.bind(this);\n    this.syncMetadata = this.syncMetadata.bind(this);\n    this.setColumns = this.setColumns.bind(this);\n    this.validateAndChange = this.validateAndChange.bind(this);\n    this.handleTabSelect = this.handleTabSelect.bind(this);\n    this.allowEditSource = !isFeatureEnabled(\n      FeatureFlag.DISABLE_DATASET_SOURCE_EDIT,\n    );\n  }\n\n  onChange() {\n    // Emptying SQL if \"Physical\" radio button is selected\n    // Currently the logic to know whether the source is\n    // physical or virtual is based on whether SQL is empty or not.\n    const { datasourceType, datasource } = this.state;\n    const sql =\n      datasourceType === DATASOURCE_TYPES.physical.key ? '' : datasource.sql;\n    const newDatasource = {\n      ...this.state.datasource,\n      sql,\n      columns: [...this.state.databaseColumns, ...this.state.calculatedColumns],\n    };\n    this.props.onChange(newDatasource, this.state.errors);\n  }\n\n  onChangeEditMode() {\n    this.props.setIsEditing(!this.state.isEditMode);\n    this.setState(prevState => ({ isEditMode: !prevState.isEditMode }));\n  }\n\n  onDatasourceChange(datasource, callback = this.validateAndChange) {\n    this.setState({ datasource }, callback);\n  }\n\n  onDatasourcePropChange(attr, value) {\n    if (value === undefined) return; // if value is undefined do not update state\n    const datasource = { ...this.state.datasource, [attr]: value };\n    this.setState(\n      prevState => ({\n        datasource: { ...prevState.datasource, [attr]: value },\n      }),\n      attr === 'table_name'\n        ? this.onDatasourceChange(datasource, this.tableChangeAndSyncMetadata)\n        : this.onDatasourceChange(datasource, this.validateAndChange),\n    );\n  }\n\n  onDatasourceTypeChange(datasourceType) {\n    this.setState({ datasourceType });\n  }\n\n  setColumns(obj) {\n    // update calculatedColumns or databaseColumns\n    this.setState(obj, this.validateAndChange);\n  }\n\n  validateAndChange() {\n    this.validate(this.onChange);\n  }\n\n  tableChangeAndSyncMetadata() {\n    this.validate(() => {\n      this.syncMetadata();\n      this.onChange();\n    });\n  }\n\n  updateColumns(cols) {\n    const { databaseColumns } = this.state;\n    const databaseColumnNames = cols.map(col => col.name);\n    const currentCols = databaseColumns.reduce(\n      (agg, col) => ({\n        ...agg,\n        [col.column_name]: col,\n      }),\n      {},\n    );\n    const finalColumns = [];\n    const results = {\n      added: [],\n      modified: [],\n      removed: databaseColumns\n        .map(col => col.column_name)\n        .filter(col => !databaseColumnNames.includes(col)),\n    };\n    cols.forEach(col => {\n      const currentCol = currentCols[col.name];\n      if (!currentCol) {\n        // new column\n        finalColumns.push({\n          id: shortid.generate(),\n          column_name: col.name,\n          type: col.type,\n          groupby: true,\n          filterable: true,\n          is_dttm: col.is_dttm,\n        });\n        results.added.push(col.name);\n      } else if (\n        currentCol.type !== col.type ||\n        (!currentCol.is_dttm && col.is_dttm)\n      ) {\n        // modified column\n        finalColumns.push({\n          ...currentCol,\n          type: col.type,\n          is_dttm: currentCol.is_dttm || col.is_dttm,\n        });\n        results.modified.push(col.name);\n      } else {\n        // unchanged\n        finalColumns.push(currentCol);\n      }\n    });\n    if (\n      results.added.length ||\n      results.modified.length ||\n      results.removed.length\n    ) {\n      this.setColumns({ databaseColumns: finalColumns });\n    }\n    return results;\n  }\n\n  syncMetadata() {\n    const { datasource } = this.state;\n    const params = {\n      datasource_type: datasource.type || datasource.datasource_type,\n      database_name:\n        datasource.database.database_name || datasource.database.name,\n      schema_name: datasource.schema,\n      table_name: datasource.table_name\n        ? encodeURIComponent(datasource.table_name)\n        : datasource.table_name,\n    };\n    Object.entries(params).forEach(([key, value]) => {\n      // rison can't encode the undefined value\n      if (value === undefined) {\n        params[key] = null;\n      }\n    });\n    const endpoint = `/datasource/external_metadata_by_name/?q=${rison.encode(\n      params,\n    )}`;\n    this.setState({ metadataLoading: true });\n\n    SupersetClient.get({ endpoint })\n      .then(({ json }) => {\n        const results = this.updateColumns(json);\n        if (results.modified.length) {\n          this.props.addSuccessToast(\n            t('Modified columns: %s', results.modified.join(', ')),\n          );\n        }\n        if (results.removed.length) {\n          this.props.addSuccessToast(\n            t('Removed columns: %s', results.removed.join(', ')),\n          );\n        }\n        if (results.added.length) {\n          this.props.addSuccessToast(\n            t('New columns added: %s', results.added.join(', ')),\n          );\n        }\n        this.props.addSuccessToast(t('Metadata has been synced'));\n        this.setState({ metadataLoading: false });\n      })\n      .catch(response =>\n        getClientErrorObject(response).then(({ error, statusText }) => {\n          this.props.addDangerToast(\n            error || statusText || t('An error has occurred'),\n          );\n          this.setState({ metadataLoading: false });\n        }),\n      );\n  }\n\n  findDuplicates(arr, accessor) {\n    const seen = {};\n    const dups = [];\n    arr.forEach(obj => {\n      const item = accessor(obj);\n      if (item in seen) {\n        dups.push(item);\n      } else {\n        seen[item] = null;\n      }\n    });\n    return dups;\n  }\n\n  validate(callback) {\n    let errors = [];\n    let dups;\n    const { datasource } = this.state;\n\n    // Looking for duplicate column_name\n    dups = this.findDuplicates(datasource.columns, obj => obj.column_name);\n    errors = errors.concat(\n      dups.map(name => t('Column name [%s] is duplicated', name)),\n    );\n\n    // Looking for duplicate metric_name\n    dups = this.findDuplicates(datasource.metrics, obj => obj.metric_name);\n    errors = errors.concat(\n      dups.map(name => t('Metric name [%s] is duplicated', name)),\n    );\n\n    // Making sure calculatedColumns have an expression defined\n    const noFilterCalcCols = this.state.calculatedColumns.filter(\n      col => !col.expression && !col.json,\n    );\n    errors = errors.concat(\n      noFilterCalcCols.map(col =>\n        t('Calculated column [%s] requires an expression', col.column_name),\n      ),\n    );\n\n    this.setState({ errors }, callback);\n  }\n\n  handleTabSelect(activeTabKey) {\n    this.setState({ activeTabKey });\n  }\n\n  sortMetrics(metrics) {\n    return metrics.sort(({ id: a }, { id: b }) => b - a);\n  }\n\n  renderSettingsFieldset() {\n    const { datasource } = this.state;\n    return (\n      <Fieldset\n        title={t('Basic')}\n        item={datasource}\n        onChange={this.onDatasourceChange}\n      >\n        <Field\n          fieldKey=\"description\"\n          label={t('Description')}\n          control={\n            <TextAreaControl\n              language=\"markdown\"\n              offerEditInModal={false}\n              resize=\"vertical\"\n            />\n          }\n        />\n        <Field\n          fieldKey=\"default_endpoint\"\n          label={t('Default URL')}\n          description={t(\n            'Default URL to redirect to when accessing from the dataset list page',\n          )}\n          control={<TextControl controlId=\"default_endpoint\" />}\n        />\n        <Field\n          inline\n          fieldKey=\"filter_select_enabled\"\n          label={t('Autocomplete filters')}\n          description={t('Whether to populate autocomplete filters options')}\n          control={<CheckboxControl />}\n        />\n        {this.state.isSqla && (\n          <Field\n            fieldKey=\"fetch_values_predicate\"\n            label={t('Autocomplete query predicate')}\n            description={t(\n              'When using \"Autocomplete filters\", this can be used to improve performance ' +\n                'of the query fetching the values. Use this option to apply a ' +\n                'predicate (WHERE clause) to the query selecting the distinct ' +\n                'values from the table. Typically the intent would be to limit the scan ' +\n                'by applying a relative time filter on a partitioned or indexed time-related field.',\n            )}\n            control={\n              <TextAreaControl\n                language=\"sql\"\n                controlId=\"fetch_values_predicate\"\n                minLines={5}\n                resize=\"vertical\"\n              />\n            }\n          />\n        )}\n        {this.state.isSqla && (\n          <Field\n            fieldKey=\"extra\"\n            label={t('Extra')}\n            description={t(\n              'Extra data to specify table metadata. Currently supports ' +\n                'metadata of the format: `{ \"certification\": { \"certified_by\": ' +\n                '\"Data Platform Team\", \"details\": \"This table is the source of truth.\" ' +\n                '}, \"warning_markdown\": \"This is a warning.\" }`.',\n            )}\n            control={\n              <TextAreaControl\n                controlId=\"extra\"\n                language=\"json\"\n                offerEditInModal={false}\n                resize=\"vertical\"\n              />\n            }\n          />\n        )}\n        <OwnersSelector\n          datasource={datasource}\n          onChange={newOwners => {\n            this.onDatasourceChange({ ...datasource, owners: newOwners });\n          }}\n        />\n      </Fieldset>\n    );\n  }\n\n  renderAdvancedFieldset() {\n    const { datasource } = this.state;\n    return (\n      <Fieldset\n        title={t('Advanced')}\n        item={datasource}\n        onChange={this.onDatasourceChange}\n      >\n        <Field\n          fieldKey=\"cache_timeout\"\n          label={t('Cache timeout')}\n          description={t(\n            'The duration of time in seconds before the cache is invalidated. Set to -1 to bypass the cache.',\n          )}\n          control={<TextControl controlId=\"cache_timeout\" />}\n        />\n        <Field\n          fieldKey=\"offset\"\n          label={t('Hours offset')}\n          control={<TextControl controlId=\"offset\" />}\n          description={t(\n            'The number of hours, negative or positive, to shift the time column. This can be used to move UTC time to local time.',\n          )}\n        />\n        {this.state.isSqla && (\n          <Field\n            fieldKey=\"template_params\"\n            label={t('Template parameters')}\n            description={t(\n              'A set of parameters that become available in the query using Jinja templating syntax',\n            )}\n            control={<TextControl controlId=\"template_params\" />}\n          />\n        )}\n      </Fieldset>\n    );\n  }\n\n  renderSpatialTab() {\n    const { datasource } = this.state;\n    const { spatials, all_cols: allCols } = datasource;\n    return (\n      <Tabs.TabPane\n        tab={<CollectionTabTitle collection={spatials} title={t('Spatial')} />}\n        key={4}\n      >\n        <CollectionTable\n          tableColumns={['name', 'config']}\n          onChange={this.onDatasourcePropChange.bind(this, 'spatials')}\n          itemGenerator={() => ({\n            name: t('<new spatial>'),\n            type: t('<no type>'),\n            config: null,\n          })}\n          collection={spatials}\n          allowDeletes\n          itemRenderers={{\n            name: (d, onChange) => (\n              <EditableTitle canEdit title={d} onSaveTitle={onChange} />\n            ),\n            config: (v, onChange) => (\n              <SpatialControl value={v} onChange={onChange} choices={allCols} />\n            ),\n          }}\n        />\n      </Tabs.TabPane>\n    );\n  }\n\n  renderSourceFieldset(theme) {\n    const { datasource } = this.state;\n    return (\n      <div>\n        {this.allowEditSource && (\n          <EditLockContainer>\n            <span role=\"button\" tabIndex={0} onClick={this.onChangeEditMode}>\n              {this.state.isEditMode ? (\n                <Icons.LockUnlocked iconColor={theme.colors.grayscale.base} />\n              ) : (\n                <Icons.LockLocked iconColor={theme.colors.grayscale.base} />\n              )}\n            </span>\n            {!this.state.isEditMode && (\n              <div>{t('Click the lock to make changes.')}</div>\n            )}\n            {this.state.isEditMode && (\n              <div>{t('Click the lock to prevent further changes.')}</div>\n            )}\n          </EditLockContainer>\n        )}\n        <div className=\"m-l-10 m-t-20 m-b-10\">\n          {DATASOURCE_TYPES_ARR.map(type => (\n            <Radio\n              key={type.key}\n              value={type.key}\n              inline\n              onChange={this.onDatasourceTypeChange.bind(this, type.key)}\n              checked={this.state.datasourceType === type.key}\n              disabled={!this.state.isEditMode}\n            >\n              {type.label}\n            </Radio>\n          ))}\n        </div>\n        <hr />\n        <Fieldset item={datasource} onChange={this.onDatasourceChange} compact>\n          {this.state.datasourceType === DATASOURCE_TYPES.virtual.key && (\n            <div>\n              {this.state.isSqla && (\n                <>\n                  <Col xs={24} md={12}>\n                    <Field\n                      fieldKey=\"databaseSelector\"\n                      label={t('virtual')}\n                      control={\n                        <div css={{ marginTop: 8 }}>\n                          <DatabaseSelector\n                            db={datasource?.database}\n                            schema={datasource.schema}\n                            onSchemaChange={schema =>\n                              this.state.isEditMode &&\n                              this.onDatasourcePropChange('schema', schema)\n                            }\n                            onDbChange={database =>\n                              this.state.isEditMode &&\n                              this.onDatasourcePropChange('database', database)\n                            }\n                            formMode={false}\n                            handleError={this.props.addDangerToast}\n                            readOnly={!this.state.isEditMode}\n                          />\n                        </div>\n                      }\n                    />\n                    <div css={{ width: 'calc(100% - 34px)', marginTop: -16 }}>\n                      <Field\n                        fieldKey=\"table_name\"\n                        label={t('Dataset name')}\n                        control={\n                          <TextControl\n                            controlId=\"table_name\"\n                            onChange={table => {\n                              this.onDatasourcePropChange('table_name', table);\n                            }}\n                            placeholder={t('Dataset name')}\n                            disabled={!this.state.isEditMode}\n                          />\n                        }\n                      />\n                    </div>\n                  </Col>\n                  <Field\n                    fieldKey=\"sql\"\n                    label={t('SQL')}\n                    description={t(\n                      'When specifying SQL, the datasource acts as a view. ' +\n                        'Superset will use this statement as a subquery while grouping and filtering ' +\n                        'on the generated parent queries.',\n                    )}\n                    control={\n                      <TextAreaControl\n                        language=\"sql\"\n                        offerEditInModal={false}\n                        minLines={20}\n                        maxLines={20}\n                        readOnly={!this.state.isEditMode}\n                        resize=\"both\"\n                      />\n                    }\n                  />\n                </>\n              )}\n            </div>\n          )}\n          {this.state.datasourceType === DATASOURCE_TYPES.physical.key && (\n            <Col xs={24} md={12}>\n              {this.state.isSqla && (\n                <Field\n                  fieldKey=\"tableSelector\"\n                  label={t('Physical')}\n                  control={\n                    <div css={{ marginTop: 8 }}>\n                      <TableSelector\n                        clearable={false}\n                        database={{\n                          ...datasource.database,\n                          database_name:\n                            datasource.database?.database_name ||\n                            datasource.database?.name,\n                        }}\n                        dbId={datasource.database?.id}\n                        handleError={this.props.addDangerToast}\n                        schema={datasource.schema}\n                        sqlLabMode={false}\n                        tableValue={datasource.table_name}\n                        onSchemaChange={\n                          this.state.isEditMode\n                            ? schema =>\n                                this.onDatasourcePropChange('schema', schema)\n                            : undefined\n                        }\n                        onDbChange={\n                          this.state.isEditMode\n                            ? database =>\n                                this.onDatasourcePropChange(\n                                  'database',\n                                  database,\n                                )\n                            : undefined\n                        }\n                        onTableSelectChange={\n                          this.state.isEditMode\n                            ? table =>\n                                this.onDatasourcePropChange('table_name', table)\n                            : undefined\n                        }\n                        readOnly={!this.state.isEditMode}\n                      />\n                    </div>\n                  }\n                  description={t(\n                    'The pointer to a physical table (or view). Keep in mind that the chart is ' +\n                      'associated to this Superset logical table, and this logical table points ' +\n                      'the physical table referenced here.',\n                  )}\n                />\n              )}\n            </Col>\n          )}\n        </Fieldset>\n      </div>\n    );\n  }\n\n  renderErrors() {\n    if (this.state.errors.length > 0) {\n      return (\n        <Alert\n          css={theme => ({ marginBottom: theme.gridUnit * 4 })}\n          type=\"error\"\n          message={\n            <>\n              {this.state.errors.map(err => (\n                <div key={err}>{err}</div>\n              ))}\n            </>\n          }\n        />\n      );\n    }\n    return null;\n  }\n\n  renderMetricCollection() {\n    const { datasource } = this.state;\n    const { metrics } = datasource;\n    const sortedMetrics = metrics?.length ? this.sortMetrics(metrics) : [];\n    return (\n      <CollectionTable\n        tableColumns={['metric_name', 'verbose_name', 'expression']}\n        sortColumns={['metric_name', 'verbose_name', 'expression']}\n        columnLabels={{\n          metric_name: t('Metric'),\n          verbose_name: t('Label'),\n          expression: t('SQL expression'),\n        }}\n        expandFieldset={\n          <FormContainer>\n            <Fieldset compact>\n              <Field\n                fieldKey=\"description\"\n                label={t('Description')}\n                control={\n                  <TextControl\n                    controlId=\"description\"\n                    placeholder={t('Description')}\n                  />\n                }\n              />\n              <Field\n                fieldKey=\"d3format\"\n                label={t('D3 format')}\n                control={\n                  <TextControl controlId=\"d3format\" placeholder=\"%y/%m/%d\" />\n                }\n              />\n              <Field\n                label={t('Certified by')}\n                fieldKey=\"certified_by\"\n                description={t(\n                  'Person or group that has certified this metric',\n                )}\n                control={\n                  <TextControl\n                    controlId=\"certified_by\"\n                    placeholder={t('Certified by')}\n                  />\n                }\n              />\n              <Field\n                label={t('Certification details')}\n                fieldKey=\"certification_details\"\n                description={t('Details of the certification')}\n                control={\n                  <TextControl\n                    controlId=\"certification_details\"\n                    placeholder={t('Certification details')}\n                  />\n                }\n              />\n              <Field\n                label={t('Warning')}\n                fieldKey=\"warning_markdown\"\n                description={t('Optional warning about use of this metric')}\n                control={\n                  <TextAreaControl\n                    controlId=\"warning_markdown\"\n                    language=\"markdown\"\n                    offerEditInModal={false}\n                    resize=\"vertical\"\n                  />\n                }\n              />\n            </Fieldset>\n          </FormContainer>\n        }\n        collection={sortedMetrics}\n        allowAddItem\n        onChange={this.onDatasourcePropChange.bind(this, 'metrics')}\n        itemGenerator={() => ({\n          metric_name: t('<new metric>'),\n          verbose_name: '',\n          expression: '',\n        })}\n        itemCellProps={{\n          expression: () => ({\n            width: '240px',\n          }),\n        }}\n        itemRenderers={{\n          metric_name: (v, onChange, _, record) => (\n            <FlexRowContainer>\n              {record.is_certified && (\n                <CertifiedBadge\n                  certifiedBy={record.certified_by}\n                  details={record.certification_details}\n                />\n              )}\n              {record.warning_markdown && (\n                <WarningIconWithTooltip\n                  warningMarkdown={record.warning_markdown}\n                />\n              )}\n              <EditableTitle canEdit title={v} onSaveTitle={onChange} />\n            </FlexRowContainer>\n          ),\n          verbose_name: (v, onChange) => (\n            <TextControl canEdit value={v} onChange={onChange} />\n          ),\n          expression: (v, onChange) => (\n            <TextAreaControl\n              canEdit\n              initialValue={v}\n              onChange={onChange}\n              extraClasses={['datasource-sql-expression']}\n              language=\"sql\"\n              offerEditInModal={false}\n              minLines={5}\n              textAreaStyles={{ minWidth: '200px', maxWidth: '450px' }}\n              resize=\"both\"\n            />\n          ),\n          description: (v, onChange, label) => (\n            <StackedField\n              label={label}\n              formElement={<TextControl value={v} onChange={onChange} />}\n            />\n          ),\n          d3format: (v, onChange, label) => (\n            <StackedField\n              label={label}\n              formElement={<TextControl value={v} onChange={onChange} />}\n            />\n          ),\n        }}\n        allowDeletes\n        stickyHeader\n      />\n    );\n  }\n\n  render() {\n    const { datasource, activeTabKey } = this.state;\n    const { metrics } = datasource;\n    const sortedMetrics = metrics?.length ? this.sortMetrics(metrics) : [];\n    const { theme } = this.props;\n\n    return (\n      <DatasourceContainer>\n        {this.renderErrors()}\n        <Alert\n          css={theme => ({ marginBottom: theme.gridUnit * 4 })}\n          type=\"warning\"\n          message={\n            <>\n              {' '}\n              <strong>{t('Be careful.')} </strong>\n              {t(\n                'Changing these settings will affect all charts using this dataset, including charts owned by other people.',\n              )}\n            </>\n          }\n        />\n        <StyledTableTabs\n          fullWidth={false}\n          id=\"table-tabs\"\n          data-test=\"edit-dataset-tabs\"\n          onChange={this.handleTabSelect}\n          defaultActiveKey={activeTabKey}\n        >\n          <Tabs.TabPane key={0} tab={t('Source')}>\n            {this.renderSourceFieldset(theme)}\n          </Tabs.TabPane>\n          <Tabs.TabPane\n            tab={\n              <CollectionTabTitle\n                collection={sortedMetrics}\n                title={t('Metrics')}\n              />\n            }\n            key={1}\n          >\n            {this.renderMetricCollection()}\n          </Tabs.TabPane>\n          <Tabs.TabPane\n            tab={\n              <CollectionTabTitle\n                collection={this.state.databaseColumns}\n                title={t('Columns')}\n              />\n            }\n            key={2}\n          >\n            <StyledColumnsTabWrapper>\n              <ColumnButtonWrapper>\n                <StyledButtonWrapper>\n                  <Button\n                    buttonSize=\"small\"\n                    buttonStyle=\"tertiary\"\n                    onClick={this.syncMetadata}\n                    className=\"sync-from-source\"\n                    disabled={this.state.isEditMode}\n                  >\n                    <i className=\"fa fa-database\" />{' '}\n                    {t('Sync columns from source')}\n                  </Button>\n                </StyledButtonWrapper>\n              </ColumnButtonWrapper>\n              <ColumnCollectionTable\n                className=\"columns-table\"\n                columns={this.state.databaseColumns}\n                datasource={datasource}\n                onColumnsChange={databaseColumns =>\n                  this.setColumns({ databaseColumns })\n                }\n                onDatasourceChange={this.onDatasourceChange}\n              />\n              {this.state.metadataLoading && <Loading />}\n            </StyledColumnsTabWrapper>\n          </Tabs.TabPane>\n          <Tabs.TabPane\n            tab={\n              <CollectionTabTitle\n                collection={this.state.calculatedColumns}\n                title={t('Calculated columns')}\n              />\n            }\n            key={3}\n          >\n            <StyledColumnsTabWrapper>\n              <ColumnCollectionTable\n                columns={this.state.calculatedColumns}\n                onColumnsChange={calculatedColumns =>\n                  this.setColumns({ calculatedColumns })\n                }\n                onDatasourceChange={this.onDatasourceChange}\n                datasource={datasource}\n                editableColumnName\n                showExpression\n                allowAddItem\n                allowEditDataType\n                itemGenerator={() => ({\n                  column_name: t('<new column>'),\n                  filterable: true,\n                  groupby: true,\n                  expression: t('<enter SQL expression here>'),\n                  __expanded: true,\n                })}\n              />\n            </StyledColumnsTabWrapper>\n          </Tabs.TabPane>\n          <Tabs.TabPane key={4} tab={t('Settings')}>\n            <Row gutter={16}>\n              <Col xs={24} md={12}>\n                <FormContainer>{this.renderSettingsFieldset()}</FormContainer>\n              </Col>\n              <Col xs={24} md={12}>\n                <FormContainer>{this.renderAdvancedFieldset()}</FormContainer>\n              </Col>\n            </Row>\n          </Tabs.TabPane>\n        </StyledTableTabs>\n      </DatasourceContainer>\n    );\n  }\n}\n\nDatasourceEditor.defaultProps = defaultProps;\nDatasourceEditor.propTypes = propTypes;\n\nconst DataSourceComponent = withTheme(DatasourceEditor);\n\nexport default withToasts(DataSourceComponent);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { SupersetTheme } from '@superset-ui/core';\nimport AntdCard, { CardProps as AntdCardProps } from 'antd/lib/card';\n\nexport interface CardProps extends AntdCardProps {\n  padded?: boolean;\n}\n\nconst Card = ({ padded, ...props }: CardProps) => (\n  <AntdCard\n    {...props}\n    css={(theme: SupersetTheme) => ({\n      backgroundColor: theme.colors.grayscale.light4,\n      borderRadius: theme.borderRadius,\n      '.ant-card-body': {\n        padding: padded ? theme.gridUnit * 4 : theme.gridUnit,\n      },\n    })}\n  />\n);\n\nexport default Card;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t, useTheme } from '@superset-ui/core';\nimport Icons, { IconType } from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\n\nexport interface CertifiedBadgeProps {\n  certifiedBy?: string;\n  details?: string;\n  size?: IconType['iconSize'];\n}\n\nfunction CertifiedBadge({\n  certifiedBy,\n  details,\n  size = 'l',\n}: CertifiedBadgeProps) {\n  const theme = useTheme();\n\n  return (\n    <Tooltip\n      id=\"certified-details-tooltip\"\n      title={\n        <>\n          {certifiedBy && (\n            <div>\n              <strong>{t('Certified by %s', certifiedBy)}</strong>\n            </div>\n          )}\n          <div>{details}</div>\n        </>\n      }\n    >\n      <Icons.Certified iconColor={theme.colors.primary.base} iconSize={size} />\n    </Tooltip>\n  );\n}\n\nexport default CertifiedBadge;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport cx from 'classnames';\nimport { css, styled, SupersetTheme, t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport CertifiedBadge from '../CertifiedBadge';\n\nexport interface EditableTitleProps {\n  canEdit?: boolean;\n  editing?: boolean;\n  emptyText?: string;\n  extraClasses?: Array<string> | string;\n  multiLine?: boolean;\n  noPermitTooltip?: string;\n  onSaveTitle: (arg0: string) => void;\n  showTooltip?: boolean;\n  style?: object;\n  title?: string;\n  defaultTitle?: string;\n  placeholder?: string;\n  certifiedBy?: string;\n  certificationDetails?: string;\n  url?: string;\n}\n\nconst StyledCertifiedBadge = styled(CertifiedBadge)`\n  vertical-align: middle;\n`;\n\nexport default function EditableTitle({\n  canEdit = false,\n  editing = false,\n  extraClasses,\n  multiLine = false,\n  noPermitTooltip,\n  onSaveTitle,\n  showTooltip = true,\n  style,\n  title = '',\n  defaultTitle = '',\n  placeholder = '',\n  certifiedBy,\n  certificationDetails,\n  url,\n  // rest is related to title tooltip\n  ...rest\n}: EditableTitleProps) {\n  const [isEditing, setIsEditing] = useState(editing);\n  const [currentTitle, setCurrentTitle] = useState(title);\n  const [lastTitle, setLastTitle] = useState(title);\n  const [contentBoundingRect, setContentBoundingRect] =\n    useState<DOMRect | null>(null);\n  // Used so we can access the DOM element if a user clicks on this component.\n\n  const contentRef = useRef<any | HTMLInputElement | HTMLTextAreaElement>();\n\n  useEffect(() => {\n    if (title !== currentTitle) {\n      setLastTitle(currentTitle);\n      setCurrentTitle(title);\n    }\n  }, [title]);\n\n  useEffect(() => {\n    if (isEditing) {\n      contentRef.current.focus();\n      // move cursor and scroll to the end\n      if (contentRef.current.setSelectionRange) {\n        const { length } = contentRef.current.value;\n        contentRef.current.setSelectionRange(length, length);\n        contentRef.current.scrollLeft = contentRef.current.scrollWidth;\n        contentRef.current.scrollTop = contentRef.current.scrollHeight;\n      }\n    }\n  }, [isEditing]);\n\n  function handleClick() {\n    if (!canEdit || isEditing) {\n      return;\n    }\n\n    // For multi-line values, save the actual rendered size of the displayed text.\n    // Later, if a textarea is constructed for editing the value, we'll need this.\n    const contentBounding = contentRef.current\n      ? contentRef.current.getBoundingClientRect()\n      : null;\n    setIsEditing(true);\n    setContentBoundingRect(contentBounding);\n  }\n\n  function handleBlur() {\n    const formattedTitle = currentTitle.trim();\n\n    if (!canEdit) {\n      return;\n    }\n\n    setIsEditing(false);\n\n    if (!formattedTitle.length) {\n      setCurrentTitle(lastTitle);\n      return;\n    }\n\n    if (lastTitle !== formattedTitle) {\n      setLastTitle(formattedTitle);\n    }\n\n    if (title !== formattedTitle) {\n      onSaveTitle(formattedTitle);\n    }\n  }\n\n  // tl;dr when a EditableTitle is being edited, typically the Tab that wraps it has been\n  // clicked and is focused/active. For accessibility, when the focused tab anchor intercepts\n  // the ' ' key (among others, including all arrows) the onChange() doesn't fire. Somehow\n  // keydown is still called so we can detect this and manually add a ' ' to the current title\n  function handleKeyDown(event: any) {\n    if (event.key === ' ') {\n      event.stopPropagation();\n    }\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      handleBlur();\n    }\n  }\n\n  function handleChange(ev: any) {\n    if (!canEdit) {\n      return;\n    }\n    setCurrentTitle(ev.target.value);\n  }\n\n  function handleKeyPress(ev: any) {\n    if (ev.key === 'Enter') {\n      ev.preventDefault();\n      handleBlur();\n    }\n  }\n\n  let value: string | undefined;\n  value = currentTitle;\n  if (!isEditing && !currentTitle) {\n    value = defaultTitle || title;\n  }\n\n  // Construct an inline style based on previously-saved height of the rendered label. Only\n  // used in multi-line contexts.\n  const editStyle =\n    isEditing && contentBoundingRect\n      ? { height: `${contentBoundingRect.height}px` }\n      : undefined;\n\n  // Create a textarea when we're editing a multi-line value, otherwise create an input (which may\n  // be text or a button).\n  let titleComponent =\n    multiLine && isEditing ? (\n      <textarea\n        data-test=\"editable-title-input\"\n        ref={contentRef}\n        value={value}\n        className={!title ? 'text-muted' : undefined}\n        onKeyDown={handleKeyDown}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        onClick={handleClick}\n        onKeyPress={handleKeyPress}\n        placeholder={placeholder}\n        style={editStyle}\n      />\n    ) : (\n      <input\n        data-test=\"editable-title-input\"\n        ref={contentRef}\n        type={isEditing ? 'text' : 'button'}\n        value={value}\n        className={!title ? 'text-muted' : undefined}\n        onKeyDown={handleKeyDown}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        onClick={handleClick}\n        onKeyPress={handleKeyPress}\n        placeholder={placeholder}\n      />\n    );\n  if (showTooltip && !isEditing) {\n    titleComponent = (\n      <Tooltip\n        id=\"title-tooltip\"\n        title={\n          canEdit\n            ? t('Click to edit')\n            : noPermitTooltip ||\n              t(\"You don't have the rights to alter this title.\")\n        }\n      >\n        {titleComponent}\n      </Tooltip>\n    );\n  }\n  if (!canEdit) {\n    // don't actually want an input in this case\n    titleComponent = url ? (\n      <Link\n        to={url}\n        data-test=\"editable-title-input\"\n        css={(theme: SupersetTheme) => css`\n          color: ${theme.colors.grayscale.dark1};\n          text-decoration: none;\n          :hover {\n            text-decoration: underline;\n          }\n        `}\n      >\n        {value}\n      </Link>\n    ) : (\n      <span data-test=\"editable-title-input\">{value}</span>\n    );\n  }\n  return (\n    <span\n      data-test=\"editable-title\"\n      className={cx(\n        'editable-title',\n        extraClasses,\n        canEdit && 'editable-title--editable',\n        isEditing && 'editable-title--editing',\n      )}\n      style={style}\n      {...rest}\n    >\n      {certifiedBy && (\n        <>\n          <StyledCertifiedBadge\n            certifiedBy={certifiedBy}\n            details={certificationDetails}\n            size=\"xl\"\n          />{' '}\n        </>\n      )}\n      {titleComponent}\n    </span>\n  );\n}\n","import { useLayoutEffect, useMemo, useRef } from 'react';\r\nconst useEventCallback = (fn) => {\r\n    let ref = useRef(fn);\r\n    useLayoutEffect(() => {\r\n        ref.current = fn;\r\n    });\r\n    return useMemo(() => (...args) => {\r\n        const { current } = ref;\r\n        return current(...args);\r\n    }, []);\r\n};\r\nexport default useEventCallback;\r\n//# sourceMappingURL=index.js.map"],"names":["recurseReactClone","children","type","propExtender","React","child","newChild","name","props","formItemInlineCss","css","Field","fieldKey","value","label","description","control","onChange","compact","inline","onControlChange","useCallback","newValue","hookedControl","Form","className","Tooltip","id","placement","title","theme","color","colors","grayscale","base","gridUnit","Fieldset","constructor","super","this","bind","val","item","render","layout","field","SortOrder","createKeyedCollection","arr","collectionArray","map","o","shortid","collection","forEach","defaultProps","CrudTableWrapper","styled","stickyHeader","CrudButtonWrapper","StyledButtonWrapper","CRUDCollection","state","expandedColumns","sortColumn","sort","renderItem","onAddItem","renderExpandableSection","getLabel","onFieldsetChange","renderTableBody","changeCollection","renderSortIcon","UNSAFE_componentWillReceiveProps","nextProps","setState","onCellChange","col","itemGenerator","newItem","columnLabels","startsWith","c","filter","undefined","unshift","deleteItem","newColl","effectiveTableColumns","tableColumns","allowDeletes","expandFieldset","cols","concat","toggleExpand","prevState","unsort","sortColumns","Object","keys","k","createCollectionArray","sorted","a","b","compareSort","m","n","localeCompare","newCollection","asc","reverse","Icons","onClick","desc","renderHeaderRow","extraButtons","key","getCellProps","record","cellPropsFn","itemCellProps","renderCell","renderer","itemRenderers","allowAddItem","isExpanded","__expanded","tds","push","role","tabIndex","trs","colSpan","length","renderEmptyCell","emptyMessage","data","content","d","Button","buttonSize","buttonStyle","t","DatasourceContainer","warning","typography","weights","bold","FlexRowContainer","StyledTableTabs","Tabs","StyledBadge","Badge","EditLockContainer","sizes","s","ColumnButtonWrapper","StyledLabelWrapper","StyledColumnsTabWrapper","checkboxGenerator","CheckboxControl","DATA_TYPES","DATASOURCE_TYPES_ARR","DATASOURCE_TYPES","CollectionTabTitle","count","showZero","ColumnCollectionTable","columns","datasource","onColumnsChange","onDatasourceChange","editableColumnName","showExpression","allowEditDataType","isFeatureEnabled","FeatureFlag","FormContainer","TextAreaControl","language","offerEditInModal","resize","TextControl","controlId","placeholder","ariaLabel","options","allowNewOptions","allowClear","href","column_name","advanced_data_type","groupby","is_dttm","main_dttm_col","filterable","v","onItemChange","_","is_certified","CertifiedBadge","certifiedBy","certified_by","details","certification_details","EditableTitle","canEdit","onSaveTitle","_onItemChange","_label","checked","disabled","find","column","Radio","Label","StackedField","formElement","Card","padded","propTypes","PropTypes","addSuccessToast","addDangerToast","setIsEditing","OwnersSelector","loadOptions","search","page","pageSize","query","rison","page_size","SupersetClient","endpoint","then","response","json","result","extra","active","text","totalCount","mode","owners","header","DatasourceEditor","owner","first_name","last_name","metrics","metric","certifiedByMetric","certificationDetails","certification","warning_markdown","warningMarkdown","JSON","parse","errors","isSqla","datasource_type","isEditMode","databaseColumns","expression","calculatedColumns","metadataLoading","activeTabKey","datasourceType","sql","virtual","physical","onChangeEditMode","onDatasourcePropChange","tableChangeAndSyncMetadata","syncMetadata","setColumns","validateAndChange","handleTabSelect","allowEditSource","newDatasource","callback","attr","onDatasourceTypeChange","obj","validate","updateColumns","databaseColumnNames","currentCols","reduce","agg","finalColumns","results","added","modified","removed","currentCol","params","database_name","database","schema_name","schema","table_name","encodeURIComponent","entries","join","catch","getClientErrorObject","error","statusText","findDuplicates","accessor","seen","dups","metric_name","noFilterCalcCols","sortMetrics","renderSettingsFieldset","minLines","newOwners","renderAdvancedFieldset","renderSpatialTab","spatials","all_cols","allCols","tab","config","SpatialControl","choices","renderSourceFieldset","iconColor","xs","md","DatabaseSelector","db","onSchemaChange","onDbChange","formMode","handleError","readOnly","width","marginTop","table","maxLines","TableSelector","clearable","dbId","sqlLabMode","tableValue","onTableSelectChange","renderErrors","Alert","marginBottom","message","err","renderMetricCollection","sortedMetrics","verbose_name","WarningIconWithTooltip","initialValue","extraClasses","textAreaStyles","minWidth","maxWidth","d3format","fullWidth","defaultActiveKey","Loading","gutter","DataSourceComponent","withTheme","withToasts","backgroundColor","light4","borderRadius","padding","size","useTheme","primary","iconSize","StyledCertifiedBadge","editing","multiLine","noPermitTooltip","showTooltip","style","defaultTitle","url","rest","isEditing","useState","currentTitle","setCurrentTitle","lastTitle","setLastTitle","contentBoundingRect","setContentBoundingRect","contentRef","useRef","handleClick","contentBounding","current","getBoundingClientRect","handleBlur","formattedTitle","trim","handleKeyDown","event","stopPropagation","preventDefault","handleChange","ev","target","handleKeyPress","useEffect","focus","setSelectionRange","scrollLeft","scrollWidth","scrollTop","scrollHeight","editStyle","height","titleComponent","ref","onKeyDown","onBlur","onKeyPress","to","dark1","cx","fn","useLayoutEffect","useMemo","args"],"sourceRoot":""}