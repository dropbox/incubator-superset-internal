"use strict";(globalThis.webpackChunksuperset=globalThis.webpackChunksuperset||[]).push([[5289],{75289:(e,t,o)=>{o.r(t),o.d(t,{COLUMN_NAME_ALIASES:()=>M.DS,COMPARATOR:()=>ee.O9,ColumnOption:()=>j.E,ColumnTypeLabel:()=>z.j,D3_FORMAT_DOCS:()=>A.YD,D3_FORMAT_OPTIONS:()=>A.F6,D3_TIME_FORMAT_DOCS:()=>A.oq,D3_TIME_FORMAT_OPTIONS:()=>A.HC,DEFAULT_NUMBER_FORMAT:()=>A.Ul,DEFAULT_TIME_FORMAT:()=>A._r,InfoTooltipWithTrigger:()=>Y.V,MULTIPLE_VALUE_COMPARATORS:()=>ee.vD,MetricOption:()=>Q.m,QueryModeLabel:()=>M.cm,TIME_COLUMN_OPTION:()=>M.Au,TIME_COMPARISON_SEPARATOR:()=>B.K,TIME_FILTER_LABELS:()=>M.m_,__hack__reexport__:()=>G.M,boxplotOperator:()=>q.F,columnChoices:()=>w.Z,contributionOperator:()=>D.I,dndColumnsControl:()=>$.lC,dndEntity:()=>$.zo,emitFilterControl:()=>J.a,expandControlConfig:()=>E.q,expandControlType:()=>E.$,flattenOperator:()=>U.k,formatSelectOptions:()=>p.m,formatSelectOptionsForRange:()=>p.B,getColorFormatters:()=>x.ni,getColorFunction:()=>x.E2,getMetricOffsetsMap:()=>W.O,getOpacity:()=>x.Km,isAdhocColumn:()=>ee.GA,isColumnMeta:()=>ee.xN,isSavedExpression:()=>ee.zy,isValidTimeCompare:()=>H.A,legacySortBy:()=>K,mainMetric:()=>S,pivotOperator:()=>I.H,prophetOperator:()=>P.D,renameOperator:()=>Z.N,resampleOperator:()=>V.X,rgbToRgba:()=>x.wB,rollingWindowOperator:()=>R.V,round:()=>x.NM,sections:()=>te,sharedControlComponents:()=>G.Z,sharedControls:()=>X.Hq,sortOperator:()=>L,timeCompareOperator:()=>k.N,timeComparePivotOperator:()=>F.O});var a={};o.r(a),o.d(a,{FORECAST_DEFAULT_DATA:()=>b,advancedAnalyticsControls:()=>f,annotationLayers:()=>y,annotations:()=>d,annotationsAndLayersControls:()=>g,colorScheme:()=>c,datasourceAndVizType:()=>s,forecastIntervalControls:()=>v,legacyRegularTime:()=>l,legacyTimeseriesTime:()=>i,titleControls:()=>C});var r=o(61988);const n={label:(0,r.t)("Time"),expanded:!0,description:(0,r.t)("Time related form attributes")},i={...n,controlSetRows:[["granularity"],["druid_time_origin"],["granularity_sqla"],["time_grain_sqla"],["time_range"]]},l={...n,controlSetRows:[["granularity_sqla"],["time_range"]]},s={label:(0,r.t)("Datasource & Chart Type"),expanded:!0,controlSetRows:[["datasource"],["viz_type"],[{name:"slice_id",config:{type:"HiddenControl",label:(0,r.t)("Chart ID"),hidden:!0,description:(0,r.t)("The id of the active chart")}},{name:"cache_timeout",config:{type:"HiddenControl",label:(0,r.t)("Cache Timeout (seconds)"),hidden:!0,description:(0,r.t)("The number of seconds before expiring the cache")}},{name:"url_params",config:{type:"HiddenControl",label:(0,r.t)("URL Parameters"),hidden:!0,description:(0,r.t)("Extra url parameters for use in Jinja templated queries")}},{name:"custom_params",config:{type:"HiddenControl",label:(0,r.t)("Extra Parameters"),hidden:!0,description:(0,r.t)("Extra parameters that any plugins can choose to set for use in Jinja templated queries")}},{name:"time_range_endpoints",config:{type:"HiddenControl",label:(0,r.t)("Time range endpoints"),hidden:!0,description:(0,r.t)("Time range endpoints (SIP-15)")}}]]},c={label:(0,r.t)("Color Scheme"),controlSetRows:[["color_scheme"]]},d={label:(0,r.t)("Annotations and Layers"),tabOverride:"data",expanded:!0,controlSetRows:[[{name:"annotation_layers",config:{type:"AnnotationLayerControl",label:"",default:[],description:(0,r.t)("Annotation Layers"),renderTrigger:!0}}]]};o(67294);var u=o(62363),p=o(6126),m=o(11965);const f={label:(0,r.t)("Advanced analytics"),tabOverride:"data",description:(0,r.t)("This section contains options that allow for advanced analytical post processing of query results"),controlSetRows:[[(0,m.tZ)("h1",{className:"section-header"},(0,r.t)("Rolling window"))],[{name:"rolling_type",config:{type:"SelectControl",label:(0,r.t)("Rolling function"),default:null,choices:[[null,(0,r.t)("None")]].concat((0,p.m)(Object.values(u.su))),description:(0,r.t)("Defines a rolling window function to apply, works along with the [Periods] text box")}}],[{name:"rolling_periods",config:{type:"TextControl",label:(0,r.t)("Periods"),isInt:!0,description:(0,r.t)("Defines the size of the rolling window function, relative to the time granularity selected"),visibility:({controls:e})=>{var t;return Boolean(null==e||null==(t=e.rolling_type)?void 0:t.value)&&e.rolling_type.value!==u.su.Cumsum}}}],[{name:"min_periods",config:{type:"TextControl",label:(0,r.t)("Min periods"),isInt:!0,description:(0,r.t)('The minimum number of rolling periods required to show a value. For instance if you do a cumulative sum on 7 days you may want your "Min Period" to be 7, so that all data points shown are the total of 7 periods. This will hide the "ramp up" taking place over the first 7 periods'),visibility:({controls:e})=>{var t;return Boolean(null==e||null==(t=e.rolling_type)?void 0:t.value)&&e.rolling_type.value!==u.su.Cumsum}}}],[(0,m.tZ)("h1",{className:"section-header"},(0,r.t)("Time comparison"))],[{name:"time_compare",config:{type:"SelectControl",multi:!0,freeForm:!0,label:(0,r.t)("Time shift"),choices:(0,p.m)(["1 day ago","1 week ago","28 days ago","30 days ago","52 weeks ago","1 year ago","104 weeks ago","2 years ago","156 weeks ago","3 years ago"]),description:(0,r.t)("Overlay one or more timeseries from a relative time period. Expects relative time deltas in natural language (example:  24 hours, 7 days, 52 weeks, 365 days). Free text is supported.")}}],[{name:"comparison_type",config:{type:"SelectControl",label:(0,r.t)("Calculation type"),default:"values",choices:[[u.pF.Values,"Actual values"],[u.pF.Difference,"Difference"],[u.pF.Percentage,"Percentage change"],[u.pF.Ratio,"Ratio"]],description:(0,r.t)("How to display time shifts: as individual lines; as the difference between the main time series and each time shift; as the percentage change; or as the ratio between series and time shifts.")}}],[(0,m.tZ)("h1",{className:"section-header"},(0,r.t)("Resample"))],[{name:"resample_rule",config:{type:"SelectControl",freeForm:!0,label:(0,r.t)("Rule"),default:null,choices:[["1T","1 minutely frequency"],["1H","1 hourly frequency"],["1D","1 calendar day frequency"],["7D","7 calendar day frequency"],["1MS","1 month start frequency"],["1M","1 month end frequency"],["1AS","1 year start frequency"],["1A","1 year end frequency"]],description:(0,r.t)("Pandas resample rule")}}],[{name:"resample_method",config:{type:"SelectControl",freeForm:!0,label:(0,r.t)("Fill method"),default:null,choices:[["asfreq","Null imputation"],["zerofill","Zero imputation"],["linear","Linear interpolation"],["ffill","Forward values"],["bfill","Backward values"],["median","Median values"],["mean","Mean values"],["sum","Sum values"]],description:(0,r.t)("Pandas resample method")}}]]},y=[],g={label:(0,r.t)("Annotations and Layers"),expanded:!1,controlSetRows:[[{name:"annotation_layers",config:{type:"AnnotationLayerControl",label:"",default:y,description:(0,r.t)("Annotation Layers")}}]]};var _=o(75294),h=o(99298);const b={forecastEnabled:!1,forecastInterval:.8,forecastPeriods:10,forecastSeasonalityDaily:null,forecastSeasonalityWeekly:null,forecastSeasonalityYearly:null},v={label:(0,r.t)("Predictive Analytics"),expanded:!1,controlSetRows:[[{name:"forecastEnabled",config:{type:"CheckboxControl",label:(0,r.t)("Enable forecast"),renderTrigger:!1,default:b.forecastEnabled,description:(0,r.t)("Enable forecasting")}}],[{name:"forecastPeriods",config:{type:"TextControl",label:(0,r.t)("Forecast periods"),validators:[_.Z],default:b.forecastPeriods,description:(0,r.t)("How many periods into the future do we want to predict")}}],[{name:"forecastInterval",config:{type:"TextControl",label:(0,r.t)("Confidence interval"),validators:[h.Z],default:b.forecastInterval,description:(0,r.t)("Width of the confidence interval. Should be between 0 and 1")}}],[{name:"forecastSeasonalityYearly",config:{type:"SelectControl",freeForm:!0,label:"Yearly seasonality",choices:[[null,"default"],[!0,"Yes"],[!1,"No"]],default:b.forecastSeasonalityYearly,description:(0,r.t)("Should yearly seasonality be applied. An integer value will specify Fourier order of seasonality.")}}],[{name:"forecastSeasonalityWeekly",config:{type:"SelectControl",freeForm:!0,label:"Weekly seasonality",choices:[[null,"default"],[!0,"Yes"],[!1,"No"]],default:b.forecastSeasonalityWeekly,description:(0,r.t)("Should weekly seasonality be applied. An integer value will specify Fourier order of seasonality.")}}],[{name:"forecastSeasonalityDaily",config:{type:"SelectControl",freeForm:!0,label:"Daily seasonality",choices:[[null,"default"],[!0,"Yes"],[!1,"No"]],default:b.forecastSeasonalityDaily,description:(0,r.t)("Should daily seasonality be applied. An integer value will specify Fourier order of seasonality.")}}]]},T=[15,30,50,75,100,125,150,200],O=["Left","Top"],C={label:(0,r.t)("Chart Title"),tabOverride:"customize",expanded:!0,controlSetRows:[[(0,m.tZ)("h1",{className:"section-header"},(0,r.t)("X Axis"))],[{name:"x_axis_title",config:{type:"TextControl",label:(0,r.t)("X Axis Title"),renderTrigger:!0,default:"",description:(0,r.t)("Changing this control takes effect instantly")}}],[{name:"x_axis_title_margin",config:{type:"SelectControl",freeForm:!0,clearable:!0,label:(0,r.t)("X AXIS TITLE BOTTOM MARGIN"),renderTrigger:!0,default:T[0],choices:(0,p.m)(T),description:(0,r.t)("Changing this control takes effect instantly")}}],[(0,m.tZ)("h1",{className:"section-header"},(0,r.t)("Y Axis"))],[{name:"y_axis_title",config:{type:"TextControl",label:(0,r.t)("Y Axis Title"),renderTrigger:!0,default:"",description:(0,r.t)("Changing this control takes effect instantly")}}],[{name:"y_axis_title_margin",config:{type:"SelectControl",freeForm:!0,clearable:!0,label:(0,r.t)("Y AXIS TITLE MARGIN"),renderTrigger:!0,default:T[0],choices:(0,p.m)(T),description:(0,r.t)("Changing this control takes effect instantly")}}],[{name:"y_axis_title_position",config:{type:"SelectControl",freeForm:!0,clearable:!1,label:(0,r.t)("Y AXIS TITLE POSITION"),renderTrigger:!0,default:O[0],choices:(0,p.m)(O),description:(0,r.t)("Changing this control takes effect instantly")}}]]};var A=o(58842),E=o(89368),x=o(9609);function S(e){let t;return e&&e.length>0&&(e.forEach((e=>{"count"===e.metric_name&&(t="count")})),t||(t=e[0].metric_name)),t}var w=o(75781),M=o(35622),R=o(97490),k=o(60955),F=o(92155),N=o(5364);const L=(e,t)=>{const{x_axis:o}=e;if((o||t.is_timeseries)&&Object.values(u.su).includes(e.rolling_type))return{operation:"sort",options:{columns:{[o||N.W3]:!0}}}};var I=o(4098),V=o(99343),Z=o(19546),D=o(69862),P=o(37701),q=o(20884),U=o(62124),W=o(6219),H=o(96709),B=o(14920),Y=o(9882),j=o(65634),z=o(45737),Q=o(51384),X=o(16522),$=o(53769),G=o(356);const K=[["legacy_order_by"],[{name:"order_desc",config:{type:"CheckboxControl",label:(0,r.t)("Sort descending"),default:!0,description:(0,r.t)('Whether to sort descending or ascending. Takes effect only when "Sort by" is set')}}]];var J=o(929),ee=o(38575);const te=a},20884:(e,t,o)=>{o.d(t,{F:()=>l});var a=o(55786),r=o(10581),n=o(56652);const i=/(\d+)\/(\d+) percentiles/,l=(e,t)=>{const{groupby:o,whiskerOptions:l}=e;if(l){let e,s;const c=i.exec(l);if("Tukey"!==l&&l)if("Min/max (no outliers)"===l)e="min/max";else{if(!c)throw new Error(`Unsupported whisker type: ${l}`);e="percentile",s=[parseInt(c[1],10),parseInt(c[2],10)]}else e="tukey";return{operation:"boxplot",options:{whisker_type:e,percentiles:s,groupby:(0,a.Z)(o).map(r.Z),metrics:(0,a.Z)(t.metrics).map(n.Z)}}}}},69862:(e,t,o)=>{o.d(t,{I:()=>a});const a=(e,t)=>{if(e.contributionMode)return{operation:"contribution",options:{orientation:e.contributionMode}}}},62124:(e,t,o)=>{o.d(t,{k:()=>a});const a=(e,t)=>({operation:"flatten"})},4098:(e,t,o)=>{o.d(t,{H:()=>l});var a=o(55786),r=o(56652),n=o(10581),i=o(5364);const l=(e,t)=>{const o=(0,a.Z)(t.metrics).map(r.Z),{x_axis:l}=e;if((l||t.is_timeseries)&&o.length)return{operation:"pivot",options:{index:[(0,n.Z)(l||i.W3)],columns:(0,a.Z)(t.columns).map(n.Z),aggregates:Object.fromEntries(o.map((e=>[e,{operator:"mean"}]))),drop_missing_columns:!1,flatten_columns:!1,reset_index:!1}}}},37701:(e,t,o)=>{o.d(t,{D:()=>n});var a=o(10581),r=o(5364);const n=(e,t)=>{const o=(0,a.Z)(e.x_axis||r.W3);if(e.forecastEnabled)return{operation:"prophet",options:{time_grain:e.time_grain_sqla,periods:parseInt(e.forecastPeriods,10),confidence_interval:parseFloat(e.forecastInterval),yearly_seasonality:e.forecastSeasonalityYearly,weekly_seasonality:e.forecastSeasonalityWeekly,daily_seasonality:e.forecastSeasonalityDaily,index:o}}}},19546:(e,t,o)=>{o.d(t,{N:()=>s});var a=o(55786),r=o(62363),n=o(56652),i=o(96709),l=o(6219);const s=(e,t)=>{const o=(0,a.Z)(t.metrics),s=(0,a.Z)(t.columns),{x_axis:c}=e;if(1===o.length&&s.length>0&&(c||t.is_timeseries)&&(!(0,i.A)(e,t)||![r.pF.Difference,r.pF.Ratio,r.pF.Percentage].includes(e.comparison_type))){const s=[];if((0,i.A)(e,t)&&e.comparison_type===r.pF.Values){const o=(0,l.O)(e,t),r=(0,a.Z)(e.time_compare);[...o.keys()].forEach((e=>{const t=r.find((t=>e.includes(t)));s.push([e,t])}))}return s.push([(0,n.Z)(o[0]),null]),{operation:"rename",options:{columns:Object.fromEntries(s),level:0,inplace:!0}}}}},99343:(e,t,o)=>{o.d(t,{X:()=>a});const a=(e,t)=>{const o="zerofill"===e.resample_method,a=o?"asfreq":e.resample_method,r=e.resample_rule;if(a&&r)return{operation:"resample",options:{method:a,rule:r,fill_value:o?0:null}}}},97490:(e,t,o)=>{o.d(t,{V:()=>s});var a=o(55786),r=o(62363),n=o(77675),i=o(96709),l=o(6219);const s=(e,t)=>{let o;if((0,i.A)(e,t)){const a=(0,l.O)(e,t);o=[...Array.from(a.values()),...Array.from(a.keys())]}else o=(0,a.Z)(t.metrics).map((e=>"string"==typeof e?e:e.label));const s=Object.fromEntries(o.map((e=>[e,e])));return e.rolling_type===r.su.Cumsum?{operation:"cum",options:{operator:"sum",columns:s}}:[r.su.Sum,r.su.Mean,r.su.Std].includes(e.rolling_type)?{operation:"rolling",options:{rolling_type:e.rolling_type,window:(0,n.Z)(e.rolling_periods,1),min_periods:(0,n.Z)(e.min_periods,0),columns:s}}:void 0}},60955:(e,t,o)=>{o.d(t,{N:()=>i});var a=o(62363),r=o(6219),n=o(96709);const i=(e,t)=>{const o=e.comparison_type,i=(0,r.O)(e,t);if((0,n.A)(e,t)&&o!==a.pF.Values)return{operation:"compare",options:{source_columns:Array.from(i.values()),compare_columns:Array.from(i.keys()),compare_type:o,drop_original_columns:!0}}}},92155:(e,t,o)=>{o.d(t,{O:()=>s});var a=o(10581),r=o(5364),n=o(55786),i=o(6219),l=o(96709);const s=(e,t)=>{const o=(0,i.O)(e,t);if((0,l.A)(e,t)){const i=Object.fromEntries([...o.values(),...o.keys()].map((e=>[e,{operator:"mean"}])));return{operation:"pivot",options:{index:[(0,a.Z)(e.x_axis||r.W3)],columns:(0,n.Z)(t.columns).map(a.Z),drop_missing_columns:!1,flatten_columns:!1,reset_index:!1,aggregates:i}}}}},14920:(e,t,o)=>{o.d(t,{K:()=>a});const a="__"},6219:(e,t,o)=>{o.d(t,{O:()=>i});var a=o(55786),r=o(56652),n=o(14920);const i=(e,t)=>{const o=(0,a.Z)(t.metrics),i=(0,a.Z)(e.time_compare),l=o.map(r.Z),s=new Map;return l.forEach((e=>{i.forEach((t=>{s.set([e,t].join(n.K),e)}))})),s}},96709:(e,t,o)=>{o.d(t,{A:()=>n});var a=o(62363),r=o(6219);const n=(e,t)=>{const o=e.comparison_type,n=(0,r.O)(e,t);return Object.values(a.pF).includes(o)&&n.size>0}},929:(e,t,o)=>{o.d(t,{a:()=>n});var a=o(93185),r=o(61988);const n=(0,a.c)(a.T.DASHBOARD_CROSS_FILTERS)?[{name:"emit_filter",config:{type:"CheckboxControl",label:(0,r.t)("Emit dashboard cross filters"),default:!1,renderTrigger:!0,description:(0,r.t)("Emit dashboard cross filters.")}}]:[]},75781:(e,t,o)=>{function a(e){return(null==e?void 0:e.columns.map((e=>[e.column_name,e.verbose_name||e.column_name])).sort(((e,t)=>e[1].toLowerCase()>t[1].toLowerCase()?1:-1)))||[]}o.d(t,{Z:()=>a})},9609:(e,t,o)=>{o.d(t,{NM:()=>r,wB:()=>n,Km:()=>i,E2:()=>l,ni:()=>s});var a=o(38575);const r=(e,t=0)=>Number(`${Math.round(Number(`${e}e+${t}`))}e-${t}`),n=(e,t)=>e.replace(/rgb/i,"rgba").replace(/\)/i,`,${t})`),i=(e,t,o,a=.05,n=1)=>o===t?n:r(Math.abs((n-a)/(o-t)*(e-t))+a,2),l=({operator:e,targetValue:t,targetValueLeft:o,targetValueRight:r,colorScheme:l},s)=>{let c,d=.05;if(void 0===e||void 0===l)return()=>{};if(a.vD.includes(e)&&(void 0===o||void 0===r))return()=>{};if(e!==a.O9.NONE&&!a.vD.includes(e)&&void 0===t)return()=>{};switch(e){case a.O9.NONE:d=0,c=(e,t)=>{const o=Math.min(...t),a=Math.max(...t);return e>=o&&e<=a&&{cutoffValue:o,extremeValue:a}};break;case a.O9.GREATER_THAN:c=(e,o)=>e>t&&{cutoffValue:t,extremeValue:Math.max(...o)};break;case a.O9.LESS_THAN:c=(e,o)=>e<t&&{cutoffValue:t,extremeValue:Math.min(...o)};break;case a.O9.GREATER_OR_EQUAL:c=(e,o)=>e>=t&&{cutoffValue:t,extremeValue:Math.max(...o)};break;case a.O9.LESS_OR_EQUAL:c=(e,o)=>e<=t&&{cutoffValue:t,extremeValue:Math.min(...o)};break;case a.O9.EQUAL:c=e=>e===t&&{cutoffValue:t,extremeValue:t};break;case a.O9.NOT_EQUAL:c=(e,o)=>{if(e===t)return!1;const a=Math.max(...o),r=Math.min(...o);return{cutoffValue:t,extremeValue:Math.abs(t-r)>Math.abs(a-t)?r:a}};break;case a.O9.BETWEEN:c=e=>e>o&&e<r&&{cutoffValue:o,extremeValue:r};break;case a.O9.BETWEEN_OR_EQUAL:c=e=>e>=o&&e<=r&&{cutoffValue:o,extremeValue:r};break;case a.O9.BETWEEN_OR_LEFT_EQUAL:c=e=>e>=o&&e<r&&{cutoffValue:o,extremeValue:r};break;case a.O9.BETWEEN_OR_RIGHT_EQUAL:c=e=>e>o&&e<=r&&{cutoffValue:o,extremeValue:r};break;default:c=()=>!1}return e=>{const t=c(e,s);if(!1===t)return;const{cutoffValue:o,extremeValue:a}=t;return n(l,i(e,o,a,d,1))}},s=(e,t)=>{var o;return null!=(o=null==e?void 0:e.reduce(((e,o)=>(void 0!==(null==o?void 0:o.column)&&((null==o?void 0:o.operator)===a.O9.NONE||void 0!==(null==o?void 0:o.operator)&&(a.vD.includes(null==o?void 0:o.operator)?void 0!==(null==o?void 0:o.targetValueLeft)&&void 0!==(null==o?void 0:o.targetValueRight):void 0!==(null==o?void 0:o.targetValue)))&&e.push({column:null==o?void 0:o.column,getColorFromValue:l(o,t.map((e=>e[o.column])))}),e)),[]))?o:[]}},77675:(e,t,o)=>{function a(e,t){const o=parseInt(String(e),10),a=void 0===t?NaN:t;return Number.isNaN(o)?a:o}o.d(t,{Z:()=>a})}}]);