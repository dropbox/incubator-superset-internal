{"version":3,"file":"34d4af5592bdcfc9eb41.chunk.js","mappings":"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","sources":["webpack://superset/./node_modules/@luma.gl/shadertools/dist/esm/modules/lights/lights.glsl.js","webpack://superset/./node_modules/@luma.gl/shadertools/dist/esm/modules/lights/lights.js","webpack://superset/./node_modules/@luma.gl/shadertools/dist/esm/modules/phong-lighting/phong-lighting.js","webpack://superset/./node_modules/@luma.gl/shadertools/dist/esm/modules/phong-lighting/phong-lighting.glsl.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/components/Legend.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Grid/Grid.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/CategoricalDeckGLContainer.jsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/factory.tsx"],"sourcesContent":["export default \"#if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\\n\\nstruct AmbientLight {\\n vec3 color;\\n};\\n\\nstruct PointLight {\\n vec3 color;\\n vec3 position;\\n vec3 attenuation;\\n};\\n\\nstruct DirectionalLight {\\n  vec3 color;\\n  vec3 direction;\\n};\\n\\nuniform AmbientLight lighting_uAmbientLight;\\nuniform PointLight lighting_uPointLight[MAX_LIGHTS];\\nuniform DirectionalLight lighting_uDirectionalLight[MAX_LIGHTS];\\nuniform int lighting_uPointLightCount;\\nuniform int lighting_uDirectionalLightCount;\\n\\nuniform bool lighting_uEnabled;\\n\\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\\n  return pointLight.attenuation.x\\n       + pointLight.attenuation.y * distance\\n       + pointLight.attenuation.z * distance * distance;\\n}\\n\\n#endif\\n\";\n//# sourceMappingURL=lights.glsl.js.map","import lightingShader from './lights.glsl';\nconst INITIAL_MODULE_OPTIONS = {\n  lightSources: {}\n};\n\nfunction convertColor({\n  color = [0, 0, 0],\n  intensity = 1.0\n} = {}) {\n  return color.map(component => component * intensity / 255.0);\n}\n\nfunction getLightSourceUniforms({\n  ambientLight,\n  pointLights = [],\n  directionalLights = []\n}) {\n  const lightSourceUniforms = {};\n\n  if (ambientLight) {\n    lightSourceUniforms['lighting_uAmbientLight.color'] = convertColor(ambientLight);\n  } else {\n    lightSourceUniforms['lighting_uAmbientLight.color'] = [0, 0, 0];\n  }\n\n  pointLights.forEach((pointLight, index) => {\n    lightSourceUniforms[\"lighting_uPointLight[\".concat(index, \"].color\")] = convertColor(pointLight);\n    lightSourceUniforms[\"lighting_uPointLight[\".concat(index, \"].position\")] = pointLight.position;\n    lightSourceUniforms[\"lighting_uPointLight[\".concat(index, \"].attenuation\")] = pointLight.attenuation || [1, 0, 0];\n  });\n  lightSourceUniforms.lighting_uPointLightCount = pointLights.length;\n  directionalLights.forEach((directionalLight, index) => {\n    lightSourceUniforms[\"lighting_uDirectionalLight[\".concat(index, \"].color\")] = convertColor(directionalLight);\n    lightSourceUniforms[\"lighting_uDirectionalLight[\".concat(index, \"].direction\")] = directionalLight.direction;\n  });\n  lightSourceUniforms.lighting_uDirectionalLightCount = directionalLights.length;\n  return lightSourceUniforms;\n}\n\nfunction getUniforms(opts = INITIAL_MODULE_OPTIONS) {\n  if ('lightSources' in opts) {\n    const {\n      ambientLight,\n      pointLights,\n      directionalLights\n    } = opts.lightSources || {};\n    const hasLights = ambientLight || pointLights && pointLights.length > 0 || directionalLights && directionalLights.length > 0;\n\n    if (!hasLights) {\n      return {\n        lighting_uEnabled: false\n      };\n    }\n\n    return Object.assign({}, getLightSourceUniforms({\n      ambientLight,\n      pointLights,\n      directionalLights\n    }), {\n      lighting_uEnabled: true\n    });\n  }\n\n  if ('lights' in opts) {\n    const lightSources = {\n      pointLights: [],\n      directionalLights: []\n    };\n\n    for (const light of opts.lights || []) {\n      switch (light.type) {\n        case 'ambient':\n          lightSources.ambientLight = light;\n          break;\n\n        case 'directional':\n          lightSources.directionalLights.push(light);\n          break;\n\n        case 'point':\n          lightSources.pointLights.push(light);\n          break;\n\n        default:\n      }\n    }\n\n    return getUniforms({\n      lightSources\n    });\n  }\n\n  return {};\n}\n\nexport const lights = {\n  name: 'lights',\n  vs: lightingShader,\n  fs: lightingShader,\n  getUniforms,\n  defines: {\n    MAX_LIGHTS: 3\n  }\n};\n//# sourceMappingURL=lights.js.map","import { lights } from '../lights/lights';\nimport lightingShader from './phong-lighting.glsl';\nconst INITIAL_MODULE_OPTIONS = {};\n\nfunction getMaterialUniforms(material) {\n  const {\n    ambient = 0.35,\n    diffuse = 0.6,\n    shininess = 32,\n    specularColor = [30, 30, 30]\n  } = material;\n  return {\n    lighting_uAmbient: ambient,\n    lighting_uDiffuse: diffuse,\n    lighting_uShininess: shininess,\n    lighting_uSpecularColor: specularColor.map(x => x / 255)\n  };\n}\n\nfunction getUniforms(opts = INITIAL_MODULE_OPTIONS) {\n  if (!('material' in opts)) {\n    return {};\n  }\n\n  const {\n    material\n  } = opts;\n\n  if (!material) {\n    return {\n      lighting_uEnabled: false\n    };\n  }\n\n  return getMaterialUniforms(material);\n}\n\nexport const gouraudLighting = {\n  name: 'gouraud-lighting',\n  dependencies: [lights],\n  vs: lightingShader,\n  defines: {\n    LIGHTING_VERTEX: 1\n  },\n  getUniforms\n};\nexport const phongLighting = {\n  name: 'phong-lighting',\n  dependencies: [lights],\n  fs: lightingShader,\n  defines: {\n    LIGHTING_FRAGMENT: 1\n  },\n  getUniforms\n};\n//# sourceMappingURL=phong-lighting.js.map","export default \"\\nuniform float lighting_uAmbient;\\nuniform float lighting_uDiffuse;\\nuniform float lighting_uShininess;\\nuniform vec3  lighting_uSpecularColor;\\n\\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 light_direction, vec3 view_direction, vec3 normal_worldspace, vec3 color) {\\n    vec3 halfway_direction = normalize(light_direction + view_direction);\\n    float lambertian = dot(light_direction, normal_worldspace);\\n    float specular = 0.0;\\n    if (lambertian > 0.0) {\\n      float specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);\\n      specular = pow(specular_angle, lighting_uShininess);\\n    }\\n    lambertian = max(lambertian, 0.0);\\n    return (lambertian * lighting_uDiffuse * surfaceColor + specular * lighting_uSpecularColor) * color;\\n}\\n\\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\\n  vec3 lightColor = surfaceColor;\\n\\n  if (lighting_uEnabled) {\\n    vec3 view_direction = normalize(cameraPosition - position_worldspace);\\n    lightColor = lighting_uAmbient * surfaceColor * lighting_uAmbientLight.color;\\n\\n    for (int i = 0; i < MAX_LIGHTS; i++) {\\n      if (i >= lighting_uPointLightCount) {\\n        break;\\n      }\\n      PointLight pointLight = lighting_uPointLight[i];\\n      vec3 light_position_worldspace = pointLight.position;\\n      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\\n      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\\n    }\\n\\n    for (int i = 0; i < MAX_LIGHTS; i++) {\\n      if (i >= lighting_uDirectionalLightCount) {\\n        break;\\n      }\\n      DirectionalLight directionalLight = lighting_uDirectionalLight[i];\\n      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\\n    }\\n  }\\n  return lightColor;\\n}\\n\\nvec3 lighting_getSpecularLightColor(vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\\n  vec3 lightColor = vec3(0, 0, 0);\\n  vec3 surfaceColor = vec3(0, 0, 0);\\n\\n  if (lighting_uEnabled) {\\n    vec3 view_direction = normalize(cameraPosition - position_worldspace);\\n\\n    for (int i = 0; i < MAX_LIGHTS; i++) {\\n      if (i >= lighting_uPointLightCount) {\\n        break;\\n      }\\n      PointLight pointLight = lighting_uPointLight[i];\\n      vec3 light_position_worldspace = pointLight.position;\\n      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\\n      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\\n    }\\n\\n    for (int i = 0; i < MAX_LIGHTS; i++) {\\n      if (i >= lighting_uDirectionalLightCount) {\\n        break;\\n      }\\n      DirectionalLight directionalLight = lighting_uDirectionalLight[i];\\n      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\\n    }\\n  }\\n  return lightColor;\\n}\\n\";\n//# sourceMappingURL=phong-lighting.glsl.js.map","/* eslint-disable react/jsx-sort-default-props */\n/* eslint-disable react/sort-prop-types */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatNumber, styled } from '@superset-ui/core';\n\nconst StyledLegend = styled.div`\n  ${({ theme }) => `\n    font-size: ${theme.typography.sizes.s}px;\n    position: absolute;\n    background: ${theme.colors.grayscale.light5};\n    box-shadow: 0 0 ${theme.gridUnit}px ${theme.colors.grayscale.light2};\n    margin: ${theme.gridUnit * 6}px;\n    padding: ${theme.gridUnit * 3}px ${theme.gridUnit * 5}px;\n    outline: none;\n    overflow-y: scroll;\n    max-height: 200px;\n\n    & ul {\n      list-style: none;\n      padding-left: 0;\n      margin: 0;\n\n      & li a {\n        color: ${theme.colors.grayscale.base};\n        text-decoration: none;\n\n        & span {\n          margin-right: ${theme.gridUnit * 3}px;\n        }\n      }\n    }\n  `}\n`;\n\nconst categoryDelimiter = ' - ';\n\nconst propTypes = {\n  categories: PropTypes.object,\n  forceCategorical: PropTypes.bool,\n  format: PropTypes.string,\n  position: PropTypes.oneOf([null, 'tl', 'tr', 'bl', 'br']),\n  showSingleCategory: PropTypes.func,\n  toggleCategory: PropTypes.func,\n};\n\nconst defaultProps = {\n  categories: {},\n  forceCategorical: false,\n  format: null,\n  position: 'tr',\n  showSingleCategory: () => {},\n  toggleCategory: () => {},\n};\n\nexport default class Legend extends React.PureComponent {\n  format(value) {\n    if (!this.props.format || this.props.forceCategorical) {\n      return value;\n    }\n\n    const numValue = parseFloat(value);\n\n    return formatNumber(this.props.format, numValue);\n  }\n\n  formatCategoryLabel(k) {\n    if (!this.props.format) {\n      return k;\n    }\n\n    if (k.includes(categoryDelimiter)) {\n      const values = k.split(categoryDelimiter);\n\n      return (\n        this.format(values[0]) + categoryDelimiter + this.format(values[1])\n      );\n    }\n\n    return this.format(k);\n  }\n\n  render() {\n    if (\n      Object.keys(this.props.categories).length === 0 ||\n      this.props.position === null\n    ) {\n      return null;\n    }\n\n    const categories = Object.entries(this.props.categories).map(([k, v]) => {\n      const style = { color: `rgba(${v.color.join(', ')})` };\n      const icon = v.enabled ? '\\u25FC' : '\\u25FB';\n\n      return (\n        <li key={k}>\n          <a\n            href=\"#\"\n            onClick={() => this.props.toggleCategory(k)}\n            onDoubleClick={() => this.props.showSingleCategory(k)}\n          >\n            <span style={style}>{icon}</span> {this.formatCategoryLabel(k)}\n          </a>\n        </li>\n      );\n    });\n\n    const vertical = this.props.position.charAt(0) === 't' ? 'top' : 'bottom';\n    const horizontal = this.props.position.charAt(1) === 'r' ? 'right' : 'left';\n    const style = {\n      position: 'absolute',\n      [vertical]: '0px',\n      [horizontal]: '10px',\n    };\n\n    return (\n      <StyledLegend style={style}>\n        <ul>{categories}</ul>\n      </StyledLegend>\n    );\n  }\n}\n\nLegend.propTypes = propTypes;\nLegend.defaultProps = defaultProps;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { GridLayer } from 'deck.gl';\nimport React from 'react';\nimport { t } from '@superset-ui/core';\n\nimport { commonLayerProps, getAggFunc } from '../common';\nimport sandboxedEval from '../../utils/sandbox';\nimport { createDeckGLComponent } from '../../factory';\nimport TooltipRow from '../../TooltipRow';\n\nfunction setTooltipContent(o) {\n  return (\n    <div className=\"deckgl-tooltip\">\n      <TooltipRow\n        label={`${t('Longitude and Latitude')}: `}\n        value={`${o.coordinate[0]}, ${o.coordinate[1]}`}\n      />\n      <TooltipRow\n        label={`${t('Height')}: `}\n        value={`${o.object.elevationValue}`}\n      />\n    </div>\n  );\n}\n\nexport function getLayer(formData, payload, onAddFilter, setTooltip) {\n  const fd = formData;\n  const c = fd.color_picker;\n  let data = payload.data.features.map(d => ({\n    ...d,\n    color: [c.r, c.g, c.b, 255 * c.a],\n  }));\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n\n  const aggFunc = getAggFunc(fd.js_agg_function, p => p.weight);\n\n  return new GridLayer({\n    id: `grid-layer-${fd.slice_id}`,\n    data,\n    pickable: true,\n    cellSize: fd.grid_size,\n    minColor: [0, 0, 0, 0],\n    extruded: fd.extruded,\n    maxColor: [c.r, c.g, c.b, 255 * c.a],\n    outline: false,\n    getElevationValue: aggFunc,\n    getColorValue: aggFunc,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent),\n  });\n}\n\nfunction getPoints(data) {\n  return data.map(d => d.position);\n}\n\nexport default createDeckGLComponent(getLayer, getPoints);\n","/* eslint-disable react/sort-prop-types */\n/* eslint-disable react/require-default-props */\n/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable camelcase */\n/* eslint-disable no-prototype-builtins */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CategoricalColorNamespace } from '@superset-ui/core';\nimport AnimatableDeckGLContainer from './AnimatableDeckGLContainer';\nimport Legend from './components/Legend';\nimport { hexToRGB } from './utils/colors';\nimport { getPlaySliderParams } from './utils/time';\nimport sandboxedEval from './utils/sandbox';\n// eslint-disable-next-line import/extensions\nimport fitViewport from './utils/fitViewport';\n\nconst { getScale } = CategoricalColorNamespace;\n\nfunction getCategories(fd, data) {\n  const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n  const fixedColor = [c.r, c.g, c.b, 255 * c.a];\n  const colorFn = getScale(fd.color_scheme);\n  const categories = {};\n  data.forEach(d => {\n    if (d.cat_color != null && !categories.hasOwnProperty(d.cat_color)) {\n      let color;\n      if (fd.dimension) {\n        color = hexToRGB(colorFn(d.cat_color, fd.sliceId), c.a * 255);\n      } else {\n        color = fixedColor;\n      }\n      categories[d.cat_color] = { color, enabled: true };\n    }\n  });\n\n  return categories;\n}\n\nconst propTypes = {\n  datasource: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  getLayer: PropTypes.func.isRequired,\n  getPoints: PropTypes.func.isRequired,\n  height: PropTypes.number.isRequired,\n  mapboxApiKey: PropTypes.string.isRequired,\n  onAddFilter: PropTypes.func,\n  payload: PropTypes.object.isRequired,\n  setControlValue: PropTypes.func.isRequired,\n  viewport: PropTypes.object.isRequired,\n  width: PropTypes.number.isRequired,\n};\n\nexport default class CategoricalDeckGLContainer extends React.PureComponent {\n  containerRef = React.createRef();\n\n  /*\n   * A Deck.gl container that handles categories.\n   *\n   * The container will have an interactive legend, populated from the\n   * categories present in the data.\n   */\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps(props);\n\n    this.getLayers = this.getLayers.bind(this);\n    this.onValuesChange = this.onValuesChange.bind(this);\n    this.toggleCategory = this.toggleCategory.bind(this);\n    this.showSingleCategory = this.showSingleCategory.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.payload.form_data !== this.state.formData) {\n      this.setState({ ...this.getStateFromProps(nextProps) });\n    }\n  }\n\n  onValuesChange(values) {\n    this.setState({\n      values: Array.isArray(values)\n        ? values\n        : [values, values + this.state.getStep(values)],\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getStateFromProps(props, state) {\n    const features = props.payload.data.features || [];\n    const timestamps = features.map(f => f.__timestamp);\n    const categories = getCategories(props.formData, features);\n\n    // the state is computed only from the payload; if it hasn't changed, do\n    // not recompute state since this would reset selections and/or the play\n    // slider position due to changes in form controls\n    if (state && props.payload.form_data === state.formData) {\n      return { ...state, categories };\n    }\n\n    // the granularity has to be read from the payload form_data, not the\n    // props formData which comes from the instantaneous controls state\n    const granularity =\n      props.payload.form_data.time_grain_sqla ||\n      props.payload.form_data.granularity ||\n      'P1D';\n\n    const { start, end, getStep, values, disabled } = getPlaySliderParams(\n      timestamps,\n      granularity,\n    );\n\n    const { width, height, formData } = props;\n    let { viewport } = props;\n    if (formData.autozoom) {\n      viewport = fitViewport(viewport, {\n        width,\n        height,\n        points: props.getPoints(features),\n      });\n    }\n    if (viewport.zoom < 0) {\n      viewport.zoom = 0;\n    }\n\n    return {\n      start,\n      end,\n      getStep,\n      values,\n      disabled,\n      viewport,\n      selected: [],\n      lastClick: 0,\n      formData: props.payload.form_data,\n      categories,\n    };\n  }\n\n  getLayers(values) {\n    const { getLayer, payload, formData: fd, onAddFilter } = this.props;\n    let features = payload.data.features ? [...payload.data.features] : [];\n\n    // Add colors from categories or fixed color\n    features = this.addColor(features, fd);\n\n    // Apply user defined data mutator if defined\n    if (fd.js_data_mutator) {\n      const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n      features = jsFnMutator(features);\n    }\n\n    // Filter by time\n    if (values[0] === values[1] || values[1] === this.end) {\n      features = features.filter(\n        d => d.__timestamp >= values[0] && d.__timestamp <= values[1],\n      );\n    } else {\n      features = features.filter(\n        d => d.__timestamp >= values[0] && d.__timestamp < values[1],\n      );\n    }\n\n    // Show only categories selected in the legend\n    const cats = this.state.categories;\n    if (fd.dimension) {\n      features = features.filter(\n        d => cats[d.cat_color] && cats[d.cat_color].enabled,\n      );\n    }\n\n    const filteredPayload = {\n      ...payload,\n      data: { ...payload.data, features },\n    };\n\n    return [\n      getLayer(\n        fd,\n        filteredPayload,\n        onAddFilter,\n        this.setTooltip,\n        this.props.datasource,\n      ),\n    ];\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  addColor(data, fd) {\n    const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n    const colorFn = getScale(fd.color_scheme);\n\n    return data.map(d => {\n      let color;\n      if (fd.dimension) {\n        color = hexToRGB(colorFn(d.cat_color, fd.sliceId), c.a * 255);\n\n        return { ...d, color };\n      }\n\n      return d;\n    });\n  }\n\n  toggleCategory(category) {\n    const categoryState = this.state.categories[category];\n    const categories = {\n      ...this.state.categories,\n      [category]: {\n        ...categoryState,\n        enabled: !categoryState.enabled,\n      },\n    };\n\n    // if all categories are disabled, enable all -- similar to nvd3\n    if (Object.values(categories).every(v => !v.enabled)) {\n      /* eslint-disable no-param-reassign */\n      Object.values(categories).forEach(v => {\n        v.enabled = true;\n      });\n    }\n    this.setState({ categories });\n  }\n\n  showSingleCategory(category) {\n    const categories = { ...this.state.categories };\n    /* eslint-disable no-param-reassign */\n    Object.values(categories).forEach(v => {\n      v.enabled = false;\n    });\n    categories[category].enabled = true;\n    this.setState({ categories });\n  }\n\n  setTooltip = tooltip => {\n    const { current } = this.containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  };\n\n  render() {\n    return (\n      <div style={{ position: 'relative' }}>\n        <AnimatableDeckGLContainer\n          ref={this.containerRef}\n          getLayers={this.getLayers}\n          start={this.state.start}\n          end={this.state.end}\n          getStep={this.state.getStep}\n          values={this.state.values}\n          disabled={this.state.disabled}\n          viewport={this.state.viewport}\n          mapboxApiAccessToken={this.props.mapboxApiKey}\n          mapStyle={this.props.formData.mapbox_style}\n          setControlValue={this.props.setControlValue}\n          width={this.props.width}\n          height={this.props.height}\n        >\n          <Legend\n            forceCategorical\n            categories={this.state.categories}\n            format={this.props.formData.legend_format}\n            position={this.props.formData.legend_position}\n            showSingleCategory={this.showSingleCategory}\n            toggleCategory={this.toggleCategory}\n          />\n        </AnimatableDeckGLContainer>\n      </div>\n    );\n  }\n}\n\nCategoricalDeckGLContainer.propTypes = propTypes;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { isEqual } from 'lodash';\nimport { Datasource, QueryFormData, JsonObject } from '@superset-ui/core';\n\nimport {\n  DeckGLContainerStyledWrapper,\n  DeckGLContainer,\n} from './DeckGLContainer';\nimport CategoricalDeckGLContainer from './CategoricalDeckGLContainer';\nimport fitViewport, { Viewport } from './utils/fitViewport';\nimport { Point } from './types';\n\ntype deckGLComponentProps = {\n  datasource: Datasource;\n  formData: QueryFormData;\n  height: number;\n  onAddFilter: () => void;\n  payload: JsonObject;\n  setControlValue: () => void;\n  viewport: Viewport;\n  width: number;\n};\ninterface getLayerType<T> {\n  (\n    formData: QueryFormData,\n    payload: JsonObject,\n    onAddFilter: () => void,\n    setTooltip: (tooltip: string) => void,\n  ): T;\n}\ninterface getPointsType<T> {\n  (point: number[]): T;\n}\ntype deckGLComponentState = {\n  viewport: Viewport;\n  layer: unknown;\n};\n\nexport function createDeckGLComponent(\n  getLayer: getLayerType<unknown>,\n  getPoints: getPointsType<Point[]>,\n): React.ComponentClass<deckGLComponentProps> {\n  // Higher order component\n  class Component extends React.PureComponent<\n    deckGLComponentProps,\n    deckGLComponentState\n  > {\n    containerRef: React.RefObject<DeckGLContainer> = React.createRef();\n\n    constructor(props: deckGLComponentProps) {\n      super(props);\n\n      const { width, height, formData } = props;\n      let { viewport } = props;\n      if (formData.autozoom) {\n        viewport = fitViewport(viewport, {\n          width,\n          height,\n          points: getPoints(props.payload.data.features),\n        }) as Viewport;\n      }\n\n      this.state = {\n        viewport,\n        layer: this.computeLayer(props),\n      };\n      this.onViewportChange = this.onViewportChange.bind(this);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps: deckGLComponentProps) {\n      // Only recompute the layer if anything BUT the viewport has changed\n      const nextFdNoVP = { ...nextProps.formData, viewport: null };\n      const currFdNoVP = { ...this.props.formData, viewport: null };\n      if (\n        !isEqual(nextFdNoVP, currFdNoVP) ||\n        nextProps.payload !== this.props.payload\n      ) {\n        this.setState({ layer: this.computeLayer(nextProps) });\n      }\n    }\n\n    onViewportChange(viewport: Viewport) {\n      this.setState({ viewport });\n    }\n\n    computeLayer(props: deckGLComponentProps) {\n      const { formData, payload, onAddFilter } = props;\n\n      return getLayer(formData, payload, onAddFilter, this.setTooltip);\n    }\n\n    setTooltip = (tooltip: string) => {\n      const { current } = this.containerRef;\n      if (current) {\n        current?.setTooltip(tooltip);\n      }\n    };\n\n    render() {\n      const { formData, payload, setControlValue, height, width } = this.props;\n      const { layer, viewport } = this.state;\n\n      return (\n        <DeckGLContainerStyledWrapper\n          ref={this.containerRef}\n          mapboxApiAccessToken={payload.data.mapboxApiKey}\n          viewport={viewport}\n          layers={[layer]}\n          mapStyle={formData.mapbox_style}\n          setControlValue={setControlValue}\n          width={width}\n          height={height}\n          onViewportChange={this.onViewportChange}\n        />\n      );\n    }\n  }\n  return Component;\n}\n\nexport function createCategoricalDeckGLComponent(\n  getLayer: getLayerType<unknown>,\n  getPoints: getPointsType<Point[]>,\n) {\n  return function Component(props: deckGLComponentProps) {\n    const {\n      datasource,\n      formData,\n      height,\n      payload,\n      setControlValue,\n      viewport,\n      width,\n    } = props;\n\n    return (\n      <CategoricalDeckGLContainer\n        datasource={datasource}\n        formData={formData}\n        mapboxApiKey={payload.data.mapboxApiKey}\n        setControlValue={setControlValue}\n        viewport={viewport}\n        getLayer={getLayer}\n        payload={payload}\n        getPoints={getPoints}\n        width={width}\n        height={height}\n      />\n    );\n  };\n}\n"],"names":["INITIAL_MODULE_OPTIONS","lightSources","convertColor","color","intensity","map","component","gouraudLighting","name","dependencies","vs","fs","getUniforms","opts","ambientLight","pointLights","directionalLights","length","Object","assign","lightSourceUniforms","forEach","pointLight","index","concat","position","attenuation","lighting_uPointLightCount","directionalLight","direction","lighting_uDirectionalLightCount","getLightSourceUniforms","lighting_uEnabled","light","lights","type","push","defines","MAX_LIGHTS","LIGHTING_VERTEX","material","ambient","diffuse","shininess","specularColor","lighting_uAmbient","lighting_uDiffuse","lighting_uShininess","lighting_uSpecularColor","x","getMaterialUniforms","StyledLegend","styled","theme","typography","sizes","s","colors","grayscale","light5","gridUnit","light2","base","categoryDelimiter","propTypes","categories","PropTypes","forceCategorical","format","showSingleCategory","toggleCategory","Legend","React","value","this","props","numValue","parseFloat","formatNumber","formatCategoryLabel","k","includes","values","split","render","keys","entries","v","style","join","icon","enabled","key","href","onClick","onDoubleClick","charAt","defaultProps","setTooltipContent","o","className","label","t","coordinate","object","elevationValue","getLayer","formData","payload","onAddFilter","setTooltip","fd","c","color_picker","data","features","d","r","g","b","a","js_data_mutator","sandboxedEval","jsFnMutator","aggFunc","getAggFunc","js_agg_function","p","weight","GridLayer","id","slice_id","pickable","cellSize","grid_size","minColor","extruded","maxColor","outline","getElevationValue","getColorValue","commonLayerProps","createDeckGLComponent","getScale","CategoricalColorNamespace","datasource","getPoints","height","mapboxApiKey","setControlValue","viewport","width","CategoricalDeckGLContainer","constructor","super","containerRef","tooltip","current","state","getStateFromProps","getLayers","bind","onValuesChange","UNSAFE_componentWillReceiveProps","nextProps","form_data","setState","Array","isArray","getStep","timestamps","f","__timestamp","fixedColor","colorFn","color_scheme","cat_color","hasOwnProperty","dimension","hexToRGB","sliceId","getCategories","granularity","time_grain_sqla","start","end","disabled","getPlaySliderParams","autozoom","fitViewport","points","zoom","selected","lastClick","addColor","filter","cats","category","categoryState","every","AnimatableDeckGLContainer","ref","mapboxApiAccessToken","mapStyle","mapbox_style","legend_format","legend_position","Component","layer","computeLayer","onViewportChange","nextFdNoVP","currFdNoVP","DeckGLContainer","layers","createCategoricalDeckGLComponent"],"sourceRoot":""}