{"version":3,"file":"305d83b6024958bf988f.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/ImportModal/styles.ts","webpack://superset/./src/components/ImportModal/ErrorAlert.tsx","webpack://superset/./src/components/ImportModal/index.tsx","webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/views/CRUD/data/savedquery/SavedQueryPreviewModal.tsx","webpack://superset/./src/views/CRUD/data/savedquery/SavedQueryList.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { css, SupersetTheme } from '@superset-ui/core';\n\nexport const antdWarningAlertStyles = (theme: SupersetTheme) => css`\n  border: 1px solid ${theme.colors.warning.light1};\n  padding: ${theme.gridUnit * 4}px;\n  margin: ${theme.gridUnit * 4}px 0;\n  color: ${theme.colors.warning.dark2};\n\n  .ant-alert-message {\n    margin: 0;\n  }\n\n  .ant-alert-description {\n    font-size: ${theme.typography.sizes.s + 1}px;\n    line-height: ${theme.gridUnit * 4}px;\n\n    .ant-alert-icon {\n      margin-right: ${theme.gridUnit * 2.5}px;\n      font-size: ${theme.typography.sizes.l + 1}px;\n      position: relative;\n      top: ${theme.gridUnit / 4}px;\n    }\n  }\n`;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FunctionComponent } from 'react';\nimport { t, SupersetTheme } from '@superset-ui/core';\n\nimport { getDatabaseDocumentationLinks } from 'src/views/CRUD/hooks';\nimport Alert from 'src/components/Alert';\nimport { antdWarningAlertStyles } from './styles';\n\nconst supersetTextDocs = getDatabaseDocumentationLinks();\nexport const DOCUMENTATION_LINK = supersetTextDocs\n  ? supersetTextDocs.support\n  : 'https://superset.apache.org/docs/databases/installing-database-drivers';\n\nexport interface IProps {\n  errorMessage: string;\n  showDbInstallInstructions: boolean;\n}\n\nconst ErrorAlert: FunctionComponent<IProps> = ({\n  errorMessage,\n  showDbInstallInstructions,\n}) => (\n  <Alert\n    closable={false}\n    css={(theme: SupersetTheme) => antdWarningAlertStyles(theme)}\n    type=\"error\"\n    showIcon\n    message={errorMessage}\n    description={\n      showDbInstallInstructions ? (\n        <>\n          <br />\n          {t(\n            'Database driver for importing maybe not installed. Visit the Superset documentation page for installation instructions:',\n          )}\n          <a\n            href={DOCUMENTATION_LINK}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"additional-fields-alert-description\"\n          >\n            {t('here')}\n          </a>\n          .\n        </>\n      ) : (\n        ''\n      )\n    }\n  />\n);\n\nexport default ErrorAlert;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useEffect, useState } from 'react';\nimport { UploadChangeParam, UploadFile } from 'antd/lib/upload/interface';\nimport { styled, t } from '@superset-ui/core';\n\nimport Button from 'src/components/Button';\nimport Modal from 'src/components/Modal';\nimport { Upload } from 'src/components';\nimport { useImportResource } from 'src/views/CRUD/hooks';\nimport { ImportResourceName } from 'src/views/CRUD/types';\nimport ErrorAlert from './ErrorAlert';\n\nconst HelperMessage = styled.div`\n  display: block;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n`;\n\nconst StyledInputContainer = styled.div`\n  padding-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n\n  & > div {\n    margin: ${({ theme }) => theme.gridUnit}px 0;\n  }\n\n  &.extra-container {\n    padding-top: 8px;\n  }\n\n  .confirm-overwrite {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .input-container {\n    display: flex;\n    align-items: center;\n\n    label {\n      display: flex;\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    i {\n      margin: 0 ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  textarea {\n    height: 160px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n\n  textarea,\n  input[type='text'],\n  input[type='number'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border-style: none;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n\n    &[name='name'] {\n      flex: 0 1 auto;\n      width: 40%;\n    }\n\n    &[name='sqlalchemy_uri'] {\n      margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    }\n  }\n`;\n\nexport interface ImportModelsModalProps {\n  resourceName: ImportResourceName;\n  resourceLabel: string;\n  passwordsNeededMessage: string;\n  confirmOverwriteMessage: string;\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  onModelImport: () => void;\n  show: boolean;\n  onHide: () => void;\n  passwordFields?: string[];\n  setPasswordFields?: (passwordFields: string[]) => void;\n}\n\nconst ImportModelsModal: FunctionComponent<ImportModelsModalProps> = ({\n  resourceName,\n  resourceLabel,\n  passwordsNeededMessage,\n  confirmOverwriteMessage,\n  onModelImport,\n  show,\n  onHide,\n  passwordFields = [],\n  setPasswordFields = () => {},\n}) => {\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const [passwords, setPasswords] = useState<Record<string, string>>({});\n  const [needsOverwriteConfirm, setNeedsOverwriteConfirm] =\n    useState<boolean>(false);\n  const [confirmedOverwrite, setConfirmedOverwrite] = useState<boolean>(false);\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\n  const [importingModel, setImportingModel] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>();\n\n  const clearModal = () => {\n    setFileList([]);\n    setPasswordFields([]);\n    setPasswords({});\n    setNeedsOverwriteConfirm(false);\n    setConfirmedOverwrite(false);\n    setImportingModel(false);\n    setErrorMessage('');\n  };\n\n  const handleErrorMsg = (msg: string) => {\n    setErrorMessage(msg);\n  };\n\n  const {\n    state: { alreadyExists, passwordsNeeded },\n    importResource,\n  } = useImportResource(resourceName, resourceLabel, handleErrorMsg);\n\n  useEffect(() => {\n    setPasswordFields(passwordsNeeded);\n    if (passwordsNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [passwordsNeeded, setPasswordFields]);\n\n  useEffect(() => {\n    setNeedsOverwriteConfirm(alreadyExists.length > 0);\n    if (alreadyExists.length > 0) {\n      setImportingModel(false);\n    }\n  }, [alreadyExists, setNeedsOverwriteConfirm]);\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    onHide();\n    clearModal();\n  };\n\n  const onUpload = () => {\n    if (!(fileList[0]?.originFileObj instanceof File)) {\n      return;\n    }\n\n    setImportingModel(true);\n    importResource(\n      fileList[0].originFileObj,\n      passwords,\n      confirmedOverwrite,\n    ).then(result => {\n      if (result) {\n        clearModal();\n        onModelImport();\n      }\n    });\n  };\n\n  const changeFile = (info: UploadChangeParam) => {\n    setFileList([\n      {\n        ...info.file,\n        status: 'done',\n      },\n    ]);\n  };\n\n  const removeFile = (removedFile: UploadFile) => {\n    setFileList(fileList.filter(file => file.uid !== removedFile.uid));\n    return false;\n  };\n\n  const confirmOverwrite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const targetValue = (event.currentTarget?.value as string) ?? '';\n    setConfirmedOverwrite(targetValue.toUpperCase() === t('OVERWRITE'));\n  };\n\n  const renderPasswordFields = () => {\n    if (passwordFields.length === 0) {\n      return null;\n    }\n\n    return (\n      <>\n        <h5>Database passwords</h5>\n        <HelperMessage>{passwordsNeededMessage}</HelperMessage>\n        {passwordFields.map(fileName => (\n          <StyledInputContainer key={`password-for-${fileName}`}>\n            <div className=\"control-label\">\n              {fileName}\n              <span className=\"required\">*</span>\n            </div>\n            <input\n              name={`password-${fileName}`}\n              autoComplete={`password-${fileName}`}\n              type=\"password\"\n              value={passwords[fileName]}\n              onChange={event =>\n                setPasswords({ ...passwords, [fileName]: event.target.value })\n              }\n            />\n          </StyledInputContainer>\n        ))}\n      </>\n    );\n  };\n\n  const renderOverwriteConfirmation = () => {\n    if (!needsOverwriteConfirm) {\n      return null;\n    }\n\n    return (\n      <>\n        <StyledInputContainer>\n          <div className=\"confirm-overwrite\">{confirmOverwriteMessage}</div>\n          <div className=\"control-label\">\n            {t('Type \"%s\" to confirm', t('OVERWRITE'))}\n          </div>\n          <input\n            data-test=\"overwrite-modal-input\"\n            id=\"overwrite\"\n            type=\"text\"\n            onChange={confirmOverwrite}\n          />\n        </StyledInputContainer>\n      </>\n    );\n  };\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      name=\"model\"\n      className=\"import-model-modal\"\n      disablePrimaryButton={\n        fileList.length === 0 ||\n        (needsOverwriteConfirm && !confirmedOverwrite) ||\n        importingModel\n      }\n      onHandledPrimaryAction={onUpload}\n      onHide={hide}\n      primaryButtonName={needsOverwriteConfirm ? t('Overwrite') : t('Import')}\n      primaryButtonType={needsOverwriteConfirm ? 'danger' : 'primary'}\n      width=\"750px\"\n      show={show}\n      title={<h4>{t('Import %s', resourceLabel)}</h4>}\n    >\n      <StyledInputContainer>\n        <Upload\n          name=\"modelFile\"\n          id=\"modelFile\"\n          data-test=\"model-file-input\"\n          accept=\".yaml,.json,.yml,.zip\"\n          fileList={fileList}\n          onChange={changeFile}\n          onRemove={removeFile}\n          // upload is handled by hook\n          customRequest={() => {}}\n          disabled={importingModel}\n        >\n          <Button loading={importingModel}>Select file</Button>\n        </Upload>\n      </StyledInputContainer>\n      {errorMessage && (\n        <ErrorAlert\n          errorMessage={errorMessage}\n          showDbInstallInstructions={passwordFields.length > 0}\n        />\n      )}\n      {renderPasswordFields()}\n      {renderOverwriteConfirmation()}\n    </Modal>\n  );\n};\n\nexport default ImportModelsModal;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | React.ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport SyntaxHighlighterCopy from 'src/views/CRUD/data/components/SyntaxHighlighterCopy';\nimport withToasts, {\n  ToastProps,\n} from 'src/components/MessageToasts/withToasts';\nimport { useQueryPreviewState } from 'src/views/CRUD/data/hooks';\n\nconst QueryTitle = styled.div`\n  color: ${({ theme }) => theme.colors.secondary.light2};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-bottom: 0;\n  text-transform: uppercase;\n`;\n\nconst QueryLabel = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n  font-size: ${({ theme }) => theme.typography.sizes.m}px;\n  padding: 4px 0 16px 0;\n`;\n\nconst StyledModal = styled(Modal)`\n  .ant-modal-content {\n  }\n\n  .ant-modal-body {\n    padding: 24px;\n  }\n\n  pre {\n    font-size: ${({ theme }) => theme.typography.sizes.xs}px;\n    font-weight: ${({ theme }) => theme.typography.weights.normal};\n    line-height: ${({ theme }) => theme.typography.sizes.l}px;\n    height: 375px;\n    border: none;\n  }\n`;\n\ntype SavedQueryObject = {\n  id: number;\n  label: string;\n  sql: string;\n};\n\ninterface SavedQueryPreviewModalProps extends ToastProps {\n  fetchData: (id: number) => {};\n  onHide: () => void;\n  openInSqlLab: (id: number) => {};\n  queries: Array<SavedQueryObject>;\n  savedQuery: SavedQueryObject;\n  show: boolean;\n}\n\nconst SavedQueryPreviewModal: FunctionComponent<SavedQueryPreviewModalProps> =\n  ({\n    fetchData,\n    onHide,\n    openInSqlLab,\n    queries,\n    savedQuery,\n    show,\n    addDangerToast,\n    addSuccessToast,\n  }) => {\n    const { handleKeyPress, handleDataChange, disablePrevious, disableNext } =\n      useQueryPreviewState<SavedQueryObject>({\n        queries,\n        currentQueryId: savedQuery.id,\n        fetchData,\n      });\n\n    return (\n      <div role=\"none\" onKeyUp={handleKeyPress}>\n        <StyledModal\n          onHide={onHide}\n          show={show}\n          title={t('Query preview')}\n          footer={[\n            <Button\n              data-test=\"previous-saved-query\"\n              key=\"previous-saved-query\"\n              disabled={disablePrevious}\n              onClick={() => handleDataChange(true)}\n            >\n              {t('Previous')}\n            </Button>,\n            <Button\n              data-test=\"next-saved-query\"\n              key=\"next-saved-query\"\n              disabled={disableNext}\n              onClick={() => handleDataChange(false)}\n            >\n              {t('Next')}\n            </Button>,\n            <Button\n              data-test=\"open-in-sql-lab\"\n              key=\"open-in-sql-lab\"\n              buttonStyle=\"primary\"\n              onClick={() => openInSqlLab(savedQuery.id)}\n            >\n              {t('Open in SQL Lab')}\n            </Button>,\n          ]}\n        >\n          <QueryTitle>{t('Query name')}</QueryTitle>\n          <QueryLabel>{savedQuery.label}</QueryLabel>\n          <SyntaxHighlighterCopy\n            language=\"sql\"\n            addDangerToast={addDangerToast}\n            addSuccessToast={addSuccessToast}\n          >\n            {savedQuery.sql || ''}\n          </SyntaxHighlighterCopy>\n        </StyledModal>\n      </div>\n    );\n  };\n\nexport default withToasts(SavedQueryPreviewModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { SupersetClient, t, styled } from '@superset-ui/core';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport rison from 'rison';\nimport moment from 'moment';\nimport {\n  createFetchRelated,\n  createFetchDistinct,\n  createErrorHandler,\n} from 'src/views/CRUD/utils';\nimport Popover from 'src/components/Popover';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport handleResourceExport from 'src/utils/export';\nimport SubMenu, {\n  SubMenuProps,\n  ButtonProps,\n} from 'src/views/components/SubMenu';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport Loading from 'src/components/Loading';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { commonMenuData } from 'src/views/CRUD/data/common';\nimport { SavedQueryObject } from 'src/views/CRUD/types';\nimport copyTextToClipboard from 'src/utils/copy';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport ImportModelsModal from 'src/components/ImportModal/index';\nimport Icons from 'src/components/Icons';\nimport SavedQueryPreviewModal from './SavedQueryPreviewModal';\n\nconst PAGE_SIZE = 25;\nconst PASSWORDS_NEEDED_MESSAGE = t(\n  'The passwords for the databases below are needed in order to ' +\n    'import them together with the saved queries. Please note that the ' +\n    '\"Secure Extra\" and \"Certificate\" sections of ' +\n    'the database configuration are not present in export files, and ' +\n    'should be added manually after the import if they are needed.',\n);\nconst CONFIRM_OVERWRITE_MESSAGE = t(\n  'You are importing one or more saved queries that already exist. ' +\n    'Overwriting might cause you to lose some of your work. Are you ' +\n    'sure you want to overwrite?',\n);\n\ninterface SavedQueryListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n  };\n}\n\nconst StyledTableLabel = styled.div`\n  .count {\n    margin-left: 5px;\n    color: ${({ theme }) => theme.colors.primary.base};\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\n\nconst StyledPopoverItem = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n`;\n\nfunction SavedQueryList({\n  addDangerToast,\n  addSuccessToast,\n}: SavedQueryListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: queryCount,\n      resourceCollection: queries,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    toggleBulkSelect,\n    refreshData,\n  } = useListViewResource<SavedQueryObject>(\n    'saved_query',\n    t('Saved queries'),\n    addDangerToast,\n  );\n  const [queryCurrentlyDeleting, setQueryCurrentlyDeleting] =\n    useState<SavedQueryObject | null>(null);\n  const [savedQueryCurrentlyPreviewing, setSavedQueryCurrentlyPreviewing] =\n    useState<SavedQueryObject | null>(null);\n  const [importingSavedQuery, showImportModal] = useState<boolean>(false);\n  const [passwordFields, setPasswordFields] = useState<string[]>([]);\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n\n  const openSavedQueryImportModal = () => {\n    showImportModal(true);\n  };\n\n  const closeSavedQueryImportModal = () => {\n    showImportModal(false);\n  };\n\n  const handleSavedQueryImport = () => {\n    showImportModal(false);\n    refreshData();\n    addSuccessToast(t('Query imported'));\n  };\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport =\n    hasPerm('can_export') && isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT);\n\n  const openNewQuery = () => {\n    window.open(`${window.location.origin}/superset/sqllab?new=true`);\n  };\n\n  const handleSavedQueryPreview = useCallback(\n    (id: number) => {\n      SupersetClient.get({\n        endpoint: `/api/v1/saved_query/${id}`,\n      }).then(\n        ({ json = {} }) => {\n          setSavedQueryCurrentlyPreviewing({ ...json.result });\n        },\n        createErrorHandler(errMsg =>\n          addDangerToast(\n            t('There was an issue previewing the selected query %s', errMsg),\n          ),\n        ),\n      );\n    },\n    [addDangerToast],\n  );\n\n  const menuData: SubMenuProps = {\n    activeChild: 'Saved queries',\n    ...commonMenuData,\n  };\n\n  const subMenuButtons: Array<ButtonProps> = [];\n\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  subMenuButtons.push({\n    name: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Query')}\n      </>\n    ),\n    onClick: openNewQuery,\n    buttonStyle: 'primary',\n  });\n\n  if (canCreate && isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT)) {\n    subMenuButtons.push({\n      name: (\n        <Tooltip\n          id=\"import-tooltip\"\n          title={t('Import queries')}\n          placement=\"bottomRight\"\n          data-test=\"import-tooltip-test\"\n        >\n          <Icons.Import data-test=\"import-icon\" />\n        </Tooltip>\n      ),\n      buttonStyle: 'link',\n      onClick: openSavedQueryImportModal,\n      'data-test': 'import-button',\n    });\n  }\n\n  menuData.buttons = subMenuButtons;\n\n  // Action methods\n  const openInSqlLab = (id: number) => {\n    window.open(`${window.location.origin}/superset/sqllab?savedQueryId=${id}`);\n  };\n\n  const copyQueryLink = useCallback(\n    (id: number) => {\n      copyTextToClipboard(() =>\n        Promise.resolve(\n          `${window.location.origin}/superset/sqllab?savedQueryId=${id}`,\n        ),\n      )\n        .then(() => {\n          addSuccessToast(t('Link Copied!'));\n        })\n        .catch(() => {\n          addDangerToast(t('Sorry, your browser does not support copying.'));\n        });\n    },\n    [addDangerToast, addSuccessToast],\n  );\n\n  const handleQueryDelete = ({ id, label }: SavedQueryObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/saved_query/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setQueryCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', label));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', label, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkSavedQueryExport = (\n    savedQueriesToExport: SavedQueryObject[],\n  ) => {\n    const ids = savedQueriesToExport.map(({ id }) => id);\n    handleResourceExport('saved_query', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n\n  const handleBulkQueryDelete = (queriesToDelete: SavedQueryObject[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/saved_query/?q=${rison.encode(\n        queriesToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected queries: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'label',\n        Header: t('Name'),\n      },\n      {\n        accessor: 'database.database_name',\n        Header: t('Database'),\n        size: 'xl',\n      },\n      {\n        accessor: 'database',\n        hidden: true,\n        disableSortBy: true,\n      },\n      {\n        accessor: 'schema',\n        Header: t('Schema'),\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { sql_tables: tables = [] },\n          },\n        }: any) => {\n          const names = tables.map((table: any) => table.table);\n          const main = names?.shift() || '';\n\n          if (names.length) {\n            return (\n              <StyledTableLabel>\n                <span>{main}</span>\n                <Popover\n                  placement=\"right\"\n                  title={t('TABLES')}\n                  trigger=\"click\"\n                  content={\n                    <>\n                      {names.map((name: string) => (\n                        <StyledPopoverItem key={name}>{name}</StyledPopoverItem>\n                      ))}\n                    </>\n                  }\n                >\n                  <span className=\"count\">(+{names.length})</span>\n                </Popover>\n              </StyledTableLabel>\n            );\n          }\n\n          return main;\n        },\n        accessor: 'sql_tables',\n        Header: t('Tables'),\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_on: createdOn },\n          },\n        }: any) => {\n          const date = new Date(createdOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).fromNow();\n        },\n        Header: t('Created on'),\n        accessor: 'created_on',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { changed_on_delta_humanized: changedOn },\n          },\n        }: any) => changedOn,\n        Header: t('Modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handlePreview = () => {\n            handleSavedQueryPreview(original.id);\n          };\n          const handleEdit = () => openInSqlLab(original.id);\n          const handleCopy = () => copyQueryLink(original.id);\n          const handleExport = () => handleBulkSavedQueryExport([original]);\n          const handleDelete = () => setQueryCurrentlyDeleting(original);\n\n          const actions = [\n            {\n              label: 'preview-action',\n              tooltip: t('Query preview'),\n              placement: 'bottom',\n              icon: 'Binoculars',\n              onClick: handlePreview,\n            },\n            canEdit && {\n              label: 'edit-action',\n              tooltip: t('Edit query'),\n              placement: 'bottom',\n              icon: 'Edit',\n              onClick: handleEdit,\n            },\n            {\n              label: 'copy-action',\n              tooltip: t('Copy query URL'),\n              placement: 'bottom',\n              icon: 'Copy',\n              onClick: handleCopy,\n            },\n            canExport && {\n              label: 'export-action',\n              tooltip: t('Export query'),\n              placement: 'bottom',\n              icon: 'Share',\n              onClick: handleExport,\n            },\n            canDelete && {\n              label: 'delete-action',\n              tooltip: t('Delete query'),\n              placement: 'bottom',\n              icon: 'Trash',\n              onClick: handleDelete,\n            },\n          ].filter(item => !!item);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n      },\n    ],\n    [canDelete, canEdit, canExport, copyQueryLink, handleSavedQueryPreview],\n  );\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Database'),\n        id: 'database',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'saved_query',\n          'database',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t(\n                'An error occurred while fetching dataset datasource values: %s',\n                errMsg,\n              ),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Schema'),\n        id: 'schema',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchDistinct(\n          'saved_query',\n          'schema',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching schema values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Search'),\n        id: 'label',\n        input: 'search',\n        operator: FilterOperator.allText,\n      },\n    ],\n    [addDangerToast],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      {queryCurrentlyDeleting && (\n        <DeleteModal\n          description={t(\n            'This action will permanently delete the saved query.',\n          )}\n          onConfirm={() => {\n            if (queryCurrentlyDeleting) {\n              handleQueryDelete(queryCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setQueryCurrentlyDeleting(null)}\n          open\n          title={t('Delete Query?')}\n        />\n      )}\n      {savedQueryCurrentlyPreviewing && (\n        <SavedQueryPreviewModal\n          fetchData={handleSavedQueryPreview}\n          onHide={() => setSavedQueryCurrentlyPreviewing(null)}\n          savedQuery={savedQueryCurrentlyPreviewing}\n          queries={queries}\n          openInSqlLab={openInSqlLab}\n          show\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected queries?')}\n        onConfirm={handleBulkQueryDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [];\n          if (canDelete) {\n            bulkActions.push({\n              key: 'delete',\n              name: t('Delete'),\n              onSelect: confirmDelete,\n              type: 'danger',\n            });\n          }\n          if (canExport) {\n            bulkActions.push({\n              key: 'export',\n              name: t('Export'),\n              type: 'primary',\n              onSelect: handleBulkSavedQueryExport,\n            });\n          }\n          return (\n            <ListView<SavedQueryObject>\n              className=\"saved_query-list-view\"\n              columns={columns}\n              count={queryCount}\n              data={queries}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              highlightRowId={savedQueryCurrentlyPreviewing?.id}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n\n      <ImportModelsModal\n        resourceName=\"saved_query\"\n        resourceLabel={t('queries')}\n        passwordsNeededMessage={PASSWORDS_NEEDED_MESSAGE}\n        confirmOverwriteMessage={CONFIRM_OVERWRITE_MESSAGE}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onModelImport={handleSavedQueryImport}\n        show={importingSavedQuery}\n        onHide={closeSavedQueryImportModal}\n        passwordFields={passwordFields}\n        setPasswordFields={setPasswordFields}\n      />\n      {preparingExport && <Loading />}\n    </>\n  );\n}\n\nexport default withToasts(SavedQueryList);\n"],"names":["supersetTextDocs","DOCUMENTATION_LINK","support","errorMessage","showDbInstallInstructions","Alert","closable","css","theme","colors","warning","light1","gridUnit","dark2","typography","sizes","s","l","antdWarningAlertStyles","type","showIcon","message","description","t","href","target","rel","className","HelperMessage","style","grayscale","base","StyledInputContainer","light2","resourceName","resourceLabel","passwordsNeededMessage","confirmOverwriteMessage","onModelImport","show","onHide","passwordFields","setPasswordFields","isHidden","setIsHidden","useState","passwords","setPasswords","needsOverwriteConfirm","setNeedsOverwriteConfirm","confirmedOverwrite","setConfirmedOverwrite","fileList","setFileList","importingModel","setImportingModel","setErrorMessage","clearModal","state","alreadyExists","passwordsNeeded","importResource","msg","useEffect","length","Modal","name","disablePrimaryButton","onHandledPrimaryAction","originFileObj","File","then","result","primaryButtonName","primaryButtonType","width","title","id","accept","onChange","info","file","status","onRemove","removedFile","filter","uid","customRequest","disabled","Button","loading","map","fileName","key","autoComplete","value","event","targetValue","currentTarget","toUpperCase","StyledActions","primary","ActionWrapper","ActionsBar","actions","action","index","ActionIcon","icon","tooltip","label","placement","role","tabIndex","onClick","QueryTitle","secondary","QueryLabel","m","StyledModal","xs","weights","normal","withToasts","fetchData","openInSqlLab","queries","savedQuery","addDangerToast","addSuccessToast","handleKeyPress","handleDataChange","disablePrevious","disableNext","currentQueryId","onKeyUp","footer","buttonStyle","SyntaxHighlighterCopy","language","sql","PASSWORDS_NEEDED_MESSAGE","CONFIRM_OVERWRITE_MESSAGE","StyledTableLabel","StyledPopoverItem","resourceCount","queryCount","resourceCollection","bulkSelectEnabled","hasPerm","toggleBulkSelect","refreshData","queryCurrentlyDeleting","setQueryCurrentlyDeleting","savedQueryCurrentlyPreviewing","setSavedQueryCurrentlyPreviewing","importingSavedQuery","showImportModal","preparingExport","setPreparingExport","canCreate","canEdit","canDelete","canExport","handleSavedQueryPreview","useCallback","SupersetClient","endpoint","json","errMsg","menuData","activeChild","common","subMenuButtons","push","window","open","location","origin","Tooltip","Icons","buttons","copyQueryLink","copy","Promise","resolve","catch","handleBulkSavedQueryExport","savedQueriesToExport","ids","initialSort","desc","columns","useMemo","accessor","Header","size","hidden","disableSortBy","Cell","row","original","sql_tables","tables","names","table","main","shift","Popover","trigger","content","created_on","createdOn","date","Date","utc","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","fromNow","changed_on_delta_humanized","changedOn","item","filters","input","operator","unfilteredLabel","fetchSelects","paginate","SubMenu","DeleteModal","onConfirm","handleQueryDelete","ConfirmStatusChange","queriesToDelete","confirmDelete","bulkActions","onSelect","ListView","count","data","pageSize","disableBulkSelect","highlightRowId","Loading"],"sourceRoot":""}