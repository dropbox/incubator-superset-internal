{"version":3,"file":"3197.1cd8561c0296667b196a.entry.js","mappings":"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","sources":["webpack://superset/./src/components/Table/utils/utils.ts","webpack://superset/./src/components/Table/utils/InteractiveTableUtils.ts","webpack://superset/./src/components/Table/VirtualTable.tsx","webpack://superset/./src/components/Table/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * Method to check if a number is within inclusive range between a maximum value minus a threshold\n * Invalid non numeric inputs will not error, but will return false\n *\n * @param value number coordinate to determine if it is within bounds of the targetCoordinate - threshold.  Must be positive and less than maximum.\n * @param maximum number max value for the test range.  Must be positive and greater than value\n * @param threshold number values to determine a range from maximum - threshold.  Must be positive and greater than zero.\n * @returns boolean\n */\nexport const withinRange = (\n  value: number,\n  maximum: number,\n  threshold: number,\n): boolean => {\n  let within = false;\n  const diff = maximum - value;\n  if (diff > 0 && diff <= threshold) {\n    within = true;\n  }\n  return within;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport type { ColumnsType } from 'antd/es/table';\nimport { SUPERSET_TABLE_COLUMN } from 'src/components/Table';\nimport { withinRange } from './utils';\n\ninterface IInteractiveColumn extends HTMLElement {\n  mouseDown: boolean;\n  oldX: number;\n  oldWidth: number;\n  draggable: boolean;\n}\nexport default class InteractiveTableUtils {\n  tableRef: HTMLTableElement | null;\n\n  columnRef: IInteractiveColumn | null;\n\n  setDerivedColumns: Function;\n\n  isDragging: boolean;\n\n  resizable: boolean;\n\n  reorderable: boolean;\n\n  derivedColumns: ColumnsType<any>;\n\n  RESIZE_INDICATOR_THRESHOLD: number;\n\n  constructor(\n    tableRef: HTMLTableElement,\n    derivedColumns: ColumnsType<any>,\n    setDerivedColumns: Function,\n  ) {\n    this.setDerivedColumns = setDerivedColumns;\n    this.tableRef = tableRef;\n    this.isDragging = false;\n    this.RESIZE_INDICATOR_THRESHOLD = 8;\n    this.resizable = false;\n    this.reorderable = false;\n    this.derivedColumns = [...derivedColumns];\n    document.addEventListener('mouseup', this.handleMouseup);\n  }\n\n  clearListeners = () => {\n    document.removeEventListener('mouseup', this.handleMouseup);\n    this.initializeResizableColumns(false, this.tableRef);\n    this.initializeDragDropColumns(false, this.tableRef);\n  };\n\n  setTableRef = (table: HTMLTableElement) => {\n    this.tableRef = table;\n  };\n\n  getColumnIndex = (): number => {\n    let index = -1;\n    const parent = this.columnRef?.parentNode;\n    if (parent) {\n      index = Array.prototype.indexOf.call(parent.children, this.columnRef);\n    }\n    return index;\n  };\n\n  handleColumnDragStart = (ev: DragEvent): void => {\n    const target = ev?.currentTarget as IInteractiveColumn;\n    if (target) {\n      this.columnRef = target;\n    }\n    this.isDragging = true;\n    const index = this.getColumnIndex();\n    const columnData = this.derivedColumns[index];\n    const dragData = { index, columnData };\n    ev?.dataTransfer?.setData(SUPERSET_TABLE_COLUMN, JSON.stringify(dragData));\n  };\n\n  handleDragDrop = (ev: DragEvent): void => {\n    const data = ev.dataTransfer?.getData?.(SUPERSET_TABLE_COLUMN);\n    if (data) {\n      ev.preventDefault();\n      const parent = (ev.currentTarget as HTMLElement)\n        ?.parentNode as HTMLElement;\n      const dropIndex = Array.prototype.indexOf.call(\n        parent.children,\n        ev.currentTarget,\n      );\n      const dragIndex = this.getColumnIndex();\n      const columnsCopy = [...this.derivedColumns];\n      const removedItem = columnsCopy.slice(dragIndex, dragIndex + 1);\n      columnsCopy.splice(dragIndex, 1);\n      columnsCopy.splice(dropIndex, 0, removedItem[0]);\n      this.derivedColumns = [...columnsCopy];\n      this.setDerivedColumns(columnsCopy);\n    }\n  };\n\n  allowDrop = (ev: DragEvent): void => {\n    ev.preventDefault();\n  };\n\n  handleMouseDown = (event: MouseEvent) => {\n    const target = event?.currentTarget as IInteractiveColumn;\n    if (target) {\n      this.columnRef = target;\n      if (\n        event &&\n        withinRange(\n          event.offsetX,\n          target.offsetWidth,\n          this.RESIZE_INDICATOR_THRESHOLD,\n        )\n      ) {\n        target.mouseDown = true;\n        target.oldX = event.x;\n        target.oldWidth = target.offsetWidth;\n        target.draggable = false;\n      } else if (this.reorderable) {\n        target.draggable = true;\n      }\n    }\n  };\n\n  handleMouseMove = (event: MouseEvent) => {\n    if (this.resizable === true && !this.isDragging) {\n      const target = event.currentTarget as IInteractiveColumn;\n      if (\n        event &&\n        withinRange(\n          event.offsetX,\n          target.offsetWidth,\n          this.RESIZE_INDICATOR_THRESHOLD,\n        )\n      ) {\n        target.style.cursor = 'col-resize';\n      } else {\n        target.style.cursor = 'default';\n      }\n\n      const column = this.columnRef;\n      if (column?.mouseDown) {\n        let width = column.oldWidth;\n        const diff = event.x - column.oldX;\n        if (column.oldWidth + (event.x - column.oldX) > 0) {\n          width = column.oldWidth + diff;\n        }\n        const colIndex = this.getColumnIndex();\n        if (!Number.isNaN(colIndex)) {\n          const columnDef = { ...this.derivedColumns[colIndex] };\n          columnDef.width = width;\n          this.derivedColumns[colIndex] = columnDef;\n          this.setDerivedColumns([...this.derivedColumns]);\n        }\n      }\n    }\n  };\n\n  handleMouseup = () => {\n    if (this.columnRef) {\n      this.columnRef.mouseDown = false;\n      this.columnRef.style.cursor = 'default';\n      this.columnRef.draggable = false;\n    }\n    this.isDragging = false;\n  };\n\n  initializeResizableColumns = (\n    resizable = false,\n    table: HTMLTableElement | null,\n  ) => {\n    this.tableRef = table;\n    const header: HTMLTableRowElement | undefined = this.tableRef?.rows?.[0];\n    if (header) {\n      const { cells } = header;\n      const len = cells.length;\n      for (let i = 0; i < len; i += 1) {\n        const cell = cells[i];\n        if (resizable === true) {\n          this.resizable = true;\n          cell.addEventListener('mousedown', this.handleMouseDown);\n          cell.addEventListener('mousemove', this.handleMouseMove, true);\n        } else {\n          this.resizable = false;\n          cell.removeEventListener('mousedown', this.handleMouseDown);\n          cell.removeEventListener('mousemove', this.handleMouseMove, true);\n        }\n      }\n    }\n  };\n\n  initializeDragDropColumns = (\n    reorderable = false,\n    table: HTMLTableElement | null,\n  ) => {\n    this.tableRef = table;\n    const header: HTMLTableRowElement | undefined = this.tableRef?.rows?.[0];\n    if (header) {\n      const { cells } = header;\n      const len = cells.length;\n      for (let i = 0; i < len; i += 1) {\n        const cell = cells[i];\n        if (reorderable === true) {\n          this.reorderable = true;\n          cell.addEventListener('mousedown', this.handleMouseDown);\n          cell.addEventListener('dragover', this.allowDrop);\n          cell.addEventListener('dragstart', this.handleColumnDragStart);\n          cell.addEventListener('drop', this.handleDragDrop);\n        } else {\n          this.reorderable = false;\n          cell.draggable = false;\n          cell.removeEventListener('mousedown', this.handleMouseDown);\n          cell.removeEventListener('dragover', this.allowDrop);\n          cell.removeEventListener('dragstart', this.handleColumnDragStart);\n          cell.removeEventListener('drop', this.handleDragDrop);\n        }\n      }\n    }\n  };\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport AntTable, {\n  TablePaginationConfig,\n  TableProps as AntTableProps,\n} from 'antd/lib/table';\nimport classNames from 'classnames';\nimport { useResizeDetector } from 'react-resize-detector';\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { VariableSizeGrid as Grid } from 'react-window';\nimport { useTheme, styled, safeHtmlSpan } from '@superset-ui/core';\n\nimport { TableSize, ETableAction } from './index';\n\ninterface VirtualTableProps<RecordType> extends AntTableProps<RecordType> {\n  height?: number;\n  allowHTML?: boolean;\n}\n\nconst StyledCell = styled('div')<{ height?: number }>(\n  ({ theme, height }) => `\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-left: ${theme.gridUnit * 2}px;\n  padding-right: ${theme.gridUnit}px;\n  border-bottom: 1px solid ${theme.colors.grayscale.light3};\n  transition: background 0.3s;\n  line-height: ${height}px;\n  box-sizing: border-box;\n`,\n);\n\nconst StyledTable = styled(AntTable)<{ height?: number }>(\n  ({ theme }) => `\n    th.ant-table-cell {\n      font-weight: ${theme.typography.weights.bold};\n      color: ${theme.colors.grayscale.dark1};\n      user-select: none;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    .ant-pagination-item-active {\n      border-color: ${theme.colors.primary.base};\n      }\n    }\n    .ant-table.ant-table-small {\n      font-size: ${theme.typography.sizes.s}px;\n    }\n`,\n);\n\nconst SMALL = 39;\nconst MIDDLE = 47;\n\nconst VirtualTable = <RecordType extends object>(\n  props: VirtualTableProps<RecordType>,\n) => {\n  const {\n    columns,\n    pagination,\n    onChange,\n    height,\n    scroll,\n    size,\n    allowHTML = false,\n  } = props;\n  const [tableWidth, setTableWidth] = useState<number>(0);\n  const onResize = useCallback((width: number) => {\n    setTableWidth(width);\n  }, []);\n  const { ref } = useResizeDetector({ onResize });\n  const theme = useTheme();\n\n  // If a column definition has no width, react-window will use this as the default column width\n  const DEFAULT_COL_WIDTH = theme?.gridUnit * 37 || 150;\n  const widthColumnCount = columns!.filter(({ width }) => !width).length;\n  let staticColWidthTotal = 0;\n  columns?.forEach(column => {\n    if (column.width) {\n      staticColWidthTotal += column.width as number;\n    }\n  });\n\n  let totalWidth = 0;\n  const defaultWidth = Math.max(\n    Math.floor((tableWidth - staticColWidthTotal) / widthColumnCount),\n    50,\n  );\n\n  const mergedColumns =\n    columns?.map?.(column => {\n      const modifiedColumn = { ...column };\n      if (!column.width) {\n        modifiedColumn.width = defaultWidth;\n      }\n      totalWidth += modifiedColumn.width as number;\n      return modifiedColumn;\n    }) ?? [];\n\n  /*\n   * There are cases where a user could set the width of each column and the total width is less than width of\n   * the table.  In this case we will stretch the last column to use the extra space\n   */\n  if (totalWidth < tableWidth) {\n    const lastColumn = mergedColumns[mergedColumns.length - 1];\n    lastColumn.width =\n      (lastColumn.width as number) + Math.floor(tableWidth - totalWidth);\n  }\n\n  const gridRef = useRef<any>();\n  const [connectObject] = useState<any>(() => {\n    const obj = {};\n    Object.defineProperty(obj, 'scrollLeft', {\n      get: () => {\n        if (gridRef.current) {\n          return gridRef.current?.state?.scrollLeft;\n        }\n        return null;\n      },\n      set: (scrollLeft: number) => {\n        if (gridRef.current) {\n          gridRef.current.scrollTo({ scrollLeft });\n        }\n      },\n    });\n\n    return obj;\n  });\n\n  const resetVirtualGrid = () => {\n    gridRef.current?.resetAfterIndices({\n      columnIndex: 0,\n      shouldForceUpdate: true,\n    });\n  };\n\n  useEffect(() => resetVirtualGrid, [tableWidth, columns, size]);\n\n  /*\n   * antd Table has a runtime error when it tries to fire the onChange event triggered from a pageChange\n   * when the table body is overridden with the virtualized table.  This function capture the page change event\n   * from within the pagination controls and proxies the onChange event payload\n   */\n  const onPageChange = (page: number, size: number) => {\n    /**\n     * This resets vertical scroll position to 0 (top) when page changes\n     * We intentionally leave horizontal scroll where it was so user can focus on\n     * specific range of columns as they page through data\n     */\n    gridRef.current?.scrollTo?.({ scrollTop: 0 });\n\n    onChange?.(\n      {\n        ...pagination,\n        current: page,\n        pageSize: size,\n      } as TablePaginationConfig,\n      {},\n      {},\n      {\n        action: ETableAction.PAGINATE,\n        currentDataSource: [],\n      },\n    );\n  };\n\n  const renderVirtualList = (rawData: object[], { ref, onScroll }: any) => {\n    // eslint-disable-next-line no-param-reassign\n    ref.current = connectObject;\n    const cellSize = size === TableSize.MIDDLE ? MIDDLE : SMALL;\n    return (\n      <Grid\n        ref={gridRef}\n        className=\"virtual-grid\"\n        columnCount={mergedColumns.length}\n        columnWidth={(index: number) => {\n          const { width = DEFAULT_COL_WIDTH } = mergedColumns[index];\n          return width as number;\n        }}\n        height={height || (scroll!.y as number)}\n        rowCount={rawData.length}\n        rowHeight={() => cellSize}\n        width={tableWidth}\n        onScroll={({ scrollLeft }: { scrollLeft: number }) => {\n          onScroll({ scrollLeft });\n        }}\n      >\n        {({\n          columnIndex,\n          rowIndex,\n          style,\n        }: {\n          columnIndex: number;\n          rowIndex: number;\n          style: React.CSSProperties;\n        }) => {\n          const data: any = rawData?.[rowIndex];\n          // Set default content\n          let content =\n            data?.[(mergedColumns as any)?.[columnIndex]?.dataIndex];\n          // Check if the column has a render function\n          const render = mergedColumns[columnIndex]?.render;\n          if (typeof render === 'function') {\n            // Use render function to generate formatted content using column's render function\n            content = render(content, data, rowIndex);\n          }\n\n          if (allowHTML && typeof content === 'string') {\n            content = safeHtmlSpan(content);\n          }\n\n          return (\n            <StyledCell\n              className={classNames('virtual-table-cell', {\n                'virtual-table-cell-last':\n                  columnIndex === mergedColumns.length - 1,\n              })}\n              style={style}\n              title={typeof content === 'string' ? content : undefined}\n              theme={theme}\n              height={cellSize}\n            >\n              {content}\n            </StyledCell>\n          );\n        }}\n      </Grid>\n    );\n  };\n\n  const modifiedPagination = {\n    ...pagination,\n    onChange: onPageChange,\n  };\n\n  return (\n    <div ref={ref}>\n      <StyledTable\n        {...props}\n        sticky={false}\n        className=\"virtual-table\"\n        columns={mergedColumns}\n        components={{\n          body: renderVirtualList,\n        }}\n        pagination={pagination ? modifiedPagination : false}\n      />\n    </div>\n  );\n};\n\nexport default VirtualTable;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * License); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useRef, ReactElement } from 'react';\nimport AntTable, {\n  ColumnsType,\n  TableProps as AntTableProps,\n} from 'antd/lib/table';\nimport ConfigProvider from 'antd/lib/config-provider';\nimport { PaginationProps } from 'antd/lib/pagination';\nimport { t, useTheme, logging, styled } from '@superset-ui/core';\nimport Loading from 'src/components/Loading';\nimport InteractiveTableUtils from './utils/InteractiveTableUtils';\nimport VirtualTable from './VirtualTable';\n\nexport const SUPERSET_TABLE_COLUMN = 'superset/table-column';\n\nexport enum SelectionType {\n  'DISABLED' = 'disabled',\n  'SINGLE' = 'single',\n  'MULTI' = 'multi',\n}\n\nexport type SortOrder = 'descend' | 'ascend' | null;\n\nexport enum ETableAction {\n  PAGINATE = 'paginate',\n  SORT = 'sort',\n  FILTER = 'filter',\n}\n\nexport type { ColumnsType };\nexport type OnChangeFunction<RecordType> =\n  AntTableProps<RecordType>['onChange'];\n\nexport enum TableSize {\n  SMALL = 'small',\n  MIDDLE = 'middle',\n}\n\nexport interface TableProps<RecordType> {\n  /**\n   * Data that will populate the each row and map to the column key.\n   */\n  data: RecordType[];\n  /**\n   * Whether to show all table borders\n   */\n  bordered?: boolean;\n  /**\n   * Table column definitions.\n   */\n  columns: ColumnsType<RecordType>;\n  /**\n   * Array of row keys to represent list of selected rows.\n   */\n  selectedRows?: React.Key[];\n  /**\n   * Callback function invoked when a row is selected by user.\n   */\n  handleRowSelection?: (newSelectedRowKeys: React.Key[]) => void;\n  /**\n   * Controls the size of the table.\n   */\n  size: TableSize;\n  /**\n   * Controls if table rows are selectable and if multiple select is supported.\n   */\n  selectionType?: SelectionType;\n  /*\n   * Places table in visual loading state.  Use while waiting to retrieve data or perform an async operation that will update the table.\n   */\n  loading?: boolean;\n  /**\n   * Uses a sticky header which always displays when vertically scrolling the table.  Default: true\n   */\n  sticky?: boolean;\n  /**\n   * Controls if columns are resizable by user.\n   */\n  resizable?: boolean;\n  /**\n   * EXPERIMENTAL: Controls if columns are re-orderable by user drag drop.\n   */\n  reorderable?: boolean;\n  /**\n   * Controls if pagination is active or disabled.\n   */\n  usePagination?: boolean;\n  /**\n   * Default number of rows table will display per page of data.\n   */\n  defaultPageSize?: number;\n  /**\n   * Array of numeric options for the number of rows table will display per page of data.\n   * The user can select from these options in the page size drop down menu.\n   */\n  pageSizeOptions?: string[];\n  /**\n   * Set table to display no data even if data has been provided\n   */\n  hideData?: boolean;\n  /**\n   * emptyComponent\n   */\n  emptyComponent?: ReactElement;\n  /**\n   * Enables setting the text displayed in various components and tooltips within the Table UI.\n   */\n  locale?: Partial<AntTableProps<RecordType>['locale']>;\n  /**\n   * Restricts the visible height of the table and allows for internal scrolling within the table\n   * when the number of rows exceeds the visible space.\n   */\n  height?: number;\n  /**\n   * Sets the table to use react-window for scroll virtualization in cases where\n   * there are unknown amount of columns, or many, many rows\n   */\n  virtualize?: boolean;\n  /**\n   * Used to override page controls total record count when using server-side paging.\n   */\n  recordCount?: number;\n  /**\n   * Invoked when the tables sorting, paging, or filtering is changed.\n   */\n  onChange?: OnChangeFunction<RecordType>;\n  /**\n   * Returns props that should be applied to each row component.\n   */\n  onRow?: AntTableProps<RecordType>['onRow'];\n  /**\n   * Will render html safely if set to true, anchor tags and such. Currently\n   * only supported for virtualize == true\n   */\n  allowHTML?: boolean;\n}\n\nconst defaultRowSelection: React.Key[] = [];\n\nconst PAGINATION_HEIGHT = 40;\nconst HEADER_HEIGHT = 68;\n\nconst StyledTable = styled(AntTable)<{ height?: number }>(\n  ({ theme, height }) => `\n    .ant-table-body {\n      overflow: auto;\n      height: ${height ? `${height}px` : undefined};\n    }\n\n    th.ant-table-cell {\n      font-weight: ${theme.typography.weights.bold};\n      color: ${theme.colors.grayscale.dark1};\n      user-select: none;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    .ant-table-tbody > tr > td {\n      user-select: none;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      border-bottom: 1px solid ${theme.colors.grayscale.light3};\n    }\n\n    .ant-pagination-item-active {\n      border-color: ${theme.colors.primary.base};\n    }\n\n    .ant-table.ant-table-small {\n      font-size: ${theme.typography.sizes.s}px;\n    }\n  `,\n);\nconst StyledVirtualTable = styled(VirtualTable)(\n  ({ theme }) => `\n  .virtual-table .ant-table-container:before,\n  .virtual-table .ant-table-container:after {\n    display: none;\n  }\n  .virtual-table-cell {\n    box-sizing: border-box;\n    padding: ${theme.gridUnit * 4}px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`,\n);\n\nconst defaultLocale = {\n  filterTitle: t('Filter menu'),\n  filterConfirm: t('OK'),\n  filterReset: t('Reset'),\n  filterEmptyText: t('No filters'),\n  filterCheckall: t('Select all items'),\n  filterSearchPlaceholder: t('Search in filters'),\n  emptyText: t('No data'),\n  selectAll: t('Select current page'),\n  selectInvert: t('Invert current page'),\n  selectNone: t('Clear all data'),\n  selectionAll: t('Select all data'),\n  sortTitle: t('Sort'),\n  expand: t('Expand row'),\n  collapse: t('Collapse row'),\n  triggerDesc: t('Click to sort descending'),\n  triggerAsc: t('Click to sort ascending'),\n  cancelSort: t('Click to cancel sorting'),\n};\n\nconst selectionMap = {};\nconst noop = () => {};\nselectionMap[SelectionType.MULTI] = 'checkbox';\nselectionMap[SelectionType.SINGLE] = 'radio';\nselectionMap[SelectionType.DISABLED] = null;\n\nexport function Table<RecordType extends object>(\n  props: TableProps<RecordType>,\n) {\n  const {\n    data,\n    bordered,\n    columns,\n    selectedRows = defaultRowSelection,\n    handleRowSelection,\n    size = TableSize.SMALL,\n    selectionType = SelectionType.DISABLED,\n    sticky = true,\n    loading = false,\n    resizable = false,\n    reorderable = false,\n    usePagination = true,\n    defaultPageSize = 15,\n    pageSizeOptions = ['5', '15', '25', '50', '100'],\n    hideData = false,\n    emptyComponent,\n    locale,\n    height,\n    virtualize = false,\n    onChange = noop,\n    recordCount,\n    onRow,\n    allowHTML = false,\n  } = props;\n\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n  const [derivedColumns, setDerivedColumns] = useState(columns);\n  const [pageSize, setPageSize] = useState(defaultPageSize);\n  const [mergedLocale, setMergedLocale] = useState<\n    Required<AntTableProps<RecordType>>['locale']\n  >({ ...defaultLocale });\n  const [selectedRowKeys, setSelectedRowKeys] =\n    useState<React.Key[]>(selectedRows);\n  const interactiveTableUtils = useRef<InteractiveTableUtils | null>(null);\n\n  const onSelectChange = (newSelectedRowKeys: React.Key[]) => {\n    setSelectedRowKeys(newSelectedRowKeys);\n    handleRowSelection?.(newSelectedRowKeys);\n  };\n\n  const selectionTypeValue = selectionMap[selectionType];\n  const rowSelection = {\n    type: selectionTypeValue,\n    selectedRowKeys,\n    onChange: onSelectChange,\n  };\n\n  const renderEmpty = () =>\n    emptyComponent ?? <div>{mergedLocale.emptyText}</div>;\n\n  // Log use of experimental features\n  useEffect(() => {\n    if (reorderable === true) {\n      logging.warn(\n        'EXPERIMENTAL FEATURE ENABLED: The \"reorderable\" prop of Table is experimental and NOT recommended for use in production deployments.',\n      );\n    }\n    if (resizable === true) {\n      logging.warn(\n        'EXPERIMENTAL FEATURE ENABLED: The \"resizable\" prop of Table is experimental and NOT recommended for use in production deployments.',\n      );\n    }\n  }, [reorderable, resizable]);\n\n  useEffect(() => {\n    let updatedLocale;\n    if (locale) {\n      // This spread allows for locale to only contain a subset of locale overrides on props\n      updatedLocale = { ...defaultLocale, ...locale };\n    } else {\n      updatedLocale = { ...defaultLocale };\n    }\n    setMergedLocale(updatedLocale);\n  }, [locale]);\n\n  useEffect(() => setDerivedColumns(columns), [columns]);\n\n  useEffect(() => {\n    if (interactiveTableUtils.current) {\n      interactiveTableUtils.current?.clearListeners();\n    }\n    const table = wrapperRef.current?.getElementsByTagName('table')[0];\n    if (table) {\n      interactiveTableUtils.current = new InteractiveTableUtils(\n        table,\n        derivedColumns,\n        setDerivedColumns,\n      );\n      if (reorderable) {\n        interactiveTableUtils?.current?.initializeDragDropColumns(\n          reorderable,\n          table,\n        );\n      }\n      if (resizable) {\n        interactiveTableUtils?.current?.initializeResizableColumns(\n          resizable,\n          table,\n        );\n      }\n    }\n    return () => {\n      interactiveTableUtils?.current?.clearListeners?.();\n    };\n    /**\n     * We DO NOT want this effect to trigger when derivedColumns changes as it will break functionality\n     * The exclusion from the effect dependencies is intentional and should not be modified\n     */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [wrapperRef, reorderable, resizable, virtualize, interactiveTableUtils]);\n\n  const theme = useTheme();\n\n  const paginationSettings: PaginationProps | false = usePagination\n    ? {\n        hideOnSinglePage: true,\n        pageSize,\n        pageSizeOptions,\n        onShowSizeChange: (page: number, size: number) => setPageSize(size),\n      }\n    : false;\n\n  /**\n   * When recordCount is provided it lets the user of Table control total number of pages\n   * independent from data.length.  This allows the parent component do things like server side paging\n   * where the user can be shown the total mount of data they can page through, but the component can provide\n   * data one page at a time, and respond to the onPageChange event to fetch and set new data\n   */\n  if (paginationSettings && recordCount) {\n    paginationSettings.total = recordCount;\n  }\n\n  let bodyHeight = height;\n  if (bodyHeight) {\n    bodyHeight -= HEADER_HEIGHT;\n    const hasPagination =\n      usePagination && recordCount && recordCount > pageSize;\n    if (hasPagination) {\n      bodyHeight -= PAGINATION_HEIGHT;\n    }\n  }\n\n  const sharedProps = {\n    loading: { spinning: loading ?? false, indicator: <Loading /> },\n    hasData: hideData ? false : data,\n    columns: derivedColumns,\n    dataSource: hideData ? undefined : data,\n    size,\n    pagination: paginationSettings,\n    locale: mergedLocale,\n    showSorterTooltip: false,\n    onChange,\n    onRow,\n    theme,\n    height: bodyHeight,\n    bordered,\n  };\n\n  return (\n    <ConfigProvider renderEmpty={renderEmpty}>\n      <div ref={wrapperRef}>\n        {!virtualize && (\n          <StyledTable\n            {...sharedProps}\n            rowSelection={selectionTypeValue ? rowSelection : undefined}\n            sticky={sticky}\n          />\n        )}\n        {virtualize && (\n          <StyledVirtualTable\n            {...sharedProps}\n            scroll={{\n              y: 300,\n              x: '100vw',\n              // To avoid jest failure by scrollTo\n              ...(process.env.WEBPACK_MODE === 'test' && {\n                scrollToFirstRowOnChange: false,\n              }),\n            }}\n            allowHTML={allowHTML}\n          />\n        )}\n      </div>\n    </ConfigProvider>\n  );\n}\n\nexport default Table;\n"],"names":["withinRange","value","maximum","threshold","within","diff","InteractiveTableUtils","constructor","tableRef","derivedColumns","setDerivedColumns","columnRef","isDragging","resizable","reorderable","RESIZE_INDICATOR_THRESHOLD","clearListeners","document","removeEventListener","this","handleMouseup","initializeResizableColumns","initializeDragDropColumns","setTableRef","table","getColumnIndex","index","parent","parentNode","Array","prototype","indexOf","call","children","handleColumnDragStart","ev","target","currentTarget","dragData","columnData","dataTransfer","setData","SUPERSET_TABLE_COLUMN","JSON","stringify","handleDragDrop","getData","preventDefault","dropIndex","dragIndex","columnsCopy","removedItem","slice","splice","allowDrop","handleMouseDown","event","offsetX","offsetWidth","mouseDown","oldX","x","oldWidth","draggable","handleMouseMove","style","cursor","column","width","colIndex","Number","isNaN","columnDef","header","rows","cells","len","length","i","cell","addEventListener","StyledCell","styled","theme","height","gridUnit","colors","grayscale","light3","StyledTable","AntTable","typography","weights","bold","dark1","primary","base","sizes","s","SelectionType","ETableAction","TableSize","defaultRowSelection","undefined","StyledVirtualTable","props","columns","pagination","onChange","scroll","size","allowHTML","tableWidth","setTableWidth","useState","onResize","useCallback","ref","useResizeDetector","useTheme","DEFAULT_COL_WIDTH","widthColumnCount","filter","staticColWidthTotal","forEach","totalWidth","defaultWidth","Math","max","floor","mergedColumns","map","modifiedColumn","lastColumn","gridRef","useRef","connectObject","obj","Object","defineProperty","get","current","state","scrollLeft","set","scrollTo","resetVirtualGrid","resetAfterIndices","columnIndex","shouldForceUpdate","useEffect","modifiedPagination","page","scrollTop","pageSize","action","PAGINATE","currentDataSource","sticky","className","components","body","rawData","onScroll","cellSize","MIDDLE","columnCount","columnWidth","y","rowCount","rowHeight","rowIndex","data","content","dataIndex","render","safeHtmlSpan","classNames","title","defaultLocale","filterTitle","t","filterConfirm","filterReset","filterEmptyText","filterCheckall","filterSearchPlaceholder","emptyText","selectAll","selectInvert","selectNone","selectionAll","sortTitle","expand","collapse","triggerDesc","triggerAsc","cancelSort","selectionMap","noop","Table","bordered","selectedRows","handleRowSelection","SMALL","selectionType","DISABLED","loading","usePagination","defaultPageSize","pageSizeOptions","hideData","emptyComponent","locale","virtualize","recordCount","onRow","wrapperRef","setPageSize","mergedLocale","setMergedLocale","selectedRowKeys","setSelectedRowKeys","interactiveTableUtils","selectionTypeValue","rowSelection","type","newSelectedRowKeys","logging","updatedLocale","getElementsByTagName","paginationSettings","hideOnSinglePage","onShowSizeChange","total","bodyHeight","sharedProps","spinning","indicator","Loading","hasData","dataSource","showSorterTooltip","renderEmpty","process","MULTI","SINGLE"],"sourceRoot":""}