{"version":3,"file":"9152.6c1252754d0adb3d987c.entry.js","mappings":"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","sources":["webpack://superset/./src/dashboard/actions/dashboardLayout.js","webpack://superset/./src/dashboard/util/dropOverflowsParent.js","webpack://superset/./src/dashboard/util/isInDifferentFilterScopes.js","webpack://superset/./src/dashboard/actions/dashboardState.js","webpack://superset/./src/dashboard/util/serializeFilterScopes.js","webpack://superset/./src/dashboard/util/findParentId.js","webpack://superset/./src/dashboard/util/getComponentWidthFromDrop.js","webpack://superset/./src/dashboard/util/getDetailedComponentWidth.js","webpack://superset/./src/reports/actions/reports.js","webpack://superset/./src/components/UiConfigContext/index.tsx","webpack://superset/./src/dashboard/util/componentIsResizable.ts","webpack://superset/./src/dashboard/util/updateComponentParentsList.js","webpack://superset/./src/dashboard/util/shouldWrapChildInRow.js","webpack://superset/./src/dashboard/util/newEntitiesFromDrop.js","webpack://superset/./src/dashboard/reducers/dashboardLayout.js","webpack://superset/./src/dashboard/util/dnd-reorder.js","webpack://superset/./src/dashboard/reducers/undoableDashboardLayout.js","webpack://superset/./src/utils/DebouncedMessageQueue.js","webpack://superset/./src/middleware/loggerMiddleware.js","webpack://superset/./src/views/store.ts","webpack://superset/./src/dashboard/reducers/datasources.ts","webpack://superset/./src/dashboard/reducers/dashboardInfo.js","webpack://superset/./src/dashboard/reducers/dashboardState.js","webpack://superset/./src/reports/reducers/reports.js","webpack://superset/./src/components/MessageToasts/reducers.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport { t } from '@superset-ui/core';\nimport { addWarningToast } from 'src/components/MessageToasts/actions';\nimport { TABS_TYPE, ROW_TYPE } from 'src/dashboard/util/componentTypes';\nimport {\n  DASHBOARD_ROOT_ID,\n  NEW_COMPONENTS_SOURCE_ID,\n  DASHBOARD_HEADER_ID,\n} from 'src/dashboard/util/constants';\nimport dropOverflowsParent from 'src/dashboard/util/dropOverflowsParent';\nimport findParentId from 'src/dashboard/util/findParentId';\nimport isInDifferentFilterScopes from 'src/dashboard/util/isInDifferentFilterScopes';\nimport { updateLayoutComponents } from './dashboardFilters';\nimport { setUnsavedChanges } from './dashboardState';\n\n// Component CRUD -------------------------------------------------------------\nexport const UPDATE_COMPONENTS = 'UPDATE_COMPONENTS';\n\n// this is a helper that takes an action as input and dispatches\n// an additional setUnsavedChanges(true) action after the dispatch in the case\n// that dashboardState.hasUnsavedChanges is false.\nfunction setUnsavedChangesAfterAction(action) {\n  return (...args) =>\n    (dispatch, getState) => {\n      const result = action(...args);\n      if (typeof result === 'function') {\n        dispatch(result(dispatch, getState));\n      } else {\n        dispatch(result);\n      }\n\n      const { dashboardLayout, dashboardState } = getState();\n\n      const isComponentLevelEvent =\n        result.type === UPDATE_COMPONENTS &&\n        result.payload &&\n        result.payload.nextComponents;\n      // trigger dashboardFilters state update if dashboard layout is changed.\n      if (!isComponentLevelEvent) {\n        const components = dashboardLayout.present;\n        dispatch(updateLayoutComponents(components));\n      }\n\n      if (!dashboardState.hasUnsavedChanges) {\n        dispatch(setUnsavedChanges(true));\n      }\n    };\n}\n\nexport const updateComponents = setUnsavedChangesAfterAction(\n  nextComponents => ({\n    type: UPDATE_COMPONENTS,\n    payload: {\n      nextComponents,\n    },\n  }),\n);\n\nexport function updateDashboardTitle(text) {\n  return (dispatch, getState) => {\n    const { dashboardLayout } = getState();\n    dispatch(\n      updateComponents({\n        [DASHBOARD_HEADER_ID]: {\n          ...dashboardLayout.present[DASHBOARD_HEADER_ID],\n          meta: {\n            text,\n          },\n        },\n      }),\n    );\n  };\n}\n\nexport const DASHBOARD_TITLE_CHANGED = 'DASHBOARD_TITLE_CHANGED';\n\n// call this one when it's not an undo-able action\nexport function dashboardTitleChanged(text) {\n  return {\n    type: DASHBOARD_TITLE_CHANGED,\n    text,\n  };\n}\n\nexport const DELETE_COMPONENT = 'DELETE_COMPONENT';\nexport const deleteComponent = setUnsavedChangesAfterAction((id, parentId) => ({\n  type: DELETE_COMPONENT,\n  payload: {\n    id,\n    parentId,\n  },\n}));\n\nexport const CREATE_COMPONENT = 'CREATE_COMPONENT';\nexport const createComponent = setUnsavedChangesAfterAction(dropResult => ({\n  type: CREATE_COMPONENT,\n  payload: {\n    dropResult,\n  },\n}));\n\n// Tabs -----------------------------------------------------------------------\nexport const CREATE_TOP_LEVEL_TABS = 'CREATE_TOP_LEVEL_TABS';\nexport const createTopLevelTabs = setUnsavedChangesAfterAction(dropResult => ({\n  type: CREATE_TOP_LEVEL_TABS,\n  payload: {\n    dropResult,\n  },\n}));\n\nexport const DELETE_TOP_LEVEL_TABS = 'DELETE_TOP_LEVEL_TABS';\nexport const deleteTopLevelTabs = setUnsavedChangesAfterAction(() => ({\n  type: DELETE_TOP_LEVEL_TABS,\n  payload: {},\n}));\n\n// Resize ---------------------------------------------------------------------\nexport const RESIZE_COMPONENT = 'RESIZE_COMPONENT';\nexport function resizeComponent({ id, width, height }) {\n  return (dispatch, getState) => {\n    const { dashboardLayout: undoableLayout } = getState();\n    const { present: dashboard } = undoableLayout;\n    const component = dashboard[id];\n    const widthChanged = width && component.meta.width !== width;\n    const heightChanged = height && component.meta.height !== height;\n    if (component && (widthChanged || heightChanged)) {\n      // update the size of this component\n      const updatedComponents = {\n        [id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            width: width || component.meta.width,\n            height: height || component.meta.height,\n          },\n        },\n      };\n\n      dispatch(updateComponents(updatedComponents));\n    }\n  };\n}\n\n// Drag and drop --------------------------------------------------------------\nexport const MOVE_COMPONENT = 'MOVE_COMPONENT';\nconst moveComponent = setUnsavedChangesAfterAction(dropResult => ({\n  type: MOVE_COMPONENT,\n  payload: {\n    dropResult,\n  },\n}));\n\nexport const HANDLE_COMPONENT_DROP = 'HANDLE_COMPONENT_DROP';\nexport function handleComponentDrop(dropResult) {\n  return (dispatch, getState) => {\n    const overflowsParent = dropOverflowsParent(\n      dropResult,\n      getState().dashboardLayout.present,\n    );\n\n    if (overflowsParent) {\n      return dispatch(\n        addWarningToast(\n          t(\n            `There is not enough space for this component. Try decreasing its width, or increasing the destination width.`,\n          ),\n        ),\n      );\n    }\n\n    const { source, destination } = dropResult;\n    const droppedOnRoot = destination && destination.id === DASHBOARD_ROOT_ID;\n    const isNewComponent = source.id === NEW_COMPONENTS_SOURCE_ID;\n    const dashboardRoot = getState().dashboardLayout.present[DASHBOARD_ROOT_ID];\n    const rootChildId =\n      dashboardRoot && dashboardRoot.children ? dashboardRoot.children[0] : '';\n\n    if (droppedOnRoot) {\n      dispatch(createTopLevelTabs(dropResult));\n    } else if (destination && isNewComponent) {\n      dispatch(createComponent(dropResult));\n    } else if (\n      // Add additional allow-to-drop logic for tag/tags source.\n      // We only allow\n      // - top-level tab => top-level tab: rearrange top-level tab order\n      // - nested tab => top-level tab: allow row tab become top-level tab\n      // Dashboard does not allow top-level tab become nested tab, to avoid\n      // nested tab inside nested tab.\n      source.type === TABS_TYPE &&\n      destination.type === TABS_TYPE &&\n      source.id === rootChildId &&\n      destination.id !== rootChildId\n    ) {\n      return dispatch(\n        addWarningToast(t('Can not move top level tab into nested tabs')),\n      );\n    } else if (\n      destination &&\n      source &&\n      !(\n        // ensure it has moved\n        (destination.id === source.id && destination.index === source.index)\n      )\n    ) {\n      dispatch(moveComponent(dropResult));\n    }\n\n    // call getState() again down here in case redux state is stale after\n    // previous dispatch(es)\n    const { dashboardFilters, dashboardLayout: undoableLayout } = getState();\n\n    // if we moved a child from a Tab or Row parent and it was the only child, delete the parent.\n    if (!isNewComponent) {\n      const { present: layout } = undoableLayout;\n      const sourceComponent = layout[source.id] || {};\n      const destinationComponent = layout[destination.id] || {};\n      if (\n        (sourceComponent.type === TABS_TYPE ||\n          sourceComponent.type === ROW_TYPE) &&\n        sourceComponent.children &&\n        sourceComponent.children.length === 0\n      ) {\n        const parentId = findParentId({\n          childId: source.id,\n          layout,\n        });\n        dispatch(deleteComponent(source.id, parentId));\n      }\n\n      // show warning if item has been moved between different scope\n      if (\n        isInDifferentFilterScopes({\n          dashboardFilters,\n          source: (sourceComponent.parents || []).concat(source.id),\n          destination: (destinationComponent.parents || []).concat(\n            destination.id,\n          ),\n        })\n      ) {\n        dispatch(\n          addWarningToast(\n            t('This chart has been moved to a different filter scope.'),\n          ),\n        );\n      }\n    }\n\n    return null;\n  };\n}\n\n// Undo redo ------------------------------------------------------------------\nexport function undoLayoutAction() {\n  return (dispatch, getState) => {\n    dispatch(UndoActionCreators.undo());\n\n    const { dashboardLayout, dashboardState } = getState();\n\n    if (\n      dashboardLayout.past.length === 0 &&\n      !dashboardState.maxUndoHistoryExceeded &&\n      !dashboardState.updatedColorScheme\n    ) {\n      dispatch(setUnsavedChanges(false));\n    }\n  };\n}\n\nexport const redoLayoutAction = setUnsavedChangesAfterAction(\n  UndoActionCreators.redo,\n);\n\n// Update component parents list ----------------------------------------------\nexport const UPDATE_COMPONENTS_PARENTS_LIST = 'UPDATE_COMPONENTS_PARENTS_LIST';\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport getComponentWidthFromDrop from './getComponentWidthFromDrop';\n\nexport default function doesChildOverflowParent(dropResult, layout) {\n  const childWidth = getComponentWidthFromDrop({ dropResult, layout });\n  return typeof childWidth === 'number' && childWidth < 0;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport default function isInDifferentFilterScopes({\n  dashboardFilters = {},\n  source = [],\n  destination = [],\n}) {\n  const sourceSet = new Set(source);\n  const destinationSet = new Set(destination);\n\n  const allScopes = [].concat(\n    ...Object.values(dashboardFilters).map(({ scopes }) =>\n      [].concat(...Object.values(scopes).map(({ scope }) => scope)),\n    ),\n  );\n  return allScopes.some(tab => destinationSet.has(tab) !== sourceSet.has(tab));\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport {\n  ensureIsArray,\n  t,\n  SupersetClient,\n  getSharedLabelColor,\n} from '@superset-ui/core';\nimport {\n  addChart,\n  removeChart,\n  refreshChart,\n} from 'src/components/Chart/chartAction';\nimport { chart as initChart } from 'src/components/Chart/chartReducer';\nimport { applyDefaultFormData } from 'src/explore/store';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport { SAVE_TYPE_OVERWRITE } from 'src/dashboard/util/constants';\nimport {\n  addSuccessToast,\n  addWarningToast,\n  addDangerToast,\n} from 'src/components/MessageToasts/actions';\nimport serializeActiveFilterValues from 'src/dashboard/util/serializeActiveFilterValues';\nimport serializeFilterScopes from 'src/dashboard/util/serializeFilterScopes';\nimport { getActiveFilters } from 'src/dashboard/util/activeDashboardFilters';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport { UPDATE_COMPONENTS_PARENTS_LIST } from './dashboardLayout';\nimport {\n  setChartConfiguration,\n  dashboardInfoChanged,\n  SET_CHART_CONFIG_COMPLETE,\n} from './dashboardInfo';\nimport { fetchDatasourceMetadata } from './datasources';\nimport {\n  addFilter,\n  removeFilter,\n  updateDirectPathToFilter,\n} from './dashboardFilters';\nimport { SET_FILTER_CONFIG_COMPLETE } from './nativeFilters';\n\nexport const SET_UNSAVED_CHANGES = 'SET_UNSAVED_CHANGES';\nexport function setUnsavedChanges(hasUnsavedChanges) {\n  return { type: SET_UNSAVED_CHANGES, payload: { hasUnsavedChanges } };\n}\n\nexport const ADD_SLICE = 'ADD_SLICE';\nexport function addSlice(slice) {\n  return { type: ADD_SLICE, slice };\n}\n\nexport const REMOVE_SLICE = 'REMOVE_SLICE';\nexport function removeSlice(sliceId) {\n  return { type: REMOVE_SLICE, sliceId };\n}\n\nexport const RESET_SLICE = 'RESET_SLICE';\nexport function resetSlice() {\n  return { type: RESET_SLICE };\n}\n\nconst FAVESTAR_BASE_URL = '/superset/favstar/Dashboard';\nexport const TOGGLE_FAVE_STAR = 'TOGGLE_FAVE_STAR';\nexport function toggleFaveStar(isStarred) {\n  return { type: TOGGLE_FAVE_STAR, isStarred };\n}\n\nexport const FETCH_FAVE_STAR = 'FETCH_FAVE_STAR';\nexport function fetchFaveStar(id) {\n  return function fetchFaveStarThunk(dispatch) {\n    return SupersetClient.get({\n      endpoint: `${FAVESTAR_BASE_URL}/${id}/count/`,\n    })\n      .then(({ json }) => {\n        if (json.count > 0) dispatch(toggleFaveStar(true));\n      })\n      .catch(() =>\n        dispatch(\n          addDangerToast(\n            t(\n              'There was an issue fetching the favorite status of this dashboard.',\n            ),\n          ),\n        ),\n      );\n  };\n}\n\nexport const SAVE_FAVE_STAR = 'SAVE_FAVE_STAR';\nexport function saveFaveStar(id, isStarred) {\n  return function saveFaveStarThunk(dispatch) {\n    const urlSuffix = isStarred ? 'unselect' : 'select';\n    return SupersetClient.get({\n      endpoint: `${FAVESTAR_BASE_URL}/${id}/${urlSuffix}/`,\n    })\n      .then(() => {\n        dispatch(toggleFaveStar(!isStarred));\n      })\n      .catch(() =>\n        dispatch(\n          addDangerToast(t('There was an issue favoriting this dashboard.')),\n        ),\n      );\n  };\n}\n\nexport const TOGGLE_PUBLISHED = 'TOGGLE_PUBLISHED';\nexport function togglePublished(isPublished) {\n  return { type: TOGGLE_PUBLISHED, isPublished };\n}\n\nexport function savePublished(id, isPublished) {\n  return function savePublishedThunk(dispatch) {\n    return SupersetClient.put({\n      endpoint: `/api/v1/dashboard/${id}`,\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        published: isPublished,\n      }),\n    })\n      .then(() => {\n        dispatch(\n          addSuccessToast(\n            isPublished\n              ? t('This dashboard is now published')\n              : t('This dashboard is now hidden'),\n          ),\n        );\n        dispatch(togglePublished(isPublished));\n      })\n      .catch(() => {\n        dispatch(\n          addDangerToast(\n            t('You do not have permissions to edit this dashboard.'),\n          ),\n        );\n      });\n  };\n}\n\nexport const TOGGLE_EXPAND_SLICE = 'TOGGLE_EXPAND_SLICE';\nexport function toggleExpandSlice(sliceId) {\n  return { type: TOGGLE_EXPAND_SLICE, sliceId };\n}\n\nexport const UPDATE_CSS = 'UPDATE_CSS';\nexport function updateCss(css) {\n  return { type: UPDATE_CSS, css };\n}\n\nexport const SET_EDIT_MODE = 'SET_EDIT_MODE';\nexport function setEditMode(editMode) {\n  return { type: SET_EDIT_MODE, editMode };\n}\n\nexport const ON_CHANGE = 'ON_CHANGE';\nexport function onChange() {\n  return { type: ON_CHANGE };\n}\n\nexport const ON_SAVE = 'ON_SAVE';\nexport function onSave(lastModifiedTime) {\n  return { type: ON_SAVE, lastModifiedTime };\n}\n\nexport const SET_REFRESH_FREQUENCY = 'SET_REFRESH_FREQUENCY';\nexport function setRefreshFrequency(refreshFrequency, isPersistent = false) {\n  return { type: SET_REFRESH_FREQUENCY, refreshFrequency, isPersistent };\n}\n\nexport function saveDashboardRequestSuccess(lastModifiedTime) {\n  return dispatch => {\n    dispatch(onSave(lastModifiedTime));\n    // clear layout undo history\n    dispatch(UndoActionCreators.clearHistory());\n  };\n}\n\nexport function saveDashboardRequest(data, id, saveType) {\n  return (dispatch, getState) => {\n    dispatch({ type: UPDATE_COMPONENTS_PARENTS_LIST });\n\n    const { dashboardFilters, dashboardLayout } = getState();\n    const layout = dashboardLayout.present;\n    Object.values(dashboardFilters).forEach(filter => {\n      const { chartId } = filter;\n      const componentId = filter.directPathToFilter.slice().pop();\n      const directPathToFilter = (layout[componentId]?.parents || []).slice();\n      directPathToFilter.push(componentId);\n      dispatch(updateDirectPathToFilter(chartId, directPathToFilter));\n    });\n    // serialize selected values for each filter field, grouped by filter id\n    const serializedFilters = serializeActiveFilterValues(getActiveFilters());\n    // serialize filter scope for each filter field, grouped by filter id\n    const serializedFilterScopes = serializeFilterScopes(dashboardFilters);\n    const {\n      certified_by,\n      certification_details,\n      css,\n      dashboard_title,\n      owners,\n      roles,\n      slug,\n    } = data;\n\n    const hasId = item => item.id !== undefined;\n\n    // making sure the data is what the backend expects\n    const cleanedData = {\n      ...data,\n      certified_by: certified_by || '',\n      certification_details:\n        certified_by && certification_details ? certification_details : '',\n      css: css || '',\n      dashboard_title: dashboard_title || t('[ untitled dashboard ]'),\n      owners: ensureIsArray(owners).map(o => (hasId(o) ? o.id : o)),\n      roles: !isFeatureEnabled(FeatureFlag.DASHBOARD_RBAC)\n        ? undefined\n        : ensureIsArray(roles).map(r => (hasId(r) ? r.id : r)),\n      slug: slug || null,\n      metadata: {\n        ...data.metadata,\n        color_namespace: data.metadata?.color_namespace || undefined,\n        color_scheme: data.metadata?.color_scheme || '',\n        expanded_slices: data.metadata?.expanded_slices || {},\n        label_colors: data.metadata?.label_colors || {},\n        shared_label_colors: data.metadata?.shared_label_colors || {},\n        refresh_frequency: data.metadata?.refresh_frequency || 0,\n        timed_refresh_immune_slices:\n          data.metadata?.timed_refresh_immune_slices || [],\n      },\n    };\n\n    const handleChartConfiguration = () => {\n      const {\n        dashboardInfo: {\n          metadata: { chart_configuration = {} },\n        },\n      } = getState();\n      const chartConfiguration = Object.values(chart_configuration).reduce(\n        (prev, next) => {\n          // If chart removed from dashboard - remove it from metadata\n          if (\n            Object.values(layout).find(\n              layoutItem => layoutItem?.meta?.chartId === next.id,\n            )\n          ) {\n            return { ...prev, [next.id]: next };\n          }\n          return prev;\n        },\n        {},\n      );\n      return chartConfiguration;\n    };\n\n    const onCopySuccess = response => {\n      const lastModifiedTime = response.json.last_modified_time;\n      if (lastModifiedTime) {\n        dispatch(saveDashboardRequestSuccess(lastModifiedTime));\n      }\n      if (isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS)) {\n        const chartConfiguration = handleChartConfiguration();\n        dispatch(setChartConfiguration(chartConfiguration));\n      }\n      dispatch(addSuccessToast(t('This dashboard was saved successfully.')));\n      return response;\n    };\n\n    const onUpdateSuccess = response => {\n      const updatedDashboard = response.json.result;\n      const lastModifiedTime = response.json.last_modified_time;\n      // synching with the backend transformations of the metadata\n      if (updatedDashboard.json_metadata) {\n        const metadata = JSON.parse(updatedDashboard.json_metadata);\n        dispatch(\n          dashboardInfoChanged({\n            metadata,\n          }),\n        );\n        if (metadata.chart_configuration) {\n          dispatch({\n            type: SET_CHART_CONFIG_COMPLETE,\n            chartConfiguration: metadata.chart_configuration,\n          });\n        }\n        if (metadata.native_filter_configuration) {\n          dispatch({\n            type: SET_FILTER_CONFIG_COMPLETE,\n            filterConfig: metadata.native_filter_configuration,\n          });\n        }\n      }\n      if (lastModifiedTime) {\n        dispatch(saveDashboardRequestSuccess(lastModifiedTime));\n      }\n      // redirect to the new slug or id\n      window.history.pushState(\n        { event: 'dashboard_properties_changed' },\n        '',\n        `/superset/dashboard/${slug || id}/`,\n      );\n\n      dispatch(addSuccessToast(t('This dashboard was saved successfully.')));\n      return response;\n    };\n\n    const onError = async response => {\n      const { error, message } = await getClientErrorObject(response);\n      let errorText = t('Sorry, an unknown error occurred');\n\n      if (error) {\n        errorText = t(\n          'Sorry, there was an error saving this dashboard: %s',\n          error,\n        );\n      }\n      if (typeof message === 'string' && message === 'Forbidden') {\n        errorText = t('You do not have permission to edit this dashboard');\n      }\n      dispatch(addDangerToast(errorText));\n    };\n\n    if (saveType === SAVE_TYPE_OVERWRITE) {\n      let chartConfiguration = {};\n      if (isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS)) {\n        chartConfiguration = handleChartConfiguration();\n      }\n      const updatedDashboard = {\n        certified_by: cleanedData.certified_by,\n        certification_details: cleanedData.certification_details,\n        css: cleanedData.css,\n        dashboard_title: cleanedData.dashboard_title,\n        slug: cleanedData.slug,\n        owners: cleanedData.owners,\n        roles: cleanedData.roles,\n        json_metadata: safeStringify({\n          ...(cleanedData?.metadata || {}),\n          default_filters: safeStringify(serializedFilters),\n          filter_scopes: serializedFilterScopes,\n          chart_configuration: chartConfiguration,\n        }),\n      };\n\n      return SupersetClient.put({\n        endpoint: `/api/v1/dashboard/${id}`,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updatedDashboard),\n      })\n        .then(response => onUpdateSuccess(response))\n        .catch(response => onError(response));\n    }\n    // changing the data as the endpoint requires\n    const copyData = { ...cleanedData };\n    if (copyData.metadata) {\n      delete copyData.metadata;\n    }\n    const finalCopyData = {\n      ...copyData,\n      // the endpoint is expecting the metadata to be flat\n      ...(cleanedData?.metadata || {}),\n    };\n    return SupersetClient.post({\n      endpoint: `/superset/copy_dash/${id}/`,\n      postPayload: {\n        data: {\n          ...finalCopyData,\n          default_filters: safeStringify(serializedFilters),\n          filter_scopes: safeStringify(serializedFilterScopes),\n        },\n      },\n    })\n      .then(response => onCopySuccess(response))\n      .catch(response => onError(response));\n  };\n}\n\nexport function fetchCharts(\n  chartList = [],\n  force = false,\n  interval = 0,\n  dashboardId,\n) {\n  return (dispatch, getState) => {\n    if (!interval) {\n      chartList.forEach(chartKey =>\n        dispatch(refreshChart(chartKey, force, dashboardId)),\n      );\n      return;\n    }\n\n    const { metadata: meta } = getState().dashboardInfo;\n    const refreshTime = Math.max(interval, meta.stagger_time || 5000); // default 5 seconds\n    if (typeof meta.stagger_refresh !== 'boolean') {\n      meta.stagger_refresh =\n        meta.stagger_refresh === undefined\n          ? true\n          : meta.stagger_refresh === 'true';\n    }\n    const delay = meta.stagger_refresh\n      ? refreshTime / (chartList.length - 1)\n      : 0;\n    chartList.forEach((chartKey, i) => {\n      setTimeout(\n        () => dispatch(refreshChart(chartKey, force, dashboardId)),\n        delay * i,\n      );\n    });\n  };\n}\n\nconst refreshCharts = (chartList, force, interval, dashboardId, dispatch) =>\n  new Promise(resolve => {\n    dispatch(fetchCharts(chartList, force, interval, dashboardId));\n    resolve();\n  });\n\nexport const ON_FILTERS_REFRESH = 'ON_FILTERS_REFRESH';\nexport function onFiltersRefresh() {\n  return { type: ON_FILTERS_REFRESH };\n}\n\nexport const ON_FILTERS_REFRESH_SUCCESS = 'ON_FILTERS_REFRESH_SUCCESS';\nexport function onFiltersRefreshSuccess() {\n  return { type: ON_FILTERS_REFRESH_SUCCESS };\n}\n\nexport const ON_REFRESH_SUCCESS = 'ON_REFRESH_SUCCESS';\nexport function onRefreshSuccess() {\n  return { type: ON_REFRESH_SUCCESS };\n}\n\nexport const ON_REFRESH = 'ON_REFRESH';\nexport function onRefresh(\n  chartList = [],\n  force = false,\n  interval = 0,\n  dashboardId,\n) {\n  return dispatch => {\n    dispatch({ type: ON_REFRESH });\n    refreshCharts(chartList, force, interval, dashboardId, dispatch).then(\n      () => {\n        dispatch(onRefreshSuccess());\n        dispatch(onFiltersRefresh());\n      },\n    );\n  };\n}\n\nexport const SHOW_BUILDER_PANE = 'SHOW_BUILDER_PANE';\nexport function showBuilderPane() {\n  return { type: SHOW_BUILDER_PANE };\n}\n\nexport function addSliceToDashboard(id, component) {\n  return (dispatch, getState) => {\n    const { sliceEntities } = getState();\n    const selectedSlice = sliceEntities.slices[id];\n    if (!selectedSlice) {\n      return dispatch(\n        addWarningToast(\n          'Sorry, there is no chart definition associated with the chart trying to be added.',\n        ),\n      );\n    }\n    const form_data = {\n      ...selectedSlice.form_data,\n      slice_id: selectedSlice.slice_id,\n    };\n    const newChart = {\n      ...initChart,\n      id,\n      form_data,\n      formData: applyDefaultFormData(form_data),\n    };\n\n    return Promise.all([\n      dispatch(addChart(newChart, id)),\n      dispatch(fetchDatasourceMetadata(form_data.datasource)),\n    ]).then(() => {\n      dispatch(addSlice(selectedSlice));\n\n      if (selectedSlice && selectedSlice.viz_type === 'filter_box') {\n        dispatch(addFilter(id, component, selectedSlice.form_data));\n      }\n    });\n  };\n}\n\nexport function postAddSliceFromDashboard() {\n  return (dispatch, getState) => {\n    const {\n      dashboardInfo: { metadata },\n      dashboardState,\n    } = getState();\n\n    if (dashboardState?.updateSlice && dashboardState?.editMode) {\n      metadata.shared_label_colors = getSharedLabelColor().getColorMap(\n        metadata?.color_namespace,\n        metadata?.color_scheme,\n      );\n      dispatch(\n        dashboardInfoChanged({\n          metadata,\n        }),\n      );\n      dispatch(resetSlice());\n    }\n  };\n}\n\nexport function removeSliceFromDashboard(id) {\n  return (dispatch, getState) => {\n    const sliceEntity = getState().sliceEntities.slices[id];\n    if (sliceEntity && sliceEntity.viz_type === 'filter_box') {\n      dispatch(removeFilter(id));\n    }\n\n    dispatch(removeSlice(id));\n    dispatch(removeChart(id));\n\n    const {\n      dashboardInfo: { metadata },\n    } = getState();\n    getSharedLabelColor().removeSlice(id);\n    metadata.shared_label_colors = getSharedLabelColor().getColorMap(\n      metadata?.color_namespace,\n      metadata?.color_scheme,\n    );\n    dispatch(\n      dashboardInfoChanged({\n        metadata,\n      }),\n    );\n  };\n}\n\nexport const SET_COLOR_SCHEME = 'SET_COLOR_SCHEME';\nexport function setColorScheme(colorScheme) {\n  return { type: SET_COLOR_SCHEME, colorScheme };\n}\n\nexport function setColorSchemeAndUnsavedChanges(colorScheme) {\n  return dispatch => {\n    dispatch(setColorScheme(colorScheme));\n    dispatch(setUnsavedChanges(true));\n  };\n}\n\nexport const SET_DIRECT_PATH = 'SET_DIRECT_PATH';\nexport function setDirectPathToChild(path) {\n  return { type: SET_DIRECT_PATH, path };\n}\n\nexport const SET_ACTIVE_TABS = 'SET_ACTIVE_TABS';\nexport function setActiveTabs(tabId, prevTabId) {\n  return { type: SET_ACTIVE_TABS, tabId, prevTabId };\n}\n\nexport const SET_FOCUSED_FILTER_FIELD = 'SET_FOCUSED_FILTER_FIELD';\nexport function setFocusedFilterField(chartId, column) {\n  return { type: SET_FOCUSED_FILTER_FIELD, chartId, column };\n}\n\nexport const UNSET_FOCUSED_FILTER_FIELD = 'UNSET_FOCUSED_FILTER_FIELD';\nexport function unsetFocusedFilterField(chartId, column) {\n  return { type: UNSET_FOCUSED_FILTER_FIELD, chartId, column };\n}\n\nexport const SET_FULL_SIZE_CHART_ID = 'SET_FULL_SIZE_CHART_ID';\nexport function setFullSizeChartId(chartId) {\n  return { type: SET_FULL_SIZE_CHART_ID, chartId };\n}\n\n// Undo history ---------------------------------------------------------------\nexport const SET_MAX_UNDO_HISTORY_EXCEEDED = 'SET_MAX_UNDO_HISTORY_EXCEEDED';\nexport function setMaxUndoHistoryExceeded(maxUndoHistoryExceeded = true) {\n  return {\n    type: SET_MAX_UNDO_HISTORY_EXCEEDED,\n    payload: { maxUndoHistoryExceeded },\n  };\n}\n\nexport function maxUndoHistoryToast() {\n  return (dispatch, getState) => {\n    const { dashboardLayout } = getState();\n    const historyLength = dashboardLayout.past.length;\n\n    return dispatch(\n      addWarningToast(\n        `You have used all ${historyLength} undo slots and will not be able to fully undo subsequent actions. You may save your current state to reset the history.`,\n      ),\n    );\n  };\n}\n\nexport const SET_DATASETS_STATUS = 'SET_DATASETS_STATUS';\nexport function setDatasetsStatus(status) {\n  return {\n    type: SET_DATASETS_STATUS,\n    status,\n  };\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport default function serializeFilterScopes(dashboardFilters) {\n  return Object.values(dashboardFilters).reduce((map, { chartId, scopes }) => {\n    const scopesById = Object.keys(scopes).reduce(\n      (scopesByColumn, column) => ({\n        ...scopesByColumn,\n        [column]: scopes[column],\n      }),\n      {},\n    );\n\n    return {\n      ...map,\n      [chartId]: scopesById,\n    };\n  }, {});\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nfunction findParentId({ childId, layout = {} }) {\n  let parentId = null;\n\n  const ids = Object.keys(layout);\n  for (let i = 0; i <= ids.length - 1; i += 1) {\n    const id = ids[i];\n    const component = layout[id] || {};\n    if (\n      id !== childId &&\n      component.children &&\n      component.children.includes(childId)\n    ) {\n      parentId = id;\n      break;\n    }\n  }\n\n  return parentId;\n}\n\nconst cache = {};\nexport default function findParentIdWithCache({ childId, layout = {} }) {\n  if (cache[childId]) {\n    const lastParent = layout[cache[childId]] || {};\n    if (lastParent.children && lastParent.children.includes(childId)) {\n      return lastParent.id;\n    }\n  }\n  cache[childId] = findParentId({ childId, layout });\n  return cache[childId];\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { NEW_COMPONENTS_SOURCE_ID } from './constants';\nimport findParentId from './findParentId';\nimport getDetailedComponentWidth from './getDetailedComponentWidth';\nimport newComponentFactory from './newComponentFactory';\n\nexport default function getComponentWidthFromDrop({\n  dropResult,\n  layout: components,\n}) {\n  const { source, destination, dragging } = dropResult;\n\n  const isNewComponent = source.id === NEW_COMPONENTS_SOURCE_ID;\n  const component = isNewComponent\n    ? newComponentFactory(dragging.type)\n    : components[dragging.id] || {};\n\n  // moving a component within the same container shouldn't change its width\n  if (source.id === destination.id) {\n    return component.meta.width;\n  }\n\n  const { width: draggingWidth, minimumWidth: minDraggingWidth } =\n    getDetailedComponentWidth({\n      component,\n      components,\n    });\n\n  const { width: destinationWidth, occupiedWidth: draggingOccupiedWidth } =\n    getDetailedComponentWidth({\n      id: destination.id,\n      components,\n    });\n\n  let destinationCapacity = Number(destinationWidth - draggingOccupiedWidth);\n\n  if (Number.isNaN(destinationCapacity)) {\n    const { width: grandparentWidth, occupiedWidth: grandparentOccupiedWidth } =\n      getDetailedComponentWidth({\n        id: findParentId({\n          childId: destination.id,\n          layout: components,\n        }),\n        components,\n      });\n\n    destinationCapacity = Number(grandparentWidth - grandparentOccupiedWidth);\n  }\n\n  if (\n    Number.isNaN(destinationCapacity) ||\n    Number.isNaN(Number(draggingWidth))\n  ) {\n    return draggingWidth;\n  }\n  if (destinationCapacity >= draggingWidth) {\n    return draggingWidth;\n  }\n  if (destinationCapacity >= minDraggingWidth) {\n    return destinationCapacity;\n  }\n\n  return -1;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport findParentId from './findParentId';\nimport { GRID_MIN_COLUMN_COUNT, GRID_COLUMN_COUNT } from './constants';\nimport {\n  ROW_TYPE,\n  COLUMN_TYPE,\n  MARKDOWN_TYPE,\n  CHART_TYPE,\n  DYNAMIC_TYPE,\n} from './componentTypes';\n\nfunction getTotalChildWidth({ id, components }) {\n  const component = components[id];\n  if (!component) return 0;\n\n  let width = 0;\n\n  (component.children || []).forEach(childId => {\n    const child = components[childId] || {};\n    width += (child.meta || {}).width || 0;\n  });\n\n  return width;\n}\n\nexport default function getDetailedComponentWidth({\n  // pass either an id, or a component\n  id,\n  component: passedComponent,\n  components = {},\n}) {\n  const result = {\n    width: undefined,\n    occupiedWidth: undefined,\n    minimumWidth: undefined,\n  };\n\n  const component = passedComponent || components[id];\n  if (!component) return result;\n\n  // note these remain as undefined if the component has no defined width\n  result.width = (component.meta || {}).width;\n  result.occupiedWidth = result.width;\n\n  if (component.type === ROW_TYPE) {\n    // not all rows have width 12, e\n    result.width =\n      getDetailedComponentWidth({\n        id: findParentId({\n          childId: component.id,\n          layout: components,\n        }),\n        components,\n      }).width || GRID_COLUMN_COUNT;\n    result.occupiedWidth = getTotalChildWidth({ id: component.id, components });\n    result.minimumWidth = result.occupiedWidth || GRID_MIN_COLUMN_COUNT;\n  } else if (component.type === COLUMN_TYPE) {\n    // find the width of the largest child, only rows count\n    result.minimumWidth = GRID_MIN_COLUMN_COUNT;\n    result.occupiedWidth = 0;\n    (component.children || []).forEach(childId => {\n      // rows don't have widths, so find the width of its children\n      if (components[childId].type === ROW_TYPE) {\n        result.minimumWidth = Math.max(\n          result.minimumWidth,\n          getTotalChildWidth({ id: childId, components }),\n        );\n      }\n    });\n  } else if (\n    component.type === DYNAMIC_TYPE ||\n    component.type === MARKDOWN_TYPE ||\n    component.type === CHART_TYPE\n  ) {\n    result.minimumWidth = GRID_MIN_COLUMN_COUNT;\n  }\n\n  return result;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { t, SupersetClient } from '@superset-ui/core';\nimport rison from 'rison';\nimport {\n  addDangerToast,\n  addSuccessToast,\n} from 'src/components/MessageToasts/actions';\n\nexport const SET_REPORT = 'SET_REPORT';\nexport function setReport(report, resourceId, creationMethod, filterField) {\n  return { type: SET_REPORT, report, resourceId, creationMethod, filterField };\n}\n\nexport function fetchUISpecificReport({\n  userId,\n  filterField,\n  creationMethod,\n  resourceId,\n}) {\n  const queryParams = rison.encode({\n    filters: [\n      {\n        col: filterField,\n        opr: 'eq',\n        value: resourceId,\n      },\n      {\n        col: 'creation_method',\n        opr: 'eq',\n        value: creationMethod,\n      },\n      {\n        col: 'created_by',\n        opr: 'rel_o_m',\n        value: userId,\n      },\n    ],\n  });\n  return function fetchUISpecificReportThunk(dispatch) {\n    return SupersetClient.get({\n      endpoint: `/api/v1/report/?q=${queryParams}`,\n    })\n      .then(({ json }) => {\n        dispatch(setReport(json, resourceId, creationMethod, filterField));\n      })\n      .catch(() =>\n        dispatch(\n          addDangerToast(\n            t(\n              'There was an issue fetching reports attached to this dashboard.',\n            ),\n          ),\n        ),\n      );\n  };\n}\n\nconst structureFetchAction = (dispatch, getState) => {\n  const state = getState();\n  const { user, dashboardInfo, charts, explore } = state;\n  if (dashboardInfo) {\n    dispatch(\n      fetchUISpecificReport({\n        userId: user.userId,\n        filterField: 'dashboard_id',\n        creationMethod: 'dashboards',\n        resourceId: dashboardInfo.id,\n      }),\n    );\n  } else {\n    const [chartArr] = Object.keys(charts);\n    dispatch(\n      fetchUISpecificReport({\n        userId: explore.user.userId,\n        filterField: 'chart_id',\n        creationMethod: 'charts',\n        resourceId: charts[chartArr].id,\n      }),\n    );\n  }\n};\n\nexport const ADD_REPORT = 'ADD_REPORT';\n\nexport const addReport = report => dispatch =>\n  SupersetClient.post({\n    endpoint: `/api/v1/report/`,\n    jsonPayload: report,\n  }).then(({ json }) => {\n    dispatch({ type: ADD_REPORT, json });\n    dispatch(addSuccessToast(t('The report has been created')));\n  });\n\nexport const EDIT_REPORT = 'EDIT_REPORT';\n\nexport const editReport = (id, report) => dispatch =>\n  SupersetClient.put({\n    endpoint: `/api/v1/report/${id}`,\n    jsonPayload: report,\n  }).then(({ json }) => {\n    dispatch({ type: EDIT_REPORT, json });\n    dispatch(addSuccessToast(t('Report updated')));\n  });\n\nexport function toggleActive(report, isActive) {\n  return function toggleActiveThunk(dispatch) {\n    return SupersetClient.put({\n      endpoint: encodeURI(`/api/v1/report/${report.id}`),\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        active: isActive,\n      }),\n    })\n      .catch(() => {\n        dispatch(\n          addDangerToast(\n            t('We were unable to active or deactivate this report.'),\n          ),\n        );\n      })\n      .finally(() => {\n        dispatch(structureFetchAction);\n      });\n  };\n}\n\nexport function deleteActiveReport(report) {\n  return function deleteActiveReportThunk(dispatch) {\n    return SupersetClient.delete({\n      endpoint: encodeURI(`/api/v1/report/${report.id}`),\n    })\n      .catch(() => {\n        dispatch(addDangerToast(t('Your report could not be deleted')));\n      })\n      .finally(() => {\n        dispatch(structureFetchAction);\n        dispatch(addSuccessToast(t('Deleted: %s', report.name)));\n      });\n  };\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { createContext, useContext, useState } from 'react';\nimport { URL_PARAMS } from 'src/constants';\nimport { getUrlParam } from 'src/utils/urlUtils';\n\ninterface UiConfigType {\n  hideTitle: boolean;\n  hideTab: boolean;\n  hideNav: boolean;\n  hideChartControls: boolean;\n}\ninterface EmbeddedUiConfigProviderProps {\n  children: JSX.Element;\n}\n\nexport const UiConfigContext = createContext<UiConfigType>({\n  hideTitle: false,\n  hideTab: false,\n  hideNav: false,\n  hideChartControls: false,\n});\n\nexport const useUiConfig = () => useContext(UiConfigContext);\n\nexport const EmbeddedUiConfigProvider: React.FC<EmbeddedUiConfigProviderProps> =\n  ({ children }) => {\n    const config = getUrlParam(URL_PARAMS.uiConfig) || 0;\n    const [embeddedConfig] = useState({\n      hideTitle: (config & 1) !== 0,\n      hideTab: (config & 2) !== 0,\n      hideNav: (config & 4) !== 0,\n      hideChartControls: (config & 8) !== 0,\n    });\n\n    return (\n      <UiConfigContext.Provider value={embeddedConfig}>\n        {children}\n      </UiConfigContext.Provider>\n    );\n  };\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  COLUMN_TYPE,\n  CHART_TYPE,\n  MARKDOWN_TYPE,\n  DYNAMIC_TYPE,\n} from './componentTypes';\n\nexport default function componentIsResizable(entity: { type: string }) {\n  return (\n    [COLUMN_TYPE, CHART_TYPE, MARKDOWN_TYPE, DYNAMIC_TYPE].indexOf(\n      entity.type,\n    ) > -1\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport default function updateComponentParentsList({\n  currentComponent,\n  layout = {},\n}) {\n  if (currentComponent && layout[currentComponent.id]) {\n    const parentsList = (currentComponent.parents || []).slice();\n    parentsList.push(currentComponent.id);\n\n    currentComponent.children.forEach(childId => {\n      layout[childId].parents = parentsList; // eslint-disable-line no-param-reassign\n      updateComponentParentsList({\n        currentComponent: layout[childId],\n        layout,\n      });\n    });\n  }\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  DASHBOARD_GRID_TYPE,\n  CHART_TYPE,\n  COLUMN_TYPE,\n  MARKDOWN_TYPE,\n  TAB_TYPE,\n} from './componentTypes';\n\nconst typeToWrapChildLookup = {\n  [DASHBOARD_GRID_TYPE]: {\n    [CHART_TYPE]: true,\n    [COLUMN_TYPE]: true,\n    [MARKDOWN_TYPE]: true,\n  },\n\n  [TAB_TYPE]: {\n    [CHART_TYPE]: true,\n    [COLUMN_TYPE]: true,\n    [MARKDOWN_TYPE]: true,\n  },\n};\n\nexport default function shouldWrapChildInRow({ parentType, childType }) {\n  if (!parentType || !childType) return false;\n\n  const wrapChildLookup = typeToWrapChildLookup[parentType];\n  if (!wrapChildLookup) return false;\n\n  return Boolean(wrapChildLookup[childType]);\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport componentIsResizable from './componentIsResizable';\nimport shouldWrapChildInRow from './shouldWrapChildInRow';\nimport newComponentFactory from './newComponentFactory';\nimport getComponentWidthFromDrop from './getComponentWidthFromDrop';\n\nimport { ROW_TYPE, TABS_TYPE, TAB_TYPE } from './componentTypes';\n\nexport default function newEntitiesFromDrop({ dropResult, layout }) {\n  const { dragging, destination } = dropResult;\n\n  const dragType = dragging.type;\n  const dropEntity = layout[destination.id];\n  const dropType = dropEntity.type;\n  let newDropChild = newComponentFactory(dragType, dragging.meta);\n  newDropChild.parents = (dropEntity.parents || []).concat(dropEntity.id);\n\n  if (componentIsResizable(dragging)) {\n    newDropChild.meta.width = // don't set a 0 width\n      getComponentWidthFromDrop({ dropResult, layout }) || undefined;\n  }\n\n  const wrapChildInRow = shouldWrapChildInRow({\n    parentType: dropType,\n    childType: dragType,\n  });\n\n  const newEntities = {\n    [newDropChild.id]: newDropChild,\n  };\n\n  if (wrapChildInRow) {\n    const rowWrapper = newComponentFactory(ROW_TYPE);\n    rowWrapper.children = [newDropChild.id];\n    rowWrapper.parents = (dropEntity.parents || []).concat(dropEntity.id);\n    newEntities[rowWrapper.id] = rowWrapper;\n    newDropChild.parents = rowWrapper.parents.concat(rowWrapper.id);\n    newDropChild = rowWrapper;\n  } else if (dragType === TABS_TYPE) {\n    // create a new tab component\n    const tabChild = newComponentFactory(TAB_TYPE);\n    tabChild.parents = (dropEntity.parents || []).concat(dropEntity.id);\n    newDropChild.children = [tabChild.id];\n    newEntities[tabChild.id] = tabChild;\n  }\n\n  const nextDropChildren = [...dropEntity.children];\n  nextDropChildren.splice(destination.index, 0, newDropChild.id);\n\n  newEntities[destination.id] = {\n    ...dropEntity,\n    children: nextDropChildren,\n  };\n\n  return newEntities;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  DASHBOARD_ROOT_ID,\n  DASHBOARD_GRID_ID,\n  NEW_COMPONENTS_SOURCE_ID,\n  DASHBOARD_HEADER_ID,\n} from '../util/constants';\nimport componentIsResizable from '../util/componentIsResizable';\nimport findParentId from '../util/findParentId';\nimport getComponentWidthFromDrop from '../util/getComponentWidthFromDrop';\nimport updateComponentParentsList from '../util/updateComponentParentsList';\nimport newComponentFactory from '../util/newComponentFactory';\nimport newEntitiesFromDrop from '../util/newEntitiesFromDrop';\nimport reorderItem from '../util/dnd-reorder';\nimport shouldWrapChildInRow from '../util/shouldWrapChildInRow';\nimport { ROW_TYPE, TAB_TYPE, TABS_TYPE } from '../util/componentTypes';\n\nimport {\n  UPDATE_COMPONENTS,\n  UPDATE_COMPONENTS_PARENTS_LIST,\n  DELETE_COMPONENT,\n  CREATE_COMPONENT,\n  MOVE_COMPONENT,\n  CREATE_TOP_LEVEL_TABS,\n  DELETE_TOP_LEVEL_TABS,\n  DASHBOARD_TITLE_CHANGED,\n} from '../actions/dashboardLayout';\n\nimport { HYDRATE_DASHBOARD } from '../actions/hydrate';\n\nconst actionHandlers = {\n  [HYDRATE_DASHBOARD](state, action) {\n    return {\n      ...action.data.dashboardLayout.present,\n    };\n  },\n\n  [UPDATE_COMPONENTS](state, action) {\n    const {\n      payload: { nextComponents },\n    } = action;\n    return {\n      ...state,\n      ...nextComponents,\n    };\n  },\n\n  [DELETE_COMPONENT](state, action) {\n    const {\n      payload: { id, parentId },\n    } = action;\n\n    if (!parentId || !id || !state[id] || !state[parentId]) return state;\n\n    const nextComponents = { ...state };\n\n    function recursivelyDeleteChildren(componentId, componentParentId) {\n      // delete child and it's children\n      const component = nextComponents[componentId];\n      delete nextComponents[componentId];\n\n      const { children = [] } = component;\n      children.forEach(childId => {\n        recursivelyDeleteChildren(childId, componentId);\n      });\n\n      const parent = nextComponents[componentParentId];\n      if (parent) {\n        // may have been deleted in another recursion\n        const componentIndex = (parent.children || []).indexOf(componentId);\n        if (componentIndex > -1) {\n          const nextChildren = [...parent.children];\n          nextChildren.splice(componentIndex, 1);\n          nextComponents[componentParentId] = {\n            ...parent,\n            children: nextChildren,\n          };\n        }\n      }\n    }\n\n    recursivelyDeleteChildren(id, parentId);\n    const nextParent = nextComponents[parentId];\n    if (nextParent.type === ROW_TYPE && nextParent.children.length === 0) {\n      const grandparentId = findParentId({\n        childId: parentId,\n        layout: nextComponents,\n      });\n      recursivelyDeleteChildren(parentId, grandparentId);\n    }\n\n    return nextComponents;\n  },\n\n  [CREATE_COMPONENT](state, action) {\n    const {\n      payload: { dropResult },\n    } = action;\n\n    const newEntities = newEntitiesFromDrop({ dropResult, layout: state });\n\n    return {\n      ...state,\n      ...newEntities,\n    };\n  },\n\n  [MOVE_COMPONENT](state, action) {\n    const {\n      payload: { dropResult },\n    } = action;\n    const { source, destination, dragging } = dropResult;\n\n    if (!source || !destination || !dragging) return state;\n\n    const nextEntities = reorderItem({\n      entitiesMap: state,\n      source,\n      destination,\n    });\n\n    if (componentIsResizable(nextEntities[dragging.id])) {\n      // update component width if it changed\n      const nextWidth =\n        getComponentWidthFromDrop({\n          dropResult,\n          layout: state,\n        }) || undefined; // don't set a 0 width\n      if ((nextEntities[dragging.id].meta || {}).width !== nextWidth) {\n        nextEntities[dragging.id] = {\n          ...nextEntities[dragging.id],\n          meta: {\n            ...nextEntities[dragging.id].meta,\n            width: nextWidth,\n          },\n        };\n      }\n    }\n\n    // wrap the dragged component in a row depending on destination type\n    const wrapInRow = shouldWrapChildInRow({\n      parentType: destination.type,\n      childType: dragging.type,\n    });\n\n    if (wrapInRow) {\n      const destinationEntity = nextEntities[destination.id];\n      const destinationChildren = destinationEntity.children;\n      const newRow = newComponentFactory(ROW_TYPE);\n      newRow.children = [destinationChildren[destination.index]];\n      newRow.parents = (destinationEntity.parents || []).concat(destination.id);\n      destinationChildren[destination.index] = newRow.id;\n      nextEntities[newRow.id] = newRow;\n    }\n\n    return {\n      ...state,\n      ...nextEntities,\n    };\n  },\n\n  [CREATE_TOP_LEVEL_TABS](state, action) {\n    const {\n      payload: { dropResult },\n    } = action;\n    const { source, dragging } = dropResult;\n\n    // move children of current root to be children of the dragging tab\n    const rootComponent = state[DASHBOARD_ROOT_ID];\n    const topLevelId = rootComponent.children[0];\n    const topLevelComponent = state[topLevelId];\n\n    if (source.id !== NEW_COMPONENTS_SOURCE_ID) {\n      // component already exists\n      const draggingTabs = state[dragging.id];\n      const draggingTabId = draggingTabs.children[0];\n      const draggingTab = state[draggingTabId];\n\n      // move all children except the one that is dragging\n      const childrenToMove = [...topLevelComponent.children].filter(\n        id => id !== dragging.id,\n      );\n\n      return {\n        ...state,\n        [DASHBOARD_ROOT_ID]: {\n          ...rootComponent,\n          children: [dragging.id],\n        },\n        [topLevelId]: {\n          ...topLevelComponent,\n          children: [],\n        },\n        [draggingTabId]: {\n          ...draggingTab,\n          children: [...draggingTab.children, ...childrenToMove],\n        },\n      };\n    }\n\n    // create new component\n    const newEntities = newEntitiesFromDrop({ dropResult, layout: state });\n    const newEntitiesArray = Object.values(newEntities);\n    const tabComponent = newEntitiesArray.find(\n      component => component.type === TAB_TYPE,\n    );\n    const tabsComponent = newEntitiesArray.find(\n      component => component.type === TABS_TYPE,\n    );\n\n    tabComponent.children = [...topLevelComponent.children];\n    newEntities[topLevelId] = { ...topLevelComponent, children: [] };\n    newEntities[DASHBOARD_ROOT_ID] = {\n      ...rootComponent,\n      children: [tabsComponent.id],\n    };\n\n    return {\n      ...state,\n      ...newEntities,\n    };\n  },\n\n  [DELETE_TOP_LEVEL_TABS](state) {\n    const rootComponent = state[DASHBOARD_ROOT_ID];\n    const topLevelId = rootComponent.children[0];\n    const topLevelTabs = state[topLevelId];\n\n    if (topLevelTabs.type !== TABS_TYPE) return state;\n\n    let childrenToMove = [];\n    const nextEntities = { ...state };\n\n    topLevelTabs.children.forEach(tabId => {\n      const tabComponent = state[tabId];\n      childrenToMove = [...childrenToMove, ...tabComponent.children];\n      delete nextEntities[tabId];\n    });\n\n    delete nextEntities[topLevelId];\n\n    nextEntities[DASHBOARD_ROOT_ID] = {\n      ...rootComponent,\n      children: [DASHBOARD_GRID_ID],\n    };\n\n    nextEntities[DASHBOARD_GRID_ID] = {\n      ...state[DASHBOARD_GRID_ID],\n      children: childrenToMove,\n    };\n\n    return nextEntities;\n  },\n\n  [UPDATE_COMPONENTS_PARENTS_LIST](state) {\n    const nextState = {\n      ...state,\n    };\n\n    updateComponentParentsList({\n      currentComponent: nextState[DASHBOARD_ROOT_ID],\n      layout: nextState,\n    });\n\n    return {\n      ...nextState,\n    };\n  },\n\n  [DASHBOARD_TITLE_CHANGED](state, action) {\n    return {\n      ...state,\n      [DASHBOARD_HEADER_ID]: {\n        ...state[DASHBOARD_HEADER_ID],\n        meta: {\n          ...state[DASHBOARD_HEADER_ID].meta,\n          text: action.text,\n        },\n      },\n    };\n  },\n};\n\nexport default function layoutReducer(state = {}, action) {\n  if (action.type in actionHandlers) {\n    const handler = actionHandlers[action.type];\n    return handler(state, action);\n  }\n\n  return state;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport function reorder(list, startIndex, endIndex) {\n  const result = [...list];\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n}\n\nexport default function reorderItem({ entitiesMap, source, destination }) {\n  const current = [...entitiesMap[source.id].children];\n  const next = [...entitiesMap[destination.id].children];\n  const target = current[source.index];\n\n  // moving to same list\n  if (source.id === destination.id) {\n    const reordered = reorder(current, source.index, destination.index);\n\n    const result = {\n      ...entitiesMap,\n      [source.id]: {\n        ...entitiesMap[source.id],\n        children: reordered,\n      },\n    };\n\n    return result;\n  }\n\n  // moving to different list\n  current.splice(source.index, 1); // remove from original\n  next.splice(destination.index, 0, target); // insert into next\n\n  const result = {\n    ...entitiesMap,\n    [source.id]: {\n      ...entitiesMap[source.id],\n      children: current,\n    },\n    [destination.id]: {\n      ...entitiesMap[destination.id],\n      children: next,\n    },\n  };\n\n  return result;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport undoable, { includeAction } from 'redux-undo';\nimport { UNDO_LIMIT } from '../util/constants';\nimport {\n  UPDATE_COMPONENTS,\n  DELETE_COMPONENT,\n  CREATE_COMPONENT,\n  CREATE_TOP_LEVEL_TABS,\n  DELETE_TOP_LEVEL_TABS,\n  RESIZE_COMPONENT,\n  MOVE_COMPONENT,\n  HANDLE_COMPONENT_DROP,\n} from '../actions/dashboardLayout';\n\nimport { HYDRATE_DASHBOARD } from '../actions/hydrate';\n\nimport dashboardLayout from './dashboardLayout';\n\nexport default undoable(dashboardLayout, {\n  // +1 because length of history seems max out at limit - 1\n  // +1 again so we can detect if we've exceeded the limit\n  limit: UNDO_LIMIT + 2,\n  ignoreInitialState: true,\n  filter: includeAction([\n    HYDRATE_DASHBOARD,\n    UPDATE_COMPONENTS,\n    DELETE_COMPONENT,\n    CREATE_COMPONENT,\n    CREATE_TOP_LEVEL_TABS,\n    DELETE_TOP_LEVEL_TABS,\n    RESIZE_COMPONENT,\n    MOVE_COMPONENT,\n    HANDLE_COMPONENT_DROP,\n  ]),\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { debounce } from 'lodash';\n\nclass DebouncedMessageQueue {\n  constructor({\n    callback = () => {},\n    sizeThreshold = 1000,\n    delayThreshold = 1000,\n  }) {\n    this.queue = [];\n    this.sizeThreshold = sizeThreshold;\n    this.delayThrehold = delayThreshold;\n\n    this.trigger = debounce(this.trigger.bind(this), this.delayThrehold);\n    this.callback = callback;\n  }\n\n  append(eventData) {\n    this.queue.push(eventData);\n    this.trigger();\n  }\n\n  trigger() {\n    if (this.queue.length > 0) {\n      const events = this.queue.splice(0, this.sizeThreshold);\n      this.callback.call(null, events);\n\n      // If there are remaining items, call it again.\n      if (this.queue.length > 0) {\n        this.trigger();\n      }\n    }\n  }\n}\n\nexport default DebouncedMessageQueue;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\n/* eslint prefer-const: 2 */\nimport shortid from 'shortid';\nimport { SupersetClient } from '@superset-ui/core';\n\nimport { safeStringify } from '../utils/safeStringify';\nimport { LOG_EVENT } from '../logger/actions';\nimport { LOG_EVENT_TYPE_TIMING } from '../logger/LogUtils';\nimport DebouncedMessageQueue from '../utils/DebouncedMessageQueue';\n\nconst LOG_ENDPOINT = '/superset/log/?explode=events';\nconst sendBeacon = events => {\n  if (events.length <= 0) {\n    return;\n  }\n\n  let endpoint = LOG_ENDPOINT;\n  const { source, source_id } = events[0];\n  // backend logs treat these request params as first-class citizens\n  if (source === 'dashboard') {\n    endpoint += `&dashboard_id=${source_id}`;\n  } else if (source === 'slice') {\n    endpoint += `&slice_id=${source_id}`;\n  }\n\n  if (navigator.sendBeacon) {\n    const formData = new FormData();\n    formData.append('events', safeStringify(events));\n    navigator.sendBeacon(endpoint, formData);\n  } else {\n    SupersetClient.post({\n      endpoint,\n      postPayload: { events },\n      parseMethod: null,\n    });\n  }\n};\n\n// beacon API has data size limit = 2^16.\n// assume avg each log entry has 2^6 characters\nconst MAX_EVENTS_PER_REQUEST = 1024;\nconst logMessageQueue = new DebouncedMessageQueue({\n  callback: sendBeacon,\n  sizeThreshold: MAX_EVENTS_PER_REQUEST,\n  delayThreshold: 1000,\n});\nlet lastEventId = 0;\nconst loggerMiddleware = store => next => action => {\n  if (action.type !== LOG_EVENT) {\n    return next(action);\n  }\n\n  const { dashboardInfo, explore, impressionId, dashboardLayout } =\n    store.getState();\n  let logMetadata = {\n    impression_id: impressionId,\n    version: 'v2',\n  };\n  if (dashboardInfo) {\n    logMetadata = {\n      source: 'dashboard',\n      source_id: dashboardInfo.id,\n      ...logMetadata,\n    };\n  } else if (explore) {\n    logMetadata = {\n      source: 'explore',\n      source_id: explore.slice ? explore.slice.slice_id : 0,\n      ...logMetadata,\n    };\n  }\n\n  const { eventName } = action.payload;\n  let { eventData = {} } = action.payload;\n  eventData = {\n    ...logMetadata,\n    ts: new Date().getTime(),\n    event_name: eventName,\n    ...eventData,\n  };\n  if (LOG_EVENT_TYPE_TIMING.has(eventName)) {\n    eventData = {\n      ...eventData,\n      event_type: 'timing',\n      trigger_event: lastEventId,\n    };\n  } else {\n    lastEventId = shortid.generate();\n    eventData = {\n      ...eventData,\n      event_type: 'user',\n      event_id: lastEventId,\n      visibility: document.visibilityState,\n    };\n  }\n\n  if (eventData.target_id && dashboardLayout?.present?.[eventData.target_id]) {\n    const { meta } = dashboardLayout.present[eventData.target_id];\n    // chart name or tab/header text\n    eventData.target_name = meta.chartId ? meta.sliceName : meta.text;\n  }\n\n  logMessageQueue.append(eventData);\n  return eventData;\n};\n\nexport default loggerMiddleware;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport messageToastReducer from 'src/components/MessageToasts/reducers';\nimport { initEnhancer } from 'src/reduxUtils';\nimport charts from 'src/components/Chart/chartReducer';\nimport dataMask from 'src/dataMask/reducer';\nimport reports from 'src/reports/reducers/reports';\nimport dashboardInfo from 'src/dashboard/reducers/dashboardInfo';\nimport dashboardState from 'src/dashboard/reducers/dashboardState';\nimport dashboardFilters from 'src/dashboard/reducers/dashboardFilters';\nimport nativeFilters from 'src/dashboard/reducers/nativeFilters';\nimport datasources from 'src/dashboard/reducers/datasources';\nimport sliceEntities from 'src/dashboard/reducers/sliceEntities';\nimport dashboardLayout from 'src/dashboard/reducers/undoableDashboardLayout';\nimport logger from 'src/middleware/loggerMiddleware';\nimport shortid from 'shortid';\nimport {\n  BootstrapUser,\n  UserWithPermissionsAndRoles,\n} from 'src/types/bootstrapTypes';\n\n// Some reducers don't do anything, and redux is just used to reference the initial \"state\".\n// This may change later, as the client application takes on more responsibilities.\nconst noopReducer =\n  <STATE = unknown>(initialState: STATE) =>\n  (state: STATE = initialState) =>\n    state;\n\nconst container = document.getElementById('app');\nconst bootstrap = JSON.parse(container?.getAttribute('data-bootstrap') ?? '{}');\n\n// reducers used only in the dashboard page\nconst dashboardReducers = {\n  charts,\n  datasources,\n  dashboardInfo,\n  dashboardFilters,\n  dataMask,\n  nativeFilters,\n  dashboardState,\n  dashboardLayout,\n  sliceEntities,\n  reports,\n};\n\nexport const USER_LOADED = 'USER_LOADED';\n\nexport type UserLoadedAction = {\n  type: typeof USER_LOADED;\n  user: UserWithPermissionsAndRoles;\n};\n\nconst userReducer = (\n  user: BootstrapUser = bootstrap.user || {},\n  action: UserLoadedAction,\n): BootstrapUser => {\n  if (action.type === USER_LOADED) {\n    return action.user;\n  }\n  return user;\n};\n\n// exported for tests\nexport const rootReducer = combineReducers({\n  messageToasts: messageToastReducer,\n  common: noopReducer(bootstrap.common || {}),\n  user: userReducer,\n  impressionId: noopReducer(shortid.generate()),\n  ...dashboardReducers,\n});\n\nexport const store = createStore(\n  rootReducer,\n  {},\n  compose(applyMiddleware(thunk, logger), initEnhancer(false)),\n);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { keyBy } from 'lodash';\nimport { DatasourcesState } from 'src/dashboard/types';\nimport {\n  DatasourcesActionPayload,\n  DatasourcesAction,\n} from '../actions/datasources';\n\nexport default function datasourcesReducer(\n  datasources: DatasourcesState | undefined,\n  action: DatasourcesActionPayload,\n) {\n  if (action.type === DatasourcesAction.SET_DATASOURCES) {\n    return {\n      ...datasources,\n      ...keyBy(action.datasources, 'uid'),\n    };\n  }\n  if (action.type === DatasourcesAction.SET_DATASOURCE) {\n    return {\n      ...datasources,\n      [action.key]: action.datasource,\n    };\n  }\n  return datasources || {};\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { DASHBOARD_INFO_UPDATED } from '../actions/dashboardInfo';\nimport { HYDRATE_DASHBOARD } from '../actions/hydrate';\n\nexport default function dashboardStateReducer(state = {}, action) {\n  switch (action.type) {\n    case DASHBOARD_INFO_UPDATED:\n      return {\n        ...state,\n        ...action.newInfo,\n        // server-side compare last_modified_time in second level\n        last_modified_time: Math.round(new Date().getTime() / 1000),\n      };\n    case HYDRATE_DASHBOARD:\n      return {\n        ...state,\n        ...action.data.dashboardInfo,\n        // set async api call data\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\nimport {\n  ADD_SLICE,\n  ON_CHANGE,\n  ON_SAVE,\n  REMOVE_SLICE,\n  SET_COLOR_SCHEME,\n  SET_EDIT_MODE,\n  SET_MAX_UNDO_HISTORY_EXCEEDED,\n  SET_UNSAVED_CHANGES,\n  SHOW_BUILDER_PANE,\n  TOGGLE_EXPAND_SLICE,\n  TOGGLE_FAVE_STAR,\n  TOGGLE_PUBLISHED,\n  UPDATE_CSS,\n  SET_REFRESH_FREQUENCY,\n  ON_REFRESH,\n  ON_REFRESH_SUCCESS,\n  SET_DIRECT_PATH,\n  SET_FOCUSED_FILTER_FIELD,\n  UNSET_FOCUSED_FILTER_FIELD,\n  SET_ACTIVE_TABS,\n  SET_FULL_SIZE_CHART_ID,\n  RESET_SLICE,\n  ON_FILTERS_REFRESH,\n  ON_FILTERS_REFRESH_SUCCESS,\n  SET_DATASETS_STATUS,\n} from '../actions/dashboardState';\nimport { HYDRATE_DASHBOARD } from '../actions/hydrate';\n\nexport default function dashboardStateReducer(state = {}, action) {\n  const actionHandlers = {\n    [HYDRATE_DASHBOARD]() {\n      return { ...state, ...action.data.dashboardState };\n    },\n    [UPDATE_CSS]() {\n      return { ...state, css: action.css };\n    },\n    [ADD_SLICE]() {\n      const updatedSliceIds = new Set(state.sliceIds);\n      updatedSliceIds.add(action.slice.slice_id);\n      return {\n        ...state,\n        sliceIds: Array.from(updatedSliceIds),\n        updateSlice: true,\n      };\n    },\n    [REMOVE_SLICE]() {\n      const { sliceId } = action;\n      const updatedSliceIds = new Set(state.sliceIds);\n      updatedSliceIds.delete(sliceId);\n\n      return {\n        ...state,\n        sliceIds: Array.from(updatedSliceIds),\n      };\n    },\n    [RESET_SLICE]() {\n      return {\n        ...state,\n        updateSlice: false,\n      };\n    },\n    [TOGGLE_FAVE_STAR]() {\n      return { ...state, isStarred: action.isStarred };\n    },\n    [TOGGLE_PUBLISHED]() {\n      return { ...state, isPublished: action.isPublished };\n    },\n    [SET_EDIT_MODE]() {\n      return {\n        ...state,\n        editMode: action.editMode,\n      };\n    },\n    [SET_MAX_UNDO_HISTORY_EXCEEDED]() {\n      const { maxUndoHistoryExceeded = true } = action.payload;\n      return { ...state, maxUndoHistoryExceeded };\n    },\n    [SHOW_BUILDER_PANE]() {\n      return { ...state };\n    },\n    [SET_COLOR_SCHEME]() {\n      return {\n        ...state,\n        colorScheme: action.colorScheme,\n        updatedColorScheme: true,\n      };\n    },\n    [TOGGLE_EXPAND_SLICE]() {\n      const updatedExpandedSlices = { ...state.expandedSlices };\n      const { sliceId } = action;\n      if (updatedExpandedSlices[sliceId]) {\n        delete updatedExpandedSlices[sliceId];\n      } else {\n        updatedExpandedSlices[sliceId] = true;\n      }\n      return { ...state, expandedSlices: updatedExpandedSlices };\n    },\n    [ON_CHANGE]() {\n      return { ...state, hasUnsavedChanges: true };\n    },\n    [ON_SAVE]() {\n      return {\n        ...state,\n        hasUnsavedChanges: false,\n        maxUndoHistoryExceeded: false,\n        editMode: false,\n        updatedColorScheme: false,\n        updateSlice: false,\n        // server-side returns last_modified_time for latest change\n        lastModifiedTime: action.lastModifiedTime,\n      };\n    },\n    [SET_UNSAVED_CHANGES]() {\n      const { hasUnsavedChanges } = action.payload;\n      return { ...state, hasUnsavedChanges };\n    },\n    [SET_REFRESH_FREQUENCY]() {\n      return {\n        ...state,\n        refreshFrequency: action.refreshFrequency,\n        shouldPersistRefreshFrequency: action.isPersistent,\n        hasUnsavedChanges: action.isPersistent,\n      };\n    },\n    [ON_REFRESH]() {\n      return {\n        ...state,\n        isRefreshing: true,\n      };\n    },\n    [ON_FILTERS_REFRESH]() {\n      return {\n        ...state,\n        isFiltersRefreshing: true,\n      };\n    },\n    [ON_FILTERS_REFRESH_SUCCESS]() {\n      return {\n        ...state,\n        isFiltersRefreshing: false,\n      };\n    },\n    [ON_REFRESH_SUCCESS]() {\n      return {\n        ...state,\n        isRefreshing: false,\n      };\n    },\n    [SET_DIRECT_PATH]() {\n      return {\n        ...state,\n        directPathToChild: action.path,\n        directPathLastUpdated: Date.now(),\n      };\n    },\n    [SET_ACTIVE_TABS]() {\n      const newActiveTabs = new Set(state.activeTabs);\n      newActiveTabs.delete(action.prevTabId);\n      newActiveTabs.add(action.tabId);\n      return {\n        ...state,\n        activeTabs: Array.from(newActiveTabs),\n      };\n    },\n    [SET_FOCUSED_FILTER_FIELD]() {\n      return {\n        ...state,\n        focusedFilterField: {\n          chartId: action.chartId,\n          column: action.column,\n        },\n      };\n    },\n    [UNSET_FOCUSED_FILTER_FIELD]() {\n      // dashboard only has 1 focused filter field at a time,\n      // but when user switch different filter boxes,\n      // browser didn't always fire onBlur and onFocus events in order.\n      if (\n        !state.focusedFilterField ||\n        action.chartId !== state.focusedFilterField.chartId ||\n        action.column !== state.focusedFilterField.column\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        focusedFilterField: null,\n      };\n    },\n    [SET_FULL_SIZE_CHART_ID]() {\n      return {\n        ...state,\n        fullSizeChartId: action.chartId,\n      };\n    },\n    [SET_DATASETS_STATUS]() {\n      return {\n        ...state,\n        datasetsStatus: action.status,\n      };\n    },\n  };\n\n  if (action.type in actionHandlers) {\n    return actionHandlers[action.type]();\n  }\n  return state;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { SET_REPORT, ADD_REPORT, EDIT_REPORT } from '../actions/reports';\n\nexport default function reportsReducer(state = {}, action) {\n  const actionHandlers = {\n    [SET_REPORT]() {\n      const { report, resourceId, creationMethod, filterField } = action;\n      // For now report count should only be one, but we are checking in case\n      // functionality changes.\n      const reportObject = report.result?.find(\n        report => report[filterField] === resourceId,\n      );\n\n      if (reportObject) {\n        return {\n          ...state,\n          [creationMethod]: {\n            ...state[creationMethod],\n            [resourceId]: reportObject,\n          },\n        };\n      }\n      if (state?.[creationMethod]?.[resourceId]) {\n        // remove the empty report from state\n        const newState = { ...state };\n        delete newState[creationMethod][resourceId];\n        return newState;\n      }\n      return { ...state };\n    },\n\n    [ADD_REPORT]() {\n      const { result, id } = action.json;\n      const report = { ...result, id };\n      const reportTypeId = report.dashboard || report.chart;\n      // this is the id of either the chart or the dashboard associated with the report.\n\n      return {\n        ...state,\n        [report.creation_method]: {\n          ...state[report.creation_method],\n          [reportTypeId]: report,\n        },\n      };\n    },\n\n    [EDIT_REPORT]() {\n      const report = {\n        ...action.json.result,\n        id: action.json.id,\n      };\n      const reportTypeId = report.dashboard || report.chart;\n\n      return {\n        ...state,\n        [report.creation_method]: {\n          ...state[report.creation_method],\n          [reportTypeId]: report,\n        },\n      };\n    },\n  };\n\n  if (action.type in actionHandlers) {\n    return actionHandlers[action.type]();\n  }\n  return state;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ADD_TOAST, REMOVE_TOAST } from './actions';\n\nexport default function messageToastsReducer(toasts = [], action) {\n  switch (action.type) {\n    case ADD_TOAST: {\n      const { payload: toast } = action;\n      const result = toasts.slice();\n      if (!toast.noDuplicate || !result.find(x => x.text === toast.text)) {\n        return [toast, ...toasts];\n      }\n      return toasts;\n    }\n\n    case REMOVE_TOAST: {\n      const {\n        payload: { id },\n      } = action;\n      return [...toasts].filter(toast => toast.id !== id);\n    }\n\n    default:\n      return toasts;\n  }\n}\n"],"names":["UPDATE_COMPONENTS","setUnsavedChangesAfterAction","action","args","dispatch","getState","result","dashboardLayout","dashboardState","type","payload","nextComponents","components","present","updateLayoutComponents","hasUnsavedChanges","setUnsavedChanges","updateComponents","updateDashboardTitle","text","DASHBOARD_HEADER_ID","meta","DASHBOARD_TITLE_CHANGED","dashboardTitleChanged","DELETE_COMPONENT","deleteComponent","id","parentId","CREATE_COMPONENT","createComponent","dropResult","CREATE_TOP_LEVEL_TABS","createTopLevelTabs","DELETE_TOP_LEVEL_TABS","deleteTopLevelTabs","RESIZE_COMPONENT","resizeComponent","width","height","undoableLayout","dashboard","component","widthChanged","heightChanged","updatedComponents","MOVE_COMPONENT","moveComponent","HANDLE_COMPONENT_DROP","handleComponentDrop","overflowsParent","layout","childWidth","getComponentWidthFromDrop","dropOverflowsParent","addWarningToast","t","source","destination","droppedOnRoot","DASHBOARD_ROOT_ID","isNewComponent","NEW_COMPONENTS_SOURCE_ID","dashboardRoot","rootChildId","children","TABS_TYPE","index","dashboardFilters","sourceComponent","destinationComponent","ROW_TYPE","length","findParentId","childId","sourceSet","Set","destinationSet","concat","Object","values","map","scopes","scope","some","tab","has","isInDifferentFilterScopes","parents","undoLayoutAction","UndoActionCreators","past","maxUndoHistoryExceeded","updatedColorScheme","redoLayoutAction","UPDATE_COMPONENTS_PARENTS_LIST","SET_UNSAVED_CHANGES","ADD_SLICE","REMOVE_SLICE","RESET_SLICE","FAVESTAR_BASE_URL","TOGGLE_FAVE_STAR","toggleFaveStar","isStarred","fetchFaveStar","SupersetClient","endpoint","then","json","count","catch","addDangerToast","saveFaveStar","urlSuffix","TOGGLE_PUBLISHED","savePublished","isPublished","headers","body","JSON","stringify","published","addSuccessToast","togglePublished","TOGGLE_EXPAND_SLICE","toggleExpandSlice","sliceId","UPDATE_CSS","updateCss","css","SET_EDIT_MODE","setEditMode","editMode","ON_CHANGE","onChange","ON_SAVE","SET_REFRESH_FREQUENCY","setRefreshFrequency","refreshFrequency","isPersistent","saveDashboardRequestSuccess","lastModifiedTime","onSave","saveDashboardRequest","data","saveType","forEach","filter","chartId","componentId","directPathToFilter","slice","pop","push","updateDirectPathToFilter","serializedFilters","serializeActiveFilterValues","getActiveFilters","serializedFilterScopes","reduce","keys","scopesByColumn","column","serializeFilterScopes","certified_by","certification_details","dashboard_title","owners","roles","slug","hasId","item","undefined","cleanedData","ensureIsArray","o","isFeatureEnabled","FeatureFlag","r","metadata","color_namespace","color_scheme","expanded_slices","label_colors","shared_label_colors","refresh_frequency","timed_refresh_immune_slices","handleChartConfiguration","dashboardInfo","chart_configuration","prev","next","find","layoutItem","onError","async","response","error","message","getClientErrorObject","errorText","SAVE_TYPE_OVERWRITE","chartConfiguration","updatedDashboard","json_metadata","safeStringify","default_filters","filter_scopes","last_modified_time","parse","dashboardInfoChanged","SET_CHART_CONFIG_COMPLETE","native_filter_configuration","SET_FILTER_CONFIG_COMPLETE","filterConfig","window","history","pushState","event","onUpdateSuccess","copyData","finalCopyData","postPayload","setChartConfiguration","onCopySuccess","fetchCharts","chartList","force","interval","dashboardId","chartKey","refreshChart","refreshTime","Math","max","stagger_time","stagger_refresh","delay","i","setTimeout","ON_FILTERS_REFRESH","ON_FILTERS_REFRESH_SUCCESS","onFiltersRefreshSuccess","ON_REFRESH_SUCCESS","ON_REFRESH","onRefresh","Promise","resolve","refreshCharts","SHOW_BUILDER_PANE","showBuilderPane","addSliceToDashboard","sliceEntities","selectedSlice","slices","form_data","slice_id","newChart","initChart","formData","applyDefaultFormData","all","addChart","fetchDatasourceMetadata","datasource","viz_type","addFilter","postAddSliceFromDashboard","updateSlice","getSharedLabelColor","getColorMap","removeSliceFromDashboard","sliceEntity","removeFilter","removeChart","removeSlice","SET_COLOR_SCHEME","setColorSchemeAndUnsavedChanges","colorScheme","setColorScheme","SET_DIRECT_PATH","setDirectPathToChild","path","SET_ACTIVE_TABS","setActiveTabs","tabId","prevTabId","SET_FOCUSED_FILTER_FIELD","setFocusedFilterField","UNSET_FOCUSED_FILTER_FIELD","unsetFocusedFilterField","SET_FULL_SIZE_CHART_ID","setFullSizeChartId","SET_MAX_UNDO_HISTORY_EXCEEDED","setMaxUndoHistoryExceeded","maxUndoHistoryToast","historyLength","SET_DATASETS_STATUS","setDatasetsStatus","status","cache","findParentIdWithCache","lastParent","includes","ids","dragging","newComponentFactory","draggingWidth","minimumWidth","minDraggingWidth","getDetailedComponentWidth","destinationWidth","occupiedWidth","draggingOccupiedWidth","destinationCapacity","Number","isNaN","grandparentWidth","grandparentOccupiedWidth","getTotalChildWidth","child","passedComponent","GRID_COLUMN_COUNT","GRID_MIN_COLUMN_COUNT","COLUMN_TYPE","DYNAMIC_TYPE","MARKDOWN_TYPE","CHART_TYPE","SET_REPORT","fetchUISpecificReport","userId","filterField","creationMethod","resourceId","queryParams","rison","filters","col","opr","value","report","setReport","structureFetchAction","state","user","charts","explore","chartArr","ADD_REPORT","addReport","jsonPayload","EDIT_REPORT","editReport","toggleActive","isActive","encodeURI","active","finally","deleteActiveReport","name","UiConfigContext","createContext","hideTitle","hideTab","hideNav","hideChartControls","useUiConfig","useContext","EmbeddedUiConfigProvider","config","embeddedConfig","useState","Provider","componentIsResizable","entity","indexOf","updateComponentParentsList","currentComponent","parentsList","typeToWrapChildLookup","DASHBOARD_GRID_TYPE","TAB_TYPE","shouldWrapChildInRow","parentType","childType","wrapChildLookup","Boolean","newEntitiesFromDrop","dragType","dropEntity","dropType","newDropChild","wrapChildInRow","newEntities","rowWrapper","tabChild","nextDropChildren","splice","actionHandlers","HYDRATE_DASHBOARD","recursivelyDeleteChildren","componentParentId","parent","componentIndex","nextChildren","nextParent","nextEntities","entitiesMap","current","target","reordered","list","startIndex","endIndex","removed","reorder","reorderItem","nextWidth","destinationEntity","destinationChildren","newRow","rootComponent","topLevelId","topLevelComponent","draggingTabId","draggingTab","childrenToMove","newEntitiesArray","tabComponent","tabsComponent","topLevelTabs","DASHBOARD_GRID_ID","nextState","undoable","handler","limit","UNDO_LIMIT","ignoreInitialState","includeAction","logMessageQueue","constructor","callback","sizeThreshold","delayThreshold","this","queue","delayThrehold","trigger","bind","append","eventData","events","call","source_id","navigator","sendBeacon","FormData","parseMethod","lastEventId","noopReducer","initialState","container","document","getElementById","bootstrap","getAttribute","dashboardReducers","datasources","key","DASHBOARD_INFO_UPDATED","newInfo","round","Date","getTime","dataMask","nativeFilters","updatedSliceIds","sliceIds","add","Array","from","delete","updatedExpandedSlices","expandedSlices","shouldPersistRefreshFrequency","isRefreshing","isFiltersRefreshing","directPathToChild","directPathLastUpdated","now","newActiveTabs","activeTabs","focusedFilterField","fullSizeChartId","datasetsStatus","reports","reportObject","newState","reportTypeId","chart","creation_method","USER_LOADED","rootReducer","messageToasts","toasts","ADD_TOAST","toast","noDuplicate","x","REMOVE_TOAST","common","impressionId","store","LOG_EVENT","logMetadata","impression_id","version","eventName","ts","event_name","LOG_EVENT_TYPE_TIMING","event_type","trigger_event","shortid","event_id","visibility","visibilityState","target_id","target_name","sliceName"],"sourceRoot":""}