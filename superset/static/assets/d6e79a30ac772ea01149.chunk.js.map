{"version":3,"file":"d6e79a30ac772ea01149.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/features/alerts/components/AlertStatusIcon.tsx","webpack://superset/./src/features/alerts/types.ts","webpack://superset/./src/features/alerts/components/RecipientIcon.tsx","webpack://superset/./src/components/LastUpdated/index.tsx","webpack://superset/./src/pages/AlertReportList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | React.ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, SupersetTheme, useTheme } from '@superset-ui/core';\nimport React from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { AlertState } from '../types';\n\nfunction getStatusColor(\n  status: string,\n  isReportEnabled: boolean,\n  theme: SupersetTheme,\n) {\n  switch (status) {\n    case AlertState.Working:\n      return theme.colors.primary.base;\n    case AlertState.Error:\n      return theme.colors.error.base;\n    case AlertState.Success:\n      return isReportEnabled\n        ? theme.colors.success.base\n        : theme.colors.alert.base;\n    case AlertState.Noop:\n      return theme.colors.success.base;\n    case AlertState.Grace:\n      return theme.colors.alert.base;\n    default:\n      return theme.colors.grayscale.base;\n  }\n}\n\nexport default function AlertStatusIcon({\n  state,\n  isReportEnabled = false,\n}: {\n  state: string;\n  isReportEnabled: boolean;\n}) {\n  const theme = useTheme();\n  const lastStateConfig = {\n    icon: Icons.Check,\n    label: '',\n    status: '',\n  };\n  switch (state) {\n    case AlertState.Success:\n      lastStateConfig.icon = isReportEnabled\n        ? Icons.Check\n        : Icons.AlertSolidSmall;\n      lastStateConfig.label = isReportEnabled\n        ? t('Report sent')\n        : t('Alert triggered, notification sent');\n      lastStateConfig.status = AlertState.Success;\n      break;\n    case AlertState.Working:\n      lastStateConfig.icon = Icons.Running;\n      lastStateConfig.label = isReportEnabled\n        ? t('Report sending')\n        : t('Alert running');\n      lastStateConfig.status = AlertState.Working;\n      break;\n    case AlertState.Error:\n      lastStateConfig.icon = Icons.XSmall;\n      lastStateConfig.label = isReportEnabled\n        ? t('Report failed')\n        : t('Alert failed');\n      lastStateConfig.status = AlertState.Error;\n      break;\n    case AlertState.Noop:\n      lastStateConfig.icon = Icons.Check;\n      lastStateConfig.label = t('Nothing triggered');\n      lastStateConfig.status = AlertState.Noop;\n      break;\n    case AlertState.Grace:\n      lastStateConfig.icon = Icons.AlertSolidSmall;\n      lastStateConfig.label = t('Alert Triggered, In Grace Period');\n      lastStateConfig.status = AlertState.Grace;\n      break;\n    default:\n      lastStateConfig.icon = Icons.Check;\n      lastStateConfig.label = t('Nothing triggered');\n      lastStateConfig.status = AlertState.Noop;\n  }\n  const Icon = lastStateConfig.icon;\n  return (\n    <Tooltip title={lastStateConfig.label} placement=\"bottomLeft\">\n      <Icon\n        iconColor={getStatusColor(\n          lastStateConfig.status,\n          isReportEnabled,\n          theme,\n        )}\n      />\n    </Tooltip>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Owner from 'src/types/Owner';\nimport { NOTIFICATION_FORMATS } from 'src/reports/types';\n\ntype user = {\n  id: number;\n  first_name: string;\n  last_name: string;\n};\nexport type ChartObject = {\n  id: number;\n  slice_name: string;\n  viz_type: string;\n};\n\nexport type DashboardObject = {\n  dashboard_title: string;\n  id: number;\n};\n\nexport type DatabaseObject = {\n  database_name: string;\n  id: number;\n};\n\nexport type NotificationMethodOption = 'Email' | 'Slack';\n\nexport type Recipient = {\n  recipient_config_json: {\n    target: string;\n  };\n  type: NotificationMethodOption;\n};\n\nexport type MetaObject = {\n  id?: number;\n  label?: string;\n  value?: number | string;\n};\n\nexport type Operator = '<' | '>' | '<=' | '>=' | '==' | '!=' | 'not null';\n\nexport type AlertObject = {\n  active?: boolean;\n  creation_method?: string;\n  chart?: MetaObject;\n  changed_by?: user;\n  changed_on_delta_humanized?: string;\n  chart_id: number;\n  created_by?: user;\n  created_on?: string;\n  crontab?: string;\n  custom_width?: number | null;\n  dashboard?: MetaObject;\n  dashboard_id?: number;\n  database?: MetaObject;\n  description?: string;\n  error?: string;\n  force_screenshot: boolean;\n  grace_period?: number;\n  id: number;\n  last_eval_dttm?: number;\n  last_state?: 'Success' | 'Working' | 'Error' | 'Not triggered' | 'On Grace';\n  log_retention?: number;\n  name?: string;\n  owners?: Array<Owner | MetaObject>;\n  sql?: string;\n  timezone?: string;\n  recipients?: Array<Recipient>;\n  report_format?: NOTIFICATION_FORMATS;\n  type?: string;\n  validator_config_json?: {\n    op?: Operator;\n    threshold?: number;\n  };\n  validator_type?: string;\n  working_timeout?: number;\n};\n\nexport type LogObject = {\n  end_dttm: string;\n  error_message: string;\n  id: number;\n  scheduled_dttm: string;\n  start_dttm: string;\n  state: string;\n  value: string;\n  uuid: string;\n};\n\nexport enum AlertState {\n  Success = 'Success',\n  Working = 'Working',\n  Error = 'Error',\n  Noop = 'Not triggered',\n  Grace = 'On Grace',\n}\n\nexport enum RecipientIconName {\n  Email = 'Email',\n  Slack = 'Slack',\n}\nexport interface AlertsReportsConfig {\n  ALERT_REPORTS_DEFAULT_WORKING_TIMEOUT: number;\n  ALERT_REPORTS_DEFAULT_RETENTION: number;\n  ALERT_REPORTS_DEFAULT_CRON_VALUE: string;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetTheme, css } from '@superset-ui/core';\nimport React, { ReactElement } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { RecipientIconName } from '../types';\n\nconst StyledIcon = (theme: SupersetTheme) => css`\n  color: ${theme.colors.grayscale.light1};\n  margin-right: ${theme.gridUnit * 2}px;\n`;\n\nexport default function RecipientIcon({ type }: { type: string }) {\n  const recipientIconConfig: { icon: null | ReactElement; label: string } = {\n    icon: null,\n    label: '',\n  };\n  switch (type) {\n    case RecipientIconName.Email:\n      recipientIconConfig.icon = <Icons.Email css={StyledIcon} />;\n      recipientIconConfig.label = RecipientIconName.Email;\n      break;\n    case RecipientIconName.Slack:\n      recipientIconConfig.icon = <Icons.Slack css={StyledIcon} />;\n      recipientIconConfig.label = RecipientIconName.Slack;\n      break;\n    default:\n      recipientIconConfig.icon = null;\n      recipientIconConfig.label = '';\n  }\n  return recipientIconConfig.icon ? (\n    <Tooltip title={recipientIconConfig.label} placement=\"bottom\">\n      {recipientIconConfig.icon}\n    </Tooltip>\n  ) : null;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState, FunctionComponent } from 'react';\nimport moment, { Moment, MomentInput } from 'moment';\nimport { t, styled } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\n\nconst REFRESH_INTERVAL = 60000; // every minute\n\ninterface LastUpdatedProps {\n  updatedAt: MomentInput;\n  update?: React.MouseEventHandler<HTMLSpanElement>;\n}\nmoment.updateLocale('en', {\n  calendar: {\n    lastDay: '[Yesterday at] LTS',\n    sameDay: '[Today at] LTS',\n    nextDay: '[Tomorrow at] LTS',\n    lastWeek: '[last] dddd [at] LTS',\n    nextWeek: 'dddd [at] LTS',\n    sameElse: 'L',\n  },\n});\n\nconst TextStyles = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nconst Refresh = styled(Icons.Refresh)`\n  color: ${({ theme }) => theme.colors.primary.base};\n  width: auto;\n  height: ${({ theme }) => theme.gridUnit * 5}px;\n  position: relative;\n  top: ${({ theme }) => theme.gridUnit}px;\n  left: ${({ theme }) => theme.gridUnit}px;\n  cursor: pointer;\n`;\n\nexport const LastUpdated: FunctionComponent<LastUpdatedProps> = ({\n  updatedAt,\n  update,\n}) => {\n  const [timeSince, setTimeSince] = useState<Moment>(moment(updatedAt));\n\n  useEffect(() => {\n    setTimeSince(() => moment(updatedAt));\n\n    // update UI every minute in case day changes\n    const interval = setInterval(() => {\n      setTimeSince(() => moment(updatedAt));\n    }, REFRESH_INTERVAL);\n\n    return () => clearInterval(interval);\n  }, [updatedAt]);\n\n  return (\n    <TextStyles>\n      {t('Last Updated %s', timeSince.isValid() ? timeSince.calendar() : '--')}\n      {update && <Refresh onClick={update} />}\n    </TextStyles>\n  );\n};\n\nexport default LastUpdated;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  t,\n  SupersetClient,\n  makeApi,\n  styled,\n  getExtensionsRegistry,\n} from '@superset-ui/core';\nimport moment from 'moment';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport FacePile from 'src/components/FacePile';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ListView, {\n  FilterOperator,\n  Filters,\n  ListViewProps,\n} from 'src/components/ListView';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport { Switch } from 'src/components/Switch';\nimport { DATETIME_WITH_TIME_ZONE } from 'src/constants';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport AlertStatusIcon from 'src/features/alerts/components/AlertStatusIcon';\nimport RecipientIcon from 'src/features/alerts/components/RecipientIcon';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport DeleteModal from 'src/components/DeleteModal';\nimport LastUpdated from 'src/components/LastUpdated';\nimport {\n  useListViewResource,\n  useSingleViewResource,\n} from 'src/views/CRUD/hooks';\nimport { createErrorHandler, createFetchRelated } from 'src/views/CRUD/utils';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport Owner from 'src/types/Owner';\nimport AlertReportModal from 'src/features/alerts/AlertReportModal';\nimport { AlertObject, AlertState } from 'src/features/alerts/types';\n\nconst extensionsRegistry = getExtensionsRegistry();\n\nconst PAGE_SIZE = 25;\n\nconst AlertStateLabel: Record<AlertState, string> = {\n  [AlertState.Success]: t('Success'),\n  [AlertState.Working]: t('Working'),\n  [AlertState.Error]: t('Error'),\n  [AlertState.Noop]: t('Not triggered'),\n  [AlertState.Grace]: t('On Grace'),\n};\n\ninterface AlertListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  isReportEnabled: boolean;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\nconst deleteAlerts = makeApi<number[], { message: string }>({\n  requestType: 'rison',\n  method: 'DELETE',\n  endpoint: '/api/v1/report/',\n});\n\nconst RefreshContainer = styled.div`\n  width: 100%;\n  padding: 0 ${({ theme }) => theme.gridUnit * 4}px\n    ${({ theme }) => theme.gridUnit * 3}px;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n`;\n\nconst StyledHeaderWithIcon = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  > *:first-child {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst HeaderExtension = extensionsRegistry.get('alertsreports.header.icon');\n\nfunction AlertList({\n  addDangerToast,\n  isReportEnabled = false,\n  user,\n  addSuccessToast,\n}: AlertListProps) {\n  const title = isReportEnabled ? t('report') : t('alert');\n  const titlePlural = isReportEnabled ? t('reports') : t('alerts');\n  const pathName = isReportEnabled ? 'Reports' : 'Alerts';\n  const initialFilters = useMemo(\n    () => [\n      {\n        id: 'type',\n        operator: FilterOperator.equals,\n        value: isReportEnabled ? 'Report' : 'Alert',\n      },\n    ],\n    [isReportEnabled],\n  );\n  const {\n    state: {\n      loading,\n      resourceCount: alertsCount,\n      resourceCollection: alerts,\n      bulkSelectEnabled,\n      lastFetched,\n    },\n    hasPerm,\n    fetchData,\n    setResourceCollection,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<AlertObject>(\n    'report',\n    t('reports'),\n    addDangerToast,\n    true,\n    undefined,\n    initialFilters,\n  );\n\n  const { updateResource } = useSingleViewResource<Partial<AlertObject>>(\n    'report',\n    t('reports'),\n    addDangerToast,\n  );\n\n  const [alertModalOpen, setAlertModalOpen] = useState<boolean>(false);\n  const [currentAlert, setCurrentAlert] = useState<Partial<AlertObject> | null>(\n    null,\n  );\n  const [currentAlertDeleting, setCurrentAlertDeleting] =\n    useState<AlertObject | null>(null);\n\n  // Actions\n  function handleAlertEdit(alert: AlertObject | null) {\n    setCurrentAlert(alert);\n    setAlertModalOpen(true);\n  }\n\n  const generateKey = () => `${new Date().getTime()}`;\n\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canCreate = hasPerm('can_write');\n\n  useEffect(() => {\n    if (bulkSelectEnabled && canDelete) {\n      toggleBulkSelect();\n    }\n  }, [isReportEnabled]);\n\n  const handleAlertDelete = ({ id, name }: AlertObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/report/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setCurrentAlertDeleting(null);\n        addSuccessToast(t('Deleted: %s', name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', name, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkAlertDelete = async (alertsToDelete: AlertObject[]) => {\n    try {\n      const { message } = await deleteAlerts(\n        alertsToDelete.map(({ id }) => id),\n      );\n      refreshData();\n      addSuccessToast(message);\n    } catch (e) {\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t(\n            'There was an issue deleting the selected %s: %s',\n            titlePlural,\n            errMsg,\n          ),\n        ),\n      )(e);\n    }\n  };\n\n  const initialSort = [{ id: 'name', desc: true }];\n\n  const toggleActive = useCallback(\n    (data: AlertObject, checked: boolean) => {\n      if (data?.id) {\n        const update_id = data.id;\n        const original = [...alerts];\n\n        setResourceCollection(\n          original.map(alert => {\n            if (alert?.id === data.id) {\n              return {\n                ...alert,\n                active: checked,\n              };\n            }\n\n            return alert;\n          }),\n        );\n\n        updateResource(update_id, { active: checked }, false, false)\n          .then()\n          .catch(() => setResourceCollection(original));\n      }\n    },\n    [alerts, setResourceCollection, updateResource],\n  );\n\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { last_state: lastState },\n          },\n        }: any) => (\n          <AlertStatusIcon\n            state={lastState}\n            isReportEnabled={isReportEnabled}\n          />\n        ),\n        accessor: 'last_state',\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { last_eval_dttm: lastEvalDttm },\n          },\n        }: any) =>\n          lastEvalDttm\n            ? moment.utc(lastEvalDttm).local().format(DATETIME_WITH_TIME_ZONE)\n            : '',\n        accessor: 'last_eval_dttm',\n        Header: t('Last run'),\n        size: 'lg',\n      },\n      {\n        accessor: 'name',\n        Header: t('Name'),\n        size: 'xl',\n      },\n      {\n        Header: t('Schedule'),\n        accessor: 'crontab_humanized',\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { crontab_humanized = '', timezone },\n          },\n        }: any) => (\n          <Tooltip\n            title={`${crontab_humanized} (${timezone})`}\n            placement=\"topLeft\"\n          >\n            <span>{`${crontab_humanized} (${timezone})`}</span>\n          </Tooltip>\n        ),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { recipients },\n          },\n        }: any) =>\n          recipients.map((r: any) => (\n            <RecipientIcon key={r.id} type={r.type} />\n          )),\n        accessor: 'recipients',\n        Header: t('Notification method'),\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_by },\n          },\n        }: any) =>\n          created_by ? `${created_by.first_name} ${created_by.last_name}` : '',\n        Header: t('Created by'),\n        id: 'created_by',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { owners = [] },\n          },\n        }: any) => <FacePile users={owners} />,\n        Header: t('Owners'),\n        id: 'owners',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { changed_on_delta_humanized: changedOn },\n          },\n        }: any) => <span className=\"no-wrap\">{changedOn}</span>,\n        Header: t('Modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const allowEdit =\n            original.owners.map((o: Owner) => o.id).includes(user.userId) ||\n            isUserAdmin(user);\n\n          return (\n            <Switch\n              disabled={!allowEdit}\n              data-test=\"toggle-active\"\n              checked={original.active}\n              onClick={(checked: boolean) => toggleActive(original, checked)}\n              size=\"small\"\n            />\n          );\n        },\n        Header: t('Active'),\n        accessor: 'active',\n        id: 'active',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const history = useHistory();\n          const handleEdit = () => handleAlertEdit(original);\n          const handleDelete = () => setCurrentAlertDeleting(original);\n          const handleGotoExecutionLog = () =>\n            history.push(`/${original.type.toLowerCase()}/${original.id}/log`);\n\n          const allowEdit =\n            original.owners.map((o: Owner) => o.id).includes(user.userId) ||\n            isUserAdmin(user);\n\n          const actions = [\n            canEdit\n              ? {\n                  label: 'execution-log-action',\n                  tooltip: t('Execution log'),\n                  placement: 'bottom',\n                  icon: 'Note',\n                  onClick: handleGotoExecutionLog,\n                }\n              : null,\n            canEdit\n              ? {\n                  label: allowEdit ? 'edit-action' : 'preview-action',\n                  tooltip: allowEdit ? t('Edit') : t('View'),\n                  placement: 'bottom',\n                  icon: allowEdit ? 'Edit' : 'Binoculars',\n                  onClick: handleEdit,\n                }\n              : null,\n            allowEdit && canDelete\n              ? {\n                  label: 'delete-action',\n                  tooltip: t('Delete'),\n                  placement: 'bottom',\n                  icon: 'Trash',\n                  onClick: handleDelete,\n                }\n              : null,\n          ].filter(item => item !== null);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        hidden: !canEdit && !canDelete,\n        disableSortBy: true,\n        size: 'xl',\n      },\n    ],\n    [canDelete, canEdit, isReportEnabled, toggleActive],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {title}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAlertEdit(null);\n      },\n    });\n  }\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select-toggle',\n    });\n  }\n\n  const emptyState = {\n    title: t('No %s yet', titlePlural),\n    image: 'filter-results.svg',\n    buttonAction: () => handleAlertEdit(null),\n    buttonText: canCreate ? (\n      <>\n        <i className=\"fa fa-plus\" /> {title}{' '}\n      </>\n    ) : null,\n  };\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Owner'),\n        key: 'owner',\n        id: 'owners',\n        input: 'select',\n        operator: FilterOperator.relationManyMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'report',\n          'owners',\n          createErrorHandler(errMsg =>\n            t('An error occurred while fetching owners values: %s', errMsg),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Created by'),\n        key: 'created_by',\n        id: 'created_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'report',\n          'created_by',\n          createErrorHandler(errMsg =>\n            t('An error occurred while fetching created by values: %s', errMsg),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Status'),\n        key: 'status',\n        id: 'last_state',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: 'Any',\n        selects: [\n          {\n            label: AlertStateLabel[AlertState.Success],\n            value: AlertState.Success,\n          },\n          {\n            label: AlertStateLabel[AlertState.Working],\n            value: AlertState.Working,\n          },\n          { label: AlertStateLabel[AlertState.Error], value: AlertState.Error },\n          { label: AlertStateLabel[AlertState.Noop], value: AlertState.Noop },\n          { label: AlertStateLabel[AlertState.Grace], value: AlertState.Grace },\n        ],\n      },\n      {\n        Header: t('Search'),\n        key: 'search',\n        id: 'name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ],\n    [],\n  );\n\n  const header = HeaderExtension ? (\n    <StyledHeaderWithIcon>\n      <div>{t('Alerts & reports')}</div>\n      <HeaderExtension />\n    </StyledHeaderWithIcon>\n  ) : (\n    t('Alerts & reports')\n  );\n\n  return (\n    <>\n      <SubMenu\n        activeChild={pathName}\n        name={header}\n        tabs={[\n          {\n            name: 'Alerts',\n            label: t('Alerts'),\n            url: '/alert/list/',\n            usesRouter: true,\n            'data-test': 'alert-list',\n          },\n          {\n            name: 'Reports',\n            label: t('Reports'),\n            url: '/report/list/',\n            usesRouter: true,\n            'data-test': 'report-list',\n          },\n        ]}\n        buttons={subMenuButtons}\n      >\n        <RefreshContainer>\n          <LastUpdated updatedAt={lastFetched} update={() => refreshData()} />\n        </RefreshContainer>\n      </SubMenu>\n      <AlertReportModal\n        alert={currentAlert}\n        addDangerToast={addDangerToast}\n        layer={currentAlert}\n        onHide={() => {\n          setAlertModalOpen(false);\n          setCurrentAlert(null);\n          refreshData();\n        }}\n        show={alertModalOpen}\n        isReport={isReportEnabled}\n        key={currentAlert?.id || generateKey()}\n      />\n      {currentAlertDeleting && (\n        <DeleteModal\n          description={t(\n            'This action will permanently delete %s.',\n            currentAlertDeleting.name,\n          )}\n          onConfirm={() => {\n            if (currentAlertDeleting) {\n              handleAlertDelete(currentAlertDeleting);\n            }\n          }}\n          onHide={() => setCurrentAlertDeleting(null)}\n          open\n          title={t('Delete %s?', title)}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected %s?',\n          titlePlural,\n        )}\n        onConfirm={handleBulkAlertDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = canDelete\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n          return (\n            <ListView<AlertObject>\n              className=\"alerts-list-view\"\n              columns={columns}\n              count={alertsCount}\n              data={alerts}\n              emptyState={emptyState}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              pageSize={PAGE_SIZE}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(AlertList);\n"],"names":["StyledActions","styled","theme","colors","primary","base","ActionWrapper","grayscale","ActionsBar","actions","className","map","action","index","ActionIcon","Icons","icon","tooltip","id","label","title","placement","key","role","tabIndex","onClick","getStatusColor","status","isReportEnabled","AlertState","error","success","alert","AlertStatusIcon","state","useTheme","lastStateConfig","t","Icon","iconColor","RecipientIconName","StyledIcon","css","light1","gridUnit","RecipientIcon","type","recipientIconConfig","Tooltip","moment","calendar","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","TextStyles","Refresh","updatedAt","update","timeSince","setTimeSince","useState","useEffect","interval","setInterval","clearInterval","isValid","extensionsRegistry","getExtensionsRegistry","AlertStateLabel","deleteAlerts","makeApi","requestType","method","endpoint","RefreshContainer","light5","StyledHeaderWithIcon","HeaderExtension","get","withToasts","addDangerToast","user","addSuccessToast","titlePlural","pathName","initialFilters","useMemo","operator","FilterOperator","value","loading","resourceCount","alertsCount","resourceCollection","alerts","bulkSelectEnabled","lastFetched","hasPerm","fetchData","setResourceCollection","refreshData","toggleBulkSelect","useListViewResource","undefined","updateResource","useSingleViewResource","alertModalOpen","setAlertModalOpen","currentAlert","setCurrentAlert","currentAlertDeleting","setCurrentAlertDeleting","handleAlertEdit","canEdit","canDelete","canCreate","initialSort","desc","toggleActive","useCallback","data","checked","update_id","original","active","then","catch","columns","Cell","row","last_state","lastState","accessor","size","disableSortBy","last_eval_dttm","lastEvalDttm","local","format","DATETIME_WITH_TIME_ZONE","Header","crontab_humanized","timezone","recipients","r","created_by","first_name","last_name","owners","FacePile","users","changed_on_delta_humanized","changedOn","allowEdit","o","userId","isUserAdmin","Switch","disabled","history","useHistory","push","toLowerCase","filter","item","hidden","subMenuButtons","name","buttonStyle","emptyState","image","buttonAction","buttonText","filters","input","unfilteredLabel","fetchSelects","createFetchRelated","createErrorHandler","errMsg","paginate","selects","header","SubMenu","activeChild","tabs","url","usesRouter","buttons","AlertReportModal","layer","onHide","show","isReport","Date","getTime","DeleteModal","description","onConfirm","SupersetClient","handleAlertDelete","open","ConfirmStatusChange","async","alertsToDelete","message","e","confirmDelete","bulkActions","onSelect","ListView","count","disableBulkSelect","pageSize"],"sourceRoot":""}