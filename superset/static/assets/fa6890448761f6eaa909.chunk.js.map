{"version":3,"file":"fa6890448761f6eaa909.chunk.js","mappings":"iPA+Bc,SAAUA,EAAoBC,GAC1C,MAAM,KACJC,EADI,SAEJC,EAFI,OAGJC,EAHI,MAIJC,EAJI,YAKJC,EALI,iBAMJC,EANI,mBAOJC,EAPI,gBAQJC,EARI,YASJC,EATI,SAUJC,GACEV,GACE,aAAEW,EAAF,YAAgBC,GAAgBV,GAE/BW,EAAOC,IAAY,IAAAC,UAAQ,MAAWJ,EAAAA,EAAgB,IAEvDK,EAAgBH,IACpB,MAAMI,GAAwB,OAAsBJ,GACpDC,EAASG,GACT,MAAMC,EAA+B,GACjCD,EAAYE,SACdD,EAAcE,oBAAsBH,GAGtCZ,EAAY,CACVI,YAAa,CAAEI,MAAOI,EAAYE,OAASF,EAAc,MACzDC,cAAAA,MAIJ,IAAAG,YAAU,KACRL,EAAaP,EAAYI,SACxB,CAACS,KAAKC,UAAUd,EAAYI,OAAQD,KAEvC,IAAAS,YAAU,KACRL,EAAY,MAACL,EAAAA,EAAgB,QAG5B,CAACW,KAAKC,UAAUZ,GAAeC,IAElC,MAAMY,GAAW,OAActB,EAASuB,SAASC,IAAI,KAC/CD,EAAUD,EAAS,GAAGL,OAASK,EAAS,GAAK,KAE7CG,EAAWF,EACbxB,EAAK2B,QAAOC,GAAOJ,EAAQK,SAASD,EAAIE,eACxC9B,EAEE+B,EAAU/B,EAAO0B,EAAW,GAE5BM,EACe,IAAnBD,EAAQb,QACJ,IAAAe,GAAE,eACF,IAAAC,IAAG,YAAa,aAAcH,EAAQb,OAAQa,EAAQb,QAEtDiB,EAA8B,GAChC3B,EAAY4B,kBACdD,EAAaE,OACX,QAAC,KAAD,CAAeC,OAAQ9B,EAAY+B,gBAChC/B,EAAY4B,kBAInB,MAAMI,EAAUT,EAAQN,KACrBG,IACC,MAAQE,YAAaW,EAAYC,aAAcC,GAAgBf,EAC/D,MAAO,CACLgB,MAAK,MAAED,EAAAA,EAAeF,EACtB7B,MAAO6B,MAIb,OACE,QAAC,KAAD,CAAmBvC,OAAQA,EAAQC,MAAOA,IACxC,QAAC,KAAD,KACEoC,eAAgB/B,EAAY+B,gBACxBJ,IAEJ,QAAC,KAAD,CACEU,YAAU,EACVjC,MAAOA,EACPkC,YAAad,EACbe,KAAMpC,EAAc,gBAAaqC,EAEjCC,SAAUlC,EACVmC,OAAQ5C,EACR6C,QAAS9C,EACT+C,IAAK3C,EACL+B,QAASA,EACTa,wBAAyB9C,Q,6EClG5B,MAAM+C,EAAoB,QAAmC;gBACpD,EAAGpD,OAAAA,KAAaA;WACrB,EAAGC,MAAAA,KAAYA;EAGboD,GAAiB,QAAO,IAAS;;;;EAMjCC,EAAgB,QAE3B;WACS,EAAGC,MAAAA,EAAOnB,OAAAA,EAAS,YAAnB,sBAAiCmB,EAAMC,OAAOpB,SAA9C,EAAiC,EAAsBqB","sources":["webpack://superset/./src/filters/components/GroupBy/GroupByFilterPlugin.tsx","webpack://superset/./src/filters/components/common.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ensureIsArray,\n  ExtraFormData,\n  getColumnLabel,\n  t,\n  tn,\n} from '@superset-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { FormItemProps } from 'antd/lib/form';\nimport { Select } from 'src/components';\nimport { FilterPluginStyle, StyledFormItem, StatusMessage } from '../common';\nimport { PluginFilterGroupByProps } from './types';\n\nexport default function PluginFilterGroupBy(props: PluginFilterGroupByProps) {\n  const {\n    data,\n    formData,\n    height,\n    width,\n    setDataMask,\n    setFocusedFilter,\n    unsetFocusedFilter,\n    setFilterActive,\n    filterState,\n    inputRef,\n  } = props;\n  const { defaultValue, multiSelect } = formData;\n\n  const [value, setValue] = useState<string[]>(defaultValue ?? []);\n\n  const handleChange = (value?: string[] | string | null) => {\n    const resultValue: string[] = ensureIsArray<string>(value);\n    setValue(resultValue);\n    const extraFormData: ExtraFormData = {};\n    if (resultValue.length) {\n      extraFormData.interactive_groupby = resultValue;\n    }\n\n    setDataMask({\n      filterState: { value: resultValue.length ? resultValue : null },\n      extraFormData,\n    });\n  };\n\n  useEffect(() => {\n    handleChange(filterState.value);\n  }, [JSON.stringify(filterState.value), multiSelect]);\n\n  useEffect(() => {\n    handleChange(defaultValue ?? null);\n    // I think after Config Modal update some filter it re-creates default value for all other filters\n    // so we can process it like this `JSON.stringify` or start to use `Immer`\n  }, [JSON.stringify(defaultValue), multiSelect]);\n\n  const groupbys = ensureIsArray(formData.groupby).map(getColumnLabel);\n  const groupby = groupbys[0].length ? groupbys[0] : null;\n\n  const withData = groupby\n    ? data.filter(row => groupby.includes(row.column_name as string))\n    : data;\n\n  const columns = data ? withData : [];\n\n  const placeholderText =\n    columns.length === 0\n      ? t('No columns')\n      : tn('%s option', '%s options', columns.length, columns.length);\n\n  const formItemData: FormItemProps = {};\n  if (filterState.validateMessage) {\n    formItemData.extra = (\n      <StatusMessage status={filterState.validateStatus}>\n        {filterState.validateMessage}\n      </StatusMessage>\n    );\n  }\n  const options = columns.map(\n    (row: { column_name: string; verbose_name: string | null }) => {\n      const { column_name: columnName, verbose_name: verboseName } = row;\n      return {\n        label: verboseName ?? columnName,\n        value: columnName,\n      };\n    },\n  );\n  return (\n    <FilterPluginStyle height={height} width={width}>\n      <StyledFormItem\n        validateStatus={filterState.validateStatus}\n        {...formItemData}\n      >\n        <Select\n          allowClear\n          value={value}\n          placeholder={placeholderText}\n          mode={multiSelect ? 'multiple' : undefined}\n          // @ts-ignore\n          onChange={handleChange}\n          onBlur={unsetFocusedFilter}\n          onFocus={setFocusedFilter}\n          ref={inputRef}\n          options={options}\n          onDropdownVisibleChange={setFilterActive}\n        />\n      </StyledFormItem>\n    </FilterPluginStyle>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled } from '@superset-ui/core';\nimport { PluginFilterStylesProps } from './types';\nimport FormItem from '../../components/Form/FormItem';\n\nexport const FilterPluginStyle = styled.div<PluginFilterStylesProps>`\n  min-height: ${({ height }) => height}px;\n  width: ${({ width }) => width}px;\n`;\n\nexport const StyledFormItem = styled(FormItem)`\n  &.ant-row.ant-form-item {\n    margin: 0;\n  }\n`;\n\nexport const StatusMessage = styled.div<{\n  status?: 'error' | 'warning' | 'info';\n}>`\n  color: ${({ theme, status = 'error' }) => theme.colors[status]?.base};\n`;\n"],"names":["PluginFilterGroupBy","props","data","formData","height","width","setDataMask","setFocusedFilter","unsetFocusedFilter","setFilterActive","filterState","inputRef","defaultValue","multiSelect","value","setValue","useState","handleChange","resultValue","extraFormData","length","interactive_groupby","useEffect","JSON","stringify","groupbys","groupby","map","withData","filter","row","includes","column_name","columns","placeholderText","t","tn","formItemData","validateMessage","extra","status","validateStatus","options","columnName","verbose_name","verboseName","label","allowClear","placeholder","mode","undefined","onChange","onBlur","onFocus","ref","onDropdownVisibleChange","FilterPluginStyle","StyledFormItem","StatusMessage","theme","colors","base"],"sourceRoot":""}