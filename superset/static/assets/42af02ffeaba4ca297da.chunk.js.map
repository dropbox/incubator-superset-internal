{"version":3,"file":"42af02ffeaba4ca297da.chunk.js","mappings":"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","sources":["webpack://superset/./node_modules/match-sorter/dist/match-sorter.esm.js","webpack://superset/./node_modules/remove-accents/index.js","webpack://superset/./src/explore/exploreUtils/getParsedExploreURLParams.ts","webpack://superset/./src/components/CachedLabel/TooltipContent.tsx","webpack://superset/./src/components/CachedLabel/index.tsx","webpack://superset/./src/components/Timer/index.tsx","webpack://superset/./src/explore/components/ChartPills.tsx","webpack://superset/./src/explore/components/ExploreAlert.tsx","webpack://superset/./src/explore/components/ExploreChartPanel/index.jsx","webpack://superset/./src/explore/components/ExploreChartPanel/useResizeDetectorByObserver.ts","webpack://superset/./src/explore/components/RunQueryButton/index.tsx","webpack://superset/./src/explore/components/ControlPanelsContainer.tsx","webpack://superset/./src/explore/components/SaveModal.tsx","webpack://superset/./src/explore/components/DatasourcePanel/DatasourcePanelDragOption/index.tsx","webpack://superset/./src/explore/components/DatasourcePanel/index.tsx","webpack://superset/./src/utils/getControlsForVizType.js","webpack://superset/./src/components/AlteredSliceTag/index.jsx","webpack://superset/./src/explore/components/ExploreChartHeader/index.jsx","webpack://superset/./src/explore/components/ExploreViewContainer/index.jsx","webpack://superset/./src/explore/fixtures.tsx","webpack://superset/./src/explore/controlUtils/getFormDataWithDashboardContext.ts","webpack://superset/./src/pages/Chart/index.tsx"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport removeAccents from 'remove-accents';\n\nvar rankings = {\n  CASE_SENSITIVE_EQUAL: 7,\n  EQUAL: 6,\n  STARTS_WITH: 5,\n  WORD_STARTS_WITH: 4,\n  CONTAINS: 3,\n  ACRONYM: 2,\n  MATCHES: 1,\n  NO_MATCH: 0\n};\nmatchSorter.rankings = rankings;\n\nvar defaultBaseSortFn = function defaultBaseSortFn(a, b) {\n  return String(a.rankedValue).localeCompare(String(b.rankedValue));\n};\n/**\n * Takes an array of items and a value and returns a new array with the items that match the given value\n * @param {Array} items - the items to sort\n * @param {String} value - the value to use for ranking\n * @param {Object} options - Some options to configure the sorter\n * @return {Array} - the new sorted array\n */\n\n\nfunction matchSorter(items, value, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      keys = _options.keys,\n      _options$threshold = _options.threshold,\n      threshold = _options$threshold === void 0 ? rankings.MATCHES : _options$threshold,\n      _options$baseSort = _options.baseSort,\n      baseSort = _options$baseSort === void 0 ? defaultBaseSortFn : _options$baseSort,\n      _options$sorter = _options.sorter,\n      sorter = _options$sorter === void 0 ? function (matchedItems) {\n    return matchedItems.sort(function (a, b) {\n      return sortRankedValues(a, b, baseSort);\n    });\n  } : _options$sorter;\n  var matchedItems = items.reduce(reduceItemsToRanked, []);\n  return sorter(matchedItems).map(function (_ref) {\n    var item = _ref.item;\n    return item;\n  });\n\n  function reduceItemsToRanked(matches, item, index) {\n    var rankingInfo = getHighestRanking(item, keys, value, options);\n    var rank = rankingInfo.rank,\n        _rankingInfo$keyThres = rankingInfo.keyThreshold,\n        keyThreshold = _rankingInfo$keyThres === void 0 ? threshold : _rankingInfo$keyThres;\n\n    if (rank >= keyThreshold) {\n      matches.push(_extends({}, rankingInfo, {\n        item: item,\n        index: index\n      }));\n    }\n\n    return matches;\n  }\n}\n/**\n * Gets the highest ranking for value for the given item based on its values for the given keys\n * @param {*} item - the item to rank\n * @param {Array} keys - the keys to get values from the item for the ranking\n * @param {String} value - the value to rank against\n * @param {Object} options - options to control the ranking\n * @return {{rank: Number, keyIndex: Number, keyThreshold: Number}} - the highest ranking\n */\n\n\nfunction getHighestRanking(item, keys, value, options) {\n  if (!keys) {\n    // if keys is not specified, then we assume the item given is ready to be matched\n    var stringItem = item;\n    return {\n      // ends up being duplicate of 'item' in matches but consistent\n      rankedValue: stringItem,\n      rank: getMatchRanking(stringItem, value, options),\n      keyIndex: -1,\n      keyThreshold: options.threshold\n    };\n  }\n\n  var valuesToRank = getAllValuesToRank(item, keys);\n  return valuesToRank.reduce(function (_ref2, _ref3, i) {\n    var rank = _ref2.rank,\n        rankedValue = _ref2.rankedValue,\n        keyIndex = _ref2.keyIndex,\n        keyThreshold = _ref2.keyThreshold;\n    var itemValue = _ref3.itemValue,\n        attributes = _ref3.attributes;\n    var newRank = getMatchRanking(itemValue, value, options);\n    var newRankedValue = rankedValue;\n    var minRanking = attributes.minRanking,\n        maxRanking = attributes.maxRanking,\n        threshold = attributes.threshold;\n\n    if (newRank < minRanking && newRank >= rankings.MATCHES) {\n      newRank = minRanking;\n    } else if (newRank > maxRanking) {\n      newRank = maxRanking;\n    }\n\n    if (newRank > rank) {\n      rank = newRank;\n      keyIndex = i;\n      keyThreshold = threshold;\n      newRankedValue = itemValue;\n    }\n\n    return {\n      rankedValue: newRankedValue,\n      rank: rank,\n      keyIndex: keyIndex,\n      keyThreshold: keyThreshold\n    };\n  }, {\n    rankedValue: item,\n    rank: rankings.NO_MATCH,\n    keyIndex: -1,\n    keyThreshold: options.threshold\n  });\n}\n/**\n * Gives a rankings score based on how well the two strings match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Object} options - options for the match (like keepDiacritics for comparison)\n * @returns {Number} the ranking for how well stringToRank matches testString\n */\n\n\nfunction getMatchRanking(testString, stringToRank, options) {\n  testString = prepareValueForComparison(testString, options);\n  stringToRank = prepareValueForComparison(stringToRank, options); // too long\n\n  if (stringToRank.length > testString.length) {\n    return rankings.NO_MATCH;\n  } // case sensitive equals\n\n\n  if (testString === stringToRank) {\n    return rankings.CASE_SENSITIVE_EQUAL;\n  } // Lower casing before further comparison\n\n\n  testString = testString.toLowerCase();\n  stringToRank = stringToRank.toLowerCase(); // case insensitive equals\n\n  if (testString === stringToRank) {\n    return rankings.EQUAL;\n  } // starts with\n\n\n  if (testString.startsWith(stringToRank)) {\n    return rankings.STARTS_WITH;\n  } // word starts with\n\n\n  if (testString.includes(\" \" + stringToRank)) {\n    return rankings.WORD_STARTS_WITH;\n  } // contains\n\n\n  if (testString.includes(stringToRank)) {\n    return rankings.CONTAINS;\n  } else if (stringToRank.length === 1) {\n    // If the only character in the given stringToRank\n    //   isn't even contained in the testString, then\n    //   it's definitely not a match.\n    return rankings.NO_MATCH;\n  } // acronym\n\n\n  if (getAcronym(testString).includes(stringToRank)) {\n    return rankings.ACRONYM;\n  } // will return a number between rankings.MATCHES and\n  // rankings.MATCHES + 1 depending  on how close of a match it is.\n\n\n  return getClosenessRanking(testString, stringToRank);\n}\n/**\n * Generates an acronym for a string.\n *\n * @param {String} string the string for which to produce the acronym\n * @returns {String} the acronym\n */\n\n\nfunction getAcronym(string) {\n  var acronym = '';\n  var wordsInString = string.split(' ');\n  wordsInString.forEach(function (wordInString) {\n    var splitByHyphenWords = wordInString.split('-');\n    splitByHyphenWords.forEach(function (splitByHyphenWord) {\n      acronym += splitByHyphenWord.substr(0, 1);\n    });\n  });\n  return acronym;\n}\n/**\n * Returns a score based on how spread apart the\n * characters from the stringToRank are within the testString.\n * A number close to rankings.MATCHES represents a loose match. A number close\n * to rankings.MATCHES + 1 represents a tighter match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @returns {Number} the number between rankings.MATCHES and\n * rankings.MATCHES + 1 for how well stringToRank matches testString\n */\n\n\nfunction getClosenessRanking(testString, stringToRank) {\n  var matchingInOrderCharCount = 0;\n  var charNumber = 0;\n\n  function findMatchingCharacter(matchChar, string, index) {\n    for (var j = index, J = string.length; j < J; j++) {\n      var stringChar = string[j];\n\n      if (stringChar === matchChar) {\n        matchingInOrderCharCount += 1;\n        return j + 1;\n      }\n    }\n\n    return -1;\n  }\n\n  function getRanking(spread) {\n    var spreadPercentage = 1 / spread;\n    var inOrderPercentage = matchingInOrderCharCount / stringToRank.length;\n    var ranking = rankings.MATCHES + inOrderPercentage * spreadPercentage;\n    return ranking;\n  }\n\n  var firstIndex = findMatchingCharacter(stringToRank[0], testString, 0);\n\n  if (firstIndex < 0) {\n    return rankings.NO_MATCH;\n  }\n\n  charNumber = firstIndex;\n\n  for (var i = 1, I = stringToRank.length; i < I; i++) {\n    var matchChar = stringToRank[i];\n    charNumber = findMatchingCharacter(matchChar, testString, charNumber);\n    var found = charNumber > -1;\n\n    if (!found) {\n      return rankings.NO_MATCH;\n    }\n  }\n\n  var spread = charNumber - firstIndex;\n  return getRanking(spread);\n}\n/**\n * Sorts items that have a rank, index, and keyIndex\n * @param {Object} a - the first item to sort\n * @param {Object} b - the second item to sort\n * @return {Number} -1 if a should come first, 1 if b should come first, 0 if equal\n */\n\n\nfunction sortRankedValues(a, b, baseSort) {\n  var aFirst = -1;\n  var bFirst = 1;\n  var aRank = a.rank,\n      aKeyIndex = a.keyIndex;\n  var bRank = b.rank,\n      bKeyIndex = b.keyIndex;\n  var same = aRank === bRank;\n\n  if (same) {\n    if (aKeyIndex === bKeyIndex) {\n      // use the base sort function as a tie-breaker\n      return baseSort(a, b);\n    } else {\n      return aKeyIndex < bKeyIndex ? aFirst : bFirst;\n    }\n  } else {\n    return aRank > bRank ? aFirst : bFirst;\n  }\n}\n/**\n * Prepares value for comparison by stringifying it, removing diacritics (if specified)\n * @param {String} value - the value to clean\n * @param {Object} options - {keepDiacritics: whether to remove diacritics}\n * @return {String} the prepared value\n */\n\n\nfunction prepareValueForComparison(value, _ref4) {\n  var keepDiacritics = _ref4.keepDiacritics;\n  // value might not actually be a string at this point (we don't get to choose)\n  // so part of preparing the value for comparison is ensure that it is a string\n  value = \"\" + value; // toString\n\n  if (!keepDiacritics) {\n    value = removeAccents(value);\n  }\n\n  return value;\n}\n/**\n * Gets value for key in item at arbitrarily nested keypath\n * @param {Object} item - the item\n * @param {Object|Function} key - the potentially nested keypath or property callback\n * @return {Array} - an array containing the value(s) at the nested keypath\n */\n\n\nfunction getItemValues(item, key) {\n  if (typeof key === 'object') {\n    key = key.key;\n  }\n\n  var value;\n\n  if (typeof key === 'function') {\n    value = key(item);\n  } else if (item == null) {\n    value = null;\n  } else if (Object.hasOwnProperty.call(item, key)) {\n    value = item[key];\n  } else if (key.includes('.')) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n    return getNestedValues(key, item);\n  } else {\n    value = null;\n  } // because `value` can also be undefined\n\n\n  if (value == null) {\n    return [];\n  }\n\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return [String(value)];\n}\n/**\n * Given path: \"foo.bar.baz\"\n * And item: {foo: {bar: {baz: 'buzz'}}}\n *   -> 'buzz'\n * @param path a dot-separated set of keys\n * @param item the item to get the value from\n */\n\n\nfunction getNestedValues(path, item) {\n  var keys = path.split('.');\n  var values = [item];\n\n  for (var i = 0, I = keys.length; i < I; i++) {\n    var nestedKey = keys[i];\n    var nestedValues = [];\n\n    for (var j = 0, J = values.length; j < J; j++) {\n      var nestedItem = values[j];\n      if (nestedItem == null) continue;\n\n      if (Object.hasOwnProperty.call(nestedItem, nestedKey)) {\n        var nestedValue = nestedItem[nestedKey];\n\n        if (nestedValue != null) {\n          nestedValues.push(nestedValue);\n        }\n      } else if (nestedKey === '*') {\n        // ensure that values is an array\n        nestedValues = nestedValues.concat(nestedItem);\n      }\n    }\n\n    values = nestedValues;\n  }\n\n  if (Array.isArray(values[0])) {\n    // keep allowing the implicit wildcard for an array of strings at the end of\n    // the path; don't use `.flat()` because that's not available in node.js v10\n    var result = [];\n    return result.concat.apply(result, values);\n  } // Based on our logic it should be an array of strings by now...\n  // assuming the user's path terminated in strings\n\n\n  return values;\n}\n/**\n * Gets all the values for the given keys in the given item and returns an array of those values\n * @param item - the item from which the values will be retrieved\n * @param keys - the keys to use to retrieve the values\n * @return objects with {itemValue, attributes}\n */\n\n\nfunction getAllValuesToRank(item, keys) {\n  var allValues = [];\n\n  for (var j = 0, J = keys.length; j < J; j++) {\n    var key = keys[j];\n    var attributes = getKeyAttributes(key);\n    var itemValues = getItemValues(item, key);\n\n    for (var i = 0, I = itemValues.length; i < I; i++) {\n      allValues.push({\n        itemValue: itemValues[i],\n        attributes: attributes\n      });\n    }\n  }\n\n  return allValues;\n}\n\nvar defaultKeyAttributes = {\n  maxRanking: Infinity,\n  minRanking: -Infinity\n};\n/**\n * Gets all the attributes for the given key\n * @param key - the key from which the attributes will be retrieved\n * @return object containing the key's attributes\n */\n\nfunction getKeyAttributes(key) {\n  if (typeof key === 'string') {\n    return defaultKeyAttributes;\n  }\n\n  return _extends({}, defaultKeyAttributes, key);\n}\n/*\neslint\n  no-continue: \"off\",\n*/\n\nexport { defaultBaseSortFn, matchSorter, rankings };\n","var characterMap = {\r\n\t\"À\": \"A\",\r\n\t\"Á\": \"A\",\r\n\t\"Â\": \"A\",\r\n\t\"Ã\": \"A\",\r\n\t\"Ä\": \"A\",\r\n\t\"Å\": \"A\",\r\n\t\"Ấ\": \"A\",\r\n\t\"Ắ\": \"A\",\r\n\t\"Ẳ\": \"A\",\r\n\t\"Ẵ\": \"A\",\r\n\t\"Ặ\": \"A\",\r\n\t\"Æ\": \"AE\",\r\n\t\"Ầ\": \"A\",\r\n\t\"Ằ\": \"A\",\r\n\t\"Ȃ\": \"A\",\r\n\t\"Ç\": \"C\",\r\n\t\"Ḉ\": \"C\",\r\n\t\"È\": \"E\",\r\n\t\"É\": \"E\",\r\n\t\"Ê\": \"E\",\r\n\t\"Ë\": \"E\",\r\n\t\"Ế\": \"E\",\r\n\t\"Ḗ\": \"E\",\r\n\t\"Ề\": \"E\",\r\n\t\"Ḕ\": \"E\",\r\n\t\"Ḝ\": \"E\",\r\n\t\"Ȇ\": \"E\",\r\n\t\"Ì\": \"I\",\r\n\t\"Í\": \"I\",\r\n\t\"Î\": \"I\",\r\n\t\"Ï\": \"I\",\r\n\t\"Ḯ\": \"I\",\r\n\t\"Ȋ\": \"I\",\r\n\t\"Ð\": \"D\",\r\n\t\"Ñ\": \"N\",\r\n\t\"Ò\": \"O\",\r\n\t\"Ó\": \"O\",\r\n\t\"Ô\": \"O\",\r\n\t\"Õ\": \"O\",\r\n\t\"Ö\": \"O\",\r\n\t\"Ø\": \"O\",\r\n\t\"Ố\": \"O\",\r\n\t\"Ṍ\": \"O\",\r\n\t\"Ṓ\": \"O\",\r\n\t\"Ȏ\": \"O\",\r\n\t\"Ù\": \"U\",\r\n\t\"Ú\": \"U\",\r\n\t\"Û\": \"U\",\r\n\t\"Ü\": \"U\",\r\n\t\"Ý\": \"Y\",\r\n\t\"à\": \"a\",\r\n\t\"á\": \"a\",\r\n\t\"â\": \"a\",\r\n\t\"ã\": \"a\",\r\n\t\"ä\": \"a\",\r\n\t\"å\": \"a\",\r\n\t\"ấ\": \"a\",\r\n\t\"ắ\": \"a\",\r\n\t\"ẳ\": \"a\",\r\n\t\"ẵ\": \"a\",\r\n\t\"ặ\": \"a\",\r\n\t\"æ\": \"ae\",\r\n\t\"ầ\": \"a\",\r\n\t\"ằ\": \"a\",\r\n\t\"ȃ\": \"a\",\r\n\t\"ç\": \"c\",\r\n\t\"ḉ\": \"c\",\r\n\t\"è\": \"e\",\r\n\t\"é\": \"e\",\r\n\t\"ê\": \"e\",\r\n\t\"ë\": \"e\",\r\n\t\"ế\": \"e\",\r\n\t\"ḗ\": \"e\",\r\n\t\"ề\": \"e\",\r\n\t\"ḕ\": \"e\",\r\n\t\"ḝ\": \"e\",\r\n\t\"ȇ\": \"e\",\r\n\t\"ì\": \"i\",\r\n\t\"í\": \"i\",\r\n\t\"î\": \"i\",\r\n\t\"ï\": \"i\",\r\n\t\"ḯ\": \"i\",\r\n\t\"ȋ\": \"i\",\r\n\t\"ð\": \"d\",\r\n\t\"ñ\": \"n\",\r\n\t\"ò\": \"o\",\r\n\t\"ó\": \"o\",\r\n\t\"ô\": \"o\",\r\n\t\"õ\": \"o\",\r\n\t\"ö\": \"o\",\r\n\t\"ø\": \"o\",\r\n\t\"ố\": \"o\",\r\n\t\"ṍ\": \"o\",\r\n\t\"ṓ\": \"o\",\r\n\t\"ȏ\": \"o\",\r\n\t\"ù\": \"u\",\r\n\t\"ú\": \"u\",\r\n\t\"û\": \"u\",\r\n\t\"ü\": \"u\",\r\n\t\"ý\": \"y\",\r\n\t\"ÿ\": \"y\",\r\n\t\"Ā\": \"A\",\r\n\t\"ā\": \"a\",\r\n\t\"Ă\": \"A\",\r\n\t\"ă\": \"a\",\r\n\t\"Ą\": \"A\",\r\n\t\"ą\": \"a\",\r\n\t\"Ć\": \"C\",\r\n\t\"ć\": \"c\",\r\n\t\"Ĉ\": \"C\",\r\n\t\"ĉ\": \"c\",\r\n\t\"Ċ\": \"C\",\r\n\t\"ċ\": \"c\",\r\n\t\"Č\": \"C\",\r\n\t\"č\": \"c\",\r\n\t\"C̆\": \"C\",\r\n\t\"c̆\": \"c\",\r\n\t\"Ď\": \"D\",\r\n\t\"ď\": \"d\",\r\n\t\"Đ\": \"D\",\r\n\t\"đ\": \"d\",\r\n\t\"Ē\": \"E\",\r\n\t\"ē\": \"e\",\r\n\t\"Ĕ\": \"E\",\r\n\t\"ĕ\": \"e\",\r\n\t\"Ė\": \"E\",\r\n\t\"ė\": \"e\",\r\n\t\"Ę\": \"E\",\r\n\t\"ę\": \"e\",\r\n\t\"Ě\": \"E\",\r\n\t\"ě\": \"e\",\r\n\t\"Ĝ\": \"G\",\r\n\t\"Ǵ\": \"G\",\r\n\t\"ĝ\": \"g\",\r\n\t\"ǵ\": \"g\",\r\n\t\"Ğ\": \"G\",\r\n\t\"ğ\": \"g\",\r\n\t\"Ġ\": \"G\",\r\n\t\"ġ\": \"g\",\r\n\t\"Ģ\": \"G\",\r\n\t\"ģ\": \"g\",\r\n\t\"Ĥ\": \"H\",\r\n\t\"ĥ\": \"h\",\r\n\t\"Ħ\": \"H\",\r\n\t\"ħ\": \"h\",\r\n\t\"Ḫ\": \"H\",\r\n\t\"ḫ\": \"h\",\r\n\t\"Ĩ\": \"I\",\r\n\t\"ĩ\": \"i\",\r\n\t\"Ī\": \"I\",\r\n\t\"ī\": \"i\",\r\n\t\"Ĭ\": \"I\",\r\n\t\"ĭ\": \"i\",\r\n\t\"Į\": \"I\",\r\n\t\"į\": \"i\",\r\n\t\"İ\": \"I\",\r\n\t\"ı\": \"i\",\r\n\t\"Ĳ\": \"IJ\",\r\n\t\"ĳ\": \"ij\",\r\n\t\"Ĵ\": \"J\",\r\n\t\"ĵ\": \"j\",\r\n\t\"Ķ\": \"K\",\r\n\t\"ķ\": \"k\",\r\n\t\"Ḱ\": \"K\",\r\n\t\"ḱ\": \"k\",\r\n\t\"K̆\": \"K\",\r\n\t\"k̆\": \"k\",\r\n\t\"Ĺ\": \"L\",\r\n\t\"ĺ\": \"l\",\r\n\t\"Ļ\": \"L\",\r\n\t\"ļ\": \"l\",\r\n\t\"Ľ\": \"L\",\r\n\t\"ľ\": \"l\",\r\n\t\"Ŀ\": \"L\",\r\n\t\"ŀ\": \"l\",\r\n\t\"Ł\": \"l\",\r\n\t\"ł\": \"l\",\r\n\t\"Ḿ\": \"M\",\r\n\t\"ḿ\": \"m\",\r\n\t\"M̆\": \"M\",\r\n\t\"m̆\": \"m\",\r\n\t\"Ń\": \"N\",\r\n\t\"ń\": \"n\",\r\n\t\"Ņ\": \"N\",\r\n\t\"ņ\": \"n\",\r\n\t\"Ň\": \"N\",\r\n\t\"ň\": \"n\",\r\n\t\"ŉ\": \"n\",\r\n\t\"N̆\": \"N\",\r\n\t\"n̆\": \"n\",\r\n\t\"Ō\": \"O\",\r\n\t\"ō\": \"o\",\r\n\t\"Ŏ\": \"O\",\r\n\t\"ŏ\": \"o\",\r\n\t\"Ő\": \"O\",\r\n\t\"ő\": \"o\",\r\n\t\"Œ\": \"OE\",\r\n\t\"œ\": \"oe\",\r\n\t\"P̆\": \"P\",\r\n\t\"p̆\": \"p\",\r\n\t\"Ŕ\": \"R\",\r\n\t\"ŕ\": \"r\",\r\n\t\"Ŗ\": \"R\",\r\n\t\"ŗ\": \"r\",\r\n\t\"Ř\": \"R\",\r\n\t\"ř\": \"r\",\r\n\t\"R̆\": \"R\",\r\n\t\"r̆\": \"r\",\r\n\t\"Ȓ\": \"R\",\r\n\t\"ȓ\": \"r\",\r\n\t\"Ś\": \"S\",\r\n\t\"ś\": \"s\",\r\n\t\"Ŝ\": \"S\",\r\n\t\"ŝ\": \"s\",\r\n\t\"Ş\": \"S\",\r\n\t\"Ș\": \"S\",\r\n\t\"ș\": \"s\",\r\n\t\"ş\": \"s\",\r\n\t\"Š\": \"S\",\r\n\t\"š\": \"s\",\r\n\t\"Ţ\": \"T\",\r\n\t\"ţ\": \"t\",\r\n\t\"ț\": \"t\",\r\n\t\"Ț\": \"T\",\r\n\t\"Ť\": \"T\",\r\n\t\"ť\": \"t\",\r\n\t\"Ŧ\": \"T\",\r\n\t\"ŧ\": \"t\",\r\n\t\"T̆\": \"T\",\r\n\t\"t̆\": \"t\",\r\n\t\"Ũ\": \"U\",\r\n\t\"ũ\": \"u\",\r\n\t\"Ū\": \"U\",\r\n\t\"ū\": \"u\",\r\n\t\"Ŭ\": \"U\",\r\n\t\"ŭ\": \"u\",\r\n\t\"Ů\": \"U\",\r\n\t\"ů\": \"u\",\r\n\t\"Ű\": \"U\",\r\n\t\"ű\": \"u\",\r\n\t\"Ų\": \"U\",\r\n\t\"ų\": \"u\",\r\n\t\"Ȗ\": \"U\",\r\n\t\"ȗ\": \"u\",\r\n\t\"V̆\": \"V\",\r\n\t\"v̆\": \"v\",\r\n\t\"Ŵ\": \"W\",\r\n\t\"ŵ\": \"w\",\r\n\t\"Ẃ\": \"W\",\r\n\t\"ẃ\": \"w\",\r\n\t\"X̆\": \"X\",\r\n\t\"x̆\": \"x\",\r\n\t\"Ŷ\": \"Y\",\r\n\t\"ŷ\": \"y\",\r\n\t\"Ÿ\": \"Y\",\r\n\t\"Y̆\": \"Y\",\r\n\t\"y̆\": \"y\",\r\n\t\"Ź\": \"Z\",\r\n\t\"ź\": \"z\",\r\n\t\"Ż\": \"Z\",\r\n\t\"ż\": \"z\",\r\n\t\"Ž\": \"Z\",\r\n\t\"ž\": \"z\",\r\n\t\"ſ\": \"s\",\r\n\t\"ƒ\": \"f\",\r\n\t\"Ơ\": \"O\",\r\n\t\"ơ\": \"o\",\r\n\t\"Ư\": \"U\",\r\n\t\"ư\": \"u\",\r\n\t\"Ǎ\": \"A\",\r\n\t\"ǎ\": \"a\",\r\n\t\"Ǐ\": \"I\",\r\n\t\"ǐ\": \"i\",\r\n\t\"Ǒ\": \"O\",\r\n\t\"ǒ\": \"o\",\r\n\t\"Ǔ\": \"U\",\r\n\t\"ǔ\": \"u\",\r\n\t\"Ǖ\": \"U\",\r\n\t\"ǖ\": \"u\",\r\n\t\"Ǘ\": \"U\",\r\n\t\"ǘ\": \"u\",\r\n\t\"Ǚ\": \"U\",\r\n\t\"ǚ\": \"u\",\r\n\t\"Ǜ\": \"U\",\r\n\t\"ǜ\": \"u\",\r\n\t\"Ứ\": \"U\",\r\n\t\"ứ\": \"u\",\r\n\t\"Ṹ\": \"U\",\r\n\t\"ṹ\": \"u\",\r\n\t\"Ǻ\": \"A\",\r\n\t\"ǻ\": \"a\",\r\n\t\"Ǽ\": \"AE\",\r\n\t\"ǽ\": \"ae\",\r\n\t\"Ǿ\": \"O\",\r\n\t\"ǿ\": \"o\",\r\n\t\"Þ\": \"TH\",\r\n\t\"þ\": \"th\",\r\n\t\"Ṕ\": \"P\",\r\n\t\"ṕ\": \"p\",\r\n\t\"Ṥ\": \"S\",\r\n\t\"ṥ\": \"s\",\r\n\t\"X́\": \"X\",\r\n\t\"x́\": \"x\",\r\n\t\"Ѓ\": \"Г\",\r\n\t\"ѓ\": \"г\",\r\n\t\"Ќ\": \"К\",\r\n\t\"ќ\": \"к\",\r\n\t\"A̋\": \"A\",\r\n\t\"a̋\": \"a\",\r\n\t\"E̋\": \"E\",\r\n\t\"e̋\": \"e\",\r\n\t\"I̋\": \"I\",\r\n\t\"i̋\": \"i\",\r\n\t\"Ǹ\": \"N\",\r\n\t\"ǹ\": \"n\",\r\n\t\"Ồ\": \"O\",\r\n\t\"ồ\": \"o\",\r\n\t\"Ṑ\": \"O\",\r\n\t\"ṑ\": \"o\",\r\n\t\"Ừ\": \"U\",\r\n\t\"ừ\": \"u\",\r\n\t\"Ẁ\": \"W\",\r\n\t\"ẁ\": \"w\",\r\n\t\"Ỳ\": \"Y\",\r\n\t\"ỳ\": \"y\",\r\n\t\"Ȁ\": \"A\",\r\n\t\"ȁ\": \"a\",\r\n\t\"Ȅ\": \"E\",\r\n\t\"ȅ\": \"e\",\r\n\t\"Ȉ\": \"I\",\r\n\t\"ȉ\": \"i\",\r\n\t\"Ȍ\": \"O\",\r\n\t\"ȍ\": \"o\",\r\n\t\"Ȑ\": \"R\",\r\n\t\"ȑ\": \"r\",\r\n\t\"Ȕ\": \"U\",\r\n\t\"ȕ\": \"u\",\r\n\t\"B̌\": \"B\",\r\n\t\"b̌\": \"b\",\r\n\t\"Č̣\": \"C\",\r\n\t\"č̣\": \"c\",\r\n\t\"Ê̌\": \"E\",\r\n\t\"ê̌\": \"e\",\r\n\t\"F̌\": \"F\",\r\n\t\"f̌\": \"f\",\r\n\t\"Ǧ\": \"G\",\r\n\t\"ǧ\": \"g\",\r\n\t\"Ȟ\": \"H\",\r\n\t\"ȟ\": \"h\",\r\n\t\"J̌\": \"J\",\r\n\t\"ǰ\": \"j\",\r\n\t\"Ǩ\": \"K\",\r\n\t\"ǩ\": \"k\",\r\n\t\"M̌\": \"M\",\r\n\t\"m̌\": \"m\",\r\n\t\"P̌\": \"P\",\r\n\t\"p̌\": \"p\",\r\n\t\"Q̌\": \"Q\",\r\n\t\"q̌\": \"q\",\r\n\t\"Ř̩\": \"R\",\r\n\t\"ř̩\": \"r\",\r\n\t\"Ṧ\": \"S\",\r\n\t\"ṧ\": \"s\",\r\n\t\"V̌\": \"V\",\r\n\t\"v̌\": \"v\",\r\n\t\"W̌\": \"W\",\r\n\t\"w̌\": \"w\",\r\n\t\"X̌\": \"X\",\r\n\t\"x̌\": \"x\",\r\n\t\"Y̌\": \"Y\",\r\n\t\"y̌\": \"y\",\r\n\t\"A̧\": \"A\",\r\n\t\"a̧\": \"a\",\r\n\t\"B̧\": \"B\",\r\n\t\"b̧\": \"b\",\r\n\t\"Ḑ\": \"D\",\r\n\t\"ḑ\": \"d\",\r\n\t\"Ȩ\": \"E\",\r\n\t\"ȩ\": \"e\",\r\n\t\"Ɛ̧\": \"E\",\r\n\t\"ɛ̧\": \"e\",\r\n\t\"Ḩ\": \"H\",\r\n\t\"ḩ\": \"h\",\r\n\t\"I̧\": \"I\",\r\n\t\"i̧\": \"i\",\r\n\t\"Ɨ̧\": \"I\",\r\n\t\"ɨ̧\": \"i\",\r\n\t\"M̧\": \"M\",\r\n\t\"m̧\": \"m\",\r\n\t\"O̧\": \"O\",\r\n\t\"o̧\": \"o\",\r\n\t\"Q̧\": \"Q\",\r\n\t\"q̧\": \"q\",\r\n\t\"U̧\": \"U\",\r\n\t\"u̧\": \"u\",\r\n\t\"X̧\": \"X\",\r\n\t\"x̧\": \"x\",\r\n\t\"Z̧\": \"Z\",\r\n\t\"z̧\": \"z\",\r\n};\r\n\r\nvar chars = Object.keys(characterMap).join('|');\r\nvar allAccents = new RegExp(chars, 'g');\r\nvar firstAccent = new RegExp(chars, '');\r\n\r\nvar removeAccents = function(string) {\t\r\n\treturn string.replace(allAccents, function(match) {\r\n\t\treturn characterMap[match];\r\n\t});\r\n};\r\n\r\nvar hasAccents = function(string) {\r\n\treturn !!string.match(firstAccent);\r\n};\r\n\r\nmodule.exports = removeAccents;\r\nmodule.exports.has = hasAccents;\r\nmodule.exports.remove = removeAccents;\r\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport interface Location {\n  search: string;\n  pathname: string;\n}\n\n// mapping { url_param: v1_explore_request_param }\nconst EXPLORE_URL_SEARCH_PARAMS = {\n  form_data: {\n    name: 'form_data',\n    parser: (formData: string) => {\n      const formDataObject = JSON.parse(formData);\n      if (formDataObject.datasource) {\n        const [datasource_id, datasource_type] =\n          formDataObject.datasource.split('__');\n        formDataObject.datasource_id = datasource_id;\n        formDataObject.datasource_type = datasource_type;\n        delete formDataObject.datasource;\n      }\n      return formDataObject;\n    },\n  },\n  slice_id: {\n    name: 'slice_id',\n  },\n  datasource_id: {\n    name: 'datasource_id',\n  },\n  datasource_type: {\n    name: 'datasource_type',\n  },\n  datasource: {\n    name: 'datasource',\n    parser: (datasource: string) => {\n      const [datasource_id, datasource_type] = datasource.split('__');\n      return { datasource_id, datasource_type };\n    },\n  },\n  form_data_key: {\n    name: 'form_data_key',\n  },\n  permalink_key: {\n    name: 'permalink_key',\n  },\n  viz_type: {\n    name: 'viz_type',\n  },\n  dashboard_id: {\n    name: 'dashboard_id',\n  },\n};\n\nconst EXPLORE_URL_PATH_PARAMS = {\n  p: 'permalink_key', // permalink\n  table: 'datasource_id',\n};\n\n// search params can be placed in form_data object\n// we need to \"flatten\" the search params to use them with /v1/explore endpoint\nconst getParsedExploreURLSearchParams = (search: string) => {\n  const urlSearchParams = new URLSearchParams(search);\n  return Array.from(urlSearchParams.keys()).reduce((acc, currentParam) => {\n    const paramValue = urlSearchParams.get(currentParam);\n    if (paramValue === null) {\n      return acc;\n    }\n    let parsedParamValue;\n    try {\n      parsedParamValue =\n        EXPLORE_URL_SEARCH_PARAMS[currentParam].parser?.(paramValue) ??\n        paramValue;\n    } catch {\n      parsedParamValue = paramValue;\n    }\n    if (typeof parsedParamValue === 'object') {\n      return { ...acc, ...parsedParamValue };\n    }\n    const key = EXPLORE_URL_SEARCH_PARAMS[currentParam]?.name || currentParam;\n    return {\n      ...acc,\n      [key]: parsedParamValue,\n    };\n  }, {});\n};\n\n// path params need to be transformed to search params to use them with /v1/explore endpoint\nconst getParsedExploreURLPathParams = (pathname: string) =>\n  Object.keys(EXPLORE_URL_PATH_PARAMS).reduce((acc, currentParam) => {\n    const re = new RegExp(`/(${currentParam})/(\\\\w+)`);\n    const pathGroups = pathname.match(re);\n    if (pathGroups?.[2]) {\n      return { ...acc, [EXPLORE_URL_PATH_PARAMS[currentParam]]: pathGroups[2] };\n    }\n    return acc;\n  }, {});\n\nexport const getParsedExploreURLParams = (\n  location: Location = window.location,\n) =>\n  new URLSearchParams(\n    Object.entries({\n      ...getParsedExploreURLSearchParams(location.search),\n      ...getParsedExploreURLPathParams(location.pathname),\n    })\n      .map(entry => entry.join('='))\n      .join('&'),\n  );\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport moment from 'moment';\nimport { t } from '@superset-ui/core';\n\ninterface Props {\n  cachedTimestamp?: string;\n}\nexport const TooltipContent: React.FC<Props> = ({ cachedTimestamp }) => {\n  const cachedText = cachedTimestamp ? (\n    <span>\n      {t('Loaded data cached')}\n      <b> {moment.utc(cachedTimestamp).fromNow()}</b>\n    </span>\n  ) : (\n    t('Loaded from cache')\n  );\n\n  return (\n    <span data-test=\"tooltip-content\">\n      {cachedText}. {t('Click to force-refresh')}\n    </span>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport Label from 'src/components/Label';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { TooltipContent } from './TooltipContent';\n\nexport interface CacheLabelProps {\n  onClick?: React.MouseEventHandler<HTMLElement>;\n  cachedTimestamp?: string;\n  className?: string;\n}\n\nconst CacheLabel: React.FC<CacheLabelProps> = ({\n  className,\n  onClick,\n  cachedTimestamp,\n}) => {\n  const [hovered, setHovered] = useState(false);\n\n  const labelType = hovered ? 'primary' : 'default';\n  return (\n    <Tooltip\n      title={<TooltipContent cachedTimestamp={cachedTimestamp} />}\n      id=\"cache-desc-tooltip\"\n    >\n      <Label\n        className={`${className}`}\n        type={labelType}\n        onClick={onClick}\n        onMouseOver={() => setHovered(true)}\n        onMouseOut={() => setHovered(false)}\n      >\n        {t('Cached')} <i className=\"fa fa-refresh\" />\n      </Label>\n    </Tooltip>\n  );\n};\n\nexport default CacheLabel;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport Label, { Type } from 'src/components/Label';\n\nimport { now, fDuration } from 'src/utils/dates';\n\nexport interface TimerProps {\n  endTime?: number;\n  isRunning: boolean;\n  startTime?: number;\n  status?: Type;\n}\n\nconst TimerLabel = styled(Label)`\n  text-align: left;\n  font-family: ${({ theme }) => theme.typography.families.monospace};\n`;\n\nexport default function Timer({\n  endTime,\n  isRunning,\n  startTime,\n  status = 'success',\n}: TimerProps) {\n  const [clockStr, setClockStr] = useState('00:00:00.00');\n  const timer = useRef<ReturnType<typeof setInterval>>();\n\n  useEffect(() => {\n    const stopTimer = () => {\n      if (timer.current) {\n        clearInterval(timer.current);\n        timer.current = undefined;\n      }\n    };\n\n    if (isRunning) {\n      timer.current = setInterval(() => {\n        if (startTime) {\n          const endDttm = endTime || now();\n          if (startTime < endDttm) {\n            setClockStr(fDuration(startTime, endDttm));\n          }\n          if (!isRunning) {\n            stopTimer();\n          }\n        }\n      }, 30);\n    }\n    return stopTimer;\n  }, [endTime, isRunning, startTime]);\n\n  return (\n    <TimerLabel type={status} role=\"timer\">\n      {clockStr}\n    </TimerLabel>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { forwardRef, RefObject } from 'react';\nimport { css, QueryData, SupersetTheme } from '@superset-ui/core';\nimport RowCountLabel from 'src/explore/components/RowCountLabel';\nimport CachedLabel from 'src/components/CachedLabel';\nimport Timer from 'src/components/Timer';\n\nenum CHART_STATUS_MAP {\n  failed = 'danger',\n  loading = 'warning',\n  success = 'success',\n}\n\nexport type ChartPillsProps = {\n  queriesResponse: QueryData[];\n  chartStatus: keyof typeof CHART_STATUS_MAP;\n  chartUpdateStartTime: number;\n  chartUpdateEndTime: number;\n  refreshCachedQuery: () => void;\n  rowLimit: string | number;\n};\n\nexport const ChartPills = forwardRef(\n  (\n    {\n      queriesResponse,\n      chartStatus,\n      chartUpdateStartTime,\n      chartUpdateEndTime,\n      refreshCachedQuery,\n      rowLimit,\n    }: ChartPillsProps,\n    ref: RefObject<HTMLDivElement>,\n  ) => {\n    const isLoading = chartStatus === 'loading';\n    const firstQueryResponse = queriesResponse?.[0];\n    return (\n      <div ref={ref}>\n        <div\n          css={(theme: SupersetTheme) => css`\n            display: flex;\n            justify-content: flex-end;\n            padding-bottom: ${theme.gridUnit * 4}px;\n            & .ant-tag:last-of-type {\n              margin: 0;\n            }\n          `}\n        >\n          {!isLoading && firstQueryResponse && (\n            <RowCountLabel\n              rowcount={Number(firstQueryResponse.rowcount) || 0}\n              limit={Number(rowLimit) || 0}\n            />\n          )}\n          {!isLoading && firstQueryResponse?.is_cached && (\n            <CachedLabel\n              onClick={refreshCachedQuery}\n              cachedTimestamp={firstQueryResponse.cached_dttm}\n            />\n          )}\n          <Timer\n            startTime={chartUpdateStartTime}\n            endTime={chartUpdateEndTime}\n            isRunning={isLoading}\n            status={CHART_STATUS_MAP[chartStatus]}\n          />\n        </div>\n      </div>\n    );\n  },\n);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { forwardRef, RefObject } from 'react';\nimport { css, styled } from '@superset-ui/core';\nimport Button from 'src/components/Button';\n\ninterface ControlPanelAlertProps {\n  title: string;\n  bodyText: string;\n  primaryButtonAction?: (e: React.MouseEvent) => void;\n  secondaryButtonAction?: (e: React.MouseEvent) => void;\n  primaryButtonText?: string;\n  secondaryButtonText?: string;\n  type: 'info' | 'warning' | 'error';\n  className?: string;\n}\n\nconst AlertContainer = styled.div`\n  ${({ theme }) => css`\n    margin: ${theme.gridUnit * 4}px;\n    padding: ${theme.gridUnit * 4}px;\n\n    border: 1px solid ${theme.colors.info.base};\n    background-color: ${theme.colors.info.light2};\n    border-radius: 2px;\n\n    color: ${theme.colors.info.dark2};\n    font-size: ${theme.typography.sizes.m}px;\n\n    p {\n      margin-bottom: ${theme.gridUnit}px;\n    }\n\n    & a,\n    & span[role='button'] {\n      color: inherit;\n      text-decoration: underline;\n      &:hover {\n        color: ${theme.colors.info.dark1};\n      }\n    }\n\n    &.alert-type-warning {\n      border-color: ${theme.colors.alert.base};\n      background-color: ${theme.colors.alert.light2};\n\n      p {\n        color: ${theme.colors.alert.dark2};\n      }\n\n      & a:hover,\n      & span[role='button']:hover {\n        color: ${theme.colors.alert.dark1};\n      }\n    }\n  `}\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  button {\n    line-height: 1;\n  }\n`;\n\nconst Title = styled.p`\n  font-weight: ${({ theme }) => theme.typography.weights.bold};\n`;\n\nconst typeChart = {\n  warning: 'warning',\n  danger: 'danger',\n};\n\nexport const ExploreAlert = forwardRef(\n  (\n    {\n      title,\n      bodyText,\n      primaryButtonAction,\n      secondaryButtonAction,\n      primaryButtonText,\n      secondaryButtonText,\n      type = 'info',\n      className = '',\n    }: ControlPanelAlertProps,\n    ref: RefObject<HTMLDivElement>,\n  ) => (\n    <AlertContainer className={`alert-type-${type} ${className}`} ref={ref}>\n      <Title>{title}</Title>\n      <p>{bodyText}</p>\n      {primaryButtonText && primaryButtonAction && (\n        <ButtonContainer>\n          {secondaryButtonAction && secondaryButtonText && (\n            <Button\n              buttonStyle=\"link\"\n              buttonSize=\"small\"\n              onClick={secondaryButtonAction}\n            >\n              {secondaryButtonText}\n            </Button>\n          )}\n          <Button\n            buttonStyle={type in typeChart ? typeChart[type] : 'primary'}\n            buttonSize=\"small\"\n            onClick={primaryButtonAction}\n          >\n            {primaryButtonText}\n          </Button>\n        </ButtonContainer>\n      )}\n    </AlertContainer>\n  ),\n);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Split from 'react-split';\nimport {\n  css,\n  DatasourceType,\n  ensureIsArray,\n  FeatureFlag,\n  getChartMetadataRegistry,\n  styled,\n  SupersetClient,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport ChartContainer from 'src/components/Chart/ChartContainer';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport {\n  getItem,\n  setItem,\n  LocalStorageKeys,\n} from 'src/utils/localStorageHelpers';\nimport Alert from 'src/components/Alert';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport { buildV1ChartDataPayload } from 'src/explore/exploreUtils';\nimport { getChartRequiredFieldsMissingMessage } from 'src/utils/getChartRequiredFieldsMissingMessage';\nimport { DataTablesPane } from '../DataTablesPane';\nimport { ChartPills } from '../ChartPills';\nimport { ExploreAlert } from '../ExploreAlert';\nimport useResizeDetectorByObserver from './useResizeDetectorByObserver';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  onQuery: PropTypes.func,\n  can_overwrite: PropTypes.bool.isRequired,\n  can_download: PropTypes.bool.isRequired,\n  datasource: PropTypes.object,\n  dashboardId: PropTypes.number,\n  column_formats: PropTypes.object,\n  containerId: PropTypes.string.isRequired,\n  isStarred: PropTypes.bool.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  table_name: PropTypes.string,\n  vizType: PropTypes.string.isRequired,\n  form_data: PropTypes.object,\n  ownState: PropTypes.object,\n  standalone: PropTypes.bool,\n  force: PropTypes.bool,\n  timeout: PropTypes.number,\n  chartIsStale: PropTypes.bool,\n  chart: chartPropShape,\n  errorMessage: PropTypes.node,\n  triggerRender: PropTypes.bool,\n};\n\nconst GUTTER_SIZE_FACTOR = 1.25;\n\nconst INITIAL_SIZES = [100, 0];\nconst MIN_SIZES = [300, 65];\nconst DEFAULT_SOUTH_PANE_HEIGHT_PERCENT = 40;\n\nconst Styles = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  align-content: stretch;\n  overflow: auto;\n  box-shadow: none;\n  height: 100%;\n\n  & > div {\n    height: 100%;\n  }\n\n  .gutter {\n    border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    width: ${({ theme }) => theme.gridUnit * 9}px;\n    margin: ${({ theme }) => theme.gridUnit * GUTTER_SIZE_FACTOR}px auto;\n  }\n\n  .gutter.gutter-vertical {\n    display: ${({ showSplite }) => (showSplite ? 'block' : 'none')};\n    cursor: row-resize;\n  }\n\n  .ant-collapse {\n    .ant-tabs {\n      height: 100%;\n      .ant-tabs-nav {\n        padding-left: ${({ theme }) => theme.gridUnit * 5}px;\n        margin: 0;\n      }\n      .ant-tabs-content-holder {\n        overflow: hidden;\n        .ant-tabs-content {\n          height: 100%;\n        }\n      }\n    }\n  }\n`;\n\nconst ExploreChartPanel = ({\n  chart,\n  slice,\n  vizType,\n  ownState,\n  triggerRender,\n  force,\n  datasource,\n  errorMessage,\n  form_data: formData,\n  onQuery,\n  actions,\n  timeout,\n  standalone,\n  chartIsStale,\n  chartAlert,\n}) => {\n  const theme = useTheme();\n  const gutterMargin = theme.gridUnit * GUTTER_SIZE_FACTOR;\n  const gutterHeight = theme.gridUnit * GUTTER_SIZE_FACTOR;\n  const {\n    ref: chartPanelRef,\n    observerRef: resizeObserverRef,\n    width: chartPanelWidth,\n    height: chartPanelHeight,\n  } = useResizeDetectorByObserver();\n  const [splitSizes, setSplitSizes] = useState(\n    isFeatureEnabled(FeatureFlag.DATAPANEL_CLOSED_BY_DEFAULT)\n      ? INITIAL_SIZES\n      : getItem(LocalStorageKeys.chart_split_sizes, INITIAL_SIZES),\n  );\n  const [showSplite, setShowSplit] = useState(\n    isFeatureEnabled(FeatureFlag.DATAPANEL_CLOSED_BY_DEFAULT)\n      ? false\n      : getItem(LocalStorageKeys.is_datapanel_open, false),\n  );\n\n  const [showDatasetModal, setShowDatasetModal] = useState(false);\n\n  const metaDataRegistry = getChartMetadataRegistry();\n  const { useLegacyApi } = metaDataRegistry.get(vizType) ?? {};\n  const vizTypeNeedsDataset =\n    useLegacyApi && datasource.type !== DatasourceType.Table;\n  // added boolean column to below show boolean so that the errors aren't overlapping\n  const showAlertBanner =\n    !chartAlert &&\n    chartIsStale &&\n    !vizTypeNeedsDataset &&\n    chart.chartStatus !== 'failed' &&\n    ensureIsArray(chart.queriesResponse).length > 0;\n\n  const updateQueryContext = useCallback(\n    async function fetchChartData() {\n      if (slice && slice.query_context === null) {\n        const queryContext = buildV1ChartDataPayload({\n          formData: slice.form_data,\n          force,\n          resultFormat: 'json',\n          resultType: 'full',\n          setDataMask: null,\n          ownState: null,\n        });\n\n        await SupersetClient.put({\n          endpoint: `/api/v1/chart/${slice.slice_id}`,\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            query_context: JSON.stringify(queryContext),\n            query_context_generation: true,\n          }),\n        });\n      }\n    },\n    [slice],\n  );\n\n  useEffect(() => {\n    updateQueryContext();\n  }, [updateQueryContext]);\n\n  useEffect(() => {\n    setItem(LocalStorageKeys.chart_split_sizes, splitSizes);\n  }, [splitSizes]);\n\n  const onDragEnd = useCallback(sizes => {\n    setSplitSizes(sizes);\n  }, []);\n\n  const refreshCachedQuery = useCallback(() => {\n    actions.setForceQuery(true);\n    actions.postChartFormData(\n      formData,\n      true,\n      timeout,\n      chart.id,\n      undefined,\n      ownState,\n    );\n    actions.updateQueryFormData(formData, chart.id);\n  }, [actions, chart.id, formData, ownState, timeout]);\n\n  const onCollapseChange = useCallback(isOpen => {\n    let splitSizes;\n    if (!isOpen) {\n      splitSizes = INITIAL_SIZES;\n    } else {\n      splitSizes = [\n        100 - DEFAULT_SOUTH_PANE_HEIGHT_PERCENT,\n        DEFAULT_SOUTH_PANE_HEIGHT_PERCENT,\n      ];\n    }\n    setSplitSizes(splitSizes);\n    setShowSplit(isOpen);\n  }, []);\n\n  const renderChart = useCallback(\n    () => (\n      <div\n        css={css`\n          min-height: 0;\n          flex: 1;\n          overflow: auto;\n        `}\n        ref={chartPanelRef}\n      >\n        {chartPanelWidth && chartPanelHeight && (\n          <ChartContainer\n            width={Math.floor(chartPanelWidth)}\n            height={chartPanelHeight}\n            ownState={ownState}\n            annotationData={chart.annotationData}\n            chartAlert={chart.chartAlert}\n            chartStackTrace={chart.chartStackTrace}\n            chartId={chart.id}\n            chartStatus={chart.chartStatus}\n            triggerRender={triggerRender}\n            force={force}\n            datasource={datasource}\n            errorMessage={errorMessage}\n            formData={formData}\n            latestQueryFormData={chart.latestQueryFormData}\n            onQuery={onQuery}\n            queriesResponse={chart.queriesResponse}\n            chartIsStale={chartIsStale}\n            setControlValue={actions.setControlValue}\n            timeout={timeout}\n            triggerQuery={chart.triggerQuery}\n            vizType={vizType}\n          />\n        )}\n      </div>\n    ),\n    [\n      actions.setControlValue,\n      chart.annotationData,\n      chart.chartAlert,\n      chart.chartStackTrace,\n      chart.chartStatus,\n      chart.id,\n      chart.latestQueryFormData,\n      chart.queriesResponse,\n      chart.triggerQuery,\n      chartIsStale,\n      chartPanelHeight,\n      chartPanelRef,\n      chartPanelWidth,\n      datasource,\n      errorMessage,\n      force,\n      formData,\n      onQuery,\n      ownState,\n      timeout,\n      triggerRender,\n      vizType,\n    ],\n  );\n\n  const panelBody = useMemo(\n    () => (\n      <div\n        className=\"panel-body\"\n        css={css`\n          display: flex;\n          flex-direction: column;\n        `}\n        ref={resizeObserverRef}\n      >\n        {vizTypeNeedsDataset && (\n          <Alert\n            message={t('Chart type requires a dataset')}\n            type=\"error\"\n            css={theme => css`\n              margin: 0 0 ${theme.gridUnit * 4}px 0;\n            `}\n            description={\n              <>\n                {t(\n                  'This chart type is not supported when using an unsaved query as a chart source. ',\n                )}\n                <span\n                  role=\"button\"\n                  tabIndex={0}\n                  onClick={() => setShowDatasetModal(true)}\n                  css={{ textDecoration: 'underline' }}\n                >\n                  {t('Create a dataset')}\n                </span>\n                {t(' to visualize your data.')}\n              </>\n            }\n          />\n        )}\n        {showAlertBanner && (\n          <ExploreAlert\n            title={\n              errorMessage\n                ? t('Required control values have been removed')\n                : t('Your chart is not up to date')\n            }\n            bodyText={\n              errorMessage ? (\n                getChartRequiredFieldsMissingMessage(false)\n              ) : (\n                <span>\n                  {t(\n                    'You updated the values in the control panel, but the chart was not updated automatically. Run the query by clicking on the \"Update chart\" button or',\n                  )}{' '}\n                  <span role=\"button\" tabIndex={0} onClick={onQuery}>\n                    {t('click here')}\n                  </span>\n                  .\n                </span>\n              )\n            }\n            type=\"warning\"\n            css={theme => css`\n              margin: 0 0 ${theme.gridUnit * 4}px 0;\n            `}\n          />\n        )}\n        <ChartPills\n          queriesResponse={chart.queriesResponse}\n          chartStatus={chart.chartStatus}\n          chartUpdateStartTime={chart.chartUpdateStartTime}\n          chartUpdateEndTime={chart.chartUpdateEndTime}\n          refreshCachedQuery={refreshCachedQuery}\n          rowLimit={formData?.row_limit}\n        />\n        {renderChart()}\n      </div>\n    ),\n    [\n      resizeObserverRef,\n      showAlertBanner,\n      errorMessage,\n      onQuery,\n      chart.queriesResponse,\n      chart.chartStatus,\n      chart.chartUpdateStartTime,\n      chart.chartUpdateEndTime,\n      refreshCachedQuery,\n      formData?.row_limit,\n      renderChart,\n    ],\n  );\n\n  const standaloneChartBody = useMemo(() => renderChart(), [renderChart]);\n\n  const [queryFormData, setQueryFormData] = useState(chart.latestQueryFormData);\n\n  useEffect(() => {\n    // only update when `latestQueryFormData` changes AND `triggerRender`\n    // is false. No update should be done when only `triggerRender` changes,\n    // as this can trigger a query downstream based on incomplete form data.\n    // (`latestQueryFormData` is only updated when a a valid request has been\n    // triggered).\n    if (!triggerRender) {\n      setQueryFormData(chart.latestQueryFormData);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chart.latestQueryFormData]);\n\n  const elementStyle = useCallback(\n    (dimension, elementSize, gutterSize) => ({\n      [dimension]: `calc(${elementSize}% - ${gutterSize + gutterMargin}px)`,\n    }),\n    [gutterMargin],\n  );\n\n  if (standalone) {\n    // dom manipulation hack to get rid of the bootstrap theme's body background\n    const standaloneClass = 'background-transparent';\n    const bodyClasses = document.body.className.split(' ');\n    if (!bodyClasses.includes(standaloneClass)) {\n      document.body.className += ` ${standaloneClass}`;\n    }\n    return (\n      <div id=\"app\" data-test=\"standalone-app\" ref={resizeObserverRef}>\n        {standaloneChartBody}\n      </div>\n    );\n  }\n\n  return (\n    <Styles\n      className=\"panel panel-default chart-container\"\n      showSplite={showSplite}\n    >\n      {vizType === 'filter_box' ? (\n        panelBody\n      ) : (\n        <Split\n          sizes={splitSizes}\n          minSize={MIN_SIZES}\n          direction=\"vertical\"\n          gutterSize={gutterHeight}\n          onDragEnd={onDragEnd}\n          elementStyle={elementStyle}\n          expandToMin\n        >\n          {panelBody}\n          <DataTablesPane\n            ownState={ownState}\n            queryFormData={queryFormData}\n            datasource={datasource}\n            queryForce={force}\n            onCollapseChange={onCollapseChange}\n            chartStatus={chart.chartStatus}\n            errorMessage={errorMessage}\n            actions={actions}\n          />\n        </Split>\n      )}\n      {showDatasetModal && (\n        <SaveDatasetModal\n          visible={showDatasetModal}\n          onHide={() => setShowDatasetModal(false)}\n          buttonTextOnSave={t('Save')}\n          buttonTextOnOverwrite={t('Overwrite')}\n          datasource={getDatasourceAsSaveableDataset(datasource)}\n          openWindow={false}\n          formData={formData}\n        />\n      )}\n    </Styles>\n  );\n};\n\nExploreChartPanel.propTypes = propTypes;\n\nexport default ExploreChartPanel;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useCallback, useRef } from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\n\nexport default function useResizeDetectorByObserver() {\n  const ref = useRef<HTMLDivElement>();\n  const [{ width, height }, setChartPanelSize] = useState<{\n    width?: number;\n    height?: number;\n  }>({});\n  const onResize = useCallback(() => {\n    if (ref.current) {\n      const { width, height } = ref.current.getBoundingClientRect?.() || {};\n      setChartPanelSize({ width, height });\n    }\n  }, []);\n  const { ref: observerRef } = useResizeDetector({\n    refreshMode: 'debounce',\n    refreshRate: 300,\n    onResize,\n  });\n\n  return {\n    ref,\n    observerRef,\n    width,\n    height,\n  };\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { ReactNode } from 'react';\nimport { t } from '@superset-ui/core';\nimport Button from 'src/components/Button';\n\nexport type RunQueryButtonProps = {\n  loading: boolean;\n  onQuery: () => void;\n  onStop: () => void;\n  errorMessage: ReactNode;\n  isNewChart: boolean;\n  canStopQuery: boolean;\n  chartIsStale: boolean;\n};\n\nexport const RunQueryButton = ({\n  loading,\n  onQuery,\n  onStop,\n  errorMessage,\n  isNewChart,\n  canStopQuery,\n  chartIsStale,\n}: RunQueryButtonProps) =>\n  loading ? (\n    <Button onClick={onStop} buttonStyle=\"warning\" disabled={!canStopQuery}>\n      <i className=\"fa fa-stop\" /> {t('Stop')}\n    </Button>\n  ) : (\n    <Button\n      onClick={onQuery}\n      buttonStyle={chartIsStale ? 'primary' : 'secondary'}\n      disabled={!!errorMessage}\n      data-test=\"run-query-button\"\n    >\n      {isNewChart ? t('Create chart') : t('Update chart')}\n    </Button>\n  );\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React, {\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  ensureIsArray,\n  t,\n  styled,\n  getChartControlPanelRegistry,\n  QueryFormData,\n  DatasourceType,\n  css,\n  SupersetTheme,\n  useTheme,\n  isDefined,\n  JsonValue,\n  NO_TIME_RANGE,\n  usePrevious,\n} from '@superset-ui/core';\nimport {\n  ControlPanelSectionConfig,\n  ControlState,\n  CustomControlItem,\n  Dataset,\n  ExpandedControlItem,\n  isTemporalColumn,\n  sections,\n} from '@superset-ui/chart-controls';\nimport { useSelector } from 'react-redux';\nimport { rgba } from 'emotion-rgba';\nimport { kebabCase } from 'lodash';\n\nimport Collapse from 'src/components/Collapse';\nimport Tabs from 'src/components/Tabs';\nimport { PluginContext } from 'src/components/DynamicPlugins';\nimport Loading from 'src/components/Loading';\nimport Modal from 'src/components/Modal';\n\nimport { getSectionsToRender } from 'src/explore/controlUtils';\nimport { ExploreActions } from 'src/explore/actions/exploreActions';\nimport { ChartState, ExplorePageState } from 'src/explore/types';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport ControlRow from './ControlRow';\nimport Control from './Control';\nimport { ExploreAlert } from './ExploreAlert';\nimport { RunQueryButton } from './RunQueryButton';\nimport { Operators } from '../constants';\nimport { CLAUSES } from './controls/FilterControl/types';\n\nconst { confirm } = Modal;\n\nexport type ControlPanelsContainerProps = {\n  exploreState: ExplorePageState['explore'];\n  actions: ExploreActions;\n  datasource_type: DatasourceType;\n  chart: ChartState;\n  controls: Record<string, ControlState>;\n  form_data: QueryFormData;\n  isDatasourceMetaLoading: boolean;\n  errorMessage: ReactNode;\n  onQuery: () => void;\n  onStop: () => void;\n  canStopQuery: boolean;\n  chartIsStale: boolean;\n};\n\nexport type ExpandedControlPanelSectionConfig = Omit<\n  ControlPanelSectionConfig,\n  'controlSetRows'\n> & {\n  controlSetRows: ExpandedControlItem[][];\n};\n\nconst iconStyles = css`\n  &.anticon {\n    font-size: unset;\n    .anticon {\n      line-height: unset;\n      vertical-align: unset;\n    }\n  }\n`;\n\nconst actionButtonsContainerStyles = (theme: SupersetTheme) => css`\n  display: flex;\n  position: sticky;\n  bottom: 0;\n  flex-direction: column;\n  align-items: center;\n  padding: ${theme.gridUnit * 4}px;\n  z-index: 999;\n  background: linear-gradient(\n    ${rgba(theme.colors.grayscale.light5, 0)},\n    ${theme.colors.grayscale.light5} ${theme.opacity.mediumLight}\n  );\n\n  & > button {\n    min-width: 156px;\n  }\n`;\n\nconst Styles = styled.div`\n  position: relative;\n  height: 100%;\n  width: 100%;\n\n  // Resizable add overflow-y: auto as a style to this div\n  // To override it, we need to use !important\n  overflow: visible !important;\n  #controlSections {\n    height: 100%;\n    overflow: visible;\n  }\n  .nav-tabs {\n    flex: 0 0 1;\n  }\n  .tab-content {\n    overflow: auto;\n    flex: 1 1 100%;\n  }\n  .Select__menu {\n    max-width: 100%;\n  }\n  .type-label {\n    margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    width: ${({ theme }) => theme.gridUnit * 7}px;\n    display: inline-block;\n    text-align: center;\n    font-weight: ${({ theme }) => theme.typography.weights.bold};\n  }\n`;\n\nconst ControlPanelsTabs = styled(Tabs)`\n  ${({ theme, fullWidth }) => css`\n    height: 100%;\n    overflow: visible;\n    .ant-tabs-nav {\n      margin-bottom: 0;\n    }\n    .ant-tabs-nav-list {\n      width: ${fullWidth ? '100%' : '50%'};\n    }\n    .ant-tabs-tabpane {\n      height: 100%;\n    }\n    .ant-tabs-content-holder {\n      padding-top: ${theme.gridUnit * 4}px;\n    }\n\n    .ant-collapse-ghost > .ant-collapse-item {\n      &:not(:last-child) {\n        border-bottom: 1px solid ${theme.colors.grayscale.light3};\n      }\n\n      & > .ant-collapse-header {\n        font-size: ${theme.typography.sizes.s}px;\n      }\n\n      & > .ant-collapse-content > .ant-collapse-content-box {\n        padding-bottom: 0;\n        font-size: ${theme.typography.sizes.s}px;\n      }\n    }\n  `}\n`;\n\nconst isTimeSection = (section: ControlPanelSectionConfig): boolean =>\n  !!section.label &&\n  (sections.legacyRegularTime.label === section.label ||\n    sections.legacyTimeseriesTime.label === section.label);\n\nconst hasTimeColumn = (datasource: Dataset): boolean =>\n  datasource?.columns?.some(c => c.is_dttm);\nconst sectionsToExpand = (\n  sections: ControlPanelSectionConfig[],\n  datasource: Dataset,\n): string[] =>\n  // avoid expanding time section if datasource doesn't include time column\n  sections.reduce(\n    (acc, section) =>\n      (section.expanded || !section.label) &&\n      (!isTimeSection(section) || hasTimeColumn(datasource))\n        ? [...acc, String(section.label)]\n        : acc,\n    [] as string[],\n  );\n\nfunction getState(\n  vizType: string,\n  datasource: Dataset,\n  datasourceType: DatasourceType,\n) {\n  const querySections: ControlPanelSectionConfig[] = [];\n  const customizeSections: ControlPanelSectionConfig[] = [];\n\n  getSectionsToRender(vizType, datasourceType).forEach(section => {\n    // if at least one control in the section is not `renderTrigger`\n    // or asks to be displayed at the Data tab\n    if (\n      section.tabOverride === 'data' ||\n      section.controlSetRows.some(rows =>\n        rows.some(\n          control =>\n            control &&\n            typeof control === 'object' &&\n            'config' in control &&\n            control.config &&\n            (!control.config.renderTrigger ||\n              control.config.tabOverride === 'data'),\n        ),\n      )\n    ) {\n      querySections.push(section);\n    } else if (section.controlSetRows.length > 0) {\n      customizeSections.push(section);\n    }\n  });\n  const expandedQuerySections: string[] = sectionsToExpand(\n    querySections,\n    datasource,\n  );\n  const expandedCustomizeSections: string[] = sectionsToExpand(\n    customizeSections,\n    datasource,\n  );\n  return {\n    expandedQuerySections,\n    expandedCustomizeSections,\n    querySections,\n    customizeSections,\n  };\n}\n\nfunction useResetOnChangeRef(initialValue: () => any, resetOnChangeValue: any) {\n  const value = useRef(initialValue());\n  const prevResetOnChangeValue = useRef(resetOnChangeValue);\n  if (prevResetOnChangeValue.current !== resetOnChangeValue) {\n    value.current = initialValue();\n    prevResetOnChangeValue.current = resetOnChangeValue;\n  }\n\n  return value;\n}\n\nexport const ControlPanelsContainer = (props: ControlPanelsContainerProps) => {\n  const { colors } = useTheme();\n  const pluginContext = useContext(PluginContext);\n\n  const prevState = usePrevious(props.exploreState);\n  const prevDatasource = usePrevious(props.exploreState.datasource);\n  const prevChartStatus = usePrevious(props.chart.chartStatus);\n\n  const [showDatasourceAlert, setShowDatasourceAlert] = useState(false);\n\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const controlsTransferred = useSelector<\n    ExplorePageState,\n    string[] | undefined\n  >(state => state.explore.controlsTransferred);\n\n  const defaultTimeFilter = useSelector<ExplorePageState>(\n    state => state.common?.conf?.DEFAULT_TIME_FILTER,\n  );\n\n  const { form_data, actions } = props;\n  const { setControlValue } = actions;\n  const { x_axis, adhoc_filters } = form_data;\n\n  const previousXAxis = usePrevious(x_axis);\n\n  useEffect(() => {\n    if (\n      x_axis &&\n      x_axis !== previousXAxis &&\n      isTemporalColumn(x_axis, props.exploreState.datasource)\n    ) {\n      const noFilter =\n        !adhoc_filters ||\n        !adhoc_filters.find(\n          filter =>\n            filter.expressionType === 'SIMPLE' &&\n            filter.operator === Operators.TEMPORAL_RANGE &&\n            filter.subject === x_axis,\n        );\n      if (noFilter) {\n        confirm({\n          title: t('The X-axis is not on the filters list'),\n          content:\n            t(`The X-axis is not on the filters list which will prevent it from being used in\n            time range filters in dashboards. Would you like to add it to the filters list?`),\n          onOk: () => {\n            setControlValue('adhoc_filters', [\n              ...(adhoc_filters || []),\n              {\n                clause: CLAUSES.WHERE,\n                subject: x_axis,\n                operator: Operators.TEMPORAL_RANGE,\n                comparator: defaultTimeFilter || NO_TIME_RANGE,\n                expressionType: 'SIMPLE',\n              },\n            ]);\n          },\n        });\n      }\n    }\n  }, [\n    x_axis,\n    adhoc_filters,\n    setControlValue,\n    defaultTimeFilter,\n    previousXAxis,\n    props.exploreState.datasource,\n  ]);\n\n  useEffect(() => {\n    let shouldUpdateControls = false;\n    const removeDatasourceWarningFromControl = (\n      value: JsonValue | undefined,\n    ) => {\n      if (\n        typeof value === 'object' &&\n        isDefined(value) &&\n        'datasourceWarning' in value &&\n        value.datasourceWarning === true\n      ) {\n        shouldUpdateControls = true;\n        return { ...value, datasourceWarning: false };\n      }\n      return value;\n    };\n    if (\n      props.chart.chartStatus === 'success' &&\n      prevChartStatus !== 'success'\n    ) {\n      controlsTransferred?.forEach(controlName => {\n        shouldUpdateControls = false;\n        if (!isDefined(props.controls[controlName])) {\n          return;\n        }\n        const alteredControls = Array.isArray(props.controls[controlName].value)\n          ? ensureIsArray(props.controls[controlName].value)?.map(\n              removeDatasourceWarningFromControl,\n            )\n          : removeDatasourceWarningFromControl(\n              props.controls[controlName].value,\n            );\n        if (shouldUpdateControls) {\n          props.actions.setControlValue(controlName, alteredControls);\n        }\n      });\n    }\n  }, [\n    controlsTransferred,\n    prevChartStatus,\n    props.actions,\n    props.chart.chartStatus,\n    props.controls,\n  ]);\n\n  useEffect(() => {\n    if (\n      prevDatasource &&\n      prevDatasource.type !== DatasourceType.Query &&\n      (props.exploreState.datasource?.id !== prevDatasource.id ||\n        props.exploreState.datasource?.type !== prevDatasource.type)\n    ) {\n      setShowDatasourceAlert(true);\n      containerRef.current?.scrollTo(0, 0);\n    }\n  }, [\n    props.exploreState.datasource?.id,\n    props.exploreState.datasource?.type,\n    prevDatasource,\n  ]);\n\n  const {\n    expandedQuerySections,\n    expandedCustomizeSections,\n    querySections,\n    customizeSections,\n  } = useMemo(\n    () =>\n      getState(\n        form_data.viz_type,\n        props.exploreState.datasource,\n        props.datasource_type,\n      ),\n    [props.exploreState.datasource, form_data.viz_type, props.datasource_type],\n  );\n\n  const resetTransferredControls = useCallback(() => {\n    ensureIsArray(props.exploreState.controlsTransferred).forEach(controlName =>\n      props.actions.setControlValue(\n        controlName,\n        props.controls[controlName].default,\n      ),\n    );\n  }, [props.actions, props.exploreState.controlsTransferred, props.controls]);\n\n  const handleClearFormClick = useCallback(() => {\n    resetTransferredControls();\n    setShowDatasourceAlert(false);\n  }, [resetTransferredControls]);\n\n  const handleContinueClick = useCallback(() => {\n    setShowDatasourceAlert(false);\n  }, []);\n\n  const shouldRecalculateControlState = ({\n    name,\n    config,\n  }: CustomControlItem): boolean => {\n    const { controls, chart, exploreState } = props;\n\n    return Boolean(\n      config.shouldMapStateToProps?.(\n        prevState || exploreState,\n        exploreState,\n        controls[name],\n        chart,\n      ),\n    );\n  };\n\n  const renderControl = ({ name, config }: CustomControlItem) => {\n    const { controls, chart, exploreState } = props;\n    const { visibility } = config;\n\n    // If the control item is not an object, we have to look up the control data from\n    // the centralized controls file.\n    // When it is an object we read control data straight from `config` instead\n    const controlData = {\n      ...config,\n      ...controls[name],\n      ...(shouldRecalculateControlState({ name, config })\n        ? config?.mapStateToProps?.(exploreState, controls[name], chart)\n        : // for other controls, `mapStateToProps` is already run in\n          // controlUtils/getControlState.ts\n          undefined),\n      name,\n    };\n    const {\n      validationErrors,\n      label: baseLabel,\n      description: baseDescription,\n      ...restProps\n    } = controlData as ControlState & {\n      validationErrors?: any[];\n    };\n\n    const isVisible = visibility\n      ? visibility.call(config, props, controlData)\n      : undefined;\n\n    const label =\n      typeof baseLabel === 'function'\n        ? baseLabel(exploreState, controls[name], chart)\n        : baseLabel;\n\n    const description =\n      typeof baseDescription === 'function'\n        ? baseDescription(exploreState, controls[name], chart)\n        : baseDescription;\n\n    if (name === 'adhoc_filters') {\n      restProps.canDelete = (\n        valueToBeDeleted: Record<string, any>,\n        values: Record<string, any>[],\n      ) => {\n        const isTemporalRange = (filter: Record<string, any>) =>\n          filter.operator === Operators.TEMPORAL_RANGE;\n        if (!controls?.time_range?.value && isTemporalRange(valueToBeDeleted)) {\n          const count = values.filter(isTemporalRange).length;\n          if (count === 1) {\n            return t(\n              `You cannot delete the last temporal filter as it's used for time range filters in dashboards.`,\n            );\n          }\n        }\n        return true;\n      };\n    }\n\n    return (\n      <Control\n        key={`control-${name}`}\n        name={name}\n        label={label}\n        description={description}\n        validationErrors={validationErrors}\n        actions={props.actions}\n        isVisible={isVisible}\n        {...restProps}\n      />\n    );\n  };\n\n  const sectionHasHadNoErrors = useResetOnChangeRef(\n    () => ({}),\n    form_data.viz_type,\n  );\n\n  const renderControlPanelSection = (\n    section: ExpandedControlPanelSectionConfig,\n  ) => {\n    const { controls } = props;\n    const { label, description } = section;\n\n    // Section label can be a ReactNode but in some places we want to\n    // have a string ID. Using forced type conversion for now,\n    // should probably add a `id` field to sections in the future.\n    const sectionId = String(label);\n\n    const hasErrors = section.controlSetRows.some(rows =>\n      rows.some(item => {\n        const controlName =\n          typeof item === 'string'\n            ? item\n            : item && 'name' in item\n            ? item.name\n            : null;\n        return (\n          controlName &&\n          controlName in controls &&\n          controls[controlName].validationErrors &&\n          controls[controlName].validationErrors.length > 0\n        );\n      }),\n    );\n\n    if (!hasErrors) {\n      sectionHasHadNoErrors.current[sectionId] = true;\n    }\n\n    const errorColor = sectionHasHadNoErrors.current[sectionId]\n      ? colors.error.base\n      : colors.alert.base;\n\n    const PanelHeader = () => (\n      <span data-test=\"collapsible-control-panel-header\">\n        <span\n          css={(theme: SupersetTheme) => css`\n            font-size: ${theme.typography.sizes.m}px;\n            line-height: 1.3;\n          `}\n        >\n          {label}\n        </span>{' '}\n        {description && (\n          <Tooltip id={sectionId} title={description}>\n            <Icons.InfoCircleOutlined css={iconStyles} />\n          </Tooltip>\n        )}\n        {hasErrors && (\n          <Tooltip\n            id={`${kebabCase('validation-errors')}-tooltip`}\n            title={t('This section contains validation errors')}\n          >\n            <Icons.InfoCircleOutlined\n              css={css`\n                ${iconStyles};\n                color: ${errorColor};\n              `}\n            />\n          </Tooltip>\n        )}\n      </span>\n    );\n\n    return (\n      <Collapse.Panel\n        css={theme => css`\n          margin-bottom: 0;\n          box-shadow: none;\n\n          &:last-child {\n            padding-bottom: ${theme.gridUnit * 16}px;\n            border-bottom: 0;\n          }\n\n          .panel-body {\n            margin-left: ${theme.gridUnit * 4}px;\n            padding-bottom: 0;\n          }\n\n          span.label {\n            display: inline-block;\n          }\n          ${!section.label &&\n          `\n            .ant-collapse-header {\n              display: none;\n            }\n          `}\n        `}\n        header={<PanelHeader />}\n        key={sectionId}\n      >\n        {section.controlSetRows.map((controlSets, i) => {\n          const renderedControls = controlSets\n            .map(controlItem => {\n              if (!controlItem) {\n                // When the item is invalid\n                return null;\n              }\n              if (React.isValidElement(controlItem)) {\n                // When the item is a React element\n                return controlItem;\n              }\n              if (\n                controlItem.name &&\n                controlItem.config &&\n                controlItem.name !== 'datasource'\n              ) {\n                return renderControl(controlItem);\n              }\n              return null;\n            })\n            .filter(x => x !== null);\n          // don't show the row if it is empty\n          if (renderedControls.length === 0) {\n            return null;\n          }\n          return (\n            <ControlRow\n              key={`controlsetrow-${i}`}\n              controls={renderedControls}\n            />\n          );\n        })}\n      </Collapse.Panel>\n    );\n  };\n\n  const hasControlsTransferred =\n    ensureIsArray(props.exploreState.controlsTransferred).length > 0;\n\n  const DatasourceAlert = useCallback(\n    () =>\n      hasControlsTransferred ? (\n        <ExploreAlert\n          title={t('Keep control settings?')}\n          bodyText={t(\n            \"You've changed datasets. Any controls with data (columns, metrics) that match this new dataset have been retained.\",\n          )}\n          primaryButtonAction={handleContinueClick}\n          secondaryButtonAction={handleClearFormClick}\n          primaryButtonText={t('Continue')}\n          secondaryButtonText={t('Clear form')}\n          type=\"info\"\n        />\n      ) : (\n        <ExploreAlert\n          title={t('No form settings were maintained')}\n          bodyText={t(\n            'We were unable to carry over any controls when switching to this new dataset.',\n          )}\n          primaryButtonAction={handleContinueClick}\n          primaryButtonText={t('Continue')}\n          type=\"warning\"\n        />\n      ),\n    [handleClearFormClick, handleContinueClick, hasControlsTransferred],\n  );\n\n  const dataTabHasHadNoErrors = useResetOnChangeRef(\n    () => false,\n    form_data.viz_type,\n  );\n\n  const dataTabTitle = useMemo(() => {\n    if (!props.errorMessage) {\n      dataTabHasHadNoErrors.current = true;\n    }\n\n    const errorColor = dataTabHasHadNoErrors.current\n      ? colors.error.base\n      : colors.alert.base;\n\n    return (\n      <>\n        <span>{t('Data')}</span>\n        {props.errorMessage && (\n          <span\n            css={(theme: SupersetTheme) => css`\n              margin-left: ${theme.gridUnit * 2}px;\n            `}\n          >\n            {' '}\n            <Tooltip\n              id=\"query-error-tooltip\"\n              placement=\"right\"\n              title={props.errorMessage}\n            >\n              <Icons.ExclamationCircleOutlined\n                css={css`\n                  ${iconStyles};\n                  color: ${errorColor};\n                `}\n              />\n            </Tooltip>\n          </span>\n        )}\n      </>\n    );\n  }, [\n    colors.error.base,\n    colors.alert.base,\n    dataTabHasHadNoErrors,\n    props.errorMessage,\n  ]);\n\n  const controlPanelRegistry = getChartControlPanelRegistry();\n  if (!controlPanelRegistry.has(form_data.viz_type) && pluginContext.loading) {\n    return <Loading />;\n  }\n\n  const showCustomizeTab = customizeSections.length > 0;\n\n  return (\n    <Styles ref={containerRef}>\n      <ControlPanelsTabs\n        id=\"controlSections\"\n        data-test=\"control-tabs\"\n        fullWidth={showCustomizeTab}\n        allowOverflow={false}\n      >\n        <Tabs.TabPane key=\"query\" tab={dataTabTitle}>\n          <Collapse\n            defaultActiveKey={expandedQuerySections}\n            expandIconPosition=\"right\"\n            ghost\n          >\n            {showDatasourceAlert && <DatasourceAlert />}\n            {querySections.map(renderControlPanelSection)}\n          </Collapse>\n        </Tabs.TabPane>\n        {showCustomizeTab && (\n          <Tabs.TabPane key=\"display\" tab={t('Customize')}>\n            <Collapse\n              defaultActiveKey={expandedCustomizeSections}\n              expandIconPosition=\"right\"\n              ghost\n            >\n              {customizeSections.map(renderControlPanelSection)}\n            </Collapse>\n          </Tabs.TabPane>\n        )}\n      </ControlPanelsTabs>\n      <div css={actionButtonsContainerStyles}>\n        <RunQueryButton\n          onQuery={props.onQuery}\n          onStop={props.onStop}\n          errorMessage={props.errorMessage}\n          loading={props.chart.chartStatus === 'loading'}\n          isNewChart={!props.chart.queriesResponse}\n          canStopQuery={props.canStopQuery}\n          chartIsStale={props.chartIsStale}\n        />\n      </div>\n    </Styles>\n  );\n};\n\nexport default ControlPanelsContainer;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React from 'react';\nimport { Dispatch } from 'redux';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport rison from 'rison';\nimport { connect } from 'react-redux';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport {\n  css,\n  DatasourceType,\n  FeatureFlag,\n  isDefined,\n  styled,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\nimport { Input } from 'src/components/Input';\nimport { Form, FormItem } from 'src/components/Form';\nimport Alert from 'src/components/Alert';\nimport Modal from 'src/components/Modal';\nimport { Radio } from 'src/components/Radio';\nimport Button from 'src/components/Button';\nimport { AsyncSelect } from 'src/components';\nimport Loading from 'src/components/Loading';\nimport { canUserEditDashboard } from 'src/dashboard/util/permissionUtils';\nimport { setSaveChartModalVisibility } from 'src/explore/actions/saveModalActions';\nimport { SaveActionType } from 'src/explore/types';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport { Dashboard } from 'src/types/Dashboard';\n\n// Session storage key for recent dashboard\nconst SK_DASHBOARD_ID = 'save_chart_recent_dashboard';\n\ninterface SaveModalProps extends RouteComponentProps {\n  addDangerToast: (msg: string) => void;\n  actions: Record<string, any>;\n  form_data?: Record<string, any>;\n  user: UserWithPermissionsAndRoles;\n  alert?: string;\n  sliceName?: string;\n  slice?: Record<string, any>;\n  datasource?: Record<string, any>;\n  dashboardId: '' | number | null;\n  isVisible: boolean;\n  dispatch: Dispatch;\n}\n\ntype SaveModalState = {\n  newSliceName?: string;\n  datasetName: string;\n  alert: string | null;\n  action: SaveActionType;\n  isLoading: boolean;\n  saveStatus?: string | null;\n  vizType?: string;\n  dashboard?: { label: string; value: string | number };\n};\n\nexport const StyledModal = styled(Modal)`\n  .ant-modal-body {\n    overflow: visible;\n  }\n  i {\n    position: absolute;\n    top: -${({ theme }) => theme.gridUnit * 5.25}px;\n    left: ${({ theme }) => theme.gridUnit * 26.75}px;\n  }\n`;\n\nclass SaveModal extends React.Component<SaveModalProps, SaveModalState> {\n  constructor(props: SaveModalProps) {\n    super(props);\n    this.state = {\n      newSliceName: props.sliceName,\n      datasetName: props.datasource?.name,\n      alert: null,\n      action: this.canOverwriteSlice() ? 'overwrite' : 'saveas',\n      isLoading: false,\n      vizType: props.form_data?.viz_type,\n      dashboard: undefined,\n    };\n    this.onDashboardChange = this.onDashboardChange.bind(this);\n    this.onSliceNameChange = this.onSliceNameChange.bind(this);\n    this.changeAction = this.changeAction.bind(this);\n    this.saveOrOverwrite = this.saveOrOverwrite.bind(this);\n    this.isNewDashboard = this.isNewDashboard.bind(this);\n    this.removeAlert = this.removeAlert.bind(this);\n    this.onHide = this.onHide.bind(this);\n  }\n\n  isNewDashboard(): boolean {\n    const { dashboard } = this.state;\n    return typeof dashboard?.value === 'string';\n  }\n\n  canOverwriteSlice(): boolean {\n    return (\n      this.props.slice?.owners?.includes(this.props.user.userId) &&\n      !this.props.slice?.is_managed_externally\n    );\n  }\n\n  async componentDidMount() {\n    let { dashboardId } = this.props;\n    if (!dashboardId) {\n      const lastDashboard = sessionStorage.getItem(SK_DASHBOARD_ID);\n      dashboardId = lastDashboard && parseInt(lastDashboard, 10);\n    }\n    if (dashboardId) {\n      try {\n        const result = (await this.loadDashboard(dashboardId)) as Dashboard;\n        if (canUserEditDashboard(result, this.props.user)) {\n          this.setState({\n            dashboard: { label: result.dashboard_title, value: result.id },\n          });\n        }\n      } catch (error) {\n        this.props.actions.addDangerToast(\n          t('An error occurred while loading dashboard information.'),\n        );\n      }\n    }\n  }\n\n  handleDatasetNameChange = (e: React.FormEvent<HTMLInputElement>) => {\n    // @ts-expect-error\n    this.setState({ datasetName: e.target.value });\n  };\n\n  onSliceNameChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ newSliceName: event.target.value });\n  }\n\n  onDashboardChange(dashboard: { label: string; value: string | number }) {\n    this.setState({ dashboard });\n  }\n\n  changeAction(action: SaveActionType) {\n    this.setState({ action });\n  }\n\n  onHide() {\n    this.props.dispatch(setSaveChartModalVisibility(false));\n  }\n\n  async saveOrOverwrite(gotodash: boolean) {\n    this.setState({ alert: null, isLoading: true });\n    this.props.actions.removeSaveModalAlert();\n\n    //  Create or retrieve dashboard\n    type DashboardGetResponse = {\n      id: number;\n      url: string;\n      dashboard_title: string;\n    };\n\n    try {\n      if (this.props.datasource?.type === DatasourceType.Query) {\n        const { schema, sql, database } = this.props.datasource;\n        const { templateParams } = this.props.datasource;\n\n        await this.props.actions.saveDataset({\n          schema,\n          sql,\n          database,\n          templateParams,\n          datasourceName: this.state.datasetName,\n        });\n      }\n\n      //  Get chart dashboards\n      let sliceDashboards: number[] = [];\n      if (this.props.slice && this.state.action === 'overwrite') {\n        sliceDashboards = await this.props.actions.getSliceDashboards(\n          this.props.slice,\n        );\n      }\n\n      const formData = this.props.form_data || {};\n      delete formData.url_params;\n\n      let dashboard: DashboardGetResponse | null = null;\n      if (this.state.dashboard) {\n        let validId = this.state.dashboard.value;\n        if (this.isNewDashboard()) {\n          const response = await this.props.actions.createDashboard(\n            this.state.dashboard.label,\n          );\n          validId = response.id;\n        }\n\n        try {\n          dashboard = await this.loadDashboard(validId as number);\n        } catch (error) {\n          this.props.actions.saveSliceFailed();\n          return;\n        }\n\n        if (isDefined(dashboard) && isDefined(dashboard?.id)) {\n          sliceDashboards = sliceDashboards.includes(dashboard.id)\n            ? sliceDashboards\n            : [...sliceDashboards, dashboard.id];\n          formData.dashboards = sliceDashboards;\n        }\n      }\n\n      // Sets the form data\n      this.props.actions.setFormData({ ...formData });\n\n      //  Update or create slice\n      let value: { id: number };\n      if (this.state.action === 'overwrite') {\n        value = await this.props.actions.updateSlice(\n          this.props.slice,\n          this.state.newSliceName,\n          sliceDashboards,\n          dashboard\n            ? {\n                title: dashboard.dashboard_title,\n                new: this.isNewDashboard(),\n              }\n            : null,\n        );\n      } else {\n        value = await this.props.actions.createSlice(\n          this.state.newSliceName,\n          sliceDashboards,\n          dashboard\n            ? {\n                title: dashboard.dashboard_title,\n                new: this.isNewDashboard(),\n              }\n            : null,\n        );\n      }\n\n      if (dashboard) {\n        sessionStorage.setItem(SK_DASHBOARD_ID, `${dashboard.id}`);\n      } else {\n        sessionStorage.removeItem(SK_DASHBOARD_ID);\n      }\n\n      // Go to new dashboard url\n      if (gotodash && dashboard) {\n        this.props.history.push(dashboard.url);\n        return;\n      }\n\n      const searchParams = new URLSearchParams(window.location.search);\n      searchParams.set('save_action', this.state.action);\n      if (this.state.action !== 'overwrite') {\n        searchParams.delete('form_data_key');\n      }\n      if (this.state.action === 'saveas') {\n        searchParams.set('slice_id', value.id.toString());\n      }\n      this.props.history.replace(`/explore/?${searchParams.toString()}`);\n\n      this.setState({ isLoading: false });\n      this.onHide();\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  loadDashboard = async (id: number) => {\n    const response = await SupersetClient.get({\n      endpoint: `/api/v1/dashboard/${id}`,\n    });\n    return response.json.result;\n  };\n\n  loadDashboards = async (search: string, page: number, pageSize: number) => {\n    const queryParams = rison.encode({\n      columns: ['id', 'dashboard_title'],\n      filters: [\n        {\n          col: 'dashboard_title',\n          opr: 'ct',\n          value: search,\n        },\n        {\n          col: 'owners',\n          opr: 'rel_m_m',\n          value: this.props.user.userId,\n        },\n      ],\n      page,\n      page_size: pageSize,\n      order_column: 'dashboard_title',\n    });\n\n    const { json } = await SupersetClient.get({\n      endpoint: `/api/v1/dashboard/?q=${queryParams}`,\n    });\n    const { result, count } = json;\n    return {\n      data: result.map(\n        (dashboard: { id: number; dashboard_title: string }) => ({\n          value: dashboard.id,\n          label: dashboard.dashboard_title,\n        }),\n      ),\n      totalCount: count,\n    };\n  };\n\n  renderSaveChartModal = () => (\n    <Form data-test=\"save-modal-body\" layout=\"vertical\">\n      {(this.state.alert || this.props.alert) && (\n        <Alert\n          type=\"warning\"\n          message={this.state.alert || this.props.alert}\n          onClose={this.removeAlert}\n        />\n      )}\n      <FormItem data-test=\"radio-group\">\n        <Radio\n          id=\"overwrite-radio\"\n          disabled={!this.canOverwriteSlice()}\n          checked={this.state.action === 'overwrite'}\n          onChange={() => this.changeAction('overwrite')}\n          data-test=\"save-overwrite-radio\"\n        >\n          {t('Save (Overwrite)')}\n        </Radio>\n        <Radio\n          id=\"saveas-radio\"\n          data-test=\"saveas-radio\"\n          checked={this.state.action === 'saveas'}\n          onChange={() => this.changeAction('saveas')}\n        >\n          {t('Save as...')}\n        </Radio>\n      </FormItem>\n      <hr />\n      <FormItem label={t('Chart name')} required>\n        <Input\n          name=\"new_slice_name\"\n          type=\"text\"\n          placeholder=\"Name\"\n          value={this.state.newSliceName}\n          onChange={this.onSliceNameChange}\n          data-test=\"new-chart-name\"\n        />\n      </FormItem>\n      {this.props.datasource?.type === 'query' && (\n        <FormItem label={t('Dataset Name')} required>\n          <InfoTooltipWithTrigger\n            tooltip={t('A reusable dataset will be saved with your chart.')}\n            placement=\"right\"\n          />\n          <Input\n            name=\"dataset_name\"\n            type=\"text\"\n            placeholder=\"Dataset Name\"\n            value={this.state.datasetName}\n            onChange={this.handleDatasetNameChange}\n            data-test=\"new-dataset-name\"\n          />\n        </FormItem>\n      )}\n      {!(\n        isFeatureEnabled(FeatureFlag.DASHBOARD_NATIVE_FILTERS) &&\n        this.state.vizType === 'filter_box'\n      ) && (\n        <FormItem\n          label={t('Add to dashboard')}\n          data-test=\"save-chart-modal-select-dashboard-form\"\n        >\n          <AsyncSelect\n            allowClear\n            allowNewOptions\n            ariaLabel={t('Select a dashboard')}\n            options={this.loadDashboards}\n            onChange={this.onDashboardChange}\n            value={this.state.dashboard}\n            placeholder={\n              <div>\n                <b>{t('Select')}</b>\n                {t(' a dashboard OR ')}\n                <b>{t('create')}</b>\n                {t(' a new one')}\n              </div>\n            }\n          />\n        </FormItem>\n      )}\n    </Form>\n  );\n\n  renderFooter = () => (\n    <div data-test=\"save-modal-footer\">\n      <Button id=\"btn_cancel\" buttonSize=\"small\" onClick={this.onHide}>\n        {t('Cancel')}\n      </Button>\n      <Button\n        id=\"btn_modal_save_goto_dash\"\n        buttonSize=\"small\"\n        disabled={\n          !this.state.newSliceName ||\n          !this.state.dashboard ||\n          (this.props.datasource?.type !== DatasourceType.Table &&\n            !this.state.datasetName) ||\n          (isFeatureEnabled(FeatureFlag.DASHBOARD_NATIVE_FILTERS) &&\n            this.state.vizType === 'filter_box')\n        }\n        onClick={() => this.saveOrOverwrite(true)}\n      >\n        {this.isNewDashboard()\n          ? t('Save & go to new dashboard')\n          : t('Save & go to dashboard')}\n      </Button>\n      <Button\n        id=\"btn_modal_save\"\n        buttonSize=\"small\"\n        buttonStyle=\"primary\"\n        onClick={() => this.saveOrOverwrite(false)}\n        disabled={\n          this.state.isLoading ||\n          !this.state.newSliceName ||\n          (this.props.datasource?.type !== DatasourceType.Table &&\n            !this.state.datasetName)\n        }\n        data-test=\"btn-modal-save\"\n      >\n        {!this.canOverwriteSlice() && this.props.slice\n          ? t('Save as new chart')\n          : this.isNewDashboard()\n          ? t('Save to new dashboard')\n          : t('Save')}\n      </Button>\n    </div>\n  );\n\n  removeAlert() {\n    if (this.props.alert) {\n      this.props.actions.removeSaveModalAlert();\n    }\n    this.setState({ alert: null });\n  }\n\n  render() {\n    return (\n      <StyledModal\n        show={this.props.isVisible}\n        onHide={this.onHide}\n        title={t('Save chart')}\n        footer={this.renderFooter()}\n      >\n        {this.state.isLoading ? (\n          <div\n            css={css`\n              display: flex;\n              justify-content: center;\n            `}\n          >\n            <Loading position=\"normal\" />\n          </div>\n        ) : (\n          this.renderSaveChartModal()\n        )}\n      </StyledModal>\n    );\n  }\n}\n\ninterface StateProps {\n  datasource: any;\n  slice: any;\n  user: UserWithPermissionsAndRoles;\n  dashboards: any;\n  alert: any;\n  isVisible: boolean;\n}\n\nfunction mapStateToProps({\n  explore,\n  saveModal,\n  user,\n}: Record<string, any>): StateProps {\n  return {\n    datasource: explore.datasource,\n    slice: explore.slice,\n    user,\n    dashboards: saveModal.dashboards,\n    alert: saveModal.saveModalAlert,\n    isVisible: saveModal.isVisible,\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(SaveModal));\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport { css, Metric, styled } from '@superset-ui/core';\nimport { ColumnMeta } from '@superset-ui/chart-controls';\nimport { DndItemType } from 'src/explore/components/DndItemType';\nimport {\n  StyledColumnOption,\n  StyledMetricOption,\n} from 'src/explore/components/optionRenderers';\nimport Icons from 'src/components/Icons';\n\nimport { DatasourcePanelDndItem } from '../types';\n\nconst DatasourceItemContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    height: ${theme.gridUnit * 6}px;\n    padding: 0 ${theme.gridUnit}px;\n\n    // hack to make the drag preview image corners rounded\n    transform: translate(0, 0);\n    background-color: inherit;\n    border-radius: 4px;\n\n    > div {\n      min-width: 0;\n      margin-right: ${theme.gridUnit * 2}px;\n    }\n  `}\n`;\n\ninterface DatasourcePanelDragOptionProps extends DatasourcePanelDndItem {\n  labelRef?: React.RefObject<any>;\n  showTooltip?: boolean;\n}\n\ntype MetricOption = Omit<Metric, 'id'> & {\n  label?: string;\n};\n\nexport default function DatasourcePanelDragOption(\n  props: DatasourcePanelDragOptionProps,\n) {\n  const { labelRef, showTooltip, type, value } = props;\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      value: props.value,\n      type: props.type,\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const optionProps = {\n    labelRef,\n    showTooltip: !isDragging && showTooltip,\n    showType: true,\n  };\n\n  return (\n    <DatasourceItemContainer data-test=\"DatasourcePanelDragOption\" ref={drag}>\n      {type === DndItemType.Column ? (\n        <StyledColumnOption column={value as ColumnMeta} {...optionProps} />\n      ) : (\n        <StyledMetricOption metric={value as MetricOption} {...optionProps} />\n      )}\n      <Icons.Drag />\n    </DatasourceItemContainer>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport {\n  css,\n  DatasourceType,\n  FeatureFlag,\n  Metric,\n  QueryFormData,\n  styled,\n  t,\n} from '@superset-ui/core';\n\nimport { ControlConfig, ColumnMeta } from '@superset-ui/chart-controls';\n\nimport { debounce, isArray } from 'lodash';\nimport { matchSorter, rankings } from 'match-sorter';\nimport Collapse from 'src/components/Collapse';\nimport Alert from 'src/components/Alert';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport { Input } from 'src/components/Input';\nimport { FAST_DEBOUNCE } from 'src/constants';\nimport { isFeatureEnabled } from 'src/featureFlags';\nimport { ExploreActions } from 'src/explore/actions/exploreActions';\nimport Control from 'src/explore/components/Control';\nimport DatasourcePanelDragOption from './DatasourcePanelDragOption';\nimport { DndItemType } from '../DndItemType';\nimport { StyledColumnOption, StyledMetricOption } from '../optionRenderers';\nimport { DndItemValue } from './types';\n\ninterface DatasourceControl extends ControlConfig {\n  datasource?: IDatasource;\n}\n\nexport interface DataSourcePanelColumn {\n  is_dttm?: boolean | null;\n  description?: string | null;\n  expression?: string | null;\n  is_certified?: number | null;\n  column_name?: string | null;\n  name?: string | null;\n  type?: string;\n}\nexport interface IDatasource {\n  metrics: Metric[];\n  columns: DataSourcePanelColumn[];\n  id: number;\n  type: DatasourceType;\n  database: {\n    id: number;\n  };\n  sql?: string | null;\n  datasource_name?: string | null;\n  name?: string | null;\n  schema?: string | null;\n}\n\nexport interface Props {\n  datasource: IDatasource;\n  controls: {\n    datasource: DatasourceControl;\n  };\n  actions: Partial<ExploreActions> & Pick<ExploreActions, 'setControlValue'>;\n  // we use this props control force update when this panel resize\n  shouldForceUpdate?: number;\n  formData?: QueryFormData;\n}\n\nconst enableExploreDnd = isFeatureEnabled(\n  FeatureFlag.ENABLE_EXPLORE_DRAG_AND_DROP,\n);\n\nconst Button = styled.button`\n  background: none;\n  border: none;\n  text-decoration: underline;\n  color: ${({ theme }) => theme.colors.primary.dark1};\n`;\n\nconst ButtonContainer = styled.div`\n  text-align: center;\n  padding-top: 2px;\n`;\n\nconst DatasourceContainer = styled.div`\n  ${({ theme }) => css`\n    background-color: ${theme.colors.grayscale.light5};\n    position: relative;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    .ant-collapse {\n      height: auto;\n    }\n    .field-selections {\n      padding: 0 0 ${4 * theme.gridUnit}px;\n      overflow: auto;\n    }\n    .field-length {\n      margin-bottom: ${theme.gridUnit * 2}px;\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.light1};\n    }\n    .form-control.input-md {\n      width: calc(100% - ${theme.gridUnit * 8}px);\n      height: ${theme.gridUnit * 8}px;\n      margin: ${theme.gridUnit * 2}px auto;\n    }\n    .type-label {\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.base};\n    }\n    .Control {\n      padding-bottom: 0;\n    }\n  `};\n`;\n\nconst LabelWrapper = styled.div`\n  ${({ theme }) => css`\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: ${theme.typography.sizes.s}px;\n    background-color: ${theme.colors.grayscale.light4};\n    margin: ${theme.gridUnit * 2}px 0;\n    border-radius: 4px;\n    padding: 0 ${theme.gridUnit}px;\n\n    &:first-of-type {\n      margin-top: 0;\n    }\n    &:last-of-type {\n      margin-bottom: 0;\n    }\n\n    ${enableExploreDnd &&\n    css`\n      padding: 0;\n      cursor: pointer;\n      &:hover {\n        background-color: ${theme.colors.grayscale.light3};\n      }\n    `}\n\n    & > span {\n      white-space: nowrap;\n    }\n\n    .option-label {\n      display: inline;\n    }\n\n    .metric-option {\n      & > svg {\n        min-width: ${theme.gridUnit * 4}px;\n      }\n      & > .option-label {\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    }\n  `}\n`;\n\nconst SectionHeader = styled.span`\n  ${({ theme }) => `\n    font-size: ${theme.typography.sizes.m}px;\n    line-height: 1.3;\n  `}\n`;\n\nconst StyledInfoboxWrapper = styled.div`\n  ${({ theme }) => css`\n    margin: 0 ${theme.gridUnit * 2.5}px;\n\n    span {\n      text-decoration: underline;\n    }\n  `}\n`;\n\nconst LabelContainer = (props: {\n  children: React.ReactElement;\n  className: string;\n}) => {\n  const labelRef = useRef<HTMLDivElement>(null);\n  const extendedProps = {\n    labelRef,\n  };\n  return (\n    <LabelWrapper className={props.className}>\n      {React.cloneElement(props.children, extendedProps)}\n    </LabelWrapper>\n  );\n};\n\nexport default function DataSourcePanel({\n  datasource,\n  formData,\n  controls: { datasource: datasourceControl },\n  actions,\n  shouldForceUpdate,\n}: Props) {\n  const { columns: _columns, metrics } = datasource;\n  // display temporal column first\n  const columns = useMemo(\n    () =>\n      [...(isArray(_columns) ? _columns : [])].sort((col1, col2) => {\n        if (col1?.is_dttm && !col2?.is_dttm) {\n          return -1;\n        }\n        if (col2?.is_dttm && !col1?.is_dttm) {\n          return 1;\n        }\n        return 0;\n      }),\n    [_columns],\n  );\n\n  const [showSaveDatasetModal, setShowSaveDatasetModal] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [lists, setList] = useState({\n    columns,\n    metrics,\n  });\n  const [showAllMetrics, setShowAllMetrics] = useState(false);\n  const [showAllColumns, setShowAllColumns] = useState(false);\n\n  const DEFAULT_MAX_COLUMNS_LENGTH = 50;\n  const DEFAULT_MAX_METRICS_LENGTH = 50;\n\n  const search = useMemo(\n    () =>\n      debounce((value: string) => {\n        if (value === '') {\n          setList({ columns, metrics });\n          return;\n        }\n        setList({\n          columns: matchSorter(columns, value, {\n            keys: [\n              {\n                key: 'verbose_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: 'column_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: item =>\n                  [item?.description ?? '', item?.expression ?? ''].map(\n                    x => x?.replace(/[_\\n\\s]+/g, ' ') || '',\n                  ),\n                threshold: rankings.CONTAINS,\n                maxRanking: rankings.CONTAINS,\n              },\n            ],\n            keepDiacritics: true,\n          }),\n          metrics: matchSorter(metrics, value, {\n            keys: [\n              {\n                key: 'verbose_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: 'metric_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: item =>\n                  [item?.description ?? '', item?.expression ?? ''].map(\n                    x => x?.replace(/[_\\n\\s]+/g, ' ') || '',\n                  ),\n                threshold: rankings.CONTAINS,\n                maxRanking: rankings.CONTAINS,\n              },\n            ],\n            keepDiacritics: true,\n            baseSort: (a, b) =>\n              Number(b?.item?.is_certified ?? 0) -\n                Number(a?.item?.is_certified ?? 0) ||\n              String(a?.rankedValue ?? '').localeCompare(b?.rankedValue ?? ''),\n          }),\n        });\n      }, FAST_DEBOUNCE),\n    [columns, metrics],\n  );\n\n  useEffect(() => {\n    setList({\n      columns,\n      metrics,\n    });\n    setInputValue('');\n  }, [columns, datasource, metrics]);\n\n  const sortCertifiedFirst = (slice: DataSourcePanelColumn[]) =>\n    slice.sort((a, b) => (b?.is_certified ?? 0) - (a?.is_certified ?? 0));\n\n  const metricSlice = useMemo(\n    () =>\n      showAllMetrics\n        ? lists?.metrics\n        : lists?.metrics?.slice?.(0, DEFAULT_MAX_METRICS_LENGTH),\n    [lists?.metrics, showAllMetrics],\n  );\n\n  const columnSlice = useMemo(\n    () =>\n      showAllColumns\n        ? sortCertifiedFirst(lists?.columns)\n        : sortCertifiedFirst(\n            lists?.columns?.slice?.(0, DEFAULT_MAX_COLUMNS_LENGTH),\n          ),\n    [lists.columns, showAllColumns],\n  );\n\n  const showInfoboxCheck = () => {\n    if (sessionStorage.getItem('showInfobox') === 'false') return false;\n    return true;\n  };\n\n  const saveableDatasets = {\n    query: DatasourceType.Query,\n    saved_query: DatasourceType.SavedQuery,\n  };\n\n  const datasourceIsSaveable =\n    datasource.type && saveableDatasets[datasource.type];\n\n  const mainBody = useMemo(\n    () => (\n      <>\n        <Input\n          allowClear\n          onChange={evt => {\n            setInputValue(evt.target.value);\n            search(evt.target.value);\n          }}\n          value={inputValue}\n          className=\"form-control input-md\"\n          placeholder={t('Search Metrics & Columns')}\n        />\n        <div className=\"field-selections\">\n          {datasourceIsSaveable && showInfoboxCheck() && (\n            <StyledInfoboxWrapper>\n              <Alert\n                closable\n                onClose={() => sessionStorage.setItem('showInfobox', 'false')}\n                type=\"info\"\n                message=\"\"\n                description={\n                  <>\n                    <span\n                      role=\"button\"\n                      tabIndex={0}\n                      onClick={() => setShowSaveDatasetModal(true)}\n                      className=\"add-dataset-alert-description\"\n                    >\n                      {t('Create a dataset')}\n                    </span>\n                    {t(' to edit or add columns and metrics.')}\n                  </>\n                }\n              />\n            </StyledInfoboxWrapper>\n          )}\n          <Collapse\n            defaultActiveKey={['metrics', 'column']}\n            expandIconPosition=\"right\"\n            ghost\n          >\n            {metrics?.length && (\n              <Collapse.Panel\n                header={<SectionHeader>{t('Metrics')}</SectionHeader>}\n                key=\"metrics\"\n              >\n                <div className=\"field-length\">\n                  {t(\n                    `Showing %s of %s`,\n                    metricSlice?.length,\n                    lists?.metrics.length,\n                  )}\n                </div>\n                {metricSlice?.map?.((m: Metric) => (\n                  <LabelContainer\n                    key={m.metric_name + String(shouldForceUpdate)}\n                    className=\"column\"\n                  >\n                    {enableExploreDnd ? (\n                      <DatasourcePanelDragOption\n                        value={m}\n                        type={DndItemType.Metric}\n                      />\n                    ) : (\n                      <StyledMetricOption metric={m} showType />\n                    )}\n                  </LabelContainer>\n                ))}\n                {lists?.metrics?.length > DEFAULT_MAX_METRICS_LENGTH ? (\n                  <ButtonContainer>\n                    <Button onClick={() => setShowAllMetrics(!showAllMetrics)}>\n                      {showAllMetrics ? t('Show less...') : t('Show all...')}\n                    </Button>\n                  </ButtonContainer>\n                ) : (\n                  <></>\n                )}\n              </Collapse.Panel>\n            )}\n            <Collapse.Panel\n              header={<SectionHeader>{t('Columns')}</SectionHeader>}\n              key=\"column\"\n            >\n              <div className=\"field-length\">\n                {t(\n                  `Showing %s of %s`,\n                  columnSlice.length,\n                  lists.columns.length,\n                )}\n              </div>\n              {columnSlice.map(col => (\n                <LabelContainer\n                  key={col.column_name + String(shouldForceUpdate)}\n                  className=\"column\"\n                >\n                  {enableExploreDnd ? (\n                    <DatasourcePanelDragOption\n                      value={col as DndItemValue}\n                      type={DndItemType.Column}\n                    />\n                  ) : (\n                    <StyledColumnOption column={col as ColumnMeta} showType />\n                  )}\n                </LabelContainer>\n              ))}\n              {lists.columns.length > DEFAULT_MAX_COLUMNS_LENGTH ? (\n                <ButtonContainer>\n                  <Button onClick={() => setShowAllColumns(!showAllColumns)}>\n                    {showAllColumns ? t('Show Less...') : t('Show all...')}\n                  </Button>\n                </ButtonContainer>\n              ) : (\n                <></>\n              )}\n            </Collapse.Panel>\n          </Collapse>\n        </div>\n      </>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      columnSlice,\n      inputValue,\n      lists.columns.length,\n      lists?.metrics?.length,\n      metricSlice,\n      search,\n      showAllColumns,\n      showAllMetrics,\n      datasourceIsSaveable,\n      shouldForceUpdate,\n    ],\n  );\n\n  return (\n    <DatasourceContainer>\n      {datasourceIsSaveable && showSaveDatasetModal && (\n        <SaveDatasetModal\n          visible={showSaveDatasetModal}\n          onHide={() => setShowSaveDatasetModal(false)}\n          buttonTextOnSave={t('Save')}\n          buttonTextOnOverwrite={t('Overwrite')}\n          datasource={getDatasourceAsSaveableDataset(datasource)}\n          openWindow={false}\n          formData={formData}\n        />\n      )}\n      <Control {...datasourceControl} name=\"datasource\" actions={actions} />\n      {datasource.id != null && mainBody}\n    </DatasourceContainer>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport memoize from 'lodash/memoize';\nimport { isControlPanelSectionConfig } from '@superset-ui/chart-controls';\nimport { getChartControlPanelRegistry } from '@superset-ui/core';\nimport { controls } from '../explore/controls';\n\nconst memoizedControls = memoize((vizType, controlPanel) => {\n  const controlsMap = {};\n  (controlPanel?.controlPanelSections || [])\n    .filter(isControlPanelSectionConfig)\n    .forEach(section => {\n      section.controlSetRows.forEach(row => {\n        row.forEach(control => {\n          if (!control) return;\n          if (typeof control === 'string') {\n            // For now, we have to look in controls.jsx to get the config for some controls.\n            // Once everything is migrated out, delete this if statement.\n            controlsMap[control] = controls[control];\n          } else if (control.name && control.config) {\n            // condition needed because there are elements, e.g. <hr /> in some control configs (I'm looking at you, FilterBox!)\n            controlsMap[control.name] = control.config;\n          }\n        });\n      });\n    });\n  return controlsMap;\n});\n\nconst getControlsForVizType = vizType => {\n  const controlPanel = getChartControlPanelRegistry().get(vizType);\n  return memoizedControls(vizType, controlPanel);\n};\n\nexport default getControlsForVizType;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEqual, isEmpty } from 'lodash';\nimport { styled, t } from '@superset-ui/core';\nimport { sanitizeFormData } from 'src/explore/exploreUtils/formData';\nimport getControlsForVizType from 'src/utils/getControlsForVizType';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ModalTrigger from '../ModalTrigger';\nimport TableView from '../TableView';\n\nconst propTypes = {\n  origFormData: PropTypes.object.isRequired,\n  currentFormData: PropTypes.object.isRequired,\n};\n\nconst StyledLabel = styled.span`\n  ${({ theme }) => `\n    font-size: ${theme.typography.sizes.s}px;\n    color: ${theme.colors.grayscale.dark1};\n    background-color: ${theme.colors.alert.base};\n\n    &: hover {\n      background-color: ${theme.colors.alert.dark1};\n    }\n  `}\n`;\n\nfunction alterForComparison(value) {\n  // Considering `[]`, `{}`, `null` and `undefined` as identical\n  // for this purpose\n  if (value === undefined || value === null || value === '') {\n    return null;\n  }\n  if (typeof value === 'object') {\n    if (Array.isArray(value) && value.length === 0) {\n      return null;\n    }\n    const keys = Object.keys(value);\n    if (keys && keys.length === 0) {\n      return null;\n    }\n  }\n  return value;\n}\n\nexport default class AlteredSliceTag extends React.Component {\n  constructor(props) {\n    super(props);\n    const diffs = this.getDiffs(props);\n    const controlsMap = getControlsForVizType(this.props.origFormData.viz_type);\n    const rows = this.getRowsFromDiffs(diffs, controlsMap);\n\n    this.state = { rows, hasDiffs: !isEmpty(diffs), controlsMap };\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    // Update differences if need be\n    if (isEqual(this.props, newProps)) {\n      return;\n    }\n    const diffs = this.getDiffs(newProps);\n    this.setState(prevState => ({\n      rows: this.getRowsFromDiffs(diffs, prevState.controlsMap),\n      hasDiffs: !isEmpty(diffs),\n    }));\n  }\n\n  getRowsFromDiffs(diffs, controlsMap) {\n    return Object.entries(diffs).map(([key, diff]) => ({\n      control: (controlsMap[key] && controlsMap[key].label) || key,\n      before: this.formatValue(diff.before, key, controlsMap),\n      after: this.formatValue(diff.after, key, controlsMap),\n    }));\n  }\n\n  getDiffs(props) {\n    // Returns all properties that differ in the\n    // current form data and the saved form data\n    const ofd = sanitizeFormData(props.origFormData);\n    const cfd = sanitizeFormData(props.currentFormData);\n\n    const fdKeys = Object.keys(cfd);\n    const diffs = {};\n    fdKeys.forEach(fdKey => {\n      if (!ofd[fdKey] && !cfd[fdKey]) {\n        return;\n      }\n      if (['filters', 'having', 'where'].includes(fdKey)) {\n        return;\n      }\n      if (!this.isEqualish(ofd[fdKey], cfd[fdKey])) {\n        diffs[fdKey] = { before: ofd[fdKey], after: cfd[fdKey] };\n      }\n    });\n    return diffs;\n  }\n\n  isEqualish(val1, val2) {\n    return isEqual(alterForComparison(val1), alterForComparison(val2));\n  }\n\n  formatValue(value, key, controlsMap) {\n    // Format display value based on the control type\n    // or the value type\n    if (value === undefined) {\n      return 'N/A';\n    }\n    if (value === null) {\n      return 'null';\n    }\n    if (controlsMap[key]?.type === 'AdhocFilterControl') {\n      if (!value.length) {\n        return '[]';\n      }\n      return value\n        .map(v => {\n          const filterVal =\n            v.comparator && v.comparator.constructor === Array\n              ? `[${v.comparator.join(', ')}]`\n              : v.comparator;\n          return `${v.subject} ${v.operator} ${filterVal}`;\n        })\n        .join(', ');\n    }\n    if (controlsMap[key]?.type === 'BoundsControl') {\n      return `Min: ${value[0]}, Max: ${value[1]}`;\n    }\n    if (controlsMap[key]?.type === 'CollectionControl') {\n      return value.map(v => safeStringify(v)).join(', ');\n    }\n    if (\n      controlsMap[key]?.type === 'MetricsControl' &&\n      value.constructor === Array\n    ) {\n      const formattedValue = value.map(v => v?.label ?? v);\n      return formattedValue.length ? formattedValue.join(', ') : '[]';\n    }\n    if (typeof value === 'boolean') {\n      return value ? 'true' : 'false';\n    }\n    if (value.constructor === Array) {\n      const formattedValue = value.map(v => v?.label ?? v);\n      return formattedValue.length ? formattedValue.join(', ') : '[]';\n    }\n    if (typeof value === 'string' || typeof value === 'number') {\n      return value;\n    }\n    return safeStringify(value);\n  }\n\n  renderModalBody() {\n    const columns = [\n      {\n        accessor: 'control',\n        Header: t('Control'),\n      },\n      {\n        accessor: 'before',\n        Header: t('Before'),\n      },\n      {\n        accessor: 'after',\n        Header: t('After'),\n      },\n    ];\n    // set the wrap text in the specific columns.\n    const columnsForWrapText = ['Control', 'Before', 'After'];\n\n    return (\n      <TableView\n        columns={columns}\n        data={this.state.rows}\n        pageSize={50}\n        className=\"table-condensed\"\n        columnsForWrapText={columnsForWrapText}\n      />\n    );\n  }\n\n  renderTriggerNode() {\n    return (\n      <Tooltip id=\"difference-tooltip\" title={t('Click to see difference')}>\n        <StyledLabel className=\"label\">{t('Altered')}</StyledLabel>\n      </Tooltip>\n    );\n  }\n\n  render() {\n    // Return nothing if there are no differences\n    if (!this.state.hasDiffs) {\n      return null;\n    }\n    // Render the label-warning 'Altered' tag which the user may\n    // click to open a modal containing a table summarizing the\n    // differences in the slice\n    return (\n      <ModalTrigger\n        triggerNode={this.renderTriggerNode()}\n        modalTitle={t('Chart changes')}\n        modalBody={this.renderModalBody()}\n        responsive\n      />\n    );\n  }\n}\n\nAlteredSliceTag.propTypes = propTypes;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from 'src/components/Tooltip';\nimport {\n  CategoricalColorNamespace,\n  css,\n  logging,\n  SupersetClient,\n  t,\n  tn,\n} from '@superset-ui/core';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport AlteredSliceTag from 'src/components/AlteredSliceTag';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport PropertiesModal from 'src/explore/components/PropertiesModal';\nimport { sliceUpdated } from 'src/explore/actions/exploreActions';\nimport { PageHeaderWithActions } from 'src/components/PageHeaderWithActions';\nimport MetadataBar, { MetadataType } from 'src/components/MetadataBar';\nimport { setSaveChartModalVisibility } from 'src/explore/actions/saveModalActions';\nimport { useExploreAdditionalActionsMenu } from '../useExploreAdditionalActionsMenu';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  canOverwrite: PropTypes.bool.isRequired,\n  canDownload: PropTypes.bool.isRequired,\n  dashboardId: PropTypes.number,\n  isStarred: PropTypes.bool.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  table_name: PropTypes.string,\n  formData: PropTypes.object,\n  ownState: PropTypes.object,\n  timeout: PropTypes.number,\n  chart: chartPropShape,\n  saveDisabled: PropTypes.bool,\n};\n\nconst saveButtonStyles = theme => css`\n  color: ${theme.colors.primary.dark2};\n  & > span[role='img'] {\n    margin-right: 0;\n  }\n`;\n\nconst additionalItemsStyles = theme => css`\n  display: flex;\n  align-items: center;\n  margin-left: ${theme.gridUnit}px;\n  & > span {\n    margin-right: ${theme.gridUnit * 3}px;\n  }\n`;\n\nexport const ExploreChartHeader = ({\n  dashboardId,\n  slice,\n  actions,\n  formData,\n  ownState,\n  chart,\n  user,\n  canOverwrite,\n  canDownload,\n  isStarred,\n  sliceName,\n  saveDisabled,\n  metadata,\n}) => {\n  const dispatch = useDispatch();\n  const { latestQueryFormData, sliceFormData } = chart;\n  const [isPropertiesModalOpen, setIsPropertiesModalOpen] = useState(false);\n\n  const updateCategoricalNamespace = async () => {\n    const { dashboards } = metadata || {};\n    const dashboard =\n      dashboardId && dashboards && dashboards.find(d => d.id === dashboardId);\n\n    if (dashboard) {\n      try {\n        // Dashboards from metadata don't contain the json_metadata field\n        // to avoid unnecessary payload. Here we query for the dashboard json_metadata.\n        const response = await SupersetClient.get({\n          endpoint: `/api/v1/dashboard/${dashboard.id}`,\n        });\n        const result = response?.json?.result;\n\n        // setting the chart to use the dashboard custom label colors if any\n        const metadata = JSON.parse(result.json_metadata);\n        const sharedLabelColors = metadata.shared_label_colors || {};\n        const customLabelColors = metadata.label_colors || {};\n        const mergedLabelColors = {\n          ...sharedLabelColors,\n          ...customLabelColors,\n        };\n\n        const categoricalNamespace = CategoricalColorNamespace.getNamespace();\n\n        Object.keys(mergedLabelColors).forEach(label => {\n          categoricalNamespace.setColor(\n            label,\n            mergedLabelColors[label],\n            metadata.color_scheme,\n          );\n        });\n      } catch (error) {\n        logging.info(t('Unable to retrieve dashboard colors'));\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (dashboardId) updateCategoricalNamespace();\n  }, []);\n\n  const openPropertiesModal = () => {\n    setIsPropertiesModalOpen(true);\n  };\n\n  const closePropertiesModal = () => {\n    setIsPropertiesModalOpen(false);\n  };\n\n  const showModal = useCallback(() => {\n    dispatch(setSaveChartModalVisibility(true));\n  }, [dispatch]);\n\n  const updateSlice = useCallback(\n    slice => {\n      dispatch(sliceUpdated(slice));\n    },\n    [dispatch],\n  );\n\n  const [menu, isDropdownVisible, setIsDropdownVisible] =\n    useExploreAdditionalActionsMenu(\n      latestQueryFormData,\n      canDownload,\n      slice,\n      actions.redirectSQLLab,\n      openPropertiesModal,\n      ownState,\n      metadata?.dashboards,\n    );\n\n  const metadataBar = useMemo(() => {\n    if (!metadata) {\n      return null;\n    }\n    const items = [];\n    items.push({\n      type: MetadataType.DASHBOARDS,\n      title:\n        metadata.dashboards.length > 0\n          ? tn(\n              'Added to 1 dashboard',\n              'Added to %s dashboards',\n              metadata.dashboards.length,\n              metadata.dashboards.length,\n            )\n          : t('Not added to any dashboard'),\n      description:\n        metadata.dashboards.length > 0\n          ? t(\n              'You can preview the list of dashboards in the chart settings dropdown.',\n            )\n          : undefined,\n    });\n    items.push({\n      type: MetadataType.LAST_MODIFIED,\n      value: metadata.changed_on_humanized,\n      modifiedBy: metadata.changed_by || t('Not available'),\n    });\n    items.push({\n      type: MetadataType.OWNER,\n      createdBy: metadata.created_by || t('Not available'),\n      owners: metadata.owners.length > 0 ? metadata.owners : t('None'),\n      createdOn: metadata.created_on_humanized,\n    });\n    if (slice?.description) {\n      items.push({\n        type: MetadataType.DESCRIPTION,\n        value: slice?.description,\n      });\n    }\n    return <MetadataBar items={items} tooltipPlacement=\"bottom\" />;\n  }, [metadata, slice?.description]);\n\n  const oldSliceName = slice?.slice_name;\n  return (\n    <>\n      <PageHeaderWithActions\n        editableTitleProps={{\n          title: sliceName,\n          canEdit:\n            !slice ||\n            canOverwrite ||\n            (slice?.owners || []).includes(user?.userId),\n          onSave: actions.updateChartTitle,\n          placeholder: t('Add the name of the chart'),\n          label: t('Chart title'),\n        }}\n        showTitlePanelItems={!!slice}\n        certificatiedBadgeProps={{\n          certifiedBy: slice?.certified_by,\n          details: slice?.certification_details,\n        }}\n        showFaveStar={!!user?.userId}\n        faveStarProps={{\n          itemId: slice?.slice_id,\n          fetchFaveStar: actions.fetchFaveStar,\n          saveFaveStar: actions.saveFaveStar,\n          isStarred,\n          showTooltip: true,\n        }}\n        titlePanelAdditionalItems={\n          <div css={additionalItemsStyles}>\n            {sliceFormData ? (\n              <AlteredSliceTag\n                className=\"altered\"\n                origFormData={{\n                  ...sliceFormData,\n                  chartTitle: oldSliceName,\n                }}\n                currentFormData={{ ...formData, chartTitle: sliceName }}\n              />\n            ) : null}\n            {metadataBar}\n          </div>\n        }\n        rightPanelAdditionalItems={\n          <Tooltip\n            title={\n              saveDisabled\n                ? t('Add required control values to save chart')\n                : null\n            }\n          >\n            {/* needed to wrap button in a div - antd tooltip doesn't work with disabled button */}\n            <div>\n              <Button\n                buttonStyle=\"secondary\"\n                onClick={showModal}\n                disabled={saveDisabled}\n                data-test=\"query-save-button\"\n                css={saveButtonStyles}\n              >\n                <Icons.SaveOutlined iconSize=\"l\" />\n                {t('Save')}\n              </Button>\n            </div>\n          </Tooltip>\n        }\n        additionalActionsMenu={menu}\n        menuDropdownProps={{\n          visible: isDropdownVisible,\n          onVisibleChange: setIsDropdownVisible,\n        }}\n      />\n      {isPropertiesModalOpen && (\n        <PropertiesModal\n          show={isPropertiesModalOpen}\n          onHide={closePropertiesModal}\n          onSave={updateSlice}\n          slice={slice}\n        />\n      )}\n    </>\n  );\n};\n\nExploreChartHeader.propTypes = propTypes;\n\nexport default ExploreChartHeader;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n  styled,\n  t,\n  css,\n  useTheme,\n  logging,\n  useChangeEffect,\n  useComponentDidMount,\n  usePrevious,\n} from '@superset-ui/core';\nimport { debounce, pick } from 'lodash';\nimport { Resizable } from 're-resizable';\nimport { usePluginContext } from 'src/components/DynamicPlugins';\nimport { Global } from '@emotion/react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport {\n  getItem,\n  setItem,\n  LocalStorageKeys,\n} from 'src/utils/localStorageHelpers';\nimport { RESERVED_CHART_URL_PARAMS, URL_PARAMS } from 'src/constants';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport * as logActions from 'src/logger/actions';\nimport {\n  LOG_ACTIONS_MOUNT_EXPLORER,\n  LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS,\n} from 'src/logger/LogUtils';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport cx from 'classnames';\nimport * as chartActions from 'src/components/Chart/chartAction';\nimport { fetchDatasourceMetadata } from 'src/dashboard/actions/datasources';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport { mergeExtraFormData } from 'src/dashboard/components/nativeFilters/utils';\nimport { postFormData, putFormData } from 'src/explore/exploreUtils/formData';\nimport { datasourcesActions } from 'src/explore/actions/datasourcesActions';\nimport { mountExploreUrl } from 'src/explore/exploreUtils';\nimport { getFormDataFromControls } from 'src/explore/controlUtils';\nimport * as exploreActions from 'src/explore/actions/exploreActions';\nimport * as saveModalActions from 'src/explore/actions/saveModalActions';\nimport { useTabId } from 'src/hooks/useTabId';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport ExploreChartPanel from '../ExploreChartPanel';\nimport ConnectedControlPanelsContainer from '../ControlPanelsContainer';\nimport SaveModal from '../SaveModal';\nimport DataSourcePanel from '../DatasourcePanel';\nimport ConnectedExploreChartHeader from '../ExploreChartHeader';\n\nconst propTypes = {\n  ...ExploreChartPanel.propTypes,\n  actions: PropTypes.object.isRequired,\n  datasource_type: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number,\n  isDatasourceMetaLoading: PropTypes.bool.isRequired,\n  chart: chartPropShape.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  controls: PropTypes.object.isRequired,\n  forcedHeight: PropTypes.string,\n  form_data: PropTypes.object.isRequired,\n  standalone: PropTypes.bool.isRequired,\n  force: PropTypes.bool,\n  timeout: PropTypes.number,\n  impressionId: PropTypes.string,\n  vizType: PropTypes.string,\n  saveAction: PropTypes.string,\n  isSaveModalVisible: PropTypes.bool,\n};\n\nconst ExploreContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  min-height: 0;\n`;\n\nconst ExplorePanelContainer = styled.div`\n  ${({ theme }) => css`\n    background: ${theme.colors.grayscale.light5};\n    text-align: left;\n    position: relative;\n    width: 100%;\n    max-height: 100%;\n    min-height: 0;\n    display: flex;\n    flex: 1;\n    flex-wrap: nowrap;\n    border-top: 1px solid ${theme.colors.grayscale.light2};\n    .explore-column {\n      display: flex;\n      flex-direction: column;\n      padding: ${theme.gridUnit * 2}px 0;\n      max-height: 100%;\n    }\n    .data-source-selection {\n      background-color: ${theme.colors.grayscale.light5};\n      padding: ${theme.gridUnit * 2}px 0;\n      border-right: 1px solid ${theme.colors.grayscale.light2};\n    }\n    .main-explore-content {\n      flex: 1;\n      min-width: ${theme.gridUnit * 128}px;\n      border-left: 1px solid ${theme.colors.grayscale.light2};\n      padding: 0 ${theme.gridUnit * 4}px;\n      .panel {\n        margin-bottom: 0;\n      }\n    }\n    .controls-column {\n      align-self: flex-start;\n      padding: 0;\n    }\n    .title-container {\n      position: relative;\n      display: flex;\n      flex-direction: row;\n      padding: 0 ${theme.gridUnit * 2}px 0 ${theme.gridUnit * 4}px;\n      justify-content: space-between;\n      .horizontal-text {\n        font-size: ${theme.typography.sizes.m}px;\n      }\n    }\n    .no-show {\n      display: none;\n    }\n    .vertical-text {\n      writing-mode: vertical-rl;\n      text-orientation: mixed;\n    }\n    .sidebar {\n      height: 100%;\n      background-color: ${theme.colors.grayscale.light4};\n      padding: ${theme.gridUnit * 2}px;\n      width: ${theme.gridUnit * 8}px;\n    }\n    .collapse-icon > svg {\n      color: ${theme.colors.primary.base};\n    }\n  `};\n`;\n\nconst updateHistory = debounce(\n  async (\n    formData,\n    datasourceId,\n    datasourceType,\n    isReplace,\n    standalone,\n    force,\n    title,\n    tabId,\n  ) => {\n    const payload = { ...formData };\n    const chartId = formData.slice_id;\n    const params = new URLSearchParams(window.location.search);\n    const additionalParam = Object.fromEntries(params);\n\n    if (chartId) {\n      additionalParam[URL_PARAMS.sliceId.name] = chartId;\n    } else {\n      additionalParam[URL_PARAMS.datasourceId.name] = datasourceId;\n      additionalParam[URL_PARAMS.datasourceType.name] = datasourceType;\n    }\n\n    const urlParams = payload?.url_params || {};\n    Object.entries(urlParams).forEach(([key, value]) => {\n      if (!RESERVED_CHART_URL_PARAMS.includes(key)) {\n        additionalParam[key] = value;\n      }\n    });\n\n    try {\n      let key;\n      let stateModifier;\n      if (isReplace) {\n        key = await postFormData(\n          datasourceId,\n          datasourceType,\n          formData,\n          chartId,\n          tabId,\n        );\n        stateModifier = 'replaceState';\n      } else {\n        key = getUrlParam(URL_PARAMS.formDataKey);\n        await putFormData(\n          datasourceId,\n          datasourceType,\n          key,\n          formData,\n          chartId,\n          tabId,\n        );\n        stateModifier = 'pushState';\n      }\n      // avoid race condition in case user changes route before explore updates the url\n      if (window.location.pathname.startsWith('/explore')) {\n        const url = mountExploreUrl(\n          standalone ? URL_PARAMS.standalone.name : null,\n          {\n            [URL_PARAMS.formDataKey.name]: key,\n            ...additionalParam,\n          },\n          force,\n        );\n        window.history[stateModifier](payload, title, url);\n      }\n    } catch (e) {\n      logging.warn('Failed at altering browser history', e);\n    }\n  },\n  1000,\n);\n\nfunction ExploreViewContainer(props) {\n  const dynamicPluginContext = usePluginContext();\n  const dynamicPlugin = dynamicPluginContext.dynamicPlugins[props.vizType];\n  const isDynamicPluginLoading = dynamicPlugin && dynamicPlugin.mounting;\n  const wasDynamicPluginLoading = usePrevious(isDynamicPluginLoading);\n\n  /** the state of controls in the previous render */\n  const previousControls = usePrevious(props.controls);\n  /** the state of controls last time a query was triggered */\n  const [lastQueriedControls, setLastQueriedControls] = useState(\n    props.controls,\n  );\n\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [shouldForceUpdate, setShouldForceUpdate] = useState(-1);\n  const tabId = useTabId();\n\n  const theme = useTheme();\n\n  const defaultSidebarsWidth = {\n    controls_width: 320,\n    datasource_width: 300,\n  };\n\n  const addHistory = useCallback(\n    async ({ isReplace = false, title } = {}) => {\n      const formData = props.dashboardId\n        ? {\n            ...props.form_data,\n            dashboardId: props.dashboardId,\n          }\n        : props.form_data;\n      const { id: datasourceId, type: datasourceType } = props.datasource;\n\n      updateHistory(\n        formData,\n        datasourceId,\n        datasourceType,\n        isReplace,\n        props.standalone,\n        props.force,\n        title,\n        tabId,\n      );\n    },\n    [\n      props.dashboardId,\n      props.form_data,\n      props.datasource.id,\n      props.datasource.type,\n      props.standalone,\n      props.force,\n      tabId,\n    ],\n  );\n\n  const handlePopstate = useCallback(() => {\n    const formData = window.history.state;\n    if (formData && Object.keys(formData).length) {\n      props.actions.setExploreControls(formData);\n      props.actions.postChartFormData(\n        formData,\n        props.force,\n        props.timeout,\n        props.chart.id,\n      );\n    }\n  }, [props.actions, props.chart.id, props.timeout]);\n\n  const onQuery = useCallback(() => {\n    props.actions.setForceQuery(false);\n    props.actions.triggerQuery(true, props.chart.id);\n    addHistory();\n    setLastQueriedControls(props.controls);\n  }, [props.controls, addHistory, props.actions, props.chart.id]);\n\n  const handleKeydown = useCallback(\n    event => {\n      const controlOrCommand = event.ctrlKey || event.metaKey;\n      if (controlOrCommand) {\n        const isEnter = event.key === 'Enter' || event.keyCode === 13;\n        const isS = event.key === 's' || event.keyCode === 83;\n        if (isEnter) {\n          onQuery();\n        } else if (isS) {\n          if (props.slice) {\n            props.actions\n              .saveSlice(props.form_data, {\n                action: 'overwrite',\n                slice_id: props.slice.slice_id,\n                slice_name: props.slice.slice_name,\n                add_to_dash: 'noSave',\n                goto_dash: false,\n              })\n              .then(({ data }) => {\n                window.location = data.slice.slice_url;\n              });\n          }\n        }\n      }\n    },\n    [onQuery, props.actions, props.form_data, props.slice],\n  );\n\n  function onStop() {\n    if (props.chart && props.chart.queryController) {\n      props.chart.queryController.abort();\n    }\n  }\n\n  function toggleCollapse() {\n    setIsCollapsed(!isCollapsed);\n  }\n\n  useComponentDidMount(() => {\n    props.actions.logEvent(LOG_ACTIONS_MOUNT_EXPLORER);\n  });\n\n  useChangeEffect(tabId, (previous, current) => {\n    if (current) {\n      addHistory({ isReplace: true });\n    }\n  });\n\n  const previousHandlePopstate = usePrevious(handlePopstate);\n  useEffect(() => {\n    if (previousHandlePopstate) {\n      window.removeEventListener('popstate', previousHandlePopstate);\n    }\n    window.addEventListener('popstate', handlePopstate);\n    return () => {\n      window.removeEventListener('popstate', handlePopstate);\n    };\n  }, [handlePopstate, previousHandlePopstate]);\n\n  const previousHandleKeyDown = usePrevious(handleKeydown);\n  useEffect(() => {\n    if (previousHandleKeyDown) {\n      window.removeEventListener('keydown', previousHandleKeyDown);\n    }\n    document.addEventListener('keydown', handleKeydown);\n    return () => {\n      document.removeEventListener('keydown', handleKeydown);\n    };\n  }, [handleKeydown, previousHandleKeyDown]);\n\n  useEffect(() => {\n    if (wasDynamicPluginLoading && !isDynamicPluginLoading) {\n      // reload the controls now that we actually have the control config\n      props.actions.dynamicPluginControlsReady();\n    }\n  }, [isDynamicPluginLoading]);\n\n  useEffect(() => {\n    const hasError = Object.values(props.controls).some(\n      control =>\n        control.validationErrors && control.validationErrors.length > 0,\n    );\n    if (!hasError) {\n      props.actions.triggerQuery(true, props.chart.id);\n    }\n  }, []);\n\n  const reRenderChart = useCallback(\n    controlsChanged => {\n      const newQueryFormData = controlsChanged\n        ? {\n            ...props.chart.latestQueryFormData,\n            ...getFormDataFromControls(pick(props.controls, controlsChanged)),\n          }\n        : getFormDataFromControls(props.controls);\n      props.actions.updateQueryFormData(newQueryFormData, props.chart.id);\n      props.actions.renderTriggered(new Date().getTime(), props.chart.id);\n      addHistory();\n    },\n    [\n      addHistory,\n      props.actions,\n      props.chart.id,\n      props.chart.latestQueryFormData,\n      props.controls,\n    ],\n  );\n\n  // effect to run when controls change\n  useEffect(() => {\n    if (\n      previousControls &&\n      props.chart.latestQueryFormData.viz_type === props.controls.viz_type.value\n    ) {\n      if (\n        props.controls.datasource &&\n        (previousControls.datasource == null ||\n          props.controls.datasource.value !== previousControls.datasource.value)\n      ) {\n        // this should really be handled by actions\n        fetchDatasourceMetadata(props.form_data.datasource, true);\n      }\n\n      const changedControlKeys = Object.keys(props.controls).filter(\n        key =>\n          typeof previousControls[key] !== 'undefined' &&\n          !areObjectsEqual(\n            props.controls[key].value,\n            previousControls[key].value,\n          ),\n      );\n\n      // this should also be handled by the actions that are actually changing the controls\n      const displayControlsChanged = changedControlKeys.filter(\n        key => props.controls[key].renderTrigger,\n      );\n      if (displayControlsChanged.length > 0) {\n        reRenderChart(displayControlsChanged);\n      }\n    }\n  }, [props.controls, props.ownState]);\n\n  const chartIsStale = useMemo(() => {\n    if (lastQueriedControls) {\n      const changedControlKeys = Object.keys(props.controls).filter(\n        key =>\n          typeof lastQueriedControls[key] !== 'undefined' &&\n          !areObjectsEqual(\n            props.controls[key].value,\n            lastQueriedControls[key].value,\n            { ignoreFields: ['datasourceWarning'] },\n          ),\n      );\n\n      return changedControlKeys.some(\n        key =>\n          !props.controls[key].renderTrigger &&\n          !props.controls[key].dontRefreshOnChange,\n      );\n    }\n    return false;\n  }, [lastQueriedControls, props.controls]);\n\n  useChangeEffect(props.saveAction, () => {\n    if (['saveas', 'overwrite'].includes(props.saveAction)) {\n      onQuery();\n      addHistory({ isReplace: true });\n      props.actions.setSaveAction(null);\n    }\n  });\n\n  useEffect(() => {\n    if (props.ownState !== undefined) {\n      onQuery();\n      reRenderChart();\n    }\n  }, [props.ownState]);\n\n  if (chartIsStale) {\n    props.actions.logEvent(LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS);\n  }\n\n  const errorMessage = useMemo(() => {\n    const controlsWithErrors = Object.values(props.controls).filter(\n      control =>\n        control.validationErrors && control.validationErrors.length > 0,\n    );\n    if (controlsWithErrors.length === 0) {\n      return null;\n    }\n\n    const errorMessages = controlsWithErrors.map(\n      control => control.validationErrors,\n    );\n    const uniqueErrorMessages = [...new Set(errorMessages.flat())];\n\n    const errors = uniqueErrorMessages\n      .map(message => {\n        const matchingLabels = controlsWithErrors\n          .filter(control => control.validationErrors?.includes(message))\n          .map(control => control.label);\n        return [matchingLabels, message];\n      })\n      .map(([labels, message]) => (\n        <div key={message}>\n          {labels.length > 1 ? t('Controls labeled ') : t('Control labeled ')}\n          <strong>{` ${labels.join(', ')}`}</strong>\n          <span>: {message}</span>\n        </div>\n      ));\n\n    let errorMessage;\n    if (errors.length > 0) {\n      errorMessage = <div style={{ textAlign: 'left' }}>{errors}</div>;\n    }\n    return errorMessage;\n  }, [props.controls]);\n\n  function renderChartContainer() {\n    return (\n      <ExploreChartPanel\n        {...props}\n        errorMessage={errorMessage}\n        chartIsStale={chartIsStale}\n        onQuery={onQuery}\n      />\n    );\n  }\n\n  function getSidebarWidths(key) {\n    return getItem(key, defaultSidebarsWidth[key]);\n  }\n\n  function setSidebarWidths(key, dimension) {\n    const newDimension = Number(getSidebarWidths(key)) + dimension.width;\n    setItem(key, newDimension);\n  }\n\n  if (props.standalone) {\n    return renderChartContainer();\n  }\n\n  return (\n    <ExploreContainer>\n      <ConnectedExploreChartHeader\n        actions={props.actions}\n        canOverwrite={props.can_overwrite}\n        canDownload={props.can_download}\n        dashboardId={props.dashboardId}\n        isStarred={props.isStarred}\n        slice={props.slice}\n        sliceName={props.sliceName}\n        table_name={props.table_name}\n        formData={props.form_data}\n        chart={props.chart}\n        ownState={props.ownState}\n        user={props.user}\n        reports={props.reports}\n        saveDisabled={errorMessage || props.chart.chartStatus === 'loading'}\n        metadata={props.metadata}\n      />\n      <ExplorePanelContainer id=\"explore-container\">\n        <Global\n          styles={css`\n            .navbar {\n              margin-bottom: 0;\n            }\n            body {\n              height: 100vh;\n              max-height: 100vh;\n              overflow: hidden;\n            }\n            #app-menu,\n            #app {\n              flex: 1 1 auto;\n            }\n            #app {\n              flex-basis: 100%;\n              overflow: hidden;\n              height: 100%;\n            }\n            #app-menu {\n              flex-shrink: 0;\n            }\n          `}\n        />\n        <Resizable\n          onResizeStop={(evt, direction, ref, d) => {\n            setShouldForceUpdate(d?.width);\n            setSidebarWidths(LocalStorageKeys.datasource_width, d);\n          }}\n          defaultSize={{\n            width: getSidebarWidths(LocalStorageKeys.datasource_width),\n            height: '100%',\n          }}\n          minWidth={defaultSidebarsWidth[LocalStorageKeys.datasource_width]}\n          maxWidth=\"33%\"\n          enable={{ right: true }}\n          className={\n            isCollapsed ? 'no-show' : 'explore-column data-source-selection'\n          }\n        >\n          <div className=\"title-container\">\n            <span className=\"horizontal-text\">{t('Chart Source')}</span>\n            <span\n              role=\"button\"\n              tabIndex={0}\n              className=\"action-button\"\n              onClick={toggleCollapse}\n            >\n              <Icons.Expand\n                className=\"collapse-icon\"\n                iconColor={theme.colors.primary.base}\n                iconSize=\"l\"\n              />\n            </span>\n          </div>\n          <DataSourcePanel\n            formData={props.form_data}\n            datasource={props.datasource}\n            controls={props.controls}\n            actions={props.actions}\n            shouldForceUpdate={shouldForceUpdate}\n            user={props.user}\n          />\n        </Resizable>\n        {isCollapsed ? (\n          <div\n            className=\"sidebar\"\n            onClick={toggleCollapse}\n            data-test=\"open-datasource-tab\"\n            role=\"button\"\n            tabIndex={0}\n          >\n            <span role=\"button\" tabIndex={0} className=\"action-button\">\n              <Tooltip title={t('Open Datasource tab')}>\n                <Icons.Collapse\n                  className=\"collapse-icon\"\n                  iconColor={theme.colors.primary.base}\n                  iconSize=\"l\"\n                />\n              </Tooltip>\n            </span>\n          </div>\n        ) : null}\n        <Resizable\n          onResizeStop={(evt, direction, ref, d) =>\n            setSidebarWidths(LocalStorageKeys.controls_width, d)\n          }\n          defaultSize={{\n            width: getSidebarWidths(LocalStorageKeys.controls_width),\n            height: '100%',\n          }}\n          minWidth={defaultSidebarsWidth[LocalStorageKeys.controls_width]}\n          maxWidth=\"33%\"\n          enable={{ right: true }}\n          className=\"col-sm-3 explore-column controls-column\"\n        >\n          <ConnectedControlPanelsContainer\n            exploreState={props.exploreState}\n            actions={props.actions}\n            form_data={props.form_data}\n            controls={props.controls}\n            chart={props.chart}\n            datasource_type={props.datasource_type}\n            isDatasourceMetaLoading={props.isDatasourceMetaLoading}\n            onQuery={onQuery}\n            onStop={onStop}\n            canStopQuery={props.can_add || props.can_overwrite}\n            errorMessage={errorMessage}\n            chartIsStale={chartIsStale}\n          />\n        </Resizable>\n        <div\n          className={cx(\n            'main-explore-content',\n            isCollapsed ? 'col-sm-9' : 'col-sm-7',\n          )}\n        >\n          {renderChartContainer()}\n        </div>\n      </ExplorePanelContainer>\n      {props.isSaveModalVisible && (\n        <SaveModal\n          addDangerToast={props.addDangerToast}\n          actions={props.actions}\n          form_data={props.form_data}\n          sliceName={props.sliceName}\n          dashboardId={props.dashboardId}\n        />\n      )}\n    </ExploreContainer>\n  );\n}\n\nExploreViewContainer.propTypes = propTypes;\n\nfunction mapStateToProps(state) {\n  const {\n    explore,\n    charts,\n    common,\n    impressionId,\n    dataMask,\n    reports,\n    user,\n    saveModal,\n  } = state;\n  const { controls, slice, datasource, metadata } = explore;\n  const form_data = getFormDataFromControls(controls);\n  const slice_id = form_data.slice_id ?? slice?.slice_id ?? 0; // 0 - unsaved chart\n  form_data.extra_form_data = mergeExtraFormData(\n    { ...form_data.extra_form_data },\n    {\n      ...dataMask[slice_id]?.ownState,\n    },\n  );\n  const chart = charts[slice_id];\n\n  let dashboardId = Number(explore.form_data?.dashboardId);\n  if (Number.isNaN(dashboardId)) {\n    dashboardId = undefined;\n  }\n\n  return {\n    isDatasourceMetaLoading: explore.isDatasourceMetaLoading,\n    datasource,\n    datasource_type: datasource.type,\n    datasourceId: datasource.datasource_id,\n    dashboardId,\n    controls: explore.controls,\n    can_add: !!explore.can_add,\n    can_download: !!explore.can_download,\n    can_overwrite: !!explore.can_overwrite,\n    column_formats: datasource?.column_formats ?? null,\n    containerId: slice\n      ? `slice-container-${slice.slice_id}`\n      : 'slice-container',\n    isStarred: explore.isStarred,\n    slice,\n    sliceName: explore.sliceName ?? slice?.slice_name ?? null,\n    triggerRender: explore.triggerRender,\n    form_data,\n    table_name: datasource.table_name,\n    vizType: form_data.viz_type,\n    standalone: !!explore.standalone,\n    force: !!explore.force,\n    chart,\n    timeout: common.conf.SUPERSET_WEBSERVER_TIMEOUT,\n    ownState: dataMask[slice_id]?.ownState,\n    impressionId,\n    user,\n    exploreState: explore,\n    reports,\n    metadata,\n    saveAction: explore.saveAction,\n    isSaveModalVisible: saveModal.isVisible,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const actions = {\n    ...exploreActions,\n    ...datasourcesActions,\n    ...saveModalActions,\n    ...chartActions,\n    ...logActions,\n  };\n  return {\n    actions: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withToasts(React.memo(ExploreViewContainer)));\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { DatasourceType, t } from '@superset-ui/core';\nimport {\n  ColumnMeta,\n  ColumnOption,\n  ControlConfig,\n  ControlPanelSectionConfig,\n} from '@superset-ui/chart-controls';\nimport { ExplorePageInitialData } from './types';\n\nexport const controlPanelSectionsChartOptions: (ControlPanelSectionConfig | null)[] =\n  [\n    null,\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        [\n          'color_scheme',\n          {\n            name: 'rose_area_proportion',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Use Area Proportions'),\n              description: t(\n                'Check if the Rose Chart should use segment area instead of ' +\n                  'segment radius for proportioning',\n              ),\n              default: false,\n              renderTrigger: true,\n            },\n          },\n        ],\n        [\n          {\n            name: 'stacked_style',\n            config: {\n              type: 'SelectControl',\n              label: t('Stacked Style'),\n              renderTrigger: true,\n              choices: [\n                ['stack', t('stack')],\n                ['stream', t('stream')],\n                ['expand', t('expand')],\n              ],\n              default: 'stack',\n              description: '',\n            },\n          },\n        ],\n      ],\n    },\n  ];\n\nexport const controlPanelSectionsChartOptionsOnlyColorScheme: ControlPanelSectionConfig[] =\n  [\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [['color_scheme']],\n    },\n  ];\n\nexport const controlPanelSectionsChartOptionsTable: ControlPanelSectionConfig[] =\n  [\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        [\n          'metric',\n          'metrics',\n          {\n            name: 'all_columns',\n            config: {\n              type: 'SelectControl',\n              multi: true,\n              label: t('Columns'),\n              default: [],\n              description: t('Columns to display'),\n              optionRenderer: c => <ColumnOption column={c} showType />,\n              valueKey: 'column_name',\n              mapStateToProps: stateRef => ({\n                options: stateRef.datasource?.columns || [],\n              }),\n              freeForm: true,\n            } as ControlConfig<'SelectControl', ColumnMeta>,\n          },\n        ],\n      ],\n    },\n  ];\n\nexport const exploreInitialData: ExplorePageInitialData = {\n  form_data: {\n    datasource: '8__table',\n    metric: 'count',\n    slice_id: 371,\n    viz_type: 'table',\n  },\n  slice: {\n    cache_timeout: null,\n    description: null,\n    slice_id: 371,\n    slice_name: 'Age distribution of respondents',\n    is_managed_externally: false,\n    form_data: {\n      datasource: '8__table',\n      metric: 'count',\n      slice_id: 371,\n      viz_type: 'table',\n    },\n  },\n  dataset: {\n    id: 8,\n    type: DatasourceType.Table,\n    columns: [{ column_name: 'a' }],\n    metrics: [{ metric_name: 'first' }, { metric_name: 'second' }],\n    column_formats: {},\n    currency_formats: {},\n    verbose_map: {},\n    main_dttm_col: '',\n    datasource_name: '8__table',\n    description: null,\n  },\n};\n\nexport const fallbackExploreInitialData: ExplorePageInitialData = {\n  form_data: {\n    datasource: '0__table',\n    viz_type: 'table',\n  },\n  dataset: {\n    id: 0,\n    type: DatasourceType.Table,\n    columns: [],\n    metrics: [],\n    column_formats: {},\n    currency_formats: {},\n    verbose_map: {},\n    main_dttm_col: '',\n    owners: [],\n    datasource_name: 'missing_datasource',\n    name: 'missing_datasource',\n    description: null,\n  },\n  slice: null,\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport isEqual from 'lodash/isEqual';\nimport {\n  AdhocFilter,\n  ensureIsArray,\n  EXTRA_FORM_DATA_OVERRIDE_EXTRA_KEYS,\n  EXTRA_FORM_DATA_OVERRIDE_REGULAR_MAPPINGS,\n  isDefined,\n  isFreeFormAdhocFilter,\n  isSimpleAdhocFilter,\n  JsonObject,\n  NO_TIME_RANGE,\n  QueryFormData,\n  QueryObjectFilterClause,\n  SimpleAdhocFilter,\n} from '@superset-ui/core';\nimport { simpleFilterToAdhoc } from 'src/utils/simpleFilterToAdhoc';\n\nconst removeExtraFieldForNewCharts = (\n  filters: AdhocFilter[],\n  isNewChart: boolean,\n) =>\n  filters.map(filter => {\n    if (filter.isExtra) {\n      return { ...filter, isExtra: !isNewChart };\n    }\n    return filter;\n  });\n\nconst removeAdhocFilterDuplicates = (filters: AdhocFilter[]) => {\n  const isDuplicate = (\n    adhocFilter: AdhocFilter,\n    existingFilters: AdhocFilter[],\n  ) =>\n    existingFilters.some(\n      (existingFilter: AdhocFilter) =>\n        (isFreeFormAdhocFilter(existingFilter) &&\n          isFreeFormAdhocFilter(adhocFilter) &&\n          existingFilter.clause === adhocFilter.clause &&\n          existingFilter.sqlExpression === adhocFilter.sqlExpression) ||\n        (isSimpleAdhocFilter(existingFilter) &&\n          isSimpleAdhocFilter(adhocFilter) &&\n          existingFilter.operator === adhocFilter.operator &&\n          existingFilter.subject === adhocFilter.subject &&\n          ((!('comparator' in existingFilter) &&\n            !('comparator' in adhocFilter)) ||\n            ('comparator' in existingFilter &&\n              'comparator' in adhocFilter &&\n              isEqual(existingFilter.comparator, adhocFilter.comparator)))),\n    );\n\n  return filters.reduce((acc, filter) => {\n    if (!isDuplicate(filter, acc)) {\n      acc.push(filter);\n    }\n    return acc;\n  }, [] as AdhocFilter[]);\n};\n\nconst mergeFilterBoxToFormData = (\n  exploreFormData: QueryFormData,\n  dashboardFormData: JsonObject,\n) => {\n  const dateColumns = {\n    __time_range: 'time_range',\n    __time_col: 'granularity_sqla',\n    __time_grain: 'time_grain_sqla',\n    __granularity: 'granularity',\n  };\n  const appliedTimeExtras = {};\n\n  const filterBoxData: JsonObject = {};\n  ensureIsArray(dashboardFormData.extra_filters).forEach(filter => {\n    if (dateColumns[filter.col]) {\n      if (filter.val !== NO_TIME_RANGE) {\n        filterBoxData[dateColumns[filter.col]] = filter.val;\n        appliedTimeExtras[filter.col] = filter.val;\n      }\n    } else {\n      const adhocFilter = simpleFilterToAdhoc({\n        ...(filter as QueryObjectFilterClause),\n        isExtra: true,\n      });\n      filterBoxData.adhoc_filters = [\n        ...ensureIsArray(filterBoxData.adhoc_filters),\n        adhocFilter,\n      ];\n    }\n  });\n  filterBoxData.applied_time_extras = appliedTimeExtras;\n  return filterBoxData;\n};\n\nconst mergeNativeFiltersToFormData = (\n  exploreFormData: QueryFormData,\n  dashboardFormData: JsonObject,\n) => {\n  const nativeFiltersData: JsonObject = {};\n  const extraFormData = dashboardFormData.extra_form_data || {};\n  Object.entries(EXTRA_FORM_DATA_OVERRIDE_REGULAR_MAPPINGS).forEach(\n    ([srcKey, targetKey]) => {\n      const val = extraFormData[srcKey];\n      if (isDefined(val)) {\n        nativeFiltersData[targetKey] = val;\n      }\n    },\n  );\n\n  if ('time_grain_sqla' in extraFormData) {\n    nativeFiltersData.time_grain_sqla = extraFormData.time_grain_sqla;\n  }\n  if ('granularity_sqla' in extraFormData) {\n    nativeFiltersData.granularity_sqla = extraFormData.granularity_sqla;\n  }\n\n  const extras = dashboardFormData.extras || {};\n  EXTRA_FORM_DATA_OVERRIDE_EXTRA_KEYS.forEach(key => {\n    const val = extraFormData[key];\n    if (isDefined(val)) {\n      extras[key] = val;\n    }\n  });\n  if (Object.keys(extras).length) {\n    nativeFiltersData.extras = extras;\n  }\n\n  nativeFiltersData.adhoc_filters = ensureIsArray(\n    extraFormData.adhoc_filters,\n  ).map(filter => ({\n    ...filter,\n    isExtra: true,\n  }));\n\n  const appendFilters = ensureIsArray(extraFormData.filters).map(extraFilter =>\n    simpleFilterToAdhoc({ ...extraFilter, isExtra: true }),\n  );\n  Object.keys(exploreFormData).forEach(key => {\n    if (key.match(/adhoc_filter.*/)) {\n      nativeFiltersData[key] = [\n        ...ensureIsArray(nativeFiltersData[key]),\n        ...appendFilters,\n      ];\n    }\n  });\n  return nativeFiltersData;\n};\n\nconst applyTimeRangeFilters = (\n  dashboardFormData: JsonObject,\n  adhocFilters: AdhocFilter[],\n) => {\n  const extraFormData = dashboardFormData.extra_form_data || {};\n  if ('time_range' in extraFormData) {\n    return adhocFilters.map((filter: SimpleAdhocFilter) => {\n      if (filter.operator === 'TEMPORAL_RANGE') {\n        return {\n          ...filter,\n          comparator: extraFormData.time_range,\n          isExtra: true,\n        };\n      }\n      return filter;\n    });\n  }\n  return adhocFilters;\n};\n\nexport const getFormDataWithDashboardContext = (\n  exploreFormData: QueryFormData,\n  dashboardContextFormData: JsonObject,\n) => {\n  const filterBoxData = mergeFilterBoxToFormData(\n    exploreFormData,\n    dashboardContextFormData,\n  );\n  const nativeFiltersData = mergeNativeFiltersToFormData(\n    exploreFormData,\n    dashboardContextFormData,\n  );\n  const adhocFilters = [\n    ...Object.keys(exploreFormData),\n    ...Object.keys(filterBoxData),\n    ...Object.keys(nativeFiltersData),\n  ]\n    .filter(key => key.match(/adhoc_filter.*/))\n    .reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: removeExtraFieldForNewCharts(\n          applyTimeRangeFilters(\n            dashboardContextFormData,\n            removeAdhocFilterDuplicates([\n              ...ensureIsArray(exploreFormData[key]),\n              ...ensureIsArray(filterBoxData[key]),\n              ...ensureIsArray(nativeFiltersData[key]),\n            ]),\n          ),\n          exploreFormData.slice_id === 0,\n        ),\n      }),\n      {},\n    );\n\n  return {\n    ...exploreFormData,\n    ...dashboardContextFormData,\n    ...filterBoxData,\n    ...nativeFiltersData,\n    ...adhocFilters,\n  };\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport {\n  getSharedLabelColor,\n  isDefined,\n  JsonObject,\n  makeApi,\n  SharedLabelColorSource,\n  t,\n} from '@superset-ui/core';\nimport Loading from 'src/components/Loading';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport getFormDataWithExtraFilters from 'src/dashboard/util/charts/getFormDataWithExtraFilters';\nimport { getAppliedFilterValues } from 'src/dashboard/util/activeDashboardFilters';\nimport { getParsedExploreURLParams } from 'src/explore/exploreUtils/getParsedExploreURLParams';\nimport { hydrateExplore } from 'src/explore/actions/hydrateExplore';\nimport ExploreViewContainer from 'src/explore/components/ExploreViewContainer';\nimport { ExploreResponsePayload, SaveActionType } from 'src/explore/types';\nimport { fallbackExploreInitialData } from 'src/explore/fixtures';\nimport { getItem, LocalStorageKeys } from 'src/utils/localStorageHelpers';\nimport { getFormDataWithDashboardContext } from 'src/explore/controlUtils/getFormDataWithDashboardContext';\n\nconst isValidResult = (rv: JsonObject): boolean =>\n  rv?.result?.form_data && isDefined(rv?.result?.dataset?.id);\n\nconst fetchExploreData = async (exploreUrlParams: URLSearchParams) => {\n  try {\n    const rv = await makeApi<{}, ExploreResponsePayload>({\n      method: 'GET',\n      endpoint: 'api/v1/explore/',\n    })(exploreUrlParams);\n    if (isValidResult(rv)) {\n      return rv;\n    }\n    let message = t('Failed to load chart data');\n    const responseError = rv?.result?.message;\n    if (responseError) {\n      message = `${message}:\\n${responseError}`;\n    }\n    throw new Error(message);\n  } catch (err) {\n    // todo: encapsulate the error handler\n    const clientError = await getClientErrorObject(err);\n    throw new Error(\n      clientError.message ||\n        clientError.error ||\n        t('Failed to load chart data.'),\n    );\n  }\n};\n\nconst getDashboardPageContext = (pageId?: string | null) => {\n  if (!pageId) {\n    return null;\n  }\n  return (\n    getItem(LocalStorageKeys.dashboard__explore_context, {})[pageId] || null\n  );\n};\n\nconst getDashboardContextFormData = () => {\n  const dashboardPageId = getUrlParam(URL_PARAMS.dashboardPageId);\n  const dashboardContext = getDashboardPageContext(dashboardPageId);\n  if (dashboardContext) {\n    const sliceId = getUrlParam(URL_PARAMS.sliceId) || 0;\n    const {\n      labelColors,\n      sharedLabelColors,\n      colorScheme,\n      chartConfiguration,\n      nativeFilters,\n      filterBoxFilters,\n      dataMask,\n      dashboardId,\n    } = dashboardContext;\n    const dashboardContextWithFilters = getFormDataWithExtraFilters({\n      chart: { id: sliceId },\n      filters: getAppliedFilterValues(sliceId, filterBoxFilters),\n      nativeFilters,\n      chartConfiguration,\n      colorScheme,\n      dataMask,\n      labelColors,\n      sharedLabelColors,\n      sliceId,\n      allSliceIds: [sliceId],\n      extraControls: {},\n    });\n    Object.assign(dashboardContextWithFilters, { dashboardId });\n    return dashboardContextWithFilters;\n  }\n  return null;\n};\n\nexport default function ExplorePage() {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const isExploreInitialized = useRef(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    const exploreUrlParams = getParsedExploreURLParams(location);\n    const saveAction = getUrlParam(\n      URL_PARAMS.saveAction,\n    ) as SaveActionType | null;\n    const dashboardContextFormData = getDashboardContextFormData();\n    if (!isExploreInitialized.current || !!saveAction) {\n      fetchExploreData(exploreUrlParams)\n        .then(({ result }) => {\n          const formData =\n            !isExploreInitialized.current && dashboardContextFormData\n              ? getFormDataWithDashboardContext(\n                  result.form_data,\n                  dashboardContextFormData,\n                )\n              : result.form_data;\n          dispatch(\n            hydrateExplore({\n              ...result,\n              form_data: formData,\n              saveAction,\n            }),\n          );\n        })\n        .catch(err => {\n          dispatch(hydrateExplore(fallbackExploreInitialData));\n          dispatch(addDangerToast(err.message));\n        })\n        .finally(() => {\n          setIsLoaded(true);\n          isExploreInitialized.current = true;\n        });\n    }\n    getSharedLabelColor().source = SharedLabelColorSource.explore;\n  }, [dispatch, location]);\n\n  if (!isLoaded) {\n    return <Loading />;\n  }\n  return <ExploreViewContainer />;\n}\n"],"names":["rankings","CASE_SENSITIVE_EQUAL","EQUAL","STARTS_WITH","WORD_STARTS_WITH","CONTAINS","ACRONYM","MATCHES","NO_MATCH","matchSorter","defaultBaseSortFn","a","b","String","rankedValue","localeCompare","items","value","options","_options","keys","_options$threshold","threshold","_options$baseSort","baseSort","_options$sorter","sorter","matchedItems","sort","aRank","rank","aKeyIndex","keyIndex","bRank","bKeyIndex","sortRankedValues","reduce","matches","item","index","rankingInfo","allValues","j","J","length","key","attributes","getKeyAttributes","itemValues","getItemValues","i","I","push","itemValue","getAllValuesToRank","_ref2","_ref3","keyThreshold","newRank","getMatchRanking","newRankedValue","minRanking","maxRanking","getHighestRanking","_rankingInfo$keyThres","map","_ref","testString","stringToRank","prepareValueForComparison","toLowerCase","startsWith","includes","string","acronym","split","forEach","wordInString","splitByHyphenWord","substr","matchingInOrderCharCount","charNumber","findMatchingCharacter","matchChar","spreadPercentage","inOrderPercentage","firstIndex","getClosenessRanking","_ref4","keepDiacritics","Object","hasOwnProperty","call","path","values","nestedKey","nestedValues","nestedItem","nestedValue","concat","Array","isArray","result","apply","getNestedValues","defaultKeyAttributes","Infinity","characterMap","chars","join","allAccents","RegExp","firstAccent","removeAccents","replace","match","module","exports","has","remove","EXPLORE_URL_SEARCH_PARAMS","form_data","name","parser","formData","formDataObject","JSON","parse","datasource","datasource_id","datasource_type","slice_id","form_data_key","permalink_key","viz_type","dashboard_id","EXPLORE_URL_PATH_PARAMS","p","table","getParsedExploreURLSearchParams","search","urlSearchParams","URLSearchParams","from","acc","currentParam","paramValue","get","parsedParamValue","TooltipContent","cachedTimestamp","cachedText","t","moment","fromNow","className","onClick","hovered","setHovered","useState","labelType","Tooltip","title","id","Label","type","onMouseOver","onMouseOut","TimerLabel","styled","theme","typography","families","monospace","Timer","endTime","isRunning","startTime","status","clockStr","setClockStr","timer","useRef","useEffect","stopTimer","current","clearInterval","undefined","setInterval","endDttm","now","fDuration","role","CHART_STATUS_MAP","ChartPills","forwardRef","ref","queriesResponse","chartStatus","chartUpdateStartTime","chartUpdateEndTime","refreshCachedQuery","rowLimit","isLoading","firstQueryResponse","css","gridUnit","RowCountLabel","rowcount","Number","limit","is_cached","CachedLabel","cached_dttm","AlertContainer","colors","info","base","light2","dark2","sizes","m","dark1","alert","ButtonContainer","Title","weights","bold","typeChart","warning","danger","ExploreAlert","bodyText","primaryButtonAction","secondaryButtonAction","primaryButtonText","secondaryButtonText","Button","buttonStyle","buttonSize","propTypes","actions","PropTypes","onQuery","can_overwrite","can_download","dashboardId","column_formats","containerId","isStarred","slice","sliceName","table_name","vizType","ownState","standalone","force","timeout","chartIsStale","chart","chartPropShape","errorMessage","triggerRender","GUTTER_SIZE_FACTOR","INITIAL_SIZES","MIN_SIZES","Styles","grayscale","showSplite","ExploreChartPanel","chartAlert","useTheme","gutterMargin","gutterHeight","chartPanelRef","observerRef","resizeObserverRef","width","chartPanelWidth","height","chartPanelHeight","setChartPanelSize","onResize","useCallback","getBoundingClientRect","useResizeDetector","refreshMode","refreshRate","useResizeDetectorByObserver","splitSizes","setSplitSizes","isFeatureEnabled","FeatureFlag","getItem","LocalStorageKeys","setShowSplit","showDatasetModal","setShowDatasetModal","metaDataRegistry","getChartMetadataRegistry","useLegacyApi","vizTypeNeedsDataset","DatasourceType","showAlertBanner","ensureIsArray","updateQueryContext","async","query_context","queryContext","buildV1ChartDataPayload","resultFormat","resultType","setDataMask","SupersetClient","endpoint","headers","body","stringify","query_context_generation","setItem","onDragEnd","setForceQuery","postChartFormData","updateQueryFormData","onCollapseChange","isOpen","renderChart","ChartContainer","Math","floor","annotationData","chartStackTrace","chartId","latestQueryFormData","setControlValue","triggerQuery","panelBody","useMemo","Alert","message","description","tabIndex","getChartRequiredFieldsMissingMessage","row_limit","standaloneChartBody","queryFormData","setQueryFormData","elementStyle","dimension","elementSize","gutterSize","standaloneClass","bodyClasses","document","minSize","direction","expandToMin","DataTablesPane","queryForce","SaveDatasetModal","visible","onHide","buttonTextOnSave","buttonTextOnOverwrite","getDatasourceAsSaveableDataset","openWindow","RunQueryButton","loading","onStop","isNewChart","canStopQuery","disabled","confirm","Modal","iconStyles","actionButtonsContainerStyles","rgba","light5","opacity","mediumLight","ControlPanelsTabs","Tabs","fullWidth","light3","s","sectionsToExpand","sections","section","expanded","label","isTimeSection","columns","some","c","is_dttm","hasTimeColumn","useResetOnChangeRef","initialValue","resetOnChangeValue","prevResetOnChangeValue","props","pluginContext","useContext","PluginContext","prevState","usePrevious","exploreState","prevDatasource","prevChartStatus","showDatasourceAlert","setShowDatasourceAlert","containerRef","controlsTransferred","useSelector","state","explore","defaultTimeFilter","common","conf","DEFAULT_TIME_FILTER","x_axis","adhoc_filters","previousXAxis","isTemporalColumn","find","filter","expressionType","operator","Operators","subject","content","onOk","clause","CLAUSES","comparator","NO_TIME_RANGE","shouldUpdateControls","removeDatasourceWarningFromControl","isDefined","datasourceWarning","controlName","controls","alteredControls","scrollTo","expandedQuerySections","expandedCustomizeSections","querySections","customizeSections","datasourceType","getSectionsToRender","tabOverride","controlSetRows","rows","control","config","renderTrigger","getState","resetTransferredControls","default","handleClearFormClick","handleContinueClick","shouldRecalculateControlState","Boolean","shouldMapStateToProps","sectionHasHadNoErrors","renderControlPanelSection","sectionId","hasErrors","validationErrors","errorColor","error","Collapse","header","Icons","controlSets","renderedControls","controlItem","React","visibility","controlData","mapStateToProps","baseLabel","baseDescription","restProps","isVisible","canDelete","valueToBeDeleted","isTemporalRange","time_range","Control","renderControl","x","ControlRow","hasControlsTransferred","DatasourceAlert","dataTabHasHadNoErrors","dataTabTitle","placement","getChartControlPanelRegistry","Loading","showCustomizeTab","allowOverflow","tab","defaultActiveKey","expandIconPosition","ghost","SK_DASHBOARD_ID","StyledModal","SaveModal","constructor","super","handleDatasetNameChange","e","this","setState","datasetName","target","loadDashboard","json","loadDashboards","page","pageSize","queryParams","rison","filters","col","opr","user","userId","page_size","order_column","count","data","dashboard","dashboard_title","totalCount","renderSaveChartModal","Form","layout","onClose","removeAlert","Radio","canOverwriteSlice","checked","action","onChange","changeAction","required","Input","placeholder","newSliceName","onSliceNameChange","InfoTooltipWithTrigger","tooltip","allowClear","allowNewOptions","ariaLabel","onDashboardChange","renderFooter","saveOrOverwrite","isNewDashboard","bind","owners","is_managed_externally","lastDashboard","sessionStorage","parseInt","canUserEditDashboard","addDangerToast","event","dispatch","setSaveChartModalVisibility","gotodash","removeSaveModalAlert","schema","sql","database","templateParams","saveDataset","datasourceName","sliceDashboards","getSliceDashboards","url_params","validId","createDashboard","saveSliceFailed","dashboards","setFormData","updateSlice","new","createSlice","removeItem","history","url","searchParams","window","location","set","delete","toString","render","show","footer","position","withRouter","connect","saveModal","saveModalAlert","DatasourceItemContainer","DatasourcePanelDragOption","labelRef","showTooltip","isDragging","drag","useDrag","collect","monitor","optionProps","showType","DndItemType","column","metric","enableExploreDnd","primary","DatasourceContainer","light1","LabelWrapper","light4","SectionHeader","StyledInfoboxWrapper","LabelContainer","extendedProps","children","DataSourcePanel","datasourceControl","shouldForceUpdate","_columns","metrics","col1","col2","showSaveDatasetModal","setShowSaveDatasetModal","inputValue","setInputValue","lists","setList","showAllMetrics","setShowAllMetrics","showAllColumns","setShowAllColumns","expression","is_certified","FAST_DEBOUNCE","metricSlice","columnSlice","saveableDatasets","query","saved_query","datasourceIsSaveable","mainBody","evt","closable","metric_name","column_name","memoizedControls","memoize","controlPanel","controlsMap","controlPanelSections","isControlPanelSectionConfig","row","origFormData","currentFormData","StyledLabel","alterForComparison","AlteredSliceTag","diffs","getDiffs","getControlsForVizType","getRowsFromDiffs","hasDiffs","UNSAFE_componentWillReceiveProps","newProps","entries","diff","before","formatValue","after","ofd","sanitizeFormData","cfd","fdKeys","fdKey","isEqualish","val1","val2","v","filterVal","safeStringify","formattedValue","renderModalBody","accessor","Header","TableView","columnsForWrapText","renderTriggerNode","ModalTrigger","triggerNode","modalTitle","modalBody","responsive","canOverwrite","canDownload","saveDisabled","saveButtonStyles","additionalItemsStyles","ExploreChartHeader","metadata","useDispatch","sliceFormData","isPropertiesModalOpen","setIsPropertiesModalOpen","d","response","json_metadata","sharedLabelColors","shared_label_colors","customLabelColors","label_colors","mergedLabelColors","categoricalNamespace","CategoricalColorNamespace","getNamespace","setColor","color_scheme","logging","updateCategoricalNamespace","showModal","sliceUpdated","menu","isDropdownVisible","setIsDropdownVisible","useExploreAdditionalActionsMenu","redirectSQLLab","metadataBar","MetadataType","tn","changed_on_humanized","modifiedBy","changed_by","createdBy","created_by","createdOn","created_on_humanized","MetadataBar","tooltipPlacement","oldSliceName","slice_name","PageHeaderWithActions","editableTitleProps","canEdit","onSave","updateChartTitle","showTitlePanelItems","certificatiedBadgeProps","certifiedBy","certified_by","details","certification_details","showFaveStar","faveStarProps","itemId","fetchFaveStar","saveFaveStar","titlePanelAdditionalItems","chartTitle","rightPanelAdditionalItems","iconSize","additionalActionsMenu","menuDropdownProps","onVisibleChange","PropertiesModal","isDatasourceMetaLoading","forcedHeight","impressionId","saveAction","isSaveModalVisible","ExploreContainer","ExplorePanelContainer","updateHistory","datasourceId","isReplace","tabId","payload","params","additionalParam","fromEntries","URL_PARAMS","urlParams","RESERVED_CHART_URL_PARAMS","stateModifier","postFormData","getUrlParam","putFormData","pathname","mountExploreUrl","ExploreViewContainer","dynamicPlugin","usePluginContext","dynamicPlugins","isDynamicPluginLoading","mounting","wasDynamicPluginLoading","previousControls","lastQueriedControls","setLastQueriedControls","isCollapsed","setIsCollapsed","setShouldForceUpdate","useTabId","defaultSidebarsWidth","controls_width","datasource_width","addHistory","handlePopstate","setExploreControls","handleKeydown","ctrlKey","metaKey","isEnter","keyCode","isS","saveSlice","add_to_dash","goto_dash","then","slice_url","toggleCollapse","useComponentDidMount","logEvent","LOG_ACTIONS_MOUNT_EXPLORER","useChangeEffect","previous","previousHandlePopstate","removeEventListener","addEventListener","previousHandleKeyDown","dynamicPluginControlsReady","reRenderChart","controlsChanged","newQueryFormData","getFormDataFromControls","renderTriggered","Date","getTime","fetchDatasourceMetadata","displayControlsChanged","areObjectsEqual","ignoreFields","dontRefreshOnChange","setSaveAction","LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS","controlsWithErrors","errorMessages","errors","Set","flat","labels","style","textAlign","renderChartContainer","getSidebarWidths","setSidebarWidths","newDimension","reports","styles","onResizeStop","defaultSize","minWidth","maxWidth","enable","right","iconColor","queryController","abort","can_add","cx","charts","dataMask","extra_form_data","mergeExtraFormData","isNaN","SUPERSET_WEBSERVER_TIMEOUT","exploreActions","datasourcesActions","saveModalActions","chartActions","logActions","bindActionCreators","withToasts","fallbackExploreInitialData","dataset","currency_formats","verbose_map","main_dttm_col","datasource_name","removeAdhocFilterDuplicates","adhocFilter","existingFilter","isFreeFormAdhocFilter","sqlExpression","isSimpleAdhocFilter","isEqual","applyTimeRangeFilters","dashboardFormData","adhocFilters","extraFormData","isExtra","ExplorePage","isLoaded","setIsLoaded","isExploreInitialized","useLocation","exploreUrlParams","re","pathGroups","entry","getParsedExploreURLParams","dashboardContextFormData","dashboardContext","pageId","sliceId","labelColors","colorScheme","chartConfiguration","nativeFilters","filterBoxFilters","dashboardContextWithFilters","getFormDataWithExtraFilters","getAppliedFilterValues","allSliceIds","extraControls","assign","getDashboardContextFormData","rv","makeApi","method","isValidResult","responseError","Error","err","clientError","getClientErrorObject","fetchExploreData","exploreFormData","filterBoxData","dateColumns","__time_range","__time_col","__time_grain","__granularity","appliedTimeExtras","extra_filters","val","simpleFilterToAdhoc","applied_time_extras","mergeFilterBoxToFormData","nativeFiltersData","EXTRA_FORM_DATA_OVERRIDE_REGULAR_MAPPINGS","srcKey","targetKey","time_grain_sqla","granularity_sqla","extras","EXTRA_FORM_DATA_OVERRIDE_EXTRA_KEYS","appendFilters","extraFilter","mergeNativeFiltersToFormData","getFormDataWithDashboardContext","hydrateExplore","catch","finally","getSharedLabelColor","source","SharedLabelColorSource"],"sourceRoot":""}