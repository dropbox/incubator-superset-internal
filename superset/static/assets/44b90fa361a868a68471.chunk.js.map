{"version":3,"file":"44b90fa361a868a68471.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/views/CRUD/annotationlayers/AnnotationLayerModal.tsx","webpack://superset/./src/views/CRUD/annotationlayers/AnnotationLayersList.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | React.ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\n\nimport Icons from 'src/components/Icons';\nimport { StyledIcon } from 'src/views/CRUD/utils';\nimport Modal from 'src/components/Modal';\nimport withToasts from 'src/components/MessageToasts/withToasts';\n\nimport { AnnotationLayerObject } from './types';\n\ninterface AnnotationLayerModalProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  layer?: AnnotationLayerObject | null;\n  onLayerAdd?: (layer?: AnnotationLayerObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst StyledAnnotationLayerTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 2}px auto\n    ${({ theme }) => theme.gridUnit * 4}px auto;\n`;\n\nconst LayerContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 10}px;\n\n  .control-label {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit / 2}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n\n  textarea,\n  input[type='text'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n    width: 50%;\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  textarea {\n    width: 100%;\n    height: 160px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n`;\n\nconst AnnotationLayerModal: FunctionComponent<AnnotationLayerModalProps> = ({\n  addDangerToast,\n  addSuccessToast,\n  onLayerAdd,\n  onHide,\n  show,\n  layer = null,\n}) => {\n  const [disableSave, setDisableSave] = useState<boolean>(true);\n  const [currentLayer, setCurrentLayer] =\n    useState<AnnotationLayerObject | null>();\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const isEditMode = layer !== null;\n\n  // annotation layer fetch logic\n  const {\n    state: { loading, resource },\n    fetchResource,\n    createResource,\n    updateResource,\n  } = useSingleViewResource<AnnotationLayerObject>(\n    'annotation_layer',\n    t('annotation_layer'),\n    addDangerToast,\n  );\n\n  const resetLayer = () => {\n    // Reset layer\n    setCurrentLayer({\n      name: '',\n      descr: '',\n    });\n  };\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n\n    // Reset layer\n    resetLayer();\n\n    onHide();\n  };\n\n  const onSave = () => {\n    if (isEditMode) {\n      // Edit\n      if (currentLayer && currentLayer.id) {\n        const update_id = currentLayer.id;\n        delete currentLayer.id;\n        delete currentLayer.created_by;\n        updateResource(update_id, currentLayer).then(response => {\n          if (!response) {\n            return;\n          }\n\n          hide();\n          addSuccessToast(t('Annotation template updated'));\n        });\n      }\n    } else if (currentLayer) {\n      // Create\n      createResource(currentLayer).then(response => {\n        if (!response) {\n          return;\n        }\n\n        if (onLayerAdd) {\n          onLayerAdd(response);\n        }\n\n        hide();\n        addSuccessToast(t('Annotation template created'));\n      });\n    }\n  };\n\n  const onTextChange = (\n    event:\n      | React.ChangeEvent<HTMLTextAreaElement>\n      | React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const { target } = event;\n    const data = {\n      ...currentLayer,\n      name: currentLayer ? currentLayer.name : '',\n      descr: currentLayer ? currentLayer.descr : '',\n    };\n\n    data[target.name] = target.value;\n    setCurrentLayer(data);\n  };\n\n  const validate = () => {\n    if (currentLayer && currentLayer.name?.length) {\n      setDisableSave(false);\n    } else {\n      setDisableSave(true);\n    }\n  };\n\n  // Initialize\n  useEffect(() => {\n    if (\n      isEditMode &&\n      (!currentLayer ||\n        !currentLayer.id ||\n        (layer && layer.id !== currentLayer.id) ||\n        (isHidden && show))\n    ) {\n      if (show && layer && layer.id !== null && !loading) {\n        const id = layer.id || 0;\n\n        fetchResource(id);\n      }\n    } else if (\n      !isEditMode &&\n      (!currentLayer || currentLayer.id || (isHidden && show))\n    ) {\n      // Reset layer\n      resetLayer();\n    }\n  }, [layer, show]);\n\n  useEffect(() => {\n    if (resource) {\n      setCurrentLayer(resource);\n    }\n  }, [resource]);\n\n  // Validation\n  useEffect(() => {\n    validate();\n  }, [\n    currentLayer ? currentLayer.name : '',\n    currentLayer ? currentLayer.descr : '',\n  ]);\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={hide}\n      primaryButtonName={isEditMode ? t('Save') : t('Add')}\n      show={show}\n      width=\"55%\"\n      title={\n        <h4 data-test=\"annotation-layer-modal-title\">\n          {isEditMode ? (\n            <Icons.EditAlt css={StyledIcon} />\n          ) : (\n            <Icons.PlusLarge css={StyledIcon} />\n          )}\n          {isEditMode\n            ? t('Edit annotation layer properties')\n            : t('Add annotation layer')}\n        </h4>\n      }\n    >\n      <StyledAnnotationLayerTitle>\n        <h4>{t('Basic information')}</h4>\n      </StyledAnnotationLayerTitle>\n      <LayerContainer>\n        <div className=\"control-label\">\n          {t('Annotation layer name')}\n          <span className=\"required\">*</span>\n        </div>\n        <input\n          name=\"name\"\n          onChange={onTextChange}\n          type=\"text\"\n          value={currentLayer?.name}\n        />\n      </LayerContainer>\n      <LayerContainer>\n        <div className=\"control-label\">{t('description')}</div>\n        <textarea\n          name=\"descr\"\n          value={currentLayer?.descr}\n          placeholder={t('Description (this can be seen in the list)')}\n          onChange={onTextChange}\n        />\n      </LayerContainer>\n    </Modal>\n  );\n};\n\nexport default withToasts(AnnotationLayerModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport rison from 'rison';\nimport { t, SupersetClient } from '@superset-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createFetchRelated, createErrorHandler } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu, { SubMenuProps } from 'src/views/components/SubMenu';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport AnnotationLayerModal from './AnnotationLayerModal';\nimport { AnnotationLayerObject } from './types';\n\nconst PAGE_SIZE = 25;\nconst MOMENT_FORMAT = 'MMM DD, YYYY';\n\ninterface AnnotationLayersListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nfunction AnnotationLayersList({\n  addDangerToast,\n  addSuccessToast,\n  user,\n}: AnnotationLayersListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: layersCount,\n      resourceCollection: layers,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<AnnotationLayerObject>(\n    'annotation_layer',\n    t('Annotation layers'),\n    addDangerToast,\n  );\n\n  const [annotationLayerModalOpen, setAnnotationLayerModalOpen] =\n    useState<boolean>(false);\n  const [currentAnnotationLayer, setCurrentAnnotationLayer] =\n    useState<AnnotationLayerObject | null>(null);\n\n  const [layerCurrentlyDeleting, setLayerCurrentlyDeleting] =\n    useState<AnnotationLayerObject | null>(null);\n\n  const handleLayerDelete = ({ id, name }: AnnotationLayerObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setLayerCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', name, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkLayerDelete = (layersToDelete: AnnotationLayerObject[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/?q=${rison.encode(\n        layersToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected layers: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n\n  function handleAnnotationLayerEdit(layer: AnnotationLayerObject | null) {\n    setCurrentAnnotationLayer(layer);\n    setAnnotationLayerModalOpen(true);\n  }\n\n  const initialSort = [{ id: 'name', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'name',\n        Header: t('Name'),\n        Cell: ({\n          row: {\n            original: { id, name },\n          },\n        }: any) => {\n          let hasHistory = true;\n\n          try {\n            useHistory();\n          } catch (err) {\n            // If error is thrown, we know not to use <Link> in render\n            hasHistory = false;\n          }\n\n          if (hasHistory) {\n            return (\n              <Link to={`/annotationmodelview/${id}/annotation`}>{name}</Link>\n            );\n          }\n\n          return <a href={`/annotationmodelview/${id}/annotation`}>{name}</a>;\n        },\n      },\n      {\n        accessor: 'descr',\n        Header: t('Description'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { changed_on: changedOn },\n          },\n        }: any) => {\n          const date = new Date(changedOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).format(MOMENT_FORMAT);\n        },\n        Header: t('Last modified'),\n        accessor: 'changed_on',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_on: createdOn },\n          },\n        }: any) => {\n          const date = new Date(createdOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).format(MOMENT_FORMAT);\n        },\n        Header: t('Created on'),\n        accessor: 'created_on',\n        size: 'xl',\n      },\n      {\n        accessor: 'created_by',\n        disableSortBy: true,\n        Header: t('Created by'),\n        Cell: ({\n          row: {\n            original: { created_by: createdBy },\n          },\n        }: any) =>\n          createdBy ? `${createdBy.first_name} ${createdBy.last_name}` : '',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () => handleAnnotationLayerEdit(original);\n          const handleDelete = () => setLayerCurrentlyDeleting(original);\n\n          const actions = [\n            canEdit\n              ? {\n                  label: 'edit-action',\n                  tooltip: t('Edit template'),\n                  placement: 'bottom',\n                  icon: 'Edit',\n                  onClick: handleEdit,\n                }\n              : null,\n            canDelete\n              ? {\n                  label: 'delete-action',\n                  tooltip: t('Delete template'),\n                  placement: 'bottom',\n                  icon: 'Trash',\n                  onClick: handleDelete,\n                }\n              : null,\n          ].filter(item => !!item);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        hidden: !canEdit && !canDelete,\n        size: 'xl',\n      },\n    ],\n    [canDelete, canCreate],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('Annotation layer')}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAnnotationLayerEdit(null);\n      },\n    });\n  }\n\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Created by'),\n        id: 'created_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'annotation_layer',\n          'created_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Search'),\n        id: 'name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ],\n    [],\n  );\n\n  const emptyState = {\n    title: t('No annotation layers yet'),\n    image: 'filter-results.svg',\n    buttonAction: () => handleAnnotationLayerEdit(null),\n    buttonText: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Annotation layer')}\n      </>\n    ),\n  };\n\n  const onLayerAdd = (id?: number) => {\n    window.location.href = `/annotationmodelview/${id}/annotation`;\n  };\n\n  const onModalHide = () => {\n    refreshData();\n    setAnnotationLayerModalOpen(false);\n  };\n\n  return (\n    <>\n      <SubMenu name={t('Annotation layers')} buttons={subMenuButtons} />\n      <AnnotationLayerModal\n        addDangerToast={addDangerToast}\n        layer={currentAnnotationLayer}\n        onLayerAdd={onLayerAdd}\n        onHide={onModalHide}\n        show={annotationLayerModalOpen}\n      />\n      {layerCurrentlyDeleting && (\n        <DeleteModal\n          description={t('This action will permanently delete the layer.')}\n          onConfirm={() => {\n            if (layerCurrentlyDeleting) {\n              handleLayerDelete(layerCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setLayerCurrentlyDeleting(null)}\n          open\n          title={t('Delete Layer?')}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected layers?')}\n        onConfirm={handleBulkLayerDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = canDelete\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n\n          return (\n            <ListView<AnnotationLayerObject>\n              className=\"annotation-layers-list-view\"\n              columns={columns}\n              count={layersCount}\n              data={layers}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              emptyState={emptyState}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(AnnotationLayersList);\n"],"names":["StyledActions","theme","colors","primary","base","ActionWrapper","grayscale","ActionsBar","actions","className","map","action","index","ActionIcon","icon","tooltip","id","label","title","placement","key","role","tabIndex","onClick","StyledAnnotationLayerTitle","style","gridUnit","LayerContainer","error","light2","light1","withToasts","addDangerToast","addSuccessToast","onLayerAdd","onHide","show","layer","disableSave","setDisableSave","useState","currentLayer","setCurrentLayer","isHidden","setIsHidden","isEditMode","state","loading","resource","fetchResource","createResource","updateResource","t","resetLayer","name","descr","hide","onTextChange","event","target","data","value","useEffect","length","Modal","disablePrimaryButton","onHandledPrimaryAction","update_id","created_by","then","response","primaryButtonName","width","Icons","css","onChange","type","placeholder","MOMENT_FORMAT","user","resourceCount","layersCount","resourceCollection","layers","bulkSelectEnabled","hasPerm","fetchData","refreshData","toggleBulkSelect","annotationLayerModalOpen","setAnnotationLayerModalOpen","currentAnnotationLayer","setCurrentAnnotationLayer","layerCurrentlyDeleting","setLayerCurrentlyDeleting","canCreate","canEdit","canDelete","handleAnnotationLayerEdit","initialSort","desc","columns","useMemo","accessor","Header","Cell","row","original","hasHistory","err","to","href","changed_on","changedOn","date","Date","utc","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","format","size","created_on","createdOn","disableSortBy","createdBy","first_name","last_name","filter","item","hidden","subMenuButtons","push","buttonStyle","filters","input","operator","unfilteredLabel","fetchSelects","errMsg","paginate","emptyState","image","buttonAction","buttonText","SubMenu","buttons","window","location","DeleteModal","description","onConfirm","SupersetClient","endpoint","handleLayerDelete","open","ConfirmStatusChange","layersToDelete","json","message","confirmDelete","bulkActions","onSelect","ListView","count","pageSize","disableBulkSelect"],"sourceRoot":""}