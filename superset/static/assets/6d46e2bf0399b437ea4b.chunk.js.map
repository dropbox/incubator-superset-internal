{"version":3,"file":"6d46e2bf0399b437ea4b.chunk.js","mappings":"qNAyBA,MAAMA,GAAmB,QAAO,KAAkB;;EAI5CC,EAAmB,QAEvB;;;;;;cAMY,EAAGC,MAAAA,EAAOC,eAAAA,MAAV,aACRA,GAAkB,sBAAaD,EAAME,OAAOD,SAA1B,EAAa,EAA8BE;;;;;UAKzD,EAAGH,MAAAA,EAAOC,eAAAA,MAAV,aACAA,EAAc,SACVD,EAAME,OAAOD,SADH,EACV,EAA8BE,KAC9BH,EAAME,OAAOE,QAAQD;;;UAGzB,EAAGF,eAAAA,KACHA,EACI,yBACA;;;EAKA,SAAUI,EAAiBC,GAA4B,MACnE,MAAM,YACJC,EADI,iBAEJC,EAFI,mBAGJC,EAHI,gBAIJC,EAJI,MAKJC,EALI,OAMJC,EANI,YAOJC,EAPI,SAQJC,GACER,EAEES,GAAwB,IAAAC,cAC3BC,IACC,MAAMC,EAAQD,GAAaA,IAAc,KACzCV,EAAY,CACVY,cAAeD,EACX,CACEE,WAAYH,GAEd,GACJJ,YAAa,CACXQ,MAAOH,EAAQD,OAAYK,OAIjC,CAACf,IAOH,OAJA,IAAAgB,YAAU,KACRR,EAAsBF,EAAYQ,SACjC,CAACR,EAAYQ,QAET,SAAAf,EAAMkB,WAAN,EAAgBC,QAErB,QAAC3B,EAAD,CAAkBa,MAAOA,EAAOC,OAAQA,IACtC,QAACb,EAAD,CACE2B,UAAW,EACXC,IAAKb,EACLb,eAAgBY,EAAYZ,eAC5B2B,QAASpB,EACTqB,OAAQpB,EACRqB,aAActB,EACduB,aAActB,IAEd,QAAC,IAAD,CACEY,MAAOR,EAAYQ,OAAS,KAC5BW,KAAK,aACLC,SAAUlB,EACVmB,KAAMrB,EAAYZ,eAClBkC,cAAe,IAAMzB,GAAgB,GACrC0B,eAAgB,IAAM1B,GAAgB,OAI1C,O,6EC1FC,MAAM2B,EAAoB,QAAmC;gBACpD,EAAGzB,OAAAA,KAAaA;WACrB,EAAGD,MAAAA,KAAYA;EAGb2B,GAAiB,QAAO,IAAS;;;;EAMjCC,EAAgB,QAE3B;WACS,EAAGvC,MAAAA,EAAOwC,OAAAA,EAAS,YAAnB,sBAAiCxC,EAAME,OAAOsC,SAA9C,EAAiC,EAAsBrC","sources":["webpack://superset/./src/filters/components/Time/TimeFilterPlugin.tsx","webpack://superset/./src/filters/components/common.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled } from '@superset-ui/core';\nimport React, { useCallback, useEffect } from 'react';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport { NO_TIME_RANGE } from 'src/explore/constants';\nimport { PluginFilterTimeProps } from './types';\nimport { FilterPluginStyle } from '../common';\n\nconst TimeFilterStyles = styled(FilterPluginStyle)`\n  overflow-x: auto;\n`;\n\nconst ControlContainer = styled.div<{\n  validateStatus?: 'error' | 'warning' | 'info';\n}>`\n  padding: 2px;\n  & > span,\n  & > span:hover {\n    border: 2px solid transparent;\n    display: inline-block;\n    border: ${({ theme, validateStatus }) =>\n      validateStatus && `2px solid ${theme.colors[validateStatus]?.base}`};\n  }\n  &:focus {\n    & > span {\n      border: 2px solid\n        ${({ theme, validateStatus }) =>\n          validateStatus\n            ? theme.colors[validateStatus]?.base\n            : theme.colors.primary.base};\n      outline: 0;\n      box-shadow: 0 0 0 2px\n        ${({ validateStatus }) =>\n          validateStatus\n            ? 'rgba(224, 67, 85, 12%)'\n            : 'rgba(32, 167, 201, 0.2)'};\n    }\n  }\n`;\n\nexport default function TimeFilterPlugin(props: PluginFilterTimeProps) {\n  const {\n    setDataMask,\n    setFocusedFilter,\n    unsetFocusedFilter,\n    setFilterActive,\n    width,\n    height,\n    filterState,\n    inputRef,\n  } = props;\n\n  const handleTimeRangeChange = useCallback(\n    (timeRange?: string): void => {\n      const isSet = timeRange && timeRange !== NO_TIME_RANGE;\n      setDataMask({\n        extraFormData: isSet\n          ? {\n              time_range: timeRange,\n            }\n          : {},\n        filterState: {\n          value: isSet ? timeRange : undefined,\n        },\n      });\n    },\n    [setDataMask],\n  );\n\n  useEffect(() => {\n    handleTimeRangeChange(filterState.value);\n  }, [filterState.value]);\n\n  return props.formData?.inView ? (\n    // @ts-ignore\n    <TimeFilterStyles width={width} height={height}>\n      <ControlContainer\n        tabIndex={-1}\n        ref={inputRef}\n        validateStatus={filterState.validateStatus}\n        onFocus={setFocusedFilter}\n        onBlur={unsetFocusedFilter}\n        onMouseEnter={setFocusedFilter}\n        onMouseLeave={unsetFocusedFilter}\n      >\n        <DateFilterControl\n          value={filterState.value || NO_TIME_RANGE}\n          name=\"time_range\"\n          onChange={handleTimeRangeChange}\n          type={filterState.validateStatus}\n          onOpenPopover={() => setFilterActive(true)}\n          onClosePopover={() => setFilterActive(false)}\n        />\n      </ControlContainer>\n    </TimeFilterStyles>\n  ) : null;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled } from '@superset-ui/core';\nimport { PluginFilterStylesProps } from './types';\nimport FormItem from '../../components/Form/FormItem';\n\nexport const FilterPluginStyle = styled.div<PluginFilterStylesProps>`\n  min-height: ${({ height }) => height}px;\n  width: ${({ width }) => width}px;\n`;\n\nexport const StyledFormItem = styled(FormItem)`\n  &.ant-row.ant-form-item {\n    margin: 0;\n  }\n`;\n\nexport const StatusMessage = styled.div<{\n  status?: 'error' | 'warning' | 'info';\n}>`\n  color: ${({ theme, status = 'error' }) => theme.colors[status]?.base};\n`;\n"],"names":["TimeFilterStyles","ControlContainer","theme","validateStatus","colors","base","primary","TimeFilterPlugin","props","setDataMask","setFocusedFilter","unsetFocusedFilter","setFilterActive","width","height","filterState","inputRef","handleTimeRangeChange","useCallback","timeRange","isSet","extraFormData","time_range","value","undefined","useEffect","formData","inView","tabIndex","ref","onFocus","onBlur","onMouseEnter","onMouseLeave","name","onChange","type","onOpenPopover","onClosePopover","FilterPluginStyle","StyledFormItem","StatusMessage","status"],"sourceRoot":""}