"use strict";(globalThis.webpackChunksuperset=globalThis.webpackChunksuperset||[]).push([[6277,7275,8146],{28569:(e,t,i)=>{i.d(t,{Z:()=>c});var o=i(95772),s=i(93844),a=i(51331),r=i(281),n=i(53982);const l=[0,0,0,255],d={radiusUnits:"meters",radiusScale:{type:"number",min:0,value:1},radiusMinPixels:{type:"number",min:0,value:0},radiusMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},lineWidthUnits:"meters",lineWidthScale:{type:"number",min:0,value:1},lineWidthMinPixels:{type:"number",min:0,value:0},lineWidthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},stroked:!1,filled:!0,billboard:!1,getPosition:{type:"accessor",value:e=>e.position},getRadius:{type:"accessor",value:1},getFillColor:{type:"accessor",value:l},getLineColor:{type:"accessor",value:l},getLineWidth:{type:"accessor",value:1},strokeWidth:{deprecatedFor:"getLineWidth"},outline:{deprecatedFor:"stroked"},getColor:{deprecatedFor:["getFillColor","getLineColor"]}};class c extends o.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME scatterplot-layer-vertex-shader\n\nattribute vec3 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute float instanceRadius;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float radiusScale;\nuniform float radiusMinPixels;\nuniform float radiusMaxPixels;\nuniform float lineWidthScale;\nuniform float lineWidthMinPixels;\nuniform float lineWidthMaxPixels;\nuniform float stroked;\nuniform bool filled;\nuniform bool billboard;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  outerRadiusPixels = clamp(\n    project_size_to_pixel(radiusScale * instanceRadius),\n    radiusMinPixels, radiusMaxPixels\n  );\n  float lineWidthPixels = clamp(\n    project_size_to_pixel(lineWidthScale * instanceLineWidths),\n    lineWidthMinPixels, lineWidthMaxPixels\n  );\n  outerRadiusPixels += stroked * lineWidthPixels / 2.0;\n  unitPosition = positions.xy;\n  geometry.uv = unitPosition;\n  geometry.pickingColor = instancePickingColors;\n\n  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\n  \n  if (billboard) {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    vec3 offset = positions * outerRadiusPixels;\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n  } else {\n    vec3 offset = positions * project_pixel_size(outerRadiusPixels);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);\n  }\n\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n",fs:"#define SHADER_NAME scatterplot-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool filled;\nuniform float stroked;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\nvoid main(void) {\n  geometry.uv = unitPosition;\n\n  float distToCenter = length(unitPosition) * outerRadiusPixels;\n  float inCircle = smoothedge(distToCenter, outerRadiusPixels);\n\n  if (inCircle == 0.0) {\n    discard;\n  }\n\n  if (stroked > 0.5) {\n    float isLine = smoothedge(innerUnitRadius * outerRadiusPixels, distToCenter);\n    if (filled) {\n      gl_FragColor = mix(vFillColor, vLineColor, isLine);\n    } else {\n      if (isLine == 0.0) {\n        discard;\n      }\n      gl_FragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);\n    }\n  } else if (filled) {\n    gl_FragColor = vFillColor;\n  } else {\n    discard;\n  }\n\n  gl_FragColor.a *= inCircle;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[s.Z,a.Z]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceRadius:{size:1,transition:!0,accessor:"getRadius",defaultValue:1},instanceFillColors:{size:this.props.colorFormat.length,transition:!0,normalized:!0,type:5121,accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:this.props.colorFormat.length,transition:!0,normalized:!0,type:5121,accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}updateState({props:e,oldProps:t,changeFlags:i}){if(super.updateState({props:e,oldProps:t,changeFlags:i}),i.extensionsChanged){var o;const{gl:e}=this.context;null===(o=this.state.model)||void 0===o||o.delete(),this.state.model=this._getModel(e),this.getAttributeManager().invalidateAll()}}draw({uniforms:e}){const{viewport:t}=this.context,{radiusUnits:i,radiusScale:o,radiusMinPixels:s,radiusMaxPixels:a,stroked:r,filled:n,billboard:l,lineWidthUnits:d,lineWidthScale:c,lineWidthMinPixels:u,lineWidthMaxPixels:p}=this.props,h="pixels"===i?t.metersPerPixel:1,g="pixels"===d?t.metersPerPixel:1;this.state.model.setUniforms(e).setUniforms({stroked:r?1:0,filled:n,billboard:l,radiusScale:o*h,radiusMinPixels:s,radiusMaxPixels:a,lineWidthScale:c*g,lineWidthMinPixels:u,lineWidthMaxPixels:p}).draw()}_getModel(e){return new r.Z(e,{...this.getShaders(),id:this.props.id,geometry:new n.Z({drawMode:6,vertexCount:4,attributes:{positions:{size:3,value:new Float32Array([-1,-1,0,1,-1,0,1,1,0,-1,1,0])}}}),isInstanced:!0})}}c.layerName="ScatterplotLayer",c.defaultProps=d},35215:(e,t,i)=>{i.d(t,{Z:()=>c});var o=i(67294),s=i(45697),a=i.n(s),r=i(67190),n=i(11965);const l=" - ",d={categories:a().object,forceCategorical:a().bool,format:a().string,position:a().oneOf([null,"tl","tr","bl","br"]),showSingleCategory:a().func,toggleCategory:a().func};class c extends o.PureComponent{format(e){if(!this.props.format||this.props.forceCategorical)return e;const t=parseFloat(e);return(0,r.uf)(this.props.format,t)}formatCategoryLabel(e){if(!this.props.format)return e;if(e.includes(l)){const t=e.split(l);return this.format(t[0])+l+this.format(t[1])}return this.format(e)}render(){if(0===Object.keys(this.props.categories).length||null===this.props.position)return null;const e=Object.entries(this.props.categories).map((([e,t])=>{const i={color:`rgba(${t.color.join(", ")})`},o=t.enabled?"◼":"◻";return(0,n.tZ)("li",{key:e},(0,n.tZ)("a",{href:"#",onClick:()=>this.props.toggleCategory(e),onDoubleClick:()=>this.props.showSingleCategory(e)},(0,n.tZ)("span",{style:i},o)," ",this.formatCategoryLabel(e)))})),t={position:"absolute",["t"===this.props.position.charAt(0)?"top":"bottom"]:"0px",["r"===this.props.position.charAt(1)?"right":"left"]:"10px"};return(0,n.tZ)("div",{className:"legend",style:t},(0,n.tZ)("ul",{className:"categories"},e))}}c.propTypes=d,c.defaultProps={categories:{},forceCategorical:!1,format:null,position:"tr",showSingleCategory:()=>{},toggleCategory:()=>{}}},54448:(e,t,i)=>{i.r(t),i.d(t,{default:()=>h,getLayer:()=>p});var o=i(28569),s=(i(67294),i(56652)),a=i(61988),r=i(52154),n=i(26331),l=i(1740);const d=1609.34;var c=i(11965);function u(e,t){return i=>{var o;const r=(null==t?void 0:t[e.point_radius_fixed.value])||(0,s.Z)(null==(o=e.point_radius_fixed)?void 0:o.value);return(0,c.tZ)("div",{className:"deckgl-tooltip"},(0,c.tZ)(l.Z,{label:`${(0,a.t)("Longitude and Latitude")}: `,value:`${i.object.position[0]}, ${i.object.position[1]}`}),i.object.cat_color&&(0,c.tZ)(l.Z,{label:`${(0,a.t)("Category")}: `,value:`${i.object.cat_color}`}),i.object.metric&&(0,c.tZ)(l.Z,{label:`${r}: `,value:`${i.object.metric}`}))}}function p(e,t,i,s,a){const n=e,l=t.data.features.map((e=>{let t=(i=n.point_unit,o=e.radius,("square_m"===i?Math.sqrt(o/Math.PI):"radius_m"===i?o:"radius_km"===i?1e3*o:"radius_miles"===i?o*d:"square_km"===i?1e3*Math.sqrt(o/Math.PI):"square_miles"===i?Math.sqrt(o/Math.PI)*d:null)||10);var i,o;if(n.multiplier&&(t*=n.multiplier),e.color)return{...e,radius:t};const s=n.color_picker||{r:0,g:0,b:0,a:1},a=[s.r,s.g,s.b,255*s.a];return{...e,radius:t,color:a}}));return new o.Z({id:`scatter-layer-${n.slice_id}`,data:l,fp64:!0,getFillColor:e=>e.color,getRadius:e=>e.radius,radiusMinPixels:n.min_radius||null,radiusMaxPixels:n.max_radius||null,stroked:!1,...(0,r.N)(n,s,u(n,null==a?void 0:a.verboseMap))})}const h=(0,n.B)(p,(function(e){return e.map((e=>e.position))}))},26331:(e,t,i)=>{i.d(t,{B:()=>C,G:()=>_});var o=i(18446),s=i.n(o),a=i(67294),r=i(79362),n=i(45697),l=i.n(n),d=i(28062),c=i(44272),u=i(35215),p=i(64106),h=i(66911),g=i(21207),m=i(40461),f=i(11965);const{getScale:y}=d,v={datasource:l().object.isRequired,formData:l().object.isRequired,getLayer:l().func.isRequired,getPoints:l().func.isRequired,height:l().number.isRequired,mapboxApiKey:l().string.isRequired,onAddFilter:l().func,payload:l().object.isRequired,setControlValue:l().func.isRequired,viewport:l().object.isRequired,width:l().number.isRequired};class b extends a.PureComponent{constructor(e){super(e),this.containerRef=a.createRef(),this.setTooltip=e=>{const{current:t}=this.containerRef;t&&t.setTooltip(e)},this.state=this.getStateFromProps(e),this.getLayers=this.getLayers.bind(this),this.onValuesChange=this.onValuesChange.bind(this),this.toggleCategory=this.toggleCategory.bind(this),this.showSingleCategory=this.showSingleCategory.bind(this)}UNSAFE_componentWillReceiveProps(e){e.payload.form_data!==this.state.formData&&this.setState({...this.getStateFromProps(e)})}onValuesChange(e){this.setState({values:Array.isArray(e)?e:[e,e+this.state.getStep(e)]})}getStateFromProps(e,t){const i=e.payload.data.features||[],o=i.map((e=>e.__timestamp)),s=function(e,t){const i=e.color_picker||{r:0,g:0,b:0,a:1},o=[i.r,i.g,i.b,255*i.a],s=y(e.color_scheme),a={};return t.forEach((t=>{if(null!=t.cat_color&&!a.hasOwnProperty(t.cat_color)){let r;r=e.dimension?(0,p.hexToRGB)(s(t.cat_color,e.sliceId),255*i.a):o,a[t.cat_color]={color:r,enabled:!0}}})),a}(e.formData,i);if(t&&e.payload.form_data===t.formData)return{...t,categories:s};const a=e.payload.form_data.time_grain_sqla||e.payload.form_data.granularity||"P1D",{start:r,end:n,getStep:l,values:d,disabled:c}=(0,h.g)(o,a),{width:u,height:g,formData:f}=e;let{viewport:v}=e;return f.autozoom&&(v=(0,m.Z)(v,{width:u,height:g,points:e.getPoints(i)})),v.zoom<0&&(v.zoom=0),{start:r,end:n,getStep:l,values:d,disabled:c,viewport:v,selected:[],lastClick:0,formData:e.payload.form_data,categories:s}}getLayers(e){const{getLayer:t,payload:i,formData:o,onAddFilter:s}=this.props;let a=i.data.features?[...i.data.features]:[];a=this.addColor(a,o),o.js_data_mutator&&(a=(0,g.Z)(o.js_data_mutator)(a)),a=e[0]===e[1]||e[1]===this.end?a.filter((t=>t.__timestamp>=e[0]&&t.__timestamp<=e[1])):a.filter((t=>t.__timestamp>=e[0]&&t.__timestamp<e[1]));const r=this.state.categories;return o.dimension&&(a=a.filter((e=>r[e.cat_color]&&r[e.cat_color].enabled))),[t(o,{...i,data:{...i.data,features:a}},s,this.setTooltip,this.props.datasource)]}addColor(e,t){const i=t.color_picker||{r:0,g:0,b:0,a:1},o=y(t.color_scheme);return e.map((e=>{let s;return t.dimension?(s=(0,p.hexToRGB)(o(e.cat_color,t.sliceId),255*i.a),{...e,color:s}):e}))}toggleCategory(e){const t=this.state.categories[e],i={...this.state.categories,[e]:{...t,enabled:!t.enabled}};Object.values(i).every((e=>!e.enabled))&&Object.values(i).forEach((e=>{e.enabled=!0})),this.setState({categories:i})}showSingleCategory(e){const t={...this.state.categories};Object.values(t).forEach((e=>{e.enabled=!1})),t[e].enabled=!0,this.setState({categories:t})}render(){return(0,f.tZ)("div",{style:{position:"relative"}},(0,f.tZ)(c.Z,{ref:this.containerRef,getLayers:this.getLayers,start:this.state.start,end:this.state.end,getStep:this.state.getStep,values:this.state.values,disabled:this.state.disabled,viewport:this.state.viewport,mapboxApiAccessToken:this.props.mapboxApiKey,mapStyle:this.props.formData.mapbox_style,setControlValue:this.props.setControlValue,width:this.props.width,height:this.props.height},(0,f.tZ)(u.Z,{forceCategorical:!0,categories:this.state.categories,format:this.props.formData.legend_format,position:this.props.formData.legend_position,showSingleCategory:this.showSingleCategory,toggleCategory:this.toggleCategory})))}}function _(e,t){class i extends a.PureComponent{constructor(e){super(e),this.containerRef=a.createRef(),this.setTooltip=e=>{const{current:t}=this.containerRef;t&&(null==t||t.setTooltip(e))};const{width:i,height:o,formData:s}=e;let{viewport:r}=e;s.autozoom&&(r=(0,m.Z)(r,{width:i,height:o,points:t(e.payload.data.features)})),this.state={viewport:r,layer:this.computeLayer(e)},this.onViewportChange=this.onViewportChange.bind(this)}UNSAFE_componentWillReceiveProps(e){const t={...e.formData,viewport:null},i={...this.props.formData,viewport:null};s()(t,i)&&e.payload===this.props.payload||this.setState({layer:this.computeLayer(e)})}onViewportChange(e){this.setState({viewport:e})}computeLayer(t){const{formData:i,payload:o,onAddFilter:s}=t;return e(i,o,s,this.setTooltip)}render(){const{formData:e,payload:t,setControlValue:i,height:o,width:s}=this.props,{layer:a,viewport:n}=this.state;return(0,f.tZ)(r.F,{ref:this.containerRef,mapboxApiAccessToken:t.data.mapboxApiKey,viewport:n,layers:[a],mapStyle:e.mapbox_style,setControlValue:i,width:s,height:o,onViewportChange:this.onViewportChange})}}return i}function C(e,t){return function(i){const{datasource:o,formData:s,height:a,payload:r,setControlValue:n,viewport:l,width:d}=i;return(0,f.tZ)(b,{datasource:o,formData:s,mapboxApiKey:r.data.mapboxApiKey,setControlValue:n,viewport:l,getLayer:e,payload:r,getPoints:t,width:d,height:a})}}b.propTypes=v}}]);