{"version":3,"file":"df8caffe35dc7408592b.chunk.js","mappings":"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","sources":["webpack://superset/./plugins/legacy-preset-chart-nvd3/src/PropTypes.js","webpack://superset/./plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js","webpack://superset/./plugins/legacy-preset-chart-nvd3/src/ReactNVD3.jsx","webpack://superset/./packages/superset-ui-core/src/chart/components/reactify.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react/sort-prop-types */\nimport PropTypes from 'prop-types';\nimport { ANNOTATION_TYPES } from './vendor/superset/AnnotationTypes';\n\nexport const numberOrAutoType = PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.oneOf(['auto']),\n]);\n\nexport const stringOrObjectWithLabelType = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.shape({\n    label: PropTypes.string,\n  }),\n]);\n\nexport const rgbObjectType = PropTypes.shape({\n  r: PropTypes.number.isRequired,\n  g: PropTypes.number.isRequired,\n  b: PropTypes.number.isRequired,\n});\n\nexport const numericXYType = PropTypes.shape({\n  x: PropTypes.number,\n  y: PropTypes.number,\n});\n\nexport const categoryAndValueXYType = PropTypes.shape({\n  x: PropTypes.string,\n  y: PropTypes.number,\n});\n\nexport const boxPlotValueType = PropTypes.shape({\n  outliers: PropTypes.arrayOf(PropTypes.number),\n  Q1: PropTypes.number,\n  Q2: PropTypes.number,\n  Q3: PropTypes.number,\n  whisker_high: PropTypes.number,\n  whisker_low: PropTypes.number,\n});\n\nexport const bulletDataType = PropTypes.shape({\n  markerLabels: PropTypes.arrayOf(PropTypes.string),\n  markerLineLabels: PropTypes.arrayOf(PropTypes.string),\n  markerLines: PropTypes.arrayOf(PropTypes.number),\n  markers: PropTypes.arrayOf(PropTypes.number),\n  measures: PropTypes.arrayOf(PropTypes.number),\n  rangeLabels: PropTypes.arrayOf(PropTypes.string),\n  ranges: PropTypes.arrayOf(PropTypes.number),\n});\n\nexport const annotationLayerType = PropTypes.shape({\n  annotationType: PropTypes.oneOf(Object.keys(ANNOTATION_TYPES)),\n  color: PropTypes.string,\n  hideLine: PropTypes.bool,\n  name: PropTypes.string,\n  opacity: PropTypes.string,\n  show: PropTypes.bool,\n  showMarkers: PropTypes.bool,\n  sourceType: PropTypes.string,\n  style: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  width: PropTypes.number,\n});\n","/* eslint-disable react/sort-prop-types */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { kebabCase, throttle } from 'lodash';\nimport d3 from 'd3';\nimport moment from 'moment';\nimport nv from 'nvd3-fork';\nimport PropTypes from 'prop-types';\nimport {\n  CategoricalColorNamespace,\n  evalExpression,\n  getNumberFormatter,\n  getTimeFormatter,\n  isDefined,\n  NumberFormats,\n  smartDateVerboseFormatter,\n  t,\n} from '@superset-ui/core';\n\nimport 'nvd3-fork/build/nv.d3.css';\n\n/* eslint-disable-next-line */\nimport ANNOTATION_TYPES, {\n  applyNativeColumns,\n} from './vendor/superset/AnnotationTypes';\nimport isTruthy from './utils/isTruthy';\nimport {\n  cleanColorInput,\n  computeBarChartWidth,\n  computeYDomain,\n  computeStackedYDomain,\n  drawBarValues,\n  generateBubbleTooltipContent,\n  generateCompareTooltipContent,\n  generateRichLineTooltipContent,\n  generateTimePivotTooltip,\n  generateTooltipClassName,\n  generateAreaChartTooltipContent,\n  getMaxLabelSize,\n  getTimeOrNumberFormatter,\n  hideTooltips,\n  tipFactory,\n  tryNumify,\n  removeTooltip,\n  setAxisShowMaxMin,\n  stringifyTimeRange,\n  wrapTooltip,\n} from './utils';\nimport {\n  annotationLayerType,\n  boxPlotValueType,\n  bulletDataType,\n  categoryAndValueXYType,\n  rgbObjectType,\n  numericXYType,\n  numberOrAutoType,\n  stringOrObjectWithLabelType,\n} from './PropTypes';\n\nconst NO_DATA_RENDER_DATA = [\n  { text: 'No data', dy: '-.75em', class: 'header' },\n  {\n    text: 'Adjust filters or check the Datasource.',\n    dy: '.75em',\n    class: 'body',\n  },\n];\n\n// Override the noData render function to make a prettier UX\n// Code adapted from https://github.com/novus/nvd3/blob/master/src/utils.js#L653\nnv.utils.noData = function noData(chart, container) {\n  const opt = chart.options();\n  const margin = opt.margin();\n  const height = nv.utils.availableHeight(null, container, margin);\n  const width = nv.utils.availableWidth(null, container, margin);\n  const x = margin.left + width / 2;\n  const y = margin.top + height / 2;\n\n  // Remove any previously created chart components\n  container.selectAll('g').remove();\n\n  const noDataText = container\n    .selectAll('.nv-noData')\n    .data(NO_DATA_RENDER_DATA);\n\n  noDataText\n    .enter()\n    .append('text')\n    .attr('class', d => `nvd3 nv-noData ${d.class}`)\n    .attr('dy', d => d.dy)\n    .style('text-anchor', 'middle');\n\n  noDataText\n    .attr('x', x)\n    .attr('y', y)\n    .text(d => d.text);\n};\n\nconst { getColor, getScale } = CategoricalColorNamespace;\n\n// Limit on how large axes margins can grow as the chart window is resized\nconst MAX_MARGIN_PAD = 30;\nconst MIN_HEIGHT_FOR_BRUSH = 480;\nconst MAX_NO_CHARACTERS_IN_LABEL = 40;\n\nconst BREAKPOINTS = {\n  small: 340,\n};\n\nconst TIMESERIES_VIZ_TYPES = ['line', 'area', 'compare', 'bar', 'time_pivot'];\n\nconst CHART_ID_PREFIX = 'chart-id-';\n\nconst propTypes = {\n  data: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        // pie\n        categoryAndValueXYType,\n        // dist-bar\n        PropTypes.shape({\n          key: PropTypes.string,\n          values: PropTypes.arrayOf(categoryAndValueXYType),\n        }),\n        // area, line, compare, bar\n        PropTypes.shape({\n          key: PropTypes.arrayOf(PropTypes.string),\n          values: PropTypes.arrayOf(numericXYType),\n        }),\n        // dual-line\n        PropTypes.shape({\n          classed: PropTypes.string,\n          key: PropTypes.string,\n          type: PropTypes.string,\n          values: PropTypes.arrayOf(numericXYType),\n          yAxis: PropTypes.number,\n        }),\n        // box-plot\n        PropTypes.shape({\n          label: PropTypes.string,\n          values: PropTypes.arrayOf(boxPlotValueType),\n        }),\n        // bubble\n        PropTypes.shape({\n          key: PropTypes.string,\n          values: PropTypes.arrayOf(PropTypes.object),\n        }),\n      ]),\n    ),\n    // bullet\n    bulletDataType,\n  ]),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  annotationData: PropTypes.object,\n  annotationLayers: PropTypes.arrayOf(annotationLayerType),\n  bottomMargin: numberOrAutoType,\n  colorScheme: PropTypes.string,\n  comparisonType: PropTypes.string,\n  contribution: PropTypes.bool,\n  leftMargin: numberOrAutoType,\n  onError: PropTypes.func,\n  showLegend: PropTypes.bool,\n  showMarkers: PropTypes.bool,\n  useRichTooltip: PropTypes.bool,\n  vizType: PropTypes.oneOf([\n    'area',\n    'bar',\n    'box_plot',\n    'bubble',\n    'bullet',\n    'compare',\n    'column',\n    'dist_bar',\n    'line',\n    'time_pivot',\n    'pie',\n  ]),\n  xAxisFormat: PropTypes.string,\n  numberFormat: PropTypes.string,\n  xAxisLabel: PropTypes.string,\n  xAxisShowMinMax: PropTypes.bool,\n  xIsLogScale: PropTypes.bool,\n  xTicksLayout: PropTypes.oneOf(['auto', 'staggered', '45°']),\n  yAxisFormat: PropTypes.string,\n  yAxisBounds: PropTypes.arrayOf(PropTypes.number),\n  yAxisLabel: PropTypes.string,\n  yAxisShowMinMax: PropTypes.bool,\n  yIsLogScale: PropTypes.bool,\n  // 'dist-bar' only\n  orderBars: PropTypes.bool,\n  // 'bar' or 'dist-bar'\n  isBarStacked: PropTypes.bool,\n  showBarValue: PropTypes.bool,\n  // 'bar', 'dist-bar' or 'column'\n  reduceXTicks: PropTypes.bool,\n  // 'bar', 'dist-bar' or 'area'\n  showControls: PropTypes.bool,\n  // 'line' only\n  showBrush: PropTypes.oneOf([true, 'yes', false, 'no', 'auto']),\n  onBrushEnd: PropTypes.func,\n  // 'line-multi' or 'dual-line'\n  yAxis2Format: PropTypes.string,\n  // 'line', 'time-pivot', 'dual-line' or 'line-multi'\n  lineInterpolation: PropTypes.string,\n  // 'pie' only\n  isDonut: PropTypes.bool,\n  isPieLabelOutside: PropTypes.bool,\n  pieLabelType: PropTypes.oneOf([\n    'key',\n    'value',\n    'percent',\n    'key_value',\n    'key_percent',\n    'key_value_percent',\n  ]),\n  showLabels: PropTypes.bool,\n  // 'area' only\n  areaStackedStyle: PropTypes.string,\n  // 'bubble' only\n  entity: PropTypes.string,\n  maxBubbleSize: PropTypes.number,\n  xField: stringOrObjectWithLabelType,\n  yField: stringOrObjectWithLabelType,\n  sizeField: stringOrObjectWithLabelType,\n  // time-pivot only\n  baseColor: rgbObjectType,\n};\n\nconst NOOP = () => {};\nconst formatter = getNumberFormatter();\n\nfunction nvd3Vis(element, props) {\n  const {\n    data,\n    width: maxWidth,\n    height: maxHeight,\n    annotationData,\n    annotationLayers = [],\n    areaStackedStyle,\n    baseColor,\n    bottomMargin,\n    colorScheme,\n    comparisonType,\n    contribution,\n    entity,\n    isBarStacked,\n    isDonut,\n    isPieLabelOutside,\n    leftMargin,\n    lineInterpolation = 'linear',\n    markerLabels,\n    markerLines,\n    markerLineLabels,\n    markers,\n    maxBubbleSize,\n    onBrushEnd = NOOP,\n    onError = NOOP,\n    orderBars,\n    pieLabelType,\n    rangeLabels,\n    ranges,\n    reduceXTicks = false,\n    showBarValue,\n    showBrush,\n    showControls,\n    showLabels,\n    showLegend,\n    showMarkers,\n    sizeField,\n    useRichTooltip,\n    vizType,\n    xAxisFormat,\n    numberFormat,\n    xAxisLabel,\n    xAxisShowMinMax = false,\n    xField,\n    xIsLogScale,\n    xTicksLayout,\n    yAxisFormat,\n    yAxisBounds,\n    yAxisLabel,\n    yAxisShowMinMax = false,\n    yAxis2ShowMinMax = false,\n    yField,\n    yIsLogScale,\n    sliceId,\n  } = props;\n\n  const isExplore = document.querySelector('#explorer-container') !== null;\n  const container = element;\n  container.innerHTML = '';\n  const activeAnnotationLayers = annotationLayers.filter(layer => layer.show);\n\n  // Search for the chart id in a parent div from the nvd3 chart\n  let chartContainer = container;\n  let chartId = null;\n  while (chartContainer.parentElement) {\n    if (chartContainer.parentElement.id.startsWith(CHART_ID_PREFIX)) {\n      chartId = chartContainer.parentElement.id;\n      break;\n    }\n\n    chartContainer = chartContainer.parentElement;\n  }\n\n  let chart;\n  let width = maxWidth;\n  let colorKey = 'key';\n\n  container.style.width = `${maxWidth}px`;\n  container.style.height = `${maxHeight}px`;\n\n  function isVizTypes(types) {\n    return types.includes(vizType);\n  }\n\n  const drawGraph = function drawGraph() {\n    const d3Element = d3.select(element);\n    d3Element.classed('superset-legacy-chart-nvd3', true);\n    d3Element.classed(`superset-legacy-chart-nvd3-${kebabCase(vizType)}`, true);\n    let svg = d3Element.select('svg');\n    if (svg.empty()) {\n      svg = d3Element.append('svg');\n    }\n    const height = vizType === 'bullet' ? Math.min(maxHeight, 50) : maxHeight;\n    const isTimeSeries = isVizTypes(TIMESERIES_VIZ_TYPES);\n\n    // Handling xAxis ticks settings\n    const staggerLabels = xTicksLayout === 'staggered';\n    const xLabelRotation =\n      (xTicksLayout === 'auto' && isVizTypes(['column', 'dist_bar'])) ||\n      xTicksLayout === '45°'\n        ? 45\n        : 0;\n    if (xLabelRotation === 45 && isTruthy(showBrush)) {\n      onError(\n        t('You cannot use 45° tick layout along with the time range filter'),\n      );\n\n      return null;\n    }\n\n    const canShowBrush =\n      isTruthy(showBrush) ||\n      (showBrush === 'auto' &&\n        maxHeight >= MIN_HEIGHT_FOR_BRUSH &&\n        xTicksLayout !== '45°');\n    const numberFormatter = getNumberFormatter(numberFormat);\n\n    switch (vizType) {\n      case 'line':\n        if (canShowBrush) {\n          chart = nv.models.lineWithFocusChart();\n          if (staggerLabels) {\n            // Give a bit more room to focus area if X axis ticks are staggered\n            chart.focus.margin({ bottom: 40 });\n            chart.focusHeight(80);\n          }\n          chart.focus.xScale(d3.time.scale.utc());\n        } else {\n          chart = nv.models.lineChart();\n        }\n        chart.xScale(d3.time.scale.utc());\n        chart.interpolate(lineInterpolation);\n        chart.clipEdge(false);\n        break;\n\n      case 'time_pivot':\n        chart = nv.models.lineChart();\n        chart.xScale(d3.time.scale.utc());\n        chart.interpolate(lineInterpolation);\n        break;\n\n      case 'bar':\n        chart = nv.models\n          .multiBarChart()\n          .showControls(showControls)\n          .groupSpacing(0.1);\n\n        if (!reduceXTicks) {\n          width = computeBarChartWidth(data, isBarStacked, maxWidth);\n        }\n        chart.width(width);\n        chart.xAxis.showMaxMin(false);\n        chart.stacked(isBarStacked);\n        break;\n\n      case 'dist_bar':\n        chart = nv.models\n          .multiBarChart()\n          .showControls(showControls)\n          .reduceXTicks(reduceXTicks)\n          .groupSpacing(0.1); // Distance between each group of bars.\n\n        chart.xAxis.showMaxMin(false);\n\n        chart.stacked(isBarStacked);\n        if (orderBars) {\n          data.forEach(d => {\n            const newValues = [...d.values]; // need to copy values to avoid redux store changed.\n            // eslint-disable-next-line no-param-reassign\n            d.values = newValues.sort((a, b) =>\n              tryNumify(a.x) < tryNumify(b.x) ? -1 : 1,\n            );\n          });\n        }\n        if (!reduceXTicks) {\n          width = computeBarChartWidth(data, isBarStacked, maxWidth);\n        }\n        chart.width(width);\n        break;\n\n      case 'pie':\n        chart = nv.models.pieChart();\n        colorKey = 'x';\n        chart.valueFormat(numberFormatter);\n        if (isDonut) {\n          chart.donut(true);\n        }\n        chart.showLabels(showLabels);\n        chart.labelsOutside(isPieLabelOutside);\n        // Configure the minimum slice size for labels to show up\n        chart.labelThreshold(0.05);\n        chart.cornerRadius(true);\n\n        if (['key', 'value', 'percent'].includes(pieLabelType)) {\n          chart.labelType(pieLabelType);\n        } else if (pieLabelType === 'key_value') {\n          chart.labelType(d => `${d.data.x}: ${numberFormatter(d.data.y)}`);\n        } else {\n          // pieLabelType in ['key_percent', 'key_value_percent']\n          const total = d3.sum(data, d => d.y);\n          const percentFormatter = getNumberFormatter(\n            NumberFormats.PERCENT_2_POINT,\n          );\n          if (pieLabelType === 'key_percent') {\n            chart.tooltip.valueFormatter(d => percentFormatter(d));\n            chart.labelType(\n              d => `${d.data.x}: ${percentFormatter(d.data.y / total)}`,\n            );\n          } else {\n            // pieLabelType === 'key_value_percent'\n            chart.tooltip.valueFormatter(\n              d => `${numberFormatter(d)} (${percentFormatter(d / total)})`,\n            );\n            chart.labelType(\n              d =>\n                `${d.data.x}: ${numberFormatter(d.data.y)} (${percentFormatter(\n                  d.data.y / total,\n                )})`,\n            );\n          }\n        }\n        // Pie chart does not need top margin\n        chart.margin({ top: 0 });\n        break;\n\n      case 'column':\n        chart = nv.models.multiBarChart().reduceXTicks(false);\n        break;\n\n      case 'compare':\n        chart = nv.models.cumulativeLineChart();\n        chart.xScale(d3.time.scale.utc());\n        chart.useInteractiveGuideline(true);\n        chart.xAxis.showMaxMin(false);\n        break;\n\n      case 'bubble':\n        chart = nv.models.scatterChart();\n        chart.showDistX(false);\n        chart.showDistY(false);\n        chart.tooltip.contentGenerator(d =>\n          generateBubbleTooltipContent({\n            point: d.point,\n            entity,\n            xField,\n            yField,\n            sizeField,\n            xFormatter: getTimeOrNumberFormatter(xAxisFormat),\n            yFormatter: getTimeOrNumberFormatter(yAxisFormat),\n            sizeFormatter: formatter,\n          }),\n        );\n        chart.pointRange([5, maxBubbleSize ** 2]);\n        chart.pointDomain([\n          0,\n          d3.max(data, d => d3.max(d.values, v => v.size)),\n        ]);\n        break;\n\n      case 'area':\n        chart = nv.models.stackedAreaChart();\n        chart.showControls(showControls);\n        chart.style(areaStackedStyle);\n        chart.xScale(d3.time.scale.utc());\n        break;\n\n      case 'box_plot':\n        colorKey = 'label';\n        chart = nv.models.boxPlotChart();\n        chart.x(d => d.label);\n        chart.maxBoxWidth(75); // prevent boxes from being incredibly wide\n        break;\n\n      case 'bullet':\n        chart = nv.models.bulletChart();\n        data.rangeLabels = rangeLabels;\n        data.ranges = ranges;\n        data.markerLabels = markerLabels;\n        data.markerLines = markerLines;\n        data.markerLineLabels = markerLineLabels;\n        data.markers = markers;\n        break;\n\n      default:\n        throw new Error(`Unrecognized visualization for nvd3${vizType}`);\n    }\n    // Assuming the container has padding already other than for top margin\n    chart.margin({ left: 0, bottom: 0 });\n\n    if (showBarValue) {\n      drawBarValues(svg, data, isBarStacked, yAxisFormat);\n      chart.dispatch.on('stateChange.drawBarValues', () => {\n        drawBarValues(svg, data, isBarStacked, yAxisFormat);\n      });\n    }\n\n    if (canShowBrush && onBrushEnd !== NOOP) {\n      if (chart.focus) {\n        chart.focus.dispatch.on('brush', event => {\n          const timeRange = stringifyTimeRange(event.extent);\n          if (timeRange) {\n            event.brush.on('brushend', () => {\n              onBrushEnd(timeRange);\n            });\n          }\n        });\n      }\n    }\n\n    if (chart.xAxis && chart.xAxis.staggerLabels) {\n      chart.xAxis.staggerLabels(staggerLabels);\n    }\n    if (chart.xAxis && chart.xAxis.rotateLabels) {\n      chart.xAxis.rotateLabels(xLabelRotation);\n    }\n    if (chart.x2Axis && chart.x2Axis.staggerLabels) {\n      chart.x2Axis.staggerLabels(staggerLabels);\n    }\n    if (chart.x2Axis && chart.x2Axis.rotateLabels) {\n      chart.x2Axis.rotateLabels(xLabelRotation);\n    }\n\n    if ('showLegend' in chart && typeof showLegend !== 'undefined') {\n      if (width < BREAKPOINTS.small && vizType !== 'pie') {\n        chart.showLegend(false);\n      } else {\n        chart.showLegend(showLegend);\n      }\n    }\n\n    if (yIsLogScale) {\n      chart.yScale(d3.scale.log());\n    }\n    if (xIsLogScale) {\n      chart.xScale(d3.scale.log());\n    }\n\n    let xAxisFormatter;\n    if (isTimeSeries) {\n      xAxisFormatter = getTimeFormatter(xAxisFormat);\n      // In tooltips, always use the verbose time format\n      chart.interactiveLayer.tooltip.headerFormatter(smartDateVerboseFormatter);\n    } else {\n      xAxisFormatter = getTimeOrNumberFormatter(xAxisFormat);\n    }\n    if (chart.x2Axis && chart.x2Axis.tickFormat) {\n      chart.x2Axis.tickFormat(xAxisFormatter);\n    }\n    if (chart.xAxis && chart.xAxis.tickFormat) {\n      const isXAxisString = isVizTypes(['dist_bar', 'box_plot']);\n      if (isXAxisString) {\n        chart.xAxis.tickFormat(d =>\n          d.length > MAX_NO_CHARACTERS_IN_LABEL\n            ? `${d.slice(0, Math.max(0, MAX_NO_CHARACTERS_IN_LABEL))}…`\n            : d,\n        );\n      } else {\n        chart.xAxis.tickFormat(xAxisFormatter);\n      }\n    }\n\n    let yAxisFormatter = getTimeOrNumberFormatter(yAxisFormat);\n    if (chart.yAxis && chart.yAxis.tickFormat) {\n      if (\n        (contribution || comparisonType === 'percentage') &&\n        (!yAxisFormat ||\n          yAxisFormat === NumberFormats.SMART_NUMBER ||\n          yAxisFormat === NumberFormats.SMART_NUMBER_SIGNED)\n      ) {\n        // When computing a \"Percentage\" or \"Contribution\" selected,\n        // force a percentage format if no custom formatting set\n        yAxisFormatter = getNumberFormatter(NumberFormats.PERCENT_1_POINT);\n      }\n      chart.yAxis.tickFormat(yAxisFormatter);\n    }\n    if (chart.y2Axis && chart.y2Axis.tickFormat) {\n      chart.y2Axis.tickFormat(yAxisFormatter);\n    }\n\n    if (chart.yAxis) {\n      chart.yAxis.ticks(5);\n    }\n    if (chart.y2Axis) {\n      chart.y2Axis.ticks(5);\n    }\n\n    // Set showMaxMin for all axis\n    setAxisShowMaxMin(chart.xAxis, xAxisShowMinMax);\n    setAxisShowMaxMin(chart.x2Axis, xAxisShowMinMax);\n    setAxisShowMaxMin(chart.yAxis, yAxisShowMinMax);\n    setAxisShowMaxMin(chart.y2Axis, yAxis2ShowMinMax || yAxisShowMinMax);\n\n    if (vizType === 'time_pivot') {\n      if (baseColor) {\n        const { r, g, b } = baseColor;\n        chart.color(d => {\n          const alpha = d.rank > 0 ? d.perc * 0.5 : 1;\n\n          return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n        });\n      }\n\n      chart.useInteractiveGuideline(true);\n      chart.interactiveLayer.tooltip.contentGenerator(d =>\n        generateTimePivotTooltip(d, xAxisFormatter, yAxisFormatter),\n      );\n    } else if (vizType !== 'bullet') {\n      const colorFn = getScale(colorScheme);\n      chart.color(\n        d => d.color || colorFn(cleanColorInput(d[colorKey]), sliceId),\n      );\n    }\n\n    if (isVizTypes(['line', 'area', 'bar', 'dist_bar']) && useRichTooltip) {\n      chart.useInteractiveGuideline(true);\n      if (vizType === 'line' || vizType === 'bar') {\n        chart.interactiveLayer.tooltip.contentGenerator(d =>\n          generateRichLineTooltipContent(\n            d,\n            smartDateVerboseFormatter,\n            yAxisFormatter,\n          ),\n        );\n      } else if (vizType === 'dist_bar') {\n        chart.interactiveLayer.tooltip.contentGenerator(d =>\n          generateCompareTooltipContent(d, yAxisFormatter),\n        );\n      } else {\n        // area chart\n        chart.interactiveLayer.tooltip.contentGenerator(d =>\n          generateAreaChartTooltipContent(\n            d,\n            smartDateVerboseFormatter,\n            yAxisFormatter,\n            chart,\n          ),\n        );\n      }\n    }\n\n    if (isVizTypes(['compare'])) {\n      chart.interactiveLayer.tooltip.contentGenerator(d =>\n        generateCompareTooltipContent(d, yAxisFormatter),\n      );\n    }\n\n    // This is needed for correct chart dimensions if a chart is rendered in a hidden container\n    chart.width(width);\n    chart.height(height);\n\n    svg\n      .datum(data)\n      .transition()\n      .duration(500)\n      .attr('height', height)\n      .attr('width', width)\n      .call(chart);\n\n    // For log scale, only show 1, 10, 100, 1000, ...\n    if (yIsLogScale) {\n      chart.yAxis.tickFormat(d =>\n        d !== 0 && Math.log10(d) % 1 === 0 ? yAxisFormatter(d) : '',\n      );\n    }\n\n    if (xLabelRotation > 0) {\n      // shift labels to the left so they look better\n      const xTicks = svg.select('.nv-x.nv-axis > g').selectAll('g');\n      xTicks.selectAll('text').attr('dx', -6.5);\n    }\n\n    const applyYAxisBounds = () => {\n      if (\n        chart.yDomain &&\n        Array.isArray(yAxisBounds) &&\n        yAxisBounds.length === 2\n      ) {\n        const [customMin, customMax] = yAxisBounds;\n        const hasCustomMin = isDefined(customMin) && !Number.isNaN(customMin);\n        const hasCustomMax = isDefined(customMax) && !Number.isNaN(customMax);\n\n        if (\n          (hasCustomMin || hasCustomMax) &&\n          vizType === 'area' &&\n          chart.style() === 'expand'\n        ) {\n          // Because there are custom bounds, we need to override them back to 0%-100% since this\n          // is an expanded area chart\n          chart.yDomain([0, 1]);\n        } else if (\n          (hasCustomMin || hasCustomMax) &&\n          vizType === 'area' &&\n          chart.style() === 'stream'\n        ) {\n          // Because there are custom bounds, we need to override them back to the domain of the\n          // data since this is a stream area chart\n          chart.yDomain(computeStackedYDomain(data));\n        } else if (hasCustomMin && hasCustomMax) {\n          // Override the y domain if there's both a custom min and max\n          chart.yDomain([customMin, customMax]);\n          chart.clipEdge(true);\n        } else if (hasCustomMin || hasCustomMax) {\n          // Only one of the bounds has been set, so we need to manually calculate the other one\n          let [trueMin, trueMax] = [0, 1];\n\n          // These viz types can be stacked\n          // They correspond to the nvd3 stackedAreaChart and multiBarChart\n          if (\n            vizType === 'area' ||\n            (isVizTypes(['bar', 'dist_bar']) && chart.stacked())\n          ) {\n            // This is a stacked area chart or a stacked bar chart\n            [trueMin, trueMax] = computeStackedYDomain(data);\n          } else {\n            [trueMin, trueMax] = computeYDomain(data);\n          }\n\n          const min = hasCustomMin ? customMin : trueMin;\n          const max = hasCustomMax ? customMax : trueMax;\n          chart.yDomain([min, max]);\n          chart.clipEdge(true);\n        }\n      }\n    };\n    applyYAxisBounds();\n\n    // Also reapply on each state change to account for enabled/disabled series\n    if (chart.dispatch && chart.dispatch.stateChange) {\n      chart.dispatch.on('stateChange.applyYAxisBounds', applyYAxisBounds);\n    }\n\n    if (showMarkers) {\n      svg\n        .selectAll('.nv-point')\n        .style('stroke-opacity', 1)\n        .style('fill-opacity', 1);\n\n      // redo on legend toggle; nvd3 calls the callback *before* the line is\n      // drawn, so we need to add a small delay here\n      chart.dispatch.on('stateChange.showMarkers', () => {\n        setTimeout(() => {\n          svg\n            .selectAll('.nv-point')\n            .style('stroke-opacity', 1)\n            .style('fill-opacity', 1);\n        }, 10);\n      });\n    }\n\n    if (chart.yAxis !== undefined || chart.yAxis2 !== undefined) {\n      // Hack to adjust y axis left margin to accommodate long numbers\n      const marginPad = Math.ceil(\n        Math.min(maxWidth * (isExplore ? 0.01 : 0.03), MAX_MARGIN_PAD),\n      );\n      // Hack to adjust margins to accommodate long axis tick labels.\n      // - has to be done only after the chart has been rendered once\n      // - measure the width or height of the labels\n      // ---- (x axis labels are rotated 45 degrees so we use height),\n      // - adjust margins based on these measures and render again\n      const margins = chart.margin();\n      if (chart.xAxis) {\n        margins.bottom = 28;\n      }\n      const maxYAxisLabelWidth = getMaxLabelSize(\n        svg,\n        chart.yAxis2 ? 'nv-y1' : 'nv-y',\n      );\n      const maxXAxisLabelHeight = getMaxLabelSize(svg, 'nv-x');\n      margins.left = maxYAxisLabelWidth + marginPad;\n\n      if (yAxisLabel && yAxisLabel !== '') {\n        margins.left += 25;\n      }\n      if (showBarValue) {\n        // Add more margin to avoid label colliding with legend.\n        margins.top += 24;\n      }\n      if (xAxisShowMinMax) {\n        // If x bounds are shown, we need a right margin\n        margins.right = Math.max(20, maxXAxisLabelHeight / 2) + marginPad;\n      }\n      if (xLabelRotation === 45) {\n        margins.bottom =\n          maxXAxisLabelHeight * Math.sin((Math.PI * xLabelRotation) / 180) +\n          marginPad +\n          30;\n        margins.right =\n          maxXAxisLabelHeight * Math.cos((Math.PI * xLabelRotation) / 180) +\n          marginPad;\n      } else if (staggerLabels) {\n        margins.bottom = 40;\n      }\n\n      if (bottomMargin && bottomMargin !== 'auto') {\n        margins.bottom = parseInt(bottomMargin, 10);\n      }\n      if (leftMargin && leftMargin !== 'auto') {\n        margins.left = leftMargin;\n      }\n\n      if (xAxisLabel && xAxisLabel !== '' && chart.xAxis) {\n        margins.bottom += 25;\n        let distance = 0;\n        if (margins.bottom && !Number.isNaN(margins.bottom)) {\n          distance = margins.bottom - 45;\n        }\n        // nvd3 bug axisLabelDistance is disregarded on xAxis\n        // https://github.com/krispo/angular-nvd3/issues/90\n        chart.xAxis.axisLabel(xAxisLabel).axisLabelDistance(distance);\n      }\n\n      if (yAxisLabel && yAxisLabel !== '' && chart.yAxis) {\n        let distance = 0;\n        if (margins.left && !Number.isNaN(margins.left)) {\n          distance = margins.left - 70;\n        }\n        chart.yAxis.axisLabel(yAxisLabel).axisLabelDistance(distance);\n      }\n      if (isTimeSeries && annotationData && activeAnnotationLayers.length > 0) {\n        // Time series annotations add additional data\n        const timeSeriesAnnotations = activeAnnotationLayers\n          .filter(\n            layer => layer.annotationType === ANNOTATION_TYPES.TIME_SERIES,\n          )\n          .reduce(\n            (bushel, a) =>\n              bushel.concat(\n                (annotationData[a.name] || []).map(series => {\n                  if (!series) {\n                    return {};\n                  }\n                  const key = Array.isArray(series.key)\n                    ? `${a.name}, ${series.key.join(', ')}`\n                    : `${a.name}, ${series.key}`;\n\n                  return {\n                    ...series,\n                    key,\n                    color: a.color,\n                    strokeWidth: a.width,\n                    classed: `${a.opacity} ${a.style} nv-timeseries-annotation-layer showMarkers${a.showMarkers} hideLine${a.hideLine}`,\n                  };\n                }),\n              ),\n            [],\n          );\n        data.push(...timeSeriesAnnotations);\n      }\n\n      // Uniquely identify tooltips based on chartId so this chart instance only\n      // controls its own tooltips\n      if (chartId) {\n        if (chart && chart.interactiveLayer && chart.interactiveLayer.tooltip) {\n          chart.interactiveLayer.tooltip.classes([\n            generateTooltipClassName(chartId),\n          ]);\n        }\n\n        if (chart && chart.tooltip) {\n          chart.tooltip.classes([generateTooltipClassName(chartId)]);\n        }\n      }\n\n      // render chart\n      chart.margin(margins);\n      svg\n        .datum(data)\n        .transition()\n        .duration(500)\n        .attr('width', width)\n        .attr('height', height)\n        .call(chart);\n\n      // On scroll, hide (not remove) tooltips so they can reappear on hover.\n      // Throttle to only 4x/second.\n      window.addEventListener(\n        'scroll',\n        throttle(() => hideTooltips(false), 250),\n      );\n\n      // The below code should be run AFTER rendering because chart is updated in call()\n      if (isTimeSeries && activeAnnotationLayers.length > 0) {\n        // Formula annotations\n        const formulas = activeAnnotationLayers.filter(\n          a => a.annotationType === ANNOTATION_TYPES.FORMULA,\n        );\n\n        let xMax;\n        let xMin;\n        let xScale;\n        if (vizType === 'bar') {\n          xMin = d3.min(data[0].values, d => d.x);\n          xMax = d3.max(data[0].values, d => d.x);\n          xScale = d3.scale\n            .quantile()\n            .domain([xMin, xMax])\n            .range(chart.xAxis.range());\n        } else {\n          xMin = chart.xAxis.scale().domain()[0].valueOf();\n          xMax = chart.xAxis.scale().domain()[1].valueOf();\n          if (chart.xScale) {\n            xScale = chart.xScale();\n          } else if (chart.xAxis.scale) {\n            xScale = chart.xAxis.scale();\n          } else {\n            xScale = d3.scale.linear();\n          }\n        }\n        if (xScale && xScale.clamp) {\n          xScale.clamp(true);\n        }\n\n        if (formulas.length > 0) {\n          const xValues = [];\n          if (vizType === 'bar') {\n            // For bar-charts we want one data point evaluated for every\n            // data point that will be displayed.\n            const distinct = data.reduce((xVals, d) => {\n              d.values.forEach(x => xVals.add(x.x));\n\n              return xVals;\n            }, new Set());\n            xValues.push(...distinct.values());\n            xValues.sort();\n          } else {\n            // For every other time visualization it should be ok, to have a\n            // data points in even intervals.\n            let period = Math.min(\n              ...data.map(d =>\n                Math.min(\n                  ...d.values.slice(1).map((v, i) => v.x - d.values[i].x),\n                ),\n              ),\n            );\n            const dataPoints = (xMax - xMin) / (period || 1);\n            // make sure that there are enough data points and not too many\n            period = dataPoints < 100 ? (xMax - xMin) / 100 : period;\n            period = dataPoints > 500 ? (xMax - xMin) / 500 : period;\n            xValues.push(xMin);\n            for (let x = xMin; x < xMax; x += period) {\n              xValues.push(x);\n            }\n            xValues.push(xMax);\n          }\n          const formulaData = formulas.map(fo => {\n            const { value: expression } = fo;\n            return {\n              key: fo.name,\n              values: xValues.map(x => ({\n                x,\n                y: evalExpression(expression, x),\n              })),\n              color: fo.color,\n              strokeWidth: fo.width,\n              classed: `${fo.opacity} ${fo.style}`,\n            };\n          });\n          data.push(...formulaData);\n        }\n        const xAxis = chart.xAxis1 ? chart.xAxis1 : chart.xAxis;\n        const yAxis = chart.yAxis1 ? chart.yAxis1 : chart.yAxis;\n        const chartWidth = xAxis.scale().range()[1];\n        const annotationHeight = yAxis.scale().range()[0];\n\n        if (annotationData) {\n          // Event annotations\n          activeAnnotationLayers\n            .filter(\n              x =>\n                x.annotationType === ANNOTATION_TYPES.EVENT &&\n                annotationData &&\n                annotationData[x.name],\n            )\n            .forEach((config, index) => {\n              const e = applyNativeColumns(config);\n              // Add event annotation layer\n              const annotations = d3\n                .select(element)\n                .select('.nv-wrap')\n                .append('g')\n                .attr('class', `nv-event-annotation-layer-${index}`);\n              const aColor =\n                e.color || getColor(cleanColorInput(e.name), colorScheme);\n\n              const tip = tipFactory({\n                ...e,\n                annotationTipClass: `arrow-down nv-event-annotation-layer-${config.sourceType}`,\n              });\n              const records = (annotationData[e.name].records || [])\n                .map(r => {\n                  const timeValue = new Date(moment.utc(r[e.timeColumn]));\n\n                  return {\n                    ...r,\n                    [e.timeColumn]: timeValue,\n                  };\n                })\n                .filter(\n                  record =>\n                    !Number.isNaN(record[e.timeColumn].getMilliseconds()),\n                );\n\n              if (records.length > 0) {\n                annotations\n                  .selectAll('line')\n                  .data(records)\n                  .enter()\n                  .append('line')\n                  .attr({\n                    x1: d => xScale(new Date(d[e.timeColumn])),\n                    y1: 0,\n                    x2: d => xScale(new Date(d[e.timeColumn])),\n                    y2: annotationHeight,\n                  })\n                  .attr('class', `${e.opacity} ${e.style}`)\n                  .style('stroke', aColor)\n                  .style('stroke-width', e.width)\n                  .on('mouseover', tip.show)\n                  .on('mouseout', tip.hide)\n                  .call(tip);\n              }\n\n              // update annotation positions on brush event\n              if (chart.focus) {\n                chart.focus.dispatch.on('onBrush.event-annotation', () => {\n                  annotations\n                    .selectAll('line')\n                    .data(records)\n                    .attr({\n                      x1: d => xScale(new Date(d[e.timeColumn])),\n                      y1: 0,\n                      x2: d => xScale(new Date(d[e.timeColumn])),\n                      y2: annotationHeight,\n                      opacity: d => {\n                        const x = xScale(new Date(d[e.timeColumn]));\n\n                        return x > 0 && x < chartWidth ? 1 : 0;\n                      },\n                    });\n                });\n              }\n            });\n\n          // Interval annotations\n          activeAnnotationLayers\n            .filter(\n              x =>\n                x.annotationType === ANNOTATION_TYPES.INTERVAL &&\n                annotationData &&\n                annotationData[x.name],\n            )\n            .forEach((config, index) => {\n              const e = applyNativeColumns(config);\n              // Add interval annotation layer\n              const annotations = d3\n                .select(element)\n                .select('.nv-wrap')\n                .append('g')\n                .attr('class', `nv-interval-annotation-layer-${index}`);\n\n              const aColor =\n                e.color || getColor(cleanColorInput(e.name), colorScheme);\n              const tip = tipFactory(e);\n\n              const records = (annotationData[e.name].records || [])\n                .map(r => {\n                  const timeValue = new Date(moment.utc(r[e.timeColumn]));\n                  const intervalEndValue = new Date(\n                    moment.utc(r[e.intervalEndColumn]),\n                  );\n\n                  return {\n                    ...r,\n                    [e.timeColumn]: timeValue,\n                    [e.intervalEndColumn]: intervalEndValue,\n                  };\n                })\n                .filter(\n                  record =>\n                    !Number.isNaN(record[e.timeColumn].getMilliseconds()) &&\n                    !Number.isNaN(\n                      record[e.intervalEndColumn].getMilliseconds(),\n                    ),\n                );\n\n              if (records.length > 0) {\n                annotations\n                  .selectAll('rect')\n                  .data(records)\n                  .enter()\n                  .append('rect')\n                  .attr({\n                    x: d =>\n                      Math.min(\n                        xScale(new Date(d[e.timeColumn])),\n                        xScale(new Date(d[e.intervalEndColumn])),\n                      ),\n                    y: 0,\n                    width: d =>\n                      Math.max(\n                        Math.abs(\n                          xScale(new Date(d[e.intervalEndColumn])) -\n                            xScale(new Date(d[e.timeColumn])),\n                        ),\n                        1,\n                      ),\n                    height: annotationHeight,\n                  })\n                  .attr('class', `${e.opacity} ${e.style}`)\n                  .style('stroke-width', e.width)\n                  .style('stroke', aColor)\n                  .style('fill', aColor)\n                  .style('fill-opacity', 0.2)\n                  .on('mouseover', tip.show)\n                  .on('mouseout', tip.hide)\n                  .call(tip);\n              }\n\n              // update annotation positions on brush event\n              if (chart.focus) {\n                chart.focus.dispatch.on('onBrush.interval-annotation', () => {\n                  annotations\n                    .selectAll('rect')\n                    .data(records)\n                    .attr({\n                      x: d => xScale(new Date(d[e.timeColumn])),\n                      width: d => {\n                        const x1 = xScale(new Date(d[e.timeColumn]));\n                        const x2 = xScale(new Date(d[e.intervalEndColumn]));\n\n                        return x2 - x1;\n                      },\n                    });\n                });\n              }\n            });\n        }\n\n        // rerender chart appended with annotation layer\n        svg.datum(data).attr('height', height).attr('width', width).call(chart);\n\n        // Display styles for Time Series Annotations\n        chart.dispatch.on('renderEnd.timeseries-annotation', () => {\n          d3.selectAll(\n            '.slice_container .nv-timeseries-annotation-layer.showMarkerstrue .nv-point',\n          )\n            .style('stroke-opacity', 1)\n            .style('fill-opacity', 1);\n          d3.selectAll(\n            '.slice_container .nv-timeseries-annotation-layer.hideLinetrue',\n          ).style('stroke-width', 0);\n        });\n      }\n    }\n\n    wrapTooltip(chart);\n\n    return chart;\n  };\n\n  // Remove tooltips before rendering chart, if the chart is being re-rendered sometimes\n  // there are left over tooltips in the dom,\n  // this will clear them before rendering the chart again.\n  if (chartId) {\n    removeTooltip(chartId);\n  } else {\n    hideTooltips(true);\n  }\n\n  nv.addGraph(drawGraph);\n}\n\nnvd3Vis.displayName = 'NVD3';\nnvd3Vis.propTypes = propTypes;\nexport default nvd3Vis;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { reactify, styled } from '@superset-ui/core';\nimport PropTypes from 'prop-types';\nimport Component from './NVD3Vis';\nimport { hideTooltips, removeTooltip } from './utils';\n\nfunction componentWillUnmount() {\n  const { id } = this.props;\n  if (id !== null && id !== undefined) {\n    removeTooltip(id);\n  } else {\n    hideTooltips(true);\n  }\n}\n\nconst ReactNVD3 = reactify(Component, { componentWillUnmount });\n\nconst NVD3 = ({ className, ...otherProps }) => (\n  <div className={className}>\n    <ReactNVD3 {...otherProps} />\n  </div>\n);\n\nNVD3.propTypes = {\n  className: PropTypes.string.isRequired,\n};\n\nexport default styled(NVD3)`\n  .superset-legacy-chart-nvd3-dist-bar,\n  .superset-legacy-chart-nvd3-bar {\n    overflow-x: auto !important;\n    svg {\n      &.nvd3-svg {\n        width: auto;\n        font-size: ${({ theme }) => theme.typography.sizes.m};\n      }\n    }\n  }\n  .superset-legacy-chart-nvd3 {\n    nv-x text {\n      font-size: ${({ theme }) => theme.typography.sizes.m};\n    }\n    g.superset path {\n      stroke-dasharray: 5, 5;\n    }\n    .nvtooltip tr.highlight td {\n      font-weight: ${({ theme }) => theme.typography.weights.bold};\n      font-size: ${({ theme }) => theme.typography.sizes.m}px !important;\n    }\n    text.nv-axislabel {\n      font-size: ${({ theme }) => theme.typography.sizes.m} !important;\n    }\n    g.solid path,\n    line.solid {\n      stroke-dasharray: unset;\n    }\n    g.dashed path,\n    line.dashed {\n      stroke-dasharray: 5, 5;\n    }\n    g.longDashed path,\n    line.dotted {\n      stroke-dasharray: 1, 1;\n    }\n\n    g.opacityLow path,\n    line.opacityLow {\n      stroke-opacity: 0.2;\n    }\n\n    g.opacityMedium path,\n    line.opacityMedium {\n      stroke-opacity: 0.5;\n    }\n    g.opacityHigh path,\n    line.opacityHigh {\n      stroke-opacity: 0.8;\n    }\n    g.time-shift-0 path,\n    line.time-shift-0 {\n      stroke-dasharray: 5, 5;\n    }\n    g.time-shift-1 path,\n    line.time-shift-1 {\n      stroke-dasharray: 1, 5;\n    }\n    g.time-shift-2 path,\n    line.time-shift-3 {\n      stroke-dasharray: 5, 1;\n    }\n    g.time-shift-3 path,\n    line.time-shift-3 {\n      stroke-dasharray: 5, 1;\n    }\n    g.time-shift-4 path,\n    line.time-shift-4 {\n      stroke-dasharray: 5, 10;\n    }\n    g.time-shift-5 path,\n    line.time-shift-5 {\n      stroke-dasharray: 0.9;\n    }\n    g.time-shift-6 path,\n    line.time-shift-6 {\n      stroke-dasharray: 15, 10, 5;\n    }\n    g.time-shift-7 path,\n    line.time-shift-7 {\n      stroke-dasharray: 15, 10, 5, 10;\n    }\n    g.time-shift-8 path,\n    line.time-shift-8 {\n      stroke-dasharray: 15, 10, 5, 10, 15;\n    }\n    g.time-shift-9 path,\n    line.time-shift-9 {\n      stroke-dasharray: 5, 5, 1, 5;\n    }\n    .nv-noData.body {\n      font-size: ${({ theme }) => theme.typography.sizes.m};\n      font-weight: ${({ theme }) => theme.typography.weights.normal};\n    }\n  }\n  .superset-legacy-chart-nvd3-tr-highlight {\n    border-top: 1px solid;\n    border-bottom: 1px solid;\n    font-weight: ${({ theme }) => theme.typography.weights.bold};\n  }\n  .superset-legacy-chart-nvd3-tr-total {\n    font-weight: ${({ theme }) => theme.typography.weights.bold};\n  }\n  .nvtooltip {\n    .tooltip-header {\n      white-space: nowrap;\n      font-weight: ${({ theme }) => theme.typography.weights.bold};\n    }\n    tbody tr:not(.tooltip-header) td:nth-child(2) {\n      word-break: break-word;\n    }\n  }\n  .d3-tip.nv-event-annotation-layer-table,\n  .d3-tip.nv-event-annotation-layer-NATIVE {\n    width: 200px;\n    border-radius: 2px;\n    background-color: ${({ theme }) => theme.colors.grayscale.base};\n    fill-opacity: 0.6;\n    margin: ${({ theme }) => theme.gridUnit * 2}px;\n    padding: ${({ theme }) => theme.gridUnit * 2}px;\n    color: ${({ theme }) => theme.colors.grayscale.light5};\n    &:after {\n      content: '\\\\25BC';\n      font-size: ${({ theme }) => theme.typography.sizes.m};\n      color: ${({ theme }) => theme.colors.grayscale.base};\n      position: absolute;\n      bottom: -14px;\n      left: 94px;\n    }\n  }\n`;\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\n\n// TODO: Note that id and className can collide between Props and ReactifyProps\n// leading to (likely) unexpected behaviors. We should either require Props to not\n// contain an id/className, or not combine them (via intersection), instead preferring\n// wrapping (composition). As an example:\n// interface MyProps {\n//   id: number;\n// }\n// function myRender(container: HTMLDivElement, props: Readonly<MyProps>): void {\n//   props.id // unusable: id is string & number\n// }\n// new (reactify(myRender))({ id: 5 }); // error: id has to be string & number\n\nexport type ReactifyProps = {\n  id?: string;\n  className?: string;\n};\n\n// TODO: add more React lifecycle callbacks as needed\nexport type LifeCycleCallbacks = {\n  componentWillUnmount?: () => void;\n};\n\nexport interface RenderFuncType<Props> {\n  (container: HTMLDivElement, props: Readonly<Props & ReactifyProps>): void;\n  displayName?: string;\n  defaultProps?: Partial<Props & ReactifyProps>;\n  propTypes?: React.WeakValidationMap<Props & ReactifyProps>;\n}\n\nexport default function reactify<Props extends object>(\n  renderFn: RenderFuncType<Props>,\n  callbacks?: LifeCycleCallbacks,\n): React.ComponentClass<Props & ReactifyProps> {\n  class ReactifiedComponent extends React.Component<Props & ReactifyProps> {\n    container?: HTMLDivElement;\n\n    constructor(props: Props & ReactifyProps) {\n      super(props);\n      this.setContainerRef = this.setContainerRef.bind(this);\n    }\n\n    componentDidMount() {\n      this.execute();\n    }\n\n    componentDidUpdate() {\n      this.execute();\n    }\n\n    componentWillUnmount() {\n      this.container = undefined;\n      if (callbacks?.componentWillUnmount) {\n        callbacks.componentWillUnmount.bind(this)();\n      }\n    }\n\n    setContainerRef(ref: HTMLDivElement) {\n      this.container = ref;\n    }\n\n    execute() {\n      if (this.container) {\n        renderFn(this.container, this.props);\n      }\n    }\n\n    render() {\n      const { id, className } = this.props;\n\n      return <div ref={this.setContainerRef} id={id} className={className} />;\n    }\n  }\n\n  const ReactifiedClass: React.ComponentClass<Props & ReactifyProps> =\n    ReactifiedComponent;\n\n  if (renderFn.displayName) {\n    ReactifiedClass.displayName = renderFn.displayName;\n  }\n  // eslint-disable-next-line react/forbid-foreign-prop-types\n  if (renderFn.propTypes) {\n    ReactifiedClass.propTypes = {\n      ...ReactifiedClass.propTypes,\n      ...renderFn.propTypes,\n    };\n  }\n  if (renderFn.defaultProps) {\n    ReactifiedClass.defaultProps = renderFn.defaultProps;\n  }\n\n  return ReactifiedComponent;\n}\n"],"names":["numberOrAutoType","PropTypes","stringOrObjectWithLabelType","label","rgbObjectType","r","g","b","numericXYType","x","y","categoryAndValueXYType","boxPlotValueType","outliers","Q1","Q2","Q3","whisker_high","whisker_low","bulletDataType","markerLabels","markerLineLabels","markerLines","markers","measures","rangeLabels","ranges","annotationLayerType","annotationType","Object","keys","ANNOTATION_TYPES","color","hideLine","name","opacity","show","showMarkers","sourceType","style","value","width","NO_DATA_RENDER_DATA","text","dy","class","nv","chart","container","margin","options","height","left","top","selectAll","remove","noDataText","data","enter","append","attr","d","getColor","getScale","CategoricalColorNamespace","TIMESERIES_VIZ_TYPES","propTypes","key","values","classed","type","yAxis","annotationData","annotationLayers","bottomMargin","colorScheme","comparisonType","contribution","leftMargin","onError","showLegend","useRichTooltip","vizType","xAxisFormat","numberFormat","xAxisLabel","xAxisShowMinMax","xIsLogScale","xTicksLayout","yAxisFormat","yAxisBounds","yAxisLabel","yAxisShowMinMax","yIsLogScale","orderBars","isBarStacked","showBarValue","reduceXTicks","showControls","showBrush","onBrushEnd","yAxis2Format","lineInterpolation","isDonut","isPieLabelOutside","pieLabelType","showLabels","areaStackedStyle","entity","maxBubbleSize","xField","yField","sizeField","baseColor","NOOP","formatter","getNumberFormatter","nvd3Vis","element","props","maxWidth","maxHeight","yAxis2ShowMinMax","sliceId","isExplore","document","querySelector","innerHTML","activeAnnotationLayers","filter","layer","chartContainer","chartId","parentElement","id","startsWith","colorKey","isVizTypes","types","removeTooltip","hideTooltips","d3Element","d3","svg","select","empty","Math","min","isTimeSeries","staggerLabels","xLabelRotation","isTruthy","t","canShowBrush","numberFormatter","focus","bottom","focusHeight","xScale","interpolate","clipEdge","groupSpacing","computeBarChartWidth","xAxis","showMaxMin","stacked","forEach","newValues","sort","a","tryNumify","valueFormat","donut","labelsOutside","labelThreshold","cornerRadius","labelType","total","percentFormatter","NumberFormats","tooltip","valueFormatter","useInteractiveGuideline","showDistX","showDistY","contentGenerator","generateBubbleTooltipContent","point","xFormatter","getTimeOrNumberFormatter","yFormatter","sizeFormatter","pointRange","pointDomain","v","size","maxBoxWidth","Error","xAxisFormatter","drawBarValues","dispatch","on","event","timeRange","stringifyTimeRange","extent","brush","rotateLabels","x2Axis","yScale","getTimeFormatter","interactiveLayer","headerFormatter","smartDateVerboseFormatter","tickFormat","length","slice","max","yAxisFormatter","y2Axis","ticks","setAxisShowMaxMin","alpha","rank","perc","generateTimePivotTooltip","colorFn","cleanColorInput","generateRichLineTooltipContent","generateCompareTooltipContent","generateAreaChartTooltipContent","datum","transition","duration","call","log10","applyYAxisBounds","yDomain","Array","isArray","customMin","customMax","hasCustomMin","isDefined","Number","isNaN","hasCustomMax","computeStackedYDomain","trueMin","trueMax","computeYDomain","stateChange","setTimeout","undefined","yAxis2","marginPad","ceil","margins","maxYAxisLabelWidth","getMaxLabelSize","maxXAxisLabelHeight","right","sin","PI","cos","parseInt","distance","axisLabel","axisLabelDistance","timeSeriesAnnotations","reduce","bushel","concat","map","series","join","strokeWidth","push","classes","generateTooltipClassName","window","addEventListener","formulas","xMax","xMin","domain","range","scale","valueOf","clamp","xValues","distinct","xVals","add","Set","period","i","dataPoints","formulaData","fo","expression","evalExpression","xAxis1","yAxis1","chartWidth","annotationHeight","config","index","e","applyNativeColumns","annotations","aColor","tip","tipFactory","annotationTipClass","records","timeValue","Date","moment","timeColumn","record","getMilliseconds","x1","y1","x2","y2","hide","intervalEndValue","intervalEndColumn","abs","wrapTooltip","displayName","ReactNVD3","reactify","Component","componentWillUnmount","this","NVD3","className","otherProps","styled","theme","typography","sizes","m","weights","bold","normal","colors","grayscale","base","gridUnit","light5","renderFn","callbacks","ReactifiedComponent","React","constructor","super","setContainerRef","bind","componentDidMount","execute","componentDidUpdate","ref","render","ReactifiedClass","defaultProps"],"sourceRoot":""}