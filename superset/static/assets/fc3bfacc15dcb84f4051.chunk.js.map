{"version":3,"file":"fc3bfacc15dcb84f4051.chunk.js","mappings":"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","sources":["webpack://superset/./node_modules/lodash/uniqBy.js","webpack://superset/./packages/superset-ui-core/src/hooks/useTruncation/useChildElementTruncation.ts","webpack://superset/./src/components/ImportModal/index.tsx","webpack://superset/./src/components/Tags/Tag.tsx","webpack://superset/./src/components/Tags/TagsList.tsx","webpack://superset/./src/components/ListView/CrossLinksTooltip.tsx","webpack://superset/./src/components/ListView/CrossLinks.tsx","webpack://superset/./src/pages/ChartList/index.tsx"],"sourcesContent":["var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { RefObject, useLayoutEffect, useState, useRef } from 'react';\n\n/**\n * This hook encapsulates logic to support truncation of child HTML\n * elements contained in a fixed-width parent HTML element.  Given\n * a ref to the parent element and optionally a ref to the \"+x\"\n * component that shows the number of truncated items, this hook\n * will return the number of elements that are not fully visible\n * (including those completely hidden) and whether any elements\n * are completely hidden.\n */\nconst useChildElementTruncation = (\n  elementRef: RefObject<HTMLElement>,\n  plusRef?: RefObject<HTMLElement>,\n) => {\n  const [elementsTruncated, setElementsTruncated] = useState(0);\n  const [hasHiddenElements, setHasHiddenElements] = useState(false);\n\n  const previousEffectInfoRef = useRef({\n    scrollWidth: 0,\n    parentElementWidth: 0,\n    plusRefWidth: 0,\n  });\n\n  useLayoutEffect(() => {\n    const currentElement = elementRef.current;\n    const plusRefElement = plusRef?.current;\n\n    if (!currentElement) {\n      return;\n    }\n\n    const { scrollWidth, clientWidth, childNodes } = currentElement;\n\n    // By using the result of this effect to truncate content\n    // we're effectively changing it's size.\n    // That will trigger another pass at this effect.\n    // Depending on the content elements width, that second rerender could\n    // yield a different truncate count, thus potentially leading to a\n    // rendering loop.\n    // There's only a need to recompute if the parent width or the width of\n    // the child nodes changes.\n    const previousEffectInfo = previousEffectInfoRef.current;\n    const parentElementWidth = currentElement.parentElement?.clientWidth || 0;\n    const plusRefWidth = plusRefElement?.offsetWidth || 0;\n    previousEffectInfoRef.current = {\n      scrollWidth,\n      parentElementWidth,\n      plusRefWidth,\n    };\n\n    if (\n      previousEffectInfo.parentElementWidth === parentElementWidth &&\n      previousEffectInfo.scrollWidth === scrollWidth &&\n      previousEffectInfo.plusRefWidth === plusRefWidth\n    ) {\n      return;\n    }\n\n    if (scrollWidth > clientWidth) {\n      // \"...\" is around 6px wide\n      const truncationWidth = 6;\n      const plusSize = plusRefElement?.offsetWidth || 0;\n      const maxWidth = clientWidth - truncationWidth;\n      const elementsCount = childNodes.length;\n\n      let width = 0;\n      let hiddenElements = 0;\n      for (let i = 0; i < elementsCount; i += 1) {\n        const itemWidth = (childNodes[i] as HTMLElement).offsetWidth;\n        const remainingWidth = maxWidth - truncationWidth - width - plusSize;\n\n        // assures it shows +{number} only when the item is not visible\n        if (remainingWidth <= 0) {\n          hiddenElements += 1;\n        }\n        width += itemWidth;\n      }\n\n      if (elementsCount > 1 && hiddenElements) {\n        setHasHiddenElements(true);\n        setElementsTruncated(hiddenElements);\n      } else {\n        setHasHiddenElements(false);\n        setElementsTruncated(1);\n      }\n    } else {\n      setHasHiddenElements(false);\n      setElementsTruncated(0);\n    }\n  }, [\n    elementRef.current?.offsetWidth,\n    elementRef.current?.clientWidth,\n    elementRef,\n  ]);\n\n  return [elementsTruncated, hasHiddenElements];\n};\n\nexport default useChildElementTruncation;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useEffect, useState } from 'react';\nimport { UploadChangeParam, UploadFile } from 'antd/lib/upload/interface';\nimport { styled, t } from '@superset-ui/core';\n\nimport Button from 'src/components/Button';\nimport Modal from 'src/components/Modal';\nimport { Upload } from 'src/components';\nimport { useImportResource } from 'src/views/CRUD/hooks';\nimport { ImportResourceName } from 'src/views/CRUD/types';\nimport ErrorAlert from './ErrorAlert';\n\nconst HelperMessage = styled.div`\n  display: block;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n`;\n\nconst StyledInputContainer = styled.div`\n  padding-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n\n  & > div {\n    margin: ${({ theme }) => theme.gridUnit}px 0;\n  }\n\n  &.extra-container {\n    padding-top: 8px;\n  }\n\n  .confirm-overwrite {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .input-container {\n    display: flex;\n    align-items: center;\n\n    label {\n      display: flex;\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    i {\n      margin: 0 ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  textarea {\n    height: 160px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n\n  textarea,\n  input[type='text'],\n  input[type='number'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border-style: none;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n\n    &[name='name'] {\n      flex: 0 1 auto;\n      width: 40%;\n    }\n\n    &[name='sqlalchemy_uri'] {\n      margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    }\n  }\n`;\n\nexport interface ImportModelsModalProps {\n  resourceName: ImportResourceName;\n  resourceLabel: string;\n  passwordsNeededMessage: string;\n  confirmOverwriteMessage: string;\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  onModelImport: () => void;\n  show: boolean;\n  onHide: () => void;\n  passwordFields?: string[];\n  setPasswordFields?: (passwordFields: string[]) => void;\n  sshTunnelPasswordFields?: string[];\n  setSSHTunnelPasswordFields?: (sshTunnelPasswordFields: string[]) => void;\n  sshTunnelPrivateKeyFields?: string[];\n  setSSHTunnelPrivateKeyFields?: (sshTunnelPrivateKeyFields: string[]) => void;\n  sshTunnelPrivateKeyPasswordFields?: string[];\n  setSSHTunnelPrivateKeyPasswordFields?: (\n    sshTunnelPrivateKeyPasswordFields: string[],\n  ) => void;\n}\n\nconst ImportModelsModal: FunctionComponent<ImportModelsModalProps> = ({\n  resourceName,\n  resourceLabel,\n  passwordsNeededMessage,\n  confirmOverwriteMessage,\n  onModelImport,\n  show,\n  onHide,\n  passwordFields = [],\n  setPasswordFields = () => {},\n  sshTunnelPasswordFields = [],\n  setSSHTunnelPasswordFields = () => {},\n  sshTunnelPrivateKeyFields = [],\n  setSSHTunnelPrivateKeyFields = () => {},\n  sshTunnelPrivateKeyPasswordFields = [],\n  setSSHTunnelPrivateKeyPasswordFields = () => {},\n}) => {\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const [passwords, setPasswords] = useState<Record<string, string>>({});\n  const [needsOverwriteConfirm, setNeedsOverwriteConfirm] =\n    useState<boolean>(false);\n  const [confirmedOverwrite, setConfirmedOverwrite] = useState<boolean>(false);\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\n  const [importingModel, setImportingModel] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const [sshTunnelPasswords, setSSHTunnelPasswords] = useState<\n    Record<string, string>\n  >({});\n  const [sshTunnelPrivateKeys, setSSHTunnelPrivateKeys] = useState<\n    Record<string, string>\n  >({});\n  const [sshTunnelPrivateKeyPasswords, setSSHTunnelPrivateKeyPasswords] =\n    useState<Record<string, string>>({});\n\n  const clearModal = () => {\n    setFileList([]);\n    setPasswordFields([]);\n    setPasswords({});\n    setNeedsOverwriteConfirm(false);\n    setConfirmedOverwrite(false);\n    setImportingModel(false);\n    setErrorMessage('');\n    setSSHTunnelPasswordFields([]);\n    setSSHTunnelPrivateKeyFields([]);\n    setSSHTunnelPrivateKeyPasswordFields([]);\n    setSSHTunnelPasswords({});\n    setSSHTunnelPrivateKeys({});\n    setSSHTunnelPrivateKeyPasswords({});\n  };\n\n  const handleErrorMsg = (msg: string) => {\n    setErrorMessage(msg);\n  };\n\n  const {\n    state: {\n      alreadyExists,\n      passwordsNeeded,\n      sshPasswordNeeded,\n      sshPrivateKeyNeeded,\n      sshPrivateKeyPasswordNeeded,\n    },\n    importResource,\n  } = useImportResource(resourceName, resourceLabel, handleErrorMsg);\n\n  useEffect(() => {\n    setPasswordFields(passwordsNeeded);\n    if (passwordsNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [passwordsNeeded, setPasswordFields]);\n\n  useEffect(() => {\n    setNeedsOverwriteConfirm(alreadyExists.length > 0);\n    if (alreadyExists.length > 0) {\n      setImportingModel(false);\n    }\n  }, [alreadyExists, setNeedsOverwriteConfirm]);\n\n  useEffect(() => {\n    setSSHTunnelPasswordFields(sshPasswordNeeded);\n    if (sshPasswordNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPasswordNeeded, setSSHTunnelPasswordFields]);\n\n  useEffect(() => {\n    setSSHTunnelPrivateKeyFields(sshPrivateKeyNeeded);\n    if (sshPrivateKeyNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPrivateKeyNeeded, setSSHTunnelPrivateKeyFields]);\n\n  useEffect(() => {\n    setSSHTunnelPrivateKeyPasswordFields(sshPrivateKeyPasswordNeeded);\n    if (sshPrivateKeyPasswordNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPrivateKeyPasswordNeeded, setSSHTunnelPrivateKeyPasswordFields]);\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    onHide();\n    clearModal();\n  };\n\n  const onUpload = () => {\n    if (!(fileList[0]?.originFileObj instanceof File)) {\n      return;\n    }\n\n    setImportingModel(true);\n    importResource(\n      fileList[0].originFileObj,\n      passwords,\n      sshTunnelPasswords,\n      sshTunnelPrivateKeys,\n      sshTunnelPrivateKeyPasswords,\n      confirmedOverwrite,\n    ).then(result => {\n      if (result) {\n        clearModal();\n        onModelImport();\n      }\n    });\n  };\n\n  const changeFile = (info: UploadChangeParam) => {\n    setFileList([\n      {\n        ...info.file,\n        status: 'done',\n      },\n    ]);\n  };\n\n  const removeFile = (removedFile: UploadFile) => {\n    setFileList(fileList.filter(file => file.uid !== removedFile.uid));\n    return false;\n  };\n\n  const confirmOverwrite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const targetValue = (event.currentTarget?.value as string) ?? '';\n    setConfirmedOverwrite(targetValue.toUpperCase() === t('OVERWRITE'));\n  };\n\n  const renderPasswordFields = () => {\n    if (\n      passwordFields.length === 0 &&\n      sshTunnelPasswordFields.length === 0 &&\n      sshTunnelPrivateKeyFields.length === 0 &&\n      sshTunnelPrivateKeyPasswordFields.length === 0\n    ) {\n      return null;\n    }\n\n    const files = [\n      ...new Set([\n        ...passwordFields,\n        ...sshTunnelPasswordFields,\n        ...sshTunnelPrivateKeyFields,\n        ...sshTunnelPrivateKeyPasswordFields,\n      ]),\n    ];\n\n    return (\n      <>\n        <h5>{t('Database passwords')}</h5>\n        <HelperMessage>{passwordsNeededMessage}</HelperMessage>\n        {files.map(fileName => (\n          <>\n            {passwordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer key={`password-for-${fileName}`}>\n                <div className=\"control-label\">\n                  {t('%s PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`password-${fileName}`}\n                  autoComplete={`password-${fileName}`}\n                  type=\"password\"\n                  value={passwords[fileName]}\n                  onChange={event =>\n                    setPasswords({\n                      ...passwords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPasswordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer key={`ssh_tunnel_password-for-${fileName}`}>\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`ssh_tunnel_password-${fileName}`}\n                  autoComplete={`ssh_tunnel_password-${fileName}`}\n                  type=\"password\"\n                  value={sshTunnelPasswords[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPasswords({\n                      ...sshTunnelPasswords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_password\"\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPrivateKeyFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer\n                key={`ssh_tunnel_private_key-for-${fileName}`}\n              >\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PRIVATE KEY', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <textarea\n                  name={`ssh_tunnel_private_key-${fileName}`}\n                  autoComplete={`ssh_tunnel_private_key-${fileName}`}\n                  value={sshTunnelPrivateKeys[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPrivateKeys({\n                      ...sshTunnelPrivateKeys,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_private_key\"\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPrivateKeyPasswordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer\n                key={`ssh_tunnel_private_key_password-for-${fileName}`}\n              >\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PRIVATE KEY PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`ssh_tunnel_private_key_password-${fileName}`}\n                  autoComplete={`ssh_tunnel_private_key_password-${fileName}`}\n                  type=\"password\"\n                  value={sshTunnelPrivateKeyPasswords[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPrivateKeyPasswords({\n                      ...sshTunnelPrivateKeyPasswords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_private_key_password\"\n                />\n              </StyledInputContainer>\n            )}\n          </>\n        ))}\n      </>\n    );\n  };\n\n  const renderOverwriteConfirmation = () => {\n    if (!needsOverwriteConfirm) {\n      return null;\n    }\n\n    return (\n      <>\n        <StyledInputContainer>\n          <div className=\"confirm-overwrite\">{confirmOverwriteMessage}</div>\n          <div className=\"control-label\">\n            {t('Type \"%s\" to confirm', t('OVERWRITE'))}\n          </div>\n          <input\n            data-test=\"overwrite-modal-input\"\n            id=\"overwrite\"\n            type=\"text\"\n            onChange={confirmOverwrite}\n          />\n        </StyledInputContainer>\n      </>\n    );\n  };\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      name=\"model\"\n      className=\"import-model-modal\"\n      disablePrimaryButton={\n        fileList.length === 0 ||\n        (needsOverwriteConfirm && !confirmedOverwrite) ||\n        importingModel\n      }\n      onHandledPrimaryAction={onUpload}\n      onHide={hide}\n      primaryButtonName={needsOverwriteConfirm ? t('Overwrite') : t('Import')}\n      primaryButtonType={needsOverwriteConfirm ? 'danger' : 'primary'}\n      width=\"750px\"\n      show={show}\n      title={<h4>{t('Import %s', resourceLabel)}</h4>}\n    >\n      <StyledInputContainer>\n        <Upload\n          name=\"modelFile\"\n          id=\"modelFile\"\n          data-test=\"model-file-input\"\n          accept=\".yaml,.json,.yml,.zip\"\n          fileList={fileList}\n          onChange={changeFile}\n          onRemove={removeFile}\n          // upload is handled by hook\n          customRequest={() => {}}\n          disabled={importingModel}\n        >\n          <Button loading={importingModel}>{t('Select file')}</Button>\n        </Upload>\n      </StyledInputContainer>\n      {errorMessage && (\n        <ErrorAlert\n          errorMessage={errorMessage}\n          showDbInstallInstructions={\n            passwordFields.length > 0 ||\n            sshTunnelPasswordFields.length > 0 ||\n            sshTunnelPrivateKeyFields.length > 0 ||\n            sshTunnelPrivateKeyPasswordFields.length > 0\n          }\n        />\n      )}\n      {renderPasswordFields()}\n      {renderOverwriteConfirmation()}\n    </Modal>\n  );\n};\n\nexport default ImportModelsModal;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport AntdTag from 'antd/lib/tag';\nimport React, { useMemo } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\n\nconst StyledTag = styled(AntdTag)`\n  ${({ theme }) => `\n  margin-top: ${theme.gridUnit}px;\n  margin-bottom: ${theme.gridUnit}px;\n  font-size: ${theme.typography.sizes.s}px;\n  `};\n`;\n\nconst Tag = ({\n  name,\n  id,\n  index = undefined,\n  onDelete = undefined,\n  editable = false,\n  onClick = undefined,\n}: TagType) => {\n  const isLongTag = useMemo(() => name.length > 20, [name]);\n\n  const handleClose = () => (index ? onDelete?.(index) : null);\n\n  const tagElem = (\n    <>\n      {editable ? (\n        <StyledTag\n          key={id}\n          closable={editable}\n          onClose={handleClose}\n          color=\"blue\"\n        >\n          {isLongTag ? `${name.slice(0, 20)}...` : name}\n        </StyledTag>\n      ) : (\n        <StyledTag role=\"link\" key={id} onClick={onClick}>\n          {id ? (\n            <a\n              href={`/superset/all_entities/?tags=${name}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {isLongTag ? `${name.slice(0, 20)}...` : name}\n            </a>\n          ) : isLongTag ? (\n            `${name.slice(0, 20)}...`\n          ) : (\n            name\n          )}\n        </StyledTag>\n      )}\n    </>\n  );\n\n  return isLongTag ? (\n    <Tooltip title={name} key={name}>\n      {tagElem}\n    </Tooltip>\n  ) : (\n    tagElem\n  );\n};\n\nexport default Tag;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport Tag from './Tag';\n\nexport type TagsListProps = {\n  tags: TagType[];\n  editable?: boolean;\n  /**\n   * OnDelete:\n   * Only applies when editable is true\n   * Callback for when a tag is deleted\n   */\n  onDelete?: ((index: number) => void) | undefined;\n  maxTags?: number | undefined;\n};\n\nconst TagsDiv = styled.div`\n  max-width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nconst TagsList = ({\n  tags,\n  editable = false,\n  onDelete,\n  maxTags,\n}: TagsListProps) => {\n  const [tempMaxTags, setTempMaxTags] = useState<number | undefined>(maxTags);\n\n  const handleDelete = (index: number) => {\n    onDelete?.(index);\n  };\n\n  const expand = () => setTempMaxTags(undefined);\n\n  const collapse = () => setTempMaxTags(maxTags);\n\n  const tagsIsLong: boolean | null = useMemo(\n    () => (tempMaxTags ? tags.length > tempMaxTags : null),\n    [tags.length, tempMaxTags],\n  );\n\n  const extraTags: number | null = useMemo(\n    () =>\n      typeof tempMaxTags === 'number' ? tags.length - tempMaxTags + 1 : null,\n    [tagsIsLong, tags.length, tempMaxTags],\n  );\n\n  return (\n    <TagsDiv className=\"tag-list\">\n      {tagsIsLong && typeof tempMaxTags === 'number' ? (\n        <>\n          {tags.slice(0, tempMaxTags - 1).map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {tags.length > tempMaxTags ? (\n            <Tag name={`+${extraTags}...`} onClick={expand} />\n          ) : null}\n        </>\n      ) : (\n        <>\n          {tags.map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {maxTags ? (\n            tags.length > maxTags ? (\n              <Tag name=\"...\" onClick={collapse} />\n            ) : null\n          ) : null}\n        </>\n      )}\n    </TagsDiv>\n  );\n};\n\nexport default TagsList;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { Link } from 'react-router-dom';\n\nexport type CrossLinksTooltipProps = {\n  children: React.ReactNode;\n  crossLinks: { to: string; title: string }[];\n  moreItems?: number;\n  show: boolean;\n};\n\nconst StyledLinkedTooltip = styled.div`\n  .link {\n    color: ${({ theme }) => theme.colors.grayscale.light5};\n    display: block;\n    text-decoration: underline;\n  }\n`;\n\nexport default function CrossLinksTooltip({\n  children,\n  crossLinks = [],\n  moreItems = undefined,\n  show = false,\n}: CrossLinksTooltipProps) {\n  return (\n    <Tooltip\n      placement=\"top\"\n      data-test=\"crosslinks-tooltip\"\n      title={\n        show && (\n          <StyledLinkedTooltip>\n            {crossLinks.map(link => (\n              <Link\n                className=\"link\"\n                key={link.to}\n                to={link.to}\n                target=\"_blank\"\n                rel=\"noreferer noopener\"\n              >\n                {link.title}\n              </Link>\n            ))}\n            {moreItems && (\n              <span data-test=\"plus-more\">{t('+ %s more', moreItems)}</span>\n            )}\n          </StyledLinkedTooltip>\n        )\n      }\n    >\n      {children}\n    </Tooltip>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useRef } from 'react';\nimport { styled, useTruncation } from '@superset-ui/core';\nimport { Link } from 'react-router-dom';\nimport CrossLinksTooltip from './CrossLinksTooltip';\n\nexport type CrossLinkProps = {\n  title: string;\n  id: number;\n};\n\nexport type CrossLinksProps = {\n  crossLinks: Array<CrossLinkProps>;\n  maxLinks?: number;\n  linkPrefix?: string;\n};\n\nconst StyledCrossLinks = styled.div`\n  ${({ theme }) => `\n    & > span {\n      width: 100%;\n      display: flex;\n\n      .ant-tooltip-open {\n        display: inline;\n      }\n\n      .truncated {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        display: inline-block;\n        width: 100%;\n        vertical-align: bottom;\n      }\n\n      .count {\n        cursor: pointer;\n        color: ${theme.colors.grayscale.base};\n        font-weight: ${theme.typography.weights.bold};\n      }\n    }\n  `}\n`;\n\nexport default function CrossLinks({\n  crossLinks,\n  maxLinks = 20,\n  linkPrefix = '/superset/dashboard/',\n}: CrossLinksProps) {\n  const crossLinksRef = useRef<HTMLDivElement>(null);\n  const plusRef = useRef<HTMLDivElement>(null);\n  const [elementsTruncated, hasHiddenElements] = useTruncation(\n    crossLinksRef,\n    plusRef,\n  );\n  const hasMoreItems = useMemo(\n    () =>\n      crossLinks.length > maxLinks ? crossLinks.length - maxLinks : undefined,\n    [crossLinks, maxLinks],\n  );\n  const links = useMemo(\n    () => (\n      <span className=\"truncated\" ref={crossLinksRef} data-test=\"crosslinks\">\n        {crossLinks.map((link, index) => (\n          <Link\n            key={link.id}\n            to={linkPrefix + link.id}\n            target=\"_blank\"\n            rel=\"noreferer noopener\"\n          >\n            {index === 0 ? link.title : `, ${link.title}`}\n          </Link>\n        ))}\n      </span>\n    ),\n    [crossLinks],\n  );\n  const tooltipLinks = useMemo(\n    () =>\n      crossLinks.slice(0, maxLinks).map(l => ({\n        title: l.title,\n        to: linkPrefix + l.id,\n      })),\n    [crossLinks, maxLinks],\n  );\n\n  return (\n    <StyledCrossLinks>\n      <CrossLinksTooltip\n        moreItems={hasMoreItems}\n        crossLinks={tooltipLinks}\n        show={!!elementsTruncated}\n      >\n        {links}\n        {hasHiddenElements && (\n          <span ref={plusRef} className=\"count\" data-test=\"count-crosslinks\">\n            +{elementsTruncated}\n          </span>\n        )}\n      </CrossLinksTooltip>\n    </StyledCrossLinks>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ensureIsArray,\n  isFeatureEnabled,\n  FeatureFlag,\n  getChartMetadataRegistry,\n  JsonResponse,\n  styled,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport rison from 'rison';\nimport { uniqBy } from 'lodash';\nimport moment from 'moment';\nimport {\n  createErrorHandler,\n  createFetchRelated,\n  handleChartDelete,\n} from 'src/views/CRUD/utils';\nimport {\n  useChartEditModal,\n  useFavoriteStatus,\n  useListViewResource,\n} from 'src/views/CRUD/hooks';\nimport handleResourceExport from 'src/utils/export';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport { TagsList } from 'src/components/Tags';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport FaveStar from 'src/components/FaveStar';\nimport { Link, useHistory } from 'react-router-dom';\nimport ListView, {\n  Filter,\n  FilterOperator,\n  Filters,\n  ListViewProps,\n  SelectOption,\n} from 'src/components/ListView';\nimport CrossLinks from 'src/components/ListView/CrossLinks';\nimport Loading from 'src/components/Loading';\nimport { dangerouslyGetItemDoNotUse } from 'src/utils/localStorageHelpers';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport PropertiesModal from 'src/explore/components/PropertiesModal';\nimport ImportModelsModal from 'src/components/ImportModal/index';\nimport Chart, { ChartLinkedDashboard } from 'src/types/Chart';\nimport Tag from 'src/types/TagType';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { nativeFilterGate } from 'src/dashboard/components/nativeFilters/utils';\nimport setupPlugins from 'src/setup/setupPlugins';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport CertifiedBadge from 'src/components/CertifiedBadge';\nimport { GenericLink } from 'src/components/GenericLink/GenericLink';\nimport Owner from 'src/types/Owner';\nimport { loadTags } from 'src/components/Tags/utils';\nimport ChartCard from 'src/features/charts/ChartCard';\n\nconst FlexRowContainer = styled.div`\n  align-items: center;\n  display: flex;\n\n  a {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    line-height: 1.2;\n  }\n\n  svg {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst PAGE_SIZE = 25;\nconst PASSWORDS_NEEDED_MESSAGE = t(\n  'The passwords for the databases below are needed in order to ' +\n    'import them together with the charts. Please note that the ' +\n    '\"Secure Extra\" and \"Certificate\" sections of ' +\n    'the database configuration are not present in export files, and ' +\n    'should be added manually after the import if they are needed.',\n);\nconst CONFIRM_OVERWRITE_MESSAGE = t(\n  'You are importing one or more charts that already exist. ' +\n    'Overwriting might cause you to lose some of your work. Are you ' +\n    'sure you want to overwrite?',\n);\n\nsetupPlugins();\nconst registry = getChartMetadataRegistry();\n\nconst createFetchDatasets = async (\n  filterValue = '',\n  page: number,\n  pageSize: number,\n) => {\n  // add filters if filterValue\n  const filters = filterValue\n    ? { filters: [{ col: 'table_name', opr: 'sw', value: filterValue }] }\n    : {};\n  const queryParams = rison.encode({\n    columns: ['datasource_name', 'datasource_id'],\n    keys: ['none'],\n    order_column: 'table_name',\n    order_direction: 'asc',\n    page,\n    page_size: pageSize,\n    ...filters,\n  });\n\n  const { json = {} } = await SupersetClient.get({\n    endpoint: `/api/v1/dataset/?q=${queryParams}`,\n  });\n\n  const datasets = json?.result?.map(\n    ({ table_name: tableName, id }: { table_name: string; id: number }) => ({\n      label: tableName,\n      value: id,\n    }),\n  );\n\n  return {\n    data: uniqBy<SelectOption>(datasets, 'value'),\n    totalCount: json?.count,\n  };\n};\n\ninterface ChartListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nconst StyledActions = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nfunction ChartList(props: ChartListProps) {\n  const {\n    addDangerToast,\n    addSuccessToast,\n    user: { userId },\n  } = props;\n\n  const history = useHistory();\n\n  const {\n    state: {\n      loading,\n      resourceCount: chartCount,\n      resourceCollection: charts,\n      bulkSelectEnabled,\n    },\n    setResourceCollection: setCharts,\n    hasPerm,\n    fetchData,\n    toggleBulkSelect,\n    refreshData,\n  } = useListViewResource<Chart>('chart', t('chart'), addDangerToast);\n\n  const chartIds = useMemo(() => charts.map(c => c.id), [charts]);\n\n  const [saveFavoriteStatus, favoriteStatus] = useFavoriteStatus(\n    'chart',\n    chartIds,\n    addDangerToast,\n  );\n  const {\n    sliceCurrentlyEditing,\n    handleChartUpdated,\n    openChartEditModal,\n    closeChartEditModal,\n  } = useChartEditModal(setCharts, charts);\n\n  const [importingChart, showImportModal] = useState<boolean>(false);\n  const [passwordFields, setPasswordFields] = useState<string[]>([]);\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n  const [sshTunnelPasswordFields, setSSHTunnelPasswordFields] = useState<\n    string[]\n  >([]);\n  const [sshTunnelPrivateKeyFields, setSSHTunnelPrivateKeyFields] = useState<\n    string[]\n  >([]);\n  const [\n    sshTunnelPrivateKeyPasswordFields,\n    setSSHTunnelPrivateKeyPasswordFields,\n  ] = useState<string[]>([]);\n\n  // TODO: Fix usage of localStorage keying on the user id\n  const userSettings = dangerouslyGetItemDoNotUse(userId?.toString(), null) as {\n    thumbnails: boolean;\n  };\n\n  const openChartImportModal = () => {\n    showImportModal(true);\n  };\n\n  const closeChartImportModal = () => {\n    showImportModal(false);\n  };\n\n  const handleChartImport = () => {\n    showImportModal(false);\n    refreshData();\n    addSuccessToast(t('Chart imported'));\n  };\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport =\n    hasPerm('can_export') && isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT);\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n  const handleBulkChartExport = (chartsToExport: Chart[]) => {\n    const ids = chartsToExport.map(({ id }) => id);\n    handleResourceExport('chart', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n  const changedByName = (lastSavedBy: Owner) =>\n    lastSavedBy?.first_name\n      ? `${lastSavedBy?.first_name} ${lastSavedBy?.last_name}`\n      : null;\n\n  function handleBulkChartDelete(chartsToDelete: Chart[]) {\n    SupersetClient.delete({\n      endpoint: `/api/v1/chart/?q=${rison.encode(\n        chartsToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected charts: %s', errMsg),\n        ),\n      ),\n    );\n  }\n  const fetchDashboards = async (\n    filterValue = '',\n    page: number,\n    pageSize: number,\n  ) => {\n    // add filters if filterValue\n    const filters = filterValue\n      ? {\n          filters: [\n            {\n              col: 'dashboard_title',\n              opr: FilterOperator.startsWith,\n              value: filterValue,\n            },\n          ],\n        }\n      : {};\n    const queryParams = rison.encode({\n      columns: ['dashboard_title', 'id'],\n      keys: ['none'],\n      order_column: 'dashboard_title',\n      order_direction: 'asc',\n      page,\n      page_size: pageSize,\n      ...filters,\n    });\n    const response: void | JsonResponse = await SupersetClient.get({\n      endpoint: `/api/v1/dashboard/?q=${queryParams}`,\n    }).catch(() =>\n      addDangerToast(t('An error occurred while fetching dashboards')),\n    );\n    const dashboards = response?.json?.result?.map(\n      ({\n        dashboard_title: dashboardTitle,\n        id,\n      }: {\n        dashboard_title: string;\n        id: number;\n      }) => ({\n        label: dashboardTitle,\n        value: id,\n      }),\n    );\n    return {\n      data: uniqBy<SelectOption>(dashboards, 'value'),\n      totalCount: response?.json?.count,\n    };\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { id },\n          },\n        }: any) =>\n          userId && (\n            <FaveStar\n              itemId={id}\n              saveFaveStar={saveFavoriteStatus}\n              isStarred={favoriteStatus[id]}\n            />\n          ),\n        Header: '',\n        id: 'id',\n        disableSortBy: true,\n        size: 'xs',\n        hidden: !userId,\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              url,\n              slice_name: sliceName,\n              certified_by: certifiedBy,\n              certification_details: certificationDetails,\n              description,\n            },\n          },\n        }: any) => (\n          <FlexRowContainer>\n            <Link to={url} data-test={`${sliceName}-list-chart-title`}>\n              {certifiedBy && (\n                <>\n                  <CertifiedBadge\n                    certifiedBy={certifiedBy}\n                    details={certificationDetails}\n                  />{' '}\n                </>\n              )}\n              {sliceName}\n            </Link>\n            {description && (\n              <InfoTooltip tooltip={description} viewBox=\"0 -1 24 24\" />\n            )}\n          </FlexRowContainer>\n        ),\n        Header: t('Chart'),\n        accessor: 'slice_name',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { viz_type: vizType },\n          },\n        }: any) => registry.get(vizType)?.name || vizType,\n        Header: t('Visualization type'),\n        accessor: 'viz_type',\n        size: 'xxl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              datasource_name_text: dsNameTxt,\n              datasource_url: dsUrl,\n            },\n          },\n        }: any) => <GenericLink to={dsUrl}>{dsNameTxt}</GenericLink>,\n        Header: t('Dataset'),\n        accessor: 'datasource_id',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { dashboards },\n          },\n        }: any) => (\n          <CrossLinks\n            crossLinks={ensureIsArray(dashboards).map(\n              (d: ChartLinkedDashboard) => ({\n                title: d.dashboard_title,\n                id: d.id,\n              }),\n            )}\n          />\n        ),\n        Header: t('Dashboards added to'),\n        accessor: 'dashboards',\n        disableSortBy: true,\n        size: 'xxl',\n        hidden: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { last_saved_by: lastSavedBy },\n          },\n        }: any) => <>{changedByName(lastSavedBy)}</>,\n        Header: t('Modified by'),\n        accessor: 'last_saved_by.first_name',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { last_saved_at: lastSavedAt },\n          },\n        }: any) => (\n          <span className=\"no-wrap\">\n            {lastSavedAt ? moment.utc(lastSavedAt).fromNow() : null}\n          </span>\n        ),\n        Header: t('Last modified'),\n        accessor: 'last_saved_at',\n        size: 'xl',\n      },\n      {\n        accessor: 'owners',\n        hidden: true,\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_by: createdBy },\n          },\n        }: any) =>\n          createdBy ? `${createdBy.first_name} ${createdBy.last_name}` : '',\n        Header: t('Created by'),\n        accessor: 'created_by',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { tags = [] },\n          },\n        }: any) => (\n          // Only show custom type tags\n          <TagsList\n            tags={tags.filter((tag: Tag) =>\n              tag.type\n                ? tag.type === 1 || tag.type === 'TagTypes.custom'\n                : true,\n            )}\n            maxTags={3}\n          />\n        ),\n        Header: t('Tags'),\n        accessor: 'tags',\n        disableSortBy: true,\n        hidden: !isFeatureEnabled(FeatureFlag.TAGGING_SYSTEM),\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleDelete = () =>\n            handleChartDelete(\n              original,\n              addSuccessToast,\n              addDangerToast,\n              refreshData,\n            );\n          const openEditModal = () => openChartEditModal(original);\n          const handleExport = () => handleBulkChartExport([original]);\n          if (!canEdit && !canDelete && !canExport) {\n            return null;\n          }\n\n          return (\n            <StyledActions className=\"actions\">\n              {canDelete && (\n                <ConfirmStatusChange\n                  title={t('Please confirm')}\n                  description={\n                    <>\n                      {t('Are you sure you want to delete')}{' '}\n                      <b>{original.slice_name}</b>?\n                    </>\n                  }\n                  onConfirm={handleDelete}\n                >\n                  {confirmDelete => (\n                    <Tooltip\n                      id=\"delete-action-tooltip\"\n                      title={t('Delete')}\n                      placement=\"bottom\"\n                    >\n                      <span\n                        data-test=\"trash\"\n                        role=\"button\"\n                        tabIndex={0}\n                        className=\"action-button\"\n                        onClick={confirmDelete}\n                      >\n                        <Icons.Trash />\n                      </span>\n                    </Tooltip>\n                  )}\n                </ConfirmStatusChange>\n              )}\n              {canExport && (\n                <Tooltip\n                  id=\"export-action-tooltip\"\n                  title={t('Export')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleExport}\n                  >\n                    <Icons.Share />\n                  </span>\n                </Tooltip>\n              )}\n              {canEdit && (\n                <Tooltip\n                  id=\"edit-action-tooltip\"\n                  title={t('Edit')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={openEditModal}\n                  >\n                    <Icons.EditAlt data-test=\"edit-alt\" />\n                  </span>\n                </Tooltip>\n              )}\n            </StyledActions>\n          );\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        hidden: !canEdit && !canDelete,\n      },\n    ],\n    [\n      userId,\n      canEdit,\n      canDelete,\n      canExport,\n      saveFavoriteStatus,\n      favoriteStatus,\n      refreshData,\n      addSuccessToast,\n      addDangerToast,\n    ],\n  );\n\n  const favoritesFilter: Filter = useMemo(\n    () => ({\n      Header: t('Favorite'),\n      key: 'favorite',\n      id: 'id',\n      urlDisplay: 'favorite',\n      input: 'select',\n      operator: FilterOperator.chartIsFav,\n      unfilteredLabel: t('Any'),\n      selects: [\n        { label: t('Yes'), value: true },\n        { label: t('No'), value: false },\n      ],\n    }),\n    [],\n  );\n\n  const filters: Filters = useMemo(() => {\n    const filters_list = [\n      {\n        Header: t('Owner'),\n        key: 'owner',\n        id: 'owners',\n        input: 'select',\n        operator: FilterOperator.relationManyMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'chart',\n          'owners',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t(\n                'An error occurred while fetching chart owners values: %s',\n                errMsg,\n              ),\n            ),\n          ),\n          props.user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Created by'),\n        key: 'created_by',\n        id: 'created_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'chart',\n          'created_by',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t(\n                'An error occurred while fetching chart created by values: %s',\n                errMsg,\n              ),\n            ),\n          ),\n          props.user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Chart type'),\n        key: 'viz_type',\n        id: 'viz_type',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: t('All'),\n        selects: registry\n          .keys()\n          .filter(k => nativeFilterGate(registry.get(k)?.behaviors || []))\n          .map(k => ({ label: registry.get(k)?.name || k, value: k }))\n          .sort((a, b) => {\n            if (!a.label || !b.label) {\n              return 0;\n            }\n\n            if (a.label > b.label) {\n              return 1;\n            }\n            if (a.label < b.label) {\n              return -1;\n            }\n\n            return 0;\n          }),\n      },\n      {\n        Header: t('Dataset'),\n        key: 'dataset',\n        id: 'datasource_id',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchDatasets,\n        paginate: true,\n      },\n      {\n        Header: t('Dashboards'),\n        key: 'dashboards',\n        id: 'dashboards',\n        input: 'select',\n        operator: FilterOperator.relationManyMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: fetchDashboards,\n        paginate: true,\n      },\n      ...(userId ? [favoritesFilter] : []),\n      {\n        Header: t('Certified'),\n        key: 'certified',\n        id: 'id',\n        urlDisplay: 'certified',\n        input: 'select',\n        operator: FilterOperator.chartIsCertified,\n        unfilteredLabel: t('Any'),\n        selects: [\n          { label: t('Yes'), value: true },\n          { label: t('No'), value: false },\n        ],\n      },\n    ] as Filters;\n    if (isFeatureEnabled(FeatureFlag.TAGGING_SYSTEM)) {\n      filters_list.push({\n        Header: t('Tags'),\n        key: 'tags',\n        id: 'tags',\n        input: 'select',\n        operator: FilterOperator.chartTags,\n        unfilteredLabel: t('All'),\n        fetchSelects: loadTags,\n      });\n    }\n    filters_list.push({\n      Header: t('Search'),\n      key: 'search',\n      id: 'slice_name',\n      input: 'search',\n      operator: FilterOperator.chartAllText,\n    });\n    return filters_list;\n  }, [addDangerToast, favoritesFilter, props.user]);\n\n  const sortTypes = [\n    {\n      desc: false,\n      id: 'slice_name',\n      label: t('Alphabetical'),\n      value: 'alphabetical',\n    },\n    {\n      desc: true,\n      id: 'changed_on_delta_humanized',\n      label: t('Recently modified'),\n      value: 'recently_modified',\n    },\n    {\n      desc: false,\n      id: 'changed_on_delta_humanized',\n      label: t('Least recently modified'),\n      value: 'least_recently_modified',\n    },\n  ];\n\n  const renderCard = useCallback(\n    (chart: Chart) => (\n      <ChartCard\n        chart={chart}\n        showThumbnails={\n          userSettings\n            ? userSettings.thumbnails\n            : isFeatureEnabled(FeatureFlag.THUMBNAILS)\n        }\n        hasPerm={hasPerm}\n        openChartEditModal={openChartEditModal}\n        bulkSelectEnabled={bulkSelectEnabled}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        refreshData={refreshData}\n        userId={userId}\n        loading={loading}\n        favoriteStatus={favoriteStatus[chart.id]}\n        saveFavoriteStatus={saveFavoriteStatus}\n        handleBulkChartExport={handleBulkChartExport}\n      />\n    ),\n    [\n      addDangerToast,\n      addSuccessToast,\n      bulkSelectEnabled,\n      favoriteStatus,\n      hasPerm,\n      loading,\n    ],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n  if (canDelete || canExport) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select',\n      onClick: toggleBulkSelect,\n    });\n  }\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('Chart')}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        history.push('/chart/add');\n      },\n    });\n\n    if (isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT)) {\n      subMenuButtons.push({\n        name: (\n          <Tooltip\n            id=\"import-tooltip\"\n            title={t('Import charts')}\n            placement=\"bottomRight\"\n          >\n            <Icons.Import data-test=\"import-button\" />\n          </Tooltip>\n        ),\n        buttonStyle: 'link',\n        onClick: openChartImportModal,\n      });\n    }\n  }\n\n  return (\n    <>\n      <SubMenu name={t('Charts')} buttons={subMenuButtons} />\n      {sliceCurrentlyEditing && (\n        <PropertiesModal\n          onHide={closeChartEditModal}\n          onSave={handleChartUpdated}\n          show\n          slice={sliceCurrentlyEditing}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected charts?')}\n        onConfirm={handleBulkChartDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [];\n          if (canDelete) {\n            bulkActions.push({\n              key: 'delete',\n              name: t('Delete'),\n              type: 'danger',\n              onSelect: confirmDelete,\n            });\n          }\n          if (canExport) {\n            bulkActions.push({\n              key: 'export',\n              name: t('Export'),\n              type: 'primary',\n              onSelect: handleBulkChartExport,\n            });\n          }\n          return (\n            <ListView<Chart>\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              cardSortSelectOptions={sortTypes}\n              className=\"chart-list-view\"\n              columns={columns}\n              count={chartCount}\n              data={charts}\n              disableBulkSelect={toggleBulkSelect}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              renderCard={renderCard}\n              showThumbnails={\n                userSettings\n                  ? userSettings.thumbnails\n                  : isFeatureEnabled(FeatureFlag.THUMBNAILS)\n              }\n              defaultViewMode={\n                isFeatureEnabled(FeatureFlag.LISTVIEWS_DEFAULT_CARD_VIEW)\n                  ? 'card'\n                  : 'table'\n              }\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n\n      <ImportModelsModal\n        resourceName=\"chart\"\n        resourceLabel={t('chart')}\n        passwordsNeededMessage={PASSWORDS_NEEDED_MESSAGE}\n        confirmOverwriteMessage={CONFIRM_OVERWRITE_MESSAGE}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onModelImport={handleChartImport}\n        show={importingChart}\n        onHide={closeChartImportModal}\n        passwordFields={passwordFields}\n        setPasswordFields={setPasswordFields}\n        sshTunnelPasswordFields={sshTunnelPasswordFields}\n        setSSHTunnelPasswordFields={setSSHTunnelPasswordFields}\n        sshTunnelPrivateKeyFields={sshTunnelPrivateKeyFields}\n        setSSHTunnelPrivateKeyFields={setSSHTunnelPrivateKeyFields}\n        sshTunnelPrivateKeyPasswordFields={sshTunnelPrivateKeyPasswordFields}\n        setSSHTunnelPrivateKeyPasswordFields={\n          setSSHTunnelPrivateKeyPasswordFields\n        }\n      />\n      {preparingExport && <Loading />}\n    </>\n  );\n}\n\nexport default withToasts(ChartList);\n"],"names":["baseIteratee","baseUniq","module","exports","array","iteratee","length","elementRef","plusRef","elementsTruncated","setElementsTruncated","useState","hasHiddenElements","setHasHiddenElements","previousEffectInfoRef","useRef","scrollWidth","parentElementWidth","plusRefWidth","useLayoutEffect","currentElement","current","plusRefElement","clientWidth","childNodes","previousEffectInfo","parentElement","offsetWidth","truncationWidth","plusSize","maxWidth","elementsCount","width","hiddenElements","i","itemWidth","HelperMessage","styled","theme","colors","grayscale","base","typography","sizes","s","StyledInputContainer","gridUnit","light1","light2","resourceName","resourceLabel","passwordsNeededMessage","confirmOverwriteMessage","onModelImport","show","onHide","passwordFields","setPasswordFields","sshTunnelPasswordFields","setSSHTunnelPasswordFields","sshTunnelPrivateKeyFields","setSSHTunnelPrivateKeyFields","sshTunnelPrivateKeyPasswordFields","setSSHTunnelPrivateKeyPasswordFields","isHidden","setIsHidden","passwords","setPasswords","needsOverwriteConfirm","setNeedsOverwriteConfirm","confirmedOverwrite","setConfirmedOverwrite","fileList","setFileList","importingModel","setImportingModel","errorMessage","setErrorMessage","sshTunnelPasswords","setSSHTunnelPasswords","sshTunnelPrivateKeys","setSSHTunnelPrivateKeys","sshTunnelPrivateKeyPasswords","setSSHTunnelPrivateKeyPasswords","clearModal","state","alreadyExists","passwordsNeeded","sshPasswordNeeded","sshPrivateKeyNeeded","sshPrivateKeyPasswordNeeded","importResource","useImportResource","msg","useEffect","name","className","disablePrimaryButton","onHandledPrimaryAction","originFileObj","File","then","result","primaryButtonName","t","primaryButtonType","title","id","accept","onChange","info","file","status","onRemove","removedFile","filter","uid","customRequest","disabled","loading","showDbInstallInstructions","files","Set","map","fileName","indexOf","key","slice","autoComplete","type","value","event","target","renderPasswordFields","targetValue","currentTarget","toUpperCase","StyledTag","AntdTag","index","onDelete","editable","onClick","isLongTag","useMemo","tagElem","closable","onClose","color","role","href","rel","Tooltip","TagsDiv","tags","maxTags","tempMaxTags","setTempMaxTags","handleDelete","tagsIsLong","extraTags","tag","undefined","StyledLinkedTooltip","light5","CrossLinksTooltip","children","crossLinks","moreItems","placement","link","to","StyledCrossLinks","weights","bold","CrossLinks","maxLinks","linkPrefix","crossLinksRef","useTruncation","hasMoreItems","links","ref","tooltipLinks","l","FlexRowContainer","PASSWORDS_NEEDED_MESSAGE","CONFIRM_OVERWRITE_MESSAGE","setupPlugins","registry","getChartMetadataRegistry","createFetchDatasets","async","filterValue","page","pageSize","filters","col","opr","queryParams","rison","columns","keys","order_column","order_direction","page_size","json","SupersetClient","endpoint","datasets","table_name","tableName","label","data","totalCount","count","StyledActions","withToasts","props","addDangerToast","addSuccessToast","user","userId","history","useHistory","resourceCount","chartCount","resourceCollection","charts","bulkSelectEnabled","setResourceCollection","setCharts","hasPerm","fetchData","toggleBulkSelect","refreshData","useListViewResource","chartIds","c","saveFavoriteStatus","favoriteStatus","useFavoriteStatus","sliceCurrentlyEditing","handleChartUpdated","openChartEditModal","closeChartEditModal","useChartEditModal","importingChart","showImportModal","preparingExport","setPreparingExport","userSettings","dangerouslyGetItemDoNotUse","toString","canCreate","canEdit","canDelete","canExport","isFeatureEnabled","FeatureFlag","initialSort","desc","handleBulkChartExport","chartsToExport","ids","handleResourceExport","fetchDashboards","FilterOperator","response","catch","dashboards","dashboard_title","dashboardTitle","Cell","row","original","FaveStar","itemId","saveFaveStar","isStarred","Header","disableSortBy","size","hidden","url","slice_name","sliceName","certified_by","certifiedBy","certification_details","certificationDetails","description","CertifiedBadge","details","InfoTooltip","tooltip","viewBox","accessor","viz_type","vizType","get","datasource_name_text","dsNameTxt","datasource_url","dsUrl","GenericLink","ensureIsArray","d","last_saved_by","lastSavedBy","first_name","last_name","changedByName","last_saved_at","lastSavedAt","moment","fromNow","created_by","createdBy","Tags","ConfirmStatusChange","onConfirm","handleChartDelete","confirmDelete","tabIndex","Icons","favoritesFilter","urlDisplay","input","operator","unfilteredLabel","selects","filters_list","fetchSelects","createFetchRelated","createErrorHandler","errMsg","paginate","k","nativeFilterGate","behaviors","sort","a","b","push","loadTags","sortTypes","renderCard","useCallback","chart","ChartCard","showThumbnails","thumbnails","subMenuButtons","buttonStyle","SubMenu","buttons","PropertiesModal","onSave","chartsToDelete","message","bulkActions","onSelect","ListView","cardSortSelectOptions","disableBulkSelect","defaultViewMode","Loading"],"sourceRoot":""}