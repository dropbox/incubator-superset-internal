{"version":3,"file":"696071056066e32f9196.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/views/CRUD/csstemplates/CssTemplateModal.tsx","webpack://superset/./src/views/CRUD/csstemplates/CssTemplatesList.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | React.ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\n\nimport Icons from 'src/components/Icons';\nimport { StyledIcon } from 'src/views/CRUD/utils';\nimport Modal from 'src/components/Modal';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { CssEditor } from 'src/components/AsyncAceEditor';\n\nimport { TemplateObject } from './types';\n\ninterface CssTemplateModalProps {\n  addDangerToast: (msg: string) => void;\n  cssTemplate?: TemplateObject | null;\n  onCssTemplateAdd?: (cssTemplate?: TemplateObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst StyledCssTemplateTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 2}px auto\n    ${({ theme }) => theme.gridUnit * 4}px auto;\n`;\n\nconst StyledCssEditor = styled(CssEditor)`\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  border: 1px solid ${({ theme }) => theme.colors.secondary.light2};\n`;\n\nconst TemplateContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 10}px;\n\n  .control-label {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit / 2}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n\n  input[type='text'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n    width: 50%;\n  }\n`;\n\nconst CssTemplateModal: FunctionComponent<CssTemplateModalProps> = ({\n  addDangerToast,\n  onCssTemplateAdd,\n  onHide,\n  show,\n  cssTemplate = null,\n}) => {\n  const [disableSave, setDisableSave] = useState<boolean>(true);\n  const [currentCssTemplate, setCurrentCssTemplate] =\n    useState<TemplateObject | null>(null);\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const isEditMode = cssTemplate !== null;\n\n  // cssTemplate fetch logic\n  const {\n    state: { loading, resource },\n    fetchResource,\n    createResource,\n    updateResource,\n  } = useSingleViewResource<TemplateObject>(\n    'css_template',\n    t('css_template'),\n    addDangerToast,\n  );\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    onHide();\n  };\n\n  const onSave = () => {\n    if (isEditMode) {\n      // Edit\n      if (currentCssTemplate && currentCssTemplate.id) {\n        const update_id = currentCssTemplate.id;\n        delete currentCssTemplate.id;\n        delete currentCssTemplate.created_by;\n        updateResource(update_id, currentCssTemplate).then(response => {\n          if (!response) {\n            return;\n          }\n\n          if (onCssTemplateAdd) {\n            onCssTemplateAdd();\n          }\n\n          hide();\n        });\n      }\n    } else if (currentCssTemplate) {\n      // Create\n      createResource(currentCssTemplate).then(response => {\n        if (!response) {\n          return;\n        }\n\n        if (onCssTemplateAdd) {\n          onCssTemplateAdd();\n        }\n\n        hide();\n      });\n    }\n  };\n\n  const onTemplateNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    const data = {\n      ...currentCssTemplate,\n      template_name: currentCssTemplate ? currentCssTemplate.template_name : '',\n      css: currentCssTemplate ? currentCssTemplate.css : '',\n    };\n\n    data[target.name] = target.value;\n    setCurrentCssTemplate(data);\n  };\n\n  const onCssChange = (css: string) => {\n    const data = {\n      ...currentCssTemplate,\n      template_name: currentCssTemplate ? currentCssTemplate.template_name : '',\n      css,\n    };\n    setCurrentCssTemplate(data);\n  };\n\n  const validate = () => {\n    if (\n      currentCssTemplate &&\n      currentCssTemplate.template_name.length &&\n      currentCssTemplate.css &&\n      currentCssTemplate.css.length\n    ) {\n      setDisableSave(false);\n    } else {\n      setDisableSave(true);\n    }\n  };\n\n  // Initialize\n  useEffect(() => {\n    if (\n      isEditMode &&\n      (!currentCssTemplate ||\n        !currentCssTemplate.id ||\n        (cssTemplate && cssTemplate.id !== currentCssTemplate.id) ||\n        (isHidden && show))\n    ) {\n      if (cssTemplate && cssTemplate.id !== null && !loading) {\n        const id = cssTemplate.id || 0;\n\n        fetchResource(id);\n      }\n    } else if (\n      !isEditMode &&\n      (!currentCssTemplate || currentCssTemplate.id || (isHidden && show))\n    ) {\n      setCurrentCssTemplate({\n        template_name: '',\n        css: '',\n      });\n    }\n  }, [cssTemplate]);\n\n  useEffect(() => {\n    if (resource) {\n      setCurrentCssTemplate(resource);\n    }\n  }, [resource]);\n\n  // Validation\n  useEffect(() => {\n    validate();\n  }, [\n    currentCssTemplate ? currentCssTemplate.template_name : '',\n    currentCssTemplate ? currentCssTemplate.css : '',\n  ]);\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={hide}\n      primaryButtonName={isEditMode ? t('Save') : t('Add')}\n      show={show}\n      width=\"55%\"\n      title={\n        <h4 data-test=\"css-template-modal-title\">\n          {isEditMode ? (\n            <Icons.EditAlt css={StyledIcon} />\n          ) : (\n            <Icons.PlusLarge css={StyledIcon} />\n          )}\n          {isEditMode\n            ? t('Edit CSS template properties')\n            : t('Add CSS template')}\n        </h4>\n      }\n    >\n      <StyledCssTemplateTitle>\n        <h4>{t('Basic information')}</h4>\n      </StyledCssTemplateTitle>\n      <TemplateContainer>\n        <div className=\"control-label\">\n          {t('CSS template name')}\n          <span className=\"required\">*</span>\n        </div>\n        <input\n          name=\"template_name\"\n          onChange={onTemplateNameChange}\n          type=\"text\"\n          value={currentCssTemplate?.template_name}\n        />\n      </TemplateContainer>\n      <TemplateContainer>\n        <div className=\"control-label\">\n          {t('css')}\n          <span className=\"required\">*</span>\n        </div>\n        <StyledCssEditor\n          onChange={onCssChange}\n          value={currentCssTemplate?.css}\n          width=\"100%\"\n        />\n      </TemplateContainer>\n    </Modal>\n  );\n};\n\nexport default withToasts(CssTemplateModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport { t, SupersetClient } from '@superset-ui/core';\n\nimport rison from 'rison';\nimport moment from 'moment';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createFetchRelated, createErrorHandler } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu, { SubMenuProps } from 'src/views/components/SubMenu';\nimport DeleteModal from 'src/components/DeleteModal';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport CssTemplateModal from './CssTemplateModal';\nimport { TemplateObject } from './types';\n\nconst PAGE_SIZE = 25;\n\ninterface CssTemplatesListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nfunction CssTemplatesList({\n  addDangerToast,\n  addSuccessToast,\n  user,\n}: CssTemplatesListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: templatesCount,\n      resourceCollection: templates,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<TemplateObject>(\n    'css_template',\n    t('CSS templates'),\n    addDangerToast,\n  );\n  const [cssTemplateModalOpen, setCssTemplateModalOpen] =\n    useState<boolean>(false);\n  const [currentCssTemplate, setCurrentCssTemplate] =\n    useState<TemplateObject | null>(null);\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n\n  const [templateCurrentlyDeleting, setTemplateCurrentlyDeleting] =\n    useState<TemplateObject | null>(null);\n\n  const handleTemplateDelete = ({ id, template_name }: TemplateObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/css_template/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setTemplateCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', template_name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting %s: %s', template_name, errMsg),\n        ),\n      ),\n    );\n  };\n\n  const handleBulkTemplateDelete = (templatesToDelete: TemplateObject[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/css_template/?q=${rison.encode(\n        templatesToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected templates: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  function handleCssTemplateEdit(cssTemplate: TemplateObject) {\n    setCurrentCssTemplate(cssTemplate);\n    setCssTemplateModalOpen(true);\n  }\n\n  const initialSort = [{ id: 'template_name', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'template_name',\n        Header: t('Name'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_on_delta_humanized: changedOn,\n              changed_by: changedBy,\n            },\n          },\n        }: any) => {\n          let name = 'null';\n\n          if (changedBy) {\n            name = `${changedBy.first_name} ${changedBy.last_name}`;\n          }\n\n          return (\n            <Tooltip\n              id=\"allow-run-async-header-tooltip\"\n              title={t('Last modified by %s', name)}\n              placement=\"right\"\n            >\n              <span>{changedOn}</span>\n            </Tooltip>\n          );\n        },\n        Header: t('Last modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_on: createdOn },\n          },\n        }: any) => {\n          const date = new Date(createdOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).fromNow();\n        },\n        Header: t('Created on'),\n        accessor: 'created_on',\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        accessor: 'created_by',\n        disableSortBy: true,\n        Header: t('Created by'),\n        Cell: ({\n          row: {\n            original: { created_by: createdBy },\n          },\n        }: any) =>\n          createdBy ? `${createdBy.first_name} ${createdBy.last_name}` : '',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () => handleCssTemplateEdit(original);\n          const handleDelete = () => setTemplateCurrentlyDeleting(original);\n\n          const actions = [\n            canEdit\n              ? {\n                  label: 'edit-action',\n                  tooltip: t('Edit template'),\n                  placement: 'bottom',\n                  icon: 'Edit',\n                  onClick: handleEdit,\n                }\n              : null,\n            canDelete\n              ? {\n                  label: 'delete-action',\n                  tooltip: t('Delete template'),\n                  placement: 'bottom',\n                  icon: 'Trash',\n                  onClick: handleDelete,\n                }\n              : null,\n          ].filter(item => !!item);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        hidden: !canEdit && !canDelete,\n        size: 'xl',\n      },\n    ],\n    [canDelete, canCreate],\n  );\n\n  const menuData: SubMenuProps = {\n    name: t('CSS templates'),\n  };\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('CSS template')}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        setCurrentCssTemplate(null);\n        setCssTemplateModalOpen(true);\n      },\n    });\n  }\n\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  menuData.buttons = subMenuButtons;\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Created by'),\n        id: 'created_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'css_template',\n          'created_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Search'),\n        id: 'template_name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ],\n    [],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      <CssTemplateModal\n        addDangerToast={addDangerToast}\n        cssTemplate={currentCssTemplate}\n        onCssTemplateAdd={() => refreshData()}\n        onHide={() => setCssTemplateModalOpen(false)}\n        show={cssTemplateModalOpen}\n      />\n      {templateCurrentlyDeleting && (\n        <DeleteModal\n          description={t('This action will permanently delete the template.')}\n          onConfirm={() => {\n            if (templateCurrentlyDeleting) {\n              handleTemplateDelete(templateCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setTemplateCurrentlyDeleting(null)}\n          open\n          title={t('Delete Template?')}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected templates?',\n        )}\n        onConfirm={handleBulkTemplateDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = canDelete\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n\n          return (\n            <ListView<TemplateObject>\n              className=\"css-templates-list-view\"\n              columns={columns}\n              count={templatesCount}\n              data={templates}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(CssTemplatesList);\n"],"names":["StyledActions","theme","colors","primary","base","ActionWrapper","grayscale","ActionsBar","actions","className","map","action","index","ActionIcon","icon","tooltip","id","label","title","placement","key","role","tabIndex","onClick","StyledCssTemplateTitle","style","gridUnit","StyledCssEditor","borderRadius","secondary","light2","TemplateContainer","error","withToasts","addDangerToast","onCssTemplateAdd","onHide","show","cssTemplate","disableSave","setDisableSave","useState","currentCssTemplate","setCurrentCssTemplate","isHidden","setIsHidden","isEditMode","state","loading","resource","fetchResource","createResource","updateResource","t","hide","useEffect","template_name","css","length","Modal","disablePrimaryButton","onHandledPrimaryAction","update_id","created_by","then","response","primaryButtonName","width","Icons","name","onChange","event","target","data","value","type","addSuccessToast","user","resourceCount","templatesCount","resourceCollection","templates","bulkSelectEnabled","hasPerm","fetchData","refreshData","toggleBulkSelect","cssTemplateModalOpen","setCssTemplateModalOpen","canCreate","canEdit","canDelete","templateCurrentlyDeleting","setTemplateCurrentlyDeleting","initialSort","desc","columns","useMemo","accessor","Header","Cell","row","original","changed_on_delta_humanized","changedOn","changed_by","changedBy","first_name","last_name","Tooltip","size","disableSortBy","created_on","createdOn","date","Date","utc","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","fromNow","createdBy","filter","item","hidden","menuData","subMenuButtons","push","buttonStyle","buttons","filters","input","operator","unfilteredLabel","fetchSelects","errMsg","paginate","SubMenu","DeleteModal","description","onConfirm","SupersetClient","endpoint","handleTemplateDelete","open","ConfirmStatusChange","templatesToDelete","json","message","confirmDelete","bulkActions","onSelect","ListView","count","pageSize","disableBulkSelect"],"sourceRoot":""}