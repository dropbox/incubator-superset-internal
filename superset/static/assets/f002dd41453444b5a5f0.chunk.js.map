{"version":3,"file":"f002dd41453444b5a5f0.chunk.js","mappings":"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","sources":["webpack://superset/./node_modules/@deck.gl/core/dist/esm/lib/composite-layer.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/components/Legend.jsx","webpack://superset/./node_modules/@deck.gl/layers/dist/esm/polygon-layer/polygon-layer.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/utils.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/utils/getPointsFromPolygon.ts","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Polygon/Polygon.jsx"],"sourcesContent":["import Layer from './layer';\nimport debug from '../debug';\nimport { flatten } from '../utils/flatten';\nconst TRACE_RENDER_LAYERS = 'compositeLayer.renderLayers';\nexport default class CompositeLayer extends Layer {\n  get isComposite() {\n    return true;\n  }\n\n  get isLoaded() {\n    return super.isLoaded && this.getSubLayers().every(layer => layer.isLoaded);\n  }\n\n  getSubLayers() {\n    return this.internalState && this.internalState.subLayers || [];\n  }\n\n  initializeState() {}\n\n  setState(updateObject) {\n    super.setState(updateObject);\n    this.setNeedsUpdate();\n  }\n\n  getPickingInfo({\n    info\n  }) {\n    const {\n      object\n    } = info;\n    const isDataWrapped = object && object.__source && object.__source.parent && object.__source.parent.id === this.id;\n\n    if (!isDataWrapped) {\n      return info;\n    }\n\n    info.object = object.__source.object;\n    info.index = object.__source.index;\n    return info;\n  }\n\n  renderLayers() {\n    return null;\n  }\n\n  filterSubLayer(context) {\n    return true;\n  }\n\n  shouldRenderSubLayer(id, data) {\n    const {\n      _subLayerProps: overridingProps\n    } = this.props;\n    return data && data.length || overridingProps && overridingProps[id];\n  }\n\n  getSubLayerClass(id, DefaultLayerClass) {\n    const {\n      _subLayerProps: overridingProps\n    } = this.props;\n    return overridingProps && overridingProps[id] && overridingProps[id].type || DefaultLayerClass;\n  }\n\n  getSubLayerRow(row, sourceObject, sourceObjectIndex) {\n    row.__source = {\n      parent: this,\n      object: sourceObject,\n      index: sourceObjectIndex\n    };\n    return row;\n  }\n\n  getSubLayerAccessor(accessor) {\n    if (typeof accessor === 'function') {\n      const objectInfo = {\n        data: this.props.data,\n        target: []\n      };\n      return (x, i) => {\n        if (x && x.__source) {\n          objectInfo.index = x.__source.index;\n          return accessor(x.__source.object, objectInfo);\n        }\n\n        return accessor(x, i);\n      };\n    }\n\n    return accessor;\n  }\n\n  getSubLayerProps(sublayerProps = {}) {\n    const {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions,\n      fetch,\n      _subLayerProps: overridingProps\n    } = this.props;\n    const newProps = {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions,\n      fetch\n    };\n    const overridingSublayerProps = overridingProps && overridingProps[sublayerProps.id];\n    const overridingSublayerTriggers = overridingSublayerProps && overridingSublayerProps.updateTriggers;\n    const sublayerId = sublayerProps.id || 'sublayer';\n\n    if (overridingSublayerProps) {\n      const propTypes = this.constructor._propTypes;\n      const subLayerPropTypes = sublayerProps.type ? sublayerProps.type._propTypes : {};\n\n      for (const key in overridingSublayerProps) {\n        const propType = subLayerPropTypes[key] || propTypes[key];\n\n        if (propType && propType.type === 'accessor') {\n          overridingSublayerProps[key] = this.getSubLayerAccessor(overridingSublayerProps[key]);\n        }\n      }\n    }\n\n    Object.assign(newProps, sublayerProps, overridingSublayerProps);\n    newProps.id = \"\".concat(this.props.id, \"-\").concat(sublayerId);\n    newProps.updateTriggers = {\n      all: this.props.updateTriggers.all,\n      ...sublayerProps.updateTriggers,\n      ...overridingSublayerTriggers\n    };\n\n    for (const extension of extensions) {\n      const passThroughProps = extension.getSubLayerProps.call(this, extension);\n\n      if (passThroughProps) {\n        Object.assign(newProps, passThroughProps, {\n          updateTriggers: Object.assign(newProps.updateTriggers, passThroughProps.updateTriggers)\n        });\n      }\n    }\n\n    return newProps;\n  }\n\n  _updateAutoHighlight(info) {\n    for (const layer of this.getSubLayers()) {\n      layer.updateAutoHighlight(info);\n    }\n  }\n\n  _getAttributeManager() {\n    return null;\n  }\n\n  _renderLayers() {\n    let {\n      subLayers\n    } = this.internalState;\n    const shouldUpdate = !subLayers || this.needsUpdate();\n\n    if (shouldUpdate) {\n      subLayers = this.renderLayers();\n      subLayers = flatten(subLayers, Boolean);\n      this.internalState.subLayers = subLayers;\n    }\n\n    debug(TRACE_RENDER_LAYERS, this, shouldUpdate, subLayers);\n\n    for (const layer of subLayers) {\n      layer.parent = this;\n    }\n  }\n\n}\nCompositeLayer.layerName = 'CompositeLayer';\n//# sourceMappingURL=composite-layer.js.map","/* eslint-disable react/jsx-sort-default-props */\n/* eslint-disable react/sort-prop-types */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatNumber, styled } from '@superset-ui/core';\n\nconst StyledLegend = styled.div`\n  ${({ theme }) => `\n    font-size: ${theme.typography.sizes.s}px;\n    position: absolute;\n    background: ${theme.colors.grayscale.light5};\n    box-shadow: 0 0 ${theme.gridUnit}px ${theme.colors.grayscale.light2};\n    margin: ${theme.gridUnit * 6}px;\n    padding: ${theme.gridUnit * 3}px ${theme.gridUnit * 5}px;\n    outline: none;\n    overflow-y: scroll;\n    max-height: 200px;\n\n    & ul {\n      list-style: none;\n      padding-left: 0;\n      margin: 0;\n\n      & li a {\n        color: ${theme.colors.grayscale.base};\n        text-decoration: none;\n\n        & span {\n          margin-right: ${theme.gridUnit * 3}px;\n        }\n      }\n    }\n  `}\n`;\n\nconst categoryDelimiter = ' - ';\n\nconst propTypes = {\n  categories: PropTypes.object,\n  forceCategorical: PropTypes.bool,\n  format: PropTypes.string,\n  position: PropTypes.oneOf([null, 'tl', 'tr', 'bl', 'br']),\n  showSingleCategory: PropTypes.func,\n  toggleCategory: PropTypes.func,\n};\n\nconst defaultProps = {\n  categories: {},\n  forceCategorical: false,\n  format: null,\n  position: 'tr',\n  showSingleCategory: () => {},\n  toggleCategory: () => {},\n};\n\nexport default class Legend extends React.PureComponent {\n  format(value) {\n    if (!this.props.format || this.props.forceCategorical) {\n      return value;\n    }\n\n    const numValue = parseFloat(value);\n\n    return formatNumber(this.props.format, numValue);\n  }\n\n  formatCategoryLabel(k) {\n    if (!this.props.format) {\n      return k;\n    }\n\n    if (k.includes(categoryDelimiter)) {\n      const values = k.split(categoryDelimiter);\n\n      return (\n        this.format(values[0]) + categoryDelimiter + this.format(values[1])\n      );\n    }\n\n    return this.format(k);\n  }\n\n  render() {\n    if (\n      Object.keys(this.props.categories).length === 0 ||\n      this.props.position === null\n    ) {\n      return null;\n    }\n\n    const categories = Object.entries(this.props.categories).map(([k, v]) => {\n      const style = { color: `rgba(${v.color.join(', ')})` };\n      const icon = v.enabled ? '\\u25FC' : '\\u25FB';\n\n      return (\n        <li key={k}>\n          <a\n            href=\"#\"\n            onClick={() => this.props.toggleCategory(k)}\n            onDoubleClick={() => this.props.showSingleCategory(k)}\n          >\n            <span style={style}>{icon}</span> {this.formatCategoryLabel(k)}\n          </a>\n        </li>\n      );\n    });\n\n    const vertical = this.props.position.charAt(0) === 't' ? 'top' : 'bottom';\n    const horizontal = this.props.position.charAt(1) === 'r' ? 'right' : 'left';\n    const style = {\n      position: 'absolute',\n      [vertical]: '0px',\n      [horizontal]: '10px',\n    };\n\n    return (\n      <StyledLegend style={style}>\n        <ul>{categories}</ul>\n      </StyledLegend>\n    );\n  }\n}\n\nLegend.propTypes = propTypes;\nLegend.defaultProps = defaultProps;\n","import { CompositeLayer, createIterable, log } from '@deck.gl/core';\nimport SolidPolygonLayer from '../solid-polygon-layer/solid-polygon-layer';\nimport PathLayer from '../path-layer/path-layer';\nimport * as Polygon from '../solid-polygon-layer/polygon';\nimport { replaceInRange } from '../utils';\nconst defaultLineColor = [0, 0, 0, 255];\nconst defaultFillColor = [0, 0, 0, 255];\nconst defaultProps = {\n  stroked: true,\n  filled: true,\n  extruded: false,\n  elevationScale: 1,\n  wireframe: false,\n  _normalize: true,\n  _windingOrder: 'CW',\n  lineWidthUnits: 'meters',\n  lineWidthScale: 1,\n  lineWidthMinPixels: 0,\n  lineWidthMaxPixels: Number.MAX_SAFE_INTEGER,\n  lineJointRounded: false,\n  lineMiterLimit: 4,\n  getPolygon: {\n    type: 'accessor',\n    value: f => f.polygon\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: defaultFillColor\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: defaultLineColor\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  getElevation: {\n    type: 'accessor',\n    value: 1000\n  },\n  material: true\n};\nexport default class PolygonLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      paths: []\n    };\n\n    if (this.props.getLineDashArray) {\n      log.removed('getLineDashArray', 'PathStyleExtension')();\n    }\n  }\n\n  updateState({\n    oldProps,\n    props,\n    changeFlags\n  }) {\n    const geometryChanged = changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPolygon);\n\n    if (geometryChanged && Array.isArray(changeFlags.dataChanged)) {\n      const paths = this.state.paths.slice();\n      const pathsDiff = changeFlags.dataChanged.map(dataRange => replaceInRange({\n        data: paths,\n        getIndex: p => p.__source.index,\n        dataRange,\n        replace: this._getPaths(dataRange)\n      }));\n      this.setState({\n        paths,\n        pathsDiff\n      });\n    } else if (geometryChanged) {\n      this.setState({\n        paths: this._getPaths(),\n        pathsDiff: null\n      });\n    }\n  }\n\n  _getPaths(dataRange = {}) {\n    const {\n      data,\n      getPolygon,\n      positionFormat,\n      _normalize\n    } = this.props;\n    const paths = [];\n    const positionSize = positionFormat === 'XY' ? 2 : 3;\n    const {\n      startRow,\n      endRow\n    } = dataRange;\n    const {\n      iterable,\n      objectInfo\n    } = createIterable(data, startRow, endRow);\n\n    for (const object of iterable) {\n      objectInfo.index++;\n      let polygon = getPolygon(object, objectInfo);\n\n      if (_normalize) {\n        polygon = Polygon.normalize(polygon, positionSize);\n      }\n\n      const {\n        holeIndices\n      } = polygon;\n      const positions = polygon.positions || polygon;\n\n      if (holeIndices) {\n        for (let i = 0; i <= holeIndices.length; i++) {\n          const path = positions.slice(holeIndices[i - 1] || 0, holeIndices[i] || positions.length);\n          paths.push(this.getSubLayerRow({\n            path\n          }, object, objectInfo.index));\n        }\n      } else {\n        paths.push(this.getSubLayerRow({\n          path: positions\n        }, object, objectInfo.index));\n      }\n    }\n\n    return paths;\n  }\n\n  renderLayers() {\n    const {\n      data,\n      _dataDiff,\n      stroked,\n      filled,\n      extruded,\n      wireframe,\n      _normalize,\n      _windingOrder,\n      elevationScale,\n      transitions,\n      positionFormat\n    } = this.props;\n    const {\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels,\n      lineJointRounded,\n      lineMiterLimit,\n      lineDashJustified\n    } = this.props;\n    const {\n      getFillColor,\n      getLineColor,\n      getLineWidth,\n      getLineDashArray,\n      getElevation,\n      getPolygon,\n      updateTriggers,\n      material\n    } = this.props;\n    const {\n      paths,\n      pathsDiff\n    } = this.state;\n    const FillLayer = this.getSubLayerClass('fill', SolidPolygonLayer);\n    const StrokeLayer = this.getSubLayerClass('stroke', PathLayer);\n    const polygonLayer = this.shouldRenderSubLayer('fill', paths) && new FillLayer({\n      _dataDiff,\n      extruded,\n      elevationScale,\n      filled,\n      wireframe,\n      _normalize,\n      _windingOrder,\n      getElevation,\n      getFillColor,\n      getLineColor: extruded && wireframe ? getLineColor : defaultLineColor,\n      material,\n      transitions\n    }, this.getSubLayerProps({\n      id: 'fill',\n      updateTriggers: {\n        getPolygon: updateTriggers.getPolygon,\n        getElevation: updateTriggers.getElevation,\n        getFillColor: updateTriggers.getFillColor,\n        lineColors: extruded && wireframe,\n        getLineColor: updateTriggers.getLineColor\n      }\n    }), {\n      data,\n      positionFormat,\n      getPolygon\n    });\n    const polygonLineLayer = !extruded && stroked && this.shouldRenderSubLayer('stroke', paths) && new StrokeLayer({\n      _dataDiff: pathsDiff && (() => pathsDiff),\n      widthUnits: lineWidthUnits,\n      widthScale: lineWidthScale,\n      widthMinPixels: lineWidthMinPixels,\n      widthMaxPixels: lineWidthMaxPixels,\n      jointRounded: lineJointRounded,\n      miterLimit: lineMiterLimit,\n      dashJustified: lineDashJustified,\n      _pathType: 'loop',\n      transitions: transitions && {\n        getWidth: transitions.getLineWidth,\n        getColor: transitions.getLineColor,\n        getPath: transitions.getPolygon\n      },\n      getColor: this.getSubLayerAccessor(getLineColor),\n      getWidth: this.getSubLayerAccessor(getLineWidth),\n      getDashArray: this.getSubLayerAccessor(getLineDashArray)\n    }, this.getSubLayerProps({\n      id: 'stroke',\n      updateTriggers: {\n        getWidth: updateTriggers.getLineWidth,\n        getColor: updateTriggers.getLineColor,\n        getDashArray: updateTriggers.getLineDashArray\n      }\n    }), {\n      data: paths,\n      positionFormat,\n      getPath: x => x.path\n    });\n    return [!extruded && polygonLayer, polygonLineLayer, extruded && polygonLayer];\n  }\n\n}\nPolygonLayer.layerName = 'PolygonLayer';\nPolygonLayer.defaultProps = defaultProps;\n//# sourceMappingURL=polygon-layer.js.map","/* eslint-disable no-negated-condition */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { extent } from 'd3-array';\nimport { scaleThreshold } from 'd3-scale';\nimport {\n  getSequentialSchemeRegistry,\n  SequentialScheme,\n} from '@superset-ui/core';\nimport { hexToRGB } from './utils/colors';\n\nconst DEFAULT_NUM_BUCKETS = 10;\n\nexport function getBreakPoints(\n  { break_points: formDataBreakPoints, num_buckets: formDataNumBuckets },\n  features,\n  accessor,\n) {\n  if (!features) {\n    return [];\n  }\n  if (formDataBreakPoints === undefined || formDataBreakPoints.length === 0) {\n    // compute evenly distributed break points based on number of buckets\n    const numBuckets = formDataNumBuckets\n      ? parseInt(formDataNumBuckets, 10)\n      : DEFAULT_NUM_BUCKETS;\n    const [minValue, maxValue] = extent(features, accessor);\n    if (minValue === undefined) {\n      return [];\n    }\n    const delta = (maxValue - minValue) / numBuckets;\n    const precision =\n      delta === 0 ? 0 : Math.max(0, Math.ceil(Math.log10(1 / delta)));\n    const extraBucket = maxValue > maxValue.toFixed(precision) ? 1 : 0;\n    const startValue =\n      minValue < minValue.toFixed(precision) ? minValue - 1 : minValue;\n\n    return new Array(numBuckets + 1 + extraBucket)\n      .fill()\n      .map((_, i) => (startValue + i * delta).toFixed(precision));\n  }\n\n  return formDataBreakPoints.sort((a, b) => parseFloat(a) - parseFloat(b));\n}\n\nexport function getBreakPointColorScaler(\n  {\n    break_points: formDataBreakPoints,\n    num_buckets: formDataNumBuckets,\n    linear_color_scheme: linearColorScheme,\n    opacity,\n  },\n  features,\n  accessor,\n) {\n  const breakPoints =\n    formDataBreakPoints || formDataNumBuckets\n      ? getBreakPoints(\n          {\n            break_points: formDataBreakPoints,\n            num_buckets: formDataNumBuckets,\n          },\n          features,\n          accessor,\n        )\n      : null;\n  const colorScheme = Array.isArray(linearColorScheme)\n    ? new SequentialScheme({\n        colors: linearColorScheme,\n        id: 'custom',\n      })\n    : getSequentialSchemeRegistry().get(linearColorScheme);\n\n  let scaler;\n  let maskPoint;\n  if (breakPoints !== null) {\n    // bucket colors into discrete colors\n    const n = breakPoints.length - 1;\n    const bucketedColors =\n      n > 1\n        ? colorScheme.getColors(n)\n        : [colorScheme.colors[colorScheme.colors.length - 1]];\n\n    // repeat ends\n    const first = bucketedColors[0];\n    const last = bucketedColors[bucketedColors.length - 1];\n    bucketedColors.unshift(first);\n    bucketedColors.push(last);\n\n    const points = breakPoints.map(p => parseFloat(p));\n    scaler = scaleThreshold().domain(points).range(bucketedColors);\n    maskPoint = value => value > breakPoints[n] || value < breakPoints[0];\n  } else {\n    // interpolate colors linearly\n    scaler = colorScheme.createLinearScale(extent(features, accessor));\n    maskPoint = () => false;\n  }\n\n  return d => {\n    const v = accessor(d);\n    const c = hexToRGB(scaler(v));\n    if (maskPoint(v)) {\n      c[3] = 0;\n    } else {\n      c[3] = (opacity / 100) * 255;\n    }\n\n    return c;\n  };\n}\n\nexport function getBuckets(fd, features, accessor) {\n  const breakPoints = getBreakPoints(fd, features, accessor);\n  const colorScaler = getBreakPointColorScaler(fd, features, accessor);\n  const buckets = {};\n  breakPoints.slice(1).forEach((value, i) => {\n    const range = `${breakPoints[i]} - ${breakPoints[i + 1]}`;\n    const mid =\n      0.5 * (parseFloat(breakPoints[i]) + parseFloat(breakPoints[i + 1]));\n    // fix polygon doesn't show\n    const metricLabel = fd.metric ? fd.metric.label || fd.metric : null;\n    buckets[range] = {\n      color: colorScaler({ [metricLabel || fd.metric]: mid }),\n      enabled: true,\n    };\n  });\n\n  return buckets;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Point } from '../types';\n\n/** Format originally used by the Polygon plugin */\ntype CustomPolygonFeature = {\n  polygon: Point[];\n};\n\n/**\n * Format that is geojson standard\n * https://geojson.org/geojson-spec.html\n */\ntype GeojsonPolygonFeature = {\n  polygon: {\n    type: 'Feature';\n    geometry: {\n      type: 'Polygon';\n      coordinates: Point[][];\n    };\n  };\n};\n\nexport default function getPointsFromPolygon(\n  feature: CustomPolygonFeature | GeojsonPolygonFeature,\n) {\n  return 'geometry' in feature.polygon\n    ? feature.polygon.geometry.coordinates[0]\n    : feature.polygon;\n}\n","/* eslint-disable react/sort-prop-types */\n/* eslint-disable react/jsx-handler-names */\n/* eslint-disable react/no-access-state-in-setstate */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PolygonLayer } from 'deck.gl';\n\nimport AnimatableDeckGLContainer from '../../AnimatableDeckGLContainer';\nimport Legend from '../../components/Legend';\nimport TooltipRow from '../../TooltipRow';\nimport { getBuckets, getBreakPointColorScaler } from '../../utils';\n\nimport { commonLayerProps } from '../common';\nimport { getPlaySliderParams } from '../../utils/time';\nimport sandboxedEval from '../../utils/sandbox';\n// eslint-disable-next-line import/extensions\nimport getPointsFromPolygon from '../../utils/getPointsFromPolygon';\n// eslint-disable-next-line import/extensions\nimport fitViewport from '../../utils/fitViewport';\n\nconst DOUBLE_CLICK_TRESHOLD = 250; // milliseconds\n\nfunction getElevation(d, colorScaler) {\n  /* in deck.gl 5.3.4 (used in Superset as of 2018-10-24), if a polygon has\n   * opacity zero it will make everything behind it have opacity zero,\n   * effectively showing the map layer no matter what other polygons are\n   * behind it.\n   */\n  return colorScaler(d)[3] === 0 ? 0 : d.elevation;\n}\n\nfunction setTooltipContent(formData) {\n  return o => {\n    const metricLabel = formData.metric.label || formData.metric;\n\n    return (\n      <div className=\"deckgl-tooltip\">\n        {o.object.name && (\n          <TooltipRow label=\"name: \" value={`${o.object.name}`} />\n        )}\n        {o.object[formData.line_column] && (\n          <TooltipRow\n            label={`${formData.line_column}: `}\n            value={`${o.object[formData.line_column]}`}\n          />\n        )}\n        {formData.metric && (\n          <TooltipRow\n            label={`${metricLabel}: `}\n            value={`${o.object[metricLabel]}`}\n          />\n        )}\n      </div>\n    );\n  };\n}\n\nexport function getLayer(\n  formData,\n  payload,\n  onAddFilter,\n  setTooltip,\n  selected,\n  onSelect,\n  filters,\n) {\n  const fd = formData;\n  const fc = fd.fill_color_picker;\n  const sc = fd.stroke_color_picker;\n  let data = [...payload.data.features];\n\n  if (filters != null) {\n    filters.forEach(f => {\n      data = data.filter(x => f(x));\n    });\n  }\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n\n  const metricLabel = fd.metric ? fd.metric.label || fd.metric : null;\n  const accessor = d => d[metricLabel];\n  // base color for the polygons\n  const baseColorScaler =\n    fd.metric === null\n      ? () => [fc.r, fc.g, fc.b, 255 * fc.a]\n      : getBreakPointColorScaler(fd, data, accessor);\n\n  // when polygons are selected, reduce the opacity of non-selected polygons\n  const colorScaler = d => {\n    const baseColor = baseColorScaler(d);\n    if (selected.length > 0 && !selected.includes(d[fd.line_column])) {\n      baseColor[3] /= 2;\n    }\n\n    return baseColor;\n  };\n\n  const tooltipContentGenerator =\n    fd.line_column &&\n    fd.metric &&\n    ['json', 'geohash', 'zipcode'].includes(fd.line_type)\n      ? setTooltipContent(fd)\n      : undefined;\n\n  return new PolygonLayer({\n    id: `path-layer-${fd.slice_id}`,\n    data,\n    pickable: true,\n    filled: fd.filled,\n    stroked: fd.stroked,\n    getPolygon: getPointsFromPolygon,\n    getFillColor: colorScaler,\n    getLineColor: [sc.r, sc.g, sc.b, 255 * sc.a],\n    getLineWidth: fd.line_width,\n    extruded: fd.extruded,\n    getElevation: d => getElevation(d, colorScaler),\n    elevationScale: fd.multiplier,\n    fp64: true,\n    ...commonLayerProps(fd, setTooltip, tooltipContentGenerator, onSelect),\n  });\n}\n\nconst propTypes = {\n  formData: PropTypes.object.isRequired,\n  payload: PropTypes.object.isRequired,\n  setControlValue: PropTypes.func.isRequired,\n  viewport: PropTypes.object.isRequired,\n  onAddFilter: PropTypes.func,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n};\n\nconst defaultProps = {\n  onAddFilter() {},\n};\n\nclass DeckGLPolygon extends React.Component {\n  containerRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = DeckGLPolygon.getDerivedStateFromProps(props);\n\n    this.getLayers = this.getLayers.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onValuesChange = this.onValuesChange.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { width, height, formData, payload } = props;\n\n    // the state is computed only from the payload; if it hasn't changed, do\n    // not recompute state since this would reset selections and/or the play\n    // slider position due to changes in form controls\n    if (state && payload.form_data === state.formData) {\n      return null;\n    }\n\n    const features = payload.data.features || [];\n    const timestamps = features.map(f => f.__timestamp);\n\n    // the granularity has to be read from the payload form_data, not the\n    // props formData which comes from the instantaneous controls state\n    const granularity =\n      payload.form_data.time_grain_sqla ||\n      payload.form_data.granularity ||\n      'P1D';\n\n    const { start, end, getStep, values, disabled } = getPlaySliderParams(\n      timestamps,\n      granularity,\n    );\n\n    let { viewport } = props;\n    if (formData.autozoom) {\n      viewport = fitViewport(viewport, {\n        width,\n        height,\n        points: features.flatMap(getPointsFromPolygon),\n      });\n    }\n\n    return {\n      start,\n      end,\n      getStep,\n      values,\n      disabled,\n      viewport,\n      selected: [],\n      lastClick: 0,\n      formData: payload.form_data,\n    };\n  }\n\n  onSelect(polygon) {\n    const { formData, onAddFilter } = this.props;\n\n    const now = new Date();\n    const doubleClick = now - this.state.lastClick <= DOUBLE_CLICK_TRESHOLD;\n\n    // toggle selected polygons\n    const selected = [...this.state.selected];\n    if (doubleClick) {\n      selected.splice(0, selected.length, polygon);\n    } else if (formData.toggle_polygons) {\n      const i = selected.indexOf(polygon);\n      if (i === -1) {\n        selected.push(polygon);\n      } else {\n        selected.splice(i, 1);\n      }\n    } else {\n      selected.splice(0, 1, polygon);\n    }\n\n    this.setState({ selected, lastClick: now });\n    if (formData.table_filter) {\n      onAddFilter(formData.line_column, selected, false, true);\n    }\n  }\n\n  onValuesChange(values) {\n    this.setState({\n      values: Array.isArray(values)\n        ? values\n        : [values, values + this.state.getStep(values)],\n    });\n  }\n\n  getLayers(values) {\n    if (this.props.payload.data.features === undefined) {\n      return [];\n    }\n\n    const filters = [];\n\n    // time filter\n    if (values[0] === values[1] || values[1] === this.end) {\n      filters.push(\n        d => d.__timestamp >= values[0] && d.__timestamp <= values[1],\n      );\n    } else {\n      filters.push(\n        d => d.__timestamp >= values[0] && d.__timestamp < values[1],\n      );\n    }\n\n    const layer = getLayer(\n      this.props.formData,\n      this.props.payload,\n      this.props.onAddFilter,\n      this.setTooltip,\n      this.state.selected,\n      this.onSelect,\n      filters,\n    );\n\n    return [layer];\n  }\n\n  setTooltip = tooltip => {\n    const { current } = this.containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  };\n\n  render() {\n    const { payload, formData, setControlValue } = this.props;\n    const { start, end, getStep, values, disabled, viewport } = this.state;\n\n    const fd = formData;\n    const metricLabel = fd.metric ? fd.metric.label || fd.metric : null;\n    const accessor = d => d[metricLabel];\n\n    const buckets = getBuckets(formData, payload.data.features, accessor);\n\n    return (\n      <div style={{ position: 'relative' }}>\n        <AnimatableDeckGLContainer\n          ref={this.containerRef}\n          aggregation\n          getLayers={this.getLayers}\n          start={start}\n          end={end}\n          getStep={getStep}\n          values={values}\n          disabled={disabled}\n          viewport={viewport}\n          width={this.props.width}\n          height={this.props.height}\n          mapboxApiAccessToken={payload.data.mapboxApiKey}\n          mapStyle={formData.mapbox_style}\n          setControlValue={setControlValue}\n          onValuesChange={this.onValuesChange}\n          onViewportChange={this.onViewportChange}\n        >\n          {formData.metric !== null && (\n            <Legend\n              categories={buckets}\n              position={formData.legend_position}\n              format={formData.legend_format}\n            />\n          )}\n        </AnimatableDeckGLContainer>\n      </div>\n    );\n  }\n}\n\nDeckGLPolygon.propTypes = propTypes;\nDeckGLPolygon.defaultProps = defaultProps;\n\nexport default DeckGLPolygon;\n"],"names":["CompositeLayer","isComposite","isLoaded","super","this","getSubLayers","every","layer","internalState","subLayers","initializeState","setState","updateObject","setNeedsUpdate","getPickingInfo","info","object","__source","parent","id","index","renderLayers","filterSubLayer","context","shouldRenderSubLayer","data","_subLayerProps","overridingProps","props","length","getSubLayerClass","DefaultLayerClass","type","getSubLayerRow","row","sourceObject","sourceObjectIndex","getSubLayerAccessor","accessor","objectInfo","target","x","i","getSubLayerProps","sublayerProps","opacity","pickable","visible","parameters","getPolygonOffset","highlightedObjectIndex","autoHighlight","highlightColor","coordinateSystem","coordinateOrigin","wrapLongitude","positionFormat","modelMatrix","extensions","fetch","newProps","overridingSublayerProps","overridingSublayerTriggers","updateTriggers","sublayerId","propTypes","constructor","_propTypes","subLayerPropTypes","key","propType","Object","assign","concat","all","extension","passThroughProps","call","_updateAutoHighlight","updateAutoHighlight","_getAttributeManager","_renderLayers","shouldUpdate","needsUpdate","Boolean","layerName","StyledLegend","styled","theme","typography","sizes","s","colors","grayscale","light5","gridUnit","light2","base","categoryDelimiter","categories","PropTypes","forceCategorical","format","position","showSingleCategory","toggleCategory","Legend","React","value","numValue","parseFloat","formatNumber","formatCategoryLabel","k","includes","values","split","render","keys","entries","map","v","style","color","join","icon","enabled","href","onClick","onDoubleClick","charAt","defaultProps","defaultLineColor","stroked","filled","extruded","elevationScale","wireframe","_normalize","_windingOrder","lineWidthUnits","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","Number","MAX_SAFE_INTEGER","lineJointRounded","lineMiterLimit","getPolygon","f","polygon","getFillColor","getLineColor","getLineWidth","getElevation","material","PolygonLayer","state","paths","getLineDashArray","log","updateState","oldProps","changeFlags","geometryChanged","dataChanged","updateTriggersChanged","Array","isArray","slice","pathsDiff","dataRange","getIndex","p","replace","_getPaths","positionSize","startRow","endRow","iterable","holeIndices","positions","path","push","_dataDiff","transitions","lineDashJustified","FillLayer","StrokeLayer","polygonLayer","lineColors","widthUnits","widthScale","widthMinPixels","widthMaxPixels","jointRounded","miterLimit","dashJustified","_pathType","getWidth","getColor","getPath","getDashArray","getBreakPoints","break_points","formDataBreakPoints","num_buckets","formDataNumBuckets","features","undefined","numBuckets","parseInt","minValue","maxValue","extent","delta","precision","Math","max","ceil","log10","extraBucket","toFixed","startValue","fill","_","sort","a","b","getBreakPointColorScaler","linear_color_scheme","linearColorScheme","breakPoints","colorScheme","SequentialScheme","getSequentialSchemeRegistry","get","scaler","maskPoint","n","bucketedColors","getColors","first","last","unshift","points","scaleThreshold","domain","range","createLinearScale","d","c","hexToRGB","getPointsFromPolygon","feature","geometry","coordinates","getLayer","formData","payload","onAddFilter","setTooltip","selected","onSelect","filters","fd","fc","fill_color_picker","sc","stroke_color_picker","forEach","filter","js_data_mutator","jsFnMutator","sandboxedEval","metricLabel","metric","label","baseColorScaler","r","g","colorScaler","baseColor","line_column","tooltipContentGenerator","line_type","o","className","name","TooltipRow","setTooltipContent","slice_id","line_width","elevation","multiplier","fp64","commonLayerProps","setControlValue","viewport","width","height","DeckGLPolygon","containerRef","tooltip","current","getDerivedStateFromProps","getLayers","bind","onValuesChange","form_data","timestamps","__timestamp","granularity","time_grain_sqla","start","end","getStep","disabled","getPlaySliderParams","autozoom","fitViewport","flatMap","lastClick","now","Date","doubleClick","splice","toggle_polygons","indexOf","table_filter","buckets","mid","getBuckets","AnimatableDeckGLContainer","ref","aggregation","mapboxApiAccessToken","mapboxApiKey","mapStyle","mapbox_style","onViewportChange","legend_position","legend_format"],"sourceRoot":""}